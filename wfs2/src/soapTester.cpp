/* soapTester.cpp
   Generated by gSOAP 2.8.92 for ws-inspire-wfs2.h

gSOAP XML Web services tools
Copyright (C) 2000-2018, Robert van Engelen, Genivia Inc. All Rights Reserved.
The soapcpp2 tool and its generated software are released under the GPL.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial use license is available from Genivia Inc., contact@genivia.com
--------------------------------------------------------------------------------
*/
/*
   Stand-alone server auto-test code:
   Takes request from standard input or over TCP/IP socket and returns
response to standard output or socket

   Compile:
   cc soapTester.c soapServer.c soapC.c stdsoap2.c

   Command line usage with redirect over stdin/out:
   > ./a.out < SomeTest.req.xml
   > ./a.out 12288 < SomeTest.req.xml
     Note: 12288 = SOAP_XML_INDENT | SOAP_XML_STRICT (see codes in stdsoap2.h)
   Command line usage to start server at port 8080:
   > a.out 12288 8080
*/

#include "soapH.h"
#include "wfssoap.nsmap"

#ifndef SOAP_DEFMAIN
# define SOAP_DEFMAIN main	/* redefine to use your own main() */
#endif

int SOAP_DEFMAIN(int argc, char **argv)
{
	struct soap *soap = soap_new1(argc > 1 ? atoi(argv[1]) : 0);
	if (argc <= 2)
		return soap_serve(soap);
	if (soap_valid_socket(soap_bind(soap, NULL, atoi(argv[2]), 100)))
	{	while (soap_valid_socket(soap_accept(soap)))
		{	if (soap_serve(soap))
				soap_print_fault(soap, stderr);
			soap_destroy(soap);
			soap_end(soap);
		}
	}
	soap_destroy(soap);
	soap_end(soap);
	soap_free(soap);
	return 0;
}


/** Auto-test server operation __f2i_plu__wfs_x002ecreateStoredQuery */
int __f2i_plu__wfs_x002ecreateStoredQuery(struct soap *soap, wfs__CreateStoredQueryType *wfs__CreateStoredQuery, wfs__CreateStoredQueryResponseType &wfs__CreateStoredQueryResponse)
{
	(void)soap; /* appease -Wall -Werror */
	return SOAP_OK;
}


/** Auto-test server operation __f2i_plu__wfs_x002edescribeFeatureType */
int __f2i_plu__wfs_x002edescribeFeatureType(struct soap *soap, wfs__DescribeFeatureTypeType *wfs__DescribeFeatureType, util__DescribeFeatureTypeResponseType &util__DescribeFeatureTypeResponse)
{
	(void)soap; /* appease -Wall -Werror */
	/* Returns incomplete response containing some default data values */
	return SOAP_OK;
}


/** Auto-test server operation __f2i_plu__wfs_x002egetFeature */
int __f2i_plu__wfs_x002egetFeature(struct soap *soap, wfs__GetFeatureType *wfs__GetFeature, wfs__FeatureCollectionType &wfs__FeatureCollection)
{
	(void)soap; /* appease -Wall -Werror */
	/* Returns incomplete response containing some default data values */
	return SOAP_OK;
}


/** Auto-test server operation __f2i_plu__wfs_x002edescribeStoredQueries */
int __f2i_plu__wfs_x002edescribeStoredQueries(struct soap *soap, wfs__DescribeStoredQueriesType *wfs__DescribeStoredQueries, wfs__DescribeStoredQueriesResponseType &wfs__DescribeStoredQueriesResponse)
{
	(void)soap; /* appease -Wall -Werror */
	/* Returns incomplete response containing some default data values */
	return SOAP_OK;
}


/** Auto-test server operation __f2i_plu__wfs_x002elistStoredQueries */
int __f2i_plu__wfs_x002elistStoredQueries(struct soap *soap, wfs__ListStoredQueriesType *wfs__ListStoredQueries, wfs__ListStoredQueriesResponseType &wfs__ListStoredQueriesResponse)
{
	(void)soap; /* appease -Wall -Werror */
	/* Returns incomplete response containing some default data values */
	return SOAP_OK;
}


/** Auto-test server operation __f2i_plu__wfs_x002edropStoredQuery */
int __f2i_plu__wfs_x002edropStoredQuery(struct soap *soap, _wfs__DropStoredQuery *wfs__DropStoredQuery, wfs__ExecutionStatusType &wfs__DropStoredQueryResponse)
{
	(void)soap; /* appease -Wall -Werror */
	/* Returns incomplete response containing some default data values */
	return SOAP_OK;
}


/** Auto-test server operation __f2i_plu__wfs_x002egetCapabilities */
int __f2i_plu__wfs_x002egetCapabilities(struct soap *soap, ows__GetCapabilitiesType *ows__GetCapabilities, wfs__WFS_x005fCapabilitiesType &wfs__WFS_x005fCapabilities)
{
	(void)soap; /* appease -Wall -Werror */
	/* Returns incomplete response containing some default data values */
	return SOAP_OK;
}


/** Auto-test server operation __f2i_plu__wfs_x002egetFeatureWithLock */
int __f2i_plu__wfs_x002egetFeatureWithLock(struct soap *soap, wfs__GetFeatureWithLockType *wfs__GetFeatureWithLock, wfs__FeatureCollectionType &wfs__FeatureCollection)
{
	(void)soap; /* appease -Wall -Werror */
	/* Returns incomplete response containing some default data values */
	return SOAP_OK;
}


/** Auto-test server operation __f2i_plu__wfs_x002egetPropertyValue */
int __f2i_plu__wfs_x002egetPropertyValue(struct soap *soap, wfs__GetPropertyValueType *wfs__GetPropertyValue, wfs__ValueCollectionType &wfs__ValueCollection)
{
	(void)soap; /* appease -Wall -Werror */
	/* Returns incomplete response containing some default data values */
	return SOAP_OK;
}


/** Auto-test server operation __f2i_plu__wfs_x002elockFeature */
int __f2i_plu__wfs_x002elockFeature(struct soap *soap, wfs__LockFeatureType *wfs__LockFeature, wfs__LockFeatureResponseType &wfs__LockFeatureResponse)
{
	(void)soap; /* appease -Wall -Werror */
	/* Returns incomplete response containing some default data values */
	return SOAP_OK;
}


/** Auto-test server operation __f2i_plu__wfs_x002etransaction */
int __f2i_plu__wfs_x002etransaction(struct soap *soap, wfs__TransactionType *wfs__Transaction, wfs__TransactionResponseType &wfs__TransactionResponse)
{
	(void)soap; /* appease -Wall -Werror */
	/* Returns incomplete response containing some default data values */
	return SOAP_OK;
}
