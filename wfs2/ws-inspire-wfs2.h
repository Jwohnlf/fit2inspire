/* ws-inspire-wfs2.h
   Generated by wsdl2h 2.8.92 from ws-inspire-wfs2.wsdl and ../typemap.dat
   2020-04-17 07:31:47 GMT

   DO NOT INCLUDE THIS FILE DIRECTLY INTO YOUR PROJECT BUILDS
   USE THE soapcpp2-GENERATED SOURCE CODE FILES FOR YOUR PROJECT BUILDS

gSOAP XML Web services tools
Copyright (C) 2000-2018, Robert van Engelen, Genivia Inc. All Rights Reserved.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial use license is available from Genivia Inc., contact@genivia.com
--------------------------------------------------------------------------------
*/

/**

@page page_notes Notes

@note HINTS:
 - Run soapcpp2 on ws-inspire-wfs2.h to generate the SOAP/XML processing logic:
   Use soapcpp2 -I to specify paths for #import
   Use soapcpp2 -j to generate improved proxy and server classes.
   Use soapcpp2 -r to generate a report.
 - Edit 'typemap.dat' to control namespace bindings and type mappings:
   It is strongly recommended to customize the names of the namespace prefixes
   generated by wsdl2h. To do so, modify the prefix bindings in the Namespaces
   section below and add the modified lines to 'typemap.dat' to rerun wsdl2h.
 - Run Doxygen (www.doxygen.org) on this file to generate documentation.
 - Use wsdl2h -c to generate pure C code.
 - Use wsdl2h -R to include the REST operations defined by the WSDLs.
 - Use wsdl2h -O3 or -O4 to optimize by removing unused schema components.
 - Use wsdl2h -d to enable DOM support for xsd:any and xsd:anyType.
 - Use wsdl2h -F to simulate struct-type derivation in C (also works in C++).
 - Use wsdl2h -f to generate flat C++ class hierarchy, removes type derivation.
 - Use wsdl2h -g to generate top-level root elements with readers and writers.
 - Use wsdl2h -U to map XML names to C++ Unicode identifiers instead of _xNNNN.
 - Use wsdl2h -u to disable the generation of unions.
 - Use wsdl2h -L to remove this @note and all other @note comments.
 - Use wsdl2h -nname to use name as the base namespace prefix instead of 'ns'.
 - Use wsdl2h -Nname for service prefix and produce multiple service bindings
 - Struct/class members serialized as XML attributes are annotated with a '@'.
 - Struct/class members that have a special role are annotated with a '$'.

@warning
   DO NOT INCLUDE THIS ANNOTATED FILE DIRECTLY IN YOUR PROJECT SOURCE CODE.
   USE THE FILES GENERATED BY soapcpp2 FOR YOUR PROJECT'S SOURCE CODE:
   THE GENERATED soapStub.h FILE CONTAINS THIS CONTENT WITHOUT ANNOTATIONS.

@copyright LICENSE:
@verbatim
--------------------------------------------------------------------------------
gSOAP XML Web services tools
Copyright (C) 2000-2019, Robert van Engelen, Genivia Inc. All Rights Reserved.
The wsdl2h tool and its generated software are released under the GPL.
This software is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
GPL license.

This program is free software; you can redistribute it and/or modify it under
the terms of the GNU General Public License as published by the Free Software
Foundation; either version 2 of the License, or (at your option) any later
version.

This program is distributed in the hope that it will be useful, but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
PARTICULAR PURPOSE. See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with
this program; if not, write to the Free Software Foundation, Inc., 59 Temple
Place, Suite 330, Boston, MA 02111-1307 USA

Author contact information:
engelen@genivia.com / engelen@acm.org

This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial-use license is available from Genivia, Inc., contact@genivia.com
--------------------------------------------------------------------------------
@endverbatim

*/


//gsoapopt c++,w

/******************************************************************************\
 *                                                                            *
 * Definitions                                                                *
 *   http://plu.fit2inspire.eu/plu3                                           *
 *                                                                            *
\******************************************************************************/

/* WSDL Documentation:

This WSDL describes the service implemented by its Fit2Inspire server. Copyright
: OGC. Implementation : jeanloup.delaveau@gmail.com
*/


/******************************************************************************\
 *                                                                            *
 * $CONTAINER                                                                 *
 *   std::vector                                                              *
 *                                                                            *
\******************************************************************************/

#include <vector>
template <class T> class std::vector;

/******************************************************************************\
 *                                                                            *
 * Import                                                                     *
 *                                                                            *
\******************************************************************************/

#import "xsd.h"	// import built-in XSD types.

/******************************************************************************\
 *                                                                            *
 * Schema Namespaces                                                          *
 *                                                                            *
\******************************************************************************/


/* NOTE:

It is strongly recommended to customize the names of the namespace prefixes
generated by wsdl2h. To do so, modify the prefix bindings below and add the
modified lines to 'typemap.dat' then rerun wsdl2h (use wsdl2h -t typemap.dat):

f2i-plu = "http://plu.fit2inspire.eu/plu3"
wfs = "http://www.opengis.net/wfs/2.0"
util = "http://www.opengis.net/wfs-util/2.0"
ows = "http://www.opengis.net/ows/1.1"
idls = "http://inspire.ec.europa.eu/schemas/inspire_dls/1.0"
xlink = "http://www.w3.org/1999/xlink"
fes = "http://www.opengis.net/fes/2.0"
icommon = "http://inspire.ec.europa.eu/schemas/common/1.0"

*/

#define SOAP_NAMESPACE_OF_wfs	"http://www.opengis.net/wfs/2.0"
//gsoap wfs   schema namespace:	http://www.opengis.net/wfs/2.0
//gsoap wfs   schema elementForm:	qualified
//gsoap wfs   schema attributeForm:	unqualified

/// <PRE><BLOCKQUOTE>
///   This file defines the type of the DescribeFeatureType response,
///   because WSDL requires that types be explicitly defined in the
///   types section, perhaps thru imports.
/// </BLOCKQUOTE></PRE>
///
#define SOAP_NAMESPACE_OF_util	"http://www.opengis.net/wfs-util/2.0"
//gsoap util  schema namespace:	http://www.opengis.net/wfs-util/2.0
//gsoap util  schema elementForm:	qualified
//gsoap util  schema attributeForm:	unqualified

/// <PRE><BLOCKQUOTE>
///   This XML Schema Document encodes the Exception Report response to all OWS operations.
///   OWS is an OGC Standard.
///   Copyright (c) 2006,2010 Open Geospatial Consortium.
///   To obtain additional rights of use, visit http://www.opengeospatial.org/legal/ .
/// </BLOCKQUOTE></PRE>
///
#define SOAP_NAMESPACE_OF_ows	"http://www.opengis.net/ows/1.1"
//gsoap ows   schema namespace:	http://www.opengis.net/ows/1.1
//gsoap ows   schema elementForm:	qualified
//gsoap ows   schema attributeForm:	unqualified


/// </BLOCKQUOTE></PRE>
///
#define SOAP_NAMESPACE_OF_idls	"http://inspire.ec.europa.eu/schemas/inspire_dls/1.0"
//gsoap idls  schema namespace:	http://inspire.ec.europa.eu/schemas/inspire_dls/1.0
//gsoap idls  schema elementForm:	qualified
//gsoap idls  schema attributeForm:	unqualified

/// <PRE><BLOCKQUOTE>
///   This schema document provides attribute declarations and
///   attribute group, complex type and simple type definitions which can be used in
///   the construction of user schemas to define the structure of particular linking
///   constructs, e.g.
///   <xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
///   xmlns:xl="http://www.w3.org/1999/xlink">
///   <xs:import namespace="http://www.w3.org/1999/xlink"
///   location="http://www.w3.org/1999/xlink.xsd">
///   <xs:element name="mySimple">
///   <xs:complexType>
///   ...
///   <xs:attributeGroup ref="xl:simpleAttrs"/>
///   ...
///   </xs:complexType>
///   </xs:element>
///   ...
///   </xs:schema>
/// </BLOCKQUOTE></PRE>
///
#define SOAP_NAMESPACE_OF_xlink	"http://www.w3.org/1999/xlink"
//gsoap xlink schema namespace:	http://www.w3.org/1999/xlink
//gsoap xlink schema form:	unqualified

/// <PRE><BLOCKQUOTE>
///   This XML Schema document includes and imports, directly or indirectly,
///   all the XML Schema defined by the Filter Encoding Standard.
///   Filter Encoding is an OGC Standard.
///   Copyright (c) 2010, 2014 Open Geospatial Consortium.
///   To obtain additional rights of use, visit http://www.opengeospatial.org/legal/ .
/// </BLOCKQUOTE></PRE>
///
#define SOAP_NAMESPACE_OF_fes	"http://www.opengis.net/fes/2.0"
//gsoap fes   schema namespace:	http://www.opengis.net/fes/2.0
//gsoap fes   schema elementForm:	qualified
//gsoap fes   schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_icommon	"http://inspire.ec.europa.eu/schemas/common/1.0"
//gsoap icommon schema namespace:	http://inspire.ec.europa.eu/schemas/common/1.0
//gsoap icommon schema elementForm:	qualified
//gsoap icommon schema attributeForm:	unqualified

/******************************************************************************\
 *                                                                            *
 * Built-in Schema Types and Top-Level Elements and Attributes                *
 *                                                                            *
\******************************************************************************/

//  xsd.h: should define type xsd__anyType*

/// Built-in type "xs:QName".
//  (declaration of xsd__QName removed by option -m)

//  xsd.h: typemap override of type xsd__QName with xsd__QName

//  xsd.h: typemap override of type xsd__boolean with bool

/// Built-in type "xs:byte".
//  (declaration of xsd__byte removed by option -m)

//  xsd.h: typemap override of type xsd__byte with xsd__byte

//  xsd.h: typemap override of type xsd__dateTime with time_t

//  xsd.h: typemap override of type xsd__double with double

//  xsd.h: typemap override of type xsd__integer with long

//  xsd.h: typemap override of type xsd__string with std::string

//  xsd.h: should define type xsd__NCName

//  xsd.h: should define type xsd__NMTOKENS

//  xsd.h: should define type xsd__anyURI

//  xsd.h: should define type xsd__language

//  xsd.h: should define type xsd__nonNegativeInteger

//  xsd.h: should define type xsd__positiveInteger

//  xsd.h: should define type xsd__token

//  xsd.h: should define element _xsd__schema

//  xsd.h: should define attribute _xml__lang


/******************************************************************************\
 *                                                                            *
 * Forward Declarations                                                       *
 *                                                                            *
\******************************************************************************/


/** Definitions f2i_plu3 types documentation:

         Convenience schema that defines all common WFS message elements.
      
*/


class wfs__BaseRequestType;

class wfs__QueryPropertyType;

class wfs__QueryType;

class wfs__StoredQueryPropertyType;

class wfs__StoredQueryType;

class wfs__ParameterType;

class wfs__GetCapabilitiesType;

class wfs__WFS_x005fCapabilitiesType;

class wfs__FeatureTypeListType;

class wfs__FeatureTypeType;

class wfs__OutputFormatListType;

class wfs__MetadataURLType;

class wfs__ExtendedDescriptionType;

class wfs__ElementType;

class wfs__ValueListType;

class wfs__DescribeFeatureTypeType;

class wfs__GetPropertyValueType;

class wfs__ValueCollectionType;

class wfs__MemberPropertyType;

class wfs__TupleType;

class wfs__GetFeatureType;

class wfs__GetFeatureWithLockType;

class wfs__FeatureCollectionType;

class wfs__SimpleFeatureCollectionType;

class wfs__EnvelopePropertyType;

class wfs__ListStoredQueriesType;

class wfs__ListStoredQueriesResponseType;

class wfs__StoredQueryListItemType;

class wfs__DescribeStoredQueriesType;

class wfs__DescribeStoredQueriesResponseType;

class wfs__StoredQueryDescriptionType;

class wfs__CreateStoredQueryType;

class wfs__ParameterExpressionType;

class wfs__QueryExpressionTextType;

class wfs__ExecutionStatusType;

class wfs__CreateStoredQueryResponseType;

class wfs__LockFeatureType;

class wfs__LockFeatureResponseType;

class wfs__FeaturesLockedType;

class wfs__FeaturesNotLockedType;

class wfs__TransactionType;

class wfs__AbstractTransactionActionType;

class wfs__InsertType;

class wfs__UpdateType;

class wfs__PropertyType;

class wfs__ReplaceType;

class wfs__DeleteType;

class wfs__NativeType;

class wfs__TransactionResponseType;

class wfs__TransactionSummaryType;

class wfs__ActionResultsType;

class wfs__CreatedOrModifiedFeatureType;

class wfs__EmptyType;

class _wfs__Title;

class _wfs__Abstract;

class _wfs__additionalValues;

class _wfs__truncatedResponse;

class _wfs__PropertyName;

class _wfs__additionalObjects;

class _wfs__DropStoredQuery;

class util__DescribeFeatureTypeResponseType;

class ows__ExceptionType;

class ows__GetResourceByIdType;

class ows__DescriptionType;

class ows__BasicIdentificationType;

class ows__IdentificationType;

class ows__MetadataType;

class ows__BoundingBoxType;

class ows__WGS84BoundingBoxType;

class ows__LanguageStringType;

class ows__KeywordsType;

class ows__CodeType;

class ows__ResponsiblePartyType;

class ows__ResponsiblePartySubsetType;

class ows__ContactType;

class ows__OnlineResourceType;

class ows__TelephoneType;

class ows__AddressType;

class ows__CapabilitiesBaseType;

class ows__GetCapabilitiesType;

class ows__AcceptVersionsType;

class ows__SectionsType;

class ows__AcceptFormatsType;

class ows__RequestMethodType;

class ows__DomainType;

class ows__UnNamedDomainType;

class ows__ValueType;

class ows__RangeType;

class ows__DomainMetadataType;

class ows__ContentsBaseType;

class ows__DatasetDescriptionSummaryBaseType;

class ows__ServiceReferenceType;

class ows__AbstractReferenceBaseType;

class ows__ReferenceType;

class ows__ReferenceGroupType;

class ows__ManifestType;

class _ows__ExceptionReport;

/// @brief Top-level root element "http://www.opengis.net/ows/1.1":Resource.
typedef _XML _ows__Resource;

class _ows__ServiceIdentification;

class _ows__ServiceProvider;

class _ows__OperationsMetadata;

class _ows__Operation;

class _ows__DCP;

class _ows__HTTP;

class _ows__AnyValue;

class _ows__NoValues;

class _ows__ValuesReference;

class _ows__AllowedValues;

class idls__ExtendedCapabilitiesType;

class xlink__simple;

class xlink__extended;

class xlink__titleEltType;

class xlink__resourceType;

class xlink__locatorType;

class xlink__arcType;

class fes__AbstractQueryExpressionType;

class fes__AbstractAdhocQueryExpressionType;

class fes__AbstractProjectionClauseType;

class fes__AbstractSelectionClauseType;

class fes__AbstractSortingClauseType;

class fes__FilterType;

class fes__ComparisonOpsType;

class fes__SpatialOpsType;

class fes__TemporalOpsType;

class fes__LogicOpsType;

class fes__ExtensionOpsType;

class fes__AbstractIdType;

class fes__ResourceIdType;

class fes__BinaryComparisonOpType;

class fes__PropertyIsLikeType;

class fes__PropertyIsNullType;

class fes__PropertyIsNilType;

class fes__PropertyIsBetweenType;

class fes__LowerBoundaryType;

class fes__UpperBoundaryType;

class fes__BinarySpatialOpType;

class fes__BinaryTemporalOpType;

class fes__BBOXType;

class fes__DistanceBufferType;

class fes__BinaryLogicOpType;

class fes__UnaryLogicOpType;

class fes__MeasureType;

class fes__FunctionType;

class fes__LiteralType;

class fes__ConformanceType;

class fes__Id_x005fCapabilitiesType;

class fes__ResourceIdentifierType;

class fes__Scalar_x005fCapabilitiesType;

class fes__ComparisonOperatorsType;

class fes__ComparisonOperatorType;

class fes__AvailableFunctionsType;

class fes__AvailableFunctionType;

class fes__ArgumentsType;

class fes__ArgumentType;

class fes__Spatial_x005fCapabilitiesType;

class fes__GeometryOperandsType;

class fes__SpatialOperatorsType;

class fes__SpatialOperatorType;

class fes__Temporal_x005fCapabilitiesType;

class fes__TemporalOperandsType;

class fes__TemporalOperatorsType;

class fes__TemporalOperatorType;

class fes__Extended_x005fCapabilitiesType;

class fes__AdditionalOperatorsType;

class fes__ExtensionOperatorType;

class fes__SortByType;

class fes__SortPropertyType;

class _fes__Filter_x005fCapabilities;

class _fes__LogicalOperators;

class icommon__resource;

class icommon__data;

class icommon__dataset;

class icommon__series;

class icommon__service_x005fext;

class icommon__service;

class icommon__metadataPointOfContact;

class icommon__responsibleOrganisation;

class icommon__citation;

class icommon__citationConformity;

class icommon__conformity;

class icommon__originatingControlledVocabulary;

class icommon__originatingControlledVocabularyGemetInspireThemes;

class icommon__originatingControlledVocabularyMD;

class icommon__temporalReference;

class icommon__temporalExtent;

class icommon__keyword;

class icommon__classificationOfSpatialDataService;

class icommon__resourceLocatorType;

class icommon__languageElement;

class icommon__languageElementISO6392B;

class icommon__languageElementIETF;

class icommon__geographicBoundingBox;

class icommon__spatialResolution;

class icommon__uniqueResourceIdentifier;

class icommon__inspireTheme;

class icommon__ExtendedCapabilitiesType;

class icommon__supportedLanguagesType;

class icommon__discoveryService_x005fext;

class icommon__discoveryService;

class icommon__layers;

class icommon__viewService_x005fext;

class icommon__viewService;

class icommon__downloadService_x005fext;

class icommon__downloadService;

class icommon__transformationService_x005fext;

class icommon__transformationService;

class icommon__invokeService_x005fext;

class icommon__invokeService;

class icommon__otherService_x005fext;

class icommon__otherService;

class icommon__inspireTheme_x005fbul;

class icommon__resLocInspireInteroperabilityRegulation_x005fbul;

class icommon__citationInspireInteroperabilityRegulation_x005fbul;

class icommon__inspireTheme_x005fcze;

class icommon__resLocInspireInteroperabilityRegulation_x005fcze;

class icommon__citationInspireInteroperabilityRegulation_x005fcze;

class icommon__inspireTheme_x005fdan;

class icommon__resLocInspireInteroperabilityRegulation_x005fdan;

class icommon__citationInspireInteroperabilityRegulation_x005fdan;

class icommon__inspireTheme_x005fdut;

class icommon__resLocInspireInteroperabilityRegulation_x005fdut;

class icommon__citationInspireInteroperabilityRegulation_x005fdut;

class icommon__inspireTheme_x005feng;

class icommon__resLocGEMETInspireThemes_x005feng;

class icommon__citationGEMETInspireThemes_x005feng;

class icommon__resLocInspireInteroperabilityRegulation_x005feng;

class icommon__citationInspireInteroperabilityRegulation_x005feng;

class icommon__inspireTheme_x005fest;

class icommon__resLocInspireInteroperabilityRegulation_x005fest;

class icommon__citationInspireInteroperabilityRegulation_x005fest;

class icommon__inspireTheme_x005ffin;

class icommon__resLocInspireInteroperabilityRegulation_x005ffin;

class icommon__citationInspireInteroperabilityRegulation_x005ffin;

class icommon__inspireTheme_x005ffre;

class icommon__resLocInspireInteroperabilityRegulation_x005ffre;

class icommon__citationInspireInteroperabilityRegulation_x005ffre;

class icommon__inspireTheme_x005fger;

class icommon__resLocInspireInteroperabilityRegulation_x005fger;

class icommon__citationInspireInteroperabilityRegulation_x005fger;

class icommon__inspireTheme_x005fgle;

class icommon__resLocInspireInteroperabilityRegulation_x005fgle;

class icommon__citationInspireInteroperabilityRegulation_x005fgle;

class icommon__inspireTheme_x005fgre;

class icommon__resLocInspireInteroperabilityRegulation_x005fgre;

class icommon__citationInspireInteroperabilityRegulation_x005fgre;

class icommon__inspireTheme_x005fhun;

class icommon__resLocInspireInteroperabilityRegulation_x005fhun;

class icommon__citationInspireInteroperabilityRegulation_x005fhun;

class icommon__inspireTheme_x005fita;

class icommon__resLocInspireInteroperabilityRegulation_x005fita;

class icommon__citationInspireInteroperabilityRegulation_x005fita;

class icommon__inspireTheme_x005flav;

class icommon__resLocInspireInteroperabilityRegulation_x005flav;

class icommon__citationInspireInteroperabilityRegulation_x005flav;

class icommon__inspireTheme_x005flit;

class icommon__resLocInspireInteroperabilityRegulation_x005flit;

class icommon__citationInspireInteroperabilityRegulation_x005flit;

class icommon__inspireTheme_x005fmlt;

class icommon__resLocInspireInteroperabilityRegulation_x005fmlt;

class icommon__citationInspireInteroperabilityRegulation_x005fmlt;

class icommon__inspireTheme_x005fpol;

class icommon__resLocInspireInteroperabilityRegulation_x005fpol;

class icommon__citationInspireInteroperabilityRegulation_x005fpol;

class icommon__inspireTheme_x005fpor;

class icommon__resLocInspireInteroperabilityRegulation_x005fpor;

class icommon__citationInspireInteroperabilityRegulation_x005fpor;

class icommon__inspireTheme_x005frum;

class icommon__resLocInspireInteroperabilityRegulation_x005frum;

class icommon__citationInspireInteroperabilityRegulation_x005frum;

class icommon__inspireTheme_x005fslo;

class icommon__resLocInspireInteroperabilityRegulation_x005fslo;

class icommon__citationInspireInteroperabilityRegulation_x005fslo;

class icommon__inspireTheme_x005fslv;

class icommon__resLocInspireInteroperabilityRegulation_x005fslv;

class icommon__citationInspireInteroperabilityRegulation_x005fslv;

class icommon__inspireTheme_x005fspa;

class icommon__citationInspireInteroperabilityRegulation_x005fspa;

class icommon__resLocInspireInteroperabilityRegulation_x005fspa;

class icommon__inspireTheme_x005fswe;

class icommon__resLocInspireInteroperabilityRegulation_x005fswe;

class icommon__citationInspireInteroperabilityRegulation_x005fswe;

class _icommon__IntervalOfDates;


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.opengis.net/wfs/2.0                                           *
 *                                                                            *
\******************************************************************************/

/// @brief Union of values from member types "xsd:positiveInteger wfs:StarStringType".
typedef std::string wfs__positiveIntegerWithStar;

/// @brief Union of values from type "xs:string".
/// @brief Union of values from type "xs:nonNegativeInteger".
typedef std::string wfs__nonNegativeIntegerOrUnknown;

/// @brief Union of values from type "xs:string".
/// @brief Union of values from type "xs:string".
typedef std::string wfs__StateValueType;

/// @brief "http://www.opengis.net/wfs/2.0":ReturnFeatureTypesListType is a simpleType containing a whitespace separated list of values of type xs:QName.
///
typedef xsd__QName wfs__ReturnFeatureTypesListType;


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.opengis.net/wfs-util/2.0                                      *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.opengis.net/ows/1.1                                           *
 *                                                                            *
\******************************************************************************/

/// @brief "http://www.opengis.net/ows/1.1":PositionType is a simpleType containing a whitespace separated list of values of type xs:double.
///
/// <PRE><BLOCKQUOTE>
///   Position instances hold the coordinates of a position in a coordinate reference system (CRS) referenced by the related "crs" attribute or elsewhere. For an angular coordinate axis that is physically continuous for multiple revolutions, but whose recorded values can be discontinuous, special conditions apply when the bounding box is continuous across the value discontinuity:
///   a) If the bounding box is continuous clear around this angular axis, then ordinate values of minus and plus infinity shall be used.
///   b) If the bounding box is continuous across the value discontinuity but is not continuous clear around this angular axis, then some non-normal value can be used if specified for a specific OWS use of the BoundingBoxType. For more information, see Subclauses 10.2.5 and C.13.
/// </BLOCKQUOTE></PRE>
///
/// <PRE><BLOCKQUOTE>
///   This type is adapted from DirectPositionType and doubleList of GML 3.1. The adaptations include omission of all the attributes, since the needed information is included in the BoundingBoxType.
/// </BLOCKQUOTE></PRE>
///
typedef std::string ows__PositionType;


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://inspire.ec.europa.eu/schemas/inspire_dls/1.0                      *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.w3.org/1999/xlink                                             *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.opengis.net/fes/2.0                                           *
 *                                                                            *
\******************************************************************************/

/// @brief "http://www.opengis.net/fes/2.0":TypeNamesListType is a simpleType containing a whitespace separated list of values of type "http://www.opengis.net/fes/2.0":TypeNamesType.
///
typedef std::string fes__TypeNamesListType;

/// @brief Union of values from member types "fes:SchemaElement xsd:QName".
typedef std::string fes__TypeNamesType;

/// @brief "http://www.opengis.net/fes/2.0":AliasesType is a simpleType containing a whitespace separated list of values of type xs:NCName.
///
typedef std::string fes__AliasesType;

/// @brief Union of values from member types "fes:VersionActionTokens xsd:positiveInteger xsd:dateTime".
typedef std::string fes__VersionType;

/// @brief Union of values from member types "fes:UomSymbol fes:UomURI".
typedef std::string fes__UomIdentifier;

/// @brief Union of values from type "xs:string".
/// @brief Union of values from type "xs:string".
typedef std::string fes__ComparisonOperatorNameType;

/// @brief Union of values from type "xs:string".
/// @brief Union of values from type "xs:string".
typedef std::string fes__SpatialOperatorNameType;

/// @brief Union of values from type "xs:string".
/// @brief Union of values from type "xs:string".
typedef std::string fes__TemporalOperatorNameType;


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://inspire.ec.europa.eu/schemas/common/1.0                           *
 *                                                                            *
\******************************************************************************/

/// @brief "http://www.opengis.net/wfs/2.0":VersionStringType is a simpleType restriction of type xs:string.
///
/// Content pattern is "2\\.0\\.\\d+".
typedef std::string wfs__VersionStringType "2\\.0\\.\\d+";

/// @brief Class wrapper for type wfs__VersionStringType derived from xsd__anyType.
///
/// @note Use option -P to remove this class.
class wfs__VersionStringType__ : public xsd__anyType
{ public:
    wfs__VersionStringType               __item;                       
};

/// @brief "http://www.opengis.net/wfs/2.0":ResultTypeType is a simpleType restriction of type xs:string.
///
/// @note The enum values are prefixed with "wfs__ResultTypeType__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum wfs__ResultTypeType
{
	wfs__ResultTypeType__results,	///< xs:string value="results"
	wfs__ResultTypeType__hits,	///< xs:string value="hits"
};

/// @brief Class wrapper for type enum wfs__ResultTypeType derived from xsd__anyType.
///
/// @note Use option -P to remove this class.
class wfs__ResultTypeType_ : public xsd__anyType
{ public:
    enum wfs__ResultTypeType             __item;                       
};

/// @brief "http://www.opengis.net/wfs/2.0":ResolveValueType is a simpleType restriction of type xs:string.
///
/// @note The enum values are prefixed with "wfs__ResolveValueType__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum wfs__ResolveValueType
{
	wfs__ResolveValueType__local,	///< xs:string value="local"
	wfs__ResolveValueType__remote,	///< xs:string value="remote"
	wfs__ResolveValueType__all,	///< xs:string value="all"
	wfs__ResolveValueType__none,	///< xs:string value="none"
};

/// @brief Class wrapper for type enum wfs__ResolveValueType derived from xsd__anyType.
///
/// @note Use option -P to remove this class.
class wfs__ResolveValueType_ : public xsd__anyType
{ public:
    enum wfs__ResolveValueType           __item;                       
};

/// @brief "http://www.opengis.net/wfs/2.0":StarStringType is a simpleType restriction of type xs:string.
///
/// @note The enum values are prefixed with "wfs__StarStringType__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum wfs__StarStringType
{
	wfs__StarStringType___x002a,	///< xs:string value="*"
};

/// @brief Class wrapper for type enum wfs__StarStringType derived from xsd__anyType.
///
/// @note Use option -P to remove this class.
class wfs__StarStringType_ : public xsd__anyType
{ public:
    enum wfs__StarStringType             __item;                       
};

/// @brief "http://www.opengis.net/wfs/2.0":AllSomeType is a simpleType restriction of type xs:string.
///
/// @note The enum values are prefixed with "wfs__AllSomeType__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum wfs__AllSomeType
{
	wfs__AllSomeType__ALL,	///< xs:string value="ALL"
	wfs__AllSomeType__SOME,	///< xs:string value="SOME"
};

/// @brief Class wrapper for type enum wfs__AllSomeType derived from xsd__anyType.
///
/// @note Use option -P to remove this class.
class wfs__AllSomeType_ : public xsd__anyType
{ public:
    enum wfs__AllSomeType                __item;                       
};

/// @brief "http://www.opengis.net/wfs/2.0":UpdateActionType is a simpleType restriction of type xs:string.
///
/// @note The enum values are prefixed with "wfs__UpdateActionType__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum wfs__UpdateActionType
{
	wfs__UpdateActionType__replace,	///< xs:string value="replace"
	wfs__UpdateActionType__insertBefore,	///< xs:string value="insertBefore"
	wfs__UpdateActionType__insertAfter,	///< xs:string value="insertAfter"
	wfs__UpdateActionType__remove,	///< xs:string value="remove"
};

/// @brief Class wrapper for type enum wfs__UpdateActionType derived from xsd__anyType.
///
/// @note Use option -P to remove this class.
class wfs__UpdateActionType_ : public xsd__anyType
{ public:
    enum wfs__UpdateActionType           __item;                       
};


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.opengis.net/wfs-util/2.0                                      *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.opengis.net/ows/1.1                                           *
 *                                                                            *
\******************************************************************************/

/// @brief "http://www.opengis.net/ows/1.1":MimeType is a simpleType restriction of type xs:string.
///
/// <PRE><BLOCKQUOTE>
///   XML encoded identifier of a standard MIME type, possibly a parameterized MIME type.
/// </BLOCKQUOTE></PRE>
///
/// Content pattern is "(application|audio|image|text|video|message|multipart|model)/.+(;\\s*.+=.+)*".
typedef std::string ows__MimeType "(application|audio|image|text|video|message|multipart|model)/.+(;\\s*.+=.+)*";

/// @brief Class wrapper for type ows__MimeType derived from xsd__anyType.
///
/// @note Use option -P to remove this class.
class ows__MimeType__ : public xsd__anyType
{ public:
    ows__MimeType                        __item;                       
};

/// @brief "http://www.opengis.net/ows/1.1":VersionType is a simpleType restriction of type xs:string.
///
/// <PRE><BLOCKQUOTE>
///   Specification version for OWS operation. The string value shall contain one x.y.z "version" value (e.g., "2.1.3"). A version number shall contain three non-negative integers separated by decimal points, in the form "x.y.z". The integers y and z shall not exceed 99. Each version shall be for the Implementation Specification (document) and the associated XML Schemas to which requested operations will conform. An Implementation Specification version normally specifies XML Schemas against which an XML encoded operation response must conform and should be validated. See Version negotiation subclause for more information.
/// </BLOCKQUOTE></PRE>
///
/// Content pattern is "\\d+\\.\\d?\\d\\.\\d?\\d".
typedef std::string ows__VersionType "\\d+\\.\\d?\\d\\.\\d?\\d";

/// @brief Class wrapper for type ows__VersionType derived from xsd__anyType.
///
/// @note Use option -P to remove this class.
class ows__VersionType__ : public xsd__anyType
{ public:
    ows__VersionType                     __item;                       
};

/// @brief "http://www.opengis.net/ows/1.1":PositionType2D is a simpleType restriction of list "http://www.opengis.net/ows/1.1":PositionType of length 2.
///
typedef ows__PositionType ows__PositionType2D;

/// @brief "http://www.opengis.net/ows/1.1":ServiceType is a simpleType restriction of type xs:string.
///
/// <PRE><BLOCKQUOTE>
///   Service type identifier, where the string value is the OWS type abbreviation, such as "WMS" or "WFS".
/// </BLOCKQUOTE></PRE>
///
typedef std::string ows__ServiceType;

/// @brief Class wrapper for type ows__ServiceType derived from xsd__anyType.
///
/// @note Use option -P to remove this class.
class ows__ServiceType__ : public xsd__anyType
{ public:
    ows__ServiceType                     __item;                       
};

/// @brief "http://www.opengis.net/ows/1.1":UpdateSequenceType is a simpleType restriction of type xs:string.
///
/// <PRE><BLOCKQUOTE>
///   Service metadata document version, having values that are "increased" whenever any change is made in service metadata document. Values are selected by each server, and are always opaque to clients. See updateSequence parameter use subclause for more information.
/// </BLOCKQUOTE></PRE>
///
typedef std::string ows__UpdateSequenceType;

/// @brief Class wrapper for type ows__UpdateSequenceType derived from xsd__anyType.
///
/// @note Use option -P to remove this class.
class ows__UpdateSequenceType__ : public xsd__anyType
{ public:
    ows__UpdateSequenceType              __item;                       
};

/// <PRE><BLOCKQUOTE>
///   Specifies which of the minimum and maximum values are included in the range. Note that plus and minus infinity are considered closed bounds.
/// </BLOCKQUOTE></PRE>
///
/// @brief "http://www.opengis.net/ows/1.1":rangeClosure is a simpleType restriction of type xs:NMTOKENS.
///
/// @note The enum values are prefixed with "_ows__rangeClosure__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum _ows__rangeClosure
{
/// <PRE><BLOCKQUOTE>
///   The specified minimum and maximum values are included in this range.
/// </BLOCKQUOTE></PRE>
///
	_ows__rangeClosure__closed,	///< xs:NMTOKENS value="closed"
/// <PRE><BLOCKQUOTE>
///   The specified minimum and maximum values are NOT included in this range.
/// </BLOCKQUOTE></PRE>
///
	_ows__rangeClosure__open,	///< xs:NMTOKENS value="open"
/// <PRE><BLOCKQUOTE>
///   The specified minimum value is NOT included in this range, and the specified maximum value IS included in this range.
/// </BLOCKQUOTE></PRE>
///
	_ows__rangeClosure__open_closed,	///< xs:NMTOKENS value="open-closed"
/// <PRE><BLOCKQUOTE>
///   The specified minimum value IS included in this range, and the specified maximum value is NOT included in this range.
/// </BLOCKQUOTE></PRE>
///
	_ows__rangeClosure__closed_open,	///< xs:NMTOKENS value="closed-open"
};


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://inspire.ec.europa.eu/schemas/inspire_dls/1.0                      *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.w3.org/1999/xlink                                             *
 *                                                                            *
\******************************************************************************/

/// @brief "http://www.w3.org/1999/xlink":typeType is a simpleType restriction of type xs:token.
///
/// @note The enum values are prefixed with "xlink__typeType__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum xlink__typeType
{
	xlink__typeType__simple,	///< xs:token value="simple"
	xlink__typeType__extended,	///< xs:token value="extended"
	xlink__typeType__title,	///< xs:token value="title"
	xlink__typeType__resource,	///< xs:token value="resource"
	xlink__typeType__locator,	///< xs:token value="locator"
	xlink__typeType__arc,	///< xs:token value="arc"
};

/// @brief Class wrapper for type enum xlink__typeType derived from xsd__anyType.
///
/// @note Use option -P to remove this class.
class xlink__typeType_ : public xsd__anyType
{ public:
    enum xlink__typeType                 __item;                       
};

/// @brief "http://www.w3.org/1999/xlink":hrefType is a simpleType restriction of type xs:anyURI.
///
typedef xsd__anyURI xlink__hrefType;

/// @brief Class wrapper for type xlink__hrefType derived from xsd__anyType.
///
/// @note Use option -P to remove this class.
class xlink__hrefType__ : public xsd__anyType
{ public:
    xlink__hrefType                      __item;                       
};

/// @brief "http://www.w3.org/1999/xlink":roleType is a simpleType restriction of type xs:anyURI.
///
/// Length of this content is 1 to unbounded.
typedef xsd__anyURI xlink__roleType 1;

/// @brief Class wrapper for type xlink__roleType derived from xsd__anyType.
///
/// @note Use option -P to remove this class.
class xlink__roleType__ : public xsd__anyType
{ public:
    xlink__roleType                      __item;                       
};

/// @brief "http://www.w3.org/1999/xlink":arcroleType is a simpleType restriction of type xs:anyURI.
///
/// Length of this content is 1 to unbounded.
typedef xsd__anyURI xlink__arcroleType 1;

/// @brief Class wrapper for type xlink__arcroleType derived from xsd__anyType.
///
/// @note Use option -P to remove this class.
class xlink__arcroleType__ : public xsd__anyType
{ public:
    xlink__arcroleType                   __item;                       
};

/// @brief "http://www.w3.org/1999/xlink":titleAttrType is a simpleType restriction of type xs:string.
///
typedef std::string xlink__titleAttrType;

/// @brief Class wrapper for type xlink__titleAttrType derived from xsd__anyType.
///
/// @note Use option -P to remove this class.
class xlink__titleAttrType__ : public xsd__anyType
{ public:
    xlink__titleAttrType                 __item;                       
};

/// @brief "http://www.w3.org/1999/xlink":showType is a simpleType restriction of type xs:token.
///
/// @note The enum values are prefixed with "xlink__showType__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum xlink__showType
{
	xlink__showType__new_,	///< xs:token value="new"
	xlink__showType__replace,	///< xs:token value="replace"
	xlink__showType__embed,	///< xs:token value="embed"
	xlink__showType__other,	///< xs:token value="other"
	xlink__showType__none,	///< xs:token value="none"
};

/// @brief Class wrapper for type enum xlink__showType derived from xsd__anyType.
///
/// @note Use option -P to remove this class.
class xlink__showType_ : public xsd__anyType
{ public:
    enum xlink__showType                 __item;                       
};

/// @brief "http://www.w3.org/1999/xlink":actuateType is a simpleType restriction of type xs:token.
///
/// @note The enum values are prefixed with "xlink__actuateType__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum xlink__actuateType
{
	xlink__actuateType__onLoad,	///< xs:token value="onLoad"
	xlink__actuateType__onRequest,	///< xs:token value="onRequest"
	xlink__actuateType__other,	///< xs:token value="other"
	xlink__actuateType__none,	///< xs:token value="none"
};

/// @brief Class wrapper for type enum xlink__actuateType derived from xsd__anyType.
///
/// @note Use option -P to remove this class.
class xlink__actuateType_ : public xsd__anyType
{ public:
    enum xlink__actuateType              __item;                       
};

/// @brief "http://www.w3.org/1999/xlink":labelType is a simpleType restriction of type xs:NCName.
///
typedef xsd__NCName xlink__labelType;

/// @brief Class wrapper for type xlink__labelType derived from xsd__anyType.
///
/// @note Use option -P to remove this class.
class xlink__labelType__ : public xsd__anyType
{ public:
    xlink__labelType                     __item;                       
};

/// @brief "http://www.w3.org/1999/xlink":fromType is a simpleType restriction of type xs:NCName.
///
typedef xsd__NCName xlink__fromType;

/// @brief Class wrapper for type xlink__fromType derived from xsd__anyType.
///
/// @note Use option -P to remove this class.
class xlink__fromType__ : public xsd__anyType
{ public:
    xlink__fromType                      __item;                       
};

/// @brief "http://www.w3.org/1999/xlink":toType is a simpleType restriction of type xs:NCName.
///
typedef xsd__NCName xlink__toType;

/// @brief Class wrapper for type xlink__toType derived from xsd__anyType.
///
/// @note Use option -P to remove this class.
class xlink__toType__ : public xsd__anyType
{ public:
    xlink__toType                        __item;                       
};


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.opengis.net/fes/2.0                                           *
 *                                                                            *
\******************************************************************************/

/// @brief "http://www.opengis.net/fes/2.0":SchemaElement is a simpleType restriction of type xs:string.
///
/// Content pattern is "schema\\-element\\(.+\\)".
typedef std::string fes__SchemaElement "schema\\-element\\(.+\\)";

/// @brief Class wrapper for type fes__SchemaElement derived from xsd__anyType.
///
/// @note Use option -P to remove this class.
class fes__SchemaElement__ : public xsd__anyType
{ public:
    fes__SchemaElement                   __item;                       
};

/// @brief "http://www.opengis.net/fes/2.0":VersionActionTokens is a simpleType restriction of type xs:string.
///
/// @note The enum values are prefixed with "fes__VersionActionTokens__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum fes__VersionActionTokens
{
	fes__VersionActionTokens__FIRST,	///< xs:string value="FIRST"
	fes__VersionActionTokens__LAST,	///< xs:string value="LAST"
	fes__VersionActionTokens__PREVIOUS,	///< xs:string value="PREVIOUS"
	fes__VersionActionTokens__NEXT,	///< xs:string value="NEXT"
	fes__VersionActionTokens__ALL,	///< xs:string value="ALL"
};

/// @brief Class wrapper for type enum fes__VersionActionTokens derived from xsd__anyType.
///
/// @note Use option -P to remove this class.
class fes__VersionActionTokens_ : public xsd__anyType
{ public:
    enum fes__VersionActionTokens        __item;                       
};

/// @brief "http://www.opengis.net/fes/2.0":MatchActionType is a simpleType restriction of type xs:string.
///
/// @note The enum values are prefixed with "fes__MatchActionType__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum fes__MatchActionType
{
	fes__MatchActionType__All,	///< xs:string value="All"
	fes__MatchActionType__Any,	///< xs:string value="Any"
	fes__MatchActionType__One,	///< xs:string value="One"
};

/// @brief Class wrapper for type enum fes__MatchActionType derived from xsd__anyType.
///
/// @note Use option -P to remove this class.
class fes__MatchActionType_ : public xsd__anyType
{ public:
    enum fes__MatchActionType            __item;                       
};

/// @brief "http://www.opengis.net/fes/2.0":UomSymbol is a simpleType restriction of type xs:string.
///
/// Content pattern is "[^: \\n\\r\\t]+".
typedef std::string fes__UomSymbol "[^: \\n\\r\\t]+";

/// @brief Class wrapper for type fes__UomSymbol derived from xsd__anyType.
///
/// @note Use option -P to remove this class.
class fes__UomSymbol__ : public xsd__anyType
{ public:
    fes__UomSymbol                       __item;                       
};

/// @brief "http://www.opengis.net/fes/2.0":UomURI is a simpleType restriction of type xs:anyURI.
///
/// Content pattern is "([a-zA-Z][a-zA-Z0-9\\-\\+\\.]*:|\\.\\./|\\./|#).*".
typedef xsd__anyURI fes__UomURI "([a-zA-Z][a-zA-Z0-9\\-\\+\\.]*:|\\.\\./|\\./|#).*";

/// @brief Class wrapper for type fes__UomURI derived from xsd__anyType.
///
/// @note Use option -P to remove this class.
class fes__UomURI__ : public xsd__anyType
{ public:
    fes__UomURI                          __item;                       
};

/// @brief "http://www.opengis.net/fes/2.0":SortOrderType is a simpleType restriction of type xs:string.
///
/// @note The enum values are prefixed with "fes__SortOrderType__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum fes__SortOrderType
{
	fes__SortOrderType__DESC,	///< xs:string value="DESC"
	fes__SortOrderType__ASC,	///< xs:string value="ASC"
};

/// @brief Class wrapper for type enum fes__SortOrderType derived from xsd__anyType.
///
/// @note Use option -P to remove this class.
class fes__SortOrderType_ : public xsd__anyType
{ public:
    enum fes__SortOrderType              __item;                       
};


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://inspire.ec.europa.eu/schemas/common/1.0                           *
 *                                                                            *
\******************************************************************************/

/// @brief "http://inspire.ec.europa.eu/schemas/common/1.0":topicCategory is a simpleType restriction of type xs:string.
///
/// @note The enum values are prefixed with "icommon__topicCategory__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum icommon__topicCategory
{
	icommon__topicCategory__farming,	///< xs:string value="farming"
	icommon__topicCategory__biota,	///< xs:string value="biota"
	icommon__topicCategory__boundaries,	///< xs:string value="boundaries"
	icommon__topicCategory__climatologyMeteorologyAtmosphere,	///< xs:string value="climatologyMeteorologyAtmosphere"
	icommon__topicCategory__economy,	///< xs:string value="economy"
	icommon__topicCategory__elevation,	///< xs:string value="elevation"
	icommon__topicCategory__environment,	///< xs:string value="environment"
	icommon__topicCategory__geoscientificInformation,	///< xs:string value="geoscientificInformation"
	icommon__topicCategory__health,	///< xs:string value="health"
	icommon__topicCategory__imageryBaseMapsEarthCover,	///< xs:string value="imageryBaseMapsEarthCover"
	icommon__topicCategory__intelligenceMilitary,	///< xs:string value="intelligenceMilitary"
	icommon__topicCategory__inlandWaters,	///< xs:string value="inlandWaters"
	icommon__topicCategory__location,	///< xs:string value="location"
	icommon__topicCategory__oceans,	///< xs:string value="oceans"
	icommon__topicCategory__planningCadastre,	///< xs:string value="planningCadastre"
	icommon__topicCategory__society,	///< xs:string value="society"
	icommon__topicCategory__structure,	///< xs:string value="structure"
	icommon__topicCategory__transportation,	///< xs:string value="transportation"
	icommon__topicCategory__utilitiesCommunication,	///< xs:string value="utilitiesCommunication"
};

/// @brief Class wrapper for type enum icommon__topicCategory derived from xsd__anyType.
///
/// @note Use option -P to remove this class.
class icommon__topicCategory_ : public xsd__anyType
{ public:
    enum icommon__topicCategory          __item;                       
};

/// @brief "http://inspire.ec.europa.eu/schemas/common/1.0":notEmptyString is a simpleType restriction of type xs:string.
///
/// Length of this content is 1 to unbounded.
typedef std::string icommon__notEmptyString 1;

/// @brief Class wrapper for type icommon__notEmptyString derived from xsd__anyType.
///
/// @note Use option -P to remove this class.
class icommon__notEmptyString__ : public xsd__anyType
{ public:
    icommon__notEmptyString              __item;                       
};

/// @brief "http://inspire.ec.europa.eu/schemas/common/1.0":mediaType is a simpleType restriction of type xs:string.
///
/// <PRE><BLOCKQUOTE>
///   Draft implementation to be refined
/// </BLOCKQUOTE></PRE>
///
/// @note The enum values are prefixed with "icommon__mediaType__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum icommon__mediaType
{
	icommon__mediaType__text_x002fplain,	///< xs:string value="text/plain"
	icommon__mediaType__text_x002fhtml,	///< xs:string value="text/html"
	icommon__mediaType__text_x002fxml,	///< xs:string value="text/xml"
	icommon__mediaType__application_x002fxml,	///< xs:string value="application/xml"
	icommon__mediaType__application_x002fjson,	///< xs:string value="application/json"
	icommon__mediaType__application_x002fpdf,	///< xs:string value="application/pdf"
	icommon__mediaType__application_x002frdf_x002bxml,	///< xs:string value="application/rdf+xml"
	icommon__mediaType__application_x002fsoap_x002bxml,	///< xs:string value="application/soap+xml"
/// <PRE><BLOCKQUOTE>
///   Official mime type for INSPIRE Resources
/// </BLOCKQUOTE></PRE>
///
	icommon__mediaType__application_x002fvnd_x002eeu_x002eeuropa_x002eec_x002einspire_x002eresource_x002bxml,	///< xs:string value="application/vnd.eu.europa.ec.inspire.resource+xml"
	icommon__mediaType__application_x002fvnd_x002egoogle_earth_x002ekml_x002bxml,	///< xs:string value="application/vnd.google-earth.kml+xml"
	icommon__mediaType__application_x002fvnd_x002egoogle_earth_x002ekml,	///< xs:string value="application/vnd.google-earth.kml"
	icommon__mediaType__application_x002fvnd_x002egoogle_earth_x002ekmx,	///< xs:string value="application/vnd.google-earth.kmx"
	icommon__mediaType__application_x002fvnd_x002emsword,	///< xs:string value="application/vnd.msword"
	icommon__mediaType__application_x002fvnd_x002ems_excel,	///< xs:string value="application/vnd.ms-excel"
	icommon__mediaType__application_x002fvnd_x002ems_powerpoint,	///< xs:string value="application/vnd.ms-powerpoint"
	icommon__mediaType__application_x002fvnd_x002eoasis_x002eopendocument_x002etext,	///< xs:string value="application/vnd.oasis.opendocument.text"
	icommon__mediaType__application_x002fvnd_x002eoasis_x002eopendocument_x002espreadsheet,	///< xs:string value="application/vnd.oasis.opendocument.spreadsheet"
	icommon__mediaType__application_x002fvnd_x002eoasis_x002eopendocument_x002epresentation,	///< xs:string value="application/vnd.oasis.opendocument.presentation"
	icommon__mediaType__application_x002fvnd_x002eoasis_x002eopendocument_x002egraphics,	///< xs:string value="application/vnd.oasis.opendocument.graphics"
/// <PRE><BLOCKQUOTE>
///   Official mime type for OGC GML currently in the registration process of IANA
/// </BLOCKQUOTE></PRE>
///
	icommon__mediaType__application_x002fgml_x002bxml,	///< xs:string value="application/gml+xml"
/// <PRE><BLOCKQUOTE>
///   Unofficial mime type for OGC WMS
/// </BLOCKQUOTE></PRE>
///
	icommon__mediaType__application_x002fvnd_x002eogc_x002ewms_x005fxml,	///< xs:string value="application/vnd.ogc.wms_xml"
/// <PRE><BLOCKQUOTE>
///   Unofficial mime type for OGC CSW
/// </BLOCKQUOTE></PRE>
///
	icommon__mediaType__application_x002fvnd_x002eogc_x002ecsw_x005fxml,	///< xs:string value="application/vnd.ogc.csw_xml"
/// <PRE><BLOCKQUOTE>
///   Unofficial mime type for OGC CSW Capabilities response document
/// </BLOCKQUOTE></PRE>
///
	icommon__mediaType__application_x002fvnd_x002eogc_x002ecsw_x002ecapabilities_x002eresponse_x005fxml,	///< xs:string value="application/vnd.ogc.csw.capabilities.response_xml"
/// <PRE><BLOCKQUOTE>
///   Unofficial mime type for OGC CSW Capabilities response document
/// </BLOCKQUOTE></PRE>
///
	icommon__mediaType__application_x002fvnd_x002eogc_x002ecsw_x002eGetRecordByIdResponse_x005fxml,	///< xs:string value="application/vnd.ogc.csw.GetRecordByIdResponse_xml"
/// <PRE><BLOCKQUOTE>
///   Unofficial mime type for OGC CSW Capabilities response document
/// </BLOCKQUOTE></PRE>
///
	icommon__mediaType__application_x002fvnd_x002eogc_x002ecsw_x002eGetRecordsResponse_x005fxml,	///< xs:string value="application/vnd.ogc.csw.GetRecordsResponse_xml"
/// <PRE><BLOCKQUOTE>
///   Unofficial mime type for OGC WFS
/// </BLOCKQUOTE></PRE>
///
	icommon__mediaType__application_x002fvnd_x002eogc_x002ewfs_x005fxml,	///< xs:string value="application/vnd.ogc.wfs_xml"
/// <PRE><BLOCKQUOTE>
///   Unofficial mime type for OGC Service Exception
/// </BLOCKQUOTE></PRE>
///
	icommon__mediaType__application_x002fvnd_x002eogc_x002ese_x005fxml,	///< xs:string value="application/vnd.ogc.se_xml"
/// <PRE><BLOCKQUOTE>
///   Unofficial mime type for ISO 19139 metadata
/// </BLOCKQUOTE></PRE>
///
	icommon__mediaType__application_x002fvnd_x002eiso_x002e19139_x002bxml,	///< xs:string value="application/vnd.iso.19139+xml"
};

/// @brief Class wrapper for type enum icommon__mediaType derived from xsd__anyType.
///
/// @note Use option -P to remove this class.
class icommon__mediaType_ : public xsd__anyType
{ public:
    enum icommon__mediaType              __item;                       
};

/// @brief "http://inspire.ec.europa.eu/schemas/common/1.0":emailType is a simpleType restriction of type xs:string.
///
/// Content pattern is "[^@]+@[^\\.]+\\..+".
typedef std::string icommon__emailType "[^@]+@[^\\.]+\\..+";

/// @brief Class wrapper for type icommon__emailType derived from xsd__anyType.
///
/// @note Use option -P to remove this class.
class icommon__emailType__ : public xsd__anyType
{ public:
    icommon__emailType                   __item;                       
};

/// @brief "http://inspire.ec.europa.eu/schemas/common/1.0":iso8601Date is a simpleType restriction of type xs:string.
///
/// <PRE><BLOCKQUOTE>
///   Simplified ISO 8601 implementation
/// </BLOCKQUOTE></PRE>
///
/// Content pattern is "\\d{4}-(1[0-2]|0[1-9])-(3[0-1]|0[1-9]|[1-2][0-9])(T(2[0-3]|[0-1][0-9]):([0-5][0-9]):([0-5][0-9])(\\.[0-9]+)?)?(Z|([+|-](2[0-3]|[0-1][0-9]):([0-5][0-9]):([0-5][0-9])(\\.[0-9])?)?)?".
typedef std::string icommon__iso8601Date "\\d{4}-(1[0-2]|0[1-9])-(3[0-1]|0[1-9]|[1-2][0-9])(T(2[0-3]|[0-1][0-9]):([0-5][0-9]):([0-5][0-9])(\\.[0-9]+)?)?(Z|([+|-](2[0-3]|[0-1][0-9]):([0-5][0-9]):([0-5][0-9])(\\.[0-9])?)?)?";

/// @brief Class wrapper for type icommon__iso8601Date derived from xsd__anyType.
///
/// @note Use option -P to remove this class.
class icommon__iso8601Date__ : public xsd__anyType
{ public:
    icommon__iso8601Date                 __item;                       
};

/// @brief "http://inspire.ec.europa.eu/schemas/common/1.0":resourceType is a simpleType restriction of type xs:string.
///
/// @note The enum values are prefixed with "icommon__resourceType__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum icommon__resourceType
{
	icommon__resourceType__dataset,	///< xs:string value="dataset"
	icommon__resourceType__series,	///< xs:string value="series"
	icommon__resourceType__service,	///< xs:string value="service"
};

/// @brief Class wrapper for type enum icommon__resourceType derived from xsd__anyType.
///
/// @note Use option -P to remove this class.
class icommon__resourceType_ : public xsd__anyType
{ public:
    enum icommon__resourceType           __item;                       
};

/// @brief "http://inspire.ec.europa.eu/schemas/common/1.0":spatialDataServiceType is a simpleType restriction of type xs:string.
///
/// @note The enum values are prefixed with "icommon__spatialDataServiceType__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum icommon__spatialDataServiceType
{
	icommon__spatialDataServiceType__discovery,	///< xs:string value="discovery"
	icommon__spatialDataServiceType__view,	///< xs:string value="view"
	icommon__spatialDataServiceType__download,	///< xs:string value="download"
	icommon__spatialDataServiceType__transformation,	///< xs:string value="transformation"
	icommon__spatialDataServiceType__invoke,	///< xs:string value="invoke"
	icommon__spatialDataServiceType__other,	///< xs:string value="other"
};

/// @brief Class wrapper for type enum icommon__spatialDataServiceType derived from xsd__anyType.
///
/// @note Use option -P to remove this class.
class icommon__spatialDataServiceType_ : public xsd__anyType
{ public:
    enum icommon__spatialDataServiceType  __item;                       
};

/// @brief "http://inspire.ec.europa.eu/schemas/common/1.0":degreeOfConformity is a simpleType restriction of type xs:string.
///
/// @note The enum values are prefixed with "icommon__degreeOfConformity__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum icommon__degreeOfConformity
{
	icommon__degreeOfConformity__conformant,	///< xs:string value="conformant"
	icommon__degreeOfConformity__notConformant,	///< xs:string value="notConformant"
	icommon__degreeOfConformity__notEvaluated,	///< xs:string value="notEvaluated"
};

/// @brief Class wrapper for type enum icommon__degreeOfConformity derived from xsd__anyType.
///
/// @note Use option -P to remove this class.
class icommon__degreeOfConformity_ : public xsd__anyType
{ public:
    enum icommon__degreeOfConformity     __item;                       
};

/// @brief "http://inspire.ec.europa.eu/schemas/common/1.0":languageISO6392B is a simpleType restriction of type xs:string.
///
/// @note The enum values are prefixed with "icommon__languageISO6392B__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum icommon__languageISO6392B
{
	icommon__languageISO6392B__aar,	///< xs:string value="aar"
	icommon__languageISO6392B__abk,	///< xs:string value="abk"
	icommon__languageISO6392B__ace,	///< xs:string value="ace"
	icommon__languageISO6392B__ach,	///< xs:string value="ach"
	icommon__languageISO6392B__ada,	///< xs:string value="ada"
	icommon__languageISO6392B__ady,	///< xs:string value="ady"
	icommon__languageISO6392B__afa,	///< xs:string value="afa"
	icommon__languageISO6392B__afh,	///< xs:string value="afh"
	icommon__languageISO6392B__afr,	///< xs:string value="afr"
	icommon__languageISO6392B__ain,	///< xs:string value="ain"
	icommon__languageISO6392B__aka,	///< xs:string value="aka"
	icommon__languageISO6392B__akk,	///< xs:string value="akk"
	icommon__languageISO6392B__alb,	///< xs:string value="alb"
	icommon__languageISO6392B__ale,	///< xs:string value="ale"
	icommon__languageISO6392B__alg,	///< xs:string value="alg"
	icommon__languageISO6392B__alt,	///< xs:string value="alt"
	icommon__languageISO6392B__amh,	///< xs:string value="amh"
	icommon__languageISO6392B__ang,	///< xs:string value="ang"
	icommon__languageISO6392B__anp,	///< xs:string value="anp"
	icommon__languageISO6392B__apa,	///< xs:string value="apa"
	icommon__languageISO6392B__ara,	///< xs:string value="ara"
	icommon__languageISO6392B__arc,	///< xs:string value="arc"
	icommon__languageISO6392B__arg,	///< xs:string value="arg"
	icommon__languageISO6392B__arm,	///< xs:string value="arm"
	icommon__languageISO6392B__arn,	///< xs:string value="arn"
	icommon__languageISO6392B__arp,	///< xs:string value="arp"
	icommon__languageISO6392B__art,	///< xs:string value="art"
	icommon__languageISO6392B__arw,	///< xs:string value="arw"
	icommon__languageISO6392B__asm_,	///< xs:string value="asm"
	icommon__languageISO6392B__ast,	///< xs:string value="ast"
	icommon__languageISO6392B__ath,	///< xs:string value="ath"
	icommon__languageISO6392B__aus,	///< xs:string value="aus"
	icommon__languageISO6392B__ava,	///< xs:string value="ava"
	icommon__languageISO6392B__ave,	///< xs:string value="ave"
	icommon__languageISO6392B__awa,	///< xs:string value="awa"
	icommon__languageISO6392B__aym,	///< xs:string value="aym"
	icommon__languageISO6392B__aze,	///< xs:string value="aze"
	icommon__languageISO6392B__bad,	///< xs:string value="bad"
	icommon__languageISO6392B__bai,	///< xs:string value="bai"
	icommon__languageISO6392B__bak,	///< xs:string value="bak"
	icommon__languageISO6392B__bal,	///< xs:string value="bal"
	icommon__languageISO6392B__bam,	///< xs:string value="bam"
	icommon__languageISO6392B__ban,	///< xs:string value="ban"
	icommon__languageISO6392B__baq,	///< xs:string value="baq"
	icommon__languageISO6392B__bas,	///< xs:string value="bas"
	icommon__languageISO6392B__bat,	///< xs:string value="bat"
	icommon__languageISO6392B__bej,	///< xs:string value="bej"
	icommon__languageISO6392B__bel,	///< xs:string value="bel"
	icommon__languageISO6392B__bem,	///< xs:string value="bem"
	icommon__languageISO6392B__ben,	///< xs:string value="ben"
	icommon__languageISO6392B__ber,	///< xs:string value="ber"
	icommon__languageISO6392B__bho,	///< xs:string value="bho"
	icommon__languageISO6392B__bih,	///< xs:string value="bih"
	icommon__languageISO6392B__bik,	///< xs:string value="bik"
	icommon__languageISO6392B__bin,	///< xs:string value="bin"
	icommon__languageISO6392B__bis,	///< xs:string value="bis"
	icommon__languageISO6392B__bla,	///< xs:string value="bla"
	icommon__languageISO6392B__bnt,	///< xs:string value="bnt"
	icommon__languageISO6392B__bos,	///< xs:string value="bos"
	icommon__languageISO6392B__bra,	///< xs:string value="bra"
	icommon__languageISO6392B__bre,	///< xs:string value="bre"
	icommon__languageISO6392B__btk,	///< xs:string value="btk"
	icommon__languageISO6392B__bua,	///< xs:string value="bua"
	icommon__languageISO6392B__bug,	///< xs:string value="bug"
	icommon__languageISO6392B__bul,	///< xs:string value="bul"
	icommon__languageISO6392B__bur,	///< xs:string value="bur"
	icommon__languageISO6392B__byn,	///< xs:string value="byn"
	icommon__languageISO6392B__cad,	///< xs:string value="cad"
	icommon__languageISO6392B__cai,	///< xs:string value="cai"
	icommon__languageISO6392B__car,	///< xs:string value="car"
	icommon__languageISO6392B__cat,	///< xs:string value="cat"
	icommon__languageISO6392B__cau,	///< xs:string value="cau"
	icommon__languageISO6392B__ceb,	///< xs:string value="ceb"
	icommon__languageISO6392B__cel,	///< xs:string value="cel"
	icommon__languageISO6392B__cha,	///< xs:string value="cha"
	icommon__languageISO6392B__chb,	///< xs:string value="chb"
	icommon__languageISO6392B__che,	///< xs:string value="che"
	icommon__languageISO6392B__chg,	///< xs:string value="chg"
	icommon__languageISO6392B__chi,	///< xs:string value="chi"
	icommon__languageISO6392B__chk,	///< xs:string value="chk"
	icommon__languageISO6392B__chm,	///< xs:string value="chm"
	icommon__languageISO6392B__chn,	///< xs:string value="chn"
	icommon__languageISO6392B__cho,	///< xs:string value="cho"
	icommon__languageISO6392B__chp,	///< xs:string value="chp"
	icommon__languageISO6392B__chr,	///< xs:string value="chr"
	icommon__languageISO6392B__chu,	///< xs:string value="chu"
	icommon__languageISO6392B__chv,	///< xs:string value="chv"
	icommon__languageISO6392B__chy,	///< xs:string value="chy"
	icommon__languageISO6392B__cmc,	///< xs:string value="cmc"
	icommon__languageISO6392B__cop,	///< xs:string value="cop"
	icommon__languageISO6392B__cor,	///< xs:string value="cor"
	icommon__languageISO6392B__cos,	///< xs:string value="cos"
	icommon__languageISO6392B__cpe,	///< xs:string value="cpe"
	icommon__languageISO6392B__cpf,	///< xs:string value="cpf"
	icommon__languageISO6392B__cpp,	///< xs:string value="cpp"
	icommon__languageISO6392B__cre,	///< xs:string value="cre"
	icommon__languageISO6392B__crh,	///< xs:string value="crh"
	icommon__languageISO6392B__crp,	///< xs:string value="crp"
	icommon__languageISO6392B__csb,	///< xs:string value="csb"
	icommon__languageISO6392B__cus,	///< xs:string value="cus"
	icommon__languageISO6392B__cze,	///< xs:string value="cze"
	icommon__languageISO6392B__dak,	///< xs:string value="dak"
	icommon__languageISO6392B__dan,	///< xs:string value="dan"
	icommon__languageISO6392B__dar,	///< xs:string value="dar"
	icommon__languageISO6392B__day,	///< xs:string value="day"
	icommon__languageISO6392B__del,	///< xs:string value="del"
	icommon__languageISO6392B__den,	///< xs:string value="den"
	icommon__languageISO6392B__dgr,	///< xs:string value="dgr"
	icommon__languageISO6392B__din,	///< xs:string value="din"
	icommon__languageISO6392B__div,	///< xs:string value="div"
	icommon__languageISO6392B__doi,	///< xs:string value="doi"
	icommon__languageISO6392B__dra,	///< xs:string value="dra"
	icommon__languageISO6392B__dsb,	///< xs:string value="dsb"
	icommon__languageISO6392B__dua,	///< xs:string value="dua"
	icommon__languageISO6392B__dum,	///< xs:string value="dum"
	icommon__languageISO6392B__dut,	///< xs:string value="dut"
	icommon__languageISO6392B__dyu,	///< xs:string value="dyu"
	icommon__languageISO6392B__dzo,	///< xs:string value="dzo"
	icommon__languageISO6392B__efi,	///< xs:string value="efi"
	icommon__languageISO6392B__egy,	///< xs:string value="egy"
	icommon__languageISO6392B__eka,	///< xs:string value="eka"
	icommon__languageISO6392B__elx,	///< xs:string value="elx"
	icommon__languageISO6392B__eng,	///< xs:string value="eng"
	icommon__languageISO6392B__enm,	///< xs:string value="enm"
	icommon__languageISO6392B__epo,	///< xs:string value="epo"
	icommon__languageISO6392B__est,	///< xs:string value="est"
	icommon__languageISO6392B__ewe,	///< xs:string value="ewe"
	icommon__languageISO6392B__ewo,	///< xs:string value="ewo"
	icommon__languageISO6392B__fan,	///< xs:string value="fan"
	icommon__languageISO6392B__fao,	///< xs:string value="fao"
	icommon__languageISO6392B__fat,	///< xs:string value="fat"
	icommon__languageISO6392B__fij,	///< xs:string value="fij"
	icommon__languageISO6392B__fil,	///< xs:string value="fil"
	icommon__languageISO6392B__fin,	///< xs:string value="fin"
	icommon__languageISO6392B__fiu,	///< xs:string value="fiu"
	icommon__languageISO6392B__fon,	///< xs:string value="fon"
	icommon__languageISO6392B__fre,	///< xs:string value="fre"
	icommon__languageISO6392B__frm,	///< xs:string value="frm"
	icommon__languageISO6392B__fro,	///< xs:string value="fro"
	icommon__languageISO6392B__frr,	///< xs:string value="frr"
	icommon__languageISO6392B__frs,	///< xs:string value="frs"
	icommon__languageISO6392B__fry,	///< xs:string value="fry"
	icommon__languageISO6392B__ful,	///< xs:string value="ful"
	icommon__languageISO6392B__fur,	///< xs:string value="fur"
	icommon__languageISO6392B__gaa,	///< xs:string value="gaa"
	icommon__languageISO6392B__gay,	///< xs:string value="gay"
	icommon__languageISO6392B__gba,	///< xs:string value="gba"
	icommon__languageISO6392B__gem,	///< xs:string value="gem"
	icommon__languageISO6392B__geo,	///< xs:string value="geo"
	icommon__languageISO6392B__ger,	///< xs:string value="ger"
	icommon__languageISO6392B__gez,	///< xs:string value="gez"
	icommon__languageISO6392B__gil,	///< xs:string value="gil"
	icommon__languageISO6392B__gla,	///< xs:string value="gla"
	icommon__languageISO6392B__gle,	///< xs:string value="gle"
	icommon__languageISO6392B__glg,	///< xs:string value="glg"
	icommon__languageISO6392B__glv,	///< xs:string value="glv"
	icommon__languageISO6392B__gmh,	///< xs:string value="gmh"
	icommon__languageISO6392B__goh,	///< xs:string value="goh"
	icommon__languageISO6392B__gon,	///< xs:string value="gon"
	icommon__languageISO6392B__gor,	///< xs:string value="gor"
	icommon__languageISO6392B__got,	///< xs:string value="got"
	icommon__languageISO6392B__grb,	///< xs:string value="grb"
	icommon__languageISO6392B__grc,	///< xs:string value="grc"
	icommon__languageISO6392B__gre,	///< xs:string value="gre"
	icommon__languageISO6392B__grn,	///< xs:string value="grn"
	icommon__languageISO6392B__gsw,	///< xs:string value="gsw"
	icommon__languageISO6392B__guj,	///< xs:string value="guj"
	icommon__languageISO6392B__gwi,	///< xs:string value="gwi"
	icommon__languageISO6392B__hai,	///< xs:string value="hai"
	icommon__languageISO6392B__hat,	///< xs:string value="hat"
	icommon__languageISO6392B__hau,	///< xs:string value="hau"
	icommon__languageISO6392B__haw,	///< xs:string value="haw"
	icommon__languageISO6392B__heb,	///< xs:string value="heb"
	icommon__languageISO6392B__her,	///< xs:string value="her"
	icommon__languageISO6392B__hil,	///< xs:string value="hil"
	icommon__languageISO6392B__him,	///< xs:string value="him"
	icommon__languageISO6392B__hin,	///< xs:string value="hin"
	icommon__languageISO6392B__hit,	///< xs:string value="hit"
	icommon__languageISO6392B__hmn,	///< xs:string value="hmn"
	icommon__languageISO6392B__hmo,	///< xs:string value="hmo"
	icommon__languageISO6392B__hrv,	///< xs:string value="hrv"
	icommon__languageISO6392B__hsb,	///< xs:string value="hsb"
	icommon__languageISO6392B__hun,	///< xs:string value="hun"
	icommon__languageISO6392B__hup,	///< xs:string value="hup"
	icommon__languageISO6392B__iba,	///< xs:string value="iba"
	icommon__languageISO6392B__ibo,	///< xs:string value="ibo"
	icommon__languageISO6392B__ice,	///< xs:string value="ice"
	icommon__languageISO6392B__ido,	///< xs:string value="ido"
	icommon__languageISO6392B__iii,	///< xs:string value="iii"
	icommon__languageISO6392B__ijo,	///< xs:string value="ijo"
	icommon__languageISO6392B__iku,	///< xs:string value="iku"
	icommon__languageISO6392B__ile,	///< xs:string value="ile"
	icommon__languageISO6392B__ilo,	///< xs:string value="ilo"
	icommon__languageISO6392B__ina,	///< xs:string value="ina"
	icommon__languageISO6392B__inc,	///< xs:string value="inc"
	icommon__languageISO6392B__ind,	///< xs:string value="ind"
	icommon__languageISO6392B__ine,	///< xs:string value="ine"
	icommon__languageISO6392B__inh,	///< xs:string value="inh"
	icommon__languageISO6392B__ipk,	///< xs:string value="ipk"
	icommon__languageISO6392B__ira,	///< xs:string value="ira"
	icommon__languageISO6392B__iro,	///< xs:string value="iro"
	icommon__languageISO6392B__ita,	///< xs:string value="ita"
	icommon__languageISO6392B__jav,	///< xs:string value="jav"
	icommon__languageISO6392B__jbo,	///< xs:string value="jbo"
	icommon__languageISO6392B__jpn,	///< xs:string value="jpn"
	icommon__languageISO6392B__jpr,	///< xs:string value="jpr"
	icommon__languageISO6392B__jrb,	///< xs:string value="jrb"
	icommon__languageISO6392B__kaa,	///< xs:string value="kaa"
	icommon__languageISO6392B__kab,	///< xs:string value="kab"
	icommon__languageISO6392B__kac,	///< xs:string value="kac"
	icommon__languageISO6392B__kal,	///< xs:string value="kal"
	icommon__languageISO6392B__kam,	///< xs:string value="kam"
	icommon__languageISO6392B__kan,	///< xs:string value="kan"
	icommon__languageISO6392B__kar,	///< xs:string value="kar"
	icommon__languageISO6392B__kas,	///< xs:string value="kas"
	icommon__languageISO6392B__kau,	///< xs:string value="kau"
	icommon__languageISO6392B__kaw,	///< xs:string value="kaw"
	icommon__languageISO6392B__kaz,	///< xs:string value="kaz"
	icommon__languageISO6392B__kbd,	///< xs:string value="kbd"
	icommon__languageISO6392B__kha,	///< xs:string value="kha"
	icommon__languageISO6392B__khi,	///< xs:string value="khi"
	icommon__languageISO6392B__khm,	///< xs:string value="khm"
	icommon__languageISO6392B__kho,	///< xs:string value="kho"
	icommon__languageISO6392B__kik,	///< xs:string value="kik"
	icommon__languageISO6392B__kin,	///< xs:string value="kin"
	icommon__languageISO6392B__kir,	///< xs:string value="kir"
	icommon__languageISO6392B__kmb,	///< xs:string value="kmb"
	icommon__languageISO6392B__kok,	///< xs:string value="kok"
	icommon__languageISO6392B__kom,	///< xs:string value="kom"
	icommon__languageISO6392B__kon,	///< xs:string value="kon"
	icommon__languageISO6392B__kor,	///< xs:string value="kor"
	icommon__languageISO6392B__kos,	///< xs:string value="kos"
	icommon__languageISO6392B__kpe,	///< xs:string value="kpe"
	icommon__languageISO6392B__krc,	///< xs:string value="krc"
	icommon__languageISO6392B__krl,	///< xs:string value="krl"
	icommon__languageISO6392B__kro,	///< xs:string value="kro"
	icommon__languageISO6392B__kru,	///< xs:string value="kru"
	icommon__languageISO6392B__kua,	///< xs:string value="kua"
	icommon__languageISO6392B__kum,	///< xs:string value="kum"
	icommon__languageISO6392B__kur,	///< xs:string value="kur"
	icommon__languageISO6392B__kut,	///< xs:string value="kut"
	icommon__languageISO6392B__lad,	///< xs:string value="lad"
	icommon__languageISO6392B__lah,	///< xs:string value="lah"
	icommon__languageISO6392B__lam,	///< xs:string value="lam"
	icommon__languageISO6392B__lao,	///< xs:string value="lao"
	icommon__languageISO6392B__lat,	///< xs:string value="lat"
	icommon__languageISO6392B__lav,	///< xs:string value="lav"
	icommon__languageISO6392B__lez,	///< xs:string value="lez"
	icommon__languageISO6392B__lim,	///< xs:string value="lim"
	icommon__languageISO6392B__lin,	///< xs:string value="lin"
	icommon__languageISO6392B__lit,	///< xs:string value="lit"
	icommon__languageISO6392B__lol,	///< xs:string value="lol"
	icommon__languageISO6392B__loz,	///< xs:string value="loz"
	icommon__languageISO6392B__ltz,	///< xs:string value="ltz"
	icommon__languageISO6392B__lua,	///< xs:string value="lua"
	icommon__languageISO6392B__lub,	///< xs:string value="lub"
	icommon__languageISO6392B__lug,	///< xs:string value="lug"
	icommon__languageISO6392B__lui,	///< xs:string value="lui"
	icommon__languageISO6392B__lun,	///< xs:string value="lun"
	icommon__languageISO6392B__luo,	///< xs:string value="luo"
	icommon__languageISO6392B__lus,	///< xs:string value="lus"
	icommon__languageISO6392B__mac,	///< xs:string value="mac"
	icommon__languageISO6392B__mad,	///< xs:string value="mad"
	icommon__languageISO6392B__mag,	///< xs:string value="mag"
	icommon__languageISO6392B__mah,	///< xs:string value="mah"
	icommon__languageISO6392B__mai,	///< xs:string value="mai"
	icommon__languageISO6392B__mak,	///< xs:string value="mak"
	icommon__languageISO6392B__mal,	///< xs:string value="mal"
	icommon__languageISO6392B__man,	///< xs:string value="man"
	icommon__languageISO6392B__mao,	///< xs:string value="mao"
	icommon__languageISO6392B__map,	///< xs:string value="map"
	icommon__languageISO6392B__mar,	///< xs:string value="mar"
	icommon__languageISO6392B__mas,	///< xs:string value="mas"
	icommon__languageISO6392B__may,	///< xs:string value="may"
	icommon__languageISO6392B__mdf,	///< xs:string value="mdf"
	icommon__languageISO6392B__mdr,	///< xs:string value="mdr"
	icommon__languageISO6392B__men,	///< xs:string value="men"
	icommon__languageISO6392B__mga,	///< xs:string value="mga"
	icommon__languageISO6392B__mic,	///< xs:string value="mic"
	icommon__languageISO6392B__min_,	///< xs:string value="min"
	icommon__languageISO6392B__mis,	///< xs:string value="mis"
	icommon__languageISO6392B__mkh,	///< xs:string value="mkh"
	icommon__languageISO6392B__mlg,	///< xs:string value="mlg"
	icommon__languageISO6392B__mlt,	///< xs:string value="mlt"
	icommon__languageISO6392B__mnc,	///< xs:string value="mnc"
	icommon__languageISO6392B__mni,	///< xs:string value="mni"
	icommon__languageISO6392B__mno,	///< xs:string value="mno"
	icommon__languageISO6392B__moh,	///< xs:string value="moh"
	icommon__languageISO6392B__mon,	///< xs:string value="mon"
	icommon__languageISO6392B__mos,	///< xs:string value="mos"
	icommon__languageISO6392B__mul,	///< xs:string value="mul"
	icommon__languageISO6392B__mun,	///< xs:string value="mun"
	icommon__languageISO6392B__mus,	///< xs:string value="mus"
	icommon__languageISO6392B__mwl,	///< xs:string value="mwl"
	icommon__languageISO6392B__mwr,	///< xs:string value="mwr"
	icommon__languageISO6392B__myn,	///< xs:string value="myn"
	icommon__languageISO6392B__myv,	///< xs:string value="myv"
	icommon__languageISO6392B__nah,	///< xs:string value="nah"
	icommon__languageISO6392B__nai,	///< xs:string value="nai"
	icommon__languageISO6392B__nap,	///< xs:string value="nap"
	icommon__languageISO6392B__nau,	///< xs:string value="nau"
	icommon__languageISO6392B__nav,	///< xs:string value="nav"
	icommon__languageISO6392B__nbl,	///< xs:string value="nbl"
	icommon__languageISO6392B__nde,	///< xs:string value="nde"
	icommon__languageISO6392B__ndo,	///< xs:string value="ndo"
	icommon__languageISO6392B__nds,	///< xs:string value="nds"
	icommon__languageISO6392B__nep,	///< xs:string value="nep"
	icommon__languageISO6392B__new_,	///< xs:string value="new"
	icommon__languageISO6392B__nia,	///< xs:string value="nia"
	icommon__languageISO6392B__nic,	///< xs:string value="nic"
	icommon__languageISO6392B__niu,	///< xs:string value="niu"
	icommon__languageISO6392B__nno,	///< xs:string value="nno"
	icommon__languageISO6392B__nob,	///< xs:string value="nob"
	icommon__languageISO6392B__nog,	///< xs:string value="nog"
	icommon__languageISO6392B__non,	///< xs:string value="non"
	icommon__languageISO6392B__nor,	///< xs:string value="nor"
	icommon__languageISO6392B__nqo,	///< xs:string value="nqo"
	icommon__languageISO6392B__nso,	///< xs:string value="nso"
	icommon__languageISO6392B__nub,	///< xs:string value="nub"
	icommon__languageISO6392B__nwc,	///< xs:string value="nwc"
	icommon__languageISO6392B__nya,	///< xs:string value="nya"
	icommon__languageISO6392B__nym,	///< xs:string value="nym"
	icommon__languageISO6392B__nyn,	///< xs:string value="nyn"
	icommon__languageISO6392B__nyo,	///< xs:string value="nyo"
	icommon__languageISO6392B__nzi,	///< xs:string value="nzi"
	icommon__languageISO6392B__oci,	///< xs:string value="oci"
	icommon__languageISO6392B__oji,	///< xs:string value="oji"
	icommon__languageISO6392B__ori,	///< xs:string value="ori"
	icommon__languageISO6392B__orm,	///< xs:string value="orm"
	icommon__languageISO6392B__osa,	///< xs:string value="osa"
	icommon__languageISO6392B__oss,	///< xs:string value="oss"
	icommon__languageISO6392B__ota,	///< xs:string value="ota"
	icommon__languageISO6392B__oto,	///< xs:string value="oto"
	icommon__languageISO6392B__paa,	///< xs:string value="paa"
	icommon__languageISO6392B__pag,	///< xs:string value="pag"
	icommon__languageISO6392B__pal,	///< xs:string value="pal"
	icommon__languageISO6392B__pam,	///< xs:string value="pam"
	icommon__languageISO6392B__pan,	///< xs:string value="pan"
	icommon__languageISO6392B__pap,	///< xs:string value="pap"
	icommon__languageISO6392B__pau,	///< xs:string value="pau"
	icommon__languageISO6392B__peo,	///< xs:string value="peo"
	icommon__languageISO6392B__per,	///< xs:string value="per"
	icommon__languageISO6392B__phi,	///< xs:string value="phi"
	icommon__languageISO6392B__phn,	///< xs:string value="phn"
	icommon__languageISO6392B__pli,	///< xs:string value="pli"
	icommon__languageISO6392B__pol,	///< xs:string value="pol"
	icommon__languageISO6392B__pon,	///< xs:string value="pon"
	icommon__languageISO6392B__por,	///< xs:string value="por"
	icommon__languageISO6392B__pra,	///< xs:string value="pra"
	icommon__languageISO6392B__pro,	///< xs:string value="pro"
	icommon__languageISO6392B__pus,	///< xs:string value="pus"
	icommon__languageISO6392B__qaa_qtz,	///< xs:string value="qaa-qtz"
	icommon__languageISO6392B__que,	///< xs:string value="que"
	icommon__languageISO6392B__raj,	///< xs:string value="raj"
	icommon__languageISO6392B__rap,	///< xs:string value="rap"
	icommon__languageISO6392B__rar,	///< xs:string value="rar"
	icommon__languageISO6392B__roa,	///< xs:string value="roa"
	icommon__languageISO6392B__roh,	///< xs:string value="roh"
	icommon__languageISO6392B__rom,	///< xs:string value="rom"
	icommon__languageISO6392B__rum,	///< xs:string value="rum"
	icommon__languageISO6392B__run,	///< xs:string value="run"
	icommon__languageISO6392B__rup,	///< xs:string value="rup"
	icommon__languageISO6392B__rus,	///< xs:string value="rus"
	icommon__languageISO6392B__sad,	///< xs:string value="sad"
	icommon__languageISO6392B__sag,	///< xs:string value="sag"
	icommon__languageISO6392B__sah,	///< xs:string value="sah"
	icommon__languageISO6392B__sai,	///< xs:string value="sai"
	icommon__languageISO6392B__sal,	///< xs:string value="sal"
	icommon__languageISO6392B__sam,	///< xs:string value="sam"
	icommon__languageISO6392B__san,	///< xs:string value="san"
	icommon__languageISO6392B__sas,	///< xs:string value="sas"
	icommon__languageISO6392B__sat,	///< xs:string value="sat"
	icommon__languageISO6392B__scn,	///< xs:string value="scn"
	icommon__languageISO6392B__sco,	///< xs:string value="sco"
	icommon__languageISO6392B__sel,	///< xs:string value="sel"
	icommon__languageISO6392B__sem,	///< xs:string value="sem"
	icommon__languageISO6392B__sga,	///< xs:string value="sga"
	icommon__languageISO6392B__sgn,	///< xs:string value="sgn"
	icommon__languageISO6392B__shn,	///< xs:string value="shn"
	icommon__languageISO6392B__sid,	///< xs:string value="sid"
	icommon__languageISO6392B__sin,	///< xs:string value="sin"
	icommon__languageISO6392B__sio,	///< xs:string value="sio"
	icommon__languageISO6392B__sit,	///< xs:string value="sit"
	icommon__languageISO6392B__sla,	///< xs:string value="sla"
	icommon__languageISO6392B__slo,	///< xs:string value="slo"
	icommon__languageISO6392B__slv,	///< xs:string value="slv"
	icommon__languageISO6392B__sma,	///< xs:string value="sma"
	icommon__languageISO6392B__sme,	///< xs:string value="sme"
	icommon__languageISO6392B__smi,	///< xs:string value="smi"
	icommon__languageISO6392B__smj,	///< xs:string value="smj"
	icommon__languageISO6392B__smn,	///< xs:string value="smn"
	icommon__languageISO6392B__smo,	///< xs:string value="smo"
	icommon__languageISO6392B__sms,	///< xs:string value="sms"
	icommon__languageISO6392B__sna,	///< xs:string value="sna"
	icommon__languageISO6392B__snd,	///< xs:string value="snd"
	icommon__languageISO6392B__snk,	///< xs:string value="snk"
	icommon__languageISO6392B__sog,	///< xs:string value="sog"
	icommon__languageISO6392B__som,	///< xs:string value="som"
	icommon__languageISO6392B__son,	///< xs:string value="son"
	icommon__languageISO6392B__sot,	///< xs:string value="sot"
	icommon__languageISO6392B__spa,	///< xs:string value="spa"
	icommon__languageISO6392B__srd,	///< xs:string value="srd"
	icommon__languageISO6392B__srn,	///< xs:string value="srn"
	icommon__languageISO6392B__srp,	///< xs:string value="srp"
	icommon__languageISO6392B__srr,	///< xs:string value="srr"
	icommon__languageISO6392B__ssa,	///< xs:string value="ssa"
	icommon__languageISO6392B__ssw,	///< xs:string value="ssw"
	icommon__languageISO6392B__suk,	///< xs:string value="suk"
	icommon__languageISO6392B__sun,	///< xs:string value="sun"
	icommon__languageISO6392B__sus,	///< xs:string value="sus"
	icommon__languageISO6392B__sux,	///< xs:string value="sux"
	icommon__languageISO6392B__swa,	///< xs:string value="swa"
	icommon__languageISO6392B__swe,	///< xs:string value="swe"
	icommon__languageISO6392B__syc,	///< xs:string value="syc"
	icommon__languageISO6392B__syr,	///< xs:string value="syr"
	icommon__languageISO6392B__tah,	///< xs:string value="tah"
	icommon__languageISO6392B__tai,	///< xs:string value="tai"
	icommon__languageISO6392B__tam,	///< xs:string value="tam"
	icommon__languageISO6392B__tat,	///< xs:string value="tat"
	icommon__languageISO6392B__tel,	///< xs:string value="tel"
	icommon__languageISO6392B__tem,	///< xs:string value="tem"
	icommon__languageISO6392B__ter,	///< xs:string value="ter"
	icommon__languageISO6392B__tet,	///< xs:string value="tet"
	icommon__languageISO6392B__tgk,	///< xs:string value="tgk"
	icommon__languageISO6392B__tgl,	///< xs:string value="tgl"
	icommon__languageISO6392B__tha,	///< xs:string value="tha"
	icommon__languageISO6392B__tib,	///< xs:string value="tib"
	icommon__languageISO6392B__tig,	///< xs:string value="tig"
	icommon__languageISO6392B__tir,	///< xs:string value="tir"
	icommon__languageISO6392B__tiv,	///< xs:string value="tiv"
	icommon__languageISO6392B__tkl,	///< xs:string value="tkl"
	icommon__languageISO6392B__tlh,	///< xs:string value="tlh"
	icommon__languageISO6392B__tli,	///< xs:string value="tli"
	icommon__languageISO6392B__tmh,	///< xs:string value="tmh"
	icommon__languageISO6392B__tog,	///< xs:string value="tog"
	icommon__languageISO6392B__ton,	///< xs:string value="ton"
	icommon__languageISO6392B__tpi,	///< xs:string value="tpi"
	icommon__languageISO6392B__tsi,	///< xs:string value="tsi"
	icommon__languageISO6392B__tsn,	///< xs:string value="tsn"
	icommon__languageISO6392B__tso,	///< xs:string value="tso"
	icommon__languageISO6392B__tuk,	///< xs:string value="tuk"
	icommon__languageISO6392B__tum,	///< xs:string value="tum"
	icommon__languageISO6392B__tup,	///< xs:string value="tup"
	icommon__languageISO6392B__tur,	///< xs:string value="tur"
	icommon__languageISO6392B__tut,	///< xs:string value="tut"
	icommon__languageISO6392B__tvl,	///< xs:string value="tvl"
	icommon__languageISO6392B__twi,	///< xs:string value="twi"
	icommon__languageISO6392B__tyv,	///< xs:string value="tyv"
	icommon__languageISO6392B__udm,	///< xs:string value="udm"
	icommon__languageISO6392B__uga,	///< xs:string value="uga"
	icommon__languageISO6392B__uig,	///< xs:string value="uig"
	icommon__languageISO6392B__ukr,	///< xs:string value="ukr"
	icommon__languageISO6392B__umb,	///< xs:string value="umb"
	icommon__languageISO6392B__und,	///< xs:string value="und"
	icommon__languageISO6392B__urd,	///< xs:string value="urd"
	icommon__languageISO6392B__uzb,	///< xs:string value="uzb"
	icommon__languageISO6392B__vai,	///< xs:string value="vai"
	icommon__languageISO6392B__ven,	///< xs:string value="ven"
	icommon__languageISO6392B__vie,	///< xs:string value="vie"
	icommon__languageISO6392B__vol,	///< xs:string value="vol"
	icommon__languageISO6392B__vot,	///< xs:string value="vot"
	icommon__languageISO6392B__wak,	///< xs:string value="wak"
	icommon__languageISO6392B__wal,	///< xs:string value="wal"
	icommon__languageISO6392B__war,	///< xs:string value="war"
	icommon__languageISO6392B__was,	///< xs:string value="was"
	icommon__languageISO6392B__wel,	///< xs:string value="wel"
	icommon__languageISO6392B__wen,	///< xs:string value="wen"
	icommon__languageISO6392B__wln,	///< xs:string value="wln"
	icommon__languageISO6392B__wol,	///< xs:string value="wol"
	icommon__languageISO6392B__xal,	///< xs:string value="xal"
	icommon__languageISO6392B__xho,	///< xs:string value="xho"
	icommon__languageISO6392B__yao,	///< xs:string value="yao"
	icommon__languageISO6392B__yap,	///< xs:string value="yap"
	icommon__languageISO6392B__yid,	///< xs:string value="yid"
	icommon__languageISO6392B__yor,	///< xs:string value="yor"
	icommon__languageISO6392B__ypk,	///< xs:string value="ypk"
	icommon__languageISO6392B__zap,	///< xs:string value="zap"
	icommon__languageISO6392B__zbl,	///< xs:string value="zbl"
	icommon__languageISO6392B__zen,	///< xs:string value="zen"
	icommon__languageISO6392B__zha,	///< xs:string value="zha"
	icommon__languageISO6392B__znd,	///< xs:string value="znd"
	icommon__languageISO6392B__zul,	///< xs:string value="zul"
	icommon__languageISO6392B__zun,	///< xs:string value="zun"
	icommon__languageISO6392B__zxx,	///< xs:string value="zxx"
	icommon__languageISO6392B__zza,	///< xs:string value="zza"
};

/// @brief Class wrapper for type enum icommon__languageISO6392B derived from xsd__anyType.
///
/// @note Use option -P to remove this class.
class icommon__languageISO6392B_ : public xsd__anyType
{ public:
    enum icommon__languageISO6392B       __item;                       
};

/// @brief "http://inspire.ec.europa.eu/schemas/common/1.0":languageIETF is a simpleType restriction of type xs:language.
///
typedef xsd__language icommon__languageIETF;

/// @brief Class wrapper for type icommon__languageIETF derived from xsd__anyType.
///
/// @note Use option -P to remove this class.
class icommon__languageIETF__ : public xsd__anyType
{ public:
    icommon__languageIETF                __item;                       
};

/// @brief "http://inspire.ec.europa.eu/schemas/common/1.0":responsiblePartyRole is a simpleType restriction of type xs:string.
///
/// @note The enum values are prefixed with "icommon__responsiblePartyRole__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum icommon__responsiblePartyRole
{
/// <PRE><BLOCKQUOTE>
///   Resource Provider (resourceProvider): Party that supplies the resource.
/// </BLOCKQUOTE></PRE>
///
	icommon__responsiblePartyRole__resourceProvider,	///< xs:string value="resourceProvider"
/// <PRE><BLOCKQUOTE>
///   6.2. Custodian (custodian): Party that accepts accountability and responsibility for the data and ensures appropriate care and maintenance of the resource.
/// </BLOCKQUOTE></PRE>
///
	icommon__responsiblePartyRole__custodian,	///< xs:string value="custodian"
/// <PRE><BLOCKQUOTE>
///   6.3. Owner (owner): Party that owns the resource.
/// </BLOCKQUOTE></PRE>
///
	icommon__responsiblePartyRole__owner,	///< xs:string value="owner"
/// <PRE><BLOCKQUOTE>
///   6.4. User (user): Party who uses the resource.
/// </BLOCKQUOTE></PRE>
///
	icommon__responsiblePartyRole__user,	///< xs:string value="user"
/// <PRE><BLOCKQUOTE>
///   6.5. Distributor (distributor): Party who distributes the resource.
/// </BLOCKQUOTE></PRE>
///
	icommon__responsiblePartyRole__distributor,	///< xs:string value="distributor"
/// <PRE><BLOCKQUOTE>
///   6.6. Originator (originator): Party who created the resource
/// </BLOCKQUOTE></PRE>
///
	icommon__responsiblePartyRole__originator,	///< xs:string value="originator"
/// <PRE><BLOCKQUOTE>
///   6.7. Point of Contact (pointOfContact): Party who can be contacted for acquiring knowledge about or acquisition of the resource.
/// </BLOCKQUOTE></PRE>
///
	icommon__responsiblePartyRole__pointOfContact,	///< xs:string value="pointOfContact"
/// <PRE><BLOCKQUOTE>
///   6.8. Principal Investigator (principalInvestigator): Key party responsible for gathering information and conducting research.
/// </BLOCKQUOTE></PRE>
///
	icommon__responsiblePartyRole__principalInvestigator,	///< xs:string value="principalInvestigator"
/// <PRE><BLOCKQUOTE>
///   6.9. Processor (processor): Party who has processed the data in a manner such that the resource has been modified.
/// </BLOCKQUOTE></PRE>
///
	icommon__responsiblePartyRole__processor,	///< xs:string value="processor"
/// <PRE><BLOCKQUOTE>
///   6.10. Publisher (publisher): Party who published the resource.
/// </BLOCKQUOTE></PRE>
///
	icommon__responsiblePartyRole__publisher,	///< xs:string value="publisher"
/// <PRE><BLOCKQUOTE>
///   6.11. Author (author): Party who authored the resource.
/// </BLOCKQUOTE></PRE>
///
	icommon__responsiblePartyRole__author,	///< xs:string value="author"
};

/// @brief Class wrapper for type enum icommon__responsiblePartyRole derived from xsd__anyType.
///
/// @note Use option -P to remove this class.
class icommon__responsiblePartyRole_ : public xsd__anyType
{ public:
    enum icommon__responsiblePartyRole   __item;                       
};

/// @brief "http://inspire.ec.europa.eu/schemas/common/1.0":geoBoxDigits is a simpleType restriction of type xs:string.
///
/// <PRE><BLOCKQUOTE>
///   The bounding box shall be expressed with westbound and eastbound longitudes, and southbound and northbound latitudes in decimal degrees, with a precision of at least two decimals.
/// </BLOCKQUOTE></PRE>
///
/// Content pattern is "-?(0+|(0*[1-9]\\d*))(\\.\\d{2,})".
typedef std::string icommon__geoBoxDigits "-?(0+|(0*[1-9]\\d*))(\\.\\d{2,})";

/// @brief Class wrapper for type icommon__geoBoxDigits derived from xsd__anyType.
///
/// @note Use option -P to remove this class.
class icommon__geoBoxDigits__ : public xsd__anyType
{ public:
    icommon__geoBoxDigits                __item;                       
};


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.opengis.net/wfs-util/2.0                                      *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.opengis.net/ows/1.1                                           *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://inspire.ec.europa.eu/schemas/inspire_dls/1.0                      *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.w3.org/1999/xlink                                             *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.opengis.net/fes/2.0                                           *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://inspire.ec.europa.eu/schemas/common/1.0                           *
 *                                                                            *
\******************************************************************************/

/// @brief "http://inspire.ec.europa.eu/schemas/common/1.0":serviceSpatialDataResourceType is a simpleType restriction of type "http://inspire.ec.europa.eu/schemas/common/1.0":resourceType.
///
/// @note The enum values are prefixed with "icommon__serviceSpatialDataResourceType__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum icommon__serviceSpatialDataResourceType
{
	icommon__serviceSpatialDataResourceType__service,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":resourceType value="service"
};

/// @brief Class wrapper for type enum icommon__serviceSpatialDataResourceType derived from xsd__anyType.
///
/// @note Use option -P to remove this class.
class icommon__serviceSpatialDataResourceType_ : public xsd__anyType
{ public:
    enum icommon__serviceSpatialDataResourceType  __item;                       
};

/// @brief "http://inspire.ec.europa.eu/schemas/common/1.0":viewSpatialDataServiceType is a simpleType restriction of type "http://inspire.ec.europa.eu/schemas/common/1.0":spatialDataServiceType.
///
/// @note The enum values are prefixed with "icommon__viewSpatialDataServiceType__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum icommon__viewSpatialDataServiceType
{
	icommon__viewSpatialDataServiceType__view,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":spatialDataServiceType value="view"
};

/// @brief Class wrapper for type enum icommon__viewSpatialDataServiceType derived from xsd__anyType.
///
/// @note Use option -P to remove this class.
class icommon__viewSpatialDataServiceType_ : public xsd__anyType
{ public:
    enum icommon__viewSpatialDataServiceType  __item;                       
};

/// @brief "http://inspire.ec.europa.eu/schemas/common/1.0":discoverySpatialDataServiceType is a simpleType restriction of type "http://inspire.ec.europa.eu/schemas/common/1.0":spatialDataServiceType.
///
/// @note The enum values are prefixed with "icommon__discoverySpatialDataServiceType__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum icommon__discoverySpatialDataServiceType
{
	icommon__discoverySpatialDataServiceType__discovery,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":spatialDataServiceType value="discovery"
};

/// @brief Class wrapper for type enum icommon__discoverySpatialDataServiceType derived from xsd__anyType.
///
/// @note Use option -P to remove this class.
class icommon__discoverySpatialDataServiceType_ : public xsd__anyType
{ public:
    enum icommon__discoverySpatialDataServiceType  __item;                       
};

/// @brief "http://inspire.ec.europa.eu/schemas/common/1.0":transformationSpatialDataServiceType is a simpleType restriction of type "http://inspire.ec.europa.eu/schemas/common/1.0":spatialDataServiceType.
///
/// @note The enum values are prefixed with "icommon__transformationSpatialDataServiceType__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum icommon__transformationSpatialDataServiceType
{
	icommon__transformationSpatialDataServiceType__transformation,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":spatialDataServiceType value="transformation"
};

/// @brief Class wrapper for type enum icommon__transformationSpatialDataServiceType derived from xsd__anyType.
///
/// @note Use option -P to remove this class.
class icommon__transformationSpatialDataServiceType_ : public xsd__anyType
{ public:
    enum icommon__transformationSpatialDataServiceType  __item;                       
};

/// @brief "http://inspire.ec.europa.eu/schemas/common/1.0":invokeSpatialDataServiceType is a simpleType restriction of type "http://inspire.ec.europa.eu/schemas/common/1.0":spatialDataServiceType.
///
/// @note The enum values are prefixed with "icommon__invokeSpatialDataServiceType__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum icommon__invokeSpatialDataServiceType
{
	icommon__invokeSpatialDataServiceType__invoke,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":spatialDataServiceType value="invoke"
};

/// @brief Class wrapper for type enum icommon__invokeSpatialDataServiceType derived from xsd__anyType.
///
/// @note Use option -P to remove this class.
class icommon__invokeSpatialDataServiceType_ : public xsd__anyType
{ public:
    enum icommon__invokeSpatialDataServiceType  __item;                       
};

/// @brief "http://inspire.ec.europa.eu/schemas/common/1.0":otherSpatialDataServiceType is a simpleType restriction of type "http://inspire.ec.europa.eu/schemas/common/1.0":spatialDataServiceType.
///
/// @note The enum values are prefixed with "icommon__otherSpatialDataServiceType__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum icommon__otherSpatialDataServiceType
{
	icommon__otherSpatialDataServiceType__other,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":spatialDataServiceType value="other"
};

/// @brief Class wrapper for type enum icommon__otherSpatialDataServiceType derived from xsd__anyType.
///
/// @note Use option -P to remove this class.
class icommon__otherSpatialDataServiceType_ : public xsd__anyType
{ public:
    enum icommon__otherSpatialDataServiceType  __item;                       
};

/// @brief "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue is a simpleType restriction of type "http://inspire.ec.europa.eu/schemas/common/1.0":notEmptyString.
///
typedef icommon__notEmptyString icommon__keywordValue;

/// @brief Class wrapper for type icommon__keywordValue derived from xsd__anyType.
///
/// @note Use option -P to remove this class.
class icommon__keywordValue__ : public xsd__anyType
{ public:
    icommon__keywordValue                __item;                       
};

/// @brief "http://inspire.ec.europa.eu/schemas/common/1.0":euLanguageISO6392B is a simpleType restriction of type "http://inspire.ec.europa.eu/schemas/common/1.0":languageISO6392B.
///
/// @note The enum values are prefixed with "icommon__euLanguageISO6392B__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum icommon__euLanguageISO6392B
{
	icommon__euLanguageISO6392B__bul,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":languageISO6392B value="bul"
	icommon__euLanguageISO6392B__cze,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":languageISO6392B value="cze"
	icommon__euLanguageISO6392B__dan,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":languageISO6392B value="dan"
	icommon__euLanguageISO6392B__dut,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":languageISO6392B value="dut"
	icommon__euLanguageISO6392B__eng,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":languageISO6392B value="eng"
	icommon__euLanguageISO6392B__est,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":languageISO6392B value="est"
	icommon__euLanguageISO6392B__fin,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":languageISO6392B value="fin"
	icommon__euLanguageISO6392B__fre,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":languageISO6392B value="fre"
	icommon__euLanguageISO6392B__ger,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":languageISO6392B value="ger"
	icommon__euLanguageISO6392B__gre,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":languageISO6392B value="gre"
	icommon__euLanguageISO6392B__hun,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":languageISO6392B value="hun"
	icommon__euLanguageISO6392B__gle,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":languageISO6392B value="gle"
	icommon__euLanguageISO6392B__ita,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":languageISO6392B value="ita"
	icommon__euLanguageISO6392B__lav,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":languageISO6392B value="lav"
	icommon__euLanguageISO6392B__lit,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":languageISO6392B value="lit"
	icommon__euLanguageISO6392B__mlt,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":languageISO6392B value="mlt"
	icommon__euLanguageISO6392B__pol,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":languageISO6392B value="pol"
	icommon__euLanguageISO6392B__por,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":languageISO6392B value="por"
	icommon__euLanguageISO6392B__rum,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":languageISO6392B value="rum"
	icommon__euLanguageISO6392B__slo,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":languageISO6392B value="slo"
	icommon__euLanguageISO6392B__slv,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":languageISO6392B value="slv"
	icommon__euLanguageISO6392B__spa,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":languageISO6392B value="spa"
	icommon__euLanguageISO6392B__swe,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":languageISO6392B value="swe"
};

/// @brief Class wrapper for type enum icommon__euLanguageISO6392B derived from xsd__anyType.
///
/// @note Use option -P to remove this class.
class icommon__euLanguageISO6392B_ : public xsd__anyType
{ public:
    enum icommon__euLanguageISO6392B     __item;                       
};

/// @brief "http://inspire.ec.europa.eu/schemas/common/1.0":euLanguageIETF is a simpleType restriction of type "http://inspire.ec.europa.eu/schemas/common/1.0":languageIETF.
///
/// @note The enum values are prefixed with "icommon__euLanguageIETF__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum icommon__euLanguageIETF
{
	icommon__euLanguageIETF__bg,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":languageIETF value="bg"
	icommon__euLanguageIETF__bg_BG,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":languageIETF value="bg-BG"
	icommon__euLanguageIETF__cs,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":languageIETF value="cs"
	icommon__euLanguageIETF__cs_CZ,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":languageIETF value="cs-CZ"
	icommon__euLanguageIETF__da,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":languageIETF value="da"
	icommon__euLanguageIETF__da_DK,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":languageIETF value="da-DK"
	icommon__euLanguageIETF__nl,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":languageIETF value="nl"
	icommon__euLanguageIETF__nl_NL,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":languageIETF value="nl-NL"
	icommon__euLanguageIETF__en,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":languageIETF value="en"
	icommon__euLanguageIETF__en_GB,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":languageIETF value="en-GB"
	icommon__euLanguageIETF__et,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":languageIETF value="et"
	icommon__euLanguageIETF__et_EE,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":languageIETF value="et-EE"
	icommon__euLanguageIETF__fi,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":languageIETF value="fi"
	icommon__euLanguageIETF__fi_FI,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":languageIETF value="fi-FI"
	icommon__euLanguageIETF__fr,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":languageIETF value="fr"
	icommon__euLanguageIETF__fr_FR,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":languageIETF value="fr-FR"
	icommon__euLanguageIETF__de,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":languageIETF value="de"
	icommon__euLanguageIETF__de_DE,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":languageIETF value="de-DE"
	icommon__euLanguageIETF__de_AT,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":languageIETF value="de-AT"
	icommon__euLanguageIETF__el,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":languageIETF value="el"
	icommon__euLanguageIETF__el_GR,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":languageIETF value="el-GR"
	icommon__euLanguageIETF__hu,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":languageIETF value="hu"
	icommon__euLanguageIETF__hu_HU,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":languageIETF value="hu-HU"
	icommon__euLanguageIETF__ga,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":languageIETF value="ga"
	icommon__euLanguageIETF__ga_IE,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":languageIETF value="ga-IE"
	icommon__euLanguageIETF__it,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":languageIETF value="it"
	icommon__euLanguageIETF__it_IT,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":languageIETF value="it-IT"
	icommon__euLanguageIETF__lv,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":languageIETF value="lv"
	icommon__euLanguageIETF__lv_LV,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":languageIETF value="lv-LV"
	icommon__euLanguageIETF__lt,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":languageIETF value="lt"
	icommon__euLanguageIETF__lt_LT,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":languageIETF value="lt-LT"
	icommon__euLanguageIETF__mt,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":languageIETF value="mt"
	icommon__euLanguageIETF__mt_MT,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":languageIETF value="mt-MT"
	icommon__euLanguageIETF__pl,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":languageIETF value="pl"
	icommon__euLanguageIETF__pl_PL,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":languageIETF value="pl-PL"
	icommon__euLanguageIETF__pt,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":languageIETF value="pt"
	icommon__euLanguageIETF__pt_PT,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":languageIETF value="pt-PT"
	icommon__euLanguageIETF__ro,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":languageIETF value="ro"
	icommon__euLanguageIETF__ro_RO,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":languageIETF value="ro-RO"
	icommon__euLanguageIETF__sk,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":languageIETF value="sk"
	icommon__euLanguageIETF__sk_SK,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":languageIETF value="sk-SK"
	icommon__euLanguageIETF__sl,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":languageIETF value="sl"
	icommon__euLanguageIETF__sl_SI,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":languageIETF value="sl-SI"
	icommon__euLanguageIETF__es,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":languageIETF value="es"
	icommon__euLanguageIETF__es_ES,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":languageIETF value="es-ES"
	icommon__euLanguageIETF__sv,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":languageIETF value="sv"
	icommon__euLanguageIETF__sv_SE,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":languageIETF value="sv-SE"
};

/// @brief Class wrapper for type enum icommon__euLanguageIETF derived from xsd__anyType.
///
/// @note Use option -P to remove this class.
class icommon__euLanguageIETF_ : public xsd__anyType
{ public:
    enum icommon__euLanguageIETF         __item;                       
};


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://www.opengis.net/wfs/2.0                                           *
 *                                                                            *
\******************************************************************************/

/// @brief "http://www.opengis.net/wfs/2.0":BaseRequestType is an abstract complexType.
///
/// This type is extended by:
/// - "http://www.opengis.net/wfs/2.0":DescribeFeatureTypeType as wfs__DescribeFeatureTypeType
/// - "http://www.opengis.net/wfs/2.0":GetPropertyValueType as wfs__GetPropertyValueType
/// - "http://www.opengis.net/wfs/2.0":GetFeatureType as wfs__GetFeatureType
/// - "http://www.opengis.net/wfs/2.0":ListStoredQueriesType as wfs__ListStoredQueriesType
/// - "http://www.opengis.net/wfs/2.0":DescribeStoredQueriesType as wfs__DescribeStoredQueriesType
/// - "http://www.opengis.net/wfs/2.0":CreateStoredQueryType as wfs__CreateStoredQueryType
/// - "http://www.opengis.net/wfs/2.0":LockFeatureType as wfs__LockFeatureType
/// - "http://www.opengis.net/wfs/2.0":TransactionType as wfs__TransactionType
///
/// @note class wfs__BaseRequestType operations:
/// - wfs__BaseRequestType* soap_new_wfs__BaseRequestType(soap*) allocate and default initialize
/// - wfs__BaseRequestType* soap_new_wfs__BaseRequestType(soap*, int num) allocate and default initialize an array
/// - wfs__BaseRequestType* soap_new_req_wfs__BaseRequestType(soap*, ...) allocate, set required members
/// - wfs__BaseRequestType* soap_new_set_wfs__BaseRequestType(soap*, ...) allocate, set all public members
/// - wfs__BaseRequestType::soap_default(soap*) default initialize members
/// - int soap_read_wfs__BaseRequestType(soap*, wfs__BaseRequestType*) deserialize from a stream
/// - int soap_write_wfs__BaseRequestType(soap*, wfs__BaseRequestType*) serialize to a stream
/// - wfs__BaseRequestType* wfs__BaseRequestType::soap_dup(soap*) returns deep copy of wfs__BaseRequestType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - wfs__BaseRequestType::soap_del() deep deletes wfs__BaseRequestType data members, use only after wfs__BaseRequestType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int wfs__BaseRequestType::soap_type() returns SOAP_TYPE_wfs__BaseRequestType or derived type identifier
class wfs__BaseRequestType : public xsd__anyType
{ public:
/// Attribute "service" of type xs:string.
  @ std::string                          service                        1 == "WFS";	///< Required attribute with fixed value="WFS".
/// Attribute "version" of type "http://www.opengis.net/wfs/2.0":VersionStringType.
  @ wfs__VersionStringType               version                        1;	///< Required attribute.
/// Attribute "handle" of type xs:string.
  @ std::string*                         handle                         0;	///< Optional attribute.
};

/// @brief "http://www.opengis.net/wfs/2.0":QueryPropertyType is a complexType.
///
/// @note class wfs__QueryPropertyType operations:
/// - wfs__QueryPropertyType* soap_new_wfs__QueryPropertyType(soap*) allocate and default initialize
/// - wfs__QueryPropertyType* soap_new_wfs__QueryPropertyType(soap*, int num) allocate and default initialize an array
/// - wfs__QueryPropertyType* soap_new_req_wfs__QueryPropertyType(soap*, ...) allocate, set required members
/// - wfs__QueryPropertyType* soap_new_set_wfs__QueryPropertyType(soap*, ...) allocate, set all public members
/// - wfs__QueryPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_wfs__QueryPropertyType(soap*, wfs__QueryPropertyType*) deserialize from a stream
/// - int soap_write_wfs__QueryPropertyType(soap*, wfs__QueryPropertyType*) serialize to a stream
/// - wfs__QueryPropertyType* wfs__QueryPropertyType::soap_dup(soap*) returns deep copy of wfs__QueryPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - wfs__QueryPropertyType::soap_del() deep deletes wfs__QueryPropertyType data members, use only after wfs__QueryPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int wfs__QueryPropertyType::soap_type() returns SOAP_TYPE_wfs__QueryPropertyType or derived type identifier
class wfs__QueryPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    struct __wfs__QueryPropertyType_sequence
    {
/// Element reference "http://www.opengis.net/wfs/2.0:""http://www.opengis.net/wfs/2.0":Query.
    wfs__QueryType*                      Query                          1;	///< Required element.
    }                                   *__QueryPropertyType_sequence   0;
//  END OF SEQUENCE
};

/// @brief "http://www.opengis.net/wfs/2.0":StoredQueryPropertyType is a complexType.
///
/// @note class wfs__StoredQueryPropertyType operations:
/// - wfs__StoredQueryPropertyType* soap_new_wfs__StoredQueryPropertyType(soap*) allocate and default initialize
/// - wfs__StoredQueryPropertyType* soap_new_wfs__StoredQueryPropertyType(soap*, int num) allocate and default initialize an array
/// - wfs__StoredQueryPropertyType* soap_new_req_wfs__StoredQueryPropertyType(soap*, ...) allocate, set required members
/// - wfs__StoredQueryPropertyType* soap_new_set_wfs__StoredQueryPropertyType(soap*, ...) allocate, set all public members
/// - wfs__StoredQueryPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_wfs__StoredQueryPropertyType(soap*, wfs__StoredQueryPropertyType*) deserialize from a stream
/// - int soap_write_wfs__StoredQueryPropertyType(soap*, wfs__StoredQueryPropertyType*) serialize to a stream
/// - wfs__StoredQueryPropertyType* wfs__StoredQueryPropertyType::soap_dup(soap*) returns deep copy of wfs__StoredQueryPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - wfs__StoredQueryPropertyType::soap_del() deep deletes wfs__StoredQueryPropertyType data members, use only after wfs__StoredQueryPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int wfs__StoredQueryPropertyType::soap_type() returns SOAP_TYPE_wfs__StoredQueryPropertyType or derived type identifier
class wfs__StoredQueryPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    struct __wfs__StoredQueryPropertyType_sequence
    {
/// Element reference "http://www.opengis.net/wfs/2.0:""http://www.opengis.net/wfs/2.0":StoredQuery.
    wfs__StoredQueryType*                StoredQuery                    1;	///< Required element.
    }                                   *__StoredQueryPropertyType_sequence 0;
//  END OF SEQUENCE
};

/// @brief "http://www.opengis.net/wfs/2.0":ParameterType is a complexType.
///
/// @note class wfs__ParameterType operations:
/// - wfs__ParameterType* soap_new_wfs__ParameterType(soap*) allocate and default initialize
/// - wfs__ParameterType* soap_new_wfs__ParameterType(soap*, int num) allocate and default initialize an array
/// - wfs__ParameterType* soap_new_req_wfs__ParameterType(soap*, ...) allocate, set required members
/// - wfs__ParameterType* soap_new_set_wfs__ParameterType(soap*, ...) allocate, set all public members
/// - wfs__ParameterType::soap_default(soap*) default initialize members
/// - int soap_read_wfs__ParameterType(soap*, wfs__ParameterType*) deserialize from a stream
/// - int soap_write_wfs__ParameterType(soap*, wfs__ParameterType*) serialize to a stream
/// - wfs__ParameterType* wfs__ParameterType::soap_dup(soap*) returns deep copy of wfs__ParameterType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - wfs__ParameterType::soap_del() deep deletes wfs__ParameterType data members, use only after wfs__ParameterType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int wfs__ParameterType::soap_type() returns SOAP_TYPE_wfs__ParameterType or derived type identifier
class wfs__ParameterType : public xsd__anyType
{ public:
/// <any namespace="##other" minOccurs="0" maxOccurs="1">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
    _XML                                 __any                         0;	///< Store any element content in XML string.
/// Attribute "name" of type xs:string.
  @ std::string                          name                           1;	///< Required attribute.
/// Mixed content.
/// @note Mixed content is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for DOM (soap_dom_element) to store mixed content.
    _XML                                 __mixed                       0;	///< Store mixed content as an xsd:any (an XML string by default).
};

/// @brief "http://www.opengis.net/wfs/2.0":FeatureTypeListType is a complexType.
///
/// @note class wfs__FeatureTypeListType operations:
/// - wfs__FeatureTypeListType* soap_new_wfs__FeatureTypeListType(soap*) allocate and default initialize
/// - wfs__FeatureTypeListType* soap_new_wfs__FeatureTypeListType(soap*, int num) allocate and default initialize an array
/// - wfs__FeatureTypeListType* soap_new_req_wfs__FeatureTypeListType(soap*, ...) allocate, set required members
/// - wfs__FeatureTypeListType* soap_new_set_wfs__FeatureTypeListType(soap*, ...) allocate, set all public members
/// - wfs__FeatureTypeListType::soap_default(soap*) default initialize members
/// - int soap_read_wfs__FeatureTypeListType(soap*, wfs__FeatureTypeListType*) deserialize from a stream
/// - int soap_write_wfs__FeatureTypeListType(soap*, wfs__FeatureTypeListType*) serialize to a stream
/// - wfs__FeatureTypeListType* wfs__FeatureTypeListType::soap_dup(soap*) returns deep copy of wfs__FeatureTypeListType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - wfs__FeatureTypeListType::soap_del() deep deletes wfs__FeatureTypeListType data members, use only after wfs__FeatureTypeListType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int wfs__FeatureTypeListType::soap_type() returns SOAP_TYPE_wfs__FeatureTypeListType or derived type identifier
class wfs__FeatureTypeListType : public xsd__anyType
{ public:
/// Vector of wfs__FeatureTypeType* of length 1..unbounded.
    std::vector<wfs__FeatureTypeType*  > FeatureType                    1;	///< Multiple elements.
};

/// @brief "http://www.opengis.net/wfs/2.0":FeatureTypeType is a complexType.
///
/// @note class wfs__FeatureTypeType operations:
/// - wfs__FeatureTypeType* soap_new_wfs__FeatureTypeType(soap*) allocate and default initialize
/// - wfs__FeatureTypeType* soap_new_wfs__FeatureTypeType(soap*, int num) allocate and default initialize an array
/// - wfs__FeatureTypeType* soap_new_req_wfs__FeatureTypeType(soap*, ...) allocate, set required members
/// - wfs__FeatureTypeType* soap_new_set_wfs__FeatureTypeType(soap*, ...) allocate, set all public members
/// - wfs__FeatureTypeType::soap_default(soap*) default initialize members
/// - int soap_read_wfs__FeatureTypeType(soap*, wfs__FeatureTypeType*) deserialize from a stream
/// - int soap_write_wfs__FeatureTypeType(soap*, wfs__FeatureTypeType*) serialize to a stream
/// - wfs__FeatureTypeType* wfs__FeatureTypeType::soap_dup(soap*) returns deep copy of wfs__FeatureTypeType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - wfs__FeatureTypeType::soap_del() deep deletes wfs__FeatureTypeType data members, use only after wfs__FeatureTypeType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int wfs__FeatureTypeType::soap_type() returns SOAP_TYPE_wfs__FeatureTypeType or derived type identifier
class wfs__FeatureTypeType : public xsd__anyType
{ public:
/// Element "Name" of type xs:QName.
    xsd__QName                           Name                           1;	///< Required element.
/// Vector of _wfs__Title* element refs of length 0..unbounded.
    std::vector<_wfs__Title*           > Title                          0;	///< Multiple elements.
/// Vector of _wfs__Abstract* element refs of length 0..unbounded.
    std::vector<_wfs__Abstract*        > Abstract                       0;	///< Multiple elements.
/// Vector of ows__KeywordsType* element refs of length 0..unbounded.
    std::vector<ows__KeywordsType*     > ows__Keywords                  0;	///< Multiple elements.
//  BEGIN CHOICE <xs:choice>
/// @note <xs:choice> with embedded <xs:sequence> or <xs:group> prevents the use of a union for <xs:choice>. Instead of being members of a union, the following members are declared optional. Only one sequence of members should be non-NULL by choice.
//  BEGIN SEQUENCE <xs:sequence>
/// Element "DefaultCRS" of type xs:anyURI.
    xsd__anyURI*                         DefaultCRS                    ;	///< Choice of element (one of multiple choices).
/// Vector of xsd__anyURI of length 0..unbounded.
    std::vector<xsd__anyURI            > OtherCRS                      ;	///< Choice of optional element (one of multiple choices).
//  END OF SEQUENCE
/// @note class _wfs__FeatureTypeType_NoCRS operations:
/// - _wfs__FeatureTypeType_NoCRS* soap_new__wfs__FeatureTypeType_NoCRS(soap*) allocate and default initialize
/// - _wfs__FeatureTypeType_NoCRS* soap_new__wfs__FeatureTypeType_NoCRS(soap*, int num) allocate and default initialize an array
/// - _wfs__FeatureTypeType_NoCRS* soap_new_req__wfs__FeatureTypeType_NoCRS(soap*, ...) allocate, set required members
/// - _wfs__FeatureTypeType_NoCRS* soap_new_set__wfs__FeatureTypeType_NoCRS(soap*, ...) allocate, set all public members
/// - _wfs__FeatureTypeType_NoCRS::soap_default(soap*) default initialize members
/// - int soap_read__wfs__FeatureTypeType_NoCRS(soap*, _wfs__FeatureTypeType_NoCRS*) deserialize from a stream
/// - int soap_write__wfs__FeatureTypeType_NoCRS(soap*, _wfs__FeatureTypeType_NoCRS*) serialize to a stream
/// - _wfs__FeatureTypeType_NoCRS* _wfs__FeatureTypeType_NoCRS::soap_dup(soap*) returns deep copy of _wfs__FeatureTypeType_NoCRS, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _wfs__FeatureTypeType_NoCRS::soap_del() deep deletes _wfs__FeatureTypeType_NoCRS data members, use only after _wfs__FeatureTypeType_NoCRS::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _wfs__FeatureTypeType_NoCRS::soap_type() returns SOAP_TYPE__wfs__FeatureTypeType_NoCRS or derived type identifier
    class _wfs__FeatureTypeType_NoCRS
    { public:
    }                                   *NoCRS                         ;	///< Choice of element (one of multiple choices).
//  END OF CHOICE
/// Element "OutputFormats" of type "http://www.opengis.net/wfs/2.0":OutputFormatListType.
    wfs__OutputFormatListType*           OutputFormats                  0;	///< Optional element.
/// Vector of ows__WGS84BoundingBoxType* element refs of length 0..unbounded.
    std::vector<ows__WGS84BoundingBoxType*> ows__WGS84BoundingBox          0;	///< Multiple elements.
/// Vector of wfs__MetadataURLType* of length 0..unbounded.
    std::vector<wfs__MetadataURLType*  > MetadataURL                    0;	///< Multiple elements.
/// Element "ExtendedDescription" of type "http://www.opengis.net/wfs/2.0":ExtendedDescriptionType.
    wfs__ExtendedDescriptionType*        ExtendedDescription            0;	///< Optional element.
};

/// @brief "http://www.opengis.net/wfs/2.0":OutputFormatListType is a complexType.
///
/// @note class wfs__OutputFormatListType operations:
/// - wfs__OutputFormatListType* soap_new_wfs__OutputFormatListType(soap*) allocate and default initialize
/// - wfs__OutputFormatListType* soap_new_wfs__OutputFormatListType(soap*, int num) allocate and default initialize an array
/// - wfs__OutputFormatListType* soap_new_req_wfs__OutputFormatListType(soap*, ...) allocate, set required members
/// - wfs__OutputFormatListType* soap_new_set_wfs__OutputFormatListType(soap*, ...) allocate, set all public members
/// - wfs__OutputFormatListType::soap_default(soap*) default initialize members
/// - int soap_read_wfs__OutputFormatListType(soap*, wfs__OutputFormatListType*) deserialize from a stream
/// - int soap_write_wfs__OutputFormatListType(soap*, wfs__OutputFormatListType*) serialize to a stream
/// - wfs__OutputFormatListType* wfs__OutputFormatListType::soap_dup(soap*) returns deep copy of wfs__OutputFormatListType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - wfs__OutputFormatListType::soap_del() deep deletes wfs__OutputFormatListType data members, use only after wfs__OutputFormatListType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int wfs__OutputFormatListType::soap_type() returns SOAP_TYPE_wfs__OutputFormatListType or derived type identifier
class wfs__OutputFormatListType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence maxOccurs="unbounded">
    std::vector<
    struct __wfs__OutputFormatListType_sequence
    {
/// Element "Format" of type xs:string.
    std::string                          Format                         1;	///< Required element.
    }>                                   __OutputFormatListType_sequence;
//  END OF SEQUENCE
};

/// @brief "http://www.opengis.net/wfs/2.0":MetadataURLType is a complexType.
///
/// @note class wfs__MetadataURLType operations:
/// - wfs__MetadataURLType* soap_new_wfs__MetadataURLType(soap*) allocate and default initialize
/// - wfs__MetadataURLType* soap_new_wfs__MetadataURLType(soap*, int num) allocate and default initialize an array
/// - wfs__MetadataURLType* soap_new_req_wfs__MetadataURLType(soap*, ...) allocate, set required members
/// - wfs__MetadataURLType* soap_new_set_wfs__MetadataURLType(soap*, ...) allocate, set all public members
/// - wfs__MetadataURLType::soap_default(soap*) default initialize members
/// - int soap_read_wfs__MetadataURLType(soap*, wfs__MetadataURLType*) deserialize from a stream
/// - int soap_write_wfs__MetadataURLType(soap*, wfs__MetadataURLType*) serialize to a stream
/// - wfs__MetadataURLType* wfs__MetadataURLType::soap_dup(soap*) returns deep copy of wfs__MetadataURLType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - wfs__MetadataURLType::soap_del() deep deletes wfs__MetadataURLType data members, use only after wfs__MetadataURLType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int wfs__MetadataURLType::soap_type() returns SOAP_TYPE_wfs__MetadataURLType or derived type identifier
class wfs__MetadataURLType : public xsd__anyType
{ public:
/// Attribute "about" of type xs:anyURI.
  @ xsd__anyURI*                         about                          0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
  @ enum xlink__typeType                 xlink__type                    0 == xlink__typeType__simple;	///< Optional attribute with fixed value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
  @ xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
  @ xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
  @ xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
  @ xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
  @ enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
  @ enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.opengis.net/wfs/2.0":ExtendedDescriptionType is a complexType.
///
/// @note class wfs__ExtendedDescriptionType operations:
/// - wfs__ExtendedDescriptionType* soap_new_wfs__ExtendedDescriptionType(soap*) allocate and default initialize
/// - wfs__ExtendedDescriptionType* soap_new_wfs__ExtendedDescriptionType(soap*, int num) allocate and default initialize an array
/// - wfs__ExtendedDescriptionType* soap_new_req_wfs__ExtendedDescriptionType(soap*, ...) allocate, set required members
/// - wfs__ExtendedDescriptionType* soap_new_set_wfs__ExtendedDescriptionType(soap*, ...) allocate, set all public members
/// - wfs__ExtendedDescriptionType::soap_default(soap*) default initialize members
/// - int soap_read_wfs__ExtendedDescriptionType(soap*, wfs__ExtendedDescriptionType*) deserialize from a stream
/// - int soap_write_wfs__ExtendedDescriptionType(soap*, wfs__ExtendedDescriptionType*) serialize to a stream
/// - wfs__ExtendedDescriptionType* wfs__ExtendedDescriptionType::soap_dup(soap*) returns deep copy of wfs__ExtendedDescriptionType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - wfs__ExtendedDescriptionType::soap_del() deep deletes wfs__ExtendedDescriptionType data members, use only after wfs__ExtendedDescriptionType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int wfs__ExtendedDescriptionType::soap_type() returns SOAP_TYPE_wfs__ExtendedDescriptionType or derived type identifier
class wfs__ExtendedDescriptionType : public xsd__anyType
{ public:
/// Vector of wfs__ElementType* element refs of length 1..unbounded.
    std::vector<wfs__ElementType*      > Element                        1;	///< Multiple elements.
};

/// @brief "http://www.opengis.net/wfs/2.0":ElementType is a complexType.
///
/// @note class wfs__ElementType operations:
/// - wfs__ElementType* soap_new_wfs__ElementType(soap*) allocate and default initialize
/// - wfs__ElementType* soap_new_wfs__ElementType(soap*, int num) allocate and default initialize an array
/// - wfs__ElementType* soap_new_req_wfs__ElementType(soap*, ...) allocate, set required members
/// - wfs__ElementType* soap_new_set_wfs__ElementType(soap*, ...) allocate, set all public members
/// - wfs__ElementType::soap_default(soap*) default initialize members
/// - int soap_read_wfs__ElementType(soap*, wfs__ElementType*) deserialize from a stream
/// - int soap_write_wfs__ElementType(soap*, wfs__ElementType*) serialize to a stream
/// - wfs__ElementType* wfs__ElementType::soap_dup(soap*) returns deep copy of wfs__ElementType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - wfs__ElementType::soap_del() deep deletes wfs__ElementType data members, use only after wfs__ElementType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int wfs__ElementType::soap_type() returns SOAP_TYPE_wfs__ElementType or derived type identifier
class wfs__ElementType : public xsd__anyType
{ public:
/// Element reference "http://www.opengis.net/wfs/2.0:""http://www.opengis.net/ows/1.1":Metadata.
    ows__MetadataType*                   ows__Metadata                  1;	///< Required element.
/// Element reference "http://www.opengis.net/wfs/2.0:""http://www.opengis.net/wfs/2.0":ValueList.
    wfs__ValueListType*                  ValueList                      1;	///< Required element.
/// Attribute "name" of type xs:string.
  @ std::string                          name                           1;	///< Required attribute.
/// Attribute "type" of type xs:QName.
  @ xsd__QName                           type                           1;	///< Required attribute.
};

/// @brief "http://www.opengis.net/wfs/2.0":ValueListType is a complexType.
///
/// @note class wfs__ValueListType operations:
/// - wfs__ValueListType* soap_new_wfs__ValueListType(soap*) allocate and default initialize
/// - wfs__ValueListType* soap_new_wfs__ValueListType(soap*, int num) allocate and default initialize an array
/// - wfs__ValueListType* soap_new_req_wfs__ValueListType(soap*, ...) allocate, set required members
/// - wfs__ValueListType* soap_new_set_wfs__ValueListType(soap*, ...) allocate, set all public members
/// - wfs__ValueListType::soap_default(soap*) default initialize members
/// - int soap_read_wfs__ValueListType(soap*, wfs__ValueListType*) deserialize from a stream
/// - int soap_write_wfs__ValueListType(soap*, wfs__ValueListType*) serialize to a stream
/// - wfs__ValueListType* wfs__ValueListType::soap_dup(soap*) returns deep copy of wfs__ValueListType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - wfs__ValueListType::soap_del() deep deletes wfs__ValueListType data members, use only after wfs__ValueListType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int wfs__ValueListType::soap_type() returns SOAP_TYPE_wfs__ValueListType or derived type identifier
class wfs__ValueListType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence maxOccurs="unbounded">
    std::vector<
    struct __wfs__ValueListType_sequence
    {
/// Element reference "http://www.opengis.net/wfs/2.0:""http://www.opengis.net/wfs/2.0":Value.
    xsd__anyType*                        Value                          1;	///< Required element.
    }>                                   __ValueListType_sequence      ;
//  END OF SEQUENCE
};

/// @brief "http://www.opengis.net/wfs/2.0":ValueCollectionType is a complexType.
///
/// @note class wfs__ValueCollectionType operations:
/// - wfs__ValueCollectionType* soap_new_wfs__ValueCollectionType(soap*) allocate and default initialize
/// - wfs__ValueCollectionType* soap_new_wfs__ValueCollectionType(soap*, int num) allocate and default initialize an array
/// - wfs__ValueCollectionType* soap_new_req_wfs__ValueCollectionType(soap*, ...) allocate, set required members
/// - wfs__ValueCollectionType* soap_new_set_wfs__ValueCollectionType(soap*, ...) allocate, set all public members
/// - wfs__ValueCollectionType::soap_default(soap*) default initialize members
/// - int soap_read_wfs__ValueCollectionType(soap*, wfs__ValueCollectionType*) deserialize from a stream
/// - int soap_write_wfs__ValueCollectionType(soap*, wfs__ValueCollectionType*) serialize to a stream
/// - wfs__ValueCollectionType* wfs__ValueCollectionType::soap_dup(soap*) returns deep copy of wfs__ValueCollectionType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - wfs__ValueCollectionType::soap_del() deep deletes wfs__ValueCollectionType data members, use only after wfs__ValueCollectionType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int wfs__ValueCollectionType::soap_type() returns SOAP_TYPE_wfs__ValueCollectionType or derived type identifier
class wfs__ValueCollectionType : public xsd__anyType
{ public:
/// Vector of wfs__MemberPropertyType* element refs of length 0..unbounded.
    std::vector<wfs__MemberPropertyType*> member                         0;	///< Multiple elements.
/// Element reference "http://www.opengis.net/wfs/2.0:""http://www.opengis.net/wfs/2.0":additionalValues.
    _wfs__additionalValues*              additionalValues               0;	///< Optional element.
/// Element reference "http://www.opengis.net/wfs/2.0:""http://www.opengis.net/wfs/2.0":truncatedResponse.
    _wfs__truncatedResponse*             truncatedResponse              0;	///< Optional element.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/wfs/2.0":StandardResponseParameters">.
/// Attribute "timeStamp" of type xs:dateTime.
  @ time_t                               timeStamp                      1;	///< Required attribute.
/// Attribute "numberMatched" of type "http://www.opengis.net/wfs/2.0":nonNegativeIntegerOrUnknown.
  @ wfs__nonNegativeIntegerOrUnknown     numberMatched                  1;	///< Required attribute.
/// Attribute "numberReturned" of type xs:nonNegativeInteger.
  @ xsd__nonNegativeInteger              numberReturned                 1;	///< Required attribute.
/// Attribute "next" of type xs:anyURI.
  @ xsd__anyURI*                         next                           0;	///< Optional attribute.
/// Attribute "previous" of type xs:anyURI.
  @ xsd__anyURI*                         previous                       0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.opengis.net/wfs/2.0":MemberPropertyType is a complexType.
///
/// @note class wfs__MemberPropertyType operations:
/// - wfs__MemberPropertyType* soap_new_wfs__MemberPropertyType(soap*) allocate and default initialize
/// - wfs__MemberPropertyType* soap_new_wfs__MemberPropertyType(soap*, int num) allocate and default initialize an array
/// - wfs__MemberPropertyType* soap_new_req_wfs__MemberPropertyType(soap*, ...) allocate, set required members
/// - wfs__MemberPropertyType* soap_new_set_wfs__MemberPropertyType(soap*, ...) allocate, set all public members
/// - wfs__MemberPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_wfs__MemberPropertyType(soap*, wfs__MemberPropertyType*) deserialize from a stream
/// - int soap_write_wfs__MemberPropertyType(soap*, wfs__MemberPropertyType*) serialize to a stream
/// - wfs__MemberPropertyType* wfs__MemberPropertyType::soap_dup(soap*) returns deep copy of wfs__MemberPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - wfs__MemberPropertyType::soap_del() deep deletes wfs__MemberPropertyType data members, use only after wfs__MemberPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int wfs__MemberPropertyType::soap_type() returns SOAP_TYPE_wfs__MemberPropertyType or derived type identifier
class wfs__MemberPropertyType : public xsd__anyType
{ public:
//  BEGIN CHOICE <xs:choice minOccurs="0">
  $ int                                  __union_MemberPropertyType     0;	///< Union _wfs__union_MemberPropertyType selector: set to SOAP_UNION__wfs__union_MemberPropertyType_<fieldname> or 0 to omit
/// Union for choice in wfs__MemberPropertyType.
    union _wfs__union_MemberPropertyType
    {
/// <any namespace="##other">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
    _XML                                 __any                         0;	///< Store any element content in XML string.
/// Element reference "http://www.opengis.net/wfs/2.0:""http://www.opengis.net/wfs/2.0":Tuple.
    wfs__TupleType*                      Tuple                         ;	///< Choice of element (one of multiple choices).
//  BEGIN SUBSTITUTIONS <xs:element substitutionGroup="SimpleFeatureCollection"> with choice of elements to substitute:
//    <FeatureCollection>
/// Element reference "http://www.opengis.net/wfs/2.0:""http://www.opengis.net/wfs/2.0":SimpleFeatureCollection.
    wfs__SimpleFeatureCollectionType*    SimpleFeatureCollection       ;	///< Choice of element (one of multiple choices).
/// Element "http://www.opengis.net/wfs/2.0":FeatureCollection.
    wfs__FeatureCollectionType*          FeatureCollection             ;	///< Choice of element (one of multiple choices).
//  END OF SUBSTITUTIONS
    }                                    union_MemberPropertyType      ;
//  END OF CHOICE
/// Attribute "state" of type "http://www.opengis.net/wfs/2.0":StateValueType.
  @ wfs__StateValueType*                 state                          0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
  @ enum xlink__typeType                 xlink__type                    0 == xlink__typeType__simple;	///< Optional attribute with fixed value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
  @ xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
  @ xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
  @ xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
  @ xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
  @ enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
  @ enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
/// Mixed content.
/// @note Mixed content is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for DOM (soap_dom_element) to store mixed content.
    _XML                                 __mixed                       0;	///< Store mixed content as an xsd:any (an XML string by default).
};

/// @brief "http://www.opengis.net/wfs/2.0":TupleType is a complexType.
///
/// @note class wfs__TupleType operations:
/// - wfs__TupleType* soap_new_wfs__TupleType(soap*) allocate and default initialize
/// - wfs__TupleType* soap_new_wfs__TupleType(soap*, int num) allocate and default initialize an array
/// - wfs__TupleType* soap_new_req_wfs__TupleType(soap*, ...) allocate, set required members
/// - wfs__TupleType* soap_new_set_wfs__TupleType(soap*, ...) allocate, set all public members
/// - wfs__TupleType::soap_default(soap*) default initialize members
/// - int soap_read_wfs__TupleType(soap*, wfs__TupleType*) deserialize from a stream
/// - int soap_write_wfs__TupleType(soap*, wfs__TupleType*) serialize to a stream
/// - wfs__TupleType* wfs__TupleType::soap_dup(soap*) returns deep copy of wfs__TupleType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - wfs__TupleType::soap_del() deep deletes wfs__TupleType data members, use only after wfs__TupleType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int wfs__TupleType::soap_type() returns SOAP_TYPE_wfs__TupleType or derived type identifier
class wfs__TupleType : public xsd__anyType
{ public:
/// Vector of wfs__MemberPropertyType* element refs of length 2..unbounded.
    std::vector<wfs__MemberPropertyType*> member                         2;	///< Multiple elements.
};

/// @brief "http://www.opengis.net/wfs/2.0":SimpleFeatureCollectionType is a complexType.
///
/// This type is extended by:
/// - "http://www.opengis.net/wfs/2.0":FeatureCollectionType as wfs__FeatureCollectionType
///
/// @note class wfs__SimpleFeatureCollectionType operations:
/// - wfs__SimpleFeatureCollectionType* soap_new_wfs__SimpleFeatureCollectionType(soap*) allocate and default initialize
/// - wfs__SimpleFeatureCollectionType* soap_new_wfs__SimpleFeatureCollectionType(soap*, int num) allocate and default initialize an array
/// - wfs__SimpleFeatureCollectionType* soap_new_req_wfs__SimpleFeatureCollectionType(soap*, ...) allocate, set required members
/// - wfs__SimpleFeatureCollectionType* soap_new_set_wfs__SimpleFeatureCollectionType(soap*, ...) allocate, set all public members
/// - wfs__SimpleFeatureCollectionType::soap_default(soap*) default initialize members
/// - int soap_read_wfs__SimpleFeatureCollectionType(soap*, wfs__SimpleFeatureCollectionType*) deserialize from a stream
/// - int soap_write_wfs__SimpleFeatureCollectionType(soap*, wfs__SimpleFeatureCollectionType*) serialize to a stream
/// - wfs__SimpleFeatureCollectionType* wfs__SimpleFeatureCollectionType::soap_dup(soap*) returns deep copy of wfs__SimpleFeatureCollectionType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - wfs__SimpleFeatureCollectionType::soap_del() deep deletes wfs__SimpleFeatureCollectionType data members, use only after wfs__SimpleFeatureCollectionType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int wfs__SimpleFeatureCollectionType::soap_type() returns SOAP_TYPE_wfs__SimpleFeatureCollectionType or derived type identifier
class wfs__SimpleFeatureCollectionType : public xsd__anyType
{ public:
/// Element reference "http://www.opengis.net/wfs/2.0:""http://www.opengis.net/wfs/2.0":boundedBy.
    wfs__EnvelopePropertyType*           boundedBy                      0;	///< Optional element.
/// Vector of wfs__MemberPropertyType* element refs of length 0..unbounded.
    std::vector<wfs__MemberPropertyType*> member                         0;	///< Multiple elements.
};

/// @brief "http://www.opengis.net/wfs/2.0":EnvelopePropertyType is a complexType.
///
/// @note class wfs__EnvelopePropertyType operations:
/// - wfs__EnvelopePropertyType* soap_new_wfs__EnvelopePropertyType(soap*) allocate and default initialize
/// - wfs__EnvelopePropertyType* soap_new_wfs__EnvelopePropertyType(soap*, int num) allocate and default initialize an array
/// - wfs__EnvelopePropertyType* soap_new_req_wfs__EnvelopePropertyType(soap*, ...) allocate, set required members
/// - wfs__EnvelopePropertyType* soap_new_set_wfs__EnvelopePropertyType(soap*, ...) allocate, set all public members
/// - wfs__EnvelopePropertyType::soap_default(soap*) default initialize members
/// - int soap_read_wfs__EnvelopePropertyType(soap*, wfs__EnvelopePropertyType*) deserialize from a stream
/// - int soap_write_wfs__EnvelopePropertyType(soap*, wfs__EnvelopePropertyType*) serialize to a stream
/// - wfs__EnvelopePropertyType* wfs__EnvelopePropertyType::soap_dup(soap*) returns deep copy of wfs__EnvelopePropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - wfs__EnvelopePropertyType::soap_del() deep deletes wfs__EnvelopePropertyType data members, use only after wfs__EnvelopePropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int wfs__EnvelopePropertyType::soap_type() returns SOAP_TYPE_wfs__EnvelopePropertyType or derived type identifier
class wfs__EnvelopePropertyType : public xsd__anyType
{ public:
/// <any namespace="##other">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
    _XML                                 __any                         0;	///< Store any element content in XML string.
};

/// @brief "http://www.opengis.net/wfs/2.0":ListStoredQueriesResponseType is a complexType.
///
/// @note class wfs__ListStoredQueriesResponseType operations:
/// - wfs__ListStoredQueriesResponseType* soap_new_wfs__ListStoredQueriesResponseType(soap*) allocate and default initialize
/// - wfs__ListStoredQueriesResponseType* soap_new_wfs__ListStoredQueriesResponseType(soap*, int num) allocate and default initialize an array
/// - wfs__ListStoredQueriesResponseType* soap_new_req_wfs__ListStoredQueriesResponseType(soap*, ...) allocate, set required members
/// - wfs__ListStoredQueriesResponseType* soap_new_set_wfs__ListStoredQueriesResponseType(soap*, ...) allocate, set all public members
/// - wfs__ListStoredQueriesResponseType::soap_default(soap*) default initialize members
/// - int soap_read_wfs__ListStoredQueriesResponseType(soap*, wfs__ListStoredQueriesResponseType*) deserialize from a stream
/// - int soap_write_wfs__ListStoredQueriesResponseType(soap*, wfs__ListStoredQueriesResponseType*) serialize to a stream
/// - wfs__ListStoredQueriesResponseType* wfs__ListStoredQueriesResponseType::soap_dup(soap*) returns deep copy of wfs__ListStoredQueriesResponseType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - wfs__ListStoredQueriesResponseType::soap_del() deep deletes wfs__ListStoredQueriesResponseType data members, use only after wfs__ListStoredQueriesResponseType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int wfs__ListStoredQueriesResponseType::soap_type() returns SOAP_TYPE_wfs__ListStoredQueriesResponseType or derived type identifier
class wfs__ListStoredQueriesResponseType : public xsd__anyType
{ public:
/// Vector of wfs__StoredQueryListItemType* of length 0..unbounded.
    std::vector<wfs__StoredQueryListItemType*> StoredQuery                    0;	///< Multiple elements.
};

/// @brief "http://www.opengis.net/wfs/2.0":StoredQueryListItemType is a complexType.
///
/// @note class wfs__StoredQueryListItemType operations:
/// - wfs__StoredQueryListItemType* soap_new_wfs__StoredQueryListItemType(soap*) allocate and default initialize
/// - wfs__StoredQueryListItemType* soap_new_wfs__StoredQueryListItemType(soap*, int num) allocate and default initialize an array
/// - wfs__StoredQueryListItemType* soap_new_req_wfs__StoredQueryListItemType(soap*, ...) allocate, set required members
/// - wfs__StoredQueryListItemType* soap_new_set_wfs__StoredQueryListItemType(soap*, ...) allocate, set all public members
/// - wfs__StoredQueryListItemType::soap_default(soap*) default initialize members
/// - int soap_read_wfs__StoredQueryListItemType(soap*, wfs__StoredQueryListItemType*) deserialize from a stream
/// - int soap_write_wfs__StoredQueryListItemType(soap*, wfs__StoredQueryListItemType*) serialize to a stream
/// - wfs__StoredQueryListItemType* wfs__StoredQueryListItemType::soap_dup(soap*) returns deep copy of wfs__StoredQueryListItemType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - wfs__StoredQueryListItemType::soap_del() deep deletes wfs__StoredQueryListItemType data members, use only after wfs__StoredQueryListItemType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int wfs__StoredQueryListItemType::soap_type() returns SOAP_TYPE_wfs__StoredQueryListItemType or derived type identifier
class wfs__StoredQueryListItemType : public xsd__anyType
{ public:
/// Vector of _wfs__Title* element refs of length 0..unbounded.
    std::vector<_wfs__Title*           > Title                          0;	///< Multiple elements.
/// Vector of xsd__QName of length 1..unbounded.
    std::vector<xsd__QName             > ReturnFeatureType              1;	///< Multiple elements.
/// Attribute "id" of type xs:anyURI.
  @ xsd__anyURI                          id                             1;	///< Required attribute.
};

/// @brief "http://www.opengis.net/wfs/2.0":DescribeStoredQueriesResponseType is a complexType.
///
/// @note class wfs__DescribeStoredQueriesResponseType operations:
/// - wfs__DescribeStoredQueriesResponseType* soap_new_wfs__DescribeStoredQueriesResponseType(soap*) allocate and default initialize
/// - wfs__DescribeStoredQueriesResponseType* soap_new_wfs__DescribeStoredQueriesResponseType(soap*, int num) allocate and default initialize an array
/// - wfs__DescribeStoredQueriesResponseType* soap_new_req_wfs__DescribeStoredQueriesResponseType(soap*, ...) allocate, set required members
/// - wfs__DescribeStoredQueriesResponseType* soap_new_set_wfs__DescribeStoredQueriesResponseType(soap*, ...) allocate, set all public members
/// - wfs__DescribeStoredQueriesResponseType::soap_default(soap*) default initialize members
/// - int soap_read_wfs__DescribeStoredQueriesResponseType(soap*, wfs__DescribeStoredQueriesResponseType*) deserialize from a stream
/// - int soap_write_wfs__DescribeStoredQueriesResponseType(soap*, wfs__DescribeStoredQueriesResponseType*) serialize to a stream
/// - wfs__DescribeStoredQueriesResponseType* wfs__DescribeStoredQueriesResponseType::soap_dup(soap*) returns deep copy of wfs__DescribeStoredQueriesResponseType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - wfs__DescribeStoredQueriesResponseType::soap_del() deep deletes wfs__DescribeStoredQueriesResponseType data members, use only after wfs__DescribeStoredQueriesResponseType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int wfs__DescribeStoredQueriesResponseType::soap_type() returns SOAP_TYPE_wfs__DescribeStoredQueriesResponseType or derived type identifier
class wfs__DescribeStoredQueriesResponseType : public xsd__anyType
{ public:
/// Vector of wfs__StoredQueryDescriptionType* of length 0..unbounded.
    std::vector<wfs__StoredQueryDescriptionType*> StoredQueryDescription         0;	///< Multiple elements.
};

/// @brief "http://www.opengis.net/wfs/2.0":StoredQueryDescriptionType is a complexType.
///
/// @note class wfs__StoredQueryDescriptionType operations:
/// - wfs__StoredQueryDescriptionType* soap_new_wfs__StoredQueryDescriptionType(soap*) allocate and default initialize
/// - wfs__StoredQueryDescriptionType* soap_new_wfs__StoredQueryDescriptionType(soap*, int num) allocate and default initialize an array
/// - wfs__StoredQueryDescriptionType* soap_new_req_wfs__StoredQueryDescriptionType(soap*, ...) allocate, set required members
/// - wfs__StoredQueryDescriptionType* soap_new_set_wfs__StoredQueryDescriptionType(soap*, ...) allocate, set all public members
/// - wfs__StoredQueryDescriptionType::soap_default(soap*) default initialize members
/// - int soap_read_wfs__StoredQueryDescriptionType(soap*, wfs__StoredQueryDescriptionType*) deserialize from a stream
/// - int soap_write_wfs__StoredQueryDescriptionType(soap*, wfs__StoredQueryDescriptionType*) serialize to a stream
/// - wfs__StoredQueryDescriptionType* wfs__StoredQueryDescriptionType::soap_dup(soap*) returns deep copy of wfs__StoredQueryDescriptionType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - wfs__StoredQueryDescriptionType::soap_del() deep deletes wfs__StoredQueryDescriptionType data members, use only after wfs__StoredQueryDescriptionType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int wfs__StoredQueryDescriptionType::soap_type() returns SOAP_TYPE_wfs__StoredQueryDescriptionType or derived type identifier
class wfs__StoredQueryDescriptionType : public xsd__anyType
{ public:
/// Vector of _wfs__Title* element refs of length 0..unbounded.
    std::vector<_wfs__Title*           > Title                          0;	///< Multiple elements.
/// Vector of _wfs__Abstract* element refs of length 0..unbounded.
    std::vector<_wfs__Abstract*        > Abstract                       0;	///< Multiple elements.
/// Vector of ows__MetadataType* element refs of length 0..unbounded.
    std::vector<ows__MetadataType*     > ows__Metadata                  0;	///< Multiple elements.
/// Vector of wfs__ParameterExpressionType* of length 0..unbounded.
    std::vector<wfs__ParameterExpressionType*> Parameter                      0;	///< Multiple elements.
/// Vector of wfs__QueryExpressionTextType* of length 1..unbounded.
    std::vector<wfs__QueryExpressionTextType*> QueryExpressionText            1;	///< Multiple elements.
/// Attribute "id" of type xs:anyURI.
  @ xsd__anyURI                          id                             1;	///< Required attribute.
};

/// @brief "http://www.opengis.net/wfs/2.0":ParameterExpressionType is a complexType.
///
/// @note class wfs__ParameterExpressionType operations:
/// - wfs__ParameterExpressionType* soap_new_wfs__ParameterExpressionType(soap*) allocate and default initialize
/// - wfs__ParameterExpressionType* soap_new_wfs__ParameterExpressionType(soap*, int num) allocate and default initialize an array
/// - wfs__ParameterExpressionType* soap_new_req_wfs__ParameterExpressionType(soap*, ...) allocate, set required members
/// - wfs__ParameterExpressionType* soap_new_set_wfs__ParameterExpressionType(soap*, ...) allocate, set all public members
/// - wfs__ParameterExpressionType::soap_default(soap*) default initialize members
/// - int soap_read_wfs__ParameterExpressionType(soap*, wfs__ParameterExpressionType*) deserialize from a stream
/// - int soap_write_wfs__ParameterExpressionType(soap*, wfs__ParameterExpressionType*) serialize to a stream
/// - wfs__ParameterExpressionType* wfs__ParameterExpressionType::soap_dup(soap*) returns deep copy of wfs__ParameterExpressionType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - wfs__ParameterExpressionType::soap_del() deep deletes wfs__ParameterExpressionType data members, use only after wfs__ParameterExpressionType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int wfs__ParameterExpressionType::soap_type() returns SOAP_TYPE_wfs__ParameterExpressionType or derived type identifier
class wfs__ParameterExpressionType : public xsd__anyType
{ public:
/// Vector of _wfs__Title* element refs of length 0..unbounded.
    std::vector<_wfs__Title*           > Title                          0;	///< Multiple elements.
/// Vector of _wfs__Abstract* element refs of length 0..unbounded.
    std::vector<_wfs__Abstract*        > Abstract                       0;	///< Multiple elements.
/// Vector of ows__MetadataType* element refs of length 0..unbounded.
    std::vector<ows__MetadataType*     > ows__Metadata                  0;	///< Multiple elements.
/// Attribute "name" of type xs:string.
  @ std::string                          name                           1;	///< Required attribute.
/// Attribute "type" of type xs:QName.
  @ xsd__QName                           type                           1;	///< Required attribute.
};

/// @brief "http://www.opengis.net/wfs/2.0":QueryExpressionTextType is a complexType.
///
/// @note class wfs__QueryExpressionTextType operations:
/// - wfs__QueryExpressionTextType* soap_new_wfs__QueryExpressionTextType(soap*) allocate and default initialize
/// - wfs__QueryExpressionTextType* soap_new_wfs__QueryExpressionTextType(soap*, int num) allocate and default initialize an array
/// - wfs__QueryExpressionTextType* soap_new_req_wfs__QueryExpressionTextType(soap*, ...) allocate, set required members
/// - wfs__QueryExpressionTextType* soap_new_set_wfs__QueryExpressionTextType(soap*, ...) allocate, set all public members
/// - wfs__QueryExpressionTextType::soap_default(soap*) default initialize members
/// - int soap_read_wfs__QueryExpressionTextType(soap*, wfs__QueryExpressionTextType*) deserialize from a stream
/// - int soap_write_wfs__QueryExpressionTextType(soap*, wfs__QueryExpressionTextType*) serialize to a stream
/// - wfs__QueryExpressionTextType* wfs__QueryExpressionTextType::soap_dup(soap*) returns deep copy of wfs__QueryExpressionTextType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - wfs__QueryExpressionTextType::soap_del() deep deletes wfs__QueryExpressionTextType data members, use only after wfs__QueryExpressionTextType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int wfs__QueryExpressionTextType::soap_type() returns SOAP_TYPE_wfs__QueryExpressionTextType or derived type identifier
class wfs__QueryExpressionTextType : public xsd__anyType
{ public:
//  BEGIN CHOICE <xs:choice>
  $ int                                  __union_QueryExpressionTextType;	///< Union _wfs__union_QueryExpressionTextType selector: set to SOAP_UNION__wfs__union_QueryExpressionTextType_<fieldname>
/// Union for choice in wfs__QueryExpressionTextType.
    union _wfs__union_QueryExpressionTextType
    {
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<_XML                  > *__any                         0;	///< Store any element content in XML string.
//jld WFS2 ISO standard states a query expression is specified using the wfs:Query (7.9.2.2) or wfs:StoredQuery (7.9.3.2) elements.
    std::vector<wfs__StoredQueryType* > *StoredQuery                    0;
    std::vector<wfs__QueryType*       > *Query                          0;
/// <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Size of the array of XML or DOM nodes is 0..unbounded.
//jld    std::vector<_XML                  > *__any                         0;	///< Store any element content in XML string.
    }                                    union_QueryExpressionTextType ;
//  END OF CHOICE
/// Attribute "returnFeatureTypes" of type "http://www.opengis.net/wfs/2.0":ReturnFeatureTypesListType.
  @ wfs__ReturnFeatureTypesListType      returnFeatureTypes             1;	///< Required attribute.
/// Attribute "language" of type xs:anyURI.
  @ xsd__anyURI                          language                       1;	///< Required attribute.
/// Attribute "isPrivate" of type xs:boolean.
  @ bool                                 isPrivate                      0 = false;	///< Optional attribute with default value="false".
/// Mixed content.
/// @note Mixed content is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for DOM (soap_dom_element) to store mixed content.
    _XML                                 __mixed                       0;	///< Store mixed content as an xsd:any (an XML string by default).
};

/// @brief "http://www.opengis.net/wfs/2.0":ExecutionStatusType is a complexType.
///
/// This type is extended by:
/// - "http://www.opengis.net/wfs/2.0":CreateStoredQueryResponseType as wfs__CreateStoredQueryResponseType
///
/// @note class wfs__ExecutionStatusType operations:
/// - wfs__ExecutionStatusType* soap_new_wfs__ExecutionStatusType(soap*) allocate and default initialize
/// - wfs__ExecutionStatusType* soap_new_wfs__ExecutionStatusType(soap*, int num) allocate and default initialize an array
/// - wfs__ExecutionStatusType* soap_new_req_wfs__ExecutionStatusType(soap*, ...) allocate, set required members
/// - wfs__ExecutionStatusType* soap_new_set_wfs__ExecutionStatusType(soap*, ...) allocate, set all public members
/// - wfs__ExecutionStatusType::soap_default(soap*) default initialize members
/// - int soap_read_wfs__ExecutionStatusType(soap*, wfs__ExecutionStatusType*) deserialize from a stream
/// - int soap_write_wfs__ExecutionStatusType(soap*, wfs__ExecutionStatusType*) serialize to a stream
/// - wfs__ExecutionStatusType* wfs__ExecutionStatusType::soap_dup(soap*) returns deep copy of wfs__ExecutionStatusType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - wfs__ExecutionStatusType::soap_del() deep deletes wfs__ExecutionStatusType data members, use only after wfs__ExecutionStatusType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int wfs__ExecutionStatusType::soap_type() returns SOAP_TYPE_wfs__ExecutionStatusType or derived type identifier
class wfs__ExecutionStatusType : public xsd__anyType
{ public:
/// Attribute "status" of type xs:string.
  @ std::string                          status                         0 == "OK";	///< Optional attribute with fixed value="OK".
};

/// @brief "http://www.opengis.net/wfs/2.0":LockFeatureResponseType is a complexType.
///
/// @note class wfs__LockFeatureResponseType operations:
/// - wfs__LockFeatureResponseType* soap_new_wfs__LockFeatureResponseType(soap*) allocate and default initialize
/// - wfs__LockFeatureResponseType* soap_new_wfs__LockFeatureResponseType(soap*, int num) allocate and default initialize an array
/// - wfs__LockFeatureResponseType* soap_new_req_wfs__LockFeatureResponseType(soap*, ...) allocate, set required members
/// - wfs__LockFeatureResponseType* soap_new_set_wfs__LockFeatureResponseType(soap*, ...) allocate, set all public members
/// - wfs__LockFeatureResponseType::soap_default(soap*) default initialize members
/// - int soap_read_wfs__LockFeatureResponseType(soap*, wfs__LockFeatureResponseType*) deserialize from a stream
/// - int soap_write_wfs__LockFeatureResponseType(soap*, wfs__LockFeatureResponseType*) serialize to a stream
/// - wfs__LockFeatureResponseType* wfs__LockFeatureResponseType::soap_dup(soap*) returns deep copy of wfs__LockFeatureResponseType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - wfs__LockFeatureResponseType::soap_del() deep deletes wfs__LockFeatureResponseType data members, use only after wfs__LockFeatureResponseType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int wfs__LockFeatureResponseType::soap_type() returns SOAP_TYPE_wfs__LockFeatureResponseType or derived type identifier
class wfs__LockFeatureResponseType : public xsd__anyType
{ public:
/// Element "FeaturesLocked" of type "http://www.opengis.net/wfs/2.0":FeaturesLockedType.
    wfs__FeaturesLockedType*             FeaturesLocked                 0;	///< Optional element.
/// Element "FeaturesNotLocked" of type "http://www.opengis.net/wfs/2.0":FeaturesNotLockedType.
    wfs__FeaturesNotLockedType*          FeaturesNotLocked              0;	///< Optional element.
/// Attribute "lockId" of type xs:string.
  @ std::string*                         lockId                         0;	///< Optional attribute.
};

/// @brief "http://www.opengis.net/wfs/2.0":FeaturesLockedType is a complexType.
///
/// @note class wfs__FeaturesLockedType operations:
/// - wfs__FeaturesLockedType* soap_new_wfs__FeaturesLockedType(soap*) allocate and default initialize
/// - wfs__FeaturesLockedType* soap_new_wfs__FeaturesLockedType(soap*, int num) allocate and default initialize an array
/// - wfs__FeaturesLockedType* soap_new_req_wfs__FeaturesLockedType(soap*, ...) allocate, set required members
/// - wfs__FeaturesLockedType* soap_new_set_wfs__FeaturesLockedType(soap*, ...) allocate, set all public members
/// - wfs__FeaturesLockedType::soap_default(soap*) default initialize members
/// - int soap_read_wfs__FeaturesLockedType(soap*, wfs__FeaturesLockedType*) deserialize from a stream
/// - int soap_write_wfs__FeaturesLockedType(soap*, wfs__FeaturesLockedType*) serialize to a stream
/// - wfs__FeaturesLockedType* wfs__FeaturesLockedType::soap_dup(soap*) returns deep copy of wfs__FeaturesLockedType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - wfs__FeaturesLockedType::soap_del() deep deletes wfs__FeaturesLockedType data members, use only after wfs__FeaturesLockedType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int wfs__FeaturesLockedType::soap_type() returns SOAP_TYPE_wfs__FeaturesLockedType or derived type identifier
class wfs__FeaturesLockedType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence maxOccurs="unbounded">
    std::vector<
    struct __wfs__FeaturesLockedType_sequence
    {
/// Element reference "http://www.opengis.net/wfs/2.0:""http://www.opengis.net/fes/2.0":ResourceId.
    fes__ResourceIdType*                 fes__ResourceId                1;	///< Required element.
    }>                                   __FeaturesLockedType_sequence ;
//  END OF SEQUENCE
};

/// @brief "http://www.opengis.net/wfs/2.0":FeaturesNotLockedType is a complexType.
///
/// @note class wfs__FeaturesNotLockedType operations:
/// - wfs__FeaturesNotLockedType* soap_new_wfs__FeaturesNotLockedType(soap*) allocate and default initialize
/// - wfs__FeaturesNotLockedType* soap_new_wfs__FeaturesNotLockedType(soap*, int num) allocate and default initialize an array
/// - wfs__FeaturesNotLockedType* soap_new_req_wfs__FeaturesNotLockedType(soap*, ...) allocate, set required members
/// - wfs__FeaturesNotLockedType* soap_new_set_wfs__FeaturesNotLockedType(soap*, ...) allocate, set all public members
/// - wfs__FeaturesNotLockedType::soap_default(soap*) default initialize members
/// - int soap_read_wfs__FeaturesNotLockedType(soap*, wfs__FeaturesNotLockedType*) deserialize from a stream
/// - int soap_write_wfs__FeaturesNotLockedType(soap*, wfs__FeaturesNotLockedType*) serialize to a stream
/// - wfs__FeaturesNotLockedType* wfs__FeaturesNotLockedType::soap_dup(soap*) returns deep copy of wfs__FeaturesNotLockedType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - wfs__FeaturesNotLockedType::soap_del() deep deletes wfs__FeaturesNotLockedType data members, use only after wfs__FeaturesNotLockedType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int wfs__FeaturesNotLockedType::soap_type() returns SOAP_TYPE_wfs__FeaturesNotLockedType or derived type identifier
class wfs__FeaturesNotLockedType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence maxOccurs="unbounded">
    std::vector<
    struct __wfs__FeaturesNotLockedType_sequence
    {
/// Element reference "http://www.opengis.net/wfs/2.0:""http://www.opengis.net/fes/2.0":ResourceId.
    fes__ResourceIdType*                 fes__ResourceId                1;	///< Required element.
    }>                                   __FeaturesNotLockedType_sequence;
//  END OF SEQUENCE
};

/// @brief "http://www.opengis.net/wfs/2.0":AbstractTransactionActionType is an abstract complexType.
///
/// This type is extended by:
/// - "http://www.opengis.net/wfs/2.0":InsertType as wfs__InsertType
/// - "http://www.opengis.net/wfs/2.0":UpdateType as wfs__UpdateType
/// - "http://www.opengis.net/wfs/2.0":ReplaceType as wfs__ReplaceType
/// - "http://www.opengis.net/wfs/2.0":DeleteType as wfs__DeleteType
/// - "http://www.opengis.net/wfs/2.0":NativeType as wfs__NativeType
///
/// @note class wfs__AbstractTransactionActionType operations:
/// - wfs__AbstractTransactionActionType* soap_new_wfs__AbstractTransactionActionType(soap*) allocate and default initialize
/// - wfs__AbstractTransactionActionType* soap_new_wfs__AbstractTransactionActionType(soap*, int num) allocate and default initialize an array
/// - wfs__AbstractTransactionActionType* soap_new_req_wfs__AbstractTransactionActionType(soap*, ...) allocate, set required members
/// - wfs__AbstractTransactionActionType* soap_new_set_wfs__AbstractTransactionActionType(soap*, ...) allocate, set all public members
/// - wfs__AbstractTransactionActionType::soap_default(soap*) default initialize members
/// - int soap_read_wfs__AbstractTransactionActionType(soap*, wfs__AbstractTransactionActionType*) deserialize from a stream
/// - int soap_write_wfs__AbstractTransactionActionType(soap*, wfs__AbstractTransactionActionType*) serialize to a stream
/// - wfs__AbstractTransactionActionType* wfs__AbstractTransactionActionType::soap_dup(soap*) returns deep copy of wfs__AbstractTransactionActionType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - wfs__AbstractTransactionActionType::soap_del() deep deletes wfs__AbstractTransactionActionType data members, use only after wfs__AbstractTransactionActionType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int wfs__AbstractTransactionActionType::soap_type() returns SOAP_TYPE_wfs__AbstractTransactionActionType or derived type identifier
class wfs__AbstractTransactionActionType : public xsd__anyType
{ public:
/// Attribute "handle" of type xs:string.
  @ std::string*                         handle                         0;	///< Optional attribute.
};

/// @brief "http://www.opengis.net/wfs/2.0":PropertyType is a complexType.
///
/// @note class wfs__PropertyType operations:
/// - wfs__PropertyType* soap_new_wfs__PropertyType(soap*) allocate and default initialize
/// - wfs__PropertyType* soap_new_wfs__PropertyType(soap*, int num) allocate and default initialize an array
/// - wfs__PropertyType* soap_new_req_wfs__PropertyType(soap*, ...) allocate, set required members
/// - wfs__PropertyType* soap_new_set_wfs__PropertyType(soap*, ...) allocate, set all public members
/// - wfs__PropertyType::soap_default(soap*) default initialize members
/// - int soap_read_wfs__PropertyType(soap*, wfs__PropertyType*) deserialize from a stream
/// - int soap_write_wfs__PropertyType(soap*, wfs__PropertyType*) serialize to a stream
/// - wfs__PropertyType* wfs__PropertyType::soap_dup(soap*) returns deep copy of wfs__PropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - wfs__PropertyType::soap_del() deep deletes wfs__PropertyType data members, use only after wfs__PropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int wfs__PropertyType::soap_type() returns SOAP_TYPE_wfs__PropertyType or derived type identifier
class wfs__PropertyType : public xsd__anyType
{ public:
/// @note class _wfs__PropertyType_ValueReference operations:
/// - _wfs__PropertyType_ValueReference* soap_new__wfs__PropertyType_ValueReference(soap*) allocate and default initialize
/// - _wfs__PropertyType_ValueReference* soap_new__wfs__PropertyType_ValueReference(soap*, int num) allocate and default initialize an array
/// - _wfs__PropertyType_ValueReference* soap_new_req__wfs__PropertyType_ValueReference(soap*, ...) allocate, set required members
/// - _wfs__PropertyType_ValueReference* soap_new_set__wfs__PropertyType_ValueReference(soap*, ...) allocate, set all public members
/// - _wfs__PropertyType_ValueReference::soap_default(soap*) default initialize members
/// - int soap_read__wfs__PropertyType_ValueReference(soap*, _wfs__PropertyType_ValueReference*) deserialize from a stream
/// - int soap_write__wfs__PropertyType_ValueReference(soap*, _wfs__PropertyType_ValueReference*) serialize to a stream
/// - _wfs__PropertyType_ValueReference* _wfs__PropertyType_ValueReference::soap_dup(soap*) returns deep copy of _wfs__PropertyType_ValueReference, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _wfs__PropertyType_ValueReference::soap_del() deep deletes _wfs__PropertyType_ValueReference data members, use only after _wfs__PropertyType_ValueReference::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _wfs__PropertyType_ValueReference::soap_type() returns SOAP_TYPE__wfs__PropertyType_ValueReference or derived type identifier
    class _wfs__PropertyType_ValueReference
    { public:
/// __item wraps simpleContent of type xs:string.
    std::string                          __item                        ;
/// Attribute "action" of type "http://www.opengis.net/wfs/2.0":UpdateActionType.
  @ enum wfs__UpdateActionType           action                         0 = wfs__UpdateActionType__replace;	///< Optional attribute with default value="replace".
    }                                    ValueReference                 1;	///< Required element.
/// Element "Value" has no type or ref (empty or with literal XML content).
    _XML                                 Value                          0;	///< Optional element.
};

/// @brief "http://www.opengis.net/wfs/2.0":TransactionResponseType is a complexType.
///
/// @note class wfs__TransactionResponseType operations:
/// - wfs__TransactionResponseType* soap_new_wfs__TransactionResponseType(soap*) allocate and default initialize
/// - wfs__TransactionResponseType* soap_new_wfs__TransactionResponseType(soap*, int num) allocate and default initialize an array
/// - wfs__TransactionResponseType* soap_new_req_wfs__TransactionResponseType(soap*, ...) allocate, set required members
/// - wfs__TransactionResponseType* soap_new_set_wfs__TransactionResponseType(soap*, ...) allocate, set all public members
/// - wfs__TransactionResponseType::soap_default(soap*) default initialize members
/// - int soap_read_wfs__TransactionResponseType(soap*, wfs__TransactionResponseType*) deserialize from a stream
/// - int soap_write_wfs__TransactionResponseType(soap*, wfs__TransactionResponseType*) serialize to a stream
/// - wfs__TransactionResponseType* wfs__TransactionResponseType::soap_dup(soap*) returns deep copy of wfs__TransactionResponseType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - wfs__TransactionResponseType::soap_del() deep deletes wfs__TransactionResponseType data members, use only after wfs__TransactionResponseType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int wfs__TransactionResponseType::soap_type() returns SOAP_TYPE_wfs__TransactionResponseType or derived type identifier
class wfs__TransactionResponseType : public xsd__anyType
{ public:
/// Element "TransactionSummary" of type "http://www.opengis.net/wfs/2.0":TransactionSummaryType.
    wfs__TransactionSummaryType*         TransactionSummary             1;	///< Required element.
/// Element "InsertResults" of type "http://www.opengis.net/wfs/2.0":ActionResultsType.
    wfs__ActionResultsType*              InsertResults                  0;	///< Optional element.
/// Element "UpdateResults" of type "http://www.opengis.net/wfs/2.0":ActionResultsType.
    wfs__ActionResultsType*              UpdateResults                  0;	///< Optional element.
/// Element "ReplaceResults" of type "http://www.opengis.net/wfs/2.0":ActionResultsType.
    wfs__ActionResultsType*              ReplaceResults                 0;	///< Optional element.
/// Attribute "version" of type "http://www.opengis.net/wfs/2.0":VersionStringType.
  @ wfs__VersionStringType               version                        1;	///< Required attribute.
};

/// @brief "http://www.opengis.net/wfs/2.0":TransactionSummaryType is a complexType.
///
/// @note class wfs__TransactionSummaryType operations:
/// - wfs__TransactionSummaryType* soap_new_wfs__TransactionSummaryType(soap*) allocate and default initialize
/// - wfs__TransactionSummaryType* soap_new_wfs__TransactionSummaryType(soap*, int num) allocate and default initialize an array
/// - wfs__TransactionSummaryType* soap_new_req_wfs__TransactionSummaryType(soap*, ...) allocate, set required members
/// - wfs__TransactionSummaryType* soap_new_set_wfs__TransactionSummaryType(soap*, ...) allocate, set all public members
/// - wfs__TransactionSummaryType::soap_default(soap*) default initialize members
/// - int soap_read_wfs__TransactionSummaryType(soap*, wfs__TransactionSummaryType*) deserialize from a stream
/// - int soap_write_wfs__TransactionSummaryType(soap*, wfs__TransactionSummaryType*) serialize to a stream
/// - wfs__TransactionSummaryType* wfs__TransactionSummaryType::soap_dup(soap*) returns deep copy of wfs__TransactionSummaryType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - wfs__TransactionSummaryType::soap_del() deep deletes wfs__TransactionSummaryType data members, use only after wfs__TransactionSummaryType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int wfs__TransactionSummaryType::soap_type() returns SOAP_TYPE_wfs__TransactionSummaryType or derived type identifier
class wfs__TransactionSummaryType : public xsd__anyType
{ public:
/// Element "totalInserted" of type xs:nonNegativeInteger.
    xsd__nonNegativeInteger*             totalInserted                  0;	///< Optional element.
/// Element "totalUpdated" of type xs:nonNegativeInteger.
    xsd__nonNegativeInteger*             totalUpdated                   0;	///< Optional element.
/// Element "totalReplaced" of type xs:nonNegativeInteger.
    xsd__nonNegativeInteger*             totalReplaced                  0;	///< Optional element.
/// Element "totalDeleted" of type xs:nonNegativeInteger.
    xsd__nonNegativeInteger*             totalDeleted                   0;	///< Optional element.
};

/// @brief "http://www.opengis.net/wfs/2.0":ActionResultsType is a complexType.
///
/// @note class wfs__ActionResultsType operations:
/// - wfs__ActionResultsType* soap_new_wfs__ActionResultsType(soap*) allocate and default initialize
/// - wfs__ActionResultsType* soap_new_wfs__ActionResultsType(soap*, int num) allocate and default initialize an array
/// - wfs__ActionResultsType* soap_new_req_wfs__ActionResultsType(soap*, ...) allocate, set required members
/// - wfs__ActionResultsType* soap_new_set_wfs__ActionResultsType(soap*, ...) allocate, set all public members
/// - wfs__ActionResultsType::soap_default(soap*) default initialize members
/// - int soap_read_wfs__ActionResultsType(soap*, wfs__ActionResultsType*) deserialize from a stream
/// - int soap_write_wfs__ActionResultsType(soap*, wfs__ActionResultsType*) serialize to a stream
/// - wfs__ActionResultsType* wfs__ActionResultsType::soap_dup(soap*) returns deep copy of wfs__ActionResultsType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - wfs__ActionResultsType::soap_del() deep deletes wfs__ActionResultsType data members, use only after wfs__ActionResultsType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int wfs__ActionResultsType::soap_type() returns SOAP_TYPE_wfs__ActionResultsType or derived type identifier
class wfs__ActionResultsType : public xsd__anyType
{ public:
/// Vector of wfs__CreatedOrModifiedFeatureType* of length 1..unbounded.
    std::vector<wfs__CreatedOrModifiedFeatureType*> Feature                        1;	///< Multiple elements.
};

/// @brief "http://www.opengis.net/wfs/2.0":CreatedOrModifiedFeatureType is a complexType.
///
/// @note class wfs__CreatedOrModifiedFeatureType operations:
/// - wfs__CreatedOrModifiedFeatureType* soap_new_wfs__CreatedOrModifiedFeatureType(soap*) allocate and default initialize
/// - wfs__CreatedOrModifiedFeatureType* soap_new_wfs__CreatedOrModifiedFeatureType(soap*, int num) allocate and default initialize an array
/// - wfs__CreatedOrModifiedFeatureType* soap_new_req_wfs__CreatedOrModifiedFeatureType(soap*, ...) allocate, set required members
/// - wfs__CreatedOrModifiedFeatureType* soap_new_set_wfs__CreatedOrModifiedFeatureType(soap*, ...) allocate, set all public members
/// - wfs__CreatedOrModifiedFeatureType::soap_default(soap*) default initialize members
/// - int soap_read_wfs__CreatedOrModifiedFeatureType(soap*, wfs__CreatedOrModifiedFeatureType*) deserialize from a stream
/// - int soap_write_wfs__CreatedOrModifiedFeatureType(soap*, wfs__CreatedOrModifiedFeatureType*) serialize to a stream
/// - wfs__CreatedOrModifiedFeatureType* wfs__CreatedOrModifiedFeatureType::soap_dup(soap*) returns deep copy of wfs__CreatedOrModifiedFeatureType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - wfs__CreatedOrModifiedFeatureType::soap_del() deep deletes wfs__CreatedOrModifiedFeatureType data members, use only after wfs__CreatedOrModifiedFeatureType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int wfs__CreatedOrModifiedFeatureType::soap_type() returns SOAP_TYPE_wfs__CreatedOrModifiedFeatureType or derived type identifier
class wfs__CreatedOrModifiedFeatureType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence maxOccurs="unbounded">
    std::vector<
    struct __wfs__CreatedOrModifiedFeatureType_sequence
    {
/// Element reference "http://www.opengis.net/wfs/2.0:""http://www.opengis.net/fes/2.0":ResourceId.
    fes__ResourceIdType*                 fes__ResourceId                1;	///< Required element.
    }>                                   __CreatedOrModifiedFeatureType_sequence;
//  END OF SEQUENCE
/// Attribute "handle" of type xs:string.
  @ std::string*                         handle                         0;	///< Optional attribute.
};

/// @brief "http://www.opengis.net/wfs/2.0":EmptyType is a complexType.
///
/// @note class wfs__EmptyType operations:
/// - wfs__EmptyType* soap_new_wfs__EmptyType(soap*) allocate and default initialize
/// - wfs__EmptyType* soap_new_wfs__EmptyType(soap*, int num) allocate and default initialize an array
/// - wfs__EmptyType* soap_new_req_wfs__EmptyType(soap*, ...) allocate, set required members
/// - wfs__EmptyType* soap_new_set_wfs__EmptyType(soap*, ...) allocate, set all public members
/// - wfs__EmptyType::soap_default(soap*) default initialize members
/// - int soap_read_wfs__EmptyType(soap*, wfs__EmptyType*) deserialize from a stream
/// - int soap_write_wfs__EmptyType(soap*, wfs__EmptyType*) serialize to a stream
/// - wfs__EmptyType* wfs__EmptyType::soap_dup(soap*) returns deep copy of wfs__EmptyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - wfs__EmptyType::soap_del() deep deletes wfs__EmptyType data members, use only after wfs__EmptyType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int wfs__EmptyType::soap_type() returns SOAP_TYPE_wfs__EmptyType or derived type identifier
class wfs__EmptyType : public xsd__anyType
{ public:
};

/// @brief Top-level root element "http://www.opengis.net/wfs/2.0":additionalValues
/// @brief "http://www.opengis.net/wfs/2.0":additionalValues is a complexType.
///
/// @note class _wfs__additionalValues operations:
/// - _wfs__additionalValues* soap_new__wfs__additionalValues(soap*) allocate and default initialize
/// - _wfs__additionalValues* soap_new__wfs__additionalValues(soap*, int num) allocate and default initialize an array
/// - _wfs__additionalValues* soap_new_req__wfs__additionalValues(soap*, ...) allocate, set required members
/// - _wfs__additionalValues* soap_new_set__wfs__additionalValues(soap*, ...) allocate, set all public members
/// - _wfs__additionalValues::soap_default(soap*) default initialize members
/// - int soap_read__wfs__additionalValues(soap*, _wfs__additionalValues*) deserialize from a stream
/// - int soap_write__wfs__additionalValues(soap*, _wfs__additionalValues*) serialize to a stream
/// - _wfs__additionalValues* _wfs__additionalValues::soap_dup(soap*) returns deep copy of _wfs__additionalValues, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _wfs__additionalValues::soap_del() deep deletes _wfs__additionalValues data members, use only after _wfs__additionalValues::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _wfs__additionalValues::soap_type() returns SOAP_TYPE__wfs__additionalValues or derived type identifier
class _wfs__additionalValues
{ public:
//  BEGIN CHOICE <xs:choice>
  $ int                                  __union_additionalValues      ;	///< Union _wfs__union_additionalValues selector: set to SOAP_UNION__wfs__union_additionalValues_<fieldname>
/// Union for choice in wfs__additionalValues.
    union _wfs__union_additionalValues
    {
/// Element reference "http://www.opengis.net/wfs/2.0:""http://www.opengis.net/wfs/2.0":ValueCollection.
    wfs__ValueCollectionType*            ValueCollection               ;	///< Choice of element (one of multiple choices).
//  BEGIN SUBSTITUTIONS <xs:element substitutionGroup="SimpleFeatureCollection"> with choice of elements to substitute:
//    <FeatureCollection>
/// Element reference "http://www.opengis.net/wfs/2.0:""http://www.opengis.net/wfs/2.0":SimpleFeatureCollection.
    wfs__SimpleFeatureCollectionType*    SimpleFeatureCollection       ;	///< Choice of element (one of multiple choices).
/// Element "http://www.opengis.net/wfs/2.0":FeatureCollection.
    wfs__FeatureCollectionType*          FeatureCollection             ;	///< Choice of element (one of multiple choices).
//  END OF SUBSTITUTIONS
    }                                    union_additionalValues        ;
//  END OF CHOICE
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.opengis.net/wfs/2.0":truncatedResponse
/// @brief "http://www.opengis.net/wfs/2.0":truncatedResponse is a complexType.
///
/// @note class _wfs__truncatedResponse operations:
/// - _wfs__truncatedResponse* soap_new__wfs__truncatedResponse(soap*) allocate and default initialize
/// - _wfs__truncatedResponse* soap_new__wfs__truncatedResponse(soap*, int num) allocate and default initialize an array
/// - _wfs__truncatedResponse* soap_new_req__wfs__truncatedResponse(soap*, ...) allocate, set required members
/// - _wfs__truncatedResponse* soap_new_set__wfs__truncatedResponse(soap*, ...) allocate, set all public members
/// - _wfs__truncatedResponse::soap_default(soap*) default initialize members
/// - int soap_read__wfs__truncatedResponse(soap*, _wfs__truncatedResponse*) deserialize from a stream
/// - int soap_write__wfs__truncatedResponse(soap*, _wfs__truncatedResponse*) serialize to a stream
/// - _wfs__truncatedResponse* _wfs__truncatedResponse::soap_dup(soap*) returns deep copy of _wfs__truncatedResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _wfs__truncatedResponse::soap_del() deep deletes _wfs__truncatedResponse data members, use only after _wfs__truncatedResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _wfs__truncatedResponse::soap_type() returns SOAP_TYPE__wfs__truncatedResponse or derived type identifier
class _wfs__truncatedResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   Report message returned to the client that requested any OWS operation when the server detects an error while processing that operation request.
/// </BLOCKQUOTE></PRE>
///
/// Element reference "http://www.opengis.net/wfs/2.0:""http://www.opengis.net/ows/1.1":ExceptionReport.
    _ows__ExceptionReport*               ows__ExceptionReport           1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.opengis.net/wfs/2.0":additionalObjects
/// @brief "http://www.opengis.net/wfs/2.0":additionalObjects is a complexType.
///
/// @note class _wfs__additionalObjects operations:
/// - _wfs__additionalObjects* soap_new__wfs__additionalObjects(soap*) allocate and default initialize
/// - _wfs__additionalObjects* soap_new__wfs__additionalObjects(soap*, int num) allocate and default initialize an array
/// - _wfs__additionalObjects* soap_new_req__wfs__additionalObjects(soap*, ...) allocate, set required members
/// - _wfs__additionalObjects* soap_new_set__wfs__additionalObjects(soap*, ...) allocate, set all public members
/// - _wfs__additionalObjects::soap_default(soap*) default initialize members
/// - int soap_read__wfs__additionalObjects(soap*, _wfs__additionalObjects*) deserialize from a stream
/// - int soap_write__wfs__additionalObjects(soap*, _wfs__additionalObjects*) serialize to a stream
/// - _wfs__additionalObjects* _wfs__additionalObjects::soap_dup(soap*) returns deep copy of _wfs__additionalObjects, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _wfs__additionalObjects::soap_del() deep deletes _wfs__additionalObjects data members, use only after _wfs__additionalObjects::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _wfs__additionalObjects::soap_type() returns SOAP_TYPE__wfs__additionalObjects or derived type identifier
class _wfs__additionalObjects
{ public:
//  BEGIN CHOICE <xs:choice>
  $ int                                  __union_additionalObjects     ;	///< Union _wfs__union_additionalObjects selector: set to SOAP_UNION__wfs__union_additionalObjects_<fieldname>
/// Union for choice in wfs__additionalObjects.
    union _wfs__union_additionalObjects
    {
/// Element reference "http://www.opengis.net/wfs/2.0:""http://www.opengis.net/wfs/2.0":ValueCollection.
    wfs__ValueCollectionType*            ValueCollection               ;	///< Choice of element (one of multiple choices).
//  BEGIN SUBSTITUTIONS <xs:element substitutionGroup="SimpleFeatureCollection"> with choice of elements to substitute:
//    <FeatureCollection>
/// Element reference "http://www.opengis.net/wfs/2.0:""http://www.opengis.net/wfs/2.0":SimpleFeatureCollection.
    wfs__SimpleFeatureCollectionType*    SimpleFeatureCollection       ;	///< Choice of element (one of multiple choices).
/// Element "http://www.opengis.net/wfs/2.0":FeatureCollection.
    wfs__FeatureCollectionType*          FeatureCollection             ;	///< Choice of element (one of multiple choices).
//  END OF SUBSTITUTIONS
    }                                    union_additionalObjects       ;
//  END OF CHOICE
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://www.opengis.net/wfs-util/2.0                                      *
 *                                                                            *
\******************************************************************************/

/// @brief "http://www.opengis.net/wfs-util/2.0":DescribeFeatureTypeResponseType is a complexType.
///
/// @note class util__DescribeFeatureTypeResponseType operations:
/// - util__DescribeFeatureTypeResponseType* soap_new_util__DescribeFeatureTypeResponseType(soap*) allocate and default initialize
/// - util__DescribeFeatureTypeResponseType* soap_new_util__DescribeFeatureTypeResponseType(soap*, int num) allocate and default initialize an array
/// - util__DescribeFeatureTypeResponseType* soap_new_req_util__DescribeFeatureTypeResponseType(soap*, ...) allocate, set required members
/// - util__DescribeFeatureTypeResponseType* soap_new_set_util__DescribeFeatureTypeResponseType(soap*, ...) allocate, set all public members
/// - util__DescribeFeatureTypeResponseType::soap_default(soap*) default initialize members
/// - int soap_read_util__DescribeFeatureTypeResponseType(soap*, util__DescribeFeatureTypeResponseType*) deserialize from a stream
/// - int soap_write_util__DescribeFeatureTypeResponseType(soap*, util__DescribeFeatureTypeResponseType*) serialize to a stream
/// - util__DescribeFeatureTypeResponseType* util__DescribeFeatureTypeResponseType::soap_dup(soap*) returns deep copy of util__DescribeFeatureTypeResponseType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - util__DescribeFeatureTypeResponseType::soap_del() deep deletes util__DescribeFeatureTypeResponseType data members, use only after util__DescribeFeatureTypeResponseType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int util__DescribeFeatureTypeResponseType::soap_type() returns SOAP_TYPE_util__DescribeFeatureTypeResponseType or derived type identifier
class util__DescribeFeatureTypeResponseType : public xsd__anyType
{ public:
/// Imported element reference xs:schema.
    _xsd__schema                         xsd__schema                    1;	///< Required element.
};


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://www.opengis.net/ows/1.1                                           *
 *                                                                            *
\******************************************************************************/

/// @brief "http://www.opengis.net/ows/1.1":ExceptionType is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   An Exception element describes one detected error that a server chooses to convey to the client.
/// </BLOCKQUOTE></PRE>
///
/// @note class ows__ExceptionType operations:
/// - ows__ExceptionType* soap_new_ows__ExceptionType(soap*) allocate and default initialize
/// - ows__ExceptionType* soap_new_ows__ExceptionType(soap*, int num) allocate and default initialize an array
/// - ows__ExceptionType* soap_new_req_ows__ExceptionType(soap*, ...) allocate, set required members
/// - ows__ExceptionType* soap_new_set_ows__ExceptionType(soap*, ...) allocate, set all public members
/// - ows__ExceptionType::soap_default(soap*) default initialize members
/// - int soap_read_ows__ExceptionType(soap*, ows__ExceptionType*) deserialize from a stream
/// - int soap_write_ows__ExceptionType(soap*, ows__ExceptionType*) serialize to a stream
/// - ows__ExceptionType* ows__ExceptionType::soap_dup(soap*) returns deep copy of ows__ExceptionType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - ows__ExceptionType::soap_del() deep deletes ows__ExceptionType data members, use only after ows__ExceptionType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int ows__ExceptionType::soap_type() returns SOAP_TYPE_ows__ExceptionType or derived type identifier
class ows__ExceptionType : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   Ordered sequence of text strings that describe this specific exception or error. The contents of these strings are left open to definition by each server implementation. A server is strongly encouraged to include at least one ExceptionText value, to provide more information about the detected error than provided by the exceptionCode. When included, multiple ExceptionText values shall provide hierarchical information about one detected error, with the most significant information listed first.
/// </BLOCKQUOTE></PRE>
///
/// Vector of std::string of length 0..unbounded.
    std::vector<std::string            > ExceptionText                  0;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   A code representing the type of this exception, which shall be selected from a set of exceptionCode values specified for the specific service operation and server.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "exceptionCode" of type xs:string.
  @ std::string                          exceptionCode                  1;	///< Required attribute.
/// <PRE><BLOCKQUOTE>
///   When included, this locator shall indicate to the client where an exception was encountered in servicing the client's operation request. This locator should be included whenever meaningful information can be provided by the server. The contents of this locator will depend on the specific exceptionCode and OWS service, and shall be specified in the OWS Implementation Specification.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "locator" of type xs:string.
  @ std::string*                         locator                        0;	///< Optional attribute.
};

/// @brief "http://www.opengis.net/ows/1.1":GetResourceByIdType is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Request to a service to perform the GetResourceByID operation. This operation allows a client to retrieve one or more identified resources, including datasets and resources that describe datasets or parameters. In this XML encoding, no "request" parameter is included, since the element name specifies the specific operation.
/// </BLOCKQUOTE></PRE>
///
/// @note class ows__GetResourceByIdType operations:
/// - ows__GetResourceByIdType* soap_new_ows__GetResourceByIdType(soap*) allocate and default initialize
/// - ows__GetResourceByIdType* soap_new_ows__GetResourceByIdType(soap*, int num) allocate and default initialize an array
/// - ows__GetResourceByIdType* soap_new_req_ows__GetResourceByIdType(soap*, ...) allocate, set required members
/// - ows__GetResourceByIdType* soap_new_set_ows__GetResourceByIdType(soap*, ...) allocate, set all public members
/// - ows__GetResourceByIdType::soap_default(soap*) default initialize members
/// - int soap_read_ows__GetResourceByIdType(soap*, ows__GetResourceByIdType*) deserialize from a stream
/// - int soap_write_ows__GetResourceByIdType(soap*, ows__GetResourceByIdType*) serialize to a stream
/// - ows__GetResourceByIdType* ows__GetResourceByIdType::soap_dup(soap*) returns deep copy of ows__GetResourceByIdType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - ows__GetResourceByIdType::soap_del() deep deletes ows__GetResourceByIdType data members, use only after ows__GetResourceByIdType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int ows__GetResourceByIdType::soap_type() returns SOAP_TYPE_ows__GetResourceByIdType or derived type identifier
class ows__GetResourceByIdType : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   Unordered list of zero or more resource identifiers. These identifiers can be listed in the Contents section of the service metadata (Capabilities) document. For more information on this parameter, see Subclause 9.4.2.1 of the OWS Common specification.
/// </BLOCKQUOTE></PRE>
///
/// Vector of xsd__anyURI of length 0..unbounded.
    std::vector<xsd__anyURI            > ResourceID                     0;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   Optional reference to the data format to be used for response to this operation request. This element shall be included when multiple output formats are available for the selected resource(s), and the client desires a format other than the specified default, if any.
/// </BLOCKQUOTE></PRE>
///
/// <PRE><BLOCKQUOTE>
///   Reference to a format in which this data can be encoded and transferred. More specific parameter names should be used by specific OWS specifications wherever applicable. More than one such parameter can be included for different purposes.
/// </BLOCKQUOTE></PRE>
///
/// Element reference "http://www.opengis.net/ows/1.1:""http://www.opengis.net/ows/1.1":OutputFormat.
    ows__MimeType*                       OutputFormat                   0;	///< Optional element.
/// Attribute "service" of type "http://www.opengis.net/ows/1.1":ServiceType.
  @ ows__ServiceType                     service                        1;	///< Required attribute.
/// Attribute "version" of type "http://www.opengis.net/ows/1.1":VersionType.
  @ ows__VersionType                     version                        1;	///< Required attribute.
};

/// @brief "http://www.opengis.net/ows/1.1":DescriptionType is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Human-readable descriptive information for the object it is included within.
///   This type shall be extended if needed for specific OWS use to include additional metadata for each type of information. This type shall not be restricted for a specific OWS to change the multiplicity (or optionality) of some elements.
///   If the xml:lang attribute is not included in a Title, Abstract or Keyword element, then no language is specified for that element unless specified by another means. All Title, Abstract and Keyword elements in the same Description that share the same xml:lang attribute value represent the description of the parent object in that language. Multiple Title or Abstract elements shall not exist in the same Description with the same xml:lang attribute value unless otherwise specified.
/// </BLOCKQUOTE></PRE>
///
/// This type is extended by:
/// - "http://www.opengis.net/ows/1.1":BasicIdentificationType as ows__BasicIdentificationType
/// - "http://www.opengis.net/ows/1.1":DatasetDescriptionSummaryBaseType as ows__DatasetDescriptionSummaryBaseType
///
/// @note class ows__DescriptionType operations:
/// - ows__DescriptionType* soap_new_ows__DescriptionType(soap*) allocate and default initialize
/// - ows__DescriptionType* soap_new_ows__DescriptionType(soap*, int num) allocate and default initialize an array
/// - ows__DescriptionType* soap_new_req_ows__DescriptionType(soap*, ...) allocate, set required members
/// - ows__DescriptionType* soap_new_set_ows__DescriptionType(soap*, ...) allocate, set all public members
/// - ows__DescriptionType::soap_default(soap*) default initialize members
/// - int soap_read_ows__DescriptionType(soap*, ows__DescriptionType*) deserialize from a stream
/// - int soap_write_ows__DescriptionType(soap*, ows__DescriptionType*) serialize to a stream
/// - ows__DescriptionType* ows__DescriptionType::soap_dup(soap*) returns deep copy of ows__DescriptionType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - ows__DescriptionType::soap_del() deep deletes ows__DescriptionType data members, use only after ows__DescriptionType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int ows__DescriptionType::soap_type() returns SOAP_TYPE_ows__DescriptionType or derived type identifier
class ows__DescriptionType : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   Title of this resource, normally used for display to a human.
/// </BLOCKQUOTE></PRE>
///
/// Vector of ows__LanguageStringType* element refs of length 0..unbounded.
    std::vector<ows__LanguageStringType*> Title                          0;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   Brief narrative description of this resource, normally used for display to a human.
/// </BLOCKQUOTE></PRE>
///
/// Vector of ows__LanguageStringType* element refs of length 0..unbounded.
    std::vector<ows__LanguageStringType*> Abstract                       0;	///< Multiple elements.
/// Vector of ows__KeywordsType* element refs of length 0..unbounded.
    std::vector<ows__KeywordsType*     > Keywords                       0;	///< Multiple elements.
};

/// @brief "http://www.opengis.net/ows/1.1":MetadataType is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   This element either references or contains more metadata about the element that includes this element. To reference metadata stored remotely, at least the xlinks:href attribute in xlink:simpleAttrs shall be included. Either at least one of the attributes in xlink:simpleAttrs or a substitute for the AbstractMetaData element shall be included, but not both. An Implementation Specification can restrict the contents of this element to always be a reference or always contain metadata. (Informative: This element was adapted from the metaDataProperty element in GML 3.0.)
/// </BLOCKQUOTE></PRE>
///
/// @note class ows__MetadataType operations:
/// - ows__MetadataType* soap_new_ows__MetadataType(soap*) allocate and default initialize
/// - ows__MetadataType* soap_new_ows__MetadataType(soap*, int num) allocate and default initialize an array
/// - ows__MetadataType* soap_new_req_ows__MetadataType(soap*, ...) allocate, set required members
/// - ows__MetadataType* soap_new_set_ows__MetadataType(soap*, ...) allocate, set all public members
/// - ows__MetadataType::soap_default(soap*) default initialize members
/// - int soap_read_ows__MetadataType(soap*, ows__MetadataType*) deserialize from a stream
/// - int soap_write_ows__MetadataType(soap*, ows__MetadataType*) serialize to a stream
/// - ows__MetadataType* ows__MetadataType::soap_dup(soap*) returns deep copy of ows__MetadataType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - ows__MetadataType::soap_del() deep deletes ows__MetadataType data members, use only after ows__MetadataType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int ows__MetadataType::soap_type() returns SOAP_TYPE_ows__MetadataType or derived type identifier
class ows__MetadataType : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   Abstract element containing more metadata about the element that includes the containing "metadata" element. A specific server implementation, or an Implementation Specification, can define concrete elements in the AbstractMetaData substitution group.
/// </BLOCKQUOTE></PRE>
///
/// Reference "http://www.opengis.net/ows/1.1":AbstractMetaData to abstract element.
//  BEGIN SUBSTITUTIONS <xs:element substitutionGroup="AbstractMetaData" minOccurs="0"> with choice of elements to substitute:
//   
  $ int                                  __unionAbstractMetaData        0;	///< Union _ows__union_MetadataType selector: set to SOAP_UNION__ows__union_MetadataType_<fieldname> or 0 to omit
/// Union for substitutionGroup ows__AbstractMetaData.
    union _ows__union_MetadataType
    {
    }                                    union_MetadataType            ;
//  END OF SUBSTITUTIONS
/// <PRE><BLOCKQUOTE>
///   Optional reference to the aspect of the element which includes this "metadata" element that this metadata provides more information about.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "about" of type xs:anyURI.
  @ xsd__anyURI*                         about                          0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
  @ enum xlink__typeType                 xlink__type                    0 == xlink__typeType__simple;	///< Optional attribute with fixed value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
  @ xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
  @ xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
  @ xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
  @ xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
  @ enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
  @ enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.opengis.net/ows/1.1":BoundingBoxType is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   XML encoded minimum rectangular bounding box (or region) parameter, surrounding all the associated data.
/// </BLOCKQUOTE></PRE>
///
/// <PRE><BLOCKQUOTE>
///   This type is adapted from the EnvelopeType of GML 3.1, with modified contents and documentation for encoding a MINIMUM size box SURROUNDING all associated data.
/// </BLOCKQUOTE></PRE>
///
/// This type is restricted by:
/// - "http://www.opengis.net/ows/1.1":WGS84BoundingBoxType as ows__WGS84BoundingBoxType
///
/// @note class ows__BoundingBoxType operations:
/// - ows__BoundingBoxType* soap_new_ows__BoundingBoxType(soap*) allocate and default initialize
/// - ows__BoundingBoxType* soap_new_ows__BoundingBoxType(soap*, int num) allocate and default initialize an array
/// - ows__BoundingBoxType* soap_new_req_ows__BoundingBoxType(soap*, ...) allocate, set required members
/// - ows__BoundingBoxType* soap_new_set_ows__BoundingBoxType(soap*, ...) allocate, set all public members
/// - ows__BoundingBoxType::soap_default(soap*) default initialize members
/// - int soap_read_ows__BoundingBoxType(soap*, ows__BoundingBoxType*) deserialize from a stream
/// - int soap_write_ows__BoundingBoxType(soap*, ows__BoundingBoxType*) serialize to a stream
/// - ows__BoundingBoxType* ows__BoundingBoxType::soap_dup(soap*) returns deep copy of ows__BoundingBoxType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - ows__BoundingBoxType::soap_del() deep deletes ows__BoundingBoxType data members, use only after ows__BoundingBoxType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int ows__BoundingBoxType::soap_type() returns SOAP_TYPE_ows__BoundingBoxType or derived type identifier
class ows__BoundingBoxType : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   Position of the bounding box corner at which the value of each coordinate normally is the algebraic minimum within this bounding box. In some cases, this position is normally displayed at the top, such as the top left for some image coordinates. For more information, see Subclauses 10.2.5 and C.13.
/// </BLOCKQUOTE></PRE>
///
/// Element "LowerCorner" of type "http://www.opengis.net/ows/1.1":PositionType.
    ows__PositionType                    LowerCorner                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Position of the bounding box corner at which the value of each coordinate normally is the algebraic maximum within this bounding box. In some cases, this position is normally displayed at the bottom, such as the bottom right for some image coordinates. For more information, see Subclauses 10.2.5 and C.13.
/// </BLOCKQUOTE></PRE>
///
/// Element "UpperCorner" of type "http://www.opengis.net/ows/1.1":PositionType.
    ows__PositionType                    UpperCorner                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Usually references the definition of a CRS, as specified in [OGC Topic 2]. Such a CRS definition can be XML encoded using the gml:CoordinateReferenceSystemType in [GML 3.1]. For well known references, it is not required that a CRS definition exist at the location the URI points to. If no anyURI value is included, the applicable CRS must be either:
///   a) Specified outside the bounding box, but inside a data structure that includes this bounding box, as specified for a specific OWS use of this bounding box type.
///   b) Fixed and specified in the Implementation Specification for a specific OWS use of the bounding box type.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "crs" of type xs:anyURI.
  @ xsd__anyURI*                         crs                            0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   The number of dimensions in this CRS (the length of a coordinate sequence in this use of the PositionType). This number is specified by the CRS definition, but can also be specified here.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "dimensions" of type xs:positiveInteger.
  @ xsd__positiveInteger*                dimensions                     0;	///< Optional attribute.
};

/// @brief "http://www.opengis.net/ows/1.1":KeywordsType is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Unordered list of one or more commonly used or formalised word(s) or phrase(s) used to describe the subject. When needed, the optional "type" can name the type of the associated list of keywords that shall all have the same type. Also when needed, the codeSpace attribute of that "type" can reference the type name authority and/or thesaurus.
///   If the xml:lang attribute is not included in a Keyword element, then no language is specified for that element unless specified by another means. All Keyword elements in the same Keywords element that share the same xml:lang attribute value represent different keywords in that language.
/// </BLOCKQUOTE></PRE>
///
/// <PRE><BLOCKQUOTE>
///   For OWS use, the optional thesaurusName element was omitted as being complex information that could be referenced by the codeSpace attribute of the Type element.
/// </BLOCKQUOTE></PRE>
///
/// @note class ows__KeywordsType operations:
/// - ows__KeywordsType* soap_new_ows__KeywordsType(soap*) allocate and default initialize
/// - ows__KeywordsType* soap_new_ows__KeywordsType(soap*, int num) allocate and default initialize an array
/// - ows__KeywordsType* soap_new_req_ows__KeywordsType(soap*, ...) allocate, set required members
/// - ows__KeywordsType* soap_new_set_ows__KeywordsType(soap*, ...) allocate, set all public members
/// - ows__KeywordsType::soap_default(soap*) default initialize members
/// - int soap_read_ows__KeywordsType(soap*, ows__KeywordsType*) deserialize from a stream
/// - int soap_write_ows__KeywordsType(soap*, ows__KeywordsType*) serialize to a stream
/// - ows__KeywordsType* ows__KeywordsType::soap_dup(soap*) returns deep copy of ows__KeywordsType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - ows__KeywordsType::soap_del() deep deletes ows__KeywordsType data members, use only after ows__KeywordsType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int ows__KeywordsType::soap_type() returns SOAP_TYPE_ows__KeywordsType or derived type identifier
class ows__KeywordsType : public xsd__anyType
{ public:
/// Vector of ows__LanguageStringType* of length 1..unbounded.
    std::vector<ows__LanguageStringType*> Keyword                        1;	///< Multiple elements.
/// Element "Type" of type "http://www.opengis.net/ows/1.1":CodeType.
    ows__CodeType*                       Type                           0;	///< Optional element.
};

/// @brief "http://www.opengis.net/ows/1.1":ResponsiblePartyType is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Identification of, and means of communication with, person responsible for the server. At least one of IndividualName, OrganisationName, or PositionName shall be included.
/// </BLOCKQUOTE></PRE>
///
/// @note class ows__ResponsiblePartyType operations:
/// - ows__ResponsiblePartyType* soap_new_ows__ResponsiblePartyType(soap*) allocate and default initialize
/// - ows__ResponsiblePartyType* soap_new_ows__ResponsiblePartyType(soap*, int num) allocate and default initialize an array
/// - ows__ResponsiblePartyType* soap_new_req_ows__ResponsiblePartyType(soap*, ...) allocate, set required members
/// - ows__ResponsiblePartyType* soap_new_set_ows__ResponsiblePartyType(soap*, ...) allocate, set all public members
/// - ows__ResponsiblePartyType::soap_default(soap*) default initialize members
/// - int soap_read_ows__ResponsiblePartyType(soap*, ows__ResponsiblePartyType*) deserialize from a stream
/// - int soap_write_ows__ResponsiblePartyType(soap*, ows__ResponsiblePartyType*) serialize to a stream
/// - ows__ResponsiblePartyType* ows__ResponsiblePartyType::soap_dup(soap*) returns deep copy of ows__ResponsiblePartyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - ows__ResponsiblePartyType::soap_del() deep deletes ows__ResponsiblePartyType data members, use only after ows__ResponsiblePartyType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int ows__ResponsiblePartyType::soap_type() returns SOAP_TYPE_ows__ResponsiblePartyType or derived type identifier
class ows__ResponsiblePartyType : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   Name of the responsible person: surname, given name, title separated by a delimiter.
/// </BLOCKQUOTE></PRE>
///
/// Element reference "http://www.opengis.net/ows/1.1:""http://www.opengis.net/ows/1.1":IndividualName.
    std::string*                         IndividualName                 0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Name of the responsible organization.
/// </BLOCKQUOTE></PRE>
///
/// Element reference "http://www.opengis.net/ows/1.1:""http://www.opengis.net/ows/1.1":OrganisationName.
    std::string*                         OrganisationName               0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Role or position of the responsible person.
/// </BLOCKQUOTE></PRE>
///
/// Element reference "http://www.opengis.net/ows/1.1:""http://www.opengis.net/ows/1.1":PositionName.
    std::string*                         PositionName                   0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Address of the responsible party.
/// </BLOCKQUOTE></PRE>
///
/// Element reference "http://www.opengis.net/ows/1.1:""http://www.opengis.net/ows/1.1":ContactInfo.
    ows__ContactType*                    ContactInfo                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Function performed by the responsible party. Possible values of this Role shall include the values and the meanings listed in Subclause B.5.5 of ISO 19115:2003.
/// </BLOCKQUOTE></PRE>
///
/// Element reference "http://www.opengis.net/ows/1.1:""http://www.opengis.net/ows/1.1":Role.
    ows__CodeType*                       Role                           1;	///< Required element.
};

/// @brief "http://www.opengis.net/ows/1.1":ResponsiblePartySubsetType is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Identification of, and means of communication with, person responsible for the server.
/// </BLOCKQUOTE></PRE>
///
/// <PRE><BLOCKQUOTE>
///   For OWS use in the ServiceProvider section of a service metadata document, the optional organizationName element was removed, since this type is always used with the ProviderName element which provides that information. The mandatory "role" element was changed to optional, since no clear use of this information is known in the ServiceProvider section.
/// </BLOCKQUOTE></PRE>
///
/// @note class ows__ResponsiblePartySubsetType operations:
/// - ows__ResponsiblePartySubsetType* soap_new_ows__ResponsiblePartySubsetType(soap*) allocate and default initialize
/// - ows__ResponsiblePartySubsetType* soap_new_ows__ResponsiblePartySubsetType(soap*, int num) allocate and default initialize an array
/// - ows__ResponsiblePartySubsetType* soap_new_req_ows__ResponsiblePartySubsetType(soap*, ...) allocate, set required members
/// - ows__ResponsiblePartySubsetType* soap_new_set_ows__ResponsiblePartySubsetType(soap*, ...) allocate, set all public members
/// - ows__ResponsiblePartySubsetType::soap_default(soap*) default initialize members
/// - int soap_read_ows__ResponsiblePartySubsetType(soap*, ows__ResponsiblePartySubsetType*) deserialize from a stream
/// - int soap_write_ows__ResponsiblePartySubsetType(soap*, ows__ResponsiblePartySubsetType*) serialize to a stream
/// - ows__ResponsiblePartySubsetType* ows__ResponsiblePartySubsetType::soap_dup(soap*) returns deep copy of ows__ResponsiblePartySubsetType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - ows__ResponsiblePartySubsetType::soap_del() deep deletes ows__ResponsiblePartySubsetType data members, use only after ows__ResponsiblePartySubsetType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int ows__ResponsiblePartySubsetType::soap_type() returns SOAP_TYPE_ows__ResponsiblePartySubsetType or derived type identifier
class ows__ResponsiblePartySubsetType : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   Name of the responsible person: surname, given name, title separated by a delimiter.
/// </BLOCKQUOTE></PRE>
///
/// Element reference "http://www.opengis.net/ows/1.1:""http://www.opengis.net/ows/1.1":IndividualName.
    std::string*                         IndividualName                 0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Role or position of the responsible person.
/// </BLOCKQUOTE></PRE>
///
/// Element reference "http://www.opengis.net/ows/1.1:""http://www.opengis.net/ows/1.1":PositionName.
    std::string*                         PositionName                   0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Address of the responsible party.
/// </BLOCKQUOTE></PRE>
///
/// Element reference "http://www.opengis.net/ows/1.1:""http://www.opengis.net/ows/1.1":ContactInfo.
    ows__ContactType*                    ContactInfo                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Function performed by the responsible party. Possible values of this Role shall include the values and the meanings listed in Subclause B.5.5 of ISO 19115:2003.
/// </BLOCKQUOTE></PRE>
///
/// Element reference "http://www.opengis.net/ows/1.1:""http://www.opengis.net/ows/1.1":Role.
    ows__CodeType*                       Role                           0;	///< Optional element.
};

/// @brief "http://www.opengis.net/ows/1.1":ContactType is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Information required to enable contact with the responsible person and/or organization.
/// </BLOCKQUOTE></PRE>
///
/// <PRE><BLOCKQUOTE>
///   For OWS use in the service metadata document, the optional hoursOfService and contactInstructions elements were retained, as possibly being useful in the ServiceProvider section.
/// </BLOCKQUOTE></PRE>
///
/// @note class ows__ContactType operations:
/// - ows__ContactType* soap_new_ows__ContactType(soap*) allocate and default initialize
/// - ows__ContactType* soap_new_ows__ContactType(soap*, int num) allocate and default initialize an array
/// - ows__ContactType* soap_new_req_ows__ContactType(soap*, ...) allocate, set required members
/// - ows__ContactType* soap_new_set_ows__ContactType(soap*, ...) allocate, set all public members
/// - ows__ContactType::soap_default(soap*) default initialize members
/// - int soap_read_ows__ContactType(soap*, ows__ContactType*) deserialize from a stream
/// - int soap_write_ows__ContactType(soap*, ows__ContactType*) serialize to a stream
/// - ows__ContactType* ows__ContactType::soap_dup(soap*) returns deep copy of ows__ContactType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - ows__ContactType::soap_del() deep deletes ows__ContactType data members, use only after ows__ContactType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int ows__ContactType::soap_type() returns SOAP_TYPE_ows__ContactType or derived type identifier
class ows__ContactType : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   Telephone numbers at which the organization or individual may be contacted.
/// </BLOCKQUOTE></PRE>
///
/// Element "Phone" of type "http://www.opengis.net/ows/1.1":TelephoneType.
    ows__TelephoneType*                  Phone                          0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Physical and email address at which the organization or individual may be contacted.
/// </BLOCKQUOTE></PRE>
///
/// Element "Address" of type "http://www.opengis.net/ows/1.1":AddressType.
    ows__AddressType*                    Address                        0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   On-line information that can be used to contact the individual or organization. OWS specifics: The xlink:href attribute in the xlink:simpleAttrs attribute group shall be used to reference this resource. Whenever practical, the xlink:href attribute with type anyURI should be a URL from which more contact information can be electronically retrieved. The xlink:title attribute with type "string" can be used to name this set of information. The other attributes in the xlink:simpleAttrs attribute group should not be used.
/// </BLOCKQUOTE></PRE>
///
/// Element "OnlineResource" of type "http://www.opengis.net/ows/1.1":OnlineResourceType.
    ows__OnlineResourceType*             OnlineResource                 0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Time period (including time zone) when individuals can contact the organization or individual.
/// </BLOCKQUOTE></PRE>
///
/// Element "HoursOfService" of type xs:string.
    std::string*                         HoursOfService                 0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Supplemental instructions on how or when to contact the individual or organization.
/// </BLOCKQUOTE></PRE>
///
/// Element "ContactInstructions" of type xs:string.
    std::string*                         ContactInstructions            0;	///< Optional element.
};

/// @brief "http://www.opengis.net/ows/1.1":OnlineResourceType is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Reference to on-line resource from which data can be obtained.
/// </BLOCKQUOTE></PRE>
///
/// <PRE><BLOCKQUOTE>
///   For OWS use in the service metadata document, the CI_OnlineResource class was XML encoded as the attributeGroup "xlink:simpleAttrs", as used in GML.
/// </BLOCKQUOTE></PRE>
///
/// This type is extended by:
/// - "http://www.opengis.net/ows/1.1":RequestMethodType as ows__RequestMethodType
///
/// @note class ows__OnlineResourceType operations:
/// - ows__OnlineResourceType* soap_new_ows__OnlineResourceType(soap*) allocate and default initialize
/// - ows__OnlineResourceType* soap_new_ows__OnlineResourceType(soap*, int num) allocate and default initialize an array
/// - ows__OnlineResourceType* soap_new_req_ows__OnlineResourceType(soap*, ...) allocate, set required members
/// - ows__OnlineResourceType* soap_new_set_ows__OnlineResourceType(soap*, ...) allocate, set all public members
/// - ows__OnlineResourceType::soap_default(soap*) default initialize members
/// - int soap_read_ows__OnlineResourceType(soap*, ows__OnlineResourceType*) deserialize from a stream
/// - int soap_write_ows__OnlineResourceType(soap*, ows__OnlineResourceType*) serialize to a stream
/// - ows__OnlineResourceType* ows__OnlineResourceType::soap_dup(soap*) returns deep copy of ows__OnlineResourceType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - ows__OnlineResourceType::soap_del() deep deletes ows__OnlineResourceType data members, use only after ows__OnlineResourceType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int ows__OnlineResourceType::soap_type() returns SOAP_TYPE_ows__OnlineResourceType or derived type identifier
class ows__OnlineResourceType : public xsd__anyType
{ public:
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
  @ enum xlink__typeType                 xlink__type                    0 == xlink__typeType__simple;	///< Optional attribute with fixed value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
  @ xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
  @ xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
  @ xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
  @ xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
  @ enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
  @ enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.opengis.net/ows/1.1":TelephoneType is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Telephone numbers for contacting the responsible individual or organization.
/// </BLOCKQUOTE></PRE>
///
/// @note class ows__TelephoneType operations:
/// - ows__TelephoneType* soap_new_ows__TelephoneType(soap*) allocate and default initialize
/// - ows__TelephoneType* soap_new_ows__TelephoneType(soap*, int num) allocate and default initialize an array
/// - ows__TelephoneType* soap_new_req_ows__TelephoneType(soap*, ...) allocate, set required members
/// - ows__TelephoneType* soap_new_set_ows__TelephoneType(soap*, ...) allocate, set all public members
/// - ows__TelephoneType::soap_default(soap*) default initialize members
/// - int soap_read_ows__TelephoneType(soap*, ows__TelephoneType*) deserialize from a stream
/// - int soap_write_ows__TelephoneType(soap*, ows__TelephoneType*) serialize to a stream
/// - ows__TelephoneType* ows__TelephoneType::soap_dup(soap*) returns deep copy of ows__TelephoneType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - ows__TelephoneType::soap_del() deep deletes ows__TelephoneType data members, use only after ows__TelephoneType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int ows__TelephoneType::soap_type() returns SOAP_TYPE_ows__TelephoneType or derived type identifier
class ows__TelephoneType : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   Telephone number by which individuals can speak to the responsible organization or individual.
/// </BLOCKQUOTE></PRE>
///
/// Vector of std::string of length 0..unbounded.
    std::vector<std::string            > Voice                          0;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   Telephone number of a facsimile machine for the responsible
///   organization or individual.
/// </BLOCKQUOTE></PRE>
///
/// Vector of std::string of length 0..unbounded.
    std::vector<std::string            > Facsimile                      0;	///< Multiple elements.
};

/// @brief "http://www.opengis.net/ows/1.1":AddressType is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Location of the responsible individual or organization.
/// </BLOCKQUOTE></PRE>
///
/// @note class ows__AddressType operations:
/// - ows__AddressType* soap_new_ows__AddressType(soap*) allocate and default initialize
/// - ows__AddressType* soap_new_ows__AddressType(soap*, int num) allocate and default initialize an array
/// - ows__AddressType* soap_new_req_ows__AddressType(soap*, ...) allocate, set required members
/// - ows__AddressType* soap_new_set_ows__AddressType(soap*, ...) allocate, set all public members
/// - ows__AddressType::soap_default(soap*) default initialize members
/// - int soap_read_ows__AddressType(soap*, ows__AddressType*) deserialize from a stream
/// - int soap_write_ows__AddressType(soap*, ows__AddressType*) serialize to a stream
/// - ows__AddressType* ows__AddressType::soap_dup(soap*) returns deep copy of ows__AddressType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - ows__AddressType::soap_del() deep deletes ows__AddressType data members, use only after ows__AddressType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int ows__AddressType::soap_type() returns SOAP_TYPE_ows__AddressType or derived type identifier
class ows__AddressType : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   Address line for the location.
/// </BLOCKQUOTE></PRE>
///
/// Vector of std::string of length 0..unbounded.
    std::vector<std::string            > DeliveryPoint                  0;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   City of the location.
/// </BLOCKQUOTE></PRE>
///
/// Element "City" of type xs:string.
    std::string*                         City                           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   State or province of the location.
/// </BLOCKQUOTE></PRE>
///
/// Element "AdministrativeArea" of type xs:string.
    std::string*                         AdministrativeArea             0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   ZIP or other postal code.
/// </BLOCKQUOTE></PRE>
///
/// Element "PostalCode" of type xs:string.
    std::string*                         PostalCode                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Country of the physical address.
/// </BLOCKQUOTE></PRE>
///
/// Element "Country" of type xs:string.
    std::string*                         Country                        0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Address of the electronic mailbox of the responsible organization or individual.
/// </BLOCKQUOTE></PRE>
///
/// Vector of std::string of length 0..unbounded.
    std::vector<std::string            > ElectronicMailAddress          0;	///< Multiple elements.
};

/// @brief "http://www.opengis.net/ows/1.1":CapabilitiesBaseType is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   XML encoded GetCapabilities operation response. This document provides clients with service metadata about a specific service instance, usually including metadata about the tightly-coupled data served. If the server does not implement the updateSequence parameter, the server shall always return the complete Capabilities document, without the updateSequence parameter. When the server implements the updateSequence parameter and the GetCapabilities operation request included the updateSequence parameter with the current value, the server shall return this element with only the "version" and "updateSequence" attributes. Otherwise, all optional elements shall be included or not depending on the actual value of the Contents parameter in the GetCapabilities operation request. This base type shall be extended by each specific OWS to include the additional contents needed.
/// </BLOCKQUOTE></PRE>
///
/// This type is extended by:
/// - "http://www.opengis.net/wfs/2.0":WFS_CapabilitiesType as wfs__WFS_x005fCapabilitiesType
///
/// @note class ows__CapabilitiesBaseType operations:
/// - ows__CapabilitiesBaseType* soap_new_ows__CapabilitiesBaseType(soap*) allocate and default initialize
/// - ows__CapabilitiesBaseType* soap_new_ows__CapabilitiesBaseType(soap*, int num) allocate and default initialize an array
/// - ows__CapabilitiesBaseType* soap_new_req_ows__CapabilitiesBaseType(soap*, ...) allocate, set required members
/// - ows__CapabilitiesBaseType* soap_new_set_ows__CapabilitiesBaseType(soap*, ...) allocate, set all public members
/// - ows__CapabilitiesBaseType::soap_default(soap*) default initialize members
/// - int soap_read_ows__CapabilitiesBaseType(soap*, ows__CapabilitiesBaseType*) deserialize from a stream
/// - int soap_write_ows__CapabilitiesBaseType(soap*, ows__CapabilitiesBaseType*) serialize to a stream
/// - ows__CapabilitiesBaseType* ows__CapabilitiesBaseType::soap_dup(soap*) returns deep copy of ows__CapabilitiesBaseType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - ows__CapabilitiesBaseType::soap_del() deep deletes ows__CapabilitiesBaseType data members, use only after ows__CapabilitiesBaseType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int ows__CapabilitiesBaseType::soap_type() returns SOAP_TYPE_ows__CapabilitiesBaseType or derived type identifier
class ows__CapabilitiesBaseType : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   General metadata for this specific server. This XML Schema of this section shall be the same for all OWS.
/// </BLOCKQUOTE></PRE>
///
/// Element reference "http://www.opengis.net/ows/1.1:""http://www.opengis.net/ows/1.1":ServiceIdentification.
    _ows__ServiceIdentification*         ServiceIdentification          0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Metadata about the organization that provides this specific service instance or server.
/// </BLOCKQUOTE></PRE>
///
/// Element reference "http://www.opengis.net/ows/1.1:""http://www.opengis.net/ows/1.1":ServiceProvider.
    _ows__ServiceProvider*               ServiceProvider                0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Metadata about the operations and related abilities specified by this service and implemented by this server, including the URLs for operation requests. The basic contents of this section shall be the same for all OWS types, but individual services can add elements and/or change the optionality of optional elements.
/// </BLOCKQUOTE></PRE>
///
/// Element reference "http://www.opengis.net/ows/1.1:""http://www.opengis.net/ows/1.1":OperationsMetadata.
    _ows__OperationsMetadata*            OperationsMetadata             0;	///< Optional element.
/// Attribute "version" of type "http://www.opengis.net/ows/1.1":VersionType.
  @ ows__VersionType                     version                        1;	///< Required attribute.
/// <PRE><BLOCKQUOTE>
///   Service metadata document version, having values that are "increased" whenever any change is made in service metadata document. Values are selected by each server, and are always opaque to clients. When not supported by server, server shall not return this attribute.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "updateSequence" of type "http://www.opengis.net/ows/1.1":UpdateSequenceType.
  @ ows__UpdateSequenceType*             updateSequence                 0;	///< Optional attribute.
};

/// @brief "http://www.opengis.net/ows/1.1":GetCapabilitiesType is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   XML encoded GetCapabilities operation request. This operation allows clients to retrieve service metadata about a specific service instance. In this XML encoding, no "request" parameter is included, since the element name specifies the specific operation. This base type shall be extended by each specific OWS to include the additional required "service" attribute, with the correct value for that OWS.
/// </BLOCKQUOTE></PRE>
///
/// This type is extended by:
/// - "http://www.opengis.net/wfs/2.0":GetCapabilitiesType as wfs__GetCapabilitiesType
///
/// @note class ows__GetCapabilitiesType operations:
/// - ows__GetCapabilitiesType* soap_new_ows__GetCapabilitiesType(soap*) allocate and default initialize
/// - ows__GetCapabilitiesType* soap_new_ows__GetCapabilitiesType(soap*, int num) allocate and default initialize an array
/// - ows__GetCapabilitiesType* soap_new_req_ows__GetCapabilitiesType(soap*, ...) allocate, set required members
/// - ows__GetCapabilitiesType* soap_new_set_ows__GetCapabilitiesType(soap*, ...) allocate, set all public members
/// - ows__GetCapabilitiesType::soap_default(soap*) default initialize members
/// - int soap_read_ows__GetCapabilitiesType(soap*, ows__GetCapabilitiesType*) deserialize from a stream
/// - int soap_write_ows__GetCapabilitiesType(soap*, ows__GetCapabilitiesType*) serialize to a stream
/// - ows__GetCapabilitiesType* ows__GetCapabilitiesType::soap_dup(soap*) returns deep copy of ows__GetCapabilitiesType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - ows__GetCapabilitiesType::soap_del() deep deletes ows__GetCapabilitiesType data members, use only after ows__GetCapabilitiesType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int ows__GetCapabilitiesType::soap_type() returns SOAP_TYPE_ows__GetCapabilitiesType or derived type identifier
class ows__GetCapabilitiesType : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   When omitted, server shall return latest supported version.
/// </BLOCKQUOTE></PRE>
///
/// Element "AcceptVersions" of type "http://www.opengis.net/ows/1.1":AcceptVersionsType.
    ows__AcceptVersionsType*             AcceptVersions                 0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   When omitted or not supported by server, server shall return complete service metadata (Capabilities) document.
/// </BLOCKQUOTE></PRE>
///
/// Element "Sections" of type "http://www.opengis.net/ows/1.1":SectionsType.
    ows__SectionsType*                   Sections                       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   When omitted or not supported by server, server shall return service metadata document using the MIME type "text/xml".
/// </BLOCKQUOTE></PRE>
///
/// Element "AcceptFormats" of type "http://www.opengis.net/ows/1.1":AcceptFormatsType.
    ows__AcceptFormatsType*              AcceptFormats                  0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   When omitted or not supported by server, server shall return latest complete service metadata document.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "updateSequence" of type "http://www.opengis.net/ows/1.1":UpdateSequenceType.
  @ ows__UpdateSequenceType*             updateSequence                 0;	///< Optional attribute.
};

/// @brief "http://www.opengis.net/ows/1.1":AcceptVersionsType is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Prioritized sequence of one or more specification versions accepted by client, with preferred versions listed first. See Version negotiation subclause for more information.
/// </BLOCKQUOTE></PRE>
///
/// @note class ows__AcceptVersionsType operations:
/// - ows__AcceptVersionsType* soap_new_ows__AcceptVersionsType(soap*) allocate and default initialize
/// - ows__AcceptVersionsType* soap_new_ows__AcceptVersionsType(soap*, int num) allocate and default initialize an array
/// - ows__AcceptVersionsType* soap_new_req_ows__AcceptVersionsType(soap*, ...) allocate, set required members
/// - ows__AcceptVersionsType* soap_new_set_ows__AcceptVersionsType(soap*, ...) allocate, set all public members
/// - ows__AcceptVersionsType::soap_default(soap*) default initialize members
/// - int soap_read_ows__AcceptVersionsType(soap*, ows__AcceptVersionsType*) deserialize from a stream
/// - int soap_write_ows__AcceptVersionsType(soap*, ows__AcceptVersionsType*) serialize to a stream
/// - ows__AcceptVersionsType* ows__AcceptVersionsType::soap_dup(soap*) returns deep copy of ows__AcceptVersionsType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - ows__AcceptVersionsType::soap_del() deep deletes ows__AcceptVersionsType data members, use only after ows__AcceptVersionsType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int ows__AcceptVersionsType::soap_type() returns SOAP_TYPE_ows__AcceptVersionsType or derived type identifier
class ows__AcceptVersionsType : public xsd__anyType
{ public:
/// Vector of ows__VersionType of length 1..unbounded.
    std::vector<ows__VersionType       > Version                        1;	///< Multiple elements.
};

/// @brief "http://www.opengis.net/ows/1.1":SectionsType is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Unordered list of zero or more names of requested sections in complete service metadata document. Each Section value shall contain an allowed section name as specified by each OWS specification. See Sections parameter subclause for more information.
/// </BLOCKQUOTE></PRE>
///
/// @note class ows__SectionsType operations:
/// - ows__SectionsType* soap_new_ows__SectionsType(soap*) allocate and default initialize
/// - ows__SectionsType* soap_new_ows__SectionsType(soap*, int num) allocate and default initialize an array
/// - ows__SectionsType* soap_new_req_ows__SectionsType(soap*, ...) allocate, set required members
/// - ows__SectionsType* soap_new_set_ows__SectionsType(soap*, ...) allocate, set all public members
/// - ows__SectionsType::soap_default(soap*) default initialize members
/// - int soap_read_ows__SectionsType(soap*, ows__SectionsType*) deserialize from a stream
/// - int soap_write_ows__SectionsType(soap*, ows__SectionsType*) serialize to a stream
/// - ows__SectionsType* ows__SectionsType::soap_dup(soap*) returns deep copy of ows__SectionsType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - ows__SectionsType::soap_del() deep deletes ows__SectionsType data members, use only after ows__SectionsType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int ows__SectionsType::soap_type() returns SOAP_TYPE_ows__SectionsType or derived type identifier
class ows__SectionsType : public xsd__anyType
{ public:
/// Vector of std::string of length 0..unbounded.
    std::vector<std::string            > Section                        0;	///< Multiple elements.
};

/// @brief "http://www.opengis.net/ows/1.1":AcceptFormatsType is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Prioritized sequence of zero or more GetCapabilities operation response formats desired by client, with preferred formats listed first. Each response format shall be identified by its MIME type. See AcceptFormats parameter use subclause for more information.
/// </BLOCKQUOTE></PRE>
///
/// @note class ows__AcceptFormatsType operations:
/// - ows__AcceptFormatsType* soap_new_ows__AcceptFormatsType(soap*) allocate and default initialize
/// - ows__AcceptFormatsType* soap_new_ows__AcceptFormatsType(soap*, int num) allocate and default initialize an array
/// - ows__AcceptFormatsType* soap_new_req_ows__AcceptFormatsType(soap*, ...) allocate, set required members
/// - ows__AcceptFormatsType* soap_new_set_ows__AcceptFormatsType(soap*, ...) allocate, set all public members
/// - ows__AcceptFormatsType::soap_default(soap*) default initialize members
/// - int soap_read_ows__AcceptFormatsType(soap*, ows__AcceptFormatsType*) deserialize from a stream
/// - int soap_write_ows__AcceptFormatsType(soap*, ows__AcceptFormatsType*) serialize to a stream
/// - ows__AcceptFormatsType* ows__AcceptFormatsType::soap_dup(soap*) returns deep copy of ows__AcceptFormatsType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - ows__AcceptFormatsType::soap_del() deep deletes ows__AcceptFormatsType data members, use only after ows__AcceptFormatsType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int ows__AcceptFormatsType::soap_type() returns SOAP_TYPE_ows__AcceptFormatsType or derived type identifier
class ows__AcceptFormatsType : public xsd__anyType
{ public:
/// Vector of ows__MimeType of length 0..unbounded.
    std::vector<ows__MimeType          > OutputFormat                   0;	///< Multiple elements.
};

/// @brief "http://www.opengis.net/ows/1.1":UnNamedDomainType is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Valid domain (or allowed set of values) of one quantity, with needed metadata but without a quantity name or identifier.
/// </BLOCKQUOTE></PRE>
///
/// This type is extended by:
/// - "http://www.opengis.net/ows/1.1":DomainType as ows__DomainType
///
/// @note class ows__UnNamedDomainType operations:
/// - ows__UnNamedDomainType* soap_new_ows__UnNamedDomainType(soap*) allocate and default initialize
/// - ows__UnNamedDomainType* soap_new_ows__UnNamedDomainType(soap*, int num) allocate and default initialize an array
/// - ows__UnNamedDomainType* soap_new_req_ows__UnNamedDomainType(soap*, ...) allocate, set required members
/// - ows__UnNamedDomainType* soap_new_set_ows__UnNamedDomainType(soap*, ...) allocate, set all public members
/// - ows__UnNamedDomainType::soap_default(soap*) default initialize members
/// - int soap_read_ows__UnNamedDomainType(soap*, ows__UnNamedDomainType*) deserialize from a stream
/// - int soap_write_ows__UnNamedDomainType(soap*, ows__UnNamedDomainType*) serialize to a stream
/// - ows__UnNamedDomainType* ows__UnNamedDomainType::soap_dup(soap*) returns deep copy of ows__UnNamedDomainType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - ows__UnNamedDomainType::soap_del() deep deletes ows__UnNamedDomainType data members, use only after ows__UnNamedDomainType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int ows__UnNamedDomainType::soap_type() returns SOAP_TYPE_ows__UnNamedDomainType or derived type identifier
class ows__UnNamedDomainType : public xsd__anyType
{ public:
//  BEGIN GROUP <xs:group name="PossibleValues">
/// <PRE><BLOCKQUOTE>
///   Specifies the possible values of this quantity.
/// </BLOCKQUOTE></PRE>
///
//  BEGIN CHOICE <xs:choice>
  $ int                                  __union_UnNamedDomainType     ;	///< Union _ows__union_UnNamedDomainType selector: set to SOAP_UNION__ows__union_UnNamedDomainType_<fieldname>
    union _ows__union_UnNamedDomainType
    {
/// <PRE><BLOCKQUOTE>
///   List of all the valid values and/or ranges of values for this quantity. For numeric quantities, signed values should be ordered from negative infinity to positive infinity.
/// </BLOCKQUOTE></PRE>
///
/// Element reference "http://www.opengis.net/ows/1.1:""http://www.opengis.net/ows/1.1":AllowedValues.
    _ows__AllowedValues*                 AllowedValues                 ;	///< Choice of element (one of multiple choices).
/// <PRE><BLOCKQUOTE>
///   Specifies that any value is allowed for this parameter.
/// </BLOCKQUOTE></PRE>
///
/// Element reference "http://www.opengis.net/ows/1.1:""http://www.opengis.net/ows/1.1":AnyValue.
    _ows__AnyValue*                      AnyValue                      ;	///< Choice of element (one of multiple choices).
/// <PRE><BLOCKQUOTE>
///   Specifies that no values are allowed for this parameter or quantity.
/// </BLOCKQUOTE></PRE>
///
/// Element reference "http://www.opengis.net/ows/1.1:""http://www.opengis.net/ows/1.1":NoValues.
    _ows__NoValues*                      NoValues                      ;	///< Choice of element (one of multiple choices).
/// <PRE><BLOCKQUOTE>
///   Reference to externally specified list of all the valid values and/or ranges of values for this quantity. (Informative: This element was simplified from the metaDataProperty element in GML 3.0.)
/// </BLOCKQUOTE></PRE>
///
/// Element reference "http://www.opengis.net/ows/1.1:""http://www.opengis.net/ows/1.1":ValuesReference.
    _ows__ValuesReference*               ValuesReference               ;	///< Choice of element (one of multiple choices).
    }                                    union_UnNamedDomainType       ;
//  END OF CHOICE
//  END OF GROUP
/// <PRE><BLOCKQUOTE>
///   Optional default value for this quantity, which should be included when this quantity has a default value.
/// </BLOCKQUOTE></PRE>
///
/// <PRE><BLOCKQUOTE>
///   The default value for a quantity for which multiple values are allowed.
/// </BLOCKQUOTE></PRE>
///
/// Element reference "http://www.opengis.net/ows/1.1:""http://www.opengis.net/ows/1.1":DefaultValue.
    ows__ValueType*                      DefaultValue                   0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Meaning metadata should be referenced or included for each quantity.
/// </BLOCKQUOTE></PRE>
///
/// <PRE><BLOCKQUOTE>
///   Definition of the meaning or semantics of this set of values. This Meaning can provide more specific, complete, precise, machine accessible, and machine understandable semantics about this quantity, relative to other available semantic information. For example, other semantic information is often provided in "documentation" elements in XML Schemas or "description" elements in GML objects.
/// </BLOCKQUOTE></PRE>
///
/// Element reference "http://www.opengis.net/ows/1.1:""http://www.opengis.net/ows/1.1":Meaning.
    ows__DomainMetadataType*             Meaning                        0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   This data type metadata should be referenced or included for each quantity.
/// </BLOCKQUOTE></PRE>
///
/// <PRE><BLOCKQUOTE>
///   Definition of the data type of this set of values. In this case, the xlink:href attribute can reference a URN for a well-known data type. For example, such a URN could be a data type identification URN defined in the "ogc" URN namespace.
/// </BLOCKQUOTE></PRE>
///
/// Element reference "http://www.opengis.net/ows/1.1:""http://www.opengis.net/ows/1.1":DataType.
    ows__DomainMetadataType*             DataType                       0;	///< Optional element.
//  BEGIN GROUP <xs:group name="ValuesUnit" minOccurs="0">
/// <PRE><BLOCKQUOTE>
///   Indicates that this quantity has units or a reference system, and identifies the unit or reference system used by the AllowedValues or ValuesReference.
/// </BLOCKQUOTE></PRE>
///
//  BEGIN CHOICE <xs:choice minOccurs="0">
  $ int                                  __union_UnNamedDomainType_     0;	///< Union _ows__union_UnNamedDomainType_ selector: set to SOAP_UNION__ows__union_UnNamedDomainType__<fieldname> or 0 to omit
    union _ows__union_UnNamedDomainType_
    {
/// <PRE><BLOCKQUOTE>
///   Identifier of unit of measure of this set of values. Should be included then this set of values has units (and not a more complete reference system).
/// </BLOCKQUOTE></PRE>
///
/// <PRE><BLOCKQUOTE>
///   Definition of the unit of measure of this set of values. In this case, the xlink:href attribute can reference a URN for a well-known unit of measure (uom). For example, such a URN could be a UOM identification URN defined in the "ogc" URN namespace.
/// </BLOCKQUOTE></PRE>
///
/// Element reference "http://www.opengis.net/ows/1.1:""http://www.opengis.net/ows/1.1":UOM.
    ows__DomainMetadataType*             UOM                           ;	///< Choice of element (one of multiple choices).
/// <PRE><BLOCKQUOTE>
///   Identifier of reference system used by this set of values. Should be included then this set of values has a reference system (not just units).
/// </BLOCKQUOTE></PRE>
///
/// <PRE><BLOCKQUOTE>
///   Definition of the reference system used by this set of values, including the unit of measure whenever applicable (as is normal). In this case, the xlink:href attribute can reference a URN for a well-known reference system, such as for a coordinate reference system (CRS). For example, such a URN could be a CRS identification URN defined in the "ogc" URN namespace.
/// </BLOCKQUOTE></PRE>
///
/// Element reference "http://www.opengis.net/ows/1.1:""http://www.opengis.net/ows/1.1":ReferenceSystem.
    ows__DomainMetadataType*             ReferenceSystem               ;	///< Choice of element (one of multiple choices).
    }                                    union_UnNamedDomainType_      ;
//  END OF CHOICE
//  END OF GROUP
/// <PRE><BLOCKQUOTE>
///   Optional unordered list of other metadata about this quantity. A list of required and optional other metadata elements for this quantity should be specified in the Implementation Specification for this service.
/// </BLOCKQUOTE></PRE>
///
/// Vector of ows__MetadataType* element refs of length 0..unbounded.
    std::vector<ows__MetadataType*     > Metadata                       0;	///< Multiple elements.
};

/// @brief "http://www.opengis.net/ows/1.1":RangeType is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   A range of values of a numeric parameter. This range can be continuous or discrete, defined by a fixed spacing between adjacent valid values. If the MinimumValue or MaximumValue is not included, there is no value limit in that direction. Inclusion of the specified minimum and maximum values in the range shall be defined by the rangeClosure.
/// </BLOCKQUOTE></PRE>
///
/// @note class ows__RangeType operations:
/// - ows__RangeType* soap_new_ows__RangeType(soap*) allocate and default initialize
/// - ows__RangeType* soap_new_ows__RangeType(soap*, int num) allocate and default initialize an array
/// - ows__RangeType* soap_new_req_ows__RangeType(soap*, ...) allocate, set required members
/// - ows__RangeType* soap_new_set_ows__RangeType(soap*, ...) allocate, set all public members
/// - ows__RangeType::soap_default(soap*) default initialize members
/// - int soap_read_ows__RangeType(soap*, ows__RangeType*) deserialize from a stream
/// - int soap_write_ows__RangeType(soap*, ows__RangeType*) serialize to a stream
/// - ows__RangeType* ows__RangeType::soap_dup(soap*) returns deep copy of ows__RangeType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - ows__RangeType::soap_del() deep deletes ows__RangeType data members, use only after ows__RangeType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int ows__RangeType::soap_type() returns SOAP_TYPE_ows__RangeType or derived type identifier
class ows__RangeType : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   Minimum value of this numeric parameter.
/// </BLOCKQUOTE></PRE>
///
/// Element reference "http://www.opengis.net/ows/1.1:""http://www.opengis.net/ows/1.1":MinimumValue.
    ows__ValueType*                      MinimumValue                   0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Maximum value of this numeric parameter.
/// </BLOCKQUOTE></PRE>
///
/// Element reference "http://www.opengis.net/ows/1.1:""http://www.opengis.net/ows/1.1":MaximumValue.
    ows__ValueType*                      MaximumValue                   0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Shall be included when the allowed values are NOT continuous in this range. Shall not be included when the allowed values are continuous in this range.
/// </BLOCKQUOTE></PRE>
///
/// <PRE><BLOCKQUOTE>
///   The regular distance or spacing between the allowed values in a range.
/// </BLOCKQUOTE></PRE>
///
/// Element reference "http://www.opengis.net/ows/1.1:""http://www.opengis.net/ows/1.1":Spacing.
    ows__ValueType*                      Spacing                        0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Shall be included unless the default value applies.
/// </BLOCKQUOTE></PRE>
///
/// Attribute reference "http://www.opengis.net/ows/1.1":"http://www.opengis.net/ows/1.1":rangeClosure.
/// <PRE><BLOCKQUOTE>
///   Specifies which of the minimum and maximum values are included in the range. Note that plus and minus infinity are considered closed bounds.
/// </BLOCKQUOTE></PRE>
///
  @ enum _ows__rangeClosure              ows__rangeClosure              0 /* @warning: cannot assign default/fixed value to this type */;	///< Optional attribute with default value="closed".
};

/// @brief "http://www.opengis.net/ows/1.1":ContentsBaseType is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Contents of typical Contents section of an OWS service metadata (Capabilities) document. This type shall be extended and/or restricted if needed for specific OWS use to include the specific metadata needed.
/// </BLOCKQUOTE></PRE>
///
/// @note class ows__ContentsBaseType operations:
/// - ows__ContentsBaseType* soap_new_ows__ContentsBaseType(soap*) allocate and default initialize
/// - ows__ContentsBaseType* soap_new_ows__ContentsBaseType(soap*, int num) allocate and default initialize an array
/// - ows__ContentsBaseType* soap_new_req_ows__ContentsBaseType(soap*, ...) allocate, set required members
/// - ows__ContentsBaseType* soap_new_set_ows__ContentsBaseType(soap*, ...) allocate, set all public members
/// - ows__ContentsBaseType::soap_default(soap*) default initialize members
/// - int soap_read_ows__ContentsBaseType(soap*, ows__ContentsBaseType*) deserialize from a stream
/// - int soap_write_ows__ContentsBaseType(soap*, ows__ContentsBaseType*) serialize to a stream
/// - ows__ContentsBaseType* ows__ContentsBaseType::soap_dup(soap*) returns deep copy of ows__ContentsBaseType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - ows__ContentsBaseType::soap_del() deep deletes ows__ContentsBaseType data members, use only after ows__ContentsBaseType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int ows__ContentsBaseType::soap_type() returns SOAP_TYPE_ows__ContentsBaseType or derived type identifier
class ows__ContentsBaseType : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   Unordered set of summary descriptions for the datasets available from this OWS server. This set shall be included unless another source is referenced and all this metadata is available from that source.
/// </BLOCKQUOTE></PRE>
///
/// Vector of ows__DatasetDescriptionSummaryBaseType* element refs of length 0..unbounded.
    std::vector<ows__DatasetDescriptionSummaryBaseType*> DatasetDescriptionSummary      0;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   Unordered set of references to other sources of metadata describing the coverage offerings available from this server.
/// </BLOCKQUOTE></PRE>
///
/// <PRE><BLOCKQUOTE>
///   Reference to a source of metadata describing coverage offerings available from this server. This parameter can reference a catalogue server from which dataset metadata is available. This ability is expected to be used by servers with thousands or millions of datasets, for which searching a catalogue is more feasible than fetching a long Capabilities XML document. When no DatasetDescriptionSummaries are included, and one or more catalogue servers are referenced, this set of catalogues shall contain current metadata summaries for all the datasets currently available from this OWS server, with the metadata for each such dataset referencing this OWS server.
/// </BLOCKQUOTE></PRE>
///
/// Vector of ows__MetadataType* element refs of length 0..unbounded.
    std::vector<ows__MetadataType*     > OtherSource                    0;	///< Multiple elements.
};

/// @brief "http://www.opengis.net/ows/1.1":AbstractReferenceBaseType is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Base for a reference to a remote or local resource.
/// </BLOCKQUOTE></PRE>
///
/// <PRE><BLOCKQUOTE>
///   This type contains only a restricted and annotated set of the attributes from the xlink:simpleAttrs attributeGroup.
/// </BLOCKQUOTE></PRE>
///
/// This type is extended by:
/// - "http://www.opengis.net/ows/1.1":ReferenceType as ows__ReferenceType
///
/// @note class ows__AbstractReferenceBaseType operations:
/// - ows__AbstractReferenceBaseType* soap_new_ows__AbstractReferenceBaseType(soap*) allocate and default initialize
/// - ows__AbstractReferenceBaseType* soap_new_ows__AbstractReferenceBaseType(soap*, int num) allocate and default initialize an array
/// - ows__AbstractReferenceBaseType* soap_new_req_ows__AbstractReferenceBaseType(soap*, ...) allocate, set required members
/// - ows__AbstractReferenceBaseType* soap_new_set_ows__AbstractReferenceBaseType(soap*, ...) allocate, set all public members
/// - ows__AbstractReferenceBaseType::soap_default(soap*) default initialize members
/// - int soap_read_ows__AbstractReferenceBaseType(soap*, ows__AbstractReferenceBaseType*) deserialize from a stream
/// - int soap_write_ows__AbstractReferenceBaseType(soap*, ows__AbstractReferenceBaseType*) serialize to a stream
/// - ows__AbstractReferenceBaseType* ows__AbstractReferenceBaseType::soap_dup(soap*) returns deep copy of ows__AbstractReferenceBaseType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - ows__AbstractReferenceBaseType::soap_del() deep deletes ows__AbstractReferenceBaseType data members, use only after ows__AbstractReferenceBaseType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int ows__AbstractReferenceBaseType::soap_type() returns SOAP_TYPE_ows__AbstractReferenceBaseType or derived type identifier
class ows__AbstractReferenceBaseType : public xsd__anyType
{ public:
/// Attribute "type" of type xs:string.
  @ std::string                          ows__type                      0 == "simple";	///< Optional attribute with fixed value="simple".
/// <PRE><BLOCKQUOTE>
///   Reference to a remote resource or local payload. A remote resource is typically addressed by a URL. For a local payload (such as a multipart mime message), the xlink:href must start with the prefix cid:.
/// </BLOCKQUOTE></PRE>
///
/// Attribute reference "http://www.opengis.net/ows/1.1":"http://www.w3.org/1999/xlink":href.
  @ xlink__hrefType                      xlink__href                    1;	///< Required attribute.
/// <PRE><BLOCKQUOTE>
///   Reference to a resource that describes the role of this reference. When no value is supplied, no particular role value is to be inferred.
/// </BLOCKQUOTE></PRE>
///
/// Attribute reference "http://www.opengis.net/ows/1.1":"http://www.w3.org/1999/xlink":role.
  @ xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Although allowed, this attribute is not expected to be useful in this application of xlink:simpleAttrs.
/// </BLOCKQUOTE></PRE>
///
/// Attribute reference "http://www.opengis.net/ows/1.1":"http://www.w3.org/1999/xlink":arcrole.
  @ xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Describes the meaning of the referenced resource in a human-readable fashion.
/// </BLOCKQUOTE></PRE>
///
/// Attribute reference "http://www.opengis.net/ows/1.1":"http://www.w3.org/1999/xlink":title.
  @ xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Although allowed, this attribute is not expected to be useful in this application of xlink:simpleAttrs.
/// </BLOCKQUOTE></PRE>
///
/// Attribute reference "http://www.opengis.net/ows/1.1":"http://www.w3.org/1999/xlink":show.
  @ enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Although allowed, this attribute is not expected to be useful in this application of xlink:simpleAttrs.
/// </BLOCKQUOTE></PRE>
///
/// Attribute reference "http://www.opengis.net/ows/1.1":"http://www.w3.org/1999/xlink":actuate.
  @ enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// @brief Top-level root element "http://www.opengis.net/ows/1.1":ExceptionReport
/// <PRE><BLOCKQUOTE>
///   Report message returned to the client that requested any OWS operation when the server detects an error while processing that operation request.
/// </BLOCKQUOTE></PRE>
///
/// @brief "http://www.opengis.net/ows/1.1":ExceptionReport is a complexType.
///
/// @note class _ows__ExceptionReport operations:
/// - _ows__ExceptionReport* soap_new__ows__ExceptionReport(soap*) allocate and default initialize
/// - _ows__ExceptionReport* soap_new__ows__ExceptionReport(soap*, int num) allocate and default initialize an array
/// - _ows__ExceptionReport* soap_new_req__ows__ExceptionReport(soap*, ...) allocate, set required members
/// - _ows__ExceptionReport* soap_new_set__ows__ExceptionReport(soap*, ...) allocate, set all public members
/// - _ows__ExceptionReport::soap_default(soap*) default initialize members
/// - int soap_read__ows__ExceptionReport(soap*, _ows__ExceptionReport*) deserialize from a stream
/// - int soap_write__ows__ExceptionReport(soap*, _ows__ExceptionReport*) serialize to a stream
/// - _ows__ExceptionReport* _ows__ExceptionReport::soap_dup(soap*) returns deep copy of _ows__ExceptionReport, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _ows__ExceptionReport::soap_del() deep deletes _ows__ExceptionReport data members, use only after _ows__ExceptionReport::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _ows__ExceptionReport::soap_type() returns SOAP_TYPE__ows__ExceptionReport or derived type identifier
class _ows__ExceptionReport
{ public:
/// <PRE><BLOCKQUOTE>
///   Unordered list of one or more Exception elements that each describes an error. These Exception elements shall be interpreted by clients as being independent of one another (not hierarchical).
/// </BLOCKQUOTE></PRE>
///
/// Vector of ows__ExceptionType* element refs of length 1..unbounded.
    std::vector<ows__ExceptionType*    > Exception                      1;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   Specification version for OWS operation. The string value shall contain one x.y.z "version" value (e.g., "2.1.3"). A version number shall contain three non-negative integers separated by decimal points, in the form "x.y.z". The integers y and z shall not exceed 99. Each version shall be for the Implementation Specification (document) and the associated XML Schemas to which requested operations will conform. An Implementation Specification version normally specifies XML Schemas against which an XML encoded operation response must conform and should be validated. See Version negotiation subclause for more information.
/// </BLOCKQUOTE></PRE>
///
@/// Content pattern is "\\d+\\.\\d?\\d\\.\\d?\\d".
    std::string                                                        
                                         version                        1;	///< Required attribute.
/// <PRE><BLOCKQUOTE>
///   Identifier of the language used by all included exception text values. These language identifiers shall be as specified in IETF RFC 4646. When this attribute is omitted, the language used is not identified.
/// </BLOCKQUOTE></PRE>
///
/// Imported attribute reference xml:lang.
  @ _xml__lang*                          xml__lang                      0;	///< Optional attribute.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.opengis.net/ows/1.1":ServiceProvider
/// <PRE><BLOCKQUOTE>
///   Metadata about the organization that provides this specific service instance or server.
/// </BLOCKQUOTE></PRE>
///
/// @brief "http://www.opengis.net/ows/1.1":ServiceProvider is a complexType.
///
/// @note class _ows__ServiceProvider operations:
/// - _ows__ServiceProvider* soap_new__ows__ServiceProvider(soap*) allocate and default initialize
/// - _ows__ServiceProvider* soap_new__ows__ServiceProvider(soap*, int num) allocate and default initialize an array
/// - _ows__ServiceProvider* soap_new_req__ows__ServiceProvider(soap*, ...) allocate, set required members
/// - _ows__ServiceProvider* soap_new_set__ows__ServiceProvider(soap*, ...) allocate, set all public members
/// - _ows__ServiceProvider::soap_default(soap*) default initialize members
/// - int soap_read__ows__ServiceProvider(soap*, _ows__ServiceProvider*) deserialize from a stream
/// - int soap_write__ows__ServiceProvider(soap*, _ows__ServiceProvider*) serialize to a stream
/// - _ows__ServiceProvider* _ows__ServiceProvider::soap_dup(soap*) returns deep copy of _ows__ServiceProvider, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _ows__ServiceProvider::soap_del() deep deletes _ows__ServiceProvider data members, use only after _ows__ServiceProvider::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _ows__ServiceProvider::soap_type() returns SOAP_TYPE__ows__ServiceProvider or derived type identifier
class _ows__ServiceProvider
{ public:
/// <PRE><BLOCKQUOTE>
///   A unique identifier for the service provider organization.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProviderName" of type xs:string.
    std::string                          ProviderName                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Reference to the most relevant web site of the service provider.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProviderSite" of type "http://www.opengis.net/ows/1.1":OnlineResourceType.
    ows__OnlineResourceType*             ProviderSite                   0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Information for contacting the service provider. The OnlineResource element within this ServiceContact element should not be used to reference a web site of the service provider.
/// </BLOCKQUOTE></PRE>
///
/// Element "ServiceContact" of type "http://www.opengis.net/ows/1.1":ResponsiblePartySubsetType.
    ows__ResponsiblePartySubsetType*     ServiceContact                 1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.opengis.net/ows/1.1":OperationsMetadata
/// <PRE><BLOCKQUOTE>
///   Metadata about the operations and related abilities specified by this service and implemented by this server, including the URLs for operation requests. The basic contents of this section shall be the same for all OWS types, but individual services can add elements and/or change the optionality of optional elements.
/// </BLOCKQUOTE></PRE>
///
/// @brief "http://www.opengis.net/ows/1.1":OperationsMetadata is a complexType.
///
/// @note class _ows__OperationsMetadata operations:
/// - _ows__OperationsMetadata* soap_new__ows__OperationsMetadata(soap*) allocate and default initialize
/// - _ows__OperationsMetadata* soap_new__ows__OperationsMetadata(soap*, int num) allocate and default initialize an array
/// - _ows__OperationsMetadata* soap_new_req__ows__OperationsMetadata(soap*, ...) allocate, set required members
/// - _ows__OperationsMetadata* soap_new_set__ows__OperationsMetadata(soap*, ...) allocate, set all public members
/// - _ows__OperationsMetadata::soap_default(soap*) default initialize members
/// - int soap_read__ows__OperationsMetadata(soap*, _ows__OperationsMetadata*) deserialize from a stream
/// - int soap_write__ows__OperationsMetadata(soap*, _ows__OperationsMetadata*) serialize to a stream
/// - _ows__OperationsMetadata* _ows__OperationsMetadata::soap_dup(soap*) returns deep copy of _ows__OperationsMetadata, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _ows__OperationsMetadata::soap_del() deep deletes _ows__OperationsMetadata data members, use only after _ows__OperationsMetadata::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _ows__OperationsMetadata::soap_type() returns SOAP_TYPE__ows__OperationsMetadata or derived type identifier
class _ows__OperationsMetadata
{ public:
/// <PRE><BLOCKQUOTE>
///   Metadata for unordered list of all the (requests for) operations that this server interface implements. The list of required and optional operations implemented shall be specified in the Implementation Specification for this service.
/// </BLOCKQUOTE></PRE>
///
/// <PRE><BLOCKQUOTE>
///   Metadata for one operation that this server implements.
/// </BLOCKQUOTE></PRE>
///
/// Vector of _ows__Operation* element refs of length 2..unbounded.
    std::vector<_ows__Operation*       > Operation                      2;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   Optional unordered list of parameter valid domains that each apply to one or more operations which this server interface implements. The list of required and optional parameter domain limitations shall be specified in the Implementation Specification for this service.
/// </BLOCKQUOTE></PRE>
///
/// Vector of ows__DomainType* of length 0..unbounded.
    std::vector<ows__DomainType*       > Parameter                      0;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   Optional unordered list of valid domain constraints on non-parameter quantities that each apply to this server. The list of required and optional constraints shall be specified in the Implementation Specification for this service.
/// </BLOCKQUOTE></PRE>
///
/// Vector of ows__DomainType* of length 0..unbounded.
    std::vector<ows__DomainType*       > Constraint                     0;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   Individual software vendors and servers can use this element to provide metadata about any additional server abilities.
/// </BLOCKQUOTE></PRE>
///
/// Element reference "http://www.opengis.net/ows/1.1":ExtendedCapabilities.
///jld replaced by "http://inspire.ec.europa.eu/schemas/inspire_dls/1.0":ExtendedCapabilitiesType for INSPIRE compliancy
    idls__ExtendedCapabilitiesType*       ExtendedCapabilities           0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.opengis.net/ows/1.1":Operation
/// <PRE><BLOCKQUOTE>
///   Metadata for one operation that this server implements.
/// </BLOCKQUOTE></PRE>
///
/// @brief "http://www.opengis.net/ows/1.1":Operation is a complexType.
///
/// @note class _ows__Operation operations:
/// - _ows__Operation* soap_new__ows__Operation(soap*) allocate and default initialize
/// - _ows__Operation* soap_new__ows__Operation(soap*, int num) allocate and default initialize an array
/// - _ows__Operation* soap_new_req__ows__Operation(soap*, ...) allocate, set required members
/// - _ows__Operation* soap_new_set__ows__Operation(soap*, ...) allocate, set all public members
/// - _ows__Operation::soap_default(soap*) default initialize members
/// - int soap_read__ows__Operation(soap*, _ows__Operation*) deserialize from a stream
/// - int soap_write__ows__Operation(soap*, _ows__Operation*) serialize to a stream
/// - _ows__Operation* _ows__Operation::soap_dup(soap*) returns deep copy of _ows__Operation, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _ows__Operation::soap_del() deep deletes _ows__Operation data members, use only after _ows__Operation::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _ows__Operation::soap_type() returns SOAP_TYPE__ows__Operation or derived type identifier
class _ows__Operation
{ public:
/// <PRE><BLOCKQUOTE>
///   Unordered list of Distributed Computing Platforms (DCPs) supported for this operation. At present, only the HTTP DCP is defined, so this element will appear only once.
/// </BLOCKQUOTE></PRE>
///
/// <PRE><BLOCKQUOTE>
///   Information for one distributed Computing Platform (DCP) supported for this operation. At present, only the HTTP DCP is defined, so this element only includes the HTTP element.
/// </BLOCKQUOTE></PRE>
///
/// Vector of _ows__DCP* element refs of length 1..unbounded.
    std::vector<_ows__DCP*             > DCP                            1;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   Optional unordered list of parameter domains that each apply to this operation which this server implements. If one of these Parameter elements has the same "name" attribute as a Parameter element in the OperationsMetadata element, this Parameter element shall override the other one for this operation. The list of required and optional parameter domain limitations for this operation shall be specified in the Implementation Specification for this service.
/// </BLOCKQUOTE></PRE>
///
/// Vector of ows__DomainType* of length 0..unbounded.
    std::vector<ows__DomainType*       > Parameter                      0;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   Optional unordered list of valid domain constraints on non-parameter quantities that each apply to this operation. If one of these Constraint elements has the same "name" attribute as a Constraint element in the OperationsMetadata element, this Constraint element shall override the other one for this operation. The list of required and optional constraints for this operation shall be specified in the Implementation Specification for this service.
/// </BLOCKQUOTE></PRE>
///
/// Vector of ows__DomainType* of length 0..unbounded.
    std::vector<ows__DomainType*       > Constraint                     0;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   Optional unordered list of additional metadata about this operation and its' implementation. A list of required and optional metadata elements for this operation should be specified in the Implementation Specification for this service. (Informative: This metadata might specify the operation request parameters or provide the XML Schemas for the operation request.)
/// </BLOCKQUOTE></PRE>
///
/// Vector of ows__MetadataType* element refs of length 0..unbounded.
    std::vector<ows__MetadataType*     > Metadata                       0;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   Name or identifier of this operation (request) (for example, GetCapabilities). The list of required and optional operations implemented shall be specified in the Implementation Specification for this service.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "name" of type xs:string.
  @ std::string                          name                           1;	///< Required attribute.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.opengis.net/ows/1.1":DCP
/// <PRE><BLOCKQUOTE>
///   Information for one distributed Computing Platform (DCP) supported for this operation. At present, only the HTTP DCP is defined, so this element only includes the HTTP element.
/// </BLOCKQUOTE></PRE>
///
/// @brief "http://www.opengis.net/ows/1.1":DCP is a complexType.
///
/// @note class _ows__DCP operations:
/// - _ows__DCP* soap_new__ows__DCP(soap*) allocate and default initialize
/// - _ows__DCP* soap_new__ows__DCP(soap*, int num) allocate and default initialize an array
/// - _ows__DCP* soap_new_req__ows__DCP(soap*, ...) allocate, set required members
/// - _ows__DCP* soap_new_set__ows__DCP(soap*, ...) allocate, set all public members
/// - _ows__DCP::soap_default(soap*) default initialize members
/// - int soap_read__ows__DCP(soap*, _ows__DCP*) deserialize from a stream
/// - int soap_write__ows__DCP(soap*, _ows__DCP*) serialize to a stream
/// - _ows__DCP* _ows__DCP::soap_dup(soap*) returns deep copy of _ows__DCP, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _ows__DCP::soap_del() deep deletes _ows__DCP data members, use only after _ows__DCP::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _ows__DCP::soap_type() returns SOAP_TYPE__ows__DCP or derived type identifier
class _ows__DCP
{ public:
//  BEGIN CHOICE <xs:choice>
  $ int                                  __union_DCP                   ;	///< Union _ows__union_DCP selector: set to SOAP_UNION__ows__union_DCP_<fieldname>
/// Union for choice in ows__DCP.
    union _ows__union_DCP
    {
/// <PRE><BLOCKQUOTE>
///   Connect point URLs for the HTTP Distributed Computing Platform (DCP). Normally, only one Get and/or one Post is included in this element. More than one Get and/or Post is allowed to support including alternative URLs for uses such as load balancing or backup.
/// </BLOCKQUOTE></PRE>
///
/// Element reference "http://www.opengis.net/ows/1.1:""http://www.opengis.net/ows/1.1":HTTP.
    _ows__HTTP*                          HTTP                          ;	///< Choice of element (one of multiple choices).
    }                                    union_DCP                     ;
//  END OF CHOICE
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.opengis.net/ows/1.1":HTTP
/// <PRE><BLOCKQUOTE>
///   Connect point URLs for the HTTP Distributed Computing Platform (DCP). Normally, only one Get and/or one Post is included in this element. More than one Get and/or Post is allowed to support including alternative URLs for uses such as load balancing or backup.
/// </BLOCKQUOTE></PRE>
///
/// @brief "http://www.opengis.net/ows/1.1":HTTP is a complexType.
///
/// @note class _ows__HTTP operations:
/// - _ows__HTTP* soap_new__ows__HTTP(soap*) allocate and default initialize
/// - _ows__HTTP* soap_new__ows__HTTP(soap*, int num) allocate and default initialize an array
/// - _ows__HTTP* soap_new_req__ows__HTTP(soap*, ...) allocate, set required members
/// - _ows__HTTP* soap_new_set__ows__HTTP(soap*, ...) allocate, set all public members
/// - _ows__HTTP::soap_default(soap*) default initialize members
/// - int soap_read__ows__HTTP(soap*, _ows__HTTP*) deserialize from a stream
/// - int soap_write__ows__HTTP(soap*, _ows__HTTP*) serialize to a stream
/// - _ows__HTTP* _ows__HTTP::soap_dup(soap*) returns deep copy of _ows__HTTP, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _ows__HTTP::soap_del() deep deletes _ows__HTTP data members, use only after _ows__HTTP::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _ows__HTTP::soap_type() returns SOAP_TYPE__ows__HTTP or derived type identifier
class _ows__HTTP
{ public:
//  BEGIN CHOICE <xs:choice maxOccurs="unbounded">
    std::vector<
    class __ows__union_HTTP
    {
  $ int                                  __union_HTTP                  ;	///< Union _ows__union_HTTP selector: set to SOAP_UNION__ows__union_HTTP_<fieldname>
/// Union for choice in ows__HTTP.
    union _ows__union_HTTP
    {
/// <PRE><BLOCKQUOTE>
///   Connect point URL prefix and any constraints for the HTTP "Get" request method for this operation request.
/// </BLOCKQUOTE></PRE>
///
/// Element "Get" of type "http://www.opengis.net/ows/1.1":RequestMethodType.
    ows__RequestMethodType*              Get                           ;	///< Choice of element (one of multiple choices).
/// <PRE><BLOCKQUOTE>
///   Connect point URL and any constraints for the HTTP "Post" request method for this operation request.
/// </BLOCKQUOTE></PRE>
///
/// Element "Post" of type "http://www.opengis.net/ows/1.1":RequestMethodType.
    ows__RequestMethodType*              Post                          ;	///< Choice of element (one of multiple choices).
    }                                    union_HTTP                    ;
    }>                                   __union_HTTP                   0;
//  END OF CHOICE
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.opengis.net/ows/1.1":AnyValue
/// <PRE><BLOCKQUOTE>
///   Specifies that any value is allowed for this parameter.
/// </BLOCKQUOTE></PRE>
///
/// @brief "http://www.opengis.net/ows/1.1":AnyValue is a complexType.
///
/// @note class _ows__AnyValue operations:
/// - _ows__AnyValue* soap_new__ows__AnyValue(soap*) allocate and default initialize
/// - _ows__AnyValue* soap_new__ows__AnyValue(soap*, int num) allocate and default initialize an array
/// - _ows__AnyValue* soap_new_req__ows__AnyValue(soap*, ...) allocate, set required members
/// - _ows__AnyValue* soap_new_set__ows__AnyValue(soap*, ...) allocate, set all public members
/// - _ows__AnyValue::soap_default(soap*) default initialize members
/// - int soap_read__ows__AnyValue(soap*, _ows__AnyValue*) deserialize from a stream
/// - int soap_write__ows__AnyValue(soap*, _ows__AnyValue*) serialize to a stream
/// - _ows__AnyValue* _ows__AnyValue::soap_dup(soap*) returns deep copy of _ows__AnyValue, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _ows__AnyValue::soap_del() deep deletes _ows__AnyValue data members, use only after _ows__AnyValue::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _ows__AnyValue::soap_type() returns SOAP_TYPE__ows__AnyValue or derived type identifier
class _ows__AnyValue
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.opengis.net/ows/1.1":NoValues
/// <PRE><BLOCKQUOTE>
///   Specifies that no values are allowed for this parameter or quantity.
/// </BLOCKQUOTE></PRE>
///
/// @brief "http://www.opengis.net/ows/1.1":NoValues is a complexType.
///
/// @note class _ows__NoValues operations:
/// - _ows__NoValues* soap_new__ows__NoValues(soap*) allocate and default initialize
/// - _ows__NoValues* soap_new__ows__NoValues(soap*, int num) allocate and default initialize an array
/// - _ows__NoValues* soap_new_req__ows__NoValues(soap*, ...) allocate, set required members
/// - _ows__NoValues* soap_new_set__ows__NoValues(soap*, ...) allocate, set all public members
/// - _ows__NoValues::soap_default(soap*) default initialize members
/// - int soap_read__ows__NoValues(soap*, _ows__NoValues*) deserialize from a stream
/// - int soap_write__ows__NoValues(soap*, _ows__NoValues*) serialize to a stream
/// - _ows__NoValues* _ows__NoValues::soap_dup(soap*) returns deep copy of _ows__NoValues, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _ows__NoValues::soap_del() deep deletes _ows__NoValues data members, use only after _ows__NoValues::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _ows__NoValues::soap_type() returns SOAP_TYPE__ows__NoValues or derived type identifier
class _ows__NoValues
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.opengis.net/ows/1.1":AllowedValues
/// <PRE><BLOCKQUOTE>
///   List of all the valid values and/or ranges of values for this quantity. For numeric quantities, signed values should be ordered from negative infinity to positive infinity.
/// </BLOCKQUOTE></PRE>
///
/// @brief "http://www.opengis.net/ows/1.1":AllowedValues is a complexType.
///
/// @note class _ows__AllowedValues operations:
/// - _ows__AllowedValues* soap_new__ows__AllowedValues(soap*) allocate and default initialize
/// - _ows__AllowedValues* soap_new__ows__AllowedValues(soap*, int num) allocate and default initialize an array
/// - _ows__AllowedValues* soap_new_req__ows__AllowedValues(soap*, ...) allocate, set required members
/// - _ows__AllowedValues* soap_new_set__ows__AllowedValues(soap*, ...) allocate, set all public members
/// - _ows__AllowedValues::soap_default(soap*) default initialize members
/// - int soap_read__ows__AllowedValues(soap*, _ows__AllowedValues*) deserialize from a stream
/// - int soap_write__ows__AllowedValues(soap*, _ows__AllowedValues*) serialize to a stream
/// - _ows__AllowedValues* _ows__AllowedValues::soap_dup(soap*) returns deep copy of _ows__AllowedValues, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _ows__AllowedValues::soap_del() deep deletes _ows__AllowedValues data members, use only after _ows__AllowedValues::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _ows__AllowedValues::soap_type() returns SOAP_TYPE__ows__AllowedValues or derived type identifier
class _ows__AllowedValues
{ public:
//  BEGIN CHOICE <xs:choice maxOccurs="unbounded">
    std::vector<
    class __ows__union_AllowedValues
    {
  $ int                                  __union_AllowedValues         ;	///< Union _ows__union_AllowedValues selector: set to SOAP_UNION__ows__union_AllowedValues_<fieldname>
/// Union for choice in ows__AllowedValues.
    union _ows__union_AllowedValues
    {
/// Element reference "http://www.opengis.net/ows/1.1:""http://www.opengis.net/ows/1.1":Value.
    ows__ValueType*                      Value                         ;	///< Choice of element (one of multiple choices).
/// Element reference "http://www.opengis.net/ows/1.1:""http://www.opengis.net/ows/1.1":Range.
    ows__RangeType*                      Range                         ;	///< Choice of element (one of multiple choices).
    }                                    union_AllowedValues           ;
    }>                                   __union_AllowedValues          0;
//  END OF CHOICE
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://inspire.ec.europa.eu/schemas/inspire_dls/1.0                      *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://www.w3.org/1999/xlink                                             *
 *                                                                            *
\******************************************************************************/

/// @brief "http://www.w3.org/1999/xlink":simple is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Intended for use as the type of user-declared elements to make them
///   simple links.
/// </BLOCKQUOTE></PRE>
///
/// @note class xlink__simple operations:
/// - xlink__simple* soap_new_xlink__simple(soap*) allocate and default initialize
/// - xlink__simple* soap_new_xlink__simple(soap*, int num) allocate and default initialize an array
/// - xlink__simple* soap_new_req_xlink__simple(soap*, ...) allocate, set required members
/// - xlink__simple* soap_new_set_xlink__simple(soap*, ...) allocate, set all public members
/// - xlink__simple::soap_default(soap*) default initialize members
/// - int soap_read_xlink__simple(soap*, xlink__simple*) deserialize from a stream
/// - int soap_write_xlink__simple(soap*, xlink__simple*) serialize to a stream
/// - xlink__simple* xlink__simple::soap_dup(soap*) returns deep copy of xlink__simple, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - xlink__simple::soap_del() deep deletes xlink__simple data members, use only after xlink__simple::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int xlink__simple::soap_type() returns SOAP_TYPE_xlink__simple or derived type identifier
class xlink__simple : public xsd__anyType
{ public:
//  BEGIN GROUP <xs:group name="simpleModel">
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<_XML                   > __any                         0;	///< Store any element content in XML string.
//  END OF GROUP
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
  @ enum xlink__typeType                 xlink__type                    0 == xlink__typeType__simple;	///< Optional attribute with fixed value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
  @ xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
  @ xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
  @ xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
  @ xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
  @ enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
  @ enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
/// Mixed content.
/// @note Mixed content is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for DOM (soap_dom_element) to store mixed content.
    _XML                                 __mixed                       0;	///< Store mixed content as an xsd:any (an XML string by default).
};

/// @brief "http://www.w3.org/1999/xlink":extended is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Intended for use as the type of user-declared elements to make them
///   extended links.
///   Note that the elements referenced in the content model are all abstract.
///   The intention is that by simply declaring elements with these as their
///   substitutionGroup, all the right things will happen.
/// </BLOCKQUOTE></PRE>
///
/// @note class xlink__extended operations:
/// - xlink__extended* soap_new_xlink__extended(soap*) allocate and default initialize
/// - xlink__extended* soap_new_xlink__extended(soap*, int num) allocate and default initialize an array
/// - xlink__extended* soap_new_req_xlink__extended(soap*, ...) allocate, set required members
/// - xlink__extended* soap_new_set_xlink__extended(soap*, ...) allocate, set all public members
/// - xlink__extended::soap_default(soap*) default initialize members
/// - int soap_read_xlink__extended(soap*, xlink__extended*) deserialize from a stream
/// - int soap_write_xlink__extended(soap*, xlink__extended*) serialize to a stream
/// - xlink__extended* xlink__extended::soap_dup(soap*) returns deep copy of xlink__extended, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - xlink__extended::soap_del() deep deletes xlink__extended data members, use only after xlink__extended::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int xlink__extended::soap_type() returns SOAP_TYPE_xlink__extended or derived type identifier
class xlink__extended : public xsd__anyType
{ public:
//  BEGIN GROUP <xs:group name="extendedModel" minOccurs="0" maxOccurs="unbounded">
//  BEGIN CHOICE <xs:choice minOccurs="0" maxOccurs="unbounded">
    std::vector<
    class __xlink__union_extended
    {
  $ int                                  __union_extended               0;	///< Union _xlink__union_extended selector: set to SOAP_UNION__xlink__union_extended_<fieldname> or 0 to omit
    union _xlink__union_extended
    {
/// Reference "http://www.w3.org/1999/xlink":title to abstract element.
//  BEGIN SUBSTITUTIONS <xs:element substitutionGroup="title"> with choice of elements to substitute:
//   
//  END OF SUBSTITUTIONS
/// Reference "http://www.w3.org/1999/xlink":resource to abstract element.
//  BEGIN SUBSTITUTIONS <xs:element substitutionGroup="resource"> with choice of elements to substitute:
//   
//  END OF SUBSTITUTIONS
/// Reference "http://www.w3.org/1999/xlink":locator to abstract element.
//  BEGIN SUBSTITUTIONS <xs:element substitutionGroup="locator"> with choice of elements to substitute:
//   
//  END OF SUBSTITUTIONS
/// Reference "http://www.w3.org/1999/xlink":arc to abstract element.
//  BEGIN SUBSTITUTIONS <xs:element substitutionGroup="arc"> with choice of elements to substitute:
//   
//  END OF SUBSTITUTIONS
    }                                    union_extended                ;
    }>                                   __union_extended               0;
//  END OF CHOICE
//  END OF GROUP
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":extendedAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
  @ enum xlink__typeType                 xlink__type                    1 == xlink__typeType__extended;	///< Required attribute with fixed value="extended".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
  @ xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
  @ xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.w3.org/1999/xlink":titleEltType is a complexType.
///
/// @note class xlink__titleEltType operations:
/// - xlink__titleEltType* soap_new_xlink__titleEltType(soap*) allocate and default initialize
/// - xlink__titleEltType* soap_new_xlink__titleEltType(soap*, int num) allocate and default initialize an array
/// - xlink__titleEltType* soap_new_req_xlink__titleEltType(soap*, ...) allocate, set required members
/// - xlink__titleEltType* soap_new_set_xlink__titleEltType(soap*, ...) allocate, set all public members
/// - xlink__titleEltType::soap_default(soap*) default initialize members
/// - int soap_read_xlink__titleEltType(soap*, xlink__titleEltType*) deserialize from a stream
/// - int soap_write_xlink__titleEltType(soap*, xlink__titleEltType*) serialize to a stream
/// - xlink__titleEltType* xlink__titleEltType::soap_dup(soap*) returns deep copy of xlink__titleEltType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - xlink__titleEltType::soap_del() deep deletes xlink__titleEltType data members, use only after xlink__titleEltType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int xlink__titleEltType::soap_type() returns SOAP_TYPE_xlink__titleEltType or derived type identifier
class xlink__titleEltType : public xsd__anyType
{ public:
//  BEGIN GROUP <xs:group name="titleModel">
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<_XML                   > __any                         0;	///< Store any element content in XML string.
//  END OF GROUP
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":titleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
  @ enum xlink__typeType                 xlink__type                    1 == xlink__typeType__title;	///< Required attribute with fixed value="title".
/// <PRE><BLOCKQUOTE>
///   xml:lang is not required, but provides much of the
///   motivation for title elements in addition to attributes, and so
///   is provided here for convenience.
/// </BLOCKQUOTE></PRE>
///
/// Imported attribute reference xml:lang.
  @ _xml__lang*                          xml__lang                      0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
/// Mixed content.
/// @note Mixed content is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for DOM (soap_dom_element) to store mixed content.
    _XML                                 __mixed                       0;	///< Store mixed content as an xsd:any (an XML string by default).
};

/// @brief "http://www.w3.org/1999/xlink":resourceType is a complexType.
///
/// @note class xlink__resourceType operations:
/// - xlink__resourceType* soap_new_xlink__resourceType(soap*) allocate and default initialize
/// - xlink__resourceType* soap_new_xlink__resourceType(soap*, int num) allocate and default initialize an array
/// - xlink__resourceType* soap_new_req_xlink__resourceType(soap*, ...) allocate, set required members
/// - xlink__resourceType* soap_new_set_xlink__resourceType(soap*, ...) allocate, set all public members
/// - xlink__resourceType::soap_default(soap*) default initialize members
/// - int soap_read_xlink__resourceType(soap*, xlink__resourceType*) deserialize from a stream
/// - int soap_write_xlink__resourceType(soap*, xlink__resourceType*) serialize to a stream
/// - xlink__resourceType* xlink__resourceType::soap_dup(soap*) returns deep copy of xlink__resourceType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - xlink__resourceType::soap_del() deep deletes xlink__resourceType data members, use only after xlink__resourceType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int xlink__resourceType::soap_type() returns SOAP_TYPE_xlink__resourceType or derived type identifier
class xlink__resourceType : public xsd__anyType
{ public:
//  BEGIN GROUP <xs:group name="resourceModel">
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<_XML                   > __any                         0;	///< Store any element content in XML string.
//  END OF GROUP
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":resourceAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
  @ enum xlink__typeType                 xlink__type                    1 == xlink__typeType__resource;	///< Required attribute with fixed value="resource".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
  @ xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
  @ xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":label.
  @ xlink__labelType*                    xlink__label                   0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
/// Mixed content.
/// @note Mixed content is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for DOM (soap_dom_element) to store mixed content.
    _XML                                 __mixed                       0;	///< Store mixed content as an xsd:any (an XML string by default).
};

/// @brief "http://www.w3.org/1999/xlink":locatorType is a complexType.
///
/// @note class xlink__locatorType operations:
/// - xlink__locatorType* soap_new_xlink__locatorType(soap*) allocate and default initialize
/// - xlink__locatorType* soap_new_xlink__locatorType(soap*, int num) allocate and default initialize an array
/// - xlink__locatorType* soap_new_req_xlink__locatorType(soap*, ...) allocate, set required members
/// - xlink__locatorType* soap_new_set_xlink__locatorType(soap*, ...) allocate, set all public members
/// - xlink__locatorType::soap_default(soap*) default initialize members
/// - int soap_read_xlink__locatorType(soap*, xlink__locatorType*) deserialize from a stream
/// - int soap_write_xlink__locatorType(soap*, xlink__locatorType*) serialize to a stream
/// - xlink__locatorType* xlink__locatorType::soap_dup(soap*) returns deep copy of xlink__locatorType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - xlink__locatorType::soap_del() deep deletes xlink__locatorType data members, use only after xlink__locatorType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int xlink__locatorType::soap_type() returns SOAP_TYPE_xlink__locatorType or derived type identifier
class xlink__locatorType : public xsd__anyType
{ public:
//  BEGIN GROUP <xs:group name="locatorModel">
/// Reference "http://www.w3.org/1999/xlink":title to abstract element.
//  BEGIN SUBSTITUTIONS <xs:element substitutionGroup="title" minOccurs="0" maxOccurs="unbounded"> with choice of elements to substitute:
//   
  $ int                                  __sizetitle                    0;
    class __xlink__union_locatorType
    {
  $ int                                  __uniontitle                   0;	///< Union _xlink__union_locatorType selector: set to SOAP_UNION__xlink__union_locatorType_<fieldname> or 0 to omit
/// Union for substitutionGroup xlink__title.
    union _xlink__union_locatorType
    {
    }                                    union_locatorType             ;
    }                                   *__union_locatorType           ;
//  END OF SUBSTITUTIONS
//  END OF GROUP
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":locatorAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
  @ enum xlink__typeType                 xlink__type                    1 == xlink__typeType__locator;	///< Required attribute with fixed value="locator".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
  @ xlink__hrefType                      xlink__href                    1;	///< Required attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
  @ xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
  @ xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   label is not required, but locators have no particular
///   XLink function if they are not labeled.
/// </BLOCKQUOTE></PRE>
///
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":label.
  @ xlink__labelType*                    xlink__label                   0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.w3.org/1999/xlink":arcType is a complexType.
///
/// @note class xlink__arcType operations:
/// - xlink__arcType* soap_new_xlink__arcType(soap*) allocate and default initialize
/// - xlink__arcType* soap_new_xlink__arcType(soap*, int num) allocate and default initialize an array
/// - xlink__arcType* soap_new_req_xlink__arcType(soap*, ...) allocate, set required members
/// - xlink__arcType* soap_new_set_xlink__arcType(soap*, ...) allocate, set all public members
/// - xlink__arcType::soap_default(soap*) default initialize members
/// - int soap_read_xlink__arcType(soap*, xlink__arcType*) deserialize from a stream
/// - int soap_write_xlink__arcType(soap*, xlink__arcType*) serialize to a stream
/// - xlink__arcType* xlink__arcType::soap_dup(soap*) returns deep copy of xlink__arcType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - xlink__arcType::soap_del() deep deletes xlink__arcType data members, use only after xlink__arcType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int xlink__arcType::soap_type() returns SOAP_TYPE_xlink__arcType or derived type identifier
class xlink__arcType : public xsd__anyType
{ public:
//  BEGIN GROUP <xs:group name="arcModel">
/// Reference "http://www.w3.org/1999/xlink":title to abstract element.
//  BEGIN SUBSTITUTIONS <xs:element substitutionGroup="title" minOccurs="0" maxOccurs="unbounded"> with choice of elements to substitute:
//   
  $ int                                  __sizetitle                    0;
    class __xlink__union_arcType
    {
  $ int                                  __uniontitle                   0;	///< Union _xlink__union_arcType selector: set to SOAP_UNION__xlink__union_arcType_<fieldname> or 0 to omit
/// Union for substitutionGroup xlink__title.
    union _xlink__union_arcType
    {
    }                                    union_arcType                 ;
    }                                   *__union_arcType               ;
//  END OF SUBSTITUTIONS
//  END OF GROUP
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":arcAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
  @ enum xlink__typeType                 xlink__type                    1 == xlink__typeType__arc;	///< Required attribute with fixed value="arc".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
  @ xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
  @ xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
  @ enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
  @ enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":from.
  @ xlink__fromType*                     xlink__from                    0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   from and to have default behavior when values are missing
/// </BLOCKQUOTE></PRE>
///
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":to.
  @ xlink__toType*                       xlink__to                      0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
};


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://www.opengis.net/fes/2.0                                           *
 *                                                                            *
\******************************************************************************/

/// @brief "http://www.opengis.net/fes/2.0":AbstractQueryExpressionType is an abstract complexType.
///
/// This type is extended by:
/// - "http://www.opengis.net/fes/2.0":AbstractAdhocQueryExpressionType as fes__AbstractAdhocQueryExpressionType
/// - "http://www.opengis.net/wfs/2.0":StoredQueryType as wfs__StoredQueryType
///
/// @note class fes__AbstractQueryExpressionType operations:
/// - fes__AbstractQueryExpressionType* soap_new_fes__AbstractQueryExpressionType(soap*) allocate and default initialize
/// - fes__AbstractQueryExpressionType* soap_new_fes__AbstractQueryExpressionType(soap*, int num) allocate and default initialize an array
/// - fes__AbstractQueryExpressionType* soap_new_req_fes__AbstractQueryExpressionType(soap*, ...) allocate, set required members
/// - fes__AbstractQueryExpressionType* soap_new_set_fes__AbstractQueryExpressionType(soap*, ...) allocate, set all public members
/// - fes__AbstractQueryExpressionType::soap_default(soap*) default initialize members
/// - int soap_read_fes__AbstractQueryExpressionType(soap*, fes__AbstractQueryExpressionType*) deserialize from a stream
/// - int soap_write_fes__AbstractQueryExpressionType(soap*, fes__AbstractQueryExpressionType*) serialize to a stream
/// - fes__AbstractQueryExpressionType* fes__AbstractQueryExpressionType::soap_dup(soap*) returns deep copy of fes__AbstractQueryExpressionType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - fes__AbstractQueryExpressionType::soap_del() deep deletes fes__AbstractQueryExpressionType data members, use only after fes__AbstractQueryExpressionType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int fes__AbstractQueryExpressionType::soap_type() returns SOAP_TYPE_fes__AbstractQueryExpressionType or derived type identifier
class fes__AbstractQueryExpressionType : public xsd__anyType
{ public:
/// Attribute "handle" of type xs:string.
  @ std::string*                         handle                         0;	///< Optional attribute.
};

/// @brief "http://www.opengis.net/fes/2.0":AbstractProjectionClauseType is an abstract complexType.
///
/// @note class fes__AbstractProjectionClauseType operations:
/// - fes__AbstractProjectionClauseType* soap_new_fes__AbstractProjectionClauseType(soap*) allocate and default initialize
/// - fes__AbstractProjectionClauseType* soap_new_fes__AbstractProjectionClauseType(soap*, int num) allocate and default initialize an array
/// - fes__AbstractProjectionClauseType* soap_new_req_fes__AbstractProjectionClauseType(soap*, ...) allocate, set required members
/// - fes__AbstractProjectionClauseType* soap_new_set_fes__AbstractProjectionClauseType(soap*, ...) allocate, set all public members
/// - fes__AbstractProjectionClauseType::soap_default(soap*) default initialize members
/// - int soap_read_fes__AbstractProjectionClauseType(soap*, fes__AbstractProjectionClauseType*) deserialize from a stream
/// - int soap_write_fes__AbstractProjectionClauseType(soap*, fes__AbstractProjectionClauseType*) serialize to a stream
/// - fes__AbstractProjectionClauseType* fes__AbstractProjectionClauseType::soap_dup(soap*) returns deep copy of fes__AbstractProjectionClauseType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - fes__AbstractProjectionClauseType::soap_del() deep deletes fes__AbstractProjectionClauseType data members, use only after fes__AbstractProjectionClauseType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int fes__AbstractProjectionClauseType::soap_type() returns SOAP_TYPE_fes__AbstractProjectionClauseType or derived type identifier
class fes__AbstractProjectionClauseType : public xsd__anyType
{ public:
};

/// @brief "http://www.opengis.net/fes/2.0":AbstractSelectionClauseType is an abstract complexType.
///
/// This type is extended by:
/// - "http://www.opengis.net/fes/2.0":FilterType as fes__FilterType
///
/// @note class fes__AbstractSelectionClauseType operations:
/// - fes__AbstractSelectionClauseType* soap_new_fes__AbstractSelectionClauseType(soap*) allocate and default initialize
/// - fes__AbstractSelectionClauseType* soap_new_fes__AbstractSelectionClauseType(soap*, int num) allocate and default initialize an array
/// - fes__AbstractSelectionClauseType* soap_new_req_fes__AbstractSelectionClauseType(soap*, ...) allocate, set required members
/// - fes__AbstractSelectionClauseType* soap_new_set_fes__AbstractSelectionClauseType(soap*, ...) allocate, set all public members
/// - fes__AbstractSelectionClauseType::soap_default(soap*) default initialize members
/// - int soap_read_fes__AbstractSelectionClauseType(soap*, fes__AbstractSelectionClauseType*) deserialize from a stream
/// - int soap_write_fes__AbstractSelectionClauseType(soap*, fes__AbstractSelectionClauseType*) serialize to a stream
/// - fes__AbstractSelectionClauseType* fes__AbstractSelectionClauseType::soap_dup(soap*) returns deep copy of fes__AbstractSelectionClauseType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - fes__AbstractSelectionClauseType::soap_del() deep deletes fes__AbstractSelectionClauseType data members, use only after fes__AbstractSelectionClauseType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int fes__AbstractSelectionClauseType::soap_type() returns SOAP_TYPE_fes__AbstractSelectionClauseType or derived type identifier
class fes__AbstractSelectionClauseType : public xsd__anyType
{ public:
};

/// @brief "http://www.opengis.net/fes/2.0":AbstractSortingClauseType is an abstract complexType.
///
/// @note class fes__AbstractSortingClauseType operations:
/// - fes__AbstractSortingClauseType* soap_new_fes__AbstractSortingClauseType(soap*) allocate and default initialize
/// - fes__AbstractSortingClauseType* soap_new_fes__AbstractSortingClauseType(soap*, int num) allocate and default initialize an array
/// - fes__AbstractSortingClauseType* soap_new_req_fes__AbstractSortingClauseType(soap*, ...) allocate, set required members
/// - fes__AbstractSortingClauseType* soap_new_set_fes__AbstractSortingClauseType(soap*, ...) allocate, set all public members
/// - fes__AbstractSortingClauseType::soap_default(soap*) default initialize members
/// - int soap_read_fes__AbstractSortingClauseType(soap*, fes__AbstractSortingClauseType*) deserialize from a stream
/// - int soap_write_fes__AbstractSortingClauseType(soap*, fes__AbstractSortingClauseType*) serialize to a stream
/// - fes__AbstractSortingClauseType* fes__AbstractSortingClauseType::soap_dup(soap*) returns deep copy of fes__AbstractSortingClauseType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - fes__AbstractSortingClauseType::soap_del() deep deletes fes__AbstractSortingClauseType data members, use only after fes__AbstractSortingClauseType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int fes__AbstractSortingClauseType::soap_type() returns SOAP_TYPE_fes__AbstractSortingClauseType or derived type identifier
class fes__AbstractSortingClauseType : public xsd__anyType
{ public:
};

/// @brief "http://www.opengis.net/fes/2.0":ComparisonOpsType is an abstract complexType.
///
/// This type is extended by:
/// - "http://www.opengis.net/fes/2.0":BinaryComparisonOpType as fes__BinaryComparisonOpType
/// - "http://www.opengis.net/fes/2.0":PropertyIsLikeType as fes__PropertyIsLikeType
/// - "http://www.opengis.net/fes/2.0":PropertyIsNullType as fes__PropertyIsNullType
/// - "http://www.opengis.net/fes/2.0":PropertyIsNilType as fes__PropertyIsNilType
/// - "http://www.opengis.net/fes/2.0":PropertyIsBetweenType as fes__PropertyIsBetweenType
///
/// @note class fes__ComparisonOpsType operations:
/// - fes__ComparisonOpsType* soap_new_fes__ComparisonOpsType(soap*) allocate and default initialize
/// - fes__ComparisonOpsType* soap_new_fes__ComparisonOpsType(soap*, int num) allocate and default initialize an array
/// - fes__ComparisonOpsType* soap_new_req_fes__ComparisonOpsType(soap*, ...) allocate, set required members
/// - fes__ComparisonOpsType* soap_new_set_fes__ComparisonOpsType(soap*, ...) allocate, set all public members
/// - fes__ComparisonOpsType::soap_default(soap*) default initialize members
/// - int soap_read_fes__ComparisonOpsType(soap*, fes__ComparisonOpsType*) deserialize from a stream
/// - int soap_write_fes__ComparisonOpsType(soap*, fes__ComparisonOpsType*) serialize to a stream
/// - fes__ComparisonOpsType* fes__ComparisonOpsType::soap_dup(soap*) returns deep copy of fes__ComparisonOpsType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - fes__ComparisonOpsType::soap_del() deep deletes fes__ComparisonOpsType data members, use only after fes__ComparisonOpsType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int fes__ComparisonOpsType::soap_type() returns SOAP_TYPE_fes__ComparisonOpsType or derived type identifier
class fes__ComparisonOpsType : public xsd__anyType
{ public:
};

/// @brief "http://www.opengis.net/fes/2.0":SpatialOpsType is an abstract complexType.
///
/// This type is extended by:
/// - "http://www.opengis.net/fes/2.0":BinarySpatialOpType as fes__BinarySpatialOpType
/// - "http://www.opengis.net/fes/2.0":BBOXType as fes__BBOXType
/// - "http://www.opengis.net/fes/2.0":DistanceBufferType as fes__DistanceBufferType
///
/// @note class fes__SpatialOpsType operations:
/// - fes__SpatialOpsType* soap_new_fes__SpatialOpsType(soap*) allocate and default initialize
/// - fes__SpatialOpsType* soap_new_fes__SpatialOpsType(soap*, int num) allocate and default initialize an array
/// - fes__SpatialOpsType* soap_new_req_fes__SpatialOpsType(soap*, ...) allocate, set required members
/// - fes__SpatialOpsType* soap_new_set_fes__SpatialOpsType(soap*, ...) allocate, set all public members
/// - fes__SpatialOpsType::soap_default(soap*) default initialize members
/// - int soap_read_fes__SpatialOpsType(soap*, fes__SpatialOpsType*) deserialize from a stream
/// - int soap_write_fes__SpatialOpsType(soap*, fes__SpatialOpsType*) serialize to a stream
/// - fes__SpatialOpsType* fes__SpatialOpsType::soap_dup(soap*) returns deep copy of fes__SpatialOpsType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - fes__SpatialOpsType::soap_del() deep deletes fes__SpatialOpsType data members, use only after fes__SpatialOpsType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int fes__SpatialOpsType::soap_type() returns SOAP_TYPE_fes__SpatialOpsType or derived type identifier
class fes__SpatialOpsType : public xsd__anyType
{ public:
};

/// @brief "http://www.opengis.net/fes/2.0":TemporalOpsType is an abstract complexType.
///
/// This type is extended by:
/// - "http://www.opengis.net/fes/2.0":BinaryTemporalOpType as fes__BinaryTemporalOpType
///
/// @note class fes__TemporalOpsType operations:
/// - fes__TemporalOpsType* soap_new_fes__TemporalOpsType(soap*) allocate and default initialize
/// - fes__TemporalOpsType* soap_new_fes__TemporalOpsType(soap*, int num) allocate and default initialize an array
/// - fes__TemporalOpsType* soap_new_req_fes__TemporalOpsType(soap*, ...) allocate, set required members
/// - fes__TemporalOpsType* soap_new_set_fes__TemporalOpsType(soap*, ...) allocate, set all public members
/// - fes__TemporalOpsType::soap_default(soap*) default initialize members
/// - int soap_read_fes__TemporalOpsType(soap*, fes__TemporalOpsType*) deserialize from a stream
/// - int soap_write_fes__TemporalOpsType(soap*, fes__TemporalOpsType*) serialize to a stream
/// - fes__TemporalOpsType* fes__TemporalOpsType::soap_dup(soap*) returns deep copy of fes__TemporalOpsType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - fes__TemporalOpsType::soap_del() deep deletes fes__TemporalOpsType data members, use only after fes__TemporalOpsType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int fes__TemporalOpsType::soap_type() returns SOAP_TYPE_fes__TemporalOpsType or derived type identifier
class fes__TemporalOpsType : public xsd__anyType
{ public:
};

/// @brief "http://www.opengis.net/fes/2.0":LogicOpsType is an abstract complexType.
///
/// This type is extended by:
/// - "http://www.opengis.net/fes/2.0":BinaryLogicOpType as fes__BinaryLogicOpType
/// - "http://www.opengis.net/fes/2.0":UnaryLogicOpType as fes__UnaryLogicOpType
///
/// @note class fes__LogicOpsType operations:
/// - fes__LogicOpsType* soap_new_fes__LogicOpsType(soap*) allocate and default initialize
/// - fes__LogicOpsType* soap_new_fes__LogicOpsType(soap*, int num) allocate and default initialize an array
/// - fes__LogicOpsType* soap_new_req_fes__LogicOpsType(soap*, ...) allocate, set required members
/// - fes__LogicOpsType* soap_new_set_fes__LogicOpsType(soap*, ...) allocate, set all public members
/// - fes__LogicOpsType::soap_default(soap*) default initialize members
/// - int soap_read_fes__LogicOpsType(soap*, fes__LogicOpsType*) deserialize from a stream
/// - int soap_write_fes__LogicOpsType(soap*, fes__LogicOpsType*) serialize to a stream
/// - fes__LogicOpsType* fes__LogicOpsType::soap_dup(soap*) returns deep copy of fes__LogicOpsType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - fes__LogicOpsType::soap_del() deep deletes fes__LogicOpsType data members, use only after fes__LogicOpsType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int fes__LogicOpsType::soap_type() returns SOAP_TYPE_fes__LogicOpsType or derived type identifier
class fes__LogicOpsType : public xsd__anyType
{ public:
};

/// @brief "http://www.opengis.net/fes/2.0":ExtensionOpsType is an abstract complexType.
///
/// @note class fes__ExtensionOpsType operations:
/// - fes__ExtensionOpsType* soap_new_fes__ExtensionOpsType(soap*) allocate and default initialize
/// - fes__ExtensionOpsType* soap_new_fes__ExtensionOpsType(soap*, int num) allocate and default initialize an array
/// - fes__ExtensionOpsType* soap_new_req_fes__ExtensionOpsType(soap*, ...) allocate, set required members
/// - fes__ExtensionOpsType* soap_new_set_fes__ExtensionOpsType(soap*, ...) allocate, set all public members
/// - fes__ExtensionOpsType::soap_default(soap*) default initialize members
/// - int soap_read_fes__ExtensionOpsType(soap*, fes__ExtensionOpsType*) deserialize from a stream
/// - int soap_write_fes__ExtensionOpsType(soap*, fes__ExtensionOpsType*) serialize to a stream
/// - fes__ExtensionOpsType* fes__ExtensionOpsType::soap_dup(soap*) returns deep copy of fes__ExtensionOpsType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - fes__ExtensionOpsType::soap_del() deep deletes fes__ExtensionOpsType data members, use only after fes__ExtensionOpsType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int fes__ExtensionOpsType::soap_type() returns SOAP_TYPE_fes__ExtensionOpsType or derived type identifier
class fes__ExtensionOpsType : public xsd__anyType
{ public:
};

/// @brief "http://www.opengis.net/fes/2.0":AbstractIdType is an abstract complexType.
///
/// This type is extended by:
/// - "http://www.opengis.net/fes/2.0":ResourceIdType as fes__ResourceIdType
///
/// @note class fes__AbstractIdType operations:
/// - fes__AbstractIdType* soap_new_fes__AbstractIdType(soap*) allocate and default initialize
/// - fes__AbstractIdType* soap_new_fes__AbstractIdType(soap*, int num) allocate and default initialize an array
/// - fes__AbstractIdType* soap_new_req_fes__AbstractIdType(soap*, ...) allocate, set required members
/// - fes__AbstractIdType* soap_new_set_fes__AbstractIdType(soap*, ...) allocate, set all public members
/// - fes__AbstractIdType::soap_default(soap*) default initialize members
/// - int soap_read_fes__AbstractIdType(soap*, fes__AbstractIdType*) deserialize from a stream
/// - int soap_write_fes__AbstractIdType(soap*, fes__AbstractIdType*) serialize to a stream
/// - fes__AbstractIdType* fes__AbstractIdType::soap_dup(soap*) returns deep copy of fes__AbstractIdType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - fes__AbstractIdType::soap_del() deep deletes fes__AbstractIdType data members, use only after fes__AbstractIdType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int fes__AbstractIdType::soap_type() returns SOAP_TYPE_fes__AbstractIdType or derived type identifier
class fes__AbstractIdType : public xsd__anyType
{ public:
};

/// @brief "http://www.opengis.net/fes/2.0":LowerBoundaryType is a complexType.
///
/// @note class fes__LowerBoundaryType operations:
/// - fes__LowerBoundaryType* soap_new_fes__LowerBoundaryType(soap*) allocate and default initialize
/// - fes__LowerBoundaryType* soap_new_fes__LowerBoundaryType(soap*, int num) allocate and default initialize an array
/// - fes__LowerBoundaryType* soap_new_req_fes__LowerBoundaryType(soap*, ...) allocate, set required members
/// - fes__LowerBoundaryType* soap_new_set_fes__LowerBoundaryType(soap*, ...) allocate, set all public members
/// - fes__LowerBoundaryType::soap_default(soap*) default initialize members
/// - int soap_read_fes__LowerBoundaryType(soap*, fes__LowerBoundaryType*) deserialize from a stream
/// - int soap_write_fes__LowerBoundaryType(soap*, fes__LowerBoundaryType*) serialize to a stream
/// - fes__LowerBoundaryType* fes__LowerBoundaryType::soap_dup(soap*) returns deep copy of fes__LowerBoundaryType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - fes__LowerBoundaryType::soap_del() deep deletes fes__LowerBoundaryType data members, use only after fes__LowerBoundaryType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int fes__LowerBoundaryType::soap_type() returns SOAP_TYPE_fes__LowerBoundaryType or derived type identifier
class fes__LowerBoundaryType : public xsd__anyType
{ public:
//  BEGIN CHOICE <xs:choice>
  $ int                                  __union_LowerBoundaryType     ;	///< Union _fes__union_LowerBoundaryType selector: set to SOAP_UNION__fes__union_LowerBoundaryType_<fieldname>
/// Union for choice in fes__LowerBoundaryType.
    union _fes__union_LowerBoundaryType
    {
/// Reference "http://www.opengis.net/fes/2.0":expression to abstract element.
//  BEGIN SUBSTITUTIONS <xs:element substitutionGroup="expression"> with choice of elements to substitute:
//    <ValueReference> <Function> <Literal>
/// Element "http://www.opengis.net/fes/2.0":ValueReference.
    std::string*                         ValueReference                ;	///< Choice of element (one of multiple choices).
/// Element "http://www.opengis.net/fes/2.0":Function.
    fes__FunctionType*                   Function                      ;	///< Choice of element (one of multiple choices).
/// Element "http://www.opengis.net/fes/2.0":Literal.
    fes__LiteralType*                    Literal                       ;	///< Choice of element (one of multiple choices).
//  END OF SUBSTITUTIONS
    }                                    union_LowerBoundaryType       ;
//  END OF CHOICE
};

/// @brief "http://www.opengis.net/fes/2.0":UpperBoundaryType is a complexType.
///
/// @note class fes__UpperBoundaryType operations:
/// - fes__UpperBoundaryType* soap_new_fes__UpperBoundaryType(soap*) allocate and default initialize
/// - fes__UpperBoundaryType* soap_new_fes__UpperBoundaryType(soap*, int num) allocate and default initialize an array
/// - fes__UpperBoundaryType* soap_new_req_fes__UpperBoundaryType(soap*, ...) allocate, set required members
/// - fes__UpperBoundaryType* soap_new_set_fes__UpperBoundaryType(soap*, ...) allocate, set all public members
/// - fes__UpperBoundaryType::soap_default(soap*) default initialize members
/// - int soap_read_fes__UpperBoundaryType(soap*, fes__UpperBoundaryType*) deserialize from a stream
/// - int soap_write_fes__UpperBoundaryType(soap*, fes__UpperBoundaryType*) serialize to a stream
/// - fes__UpperBoundaryType* fes__UpperBoundaryType::soap_dup(soap*) returns deep copy of fes__UpperBoundaryType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - fes__UpperBoundaryType::soap_del() deep deletes fes__UpperBoundaryType data members, use only after fes__UpperBoundaryType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int fes__UpperBoundaryType::soap_type() returns SOAP_TYPE_fes__UpperBoundaryType or derived type identifier
class fes__UpperBoundaryType : public xsd__anyType
{ public:
/// Reference "http://www.opengis.net/fes/2.0":expression to abstract element.
//  BEGIN SUBSTITUTIONS <xs:element substitutionGroup="expression"> with choice of elements to substitute:
//    <ValueReference> <Function> <Literal>
  $ int                                  __unionexpression             ;	///< Union _fes__union_UpperBoundaryType selector: set to SOAP_UNION__fes__union_UpperBoundaryType_<fieldname>
/// Union for substitutionGroup fes__expression.
    union _fes__union_UpperBoundaryType
    {
/// Element "http://www.opengis.net/fes/2.0":ValueReference.
    std::string*                         ValueReference                ;	///< Choice of element (one of multiple choices).
/// Element "http://www.opengis.net/fes/2.0":Function.
    fes__FunctionType*                   Function                      ;	///< Choice of element (one of multiple choices).
/// Element "http://www.opengis.net/fes/2.0":Literal.
    fes__LiteralType*                    Literal                       ;	///< Choice of element (one of multiple choices).
    }                                    union_UpperBoundaryType       ;
//  END OF SUBSTITUTIONS
};

/// @brief "http://www.opengis.net/fes/2.0":FunctionType is a complexType.
///
/// @note class fes__FunctionType operations:
/// - fes__FunctionType* soap_new_fes__FunctionType(soap*) allocate and default initialize
/// - fes__FunctionType* soap_new_fes__FunctionType(soap*, int num) allocate and default initialize an array
/// - fes__FunctionType* soap_new_req_fes__FunctionType(soap*, ...) allocate, set required members
/// - fes__FunctionType* soap_new_set_fes__FunctionType(soap*, ...) allocate, set all public members
/// - fes__FunctionType::soap_default(soap*) default initialize members
/// - int soap_read_fes__FunctionType(soap*, fes__FunctionType*) deserialize from a stream
/// - int soap_write_fes__FunctionType(soap*, fes__FunctionType*) serialize to a stream
/// - fes__FunctionType* fes__FunctionType::soap_dup(soap*) returns deep copy of fes__FunctionType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - fes__FunctionType::soap_del() deep deletes fes__FunctionType data members, use only after fes__FunctionType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int fes__FunctionType::soap_type() returns SOAP_TYPE_fes__FunctionType or derived type identifier
class fes__FunctionType : public xsd__anyType
{ public:
/// Reference "http://www.opengis.net/fes/2.0":expression to abstract element.
//  BEGIN SUBSTITUTIONS <xs:element substitutionGroup="expression" minOccurs="0" maxOccurs="unbounded"> with choice of elements to substitute:
//    <ValueReference> <Function> <Literal>
  $ int                                  __sizeexpression               0;
    class __fes__union_FunctionType
    {
  $ int                                  __unionexpression              0;	///< Union _fes__union_FunctionType selector: set to SOAP_UNION__fes__union_FunctionType_<fieldname> or 0 to omit
/// Union for substitutionGroup fes__expression.
    union _fes__union_FunctionType
    {
/// Element "http://www.opengis.net/fes/2.0":ValueReference.
    std::string*                         ValueReference                ;	///< Choice of element (one of multiple choices).
/// Element "http://www.opengis.net/fes/2.0":Function.
    fes__FunctionType*                   Function                      ;	///< Choice of element (one of multiple choices).
/// Element "http://www.opengis.net/fes/2.0":Literal.
    fes__LiteralType*                    Literal                       ;	///< Choice of element (one of multiple choices).
    }                                    union_FunctionType            ;
    }                                   *__union_FunctionType          ;
//  END OF SUBSTITUTIONS
/// Attribute "name" of type xs:string.
  @ std::string                          name                           1;	///< Required attribute.
};

/// @brief "http://www.opengis.net/fes/2.0":LiteralType is a complexType.
///
/// @note class fes__LiteralType operations:
/// - fes__LiteralType* soap_new_fes__LiteralType(soap*) allocate and default initialize
/// - fes__LiteralType* soap_new_fes__LiteralType(soap*, int num) allocate and default initialize an array
/// - fes__LiteralType* soap_new_req_fes__LiteralType(soap*, ...) allocate, set required members
/// - fes__LiteralType* soap_new_set_fes__LiteralType(soap*, ...) allocate, set all public members
/// - fes__LiteralType::soap_default(soap*) default initialize members
/// - int soap_read_fes__LiteralType(soap*, fes__LiteralType*) deserialize from a stream
/// - int soap_write_fes__LiteralType(soap*, fes__LiteralType*) serialize to a stream
/// - fes__LiteralType* fes__LiteralType::soap_dup(soap*) returns deep copy of fes__LiteralType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - fes__LiteralType::soap_del() deep deletes fes__LiteralType data members, use only after fes__LiteralType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int fes__LiteralType::soap_type() returns SOAP_TYPE_fes__LiteralType or derived type identifier
class fes__LiteralType : public xsd__anyType
{ public:
/// <any namespace="##any" minOccurs="0">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
    _XML                                 __any                         0;	///< Store any element content in XML string.
/// Attribute "type" of type xs:QName.
  @ xsd__QName*                          type                           0;	///< Optional attribute.
/// Mixed content.
/// @note Mixed content is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for DOM (soap_dom_element) to store mixed content.
    _XML                                 __mixed                       0;	///< Store mixed content as an xsd:any (an XML string by default).
};

/// @brief "http://www.opengis.net/fes/2.0":ConformanceType is a complexType.
///
/// @note class fes__ConformanceType operations:
/// - fes__ConformanceType* soap_new_fes__ConformanceType(soap*) allocate and default initialize
/// - fes__ConformanceType* soap_new_fes__ConformanceType(soap*, int num) allocate and default initialize an array
/// - fes__ConformanceType* soap_new_req_fes__ConformanceType(soap*, ...) allocate, set required members
/// - fes__ConformanceType* soap_new_set_fes__ConformanceType(soap*, ...) allocate, set all public members
/// - fes__ConformanceType::soap_default(soap*) default initialize members
/// - int soap_read_fes__ConformanceType(soap*, fes__ConformanceType*) deserialize from a stream
/// - int soap_write_fes__ConformanceType(soap*, fes__ConformanceType*) serialize to a stream
/// - fes__ConformanceType* fes__ConformanceType::soap_dup(soap*) returns deep copy of fes__ConformanceType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - fes__ConformanceType::soap_del() deep deletes fes__ConformanceType data members, use only after fes__ConformanceType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int fes__ConformanceType::soap_type() returns SOAP_TYPE_fes__ConformanceType or derived type identifier
class fes__ConformanceType : public xsd__anyType
{ public:
/// Vector of ows__DomainType* of length 1..unbounded.
    std::vector<ows__DomainType*       > Constraint                     1;	///< Multiple elements.
};

/// @brief "http://www.opengis.net/fes/2.0":Id_CapabilitiesType is a complexType.
///
/// @note class fes__Id_x005fCapabilitiesType operations:
/// - fes__Id_x005fCapabilitiesType* soap_new_fes__Id_x005fCapabilitiesType(soap*) allocate and default initialize
/// - fes__Id_x005fCapabilitiesType* soap_new_fes__Id_x005fCapabilitiesType(soap*, int num) allocate and default initialize an array
/// - fes__Id_x005fCapabilitiesType* soap_new_req_fes__Id_x005fCapabilitiesType(soap*, ...) allocate, set required members
/// - fes__Id_x005fCapabilitiesType* soap_new_set_fes__Id_x005fCapabilitiesType(soap*, ...) allocate, set all public members
/// - fes__Id_x005fCapabilitiesType::soap_default(soap*) default initialize members
/// - int soap_read_fes__Id_x005fCapabilitiesType(soap*, fes__Id_x005fCapabilitiesType*) deserialize from a stream
/// - int soap_write_fes__Id_x005fCapabilitiesType(soap*, fes__Id_x005fCapabilitiesType*) serialize to a stream
/// - fes__Id_x005fCapabilitiesType* fes__Id_x005fCapabilitiesType::soap_dup(soap*) returns deep copy of fes__Id_x005fCapabilitiesType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - fes__Id_x005fCapabilitiesType::soap_del() deep deletes fes__Id_x005fCapabilitiesType data members, use only after fes__Id_x005fCapabilitiesType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int fes__Id_x005fCapabilitiesType::soap_type() returns SOAP_TYPE_fes__Id_x005fCapabilitiesType or derived type identifier
class fes__Id_x005fCapabilitiesType : public xsd__anyType
{ public:
/// Vector of fes__ResourceIdentifierType* of length 1..unbounded.
    std::vector<fes__ResourceIdentifierType*> ResourceIdentifier             1;	///< Multiple elements.
};

/// @brief "http://www.opengis.net/fes/2.0":ResourceIdentifierType is a complexType.
///
/// @note class fes__ResourceIdentifierType operations:
/// - fes__ResourceIdentifierType* soap_new_fes__ResourceIdentifierType(soap*) allocate and default initialize
/// - fes__ResourceIdentifierType* soap_new_fes__ResourceIdentifierType(soap*, int num) allocate and default initialize an array
/// - fes__ResourceIdentifierType* soap_new_req_fes__ResourceIdentifierType(soap*, ...) allocate, set required members
/// - fes__ResourceIdentifierType* soap_new_set_fes__ResourceIdentifierType(soap*, ...) allocate, set all public members
/// - fes__ResourceIdentifierType::soap_default(soap*) default initialize members
/// - int soap_read_fes__ResourceIdentifierType(soap*, fes__ResourceIdentifierType*) deserialize from a stream
/// - int soap_write_fes__ResourceIdentifierType(soap*, fes__ResourceIdentifierType*) serialize to a stream
/// - fes__ResourceIdentifierType* fes__ResourceIdentifierType::soap_dup(soap*) returns deep copy of fes__ResourceIdentifierType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - fes__ResourceIdentifierType::soap_del() deep deletes fes__ResourceIdentifierType data members, use only after fes__ResourceIdentifierType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int fes__ResourceIdentifierType::soap_type() returns SOAP_TYPE_fes__ResourceIdentifierType or derived type identifier
class fes__ResourceIdentifierType : public xsd__anyType
{ public:
/// Element reference "http://www.opengis.net/fes/2.0:""http://www.opengis.net/ows/1.1":Metadata.
    ows__MetadataType*                   ows__Metadata                  0;	///< Optional element.
/// Attribute "name" of type xs:QName.
  @ xsd__QName                           name                           1;	///< Required attribute.
};

/// @brief "http://www.opengis.net/fes/2.0":Scalar_CapabilitiesType is a complexType.
///
/// @note class fes__Scalar_x005fCapabilitiesType operations:
/// - fes__Scalar_x005fCapabilitiesType* soap_new_fes__Scalar_x005fCapabilitiesType(soap*) allocate and default initialize
/// - fes__Scalar_x005fCapabilitiesType* soap_new_fes__Scalar_x005fCapabilitiesType(soap*, int num) allocate and default initialize an array
/// - fes__Scalar_x005fCapabilitiesType* soap_new_req_fes__Scalar_x005fCapabilitiesType(soap*, ...) allocate, set required members
/// - fes__Scalar_x005fCapabilitiesType* soap_new_set_fes__Scalar_x005fCapabilitiesType(soap*, ...) allocate, set all public members
/// - fes__Scalar_x005fCapabilitiesType::soap_default(soap*) default initialize members
/// - int soap_read_fes__Scalar_x005fCapabilitiesType(soap*, fes__Scalar_x005fCapabilitiesType*) deserialize from a stream
/// - int soap_write_fes__Scalar_x005fCapabilitiesType(soap*, fes__Scalar_x005fCapabilitiesType*) serialize to a stream
/// - fes__Scalar_x005fCapabilitiesType* fes__Scalar_x005fCapabilitiesType::soap_dup(soap*) returns deep copy of fes__Scalar_x005fCapabilitiesType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - fes__Scalar_x005fCapabilitiesType::soap_del() deep deletes fes__Scalar_x005fCapabilitiesType data members, use only after fes__Scalar_x005fCapabilitiesType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int fes__Scalar_x005fCapabilitiesType::soap_type() returns SOAP_TYPE_fes__Scalar_x005fCapabilitiesType or derived type identifier
class fes__Scalar_x005fCapabilitiesType : public xsd__anyType
{ public:
/// Element reference "http://www.opengis.net/fes/2.0:""http://www.opengis.net/fes/2.0":LogicalOperators.
    _fes__LogicalOperators*              LogicalOperators               0;	///< Optional element.
/// Element "ComparisonOperators" of type "http://www.opengis.net/fes/2.0":ComparisonOperatorsType.
    fes__ComparisonOperatorsType*        ComparisonOperators            0;	///< Optional element.
};

/// @brief "http://www.opengis.net/fes/2.0":ComparisonOperatorsType is a complexType.
///
/// @note class fes__ComparisonOperatorsType operations:
/// - fes__ComparisonOperatorsType* soap_new_fes__ComparisonOperatorsType(soap*) allocate and default initialize
/// - fes__ComparisonOperatorsType* soap_new_fes__ComparisonOperatorsType(soap*, int num) allocate and default initialize an array
/// - fes__ComparisonOperatorsType* soap_new_req_fes__ComparisonOperatorsType(soap*, ...) allocate, set required members
/// - fes__ComparisonOperatorsType* soap_new_set_fes__ComparisonOperatorsType(soap*, ...) allocate, set all public members
/// - fes__ComparisonOperatorsType::soap_default(soap*) default initialize members
/// - int soap_read_fes__ComparisonOperatorsType(soap*, fes__ComparisonOperatorsType*) deserialize from a stream
/// - int soap_write_fes__ComparisonOperatorsType(soap*, fes__ComparisonOperatorsType*) serialize to a stream
/// - fes__ComparisonOperatorsType* fes__ComparisonOperatorsType::soap_dup(soap*) returns deep copy of fes__ComparisonOperatorsType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - fes__ComparisonOperatorsType::soap_del() deep deletes fes__ComparisonOperatorsType data members, use only after fes__ComparisonOperatorsType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int fes__ComparisonOperatorsType::soap_type() returns SOAP_TYPE_fes__ComparisonOperatorsType or derived type identifier
class fes__ComparisonOperatorsType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence maxOccurs="unbounded">
    std::vector<
    struct __fes__ComparisonOperatorsType_sequence
    {
/// Element "ComparisonOperator" of type "http://www.opengis.net/fes/2.0":ComparisonOperatorType.
    fes__ComparisonOperatorType*         ComparisonOperator             1;	///< Required element.
    }>                                   __ComparisonOperatorsType_sequence;
//  END OF SEQUENCE
};

/// @brief "http://www.opengis.net/fes/2.0":ComparisonOperatorType is a complexType.
///
/// @note class fes__ComparisonOperatorType operations:
/// - fes__ComparisonOperatorType* soap_new_fes__ComparisonOperatorType(soap*) allocate and default initialize
/// - fes__ComparisonOperatorType* soap_new_fes__ComparisonOperatorType(soap*, int num) allocate and default initialize an array
/// - fes__ComparisonOperatorType* soap_new_req_fes__ComparisonOperatorType(soap*, ...) allocate, set required members
/// - fes__ComparisonOperatorType* soap_new_set_fes__ComparisonOperatorType(soap*, ...) allocate, set all public members
/// - fes__ComparisonOperatorType::soap_default(soap*) default initialize members
/// - int soap_read_fes__ComparisonOperatorType(soap*, fes__ComparisonOperatorType*) deserialize from a stream
/// - int soap_write_fes__ComparisonOperatorType(soap*, fes__ComparisonOperatorType*) serialize to a stream
/// - fes__ComparisonOperatorType* fes__ComparisonOperatorType::soap_dup(soap*) returns deep copy of fes__ComparisonOperatorType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - fes__ComparisonOperatorType::soap_del() deep deletes fes__ComparisonOperatorType data members, use only after fes__ComparisonOperatorType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int fes__ComparisonOperatorType::soap_type() returns SOAP_TYPE_fes__ComparisonOperatorType or derived type identifier
class fes__ComparisonOperatorType : public xsd__anyType
{ public:
/// Attribute "name" of type "http://www.opengis.net/fes/2.0":ComparisonOperatorNameType.
  @ fes__ComparisonOperatorNameType      name                           1;	///< Required attribute.
};

/// @brief "http://www.opengis.net/fes/2.0":AvailableFunctionsType is a complexType.
///
/// @note class fes__AvailableFunctionsType operations:
/// - fes__AvailableFunctionsType* soap_new_fes__AvailableFunctionsType(soap*) allocate and default initialize
/// - fes__AvailableFunctionsType* soap_new_fes__AvailableFunctionsType(soap*, int num) allocate and default initialize an array
/// - fes__AvailableFunctionsType* soap_new_req_fes__AvailableFunctionsType(soap*, ...) allocate, set required members
/// - fes__AvailableFunctionsType* soap_new_set_fes__AvailableFunctionsType(soap*, ...) allocate, set all public members
/// - fes__AvailableFunctionsType::soap_default(soap*) default initialize members
/// - int soap_read_fes__AvailableFunctionsType(soap*, fes__AvailableFunctionsType*) deserialize from a stream
/// - int soap_write_fes__AvailableFunctionsType(soap*, fes__AvailableFunctionsType*) serialize to a stream
/// - fes__AvailableFunctionsType* fes__AvailableFunctionsType::soap_dup(soap*) returns deep copy of fes__AvailableFunctionsType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - fes__AvailableFunctionsType::soap_del() deep deletes fes__AvailableFunctionsType data members, use only after fes__AvailableFunctionsType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int fes__AvailableFunctionsType::soap_type() returns SOAP_TYPE_fes__AvailableFunctionsType or derived type identifier
class fes__AvailableFunctionsType : public xsd__anyType
{ public:
/// Vector of fes__AvailableFunctionType* of length 1..unbounded.
    std::vector<fes__AvailableFunctionType*> Function                       1;	///< Multiple elements.
};

/// @brief "http://www.opengis.net/fes/2.0":AvailableFunctionType is a complexType.
///
/// @note class fes__AvailableFunctionType operations:
/// - fes__AvailableFunctionType* soap_new_fes__AvailableFunctionType(soap*) allocate and default initialize
/// - fes__AvailableFunctionType* soap_new_fes__AvailableFunctionType(soap*, int num) allocate and default initialize an array
/// - fes__AvailableFunctionType* soap_new_req_fes__AvailableFunctionType(soap*, ...) allocate, set required members
/// - fes__AvailableFunctionType* soap_new_set_fes__AvailableFunctionType(soap*, ...) allocate, set all public members
/// - fes__AvailableFunctionType::soap_default(soap*) default initialize members
/// - int soap_read_fes__AvailableFunctionType(soap*, fes__AvailableFunctionType*) deserialize from a stream
/// - int soap_write_fes__AvailableFunctionType(soap*, fes__AvailableFunctionType*) serialize to a stream
/// - fes__AvailableFunctionType* fes__AvailableFunctionType::soap_dup(soap*) returns deep copy of fes__AvailableFunctionType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - fes__AvailableFunctionType::soap_del() deep deletes fes__AvailableFunctionType data members, use only after fes__AvailableFunctionType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int fes__AvailableFunctionType::soap_type() returns SOAP_TYPE_fes__AvailableFunctionType or derived type identifier
class fes__AvailableFunctionType : public xsd__anyType
{ public:
/// Element reference "http://www.opengis.net/fes/2.0:""http://www.opengis.net/ows/1.1":Metadata.
    ows__MetadataType*                   ows__Metadata                  0;	///< Optional element.
/// Element "Returns" of type xs:QName.
    xsd__QName                           Returns                        1;	///< Required element.
/// Element "Arguments" of type "http://www.opengis.net/fes/2.0":ArgumentsType.
    fes__ArgumentsType*                  Arguments                      0;	///< Optional element.
/// Attribute "name" of type xs:string.
  @ std::string                          name                           1;	///< Required attribute.
};

/// @brief "http://www.opengis.net/fes/2.0":ArgumentsType is a complexType.
///
/// @note class fes__ArgumentsType operations:
/// - fes__ArgumentsType* soap_new_fes__ArgumentsType(soap*) allocate and default initialize
/// - fes__ArgumentsType* soap_new_fes__ArgumentsType(soap*, int num) allocate and default initialize an array
/// - fes__ArgumentsType* soap_new_req_fes__ArgumentsType(soap*, ...) allocate, set required members
/// - fes__ArgumentsType* soap_new_set_fes__ArgumentsType(soap*, ...) allocate, set all public members
/// - fes__ArgumentsType::soap_default(soap*) default initialize members
/// - int soap_read_fes__ArgumentsType(soap*, fes__ArgumentsType*) deserialize from a stream
/// - int soap_write_fes__ArgumentsType(soap*, fes__ArgumentsType*) serialize to a stream
/// - fes__ArgumentsType* fes__ArgumentsType::soap_dup(soap*) returns deep copy of fes__ArgumentsType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - fes__ArgumentsType::soap_del() deep deletes fes__ArgumentsType data members, use only after fes__ArgumentsType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int fes__ArgumentsType::soap_type() returns SOAP_TYPE_fes__ArgumentsType or derived type identifier
class fes__ArgumentsType : public xsd__anyType
{ public:
/// Vector of fes__ArgumentType* of length 1..unbounded.
    std::vector<fes__ArgumentType*     > Argument                       1;	///< Multiple elements.
};

/// @brief "http://www.opengis.net/fes/2.0":ArgumentType is a complexType.
///
/// @note class fes__ArgumentType operations:
/// - fes__ArgumentType* soap_new_fes__ArgumentType(soap*) allocate and default initialize
/// - fes__ArgumentType* soap_new_fes__ArgumentType(soap*, int num) allocate and default initialize an array
/// - fes__ArgumentType* soap_new_req_fes__ArgumentType(soap*, ...) allocate, set required members
/// - fes__ArgumentType* soap_new_set_fes__ArgumentType(soap*, ...) allocate, set all public members
/// - fes__ArgumentType::soap_default(soap*) default initialize members
/// - int soap_read_fes__ArgumentType(soap*, fes__ArgumentType*) deserialize from a stream
/// - int soap_write_fes__ArgumentType(soap*, fes__ArgumentType*) serialize to a stream
/// - fes__ArgumentType* fes__ArgumentType::soap_dup(soap*) returns deep copy of fes__ArgumentType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - fes__ArgumentType::soap_del() deep deletes fes__ArgumentType data members, use only after fes__ArgumentType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int fes__ArgumentType::soap_type() returns SOAP_TYPE_fes__ArgumentType or derived type identifier
class fes__ArgumentType : public xsd__anyType
{ public:
/// Element reference "http://www.opengis.net/fes/2.0:""http://www.opengis.net/ows/1.1":Metadata.
    ows__MetadataType*                   ows__Metadata                  0;	///< Optional element.
/// Element "Type" of type xs:QName.
    xsd__QName                           Type                           1;	///< Required element.
/// Attribute "name" of type xs:string.
  @ std::string                          name                           1;	///< Required attribute.
};

/// @brief "http://www.opengis.net/fes/2.0":Spatial_CapabilitiesType is a complexType.
///
/// @note class fes__Spatial_x005fCapabilitiesType operations:
/// - fes__Spatial_x005fCapabilitiesType* soap_new_fes__Spatial_x005fCapabilitiesType(soap*) allocate and default initialize
/// - fes__Spatial_x005fCapabilitiesType* soap_new_fes__Spatial_x005fCapabilitiesType(soap*, int num) allocate and default initialize an array
/// - fes__Spatial_x005fCapabilitiesType* soap_new_req_fes__Spatial_x005fCapabilitiesType(soap*, ...) allocate, set required members
/// - fes__Spatial_x005fCapabilitiesType* soap_new_set_fes__Spatial_x005fCapabilitiesType(soap*, ...) allocate, set all public members
/// - fes__Spatial_x005fCapabilitiesType::soap_default(soap*) default initialize members
/// - int soap_read_fes__Spatial_x005fCapabilitiesType(soap*, fes__Spatial_x005fCapabilitiesType*) deserialize from a stream
/// - int soap_write_fes__Spatial_x005fCapabilitiesType(soap*, fes__Spatial_x005fCapabilitiesType*) serialize to a stream
/// - fes__Spatial_x005fCapabilitiesType* fes__Spatial_x005fCapabilitiesType::soap_dup(soap*) returns deep copy of fes__Spatial_x005fCapabilitiesType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - fes__Spatial_x005fCapabilitiesType::soap_del() deep deletes fes__Spatial_x005fCapabilitiesType data members, use only after fes__Spatial_x005fCapabilitiesType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int fes__Spatial_x005fCapabilitiesType::soap_type() returns SOAP_TYPE_fes__Spatial_x005fCapabilitiesType or derived type identifier
class fes__Spatial_x005fCapabilitiesType : public xsd__anyType
{ public:
/// Element "GeometryOperands" of type "http://www.opengis.net/fes/2.0":GeometryOperandsType.
    fes__GeometryOperandsType*           GeometryOperands               1;	///< Required element.
/// Element "SpatialOperators" of type "http://www.opengis.net/fes/2.0":SpatialOperatorsType.
    fes__SpatialOperatorsType*           SpatialOperators               1;	///< Required element.
};

/// @brief "http://www.opengis.net/fes/2.0":GeometryOperandsType is a complexType.
///
/// @note class fes__GeometryOperandsType operations:
/// - fes__GeometryOperandsType* soap_new_fes__GeometryOperandsType(soap*) allocate and default initialize
/// - fes__GeometryOperandsType* soap_new_fes__GeometryOperandsType(soap*, int num) allocate and default initialize an array
/// - fes__GeometryOperandsType* soap_new_req_fes__GeometryOperandsType(soap*, ...) allocate, set required members
/// - fes__GeometryOperandsType* soap_new_set_fes__GeometryOperandsType(soap*, ...) allocate, set all public members
/// - fes__GeometryOperandsType::soap_default(soap*) default initialize members
/// - int soap_read_fes__GeometryOperandsType(soap*, fes__GeometryOperandsType*) deserialize from a stream
/// - int soap_write_fes__GeometryOperandsType(soap*, fes__GeometryOperandsType*) serialize to a stream
/// - fes__GeometryOperandsType* fes__GeometryOperandsType::soap_dup(soap*) returns deep copy of fes__GeometryOperandsType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - fes__GeometryOperandsType::soap_del() deep deletes fes__GeometryOperandsType data members, use only after fes__GeometryOperandsType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int fes__GeometryOperandsType::soap_type() returns SOAP_TYPE_fes__GeometryOperandsType or derived type identifier
class fes__GeometryOperandsType : public xsd__anyType
{ public:
/// Vector of GeometryOperand of length 1..unbounded.
    std::vector<
/// @note class _fes__GeometryOperandsType_GeometryOperand operations:
/// - _fes__GeometryOperandsType_GeometryOperand* soap_new__fes__GeometryOperandsType_GeometryOperand(soap*) allocate and default initialize
/// - _fes__GeometryOperandsType_GeometryOperand* soap_new__fes__GeometryOperandsType_GeometryOperand(soap*, int num) allocate and default initialize an array
/// - _fes__GeometryOperandsType_GeometryOperand* soap_new_req__fes__GeometryOperandsType_GeometryOperand(soap*, ...) allocate, set required members
/// - _fes__GeometryOperandsType_GeometryOperand* soap_new_set__fes__GeometryOperandsType_GeometryOperand(soap*, ...) allocate, set all public members
/// - _fes__GeometryOperandsType_GeometryOperand::soap_default(soap*) default initialize members
/// - int soap_read__fes__GeometryOperandsType_GeometryOperand(soap*, _fes__GeometryOperandsType_GeometryOperand*) deserialize from a stream
/// - int soap_write__fes__GeometryOperandsType_GeometryOperand(soap*, _fes__GeometryOperandsType_GeometryOperand*) serialize to a stream
/// - _fes__GeometryOperandsType_GeometryOperand* _fes__GeometryOperandsType_GeometryOperand::soap_dup(soap*) returns deep copy of _fes__GeometryOperandsType_GeometryOperand, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _fes__GeometryOperandsType_GeometryOperand::soap_del() deep deletes _fes__GeometryOperandsType_GeometryOperand data members, use only after _fes__GeometryOperandsType_GeometryOperand::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _fes__GeometryOperandsType_GeometryOperand::soap_type() returns SOAP_TYPE__fes__GeometryOperandsType_GeometryOperand or derived type identifier
    class _fes__GeometryOperandsType_GeometryOperand
    { public:
/// Attribute "name" of type xs:QName.
  @ xsd__QName                           name                           1;	///< Required attribute.
    }>                                   GeometryOperand                1;	///< Multiple elements.
};

/// @brief "http://www.opengis.net/fes/2.0":SpatialOperatorsType is a complexType.
///
/// @note class fes__SpatialOperatorsType operations:
/// - fes__SpatialOperatorsType* soap_new_fes__SpatialOperatorsType(soap*) allocate and default initialize
/// - fes__SpatialOperatorsType* soap_new_fes__SpatialOperatorsType(soap*, int num) allocate and default initialize an array
/// - fes__SpatialOperatorsType* soap_new_req_fes__SpatialOperatorsType(soap*, ...) allocate, set required members
/// - fes__SpatialOperatorsType* soap_new_set_fes__SpatialOperatorsType(soap*, ...) allocate, set all public members
/// - fes__SpatialOperatorsType::soap_default(soap*) default initialize members
/// - int soap_read_fes__SpatialOperatorsType(soap*, fes__SpatialOperatorsType*) deserialize from a stream
/// - int soap_write_fes__SpatialOperatorsType(soap*, fes__SpatialOperatorsType*) serialize to a stream
/// - fes__SpatialOperatorsType* fes__SpatialOperatorsType::soap_dup(soap*) returns deep copy of fes__SpatialOperatorsType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - fes__SpatialOperatorsType::soap_del() deep deletes fes__SpatialOperatorsType data members, use only after fes__SpatialOperatorsType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int fes__SpatialOperatorsType::soap_type() returns SOAP_TYPE_fes__SpatialOperatorsType or derived type identifier
class fes__SpatialOperatorsType : public xsd__anyType
{ public:
/// Vector of fes__SpatialOperatorType* of length 1..unbounded.
    std::vector<fes__SpatialOperatorType*> SpatialOperator                1;	///< Multiple elements.
};

/// @brief "http://www.opengis.net/fes/2.0":SpatialOperatorType is a complexType.
///
/// @note class fes__SpatialOperatorType operations:
/// - fes__SpatialOperatorType* soap_new_fes__SpatialOperatorType(soap*) allocate and default initialize
/// - fes__SpatialOperatorType* soap_new_fes__SpatialOperatorType(soap*, int num) allocate and default initialize an array
/// - fes__SpatialOperatorType* soap_new_req_fes__SpatialOperatorType(soap*, ...) allocate, set required members
/// - fes__SpatialOperatorType* soap_new_set_fes__SpatialOperatorType(soap*, ...) allocate, set all public members
/// - fes__SpatialOperatorType::soap_default(soap*) default initialize members
/// - int soap_read_fes__SpatialOperatorType(soap*, fes__SpatialOperatorType*) deserialize from a stream
/// - int soap_write_fes__SpatialOperatorType(soap*, fes__SpatialOperatorType*) serialize to a stream
/// - fes__SpatialOperatorType* fes__SpatialOperatorType::soap_dup(soap*) returns deep copy of fes__SpatialOperatorType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - fes__SpatialOperatorType::soap_del() deep deletes fes__SpatialOperatorType data members, use only after fes__SpatialOperatorType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int fes__SpatialOperatorType::soap_type() returns SOAP_TYPE_fes__SpatialOperatorType or derived type identifier
class fes__SpatialOperatorType : public xsd__anyType
{ public:
/// Element "GeometryOperands" of type "http://www.opengis.net/fes/2.0":GeometryOperandsType.
    fes__GeometryOperandsType*           GeometryOperands               0;	///< Optional element.
/// Attribute "name" of type "http://www.opengis.net/fes/2.0":SpatialOperatorNameType.
  @ fes__SpatialOperatorNameType*        name                           0;	///< Optional attribute.
};

/// @brief "http://www.opengis.net/fes/2.0":Temporal_CapabilitiesType is a complexType.
///
/// @note class fes__Temporal_x005fCapabilitiesType operations:
/// - fes__Temporal_x005fCapabilitiesType* soap_new_fes__Temporal_x005fCapabilitiesType(soap*) allocate and default initialize
/// - fes__Temporal_x005fCapabilitiesType* soap_new_fes__Temporal_x005fCapabilitiesType(soap*, int num) allocate and default initialize an array
/// - fes__Temporal_x005fCapabilitiesType* soap_new_req_fes__Temporal_x005fCapabilitiesType(soap*, ...) allocate, set required members
/// - fes__Temporal_x005fCapabilitiesType* soap_new_set_fes__Temporal_x005fCapabilitiesType(soap*, ...) allocate, set all public members
/// - fes__Temporal_x005fCapabilitiesType::soap_default(soap*) default initialize members
/// - int soap_read_fes__Temporal_x005fCapabilitiesType(soap*, fes__Temporal_x005fCapabilitiesType*) deserialize from a stream
/// - int soap_write_fes__Temporal_x005fCapabilitiesType(soap*, fes__Temporal_x005fCapabilitiesType*) serialize to a stream
/// - fes__Temporal_x005fCapabilitiesType* fes__Temporal_x005fCapabilitiesType::soap_dup(soap*) returns deep copy of fes__Temporal_x005fCapabilitiesType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - fes__Temporal_x005fCapabilitiesType::soap_del() deep deletes fes__Temporal_x005fCapabilitiesType data members, use only after fes__Temporal_x005fCapabilitiesType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int fes__Temporal_x005fCapabilitiesType::soap_type() returns SOAP_TYPE_fes__Temporal_x005fCapabilitiesType or derived type identifier
class fes__Temporal_x005fCapabilitiesType : public xsd__anyType
{ public:
/// Element "TemporalOperands" of type "http://www.opengis.net/fes/2.0":TemporalOperandsType.
    fes__TemporalOperandsType*           TemporalOperands               1;	///< Required element.
/// Element "TemporalOperators" of type "http://www.opengis.net/fes/2.0":TemporalOperatorsType.
    fes__TemporalOperatorsType*          TemporalOperators              1;	///< Required element.
};

/// @brief "http://www.opengis.net/fes/2.0":TemporalOperandsType is a complexType.
///
/// @note class fes__TemporalOperandsType operations:
/// - fes__TemporalOperandsType* soap_new_fes__TemporalOperandsType(soap*) allocate and default initialize
/// - fes__TemporalOperandsType* soap_new_fes__TemporalOperandsType(soap*, int num) allocate and default initialize an array
/// - fes__TemporalOperandsType* soap_new_req_fes__TemporalOperandsType(soap*, ...) allocate, set required members
/// - fes__TemporalOperandsType* soap_new_set_fes__TemporalOperandsType(soap*, ...) allocate, set all public members
/// - fes__TemporalOperandsType::soap_default(soap*) default initialize members
/// - int soap_read_fes__TemporalOperandsType(soap*, fes__TemporalOperandsType*) deserialize from a stream
/// - int soap_write_fes__TemporalOperandsType(soap*, fes__TemporalOperandsType*) serialize to a stream
/// - fes__TemporalOperandsType* fes__TemporalOperandsType::soap_dup(soap*) returns deep copy of fes__TemporalOperandsType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - fes__TemporalOperandsType::soap_del() deep deletes fes__TemporalOperandsType data members, use only after fes__TemporalOperandsType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int fes__TemporalOperandsType::soap_type() returns SOAP_TYPE_fes__TemporalOperandsType or derived type identifier
class fes__TemporalOperandsType : public xsd__anyType
{ public:
/// Vector of TemporalOperand of length 1..unbounded.
    std::vector<
/// @note class _fes__TemporalOperandsType_TemporalOperand operations:
/// - _fes__TemporalOperandsType_TemporalOperand* soap_new__fes__TemporalOperandsType_TemporalOperand(soap*) allocate and default initialize
/// - _fes__TemporalOperandsType_TemporalOperand* soap_new__fes__TemporalOperandsType_TemporalOperand(soap*, int num) allocate and default initialize an array
/// - _fes__TemporalOperandsType_TemporalOperand* soap_new_req__fes__TemporalOperandsType_TemporalOperand(soap*, ...) allocate, set required members
/// - _fes__TemporalOperandsType_TemporalOperand* soap_new_set__fes__TemporalOperandsType_TemporalOperand(soap*, ...) allocate, set all public members
/// - _fes__TemporalOperandsType_TemporalOperand::soap_default(soap*) default initialize members
/// - int soap_read__fes__TemporalOperandsType_TemporalOperand(soap*, _fes__TemporalOperandsType_TemporalOperand*) deserialize from a stream
/// - int soap_write__fes__TemporalOperandsType_TemporalOperand(soap*, _fes__TemporalOperandsType_TemporalOperand*) serialize to a stream
/// - _fes__TemporalOperandsType_TemporalOperand* _fes__TemporalOperandsType_TemporalOperand::soap_dup(soap*) returns deep copy of _fes__TemporalOperandsType_TemporalOperand, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _fes__TemporalOperandsType_TemporalOperand::soap_del() deep deletes _fes__TemporalOperandsType_TemporalOperand data members, use only after _fes__TemporalOperandsType_TemporalOperand::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _fes__TemporalOperandsType_TemporalOperand::soap_type() returns SOAP_TYPE__fes__TemporalOperandsType_TemporalOperand or derived type identifier
    class _fes__TemporalOperandsType_TemporalOperand
    { public:
/// Attribute "name" of type xs:QName.
  @ xsd__QName                           name                           1;	///< Required attribute.
    }>                                   TemporalOperand                1;	///< Multiple elements.
};

/// @brief "http://www.opengis.net/fes/2.0":TemporalOperatorsType is a complexType.
///
/// @note class fes__TemporalOperatorsType operations:
/// - fes__TemporalOperatorsType* soap_new_fes__TemporalOperatorsType(soap*) allocate and default initialize
/// - fes__TemporalOperatorsType* soap_new_fes__TemporalOperatorsType(soap*, int num) allocate and default initialize an array
/// - fes__TemporalOperatorsType* soap_new_req_fes__TemporalOperatorsType(soap*, ...) allocate, set required members
/// - fes__TemporalOperatorsType* soap_new_set_fes__TemporalOperatorsType(soap*, ...) allocate, set all public members
/// - fes__TemporalOperatorsType::soap_default(soap*) default initialize members
/// - int soap_read_fes__TemporalOperatorsType(soap*, fes__TemporalOperatorsType*) deserialize from a stream
/// - int soap_write_fes__TemporalOperatorsType(soap*, fes__TemporalOperatorsType*) serialize to a stream
/// - fes__TemporalOperatorsType* fes__TemporalOperatorsType::soap_dup(soap*) returns deep copy of fes__TemporalOperatorsType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - fes__TemporalOperatorsType::soap_del() deep deletes fes__TemporalOperatorsType data members, use only after fes__TemporalOperatorsType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int fes__TemporalOperatorsType::soap_type() returns SOAP_TYPE_fes__TemporalOperatorsType or derived type identifier
class fes__TemporalOperatorsType : public xsd__anyType
{ public:
/// Vector of fes__TemporalOperatorType* of length 1..unbounded.
    std::vector<fes__TemporalOperatorType*> TemporalOperator               1;	///< Multiple elements.
};

/// @brief "http://www.opengis.net/fes/2.0":TemporalOperatorType is a complexType.
///
/// @note class fes__TemporalOperatorType operations:
/// - fes__TemporalOperatorType* soap_new_fes__TemporalOperatorType(soap*) allocate and default initialize
/// - fes__TemporalOperatorType* soap_new_fes__TemporalOperatorType(soap*, int num) allocate and default initialize an array
/// - fes__TemporalOperatorType* soap_new_req_fes__TemporalOperatorType(soap*, ...) allocate, set required members
/// - fes__TemporalOperatorType* soap_new_set_fes__TemporalOperatorType(soap*, ...) allocate, set all public members
/// - fes__TemporalOperatorType::soap_default(soap*) default initialize members
/// - int soap_read_fes__TemporalOperatorType(soap*, fes__TemporalOperatorType*) deserialize from a stream
/// - int soap_write_fes__TemporalOperatorType(soap*, fes__TemporalOperatorType*) serialize to a stream
/// - fes__TemporalOperatorType* fes__TemporalOperatorType::soap_dup(soap*) returns deep copy of fes__TemporalOperatorType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - fes__TemporalOperatorType::soap_del() deep deletes fes__TemporalOperatorType data members, use only after fes__TemporalOperatorType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int fes__TemporalOperatorType::soap_type() returns SOAP_TYPE_fes__TemporalOperatorType or derived type identifier
class fes__TemporalOperatorType : public xsd__anyType
{ public:
/// Element "TemporalOperands" of type "http://www.opengis.net/fes/2.0":TemporalOperandsType.
    fes__TemporalOperandsType*           TemporalOperands               0;	///< Optional element.
/// Attribute "name" of type "http://www.opengis.net/fes/2.0":TemporalOperatorNameType.
  @ fes__TemporalOperatorNameType        name                           1;	///< Required attribute.
};

/// @brief "http://www.opengis.net/fes/2.0":Extended_CapabilitiesType is a complexType.
///
/// @note class fes__Extended_x005fCapabilitiesType operations:
/// - fes__Extended_x005fCapabilitiesType* soap_new_fes__Extended_x005fCapabilitiesType(soap*) allocate and default initialize
/// - fes__Extended_x005fCapabilitiesType* soap_new_fes__Extended_x005fCapabilitiesType(soap*, int num) allocate and default initialize an array
/// - fes__Extended_x005fCapabilitiesType* soap_new_req_fes__Extended_x005fCapabilitiesType(soap*, ...) allocate, set required members
/// - fes__Extended_x005fCapabilitiesType* soap_new_set_fes__Extended_x005fCapabilitiesType(soap*, ...) allocate, set all public members
/// - fes__Extended_x005fCapabilitiesType::soap_default(soap*) default initialize members
/// - int soap_read_fes__Extended_x005fCapabilitiesType(soap*, fes__Extended_x005fCapabilitiesType*) deserialize from a stream
/// - int soap_write_fes__Extended_x005fCapabilitiesType(soap*, fes__Extended_x005fCapabilitiesType*) serialize to a stream
/// - fes__Extended_x005fCapabilitiesType* fes__Extended_x005fCapabilitiesType::soap_dup(soap*) returns deep copy of fes__Extended_x005fCapabilitiesType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - fes__Extended_x005fCapabilitiesType::soap_del() deep deletes fes__Extended_x005fCapabilitiesType data members, use only after fes__Extended_x005fCapabilitiesType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int fes__Extended_x005fCapabilitiesType::soap_type() returns SOAP_TYPE_fes__Extended_x005fCapabilitiesType or derived type identifier
class fes__Extended_x005fCapabilitiesType : public xsd__anyType
{ public:
/// Element "AdditionalOperators" of type "http://www.opengis.net/fes/2.0":AdditionalOperatorsType.
    fes__AdditionalOperatorsType*        AdditionalOperators            0;	///< Optional element.
};

/// @brief "http://www.opengis.net/fes/2.0":AdditionalOperatorsType is a complexType.
///
/// @note class fes__AdditionalOperatorsType operations:
/// - fes__AdditionalOperatorsType* soap_new_fes__AdditionalOperatorsType(soap*) allocate and default initialize
/// - fes__AdditionalOperatorsType* soap_new_fes__AdditionalOperatorsType(soap*, int num) allocate and default initialize an array
/// - fes__AdditionalOperatorsType* soap_new_req_fes__AdditionalOperatorsType(soap*, ...) allocate, set required members
/// - fes__AdditionalOperatorsType* soap_new_set_fes__AdditionalOperatorsType(soap*, ...) allocate, set all public members
/// - fes__AdditionalOperatorsType::soap_default(soap*) default initialize members
/// - int soap_read_fes__AdditionalOperatorsType(soap*, fes__AdditionalOperatorsType*) deserialize from a stream
/// - int soap_write_fes__AdditionalOperatorsType(soap*, fes__AdditionalOperatorsType*) serialize to a stream
/// - fes__AdditionalOperatorsType* fes__AdditionalOperatorsType::soap_dup(soap*) returns deep copy of fes__AdditionalOperatorsType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - fes__AdditionalOperatorsType::soap_del() deep deletes fes__AdditionalOperatorsType data members, use only after fes__AdditionalOperatorsType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int fes__AdditionalOperatorsType::soap_type() returns SOAP_TYPE_fes__AdditionalOperatorsType or derived type identifier
class fes__AdditionalOperatorsType : public xsd__anyType
{ public:
/// Vector of fes__ExtensionOperatorType* of length 0..unbounded.
    std::vector<fes__ExtensionOperatorType*> Operator                       0;	///< Multiple elements.
};

/// @brief "http://www.opengis.net/fes/2.0":ExtensionOperatorType is a complexType.
///
/// @note class fes__ExtensionOperatorType operations:
/// - fes__ExtensionOperatorType* soap_new_fes__ExtensionOperatorType(soap*) allocate and default initialize
/// - fes__ExtensionOperatorType* soap_new_fes__ExtensionOperatorType(soap*, int num) allocate and default initialize an array
/// - fes__ExtensionOperatorType* soap_new_req_fes__ExtensionOperatorType(soap*, ...) allocate, set required members
/// - fes__ExtensionOperatorType* soap_new_set_fes__ExtensionOperatorType(soap*, ...) allocate, set all public members
/// - fes__ExtensionOperatorType::soap_default(soap*) default initialize members
/// - int soap_read_fes__ExtensionOperatorType(soap*, fes__ExtensionOperatorType*) deserialize from a stream
/// - int soap_write_fes__ExtensionOperatorType(soap*, fes__ExtensionOperatorType*) serialize to a stream
/// - fes__ExtensionOperatorType* fes__ExtensionOperatorType::soap_dup(soap*) returns deep copy of fes__ExtensionOperatorType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - fes__ExtensionOperatorType::soap_del() deep deletes fes__ExtensionOperatorType data members, use only after fes__ExtensionOperatorType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int fes__ExtensionOperatorType::soap_type() returns SOAP_TYPE_fes__ExtensionOperatorType or derived type identifier
class fes__ExtensionOperatorType : public xsd__anyType
{ public:
/// Attribute "name" of type xs:QName.
  @ xsd__QName                           name                           1;	///< Required attribute.
};

/// @brief "http://www.opengis.net/fes/2.0":SortByType is a complexType.
///
/// @note class fes__SortByType operations:
/// - fes__SortByType* soap_new_fes__SortByType(soap*) allocate and default initialize
/// - fes__SortByType* soap_new_fes__SortByType(soap*, int num) allocate and default initialize an array
/// - fes__SortByType* soap_new_req_fes__SortByType(soap*, ...) allocate, set required members
/// - fes__SortByType* soap_new_set_fes__SortByType(soap*, ...) allocate, set all public members
/// - fes__SortByType::soap_default(soap*) default initialize members
/// - int soap_read_fes__SortByType(soap*, fes__SortByType*) deserialize from a stream
/// - int soap_write_fes__SortByType(soap*, fes__SortByType*) serialize to a stream
/// - fes__SortByType* fes__SortByType::soap_dup(soap*) returns deep copy of fes__SortByType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - fes__SortByType::soap_del() deep deletes fes__SortByType data members, use only after fes__SortByType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int fes__SortByType::soap_type() returns SOAP_TYPE_fes__SortByType or derived type identifier
class fes__SortByType : public xsd__anyType
{ public:
/// Vector of fes__SortPropertyType* of length 1..unbounded.
    std::vector<fes__SortPropertyType* > SortProperty                   1;	///< Multiple elements.
};

/// @brief "http://www.opengis.net/fes/2.0":SortPropertyType is a complexType.
///
/// @note class fes__SortPropertyType operations:
/// - fes__SortPropertyType* soap_new_fes__SortPropertyType(soap*) allocate and default initialize
/// - fes__SortPropertyType* soap_new_fes__SortPropertyType(soap*, int num) allocate and default initialize an array
/// - fes__SortPropertyType* soap_new_req_fes__SortPropertyType(soap*, ...) allocate, set required members
/// - fes__SortPropertyType* soap_new_set_fes__SortPropertyType(soap*, ...) allocate, set all public members
/// - fes__SortPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_fes__SortPropertyType(soap*, fes__SortPropertyType*) deserialize from a stream
/// - int soap_write_fes__SortPropertyType(soap*, fes__SortPropertyType*) serialize to a stream
/// - fes__SortPropertyType* fes__SortPropertyType::soap_dup(soap*) returns deep copy of fes__SortPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - fes__SortPropertyType::soap_del() deep deletes fes__SortPropertyType data members, use only after fes__SortPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int fes__SortPropertyType::soap_type() returns SOAP_TYPE_fes__SortPropertyType or derived type identifier
class fes__SortPropertyType : public xsd__anyType
{ public:
/// Element reference "http://www.opengis.net/fes/2.0:""http://www.opengis.net/fes/2.0":ValueReference.
    std::string                          ValueReference                 1;	///< Required element.
/// Element "SortOrder" of type "http://www.opengis.net/fes/2.0":SortOrderType.
    enum fes__SortOrderType*             SortOrder                      0;	///< Optional element.
};

/// @brief Top-level root element "http://www.opengis.net/fes/2.0":Filter_Capabilities
/// @brief "http://www.opengis.net/fes/2.0":Filter_Capabilities is a complexType.
///
/// @note class _fes__Filter_x005fCapabilities operations:
/// - _fes__Filter_x005fCapabilities* soap_new__fes__Filter_x005fCapabilities(soap*) allocate and default initialize
/// - _fes__Filter_x005fCapabilities* soap_new__fes__Filter_x005fCapabilities(soap*, int num) allocate and default initialize an array
/// - _fes__Filter_x005fCapabilities* soap_new_req__fes__Filter_x005fCapabilities(soap*, ...) allocate, set required members
/// - _fes__Filter_x005fCapabilities* soap_new_set__fes__Filter_x005fCapabilities(soap*, ...) allocate, set all public members
/// - _fes__Filter_x005fCapabilities::soap_default(soap*) default initialize members
/// - int soap_read__fes__Filter_x005fCapabilities(soap*, _fes__Filter_x005fCapabilities*) deserialize from a stream
/// - int soap_write__fes__Filter_x005fCapabilities(soap*, _fes__Filter_x005fCapabilities*) serialize to a stream
/// - _fes__Filter_x005fCapabilities* _fes__Filter_x005fCapabilities::soap_dup(soap*) returns deep copy of _fes__Filter_x005fCapabilities, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _fes__Filter_x005fCapabilities::soap_del() deep deletes _fes__Filter_x005fCapabilities data members, use only after _fes__Filter_x005fCapabilities::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _fes__Filter_x005fCapabilities::soap_type() returns SOAP_TYPE__fes__Filter_x005fCapabilities or derived type identifier
class _fes__Filter_x005fCapabilities
{ public:
/// Element "Conformance" of type "http://www.opengis.net/fes/2.0":ConformanceType.
    fes__ConformanceType*                Conformance                    1;	///< Required element.
/// Element "Id_Capabilities" of type "http://www.opengis.net/fes/2.0":Id_CapabilitiesType.
    fes__Id_x005fCapabilitiesType*       Id_x005fCapabilities           0;	///< Optional element.
/// Element "Scalar_Capabilities" of type "http://www.opengis.net/fes/2.0":Scalar_CapabilitiesType.
    fes__Scalar_x005fCapabilitiesType*   Scalar_x005fCapabilities       0;	///< Optional element.
/// Element "Spatial_Capabilities" of type "http://www.opengis.net/fes/2.0":Spatial_CapabilitiesType.
    fes__Spatial_x005fCapabilitiesType*  Spatial_x005fCapabilities      0;	///< Optional element.
/// Element "Temporal_Capabilities" of type "http://www.opengis.net/fes/2.0":Temporal_CapabilitiesType.
    fes__Temporal_x005fCapabilitiesType*  Temporal_x005fCapabilities     0;	///< Optional element.
/// Element "Functions" of type "http://www.opengis.net/fes/2.0":AvailableFunctionsType.
    fes__AvailableFunctionsType*         Functions                      0;	///< Optional element.
/// Element "Extended_Capabilities" of type "http://www.opengis.net/fes/2.0":Extended_CapabilitiesType.
    fes__Extended_x005fCapabilitiesType*  Extended_x005fCapabilities     0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.opengis.net/fes/2.0":LogicalOperators
/// @brief "http://www.opengis.net/fes/2.0":LogicalOperators is a complexType.
///
/// @note class _fes__LogicalOperators operations:
/// - _fes__LogicalOperators* soap_new__fes__LogicalOperators(soap*) allocate and default initialize
/// - _fes__LogicalOperators* soap_new__fes__LogicalOperators(soap*, int num) allocate and default initialize an array
/// - _fes__LogicalOperators* soap_new_req__fes__LogicalOperators(soap*, ...) allocate, set required members
/// - _fes__LogicalOperators* soap_new_set__fes__LogicalOperators(soap*, ...) allocate, set all public members
/// - _fes__LogicalOperators::soap_default(soap*) default initialize members
/// - int soap_read__fes__LogicalOperators(soap*, _fes__LogicalOperators*) deserialize from a stream
/// - int soap_write__fes__LogicalOperators(soap*, _fes__LogicalOperators*) serialize to a stream
/// - _fes__LogicalOperators* _fes__LogicalOperators::soap_dup(soap*) returns deep copy of _fes__LogicalOperators, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _fes__LogicalOperators::soap_del() deep deletes _fes__LogicalOperators data members, use only after _fes__LogicalOperators::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _fes__LogicalOperators::soap_type() returns SOAP_TYPE__fes__LogicalOperators or derived type identifier
class _fes__LogicalOperators
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://inspire.ec.europa.eu/schemas/common/1.0                           *
 *                                                                            *
\******************************************************************************/

/// @brief "http://inspire.ec.europa.eu/schemas/common/1.0":resource is an abstract complexType.
///
/// This type is extended by:
/// - "http://inspire.ec.europa.eu/schemas/common/1.0":data as icommon__data
/// - "http://inspire.ec.europa.eu/schemas/common/1.0":service_ext as icommon__service_x005fext
///
/// @note class icommon__resource operations:
/// - icommon__resource* soap_new_icommon__resource(soap*) allocate and default initialize
/// - icommon__resource* soap_new_icommon__resource(soap*, int num) allocate and default initialize an array
/// - icommon__resource* soap_new_req_icommon__resource(soap*, ...) allocate, set required members
/// - icommon__resource* soap_new_set_icommon__resource(soap*, ...) allocate, set all public members
/// - icommon__resource::soap_default(soap*) default initialize members
/// - int soap_read_icommon__resource(soap*, icommon__resource*) deserialize from a stream
/// - int soap_write_icommon__resource(soap*, icommon__resource*) serialize to a stream
/// - icommon__resource* icommon__resource::soap_dup(soap*) returns deep copy of icommon__resource, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - icommon__resource::soap_del() deep deletes icommon__resource data members, use only after icommon__resource::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int icommon__resource::soap_type() returns SOAP_TYPE_icommon__resource or derived type identifier
class icommon__resource : public xsd__anyType
{ public:
/// Element "ResourceTitle" of type "http://inspire.ec.europa.eu/schemas/common/1.0":notEmptyString.
    icommon__notEmptyString              ResourceTitle                  1;	///< Required element.
/// Element "ResourceAbstract" of type "http://inspire.ec.europa.eu/schemas/common/1.0":notEmptyString.
    icommon__notEmptyString              ResourceAbstract               1;	///< Required element.
/// Element "ResourceType" of type "http://inspire.ec.europa.eu/schemas/common/1.0":resourceType.
    enum icommon__resourceType           ResourceType                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Mandatory if a URL is available to obtain more information on
///   the resource, and/or access related services.
/// </BLOCKQUOTE></PRE>
///
/// Vector of icommon__resourceLocatorType* of length 0..unbounded.
    std::vector<icommon__resourceLocatorType*> ResourceLocator                0;	///< Multiple elements.
/// Vector of icommon__keyword* of length 1..unbounded.
    std::vector<icommon__keyword*      > MandatoryKeyword               1;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   If a resource is a spatial data set or spatial data set series, at least one keyword shall be provided from the general environmental multilingual thesaurus (GEMET) describing the relevant spatial data theme as defined in Annex I, II or III to Directive 2007/2/EC.
/// </BLOCKQUOTE></PRE>
///
/// Vector of icommon__keyword* of length 0..unbounded.
    std::vector<icommon__keyword*      > Keyword                        0;	///< Multiple elements.
/// Vector of icommon__geographicBoundingBox* of length 0..unbounded.
    std::vector<icommon__geographicBoundingBox*> GeographicBoundingBox          0;	///< Multiple elements.
/// Vector of icommon__temporalReference* of length 1..unbounded.
    std::vector<icommon__temporalReference*> TemporalReference              1;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   Mandatory when there is a restriction on the spatial resolution for this service.
/// </BLOCKQUOTE></PRE>
///
/// Vector of icommon__spatialResolution* of length 0..unbounded.
    std::vector<icommon__spatialResolution*> SpatialResolution              0;	///< Multiple elements.
/// Vector of icommon__conformity* of length 1..unbounded.
    std::vector<icommon__conformity*   > Conformity                     1;	///< Multiple elements.
/// Vector of icommon__notEmptyString of length 1..unbounded.
    std::vector<icommon__notEmptyString> ConditionsForAccessAndUse      1;	///< Multiple elements.
/// Vector of icommon__notEmptyString of length 1..unbounded.
    std::vector<icommon__notEmptyString> LimitationsOnPublicAccess      1;	///< Multiple elements.
/// Vector of icommon__responsibleOrganisation* of length 1..unbounded.
    std::vector<icommon__responsibleOrganisation*> ResponsibleOrganisation        1;	///< Multiple elements.
/// Vector of icommon__metadataPointOfContact* of length 1..unbounded.
    std::vector<icommon__metadataPointOfContact*> MetadataPointOfContact         1;	///< Multiple elements.
/// Element "MetadataDate" of type "http://inspire.ec.europa.eu/schemas/common/1.0":iso8601Date.
    icommon__iso8601Date                 MetadataDate                   1;	///< Required element.
/// Element "MetadataLanguage" of type "http://inspire.ec.europa.eu/schemas/common/1.0":euLanguageISO6392B.
    enum icommon__euLanguageISO6392B     MetadataLanguage               1;	///< Required element.
/// Imported attribute reference xml:lang.
  @ _xml__lang*                          xml__lang                      0;	///< Optional attribute.
};

/// @brief "http://inspire.ec.europa.eu/schemas/common/1.0":metadataPointOfContact is a complexType.
///
/// @note class icommon__metadataPointOfContact operations:
/// - icommon__metadataPointOfContact* soap_new_icommon__metadataPointOfContact(soap*) allocate and default initialize
/// - icommon__metadataPointOfContact* soap_new_icommon__metadataPointOfContact(soap*, int num) allocate and default initialize an array
/// - icommon__metadataPointOfContact* soap_new_req_icommon__metadataPointOfContact(soap*, ...) allocate, set required members
/// - icommon__metadataPointOfContact* soap_new_set_icommon__metadataPointOfContact(soap*, ...) allocate, set all public members
/// - icommon__metadataPointOfContact::soap_default(soap*) default initialize members
/// - int soap_read_icommon__metadataPointOfContact(soap*, icommon__metadataPointOfContact*) deserialize from a stream
/// - int soap_write_icommon__metadataPointOfContact(soap*, icommon__metadataPointOfContact*) serialize to a stream
/// - icommon__metadataPointOfContact* icommon__metadataPointOfContact::soap_dup(soap*) returns deep copy of icommon__metadataPointOfContact, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - icommon__metadataPointOfContact::soap_del() deep deletes icommon__metadataPointOfContact data members, use only after icommon__metadataPointOfContact::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int icommon__metadataPointOfContact::soap_type() returns SOAP_TYPE_icommon__metadataPointOfContact or derived type identifier
class icommon__metadataPointOfContact : public xsd__anyType
{ public:
/// Element "OrganisationName" of type xs:string.
    std::string                          OrganisationName               1;	///< Required element.
/// Element "EmailAddress" of type "http://inspire.ec.europa.eu/schemas/common/1.0":emailType.
    icommon__emailType                   EmailAddress                   1;	///< Required element.
};

/// @brief "http://inspire.ec.europa.eu/schemas/common/1.0":responsibleOrganisation is a complexType.
///
/// @note class icommon__responsibleOrganisation operations:
/// - icommon__responsibleOrganisation* soap_new_icommon__responsibleOrganisation(soap*) allocate and default initialize
/// - icommon__responsibleOrganisation* soap_new_icommon__responsibleOrganisation(soap*, int num) allocate and default initialize an array
/// - icommon__responsibleOrganisation* soap_new_req_icommon__responsibleOrganisation(soap*, ...) allocate, set required members
/// - icommon__responsibleOrganisation* soap_new_set_icommon__responsibleOrganisation(soap*, ...) allocate, set all public members
/// - icommon__responsibleOrganisation::soap_default(soap*) default initialize members
/// - int soap_read_icommon__responsibleOrganisation(soap*, icommon__responsibleOrganisation*) deserialize from a stream
/// - int soap_write_icommon__responsibleOrganisation(soap*, icommon__responsibleOrganisation*) serialize to a stream
/// - icommon__responsibleOrganisation* icommon__responsibleOrganisation::soap_dup(soap*) returns deep copy of icommon__responsibleOrganisation, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - icommon__responsibleOrganisation::soap_del() deep deletes icommon__responsibleOrganisation data members, use only after icommon__responsibleOrganisation::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int icommon__responsibleOrganisation::soap_type() returns SOAP_TYPE_icommon__responsibleOrganisation or derived type identifier
class icommon__responsibleOrganisation : public xsd__anyType
{ public:
/// @note class _icommon__responsibleOrganisation_ResponsibleParty operations:
/// - _icommon__responsibleOrganisation_ResponsibleParty* soap_new__icommon__responsibleOrganisation_ResponsibleParty(soap*) allocate and default initialize
/// - _icommon__responsibleOrganisation_ResponsibleParty* soap_new__icommon__responsibleOrganisation_ResponsibleParty(soap*, int num) allocate and default initialize an array
/// - _icommon__responsibleOrganisation_ResponsibleParty* soap_new_req__icommon__responsibleOrganisation_ResponsibleParty(soap*, ...) allocate, set required members
/// - _icommon__responsibleOrganisation_ResponsibleParty* soap_new_set__icommon__responsibleOrganisation_ResponsibleParty(soap*, ...) allocate, set all public members
/// - _icommon__responsibleOrganisation_ResponsibleParty::soap_default(soap*) default initialize members
/// - int soap_read__icommon__responsibleOrganisation_ResponsibleParty(soap*, _icommon__responsibleOrganisation_ResponsibleParty*) deserialize from a stream
/// - int soap_write__icommon__responsibleOrganisation_ResponsibleParty(soap*, _icommon__responsibleOrganisation_ResponsibleParty*) serialize to a stream
/// - _icommon__responsibleOrganisation_ResponsibleParty* _icommon__responsibleOrganisation_ResponsibleParty::soap_dup(soap*) returns deep copy of _icommon__responsibleOrganisation_ResponsibleParty, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _icommon__responsibleOrganisation_ResponsibleParty::soap_del() deep deletes _icommon__responsibleOrganisation_ResponsibleParty data members, use only after _icommon__responsibleOrganisation_ResponsibleParty::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _icommon__responsibleOrganisation_ResponsibleParty::soap_type() returns SOAP_TYPE__icommon__responsibleOrganisation_ResponsibleParty or derived type identifier
    class _icommon__responsibleOrganisation_ResponsibleParty
    { public:
/// Element "OrganisationName" of type "http://inspire.ec.europa.eu/schemas/common/1.0":notEmptyString.
    icommon__notEmptyString              OrganisationName               1;	///< Required element.
/// Element "EmailAddress" of type "http://inspire.ec.europa.eu/schemas/common/1.0":emailType.
    icommon__emailType                   EmailAddress                   1;	///< Required element.
    }                                    ResponsibleParty               1;	///< Required element.
/// Element "ResponsiblePartyRole" of type "http://inspire.ec.europa.eu/schemas/common/1.0":responsiblePartyRole.
    enum icommon__responsiblePartyRole   ResponsiblePartyRole           1;	///< Required element.
};

/// @brief "http://inspire.ec.europa.eu/schemas/common/1.0":citation is a complexType.
///
/// This type is restricted by:
/// - "http://inspire.ec.europa.eu/schemas/common/1.0":citationConformity as icommon__citationConformity
/// - "http://inspire.ec.europa.eu/schemas/common/1.0":originatingControlledVocabulary as icommon__originatingControlledVocabulary
/// - "http://inspire.ec.europa.eu/schemas/common/1.0":citationGEMETInspireThemes_eng as icommon__citationGEMETInspireThemes_x005feng
///
/// @note class icommon__citation operations:
/// - icommon__citation* soap_new_icommon__citation(soap*) allocate and default initialize
/// - icommon__citation* soap_new_icommon__citation(soap*, int num) allocate and default initialize an array
/// - icommon__citation* soap_new_req_icommon__citation(soap*, ...) allocate, set required members
/// - icommon__citation* soap_new_set_icommon__citation(soap*, ...) allocate, set all public members
/// - icommon__citation::soap_default(soap*) default initialize members
/// - int soap_read_icommon__citation(soap*, icommon__citation*) deserialize from a stream
/// - int soap_write_icommon__citation(soap*, icommon__citation*) serialize to a stream
/// - icommon__citation* icommon__citation::soap_dup(soap*) returns deep copy of icommon__citation, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - icommon__citation::soap_del() deep deletes icommon__citation data members, use only after icommon__citation::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int icommon__citation::soap_type() returns SOAP_TYPE_icommon__citation or derived type identifier
class icommon__citation : public xsd__anyType
{ public:
/// Element "Title" of type "http://inspire.ec.europa.eu/schemas/common/1.0":notEmptyString.
    icommon__notEmptyString              Title                          1;	///< Required element.
//  BEGIN CHOICE <xs:choice>
  $ int                                  __union_citation              ;	///< Union _icommon__union_citation selector: set to SOAP_UNION__icommon__union_citation_<fieldname>
    union _icommon__union_citation
    {
/// Element "DateOfPublication" of type "http://inspire.ec.europa.eu/schemas/common/1.0":iso8601Date.
    icommon__iso8601Date*                DateOfPublication             ;	///< Choice of element (one of multiple choices).
/// Element "DateOfCreation" of type "http://inspire.ec.europa.eu/schemas/common/1.0":iso8601Date.
    icommon__iso8601Date*                DateOfCreation                ;	///< Choice of element (one of multiple choices).
/// Element "DateOfLastRevision" of type "http://inspire.ec.europa.eu/schemas/common/1.0":iso8601Date.
    icommon__iso8601Date*                DateOfLastRevision            ;	///< Choice of element (one of multiple choices).
    }                                    union_citation                ;
//  END OF CHOICE
/// <PRE><BLOCKQUOTE>
///   One or more Documentation URIs if available
/// </BLOCKQUOTE></PRE>
///
/// Vector of xsd__anyURI of length 0..unbounded.
    std::vector<xsd__anyURI            > URI                            0;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   One or more URLs if available
/// </BLOCKQUOTE></PRE>
///
/// Vector of icommon__resourceLocatorType* of length 0..unbounded.
    std::vector<icommon__resourceLocatorType*> ResourceLocator                0;	///< Multiple elements.
};

/// @brief "http://inspire.ec.europa.eu/schemas/common/1.0":conformity is a complexType.
///
/// @note class icommon__conformity operations:
/// - icommon__conformity* soap_new_icommon__conformity(soap*) allocate and default initialize
/// - icommon__conformity* soap_new_icommon__conformity(soap*, int num) allocate and default initialize an array
/// - icommon__conformity* soap_new_req_icommon__conformity(soap*, ...) allocate, set required members
/// - icommon__conformity* soap_new_set_icommon__conformity(soap*, ...) allocate, set all public members
/// - icommon__conformity::soap_default(soap*) default initialize members
/// - int soap_read_icommon__conformity(soap*, icommon__conformity*) deserialize from a stream
/// - int soap_write_icommon__conformity(soap*, icommon__conformity*) serialize to a stream
/// - icommon__conformity* icommon__conformity::soap_dup(soap*) returns deep copy of icommon__conformity, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - icommon__conformity::soap_del() deep deletes icommon__conformity data members, use only after icommon__conformity::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int icommon__conformity::soap_type() returns SOAP_TYPE_icommon__conformity or derived type identifier
class icommon__conformity : public xsd__anyType
{ public:
/// Element "Specification" of type "http://inspire.ec.europa.eu/schemas/common/1.0":citationConformity.
    icommon__citationConformity*         Specification                  1;	///< Required element.
/// Element "Degree" of type "http://inspire.ec.europa.eu/schemas/common/1.0":degreeOfConformity.
    enum icommon__degreeOfConformity     Degree                         1;	///< Required element.
};

/// @brief "http://inspire.ec.europa.eu/schemas/common/1.0":temporalReference is a complexType.
///
/// @note class icommon__temporalReference operations:
/// - icommon__temporalReference* soap_new_icommon__temporalReference(soap*) allocate and default initialize
/// - icommon__temporalReference* soap_new_icommon__temporalReference(soap*, int num) allocate and default initialize an array
/// - icommon__temporalReference* soap_new_req_icommon__temporalReference(soap*, ...) allocate, set required members
/// - icommon__temporalReference* soap_new_set_icommon__temporalReference(soap*, ...) allocate, set all public members
/// - icommon__temporalReference::soap_default(soap*) default initialize members
/// - int soap_read_icommon__temporalReference(soap*, icommon__temporalReference*) deserialize from a stream
/// - int soap_write_icommon__temporalReference(soap*, icommon__temporalReference*) serialize to a stream
/// - icommon__temporalReference* icommon__temporalReference::soap_dup(soap*) returns deep copy of icommon__temporalReference, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - icommon__temporalReference::soap_del() deep deletes icommon__temporalReference data members, use only after icommon__temporalReference::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int icommon__temporalReference::soap_type() returns SOAP_TYPE_icommon__temporalReference or derived type identifier
class icommon__temporalReference : public xsd__anyType
{ public:
/// Element "DateOfCreation" of type "http://inspire.ec.europa.eu/schemas/common/1.0":iso8601Date.
    icommon__iso8601Date*                DateOfCreation                 0;	///< Optional element.
/// Element "DateOfLastRevision" of type "http://inspire.ec.europa.eu/schemas/common/1.0":iso8601Date.
    icommon__iso8601Date*                DateOfLastRevision             0;	///< Optional element.
/// Vector of icommon__iso8601Date of length 0..unbounded.
    std::vector<icommon__iso8601Date   > DateOfPublication              0;	///< Multiple elements.
/// Vector of icommon__temporalExtent* of length 0..unbounded.
    std::vector<icommon__temporalExtent*> TemporalExtent                 0;	///< Multiple elements.
};

/// @brief "http://inspire.ec.europa.eu/schemas/common/1.0":temporalExtent is a complexType.
///
/// @note class icommon__temporalExtent operations:
/// - icommon__temporalExtent* soap_new_icommon__temporalExtent(soap*) allocate and default initialize
/// - icommon__temporalExtent* soap_new_icommon__temporalExtent(soap*, int num) allocate and default initialize an array
/// - icommon__temporalExtent* soap_new_req_icommon__temporalExtent(soap*, ...) allocate, set required members
/// - icommon__temporalExtent* soap_new_set_icommon__temporalExtent(soap*, ...) allocate, set all public members
/// - icommon__temporalExtent::soap_default(soap*) default initialize members
/// - int soap_read_icommon__temporalExtent(soap*, icommon__temporalExtent*) deserialize from a stream
/// - int soap_write_icommon__temporalExtent(soap*, icommon__temporalExtent*) serialize to a stream
/// - icommon__temporalExtent* icommon__temporalExtent::soap_dup(soap*) returns deep copy of icommon__temporalExtent, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - icommon__temporalExtent::soap_del() deep deletes icommon__temporalExtent data members, use only after icommon__temporalExtent::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int icommon__temporalExtent::soap_type() returns SOAP_TYPE_icommon__temporalExtent or derived type identifier
class icommon__temporalExtent : public xsd__anyType
{ public:
/// Reference "http://inspire.ec.europa.eu/schemas/common/1.0":TemporalExtentElement to abstract element.
//  BEGIN SUBSTITUTIONS <xs:element substitutionGroup="TemporalExtentElement" maxOccurs="unbounded"> with choice of elements to substitute:
//    <IndividualDate> <IntervalOfDates>
  $ int                                  __sizeTemporalExtentElement    0;
    class __icommon__union_temporalExtent
    {
  $ int                                  __unionTemporalExtentElement  ;	///< Union _icommon__union_temporalExtent selector: set to SOAP_UNION__icommon__union_temporalExtent_<fieldname>
/// Union for substitutionGroup icommon__TemporalExtentElement.
    union _icommon__union_temporalExtent
    {
/// Element "http://inspire.ec.europa.eu/schemas/common/1.0":IndividualDate.
    icommon__iso8601Date*                IndividualDate                ;	///< Choice of element (one of multiple choices).
/// Element "http://inspire.ec.europa.eu/schemas/common/1.0":IntervalOfDates.
    _icommon__IntervalOfDates*           IntervalOfDates               ;	///< Choice of element (one of multiple choices).
    }                                    union_temporalExtent          ;
    }                                   *__union_temporalExtent        ;
//  END OF SUBSTITUTIONS
};

/// @brief "http://inspire.ec.europa.eu/schemas/common/1.0":keyword is a complexType.
///
/// This type is restricted by:
/// - "http://inspire.ec.europa.eu/schemas/common/1.0":classificationOfSpatialDataService as icommon__classificationOfSpatialDataService
/// - "http://inspire.ec.europa.eu/schemas/common/1.0":inspireTheme as icommon__inspireTheme
///
/// @note class icommon__keyword operations:
/// - icommon__keyword* soap_new_icommon__keyword(soap*) allocate and default initialize
/// - icommon__keyword* soap_new_icommon__keyword(soap*, int num) allocate and default initialize an array
/// - icommon__keyword* soap_new_req_icommon__keyword(soap*, ...) allocate, set required members
/// - icommon__keyword* soap_new_set_icommon__keyword(soap*, ...) allocate, set all public members
/// - icommon__keyword::soap_default(soap*) default initialize members
/// - int soap_read_icommon__keyword(soap*, icommon__keyword*) deserialize from a stream
/// - int soap_write_icommon__keyword(soap*, icommon__keyword*) serialize to a stream
/// - icommon__keyword* icommon__keyword::soap_dup(soap*) returns deep copy of icommon__keyword, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - icommon__keyword::soap_del() deep deletes icommon__keyword data members, use only after icommon__keyword::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int icommon__keyword::soap_type() returns SOAP_TYPE_icommon__keyword or derived type identifier
class icommon__keyword : public xsd__anyType
{ public:
/// Element "OriginatingControlledVocabulary" of type "http://inspire.ec.europa.eu/schemas/common/1.0":originatingControlledVocabulary.
    icommon__originatingControlledVocabulary*  OriginatingControlledVocabulary 0;	///< Optional element.
/// Element "KeywordValue" of type xs:string.
    std::string                          KeywordValue                   1;	///< Required element.
};

/// @brief "http://inspire.ec.europa.eu/schemas/common/1.0":resourceLocatorType is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Mandatory if a URL is available to obtain more information on
///   the resource, and/or access related services.
/// </BLOCKQUOTE></PRE>
///
/// This type is restricted by:
/// - "http://inspire.ec.europa.eu/schemas/common/1.0":resLocInspireInteroperabilityRegulation_bul as icommon__resLocInspireInteroperabilityRegulation_x005fbul
/// - "http://inspire.ec.europa.eu/schemas/common/1.0":resLocInspireInteroperabilityRegulation_cze as icommon__resLocInspireInteroperabilityRegulation_x005fcze
/// - "http://inspire.ec.europa.eu/schemas/common/1.0":resLocInspireInteroperabilityRegulation_dan as icommon__resLocInspireInteroperabilityRegulation_x005fdan
/// - "http://inspire.ec.europa.eu/schemas/common/1.0":resLocInspireInteroperabilityRegulation_dut as icommon__resLocInspireInteroperabilityRegulation_x005fdut
/// - "http://inspire.ec.europa.eu/schemas/common/1.0":resLocGEMETInspireThemes_eng as icommon__resLocGEMETInspireThemes_x005feng
/// - "http://inspire.ec.europa.eu/schemas/common/1.0":resLocInspireInteroperabilityRegulation_eng as icommon__resLocInspireInteroperabilityRegulation_x005feng
/// - "http://inspire.ec.europa.eu/schemas/common/1.0":resLocInspireInteroperabilityRegulation_est as icommon__resLocInspireInteroperabilityRegulation_x005fest
/// - "http://inspire.ec.europa.eu/schemas/common/1.0":resLocInspireInteroperabilityRegulation_fin as icommon__resLocInspireInteroperabilityRegulation_x005ffin
/// - "http://inspire.ec.europa.eu/schemas/common/1.0":resLocInspireInteroperabilityRegulation_fre as icommon__resLocInspireInteroperabilityRegulation_x005ffre
/// - "http://inspire.ec.europa.eu/schemas/common/1.0":resLocInspireInteroperabilityRegulation_ger as icommon__resLocInspireInteroperabilityRegulation_x005fger
/// - "http://inspire.ec.europa.eu/schemas/common/1.0":resLocInspireInteroperabilityRegulation_gle as icommon__resLocInspireInteroperabilityRegulation_x005fgle
/// - "http://inspire.ec.europa.eu/schemas/common/1.0":resLocInspireInteroperabilityRegulation_gre as icommon__resLocInspireInteroperabilityRegulation_x005fgre
/// - "http://inspire.ec.europa.eu/schemas/common/1.0":resLocInspireInteroperabilityRegulation_hun as icommon__resLocInspireInteroperabilityRegulation_x005fhun
/// - "http://inspire.ec.europa.eu/schemas/common/1.0":resLocInspireInteroperabilityRegulation_ita as icommon__resLocInspireInteroperabilityRegulation_x005fita
/// - "http://inspire.ec.europa.eu/schemas/common/1.0":resLocInspireInteroperabilityRegulation_lav as icommon__resLocInspireInteroperabilityRegulation_x005flav
/// - "http://inspire.ec.europa.eu/schemas/common/1.0":resLocInspireInteroperabilityRegulation_lit as icommon__resLocInspireInteroperabilityRegulation_x005flit
/// - "http://inspire.ec.europa.eu/schemas/common/1.0":resLocInspireInteroperabilityRegulation_mlt as icommon__resLocInspireInteroperabilityRegulation_x005fmlt
/// - "http://inspire.ec.europa.eu/schemas/common/1.0":resLocInspireInteroperabilityRegulation_pol as icommon__resLocInspireInteroperabilityRegulation_x005fpol
/// - "http://inspire.ec.europa.eu/schemas/common/1.0":resLocInspireInteroperabilityRegulation_por as icommon__resLocInspireInteroperabilityRegulation_x005fpor
/// - "http://inspire.ec.europa.eu/schemas/common/1.0":resLocInspireInteroperabilityRegulation_rum as icommon__resLocInspireInteroperabilityRegulation_x005frum
/// - "http://inspire.ec.europa.eu/schemas/common/1.0":resLocInspireInteroperabilityRegulation_slo as icommon__resLocInspireInteroperabilityRegulation_x005fslo
/// - "http://inspire.ec.europa.eu/schemas/common/1.0":resLocInspireInteroperabilityRegulation_slv as icommon__resLocInspireInteroperabilityRegulation_x005fslv
/// - "http://inspire.ec.europa.eu/schemas/common/1.0":resLocInspireInteroperabilityRegulation_spa as icommon__resLocInspireInteroperabilityRegulation_x005fspa
/// - "http://inspire.ec.europa.eu/schemas/common/1.0":resLocInspireInteroperabilityRegulation_swe as icommon__resLocInspireInteroperabilityRegulation_x005fswe
///
/// @note class icommon__resourceLocatorType operations:
/// - icommon__resourceLocatorType* soap_new_icommon__resourceLocatorType(soap*) allocate and default initialize
/// - icommon__resourceLocatorType* soap_new_icommon__resourceLocatorType(soap*, int num) allocate and default initialize an array
/// - icommon__resourceLocatorType* soap_new_req_icommon__resourceLocatorType(soap*, ...) allocate, set required members
/// - icommon__resourceLocatorType* soap_new_set_icommon__resourceLocatorType(soap*, ...) allocate, set all public members
/// - icommon__resourceLocatorType::soap_default(soap*) default initialize members
/// - int soap_read_icommon__resourceLocatorType(soap*, icommon__resourceLocatorType*) deserialize from a stream
/// - int soap_write_icommon__resourceLocatorType(soap*, icommon__resourceLocatorType*) serialize to a stream
/// - icommon__resourceLocatorType* icommon__resourceLocatorType::soap_dup(soap*) returns deep copy of icommon__resourceLocatorType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - icommon__resourceLocatorType::soap_del() deep deletes icommon__resourceLocatorType data members, use only after icommon__resourceLocatorType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int icommon__resourceLocatorType::soap_type() returns SOAP_TYPE_icommon__resourceLocatorType or derived type identifier
class icommon__resourceLocatorType : public xsd__anyType
{ public:
/// Element "URL" of type xs:anyURI.
    xsd__anyURI                          URL                            1;	///< Required element.
/// Vector of enum icommon__mediaType of length 0..unbounded.
    std::vector<enum icommon__mediaType> MediaType                      0;	///< Multiple elements.
};

/// @brief "http://inspire.ec.europa.eu/schemas/common/1.0":languageElement is an abstract complexType.
///
/// This type is restricted by:
/// - "http://inspire.ec.europa.eu/schemas/common/1.0":languageElementISO6392B as icommon__languageElementISO6392B
/// - "http://inspire.ec.europa.eu/schemas/common/1.0":languageElementIETF as icommon__languageElementIETF
///
/// @note class icommon__languageElement operations:
/// - icommon__languageElement* soap_new_icommon__languageElement(soap*) allocate and default initialize
/// - icommon__languageElement* soap_new_icommon__languageElement(soap*, int num) allocate and default initialize an array
/// - icommon__languageElement* soap_new_req_icommon__languageElement(soap*, ...) allocate, set required members
/// - icommon__languageElement* soap_new_set_icommon__languageElement(soap*, ...) allocate, set all public members
/// - icommon__languageElement::soap_default(soap*) default initialize members
/// - int soap_read_icommon__languageElement(soap*, icommon__languageElement*) deserialize from a stream
/// - int soap_write_icommon__languageElement(soap*, icommon__languageElement*) serialize to a stream
/// - icommon__languageElement* icommon__languageElement::soap_dup(soap*) returns deep copy of icommon__languageElement, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - icommon__languageElement::soap_del() deep deletes icommon__languageElement data members, use only after icommon__languageElement::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int icommon__languageElement::soap_type() returns SOAP_TYPE_icommon__languageElement or derived type identifier
class icommon__languageElement : public xsd__anyType
{ public:
/// Element "Language" of type xs:string.
    std::string                          Language                       1;	///< Required element.
};

/// @brief "http://inspire.ec.europa.eu/schemas/common/1.0":geographicBoundingBox is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Mandatory for services with an explicit geographic extent.
/// </BLOCKQUOTE></PRE>
///
/// @note class icommon__geographicBoundingBox operations:
/// - icommon__geographicBoundingBox* soap_new_icommon__geographicBoundingBox(soap*) allocate and default initialize
/// - icommon__geographicBoundingBox* soap_new_icommon__geographicBoundingBox(soap*, int num) allocate and default initialize an array
/// - icommon__geographicBoundingBox* soap_new_req_icommon__geographicBoundingBox(soap*, ...) allocate, set required members
/// - icommon__geographicBoundingBox* soap_new_set_icommon__geographicBoundingBox(soap*, ...) allocate, set all public members
/// - icommon__geographicBoundingBox::soap_default(soap*) default initialize members
/// - int soap_read_icommon__geographicBoundingBox(soap*, icommon__geographicBoundingBox*) deserialize from a stream
/// - int soap_write_icommon__geographicBoundingBox(soap*, icommon__geographicBoundingBox*) serialize to a stream
/// - icommon__geographicBoundingBox* icommon__geographicBoundingBox::soap_dup(soap*) returns deep copy of icommon__geographicBoundingBox, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - icommon__geographicBoundingBox::soap_del() deep deletes icommon__geographicBoundingBox data members, use only after icommon__geographicBoundingBox::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int icommon__geographicBoundingBox::soap_type() returns SOAP_TYPE_icommon__geographicBoundingBox or derived type identifier
class icommon__geographicBoundingBox : public xsd__anyType
{ public:
/// Element "East" of type "http://inspire.ec.europa.eu/schemas/common/1.0":geoBoxDigits.
    icommon__geoBoxDigits                East                           1;	///< Required element.
/// Element "West" of type "http://inspire.ec.europa.eu/schemas/common/1.0":geoBoxDigits.
    icommon__geoBoxDigits                West                           1;	///< Required element.
/// Element "North" of type "http://inspire.ec.europa.eu/schemas/common/1.0":geoBoxDigits.
    icommon__geoBoxDigits                North                          1;	///< Required element.
/// Element "South" of type "http://inspire.ec.europa.eu/schemas/common/1.0":geoBoxDigits.
    icommon__geoBoxDigits                South                          1;	///< Required element.
};

/// @brief "http://inspire.ec.europa.eu/schemas/common/1.0":spatialResolution is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Mandatory if an equivalent scale or a resolution distance is available
/// </BLOCKQUOTE></PRE>
///
/// <PRE><BLOCKQUOTE>
///   Mandatory for services when there is a restriction on the spatial resolution for service
/// </BLOCKQUOTE></PRE>
///
/// @note class icommon__spatialResolution operations:
/// - icommon__spatialResolution* soap_new_icommon__spatialResolution(soap*) allocate and default initialize
/// - icommon__spatialResolution* soap_new_icommon__spatialResolution(soap*, int num) allocate and default initialize an array
/// - icommon__spatialResolution* soap_new_req_icommon__spatialResolution(soap*, ...) allocate, set required members
/// - icommon__spatialResolution* soap_new_set_icommon__spatialResolution(soap*, ...) allocate, set all public members
/// - icommon__spatialResolution::soap_default(soap*) default initialize members
/// - int soap_read_icommon__spatialResolution(soap*, icommon__spatialResolution*) deserialize from a stream
/// - int soap_write_icommon__spatialResolution(soap*, icommon__spatialResolution*) serialize to a stream
/// - icommon__spatialResolution* icommon__spatialResolution::soap_dup(soap*) returns deep copy of icommon__spatialResolution, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - icommon__spatialResolution::soap_del() deep deletes icommon__spatialResolution data members, use only after icommon__spatialResolution::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int icommon__spatialResolution::soap_type() returns SOAP_TYPE_icommon__spatialResolution or derived type identifier
class icommon__spatialResolution : public xsd__anyType
{ public:
//  BEGIN CHOICE <xs:choice>
/// @note <xs:choice> with embedded <xs:sequence> or <xs:group> prevents the use of a union for <xs:choice>. Instead of being members of a union, the following members are declared optional. Only one sequence of members should be non-NULL by choice.
/// <PRE><BLOCKQUOTE>
///   An equivalent scale is generally expressed as an integer value expressing the scale denominator
/// </BLOCKQUOTE></PRE>
///
/// Element "EquivalentScale" of type xs:integer.
    long*                                EquivalentScale               ;	///< Choice of element (one of multiple choices).
//  BEGIN SEQUENCE <xs:sequence>
/// <PRE><BLOCKQUOTE>
///   A resolution distance shall be expressed as a numerical value associated with a unit of length
/// </BLOCKQUOTE></PRE>
///
/// Element "ResolutionDistance" of type xs:integer.
    long*                                ResolutionDistance            ;	///< Choice of element (one of multiple choices).
/// Element "UnitOfMeasure" of type xs:string.
    std::string*                         UnitOfMeasure                 ;	///< Choice of element (one of multiple choices).
//  END OF SEQUENCE
//  END OF CHOICE
/// <PRE><BLOCKQUOTE>
///   ISO 19139 does not offer encoding of spatial resolution for services and INSPIRE Guidelines recommend to put it inside the abstract element in unstructured format, making it virtually impossible to extract the spatial resolution from the rest of the abstract text. The original abstract text is copied for reference.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "abstract" of type xs:string.
  @ std::string*                         abstract                       0;	///< Optional attribute.
};

/// @brief "http://inspire.ec.europa.eu/schemas/common/1.0":uniqueResourceIdentifier is a complexType.
///
/// @note class icommon__uniqueResourceIdentifier operations:
/// - icommon__uniqueResourceIdentifier* soap_new_icommon__uniqueResourceIdentifier(soap*) allocate and default initialize
/// - icommon__uniqueResourceIdentifier* soap_new_icommon__uniqueResourceIdentifier(soap*, int num) allocate and default initialize an array
/// - icommon__uniqueResourceIdentifier* soap_new_req_icommon__uniqueResourceIdentifier(soap*, ...) allocate, set required members
/// - icommon__uniqueResourceIdentifier* soap_new_set_icommon__uniqueResourceIdentifier(soap*, ...) allocate, set all public members
/// - icommon__uniqueResourceIdentifier::soap_default(soap*) default initialize members
/// - int soap_read_icommon__uniqueResourceIdentifier(soap*, icommon__uniqueResourceIdentifier*) deserialize from a stream
/// - int soap_write_icommon__uniqueResourceIdentifier(soap*, icommon__uniqueResourceIdentifier*) serialize to a stream
/// - icommon__uniqueResourceIdentifier* icommon__uniqueResourceIdentifier::soap_dup(soap*) returns deep copy of icommon__uniqueResourceIdentifier, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - icommon__uniqueResourceIdentifier::soap_del() deep deletes icommon__uniqueResourceIdentifier data members, use only after icommon__uniqueResourceIdentifier::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int icommon__uniqueResourceIdentifier::soap_type() returns SOAP_TYPE_icommon__uniqueResourceIdentifier or derived type identifier
class icommon__uniqueResourceIdentifier : public xsd__anyType
{ public:
/// Element "Code" of type "http://inspire.ec.europa.eu/schemas/common/1.0":notEmptyString.
    icommon__notEmptyString              Code                           1;	///< Required element.
/// Element "Namespace" of type xs:anyURI.
    xsd__anyURI*                         Namespace                      0;	///< Optional element.
/// Attribute "metadataURL" of type xs:anyURI.
  @ xsd__anyURI*                         metadataURL                    0;	///< Optional attribute.
};

/// @brief "http://inspire.ec.europa.eu/schemas/common/1.0":ExtendedCapabilitiesType is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Extended capabilities for ISO 19128 , OGC CSW, OGC OWS services
/// </BLOCKQUOTE></PRE>
///
/// This type is extended by:
/// - "http://inspire.ec.europa.eu/schemas/inspire_dls/1.0":ExtendedCapabilitiesType as idls__ExtendedCapabilitiesType
///
/// @note class icommon__ExtendedCapabilitiesType operations:
/// - icommon__ExtendedCapabilitiesType* soap_new_icommon__ExtendedCapabilitiesType(soap*) allocate and default initialize
/// - icommon__ExtendedCapabilitiesType* soap_new_icommon__ExtendedCapabilitiesType(soap*, int num) allocate and default initialize an array
/// - icommon__ExtendedCapabilitiesType* soap_new_req_icommon__ExtendedCapabilitiesType(soap*, ...) allocate, set required members
/// - icommon__ExtendedCapabilitiesType* soap_new_set_icommon__ExtendedCapabilitiesType(soap*, ...) allocate, set all public members
/// - icommon__ExtendedCapabilitiesType::soap_default(soap*) default initialize members
/// - int soap_read_icommon__ExtendedCapabilitiesType(soap*, icommon__ExtendedCapabilitiesType*) deserialize from a stream
/// - int soap_write_icommon__ExtendedCapabilitiesType(soap*, icommon__ExtendedCapabilitiesType*) serialize to a stream
/// - icommon__ExtendedCapabilitiesType* icommon__ExtendedCapabilitiesType::soap_dup(soap*) returns deep copy of icommon__ExtendedCapabilitiesType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - icommon__ExtendedCapabilitiesType::soap_del() deep deletes icommon__ExtendedCapabilitiesType data members, use only after icommon__ExtendedCapabilitiesType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int icommon__ExtendedCapabilitiesType::soap_type() returns SOAP_TYPE_icommon__ExtendedCapabilitiesType or derived type identifier
class icommon__ExtendedCapabilitiesType : public xsd__anyType
{ public:
//  BEGIN CHOICE <xs:choice>
/// @note <xs:choice> with embedded <xs:sequence> or <xs:group> prevents the use of a union for <xs:choice>. Instead of being members of a union, the following members are declared optional. Only one sequence of members should be non-NULL by choice.
//  BEGIN SEQUENCE <xs:sequence>
/// <PRE><BLOCKQUOTE>
///   Scenario 1: Mandatory MetadataUrl element pointing to an INSPIRE Compliant ISO metadata document plus language parameters
/// </BLOCKQUOTE></PRE>
///
/// Element "MetadataUrl" of type "http://inspire.ec.europa.eu/schemas/common/1.0":resourceLocatorType.
    icommon__resourceLocatorType*        MetadataUrl                   ;	///< Choice of element (one of multiple choices).
/// Element "SupportedLanguages" of type "http://inspire.ec.europa.eu/schemas/common/1.0":supportedLanguagesType.
    icommon__supportedLanguagesType*     SupportedLanguages            ;	///< Choice of element (one of multiple choices).
/// Element "ResponseLanguage" of type "http://inspire.ec.europa.eu/schemas/common/1.0":languageElementISO6392B.
    icommon__languageElementISO6392B*    ResponseLanguage              ;	///< Choice of element (one of multiple choices).
//  END OF SEQUENCE
//  BEGIN SEQUENCE <xs:sequence>
/// <PRE><BLOCKQUOTE>
///   Scenario 2: Mandatory (where appropriate) metadata elements not mapped to standard capabilities, plus mandatory language parameters, plus OPTIONAL MetadataUrl pointing to an INSPIRE Compliant ISO metadata document
/// </BLOCKQUOTE></PRE>
///
/// <PRE><BLOCKQUOTE>
///   Mandatory linkage to the network service
/// </BLOCKQUOTE></PRE>
///
/// Vector of icommon__resourceLocatorType* of length 1..unbounded.
    std::vector<icommon__resourceLocatorType*> ResourceLocator               ;	///< Choice of element (one of multiple choices).
/// Element "ResourceType" of type "http://inspire.ec.europa.eu/schemas/common/1.0":serviceSpatialDataResourceType.
    enum icommon__serviceSpatialDataResourceType*  ResourceType                  ;	///< Choice of element (one of multiple choices).
/// Vector of icommon__temporalReference* of length 1..unbounded.
    std::vector<icommon__temporalReference*> TemporalReference             ;	///< Choice of element (one of multiple choices).
/// Vector of icommon__conformity* of length 1..unbounded.
    std::vector<icommon__conformity*   > Conformity                    ;	///< Choice of element (one of multiple choices).
/// Vector of icommon__metadataPointOfContact* of length 1..unbounded.
    std::vector<icommon__metadataPointOfContact*> MetadataPointOfContact        ;	///< Choice of element (one of multiple choices).
/// Element "MetadataDate" of type "http://inspire.ec.europa.eu/schemas/common/1.0":iso8601Date.
    icommon__iso8601Date*                MetadataDate                  ;	///< Choice of element (one of multiple choices).
/// Element "SpatialDataServiceType" of type "http://inspire.ec.europa.eu/schemas/common/1.0":spatialDataServiceType.
    enum icommon__spatialDataServiceType*  SpatialDataServiceType        ;	///< Choice of element (one of multiple choices).
/// Vector of icommon__classificationOfSpatialDataService* of length 1..unbounded.
    std::vector<icommon__classificationOfSpatialDataService*> MandatoryKeyword              ;	///< Choice of element (one of multiple choices).
/// <PRE><BLOCKQUOTE>
///   If the resource is a spatial data service, at least one keyword from Part D.4 shall be provided.
/// </BLOCKQUOTE></PRE>
///
/// Vector of icommon__keyword* of length 0..unbounded.
    std::vector<icommon__keyword*      > Keyword                       ;	///< Choice of optional element (one of multiple choices).
/// Element "SupportedLanguages" of type "http://inspire.ec.europa.eu/schemas/common/1.0":supportedLanguagesType.
    icommon__supportedLanguagesType*     SupportedLanguages_           ;	///< Choice of element (one of multiple choices).
/// Element "ResponseLanguage" of type "http://inspire.ec.europa.eu/schemas/common/1.0":languageElementISO6392B.
    icommon__languageElementISO6392B*    ResponseLanguage_             ;	///< Choice of element (one of multiple choices).
/// Element "MetadataUrl" of type "http://inspire.ec.europa.eu/schemas/common/1.0":resourceLocatorType.
    icommon__resourceLocatorType*        MetadataUrl_                  ;	///< Choice of optional element (one of multiple choices).
//  END OF SEQUENCE
//  END OF CHOICE
};

/// @brief "http://inspire.ec.europa.eu/schemas/common/1.0":supportedLanguagesType is a complexType.
///
/// @note class icommon__supportedLanguagesType operations:
/// - icommon__supportedLanguagesType* soap_new_icommon__supportedLanguagesType(soap*) allocate and default initialize
/// - icommon__supportedLanguagesType* soap_new_icommon__supportedLanguagesType(soap*, int num) allocate and default initialize an array
/// - icommon__supportedLanguagesType* soap_new_req_icommon__supportedLanguagesType(soap*, ...) allocate, set required members
/// - icommon__supportedLanguagesType* soap_new_set_icommon__supportedLanguagesType(soap*, ...) allocate, set all public members
/// - icommon__supportedLanguagesType::soap_default(soap*) default initialize members
/// - int soap_read_icommon__supportedLanguagesType(soap*, icommon__supportedLanguagesType*) deserialize from a stream
/// - int soap_write_icommon__supportedLanguagesType(soap*, icommon__supportedLanguagesType*) serialize to a stream
/// - icommon__supportedLanguagesType* icommon__supportedLanguagesType::soap_dup(soap*) returns deep copy of icommon__supportedLanguagesType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - icommon__supportedLanguagesType::soap_del() deep deletes icommon__supportedLanguagesType data members, use only after icommon__supportedLanguagesType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int icommon__supportedLanguagesType::soap_type() returns SOAP_TYPE_icommon__supportedLanguagesType or derived type identifier
class icommon__supportedLanguagesType : public xsd__anyType
{ public:
/// Element "DefaultLanguage" of type "http://inspire.ec.europa.eu/schemas/common/1.0":languageElementISO6392B.
    icommon__languageElementISO6392B*    DefaultLanguage                1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   It is not necessary to repeat the default
///   language
/// </BLOCKQUOTE></PRE>
///
/// Vector of icommon__languageElementISO6392B* of length 0..unbounded.
    std::vector<icommon__languageElementISO6392B*> SupportedLanguage              0;	///< Multiple elements.
};

/// @brief "http://inspire.ec.europa.eu/schemas/common/1.0":layers is a complexType.
///
/// @note class icommon__layers operations:
/// - icommon__layers* soap_new_icommon__layers(soap*) allocate and default initialize
/// - icommon__layers* soap_new_icommon__layers(soap*, int num) allocate and default initialize an array
/// - icommon__layers* soap_new_req_icommon__layers(soap*, ...) allocate, set required members
/// - icommon__layers* soap_new_set_icommon__layers(soap*, ...) allocate, set all public members
/// - icommon__layers::soap_default(soap*) default initialize members
/// - int soap_read_icommon__layers(soap*, icommon__layers*) deserialize from a stream
/// - int soap_write_icommon__layers(soap*, icommon__layers*) serialize to a stream
/// - icommon__layers* icommon__layers::soap_dup(soap*) returns deep copy of icommon__layers, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - icommon__layers::soap_del() deep deletes icommon__layers data members, use only after icommon__layers::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int icommon__layers::soap_type() returns SOAP_TYPE_icommon__layers or derived type identifier
class icommon__layers : public xsd__anyType
{ public:
/// @note class _icommon__layers_Layer operations:
/// - _icommon__layers_Layer* soap_new__icommon__layers_Layer(soap*) allocate and default initialize
/// - _icommon__layers_Layer* soap_new__icommon__layers_Layer(soap*, int num) allocate and default initialize an array
/// - _icommon__layers_Layer* soap_new_req__icommon__layers_Layer(soap*, ...) allocate, set required members
/// - _icommon__layers_Layer* soap_new_set__icommon__layers_Layer(soap*, ...) allocate, set all public members
/// - _icommon__layers_Layer::soap_default(soap*) default initialize members
/// - int soap_read__icommon__layers_Layer(soap*, _icommon__layers_Layer*) deserialize from a stream
/// - int soap_write__icommon__layers_Layer(soap*, _icommon__layers_Layer*) serialize to a stream
/// - _icommon__layers_Layer* _icommon__layers_Layer::soap_dup(soap*) returns deep copy of _icommon__layers_Layer, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _icommon__layers_Layer::soap_del() deep deletes _icommon__layers_Layer data members, use only after _icommon__layers_Layer::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _icommon__layers_Layer::soap_type() returns SOAP_TYPE__icommon__layers_Layer or derived type identifier
    class _icommon__layers_Layer
    { public:
/// <PRE><BLOCKQUOTE>
///   Harmonised name of the layer
/// </BLOCKQUOTE></PRE>
///
/// Element "Name" of type xs:string.
    std::string                          Name                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Layer Title
/// </BLOCKQUOTE></PRE>
///
/// Element "ResourceTitle" of type xs:string.
    std::string                          ResourceTitle                  1;	///< Required element.
/// Element "ResourceAbstract" of type xs:string.
    std::string                          ResourceAbstract               1;	///< Required element.
/// Vector of icommon__keyword* of length 0..unbounded.
    std::vector<icommon__keyword*      > Keyword                        0;	///< Multiple elements.
/// Vector of icommon__geographicBoundingBox* of length 1..unbounded.
    std::vector<icommon__geographicBoundingBox*> GeographicBoundingBox          1;	///< Multiple elements.
/// Vector of icommon__uniqueResourceIdentifier* of length 1..unbounded.
    std::vector<icommon__uniqueResourceIdentifier*> UniqueResourceIdentifier       1;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   List of Coordinate Reference Systems in which the layer is available
/// </BLOCKQUOTE></PRE>
///
/// @note class _icommon__layers_Layer_CoordinateReferenceSystems operations:
/// - _icommon__layers_Layer_CoordinateReferenceSystems* soap_new__icommon__layers_Layer_CoordinateReferenceSystems(soap*) allocate and default initialize
/// - _icommon__layers_Layer_CoordinateReferenceSystems* soap_new__icommon__layers_Layer_CoordinateReferenceSystems(soap*, int num) allocate and default initialize an array
/// - _icommon__layers_Layer_CoordinateReferenceSystems* soap_new_req__icommon__layers_Layer_CoordinateReferenceSystems(soap*, ...) allocate, set required members
/// - _icommon__layers_Layer_CoordinateReferenceSystems* soap_new_set__icommon__layers_Layer_CoordinateReferenceSystems(soap*, ...) allocate, set all public members
/// - _icommon__layers_Layer_CoordinateReferenceSystems::soap_default(soap*) default initialize members
/// - int soap_read__icommon__layers_Layer_CoordinateReferenceSystems(soap*, _icommon__layers_Layer_CoordinateReferenceSystems*) deserialize from a stream
/// - int soap_write__icommon__layers_Layer_CoordinateReferenceSystems(soap*, _icommon__layers_Layer_CoordinateReferenceSystems*) serialize to a stream
/// - _icommon__layers_Layer_CoordinateReferenceSystems* _icommon__layers_Layer_CoordinateReferenceSystems::soap_dup(soap*) returns deep copy of _icommon__layers_Layer_CoordinateReferenceSystems, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _icommon__layers_Layer_CoordinateReferenceSystems::soap_del() deep deletes _icommon__layers_Layer_CoordinateReferenceSystems data members, use only after _icommon__layers_Layer_CoordinateReferenceSystems::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _icommon__layers_Layer_CoordinateReferenceSystems::soap_type() returns SOAP_TYPE__icommon__layers_Layer_CoordinateReferenceSystems or derived type identifier
    class _icommon__layers_Layer_CoordinateReferenceSystems
    { public:
/// Vector of CRS of length 1..unbounded.
    std::vector<
/// @note class _icommon__layers_Layer_CoordinateReferenceSystems_CRS operations:
/// - _icommon__layers_Layer_CoordinateReferenceSystems_CRS* soap_new__icommon__layers_Layer_CoordinateReferenceSystems_CRS(soap*) allocate and default initialize
/// - _icommon__layers_Layer_CoordinateReferenceSystems_CRS* soap_new__icommon__layers_Layer_CoordinateReferenceSystems_CRS(soap*, int num) allocate and default initialize an array
/// - _icommon__layers_Layer_CoordinateReferenceSystems_CRS* soap_new_req__icommon__layers_Layer_CoordinateReferenceSystems_CRS(soap*, ...) allocate, set required members
/// - _icommon__layers_Layer_CoordinateReferenceSystems_CRS* soap_new_set__icommon__layers_Layer_CoordinateReferenceSystems_CRS(soap*, ...) allocate, set all public members
/// - _icommon__layers_Layer_CoordinateReferenceSystems_CRS::soap_default(soap*) default initialize members
/// - int soap_read__icommon__layers_Layer_CoordinateReferenceSystems_CRS(soap*, _icommon__layers_Layer_CoordinateReferenceSystems_CRS*) deserialize from a stream
/// - int soap_write__icommon__layers_Layer_CoordinateReferenceSystems_CRS(soap*, _icommon__layers_Layer_CoordinateReferenceSystems_CRS*) serialize to a stream
/// - _icommon__layers_Layer_CoordinateReferenceSystems_CRS* _icommon__layers_Layer_CoordinateReferenceSystems_CRS::soap_dup(soap*) returns deep copy of _icommon__layers_Layer_CoordinateReferenceSystems_CRS, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _icommon__layers_Layer_CoordinateReferenceSystems_CRS::soap_del() deep deletes _icommon__layers_Layer_CoordinateReferenceSystems_CRS data members, use only after _icommon__layers_Layer_CoordinateReferenceSystems_CRS::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _icommon__layers_Layer_CoordinateReferenceSystems_CRS::soap_type() returns SOAP_TYPE__icommon__layers_Layer_CoordinateReferenceSystems_CRS or derived type identifier
    class _icommon__layers_Layer_CoordinateReferenceSystems_CRS
    { public:
/// Element "CRSName" of type xs:string.
    std::string                          CRSName                        1;	///< Required element.
/// Element "CRSLabel" of type xs:string.
    std::string                          CRSLabel                       1;	///< Required element.
    }>                                   CRS                            1;	///< Multiple elements.
    }                                    CoordinateReferenceSystems     1;	///< Required element.
/// @note class _icommon__layers_Layer_Styles operations:
/// - _icommon__layers_Layer_Styles* soap_new__icommon__layers_Layer_Styles(soap*) allocate and default initialize
/// - _icommon__layers_Layer_Styles* soap_new__icommon__layers_Layer_Styles(soap*, int num) allocate and default initialize an array
/// - _icommon__layers_Layer_Styles* soap_new_req__icommon__layers_Layer_Styles(soap*, ...) allocate, set required members
/// - _icommon__layers_Layer_Styles* soap_new_set__icommon__layers_Layer_Styles(soap*, ...) allocate, set all public members
/// - _icommon__layers_Layer_Styles::soap_default(soap*) default initialize members
/// - int soap_read__icommon__layers_Layer_Styles(soap*, _icommon__layers_Layer_Styles*) deserialize from a stream
/// - int soap_write__icommon__layers_Layer_Styles(soap*, _icommon__layers_Layer_Styles*) serialize to a stream
/// - _icommon__layers_Layer_Styles* _icommon__layers_Layer_Styles::soap_dup(soap*) returns deep copy of _icommon__layers_Layer_Styles, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _icommon__layers_Layer_Styles::soap_del() deep deletes _icommon__layers_Layer_Styles data members, use only after _icommon__layers_Layer_Styles::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _icommon__layers_Layer_Styles::soap_type() returns SOAP_TYPE__icommon__layers_Layer_Styles or derived type identifier
    class _icommon__layers_Layer_Styles
    { public:
/// @note class _icommon__layers_Layer_Styles_Style operations:
/// - _icommon__layers_Layer_Styles_Style* soap_new__icommon__layers_Layer_Styles_Style(soap*) allocate and default initialize
/// - _icommon__layers_Layer_Styles_Style* soap_new__icommon__layers_Layer_Styles_Style(soap*, int num) allocate and default initialize an array
/// - _icommon__layers_Layer_Styles_Style* soap_new_req__icommon__layers_Layer_Styles_Style(soap*, ...) allocate, set required members
/// - _icommon__layers_Layer_Styles_Style* soap_new_set__icommon__layers_Layer_Styles_Style(soap*, ...) allocate, set all public members
/// - _icommon__layers_Layer_Styles_Style::soap_default(soap*) default initialize members
/// - int soap_read__icommon__layers_Layer_Styles_Style(soap*, _icommon__layers_Layer_Styles_Style*) deserialize from a stream
/// - int soap_write__icommon__layers_Layer_Styles_Style(soap*, _icommon__layers_Layer_Styles_Style*) serialize to a stream
/// - _icommon__layers_Layer_Styles_Style* _icommon__layers_Layer_Styles_Style::soap_dup(soap*) returns deep copy of _icommon__layers_Layer_Styles_Style, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _icommon__layers_Layer_Styles_Style::soap_del() deep deletes _icommon__layers_Layer_Styles_Style data members, use only after _icommon__layers_Layer_Styles_Style::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _icommon__layers_Layer_Styles_Style::soap_type() returns SOAP_TYPE__icommon__layers_Layer_Styles_Style or derived type identifier
    class _icommon__layers_Layer_Styles_Style
    { public:
/// Element "StyleName" of type xs:string.
    std::string                          StyleName                      1;	///< Required element.
/// Element "StyleTitle" of type xs:string.
    std::string                          StyleTitle                     1;	///< Required element.
/// @note class _icommon__layers_Layer_Styles_Style_StyleAbstract operations:
/// - _icommon__layers_Layer_Styles_Style_StyleAbstract* soap_new__icommon__layers_Layer_Styles_Style_StyleAbstract(soap*) allocate and default initialize
/// - _icommon__layers_Layer_Styles_Style_StyleAbstract* soap_new__icommon__layers_Layer_Styles_Style_StyleAbstract(soap*, int num) allocate and default initialize an array
/// - _icommon__layers_Layer_Styles_Style_StyleAbstract* soap_new_req__icommon__layers_Layer_Styles_Style_StyleAbstract(soap*, ...) allocate, set required members
/// - _icommon__layers_Layer_Styles_Style_StyleAbstract* soap_new_set__icommon__layers_Layer_Styles_Style_StyleAbstract(soap*, ...) allocate, set all public members
/// - _icommon__layers_Layer_Styles_Style_StyleAbstract::soap_default(soap*) default initialize members
/// - int soap_read__icommon__layers_Layer_Styles_Style_StyleAbstract(soap*, _icommon__layers_Layer_Styles_Style_StyleAbstract*) deserialize from a stream
/// - int soap_write__icommon__layers_Layer_Styles_Style_StyleAbstract(soap*, _icommon__layers_Layer_Styles_Style_StyleAbstract*) serialize to a stream
/// - _icommon__layers_Layer_Styles_Style_StyleAbstract* _icommon__layers_Layer_Styles_Style_StyleAbstract::soap_dup(soap*) returns deep copy of _icommon__layers_Layer_Styles_Style_StyleAbstract, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _icommon__layers_Layer_Styles_Style_StyleAbstract::soap_del() deep deletes _icommon__layers_Layer_Styles_Style_StyleAbstract data members, use only after _icommon__layers_Layer_Styles_Style_StyleAbstract::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _icommon__layers_Layer_Styles_Style_StyleAbstract::soap_type() returns SOAP_TYPE__icommon__layers_Layer_Styles_Style_StyleAbstract or derived type identifier
    class _icommon__layers_Layer_Styles_Style_StyleAbstract
    { public:
    }                                    StyleAbstract                  1;	///< Required element.
/// @note class _icommon__layers_Layer_Styles_Style_StyleFormat operations:
/// - _icommon__layers_Layer_Styles_Style_StyleFormat* soap_new__icommon__layers_Layer_Styles_Style_StyleFormat(soap*) allocate and default initialize
/// - _icommon__layers_Layer_Styles_Style_StyleFormat* soap_new__icommon__layers_Layer_Styles_Style_StyleFormat(soap*, int num) allocate and default initialize an array
/// - _icommon__layers_Layer_Styles_Style_StyleFormat* soap_new_req__icommon__layers_Layer_Styles_Style_StyleFormat(soap*, ...) allocate, set required members
/// - _icommon__layers_Layer_Styles_Style_StyleFormat* soap_new_set__icommon__layers_Layer_Styles_Style_StyleFormat(soap*, ...) allocate, set all public members
/// - _icommon__layers_Layer_Styles_Style_StyleFormat::soap_default(soap*) default initialize members
/// - int soap_read__icommon__layers_Layer_Styles_Style_StyleFormat(soap*, _icommon__layers_Layer_Styles_Style_StyleFormat*) deserialize from a stream
/// - int soap_write__icommon__layers_Layer_Styles_Style_StyleFormat(soap*, _icommon__layers_Layer_Styles_Style_StyleFormat*) serialize to a stream
/// - _icommon__layers_Layer_Styles_Style_StyleFormat* _icommon__layers_Layer_Styles_Style_StyleFormat::soap_dup(soap*) returns deep copy of _icommon__layers_Layer_Styles_Style_StyleFormat, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _icommon__layers_Layer_Styles_Style_StyleFormat::soap_del() deep deletes _icommon__layers_Layer_Styles_Style_StyleFormat data members, use only after _icommon__layers_Layer_Styles_Style_StyleFormat::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _icommon__layers_Layer_Styles_Style_StyleFormat::soap_type() returns SOAP_TYPE__icommon__layers_Layer_Styles_Style_StyleFormat or derived type identifier
    class _icommon__layers_Layer_Styles_Style_StyleFormat
    { public:
    }                                    StyleFormat                    1;	///< Required element.
/// @note class _icommon__layers_Layer_Styles_Style_StyleURL operations:
/// - _icommon__layers_Layer_Styles_Style_StyleURL* soap_new__icommon__layers_Layer_Styles_Style_StyleURL(soap*) allocate and default initialize
/// - _icommon__layers_Layer_Styles_Style_StyleURL* soap_new__icommon__layers_Layer_Styles_Style_StyleURL(soap*, int num) allocate and default initialize an array
/// - _icommon__layers_Layer_Styles_Style_StyleURL* soap_new_req__icommon__layers_Layer_Styles_Style_StyleURL(soap*, ...) allocate, set required members
/// - _icommon__layers_Layer_Styles_Style_StyleURL* soap_new_set__icommon__layers_Layer_Styles_Style_StyleURL(soap*, ...) allocate, set all public members
/// - _icommon__layers_Layer_Styles_Style_StyleURL::soap_default(soap*) default initialize members
/// - int soap_read__icommon__layers_Layer_Styles_Style_StyleURL(soap*, _icommon__layers_Layer_Styles_Style_StyleURL*) deserialize from a stream
/// - int soap_write__icommon__layers_Layer_Styles_Style_StyleURL(soap*, _icommon__layers_Layer_Styles_Style_StyleURL*) serialize to a stream
/// - _icommon__layers_Layer_Styles_Style_StyleURL* _icommon__layers_Layer_Styles_Style_StyleURL::soap_dup(soap*) returns deep copy of _icommon__layers_Layer_Styles_Style_StyleURL, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _icommon__layers_Layer_Styles_Style_StyleURL::soap_del() deep deletes _icommon__layers_Layer_Styles_Style_StyleURL data members, use only after _icommon__layers_Layer_Styles_Style_StyleURL::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _icommon__layers_Layer_Styles_Style_StyleURL::soap_type() returns SOAP_TYPE__icommon__layers_Layer_Styles_Style_StyleURL or derived type identifier
    class _icommon__layers_Layer_Styles_Style_StyleURL
    { public:
    }                                    StyleURL                       1;	///< Required element.
/// @note class _icommon__layers_Layer_Styles_Style_LegendList operations:
/// - _icommon__layers_Layer_Styles_Style_LegendList* soap_new__icommon__layers_Layer_Styles_Style_LegendList(soap*) allocate and default initialize
/// - _icommon__layers_Layer_Styles_Style_LegendList* soap_new__icommon__layers_Layer_Styles_Style_LegendList(soap*, int num) allocate and default initialize an array
/// - _icommon__layers_Layer_Styles_Style_LegendList* soap_new_req__icommon__layers_Layer_Styles_Style_LegendList(soap*, ...) allocate, set required members
/// - _icommon__layers_Layer_Styles_Style_LegendList* soap_new_set__icommon__layers_Layer_Styles_Style_LegendList(soap*, ...) allocate, set all public members
/// - _icommon__layers_Layer_Styles_Style_LegendList::soap_default(soap*) default initialize members
/// - int soap_read__icommon__layers_Layer_Styles_Style_LegendList(soap*, _icommon__layers_Layer_Styles_Style_LegendList*) deserialize from a stream
/// - int soap_write__icommon__layers_Layer_Styles_Style_LegendList(soap*, _icommon__layers_Layer_Styles_Style_LegendList*) serialize to a stream
/// - _icommon__layers_Layer_Styles_Style_LegendList* _icommon__layers_Layer_Styles_Style_LegendList::soap_dup(soap*) returns deep copy of _icommon__layers_Layer_Styles_Style_LegendList, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _icommon__layers_Layer_Styles_Style_LegendList::soap_del() deep deletes _icommon__layers_Layer_Styles_Style_LegendList data members, use only after _icommon__layers_Layer_Styles_Style_LegendList::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _icommon__layers_Layer_Styles_Style_LegendList::soap_type() returns SOAP_TYPE__icommon__layers_Layer_Styles_Style_LegendList or derived type identifier
    class _icommon__layers_Layer_Styles_Style_LegendList
    { public:
/// @note class _icommon__layers_Layer_Styles_Style_LegendList_Legend operations:
/// - _icommon__layers_Layer_Styles_Style_LegendList_Legend* soap_new__icommon__layers_Layer_Styles_Style_LegendList_Legend(soap*) allocate and default initialize
/// - _icommon__layers_Layer_Styles_Style_LegendList_Legend* soap_new__icommon__layers_Layer_Styles_Style_LegendList_Legend(soap*, int num) allocate and default initialize an array
/// - _icommon__layers_Layer_Styles_Style_LegendList_Legend* soap_new_req__icommon__layers_Layer_Styles_Style_LegendList_Legend(soap*, ...) allocate, set required members
/// - _icommon__layers_Layer_Styles_Style_LegendList_Legend* soap_new_set__icommon__layers_Layer_Styles_Style_LegendList_Legend(soap*, ...) allocate, set all public members
/// - _icommon__layers_Layer_Styles_Style_LegendList_Legend::soap_default(soap*) default initialize members
/// - int soap_read__icommon__layers_Layer_Styles_Style_LegendList_Legend(soap*, _icommon__layers_Layer_Styles_Style_LegendList_Legend*) deserialize from a stream
/// - int soap_write__icommon__layers_Layer_Styles_Style_LegendList_Legend(soap*, _icommon__layers_Layer_Styles_Style_LegendList_Legend*) serialize to a stream
/// - _icommon__layers_Layer_Styles_Style_LegendList_Legend* _icommon__layers_Layer_Styles_Style_LegendList_Legend::soap_dup(soap*) returns deep copy of _icommon__layers_Layer_Styles_Style_LegendList_Legend, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _icommon__layers_Layer_Styles_Style_LegendList_Legend::soap_del() deep deletes _icommon__layers_Layer_Styles_Style_LegendList_Legend data members, use only after _icommon__layers_Layer_Styles_Style_LegendList_Legend::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _icommon__layers_Layer_Styles_Style_LegendList_Legend::soap_type() returns SOAP_TYPE__icommon__layers_Layer_Styles_Style_LegendList_Legend or derived type identifier
    class _icommon__layers_Layer_Styles_Style_LegendList_Legend
    { public:
/// @note class _icommon__layers_Layer_Styles_Style_LegendList_Legend_LegendFormat operations:
/// - _icommon__layers_Layer_Styles_Style_LegendList_Legend_LegendFormat* soap_new__icommon__layers_Layer_Styles_Style_LegendList_Legend_LegendFormat(soap*) allocate and default initialize
/// - _icommon__layers_Layer_Styles_Style_LegendList_Legend_LegendFormat* soap_new__icommon__layers_Layer_Styles_Style_LegendList_Legend_LegendFormat(soap*, int num) allocate and default initialize an array
/// - _icommon__layers_Layer_Styles_Style_LegendList_Legend_LegendFormat* soap_new_req__icommon__layers_Layer_Styles_Style_LegendList_Legend_LegendFormat(soap*, ...) allocate, set required members
/// - _icommon__layers_Layer_Styles_Style_LegendList_Legend_LegendFormat* soap_new_set__icommon__layers_Layer_Styles_Style_LegendList_Legend_LegendFormat(soap*, ...) allocate, set all public members
/// - _icommon__layers_Layer_Styles_Style_LegendList_Legend_LegendFormat::soap_default(soap*) default initialize members
/// - int soap_read__icommon__layers_Layer_Styles_Style_LegendList_Legend_LegendFormat(soap*, _icommon__layers_Layer_Styles_Style_LegendList_Legend_LegendFormat*) deserialize from a stream
/// - int soap_write__icommon__layers_Layer_Styles_Style_LegendList_Legend_LegendFormat(soap*, _icommon__layers_Layer_Styles_Style_LegendList_Legend_LegendFormat*) serialize to a stream
/// - _icommon__layers_Layer_Styles_Style_LegendList_Legend_LegendFormat* _icommon__layers_Layer_Styles_Style_LegendList_Legend_LegendFormat::soap_dup(soap*) returns deep copy of _icommon__layers_Layer_Styles_Style_LegendList_Legend_LegendFormat, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _icommon__layers_Layer_Styles_Style_LegendList_Legend_LegendFormat::soap_del() deep deletes _icommon__layers_Layer_Styles_Style_LegendList_Legend_LegendFormat data members, use only after _icommon__layers_Layer_Styles_Style_LegendList_Legend_LegendFormat::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _icommon__layers_Layer_Styles_Style_LegendList_Legend_LegendFormat::soap_type() returns SOAP_TYPE__icommon__layers_Layer_Styles_Style_LegendList_Legend_LegendFormat or derived type identifier
    class _icommon__layers_Layer_Styles_Style_LegendList_Legend_LegendFormat
    { public:
    }                                    LegendFormat                   1;	///< Required element.
/// Element "LegendHeight" of type xs:byte.
    xsd__byte                            LegendHeight                   1;	///< Required element.
/// Element "LegendWidth" of type xs:byte.
    xsd__byte                            LegendWidth                    1;	///< Required element.
/// @note class _icommon__layers_Layer_Styles_Style_LegendList_Legend_LegendURL operations:
/// - _icommon__layers_Layer_Styles_Style_LegendList_Legend_LegendURL* soap_new__icommon__layers_Layer_Styles_Style_LegendList_Legend_LegendURL(soap*) allocate and default initialize
/// - _icommon__layers_Layer_Styles_Style_LegendList_Legend_LegendURL* soap_new__icommon__layers_Layer_Styles_Style_LegendList_Legend_LegendURL(soap*, int num) allocate and default initialize an array
/// - _icommon__layers_Layer_Styles_Style_LegendList_Legend_LegendURL* soap_new_req__icommon__layers_Layer_Styles_Style_LegendList_Legend_LegendURL(soap*, ...) allocate, set required members
/// - _icommon__layers_Layer_Styles_Style_LegendList_Legend_LegendURL* soap_new_set__icommon__layers_Layer_Styles_Style_LegendList_Legend_LegendURL(soap*, ...) allocate, set all public members
/// - _icommon__layers_Layer_Styles_Style_LegendList_Legend_LegendURL::soap_default(soap*) default initialize members
/// - int soap_read__icommon__layers_Layer_Styles_Style_LegendList_Legend_LegendURL(soap*, _icommon__layers_Layer_Styles_Style_LegendList_Legend_LegendURL*) deserialize from a stream
/// - int soap_write__icommon__layers_Layer_Styles_Style_LegendList_Legend_LegendURL(soap*, _icommon__layers_Layer_Styles_Style_LegendList_Legend_LegendURL*) serialize to a stream
/// - _icommon__layers_Layer_Styles_Style_LegendList_Legend_LegendURL* _icommon__layers_Layer_Styles_Style_LegendList_Legend_LegendURL::soap_dup(soap*) returns deep copy of _icommon__layers_Layer_Styles_Style_LegendList_Legend_LegendURL, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _icommon__layers_Layer_Styles_Style_LegendList_Legend_LegendURL::soap_del() deep deletes _icommon__layers_Layer_Styles_Style_LegendList_Legend_LegendURL data members, use only after _icommon__layers_Layer_Styles_Style_LegendList_Legend_LegendURL::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _icommon__layers_Layer_Styles_Style_LegendList_Legend_LegendURL::soap_type() returns SOAP_TYPE__icommon__layers_Layer_Styles_Style_LegendList_Legend_LegendURL or derived type identifier
    class _icommon__layers_Layer_Styles_Style_LegendList_Legend_LegendURL
    { public:
    }                                    LegendURL                      1;	///< Required element.
    }                                    Legend                         1;	///< Required element.
    }                                    LegendList                     1;	///< Required element.
/// Attribute "name" of type xs:string.
  @ std::string                          name                           1;	///< Required attribute.
    }                                    Style                          1;	///< Required element.
    }                                    Styles                         1;	///< Required element.
/// Attribute "layerName" of type xs:string.
  @ std::string*                         layerName                      0;	///< Optional attribute.
/// Attribute "queryable" of type xs:boolean.
  @ bool*                                queryable                      0;	///< Optional attribute.
    }                                    Layer                          1;	///< Required element.
};

/// @brief Top-level root element "http://inspire.ec.europa.eu/schemas/common/1.0":IntervalOfDates
/// @brief "http://inspire.ec.europa.eu/schemas/common/1.0":IntervalOfDates is a complexType.
///
/// @note class _icommon__IntervalOfDates operations:
/// - _icommon__IntervalOfDates* soap_new__icommon__IntervalOfDates(soap*) allocate and default initialize
/// - _icommon__IntervalOfDates* soap_new__icommon__IntervalOfDates(soap*, int num) allocate and default initialize an array
/// - _icommon__IntervalOfDates* soap_new_req__icommon__IntervalOfDates(soap*, ...) allocate, set required members
/// - _icommon__IntervalOfDates* soap_new_set__icommon__IntervalOfDates(soap*, ...) allocate, set all public members
/// - _icommon__IntervalOfDates::soap_default(soap*) default initialize members
/// - int soap_read__icommon__IntervalOfDates(soap*, _icommon__IntervalOfDates*) deserialize from a stream
/// - int soap_write__icommon__IntervalOfDates(soap*, _icommon__IntervalOfDates*) serialize to a stream
/// - _icommon__IntervalOfDates* _icommon__IntervalOfDates::soap_dup(soap*) returns deep copy of _icommon__IntervalOfDates, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _icommon__IntervalOfDates::soap_del() deep deletes _icommon__IntervalOfDates data members, use only after _icommon__IntervalOfDates::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _icommon__IntervalOfDates::soap_type() returns SOAP_TYPE__icommon__IntervalOfDates or derived type identifier
class _icommon__IntervalOfDates
{ public:
/// Element "StartingDate" of type "http://inspire.ec.europa.eu/schemas/common/1.0":iso8601Date.
    icommon__iso8601Date                 StartingDate                   1;	///< Required element.
/// Element "EndDate" of type "http://inspire.ec.europa.eu/schemas/common/1.0":iso8601Date.
    icommon__iso8601Date                 EndDate                        1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.opengis.net/wfs/2.0":StoredQueryType is a complexType with complexContent extension of type "http://www.opengis.net/fes/2.0":AbstractQueryExpressionType.
///
/// @note class wfs__StoredQueryType operations:
/// - wfs__StoredQueryType* soap_new_wfs__StoredQueryType(soap*) allocate and default initialize
/// - wfs__StoredQueryType* soap_new_wfs__StoredQueryType(soap*, int num) allocate and default initialize an array
/// - wfs__StoredQueryType* soap_new_req_wfs__StoredQueryType(soap*, ...) allocate, set required members
/// - wfs__StoredQueryType* soap_new_set_wfs__StoredQueryType(soap*, ...) allocate, set all public members
/// - wfs__StoredQueryType::soap_default(soap*) default initialize members
/// - int soap_read_wfs__StoredQueryType(soap*, wfs__StoredQueryType*) deserialize from a stream
/// - int soap_write_wfs__StoredQueryType(soap*, wfs__StoredQueryType*) serialize to a stream
/// - wfs__StoredQueryType* wfs__StoredQueryType::soap_dup(soap*) returns deep copy of wfs__StoredQueryType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - wfs__StoredQueryType::soap_del() deep deletes wfs__StoredQueryType data members, use only after wfs__StoredQueryType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int wfs__StoredQueryType::soap_type() returns SOAP_TYPE_wfs__StoredQueryType or derived type identifier
class wfs__StoredQueryType : public fes__AbstractQueryExpressionType
{ public:
/*  INHERITED FROM fes__AbstractQueryExpressionType:
/// Attribute "handle" of type xs:string.
  @ std::string*                         handle                         0;	///< Optional attribute.
    END OF INHERITED FROM fes__AbstractQueryExpressionType */
/// Vector of wfs__ParameterType* of length 0..unbounded.
    std::vector<wfs__ParameterType*    > Parameter                      0;	///< Multiple elements.
/// Attribute "id" of type xs:anyURI.
  @ xsd__anyURI                          id                             1;	///< Required attribute.
};

/// @brief "http://www.opengis.net/wfs/2.0":GetCapabilitiesType is a complexType with complexContent extension of type "http://www.opengis.net/ows/1.1":GetCapabilitiesType.
///
/// @note class wfs__GetCapabilitiesType operations:
/// - wfs__GetCapabilitiesType* soap_new_wfs__GetCapabilitiesType(soap*) allocate and default initialize
/// - wfs__GetCapabilitiesType* soap_new_wfs__GetCapabilitiesType(soap*, int num) allocate and default initialize an array
/// - wfs__GetCapabilitiesType* soap_new_req_wfs__GetCapabilitiesType(soap*, ...) allocate, set required members
/// - wfs__GetCapabilitiesType* soap_new_set_wfs__GetCapabilitiesType(soap*, ...) allocate, set all public members
/// - wfs__GetCapabilitiesType::soap_default(soap*) default initialize members
/// - int soap_read_wfs__GetCapabilitiesType(soap*, wfs__GetCapabilitiesType*) deserialize from a stream
/// - int soap_write_wfs__GetCapabilitiesType(soap*, wfs__GetCapabilitiesType*) serialize to a stream
/// - wfs__GetCapabilitiesType* wfs__GetCapabilitiesType::soap_dup(soap*) returns deep copy of wfs__GetCapabilitiesType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - wfs__GetCapabilitiesType::soap_del() deep deletes wfs__GetCapabilitiesType data members, use only after wfs__GetCapabilitiesType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int wfs__GetCapabilitiesType::soap_type() returns SOAP_TYPE_wfs__GetCapabilitiesType or derived type identifier
class wfs__GetCapabilitiesType : public ows__GetCapabilitiesType
{ public:
/*  INHERITED FROM ows__GetCapabilitiesType:
/// <PRE><BLOCKQUOTE>
///   When omitted, server shall return latest supported version.
/// </BLOCKQUOTE></PRE>
///
/// Element "AcceptVersions" of type "http://www.opengis.net/ows/1.1":AcceptVersionsType.
    ows__AcceptVersionsType*             AcceptVersions                 0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   When omitted or not supported by server, server shall return complete service metadata (Capabilities) document.
/// </BLOCKQUOTE></PRE>
///
/// Element "Sections" of type "http://www.opengis.net/ows/1.1":SectionsType.
    ows__SectionsType*                   Sections                       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   When omitted or not supported by server, server shall return service metadata document using the MIME type "text/xml".
/// </BLOCKQUOTE></PRE>
///
/// Element "AcceptFormats" of type "http://www.opengis.net/ows/1.1":AcceptFormatsType.
    ows__AcceptFormatsType*              AcceptFormats                  0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   When omitted or not supported by server, server shall return latest complete service metadata document.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "updateSequence" of type "http://www.opengis.net/ows/1.1":UpdateSequenceType.
  @ ows__UpdateSequenceType*             updateSequence                 0;	///< Optional attribute.
    END OF INHERITED FROM ows__GetCapabilitiesType */
/// Attribute "service" of type "http://www.opengis.net/ows/1.1":ServiceType.
  @ ows__ServiceType                     service                        1 == "WFS";	///< Required attribute with fixed value="WFS".
};

/// @brief "http://www.opengis.net/wfs/2.0":WFS_CapabilitiesType is a complexType with complexContent extension of type "http://www.opengis.net/ows/1.1":CapabilitiesBaseType.
///
/// @note class wfs__WFS_x005fCapabilitiesType operations:
/// - wfs__WFS_x005fCapabilitiesType* soap_new_wfs__WFS_x005fCapabilitiesType(soap*) allocate and default initialize
/// - wfs__WFS_x005fCapabilitiesType* soap_new_wfs__WFS_x005fCapabilitiesType(soap*, int num) allocate and default initialize an array
/// - wfs__WFS_x005fCapabilitiesType* soap_new_req_wfs__WFS_x005fCapabilitiesType(soap*, ...) allocate, set required members
/// - wfs__WFS_x005fCapabilitiesType* soap_new_set_wfs__WFS_x005fCapabilitiesType(soap*, ...) allocate, set all public members
/// - wfs__WFS_x005fCapabilitiesType::soap_default(soap*) default initialize members
/// - int soap_read_wfs__WFS_x005fCapabilitiesType(soap*, wfs__WFS_x005fCapabilitiesType*) deserialize from a stream
/// - int soap_write_wfs__WFS_x005fCapabilitiesType(soap*, wfs__WFS_x005fCapabilitiesType*) serialize to a stream
/// - wfs__WFS_x005fCapabilitiesType* wfs__WFS_x005fCapabilitiesType::soap_dup(soap*) returns deep copy of wfs__WFS_x005fCapabilitiesType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - wfs__WFS_x005fCapabilitiesType::soap_del() deep deletes wfs__WFS_x005fCapabilitiesType data members, use only after wfs__WFS_x005fCapabilitiesType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int wfs__WFS_x005fCapabilitiesType::soap_type() returns SOAP_TYPE_wfs__WFS_x005fCapabilitiesType or derived type identifier
class wfs__WFS_x005fCapabilitiesType : public ows__CapabilitiesBaseType
{ public:
/*  INHERITED FROM ows__CapabilitiesBaseType:
/// <PRE><BLOCKQUOTE>
///   General metadata for this specific server. This XML Schema of this section shall be the same for all OWS.
/// </BLOCKQUOTE></PRE>
///
/// Element reference "http://www.opengis.net/ows/1.1:""http://www.opengis.net/ows/1.1":ServiceIdentification.
    _ows__ServiceIdentification*         ServiceIdentification          0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Metadata about the organization that provides this specific service instance or server.
/// </BLOCKQUOTE></PRE>
///
/// Element reference "http://www.opengis.net/ows/1.1:""http://www.opengis.net/ows/1.1":ServiceProvider.
    _ows__ServiceProvider*               ServiceProvider                0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Metadata about the operations and related abilities specified by this service and implemented by this server, including the URLs for operation requests. The basic contents of this section shall be the same for all OWS types, but individual services can add elements and/or change the optionality of optional elements.
/// </BLOCKQUOTE></PRE>
///
/// Element reference "http://www.opengis.net/ows/1.1:""http://www.opengis.net/ows/1.1":OperationsMetadata.
    _ows__OperationsMetadata*            OperationsMetadata             0;	///< Optional element.
/// Attribute "version" of type "http://www.opengis.net/ows/1.1":VersionType.
  @ ows__VersionType                     version                        1;	///< Required attribute.
/// <PRE><BLOCKQUOTE>
///   Service metadata document version, having values that are "increased" whenever any change is made in service metadata document. Values are selected by each server, and are always opaque to clients. When not supported by server, server shall not return this attribute.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "updateSequence" of type "http://www.opengis.net/ows/1.1":UpdateSequenceType.
  @ ows__UpdateSequenceType*             updateSequence                 0;	///< Optional attribute.
    END OF INHERITED FROM ows__CapabilitiesBaseType */
/// @note class _wfs__WFS_x005fCapabilitiesType_WSDL operations:
/// - _wfs__WFS_x005fCapabilitiesType_WSDL* soap_new__wfs__WFS_x005fCapabilitiesType_WSDL(soap*) allocate and default initialize
/// - _wfs__WFS_x005fCapabilitiesType_WSDL* soap_new__wfs__WFS_x005fCapabilitiesType_WSDL(soap*, int num) allocate and default initialize an array
/// - _wfs__WFS_x005fCapabilitiesType_WSDL* soap_new_req__wfs__WFS_x005fCapabilitiesType_WSDL(soap*, ...) allocate, set required members
/// - _wfs__WFS_x005fCapabilitiesType_WSDL* soap_new_set__wfs__WFS_x005fCapabilitiesType_WSDL(soap*, ...) allocate, set all public members
/// - _wfs__WFS_x005fCapabilitiesType_WSDL::soap_default(soap*) default initialize members
/// - int soap_read__wfs__WFS_x005fCapabilitiesType_WSDL(soap*, _wfs__WFS_x005fCapabilitiesType_WSDL*) deserialize from a stream
/// - int soap_write__wfs__WFS_x005fCapabilitiesType_WSDL(soap*, _wfs__WFS_x005fCapabilitiesType_WSDL*) serialize to a stream
/// - _wfs__WFS_x005fCapabilitiesType_WSDL* _wfs__WFS_x005fCapabilitiesType_WSDL::soap_dup(soap*) returns deep copy of _wfs__WFS_x005fCapabilitiesType_WSDL, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _wfs__WFS_x005fCapabilitiesType_WSDL::soap_del() deep deletes _wfs__WFS_x005fCapabilitiesType_WSDL data members, use only after _wfs__WFS_x005fCapabilitiesType_WSDL::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _wfs__WFS_x005fCapabilitiesType_WSDL::soap_type() returns SOAP_TYPE__wfs__WFS_x005fCapabilitiesType_WSDL or derived type identifier
    class _wfs__WFS_x005fCapabilitiesType_WSDL
    { public:
    }                                   *WSDL                           0;	///< Optional element.
/// Element reference "http://www.opengis.net/wfs/2.0:""http://www.opengis.net/wfs/2.0":FeatureTypeList.
    wfs__FeatureTypeListType*            FeatureTypeList                0;	///< Optional element.
/// Element reference "http://www.opengis.net/wfs/2.0:""http://www.opengis.net/fes/2.0":Filter_Capabilities.
    _fes__Filter_x005fCapabilities*      fes__Filter_x005fCapabilities  0;	///< Optional element.
};

/// @brief "http://www.opengis.net/wfs/2.0":DescribeFeatureTypeType is a complexType with complexContent extension of type "http://www.opengis.net/wfs/2.0":BaseRequestType.
///
/// @note class wfs__DescribeFeatureTypeType operations:
/// - wfs__DescribeFeatureTypeType* soap_new_wfs__DescribeFeatureTypeType(soap*) allocate and default initialize
/// - wfs__DescribeFeatureTypeType* soap_new_wfs__DescribeFeatureTypeType(soap*, int num) allocate and default initialize an array
/// - wfs__DescribeFeatureTypeType* soap_new_req_wfs__DescribeFeatureTypeType(soap*, ...) allocate, set required members
/// - wfs__DescribeFeatureTypeType* soap_new_set_wfs__DescribeFeatureTypeType(soap*, ...) allocate, set all public members
/// - wfs__DescribeFeatureTypeType::soap_default(soap*) default initialize members
/// - int soap_read_wfs__DescribeFeatureTypeType(soap*, wfs__DescribeFeatureTypeType*) deserialize from a stream
/// - int soap_write_wfs__DescribeFeatureTypeType(soap*, wfs__DescribeFeatureTypeType*) serialize to a stream
/// - wfs__DescribeFeatureTypeType* wfs__DescribeFeatureTypeType::soap_dup(soap*) returns deep copy of wfs__DescribeFeatureTypeType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - wfs__DescribeFeatureTypeType::soap_del() deep deletes wfs__DescribeFeatureTypeType data members, use only after wfs__DescribeFeatureTypeType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int wfs__DescribeFeatureTypeType::soap_type() returns SOAP_TYPE_wfs__DescribeFeatureTypeType or derived type identifier
class wfs__DescribeFeatureTypeType : public wfs__BaseRequestType
{ public:
/*  INHERITED FROM wfs__BaseRequestType:
/// Attribute "service" of type xs:string.
  @ std::string                          service                        1 == "WFS";	///< Required attribute with fixed value="WFS".
/// Attribute "version" of type "http://www.opengis.net/wfs/2.0":VersionStringType.
  @ wfs__VersionStringType               version                        1;	///< Required attribute.
/// Attribute "handle" of type xs:string.
  @ std::string*                         handle                         0;	///< Optional attribute.
    END OF INHERITED FROM wfs__BaseRequestType */
/// Vector of xsd__QName of length 0..unbounded.
    std::vector<xsd__QName             > TypeName                       0;	///< Multiple elements.
/// Attribute "outputFormat" of type xs:string.
  @ std::string                          outputFormat                   0 = "application/gml+xml; version=3.2";	///< Optional attribute with default value="application/gml+xml; version=3.2".
};

/// @brief "http://www.opengis.net/wfs/2.0":GetPropertyValueType is a complexType with complexContent extension of type "http://www.opengis.net/wfs/2.0":BaseRequestType.
///
/// @note class wfs__GetPropertyValueType operations:
/// - wfs__GetPropertyValueType* soap_new_wfs__GetPropertyValueType(soap*) allocate and default initialize
/// - wfs__GetPropertyValueType* soap_new_wfs__GetPropertyValueType(soap*, int num) allocate and default initialize an array
/// - wfs__GetPropertyValueType* soap_new_req_wfs__GetPropertyValueType(soap*, ...) allocate, set required members
/// - wfs__GetPropertyValueType* soap_new_set_wfs__GetPropertyValueType(soap*, ...) allocate, set all public members
/// - wfs__GetPropertyValueType::soap_default(soap*) default initialize members
/// - int soap_read_wfs__GetPropertyValueType(soap*, wfs__GetPropertyValueType*) deserialize from a stream
/// - int soap_write_wfs__GetPropertyValueType(soap*, wfs__GetPropertyValueType*) serialize to a stream
/// - wfs__GetPropertyValueType* wfs__GetPropertyValueType::soap_dup(soap*) returns deep copy of wfs__GetPropertyValueType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - wfs__GetPropertyValueType::soap_del() deep deletes wfs__GetPropertyValueType data members, use only after wfs__GetPropertyValueType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int wfs__GetPropertyValueType::soap_type() returns SOAP_TYPE_wfs__GetPropertyValueType or derived type identifier
class wfs__GetPropertyValueType : public wfs__BaseRequestType
{ public:
/*  INHERITED FROM wfs__BaseRequestType:
/// Attribute "service" of type xs:string.
  @ std::string                          service                        1 == "WFS";	///< Required attribute with fixed value="WFS".
/// Attribute "version" of type "http://www.opengis.net/wfs/2.0":VersionStringType.
  @ wfs__VersionStringType               version                        1;	///< Required attribute.
/// Attribute "handle" of type xs:string.
  @ std::string*                         handle                         0;	///< Optional attribute.
    END OF INHERITED FROM wfs__BaseRequestType */
/// Reference "http://www.opengis.net/fes/2.0":AbstractQueryExpression to abstract element.
//  BEGIN SUBSTITUTIONS <xs:element substitutionGroup="AbstractQueryExpression"> with choice of elements to substitute:
//    <StoredQuery> <StoredQuery>
  $ int                                  __unionAbstractQueryExpression;	///< Union _wfs__union_GetPropertyValueType selector: set to SOAP_UNION__wfs__union_GetPropertyValueType_<fieldname>
/// Union for substitutionGroup wfs__AbstractQueryExpression.
    union _wfs__union_GetPropertyValueType
    {
/// Element "http://www.opengis.net/wfs/2.0":StoredQuery.
    wfs__StoredQueryType*                StoredQuery                   ;	///< Choice of element (one of multiple choices).
/// Element "http://www.opengis.net/wfs/2.0":StoredQuery.
    wfs__StoredQueryType*                StoredQuery_                  ;	///< Choice of element (one of multiple choices).
    }                                    union_GetPropertyValueType    ;
//  END OF SUBSTITUTIONS
/// Attribute "valueReference" of type xs:string.
  @ std::string                          valueReference                 1;	///< Required attribute.
/// Attribute "resolvePath" of type xs:string.
  @ std::string*                         resolvePath                    0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/wfs/2.0":StandardPresentationParameters">.
/// Attribute "startIndex" of type xs:nonNegativeInteger.
  @ xsd__nonNegativeInteger              startIndex                     0 /* @warning: cannot assign default/fixed value to this type */;	///< Optional attribute with default value="0".
/// Attribute "count" of type xs:nonNegativeInteger.
  @ xsd__nonNegativeInteger*             count                          0;	///< Optional attribute.
/// Attribute "resultType" of type "http://www.opengis.net/wfs/2.0":ResultTypeType.
  @ enum wfs__ResultTypeType             resultType                     0 = wfs__ResultTypeType__results;	///< Optional attribute with default value="results".
/// Attribute "outputFormat" of type xs:string.
  @ std::string                          outputFormat                   0 = "application/gml+xml; version=3.2";	///< Optional attribute with default value="application/gml+xml; version=3.2".
//  END OF ATTRIBUTEGROUP
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/wfs/2.0":StandardResolveParameters">.
/// Attribute "resolve" of type "http://www.opengis.net/wfs/2.0":ResolveValueType.
  @ enum wfs__ResolveValueType           resolve                        0 = wfs__ResolveValueType__none;	///< Optional attribute with default value="none".
/// Attribute "resolveDepth" of type "http://www.opengis.net/wfs/2.0":positiveIntegerWithStar.
  @ wfs__positiveIntegerWithStar         resolveDepth                   0 = "*";	///< Optional attribute with default value="*".
/// Attribute "resolveTimeout" of type xs:positiveInteger.
  @ xsd__positiveInteger                 resolveTimeout                 0 /* @warning: cannot assign default/fixed value to this type */;	///< Optional attribute with default value="300".
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.opengis.net/wfs/2.0":GetFeatureType is a complexType with complexContent extension of type "http://www.opengis.net/wfs/2.0":BaseRequestType.
///
/// @note class wfs__GetFeatureType operations:
/// - wfs__GetFeatureType* soap_new_wfs__GetFeatureType(soap*) allocate and default initialize
/// - wfs__GetFeatureType* soap_new_wfs__GetFeatureType(soap*, int num) allocate and default initialize an array
/// - wfs__GetFeatureType* soap_new_req_wfs__GetFeatureType(soap*, ...) allocate, set required members
/// - wfs__GetFeatureType* soap_new_set_wfs__GetFeatureType(soap*, ...) allocate, set all public members
/// - wfs__GetFeatureType::soap_default(soap*) default initialize members
/// - int soap_read_wfs__GetFeatureType(soap*, wfs__GetFeatureType*) deserialize from a stream
/// - int soap_write_wfs__GetFeatureType(soap*, wfs__GetFeatureType*) serialize to a stream
/// - wfs__GetFeatureType* wfs__GetFeatureType::soap_dup(soap*) returns deep copy of wfs__GetFeatureType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - wfs__GetFeatureType::soap_del() deep deletes wfs__GetFeatureType data members, use only after wfs__GetFeatureType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int wfs__GetFeatureType::soap_type() returns SOAP_TYPE_wfs__GetFeatureType or derived type identifier
class wfs__GetFeatureType : public wfs__BaseRequestType
{ public:
/*  INHERITED FROM wfs__BaseRequestType:
/// Attribute "service" of type xs:string.
  @ std::string                          service                        1 == "WFS";	///< Required attribute with fixed value="WFS".
/// Attribute "version" of type "http://www.opengis.net/wfs/2.0":VersionStringType.
  @ wfs__VersionStringType               version                        1;	///< Required attribute.
/// Attribute "handle" of type xs:string.
  @ std::string*                         handle                         0;	///< Optional attribute.
    END OF INHERITED FROM wfs__BaseRequestType */
/// Reference "http://www.opengis.net/fes/2.0":AbstractQueryExpression to abstract element.
//  BEGIN SUBSTITUTIONS <xs:element substitutionGroup="AbstractQueryExpression" maxOccurs="unbounded"> with choice of elements to substitute:
//    <StoredQuery> <StoredQuery>
  $ int                                  __sizeAbstractQueryExpression  0;
    class __wfs__union_GetFeatureType
    {
  $ int                                  __unionAbstractQueryExpression;	///< Union _wfs__union_GetFeatureType selector: set to SOAP_UNION__wfs__union_GetFeatureType_<fieldname>
/// Union for substitutionGroup wfs__AbstractQueryExpression.
    union _wfs__union_GetFeatureType
    {
/// Element "http://www.opengis.net/wfs/2.0":StoredQuery.
    wfs__StoredQueryType*                StoredQuery                   ;	///< Choice of element (one of multiple choices).
/// Element "http://www.opengis.net/wfs/2.0":StoredQuery.
    wfs__StoredQueryType*                StoredQuery_                  ;	///< Choice of element (one of multiple choices).
    }                                    union_GetFeatureType          ;
    }                                   *__union_GetFeatureType        ;
//  END OF SUBSTITUTIONS
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/wfs/2.0":StandardPresentationParameters">.
/// Attribute "startIndex" of type xs:nonNegativeInteger.
  @ xsd__nonNegativeInteger              startIndex                     0 /* @warning: cannot assign default/fixed value to this type */;	///< Optional attribute with default value="0".
/// Attribute "count" of type xs:nonNegativeInteger.
  @ xsd__nonNegativeInteger*             count                          0;	///< Optional attribute.
/// Attribute "resultType" of type "http://www.opengis.net/wfs/2.0":ResultTypeType.
  @ enum wfs__ResultTypeType             resultType                     0 = wfs__ResultTypeType__results;	///< Optional attribute with default value="results".
/// Attribute "outputFormat" of type xs:string.
  @ std::string                          outputFormat                   0 = "application/gml+xml; version=3.2";	///< Optional attribute with default value="application/gml+xml; version=3.2".
//  END OF ATTRIBUTEGROUP
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/wfs/2.0":StandardResolveParameters">.
/// Attribute "resolve" of type "http://www.opengis.net/wfs/2.0":ResolveValueType.
  @ enum wfs__ResolveValueType           resolve                        0 = wfs__ResolveValueType__none;	///< Optional attribute with default value="none".
/// Attribute "resolveDepth" of type "http://www.opengis.net/wfs/2.0":positiveIntegerWithStar.
  @ wfs__positiveIntegerWithStar         resolveDepth                   0 = "*";	///< Optional attribute with default value="*".
/// Attribute "resolveTimeout" of type xs:positiveInteger.
  @ xsd__positiveInteger                 resolveTimeout                 0 /* @warning: cannot assign default/fixed value to this type */;	///< Optional attribute with default value="300".
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.opengis.net/wfs/2.0":FeatureCollectionType is a complexType with complexContent extension of type "http://www.opengis.net/wfs/2.0":SimpleFeatureCollectionType.
///
/// @note class wfs__FeatureCollectionType operations:
/// - wfs__FeatureCollectionType* soap_new_wfs__FeatureCollectionType(soap*) allocate and default initialize
/// - wfs__FeatureCollectionType* soap_new_wfs__FeatureCollectionType(soap*, int num) allocate and default initialize an array
/// - wfs__FeatureCollectionType* soap_new_req_wfs__FeatureCollectionType(soap*, ...) allocate, set required members
/// - wfs__FeatureCollectionType* soap_new_set_wfs__FeatureCollectionType(soap*, ...) allocate, set all public members
/// - wfs__FeatureCollectionType::soap_default(soap*) default initialize members
/// - int soap_read_wfs__FeatureCollectionType(soap*, wfs__FeatureCollectionType*) deserialize from a stream
/// - int soap_write_wfs__FeatureCollectionType(soap*, wfs__FeatureCollectionType*) serialize to a stream
/// - wfs__FeatureCollectionType* wfs__FeatureCollectionType::soap_dup(soap*) returns deep copy of wfs__FeatureCollectionType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - wfs__FeatureCollectionType::soap_del() deep deletes wfs__FeatureCollectionType data members, use only after wfs__FeatureCollectionType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int wfs__FeatureCollectionType::soap_type() returns SOAP_TYPE_wfs__FeatureCollectionType or derived type identifier
class wfs__FeatureCollectionType : public wfs__SimpleFeatureCollectionType
{ public:
/*  INHERITED FROM wfs__SimpleFeatureCollectionType:
/// Element reference "http://www.opengis.net/wfs/2.0:""http://www.opengis.net/wfs/2.0":boundedBy.
    wfs__EnvelopePropertyType*           boundedBy                      0;	///< Optional element.
/// Vector of wfs__MemberPropertyType* element refs of length 0..unbounded.
    std::vector<wfs__MemberPropertyType*> member                         0;	///< Multiple elements.
    END OF INHERITED FROM wfs__SimpleFeatureCollectionType */
/// Element reference "http://www.opengis.net/wfs/2.0:""http://www.opengis.net/wfs/2.0":additionalObjects.
    _wfs__additionalObjects*             additionalObjects              0;	///< Optional element.
/// Element reference "http://www.opengis.net/wfs/2.0:""http://www.opengis.net/wfs/2.0":truncatedResponse.
    _wfs__truncatedResponse*             truncatedResponse              0;	///< Optional element.
/// Attribute "lockId" of type xs:string.
  @ std::string*                         lockId                         0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/wfs/2.0":StandardResponseParameters">.
/// Attribute "timeStamp" of type xs:dateTime.
  @ time_t                               timeStamp                      1;	///< Required attribute.
/// Attribute "numberMatched" of type "http://www.opengis.net/wfs/2.0":nonNegativeIntegerOrUnknown.
  @ wfs__nonNegativeIntegerOrUnknown     numberMatched                  1;	///< Required attribute.
/// Attribute "numberReturned" of type xs:nonNegativeInteger.
  @ xsd__nonNegativeInteger              numberReturned                 1;	///< Required attribute.
/// Attribute "next" of type xs:anyURI.
  @ xsd__anyURI*                         next                           0;	///< Optional attribute.
/// Attribute "previous" of type xs:anyURI.
  @ xsd__anyURI*                         previous                       0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.opengis.net/wfs/2.0":ListStoredQueriesType is a complexType with complexContent extension of type "http://www.opengis.net/wfs/2.0":BaseRequestType.
///
/// @note class wfs__ListStoredQueriesType operations:
/// - wfs__ListStoredQueriesType* soap_new_wfs__ListStoredQueriesType(soap*) allocate and default initialize
/// - wfs__ListStoredQueriesType* soap_new_wfs__ListStoredQueriesType(soap*, int num) allocate and default initialize an array
/// - wfs__ListStoredQueriesType* soap_new_req_wfs__ListStoredQueriesType(soap*, ...) allocate, set required members
/// - wfs__ListStoredQueriesType* soap_new_set_wfs__ListStoredQueriesType(soap*, ...) allocate, set all public members
/// - wfs__ListStoredQueriesType::soap_default(soap*) default initialize members
/// - int soap_read_wfs__ListStoredQueriesType(soap*, wfs__ListStoredQueriesType*) deserialize from a stream
/// - int soap_write_wfs__ListStoredQueriesType(soap*, wfs__ListStoredQueriesType*) serialize to a stream
/// - wfs__ListStoredQueriesType* wfs__ListStoredQueriesType::soap_dup(soap*) returns deep copy of wfs__ListStoredQueriesType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - wfs__ListStoredQueriesType::soap_del() deep deletes wfs__ListStoredQueriesType data members, use only after wfs__ListStoredQueriesType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int wfs__ListStoredQueriesType::soap_type() returns SOAP_TYPE_wfs__ListStoredQueriesType or derived type identifier
class wfs__ListStoredQueriesType : public wfs__BaseRequestType
{ public:
/*  INHERITED FROM wfs__BaseRequestType:
/// Attribute "service" of type xs:string.
  @ std::string                          service                        1 == "WFS";	///< Required attribute with fixed value="WFS".
/// Attribute "version" of type "http://www.opengis.net/wfs/2.0":VersionStringType.
  @ wfs__VersionStringType               version                        1;	///< Required attribute.
/// Attribute "handle" of type xs:string.
  @ std::string*                         handle                         0;	///< Optional attribute.
    END OF INHERITED FROM wfs__BaseRequestType */
};

/// @brief "http://www.opengis.net/wfs/2.0":DescribeStoredQueriesType is a complexType with complexContent extension of type "http://www.opengis.net/wfs/2.0":BaseRequestType.
///
/// @note class wfs__DescribeStoredQueriesType operations:
/// - wfs__DescribeStoredQueriesType* soap_new_wfs__DescribeStoredQueriesType(soap*) allocate and default initialize
/// - wfs__DescribeStoredQueriesType* soap_new_wfs__DescribeStoredQueriesType(soap*, int num) allocate and default initialize an array
/// - wfs__DescribeStoredQueriesType* soap_new_req_wfs__DescribeStoredQueriesType(soap*, ...) allocate, set required members
/// - wfs__DescribeStoredQueriesType* soap_new_set_wfs__DescribeStoredQueriesType(soap*, ...) allocate, set all public members
/// - wfs__DescribeStoredQueriesType::soap_default(soap*) default initialize members
/// - int soap_read_wfs__DescribeStoredQueriesType(soap*, wfs__DescribeStoredQueriesType*) deserialize from a stream
/// - int soap_write_wfs__DescribeStoredQueriesType(soap*, wfs__DescribeStoredQueriesType*) serialize to a stream
/// - wfs__DescribeStoredQueriesType* wfs__DescribeStoredQueriesType::soap_dup(soap*) returns deep copy of wfs__DescribeStoredQueriesType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - wfs__DescribeStoredQueriesType::soap_del() deep deletes wfs__DescribeStoredQueriesType data members, use only after wfs__DescribeStoredQueriesType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int wfs__DescribeStoredQueriesType::soap_type() returns SOAP_TYPE_wfs__DescribeStoredQueriesType or derived type identifier
class wfs__DescribeStoredQueriesType : public wfs__BaseRequestType
{ public:
/*  INHERITED FROM wfs__BaseRequestType:
/// Attribute "service" of type xs:string.
  @ std::string                          service                        1 == "WFS";	///< Required attribute with fixed value="WFS".
/// Attribute "version" of type "http://www.opengis.net/wfs/2.0":VersionStringType.
  @ wfs__VersionStringType               version                        1;	///< Required attribute.
/// Attribute "handle" of type xs:string.
  @ std::string*                         handle                         0;	///< Optional attribute.
    END OF INHERITED FROM wfs__BaseRequestType */
/// Vector of xsd__anyURI of length 0..unbounded.
    std::vector<xsd__anyURI            > StoredQueryId                  0;	///< Multiple elements.
};

/// @brief "http://www.opengis.net/wfs/2.0":CreateStoredQueryType is a complexType with complexContent extension of type "http://www.opengis.net/wfs/2.0":BaseRequestType.
///
/// @note class wfs__CreateStoredQueryType operations:
/// - wfs__CreateStoredQueryType* soap_new_wfs__CreateStoredQueryType(soap*) allocate and default initialize
/// - wfs__CreateStoredQueryType* soap_new_wfs__CreateStoredQueryType(soap*, int num) allocate and default initialize an array
/// - wfs__CreateStoredQueryType* soap_new_req_wfs__CreateStoredQueryType(soap*, ...) allocate, set required members
/// - wfs__CreateStoredQueryType* soap_new_set_wfs__CreateStoredQueryType(soap*, ...) allocate, set all public members
/// - wfs__CreateStoredQueryType::soap_default(soap*) default initialize members
/// - int soap_read_wfs__CreateStoredQueryType(soap*, wfs__CreateStoredQueryType*) deserialize from a stream
/// - int soap_write_wfs__CreateStoredQueryType(soap*, wfs__CreateStoredQueryType*) serialize to a stream
/// - wfs__CreateStoredQueryType* wfs__CreateStoredQueryType::soap_dup(soap*) returns deep copy of wfs__CreateStoredQueryType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - wfs__CreateStoredQueryType::soap_del() deep deletes wfs__CreateStoredQueryType data members, use only after wfs__CreateStoredQueryType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int wfs__CreateStoredQueryType::soap_type() returns SOAP_TYPE_wfs__CreateStoredQueryType or derived type identifier
class wfs__CreateStoredQueryType : public wfs__BaseRequestType
{ public:
/*  INHERITED FROM wfs__BaseRequestType:
/// Attribute "service" of type xs:string.
  @ std::string                          service                        1 == "WFS";	///< Required attribute with fixed value="WFS".
/// Attribute "version" of type "http://www.opengis.net/wfs/2.0":VersionStringType.
  @ wfs__VersionStringType               version                        1;	///< Required attribute.
/// Attribute "handle" of type xs:string.
  @ std::string*                         handle                         0;	///< Optional attribute.
    END OF INHERITED FROM wfs__BaseRequestType */
/// Vector of wfs__StoredQueryDescriptionType* of length 0..unbounded.
    std::vector<wfs__StoredQueryDescriptionType*> StoredQueryDefinition          0;	///< Multiple elements.
};

/// @brief "http://www.opengis.net/wfs/2.0":CreateStoredQueryResponseType is a complexType with complexContent extension of type "http://www.opengis.net/wfs/2.0":ExecutionStatusType.
///
/// @note class wfs__CreateStoredQueryResponseType operations:
/// - wfs__CreateStoredQueryResponseType* soap_new_wfs__CreateStoredQueryResponseType(soap*) allocate and default initialize
/// - wfs__CreateStoredQueryResponseType* soap_new_wfs__CreateStoredQueryResponseType(soap*, int num) allocate and default initialize an array
/// - wfs__CreateStoredQueryResponseType* soap_new_req_wfs__CreateStoredQueryResponseType(soap*, ...) allocate, set required members
/// - wfs__CreateStoredQueryResponseType* soap_new_set_wfs__CreateStoredQueryResponseType(soap*, ...) allocate, set all public members
/// - wfs__CreateStoredQueryResponseType::soap_default(soap*) default initialize members
/// - int soap_read_wfs__CreateStoredQueryResponseType(soap*, wfs__CreateStoredQueryResponseType*) deserialize from a stream
/// - int soap_write_wfs__CreateStoredQueryResponseType(soap*, wfs__CreateStoredQueryResponseType*) serialize to a stream
/// - wfs__CreateStoredQueryResponseType* wfs__CreateStoredQueryResponseType::soap_dup(soap*) returns deep copy of wfs__CreateStoredQueryResponseType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - wfs__CreateStoredQueryResponseType::soap_del() deep deletes wfs__CreateStoredQueryResponseType data members, use only after wfs__CreateStoredQueryResponseType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int wfs__CreateStoredQueryResponseType::soap_type() returns SOAP_TYPE_wfs__CreateStoredQueryResponseType or derived type identifier
class wfs__CreateStoredQueryResponseType : public wfs__ExecutionStatusType
{ public:
/*  INHERITED FROM wfs__ExecutionStatusType:
/// Attribute "status" of type xs:string.
  @ std::string                          status                         0 == "OK";	///< Optional attribute with fixed value="OK".
    END OF INHERITED FROM wfs__ExecutionStatusType */
};

/// @brief "http://www.opengis.net/wfs/2.0":LockFeatureType is a complexType with complexContent extension of type "http://www.opengis.net/wfs/2.0":BaseRequestType.
///
/// @note class wfs__LockFeatureType operations:
/// - wfs__LockFeatureType* soap_new_wfs__LockFeatureType(soap*) allocate and default initialize
/// - wfs__LockFeatureType* soap_new_wfs__LockFeatureType(soap*, int num) allocate and default initialize an array
/// - wfs__LockFeatureType* soap_new_req_wfs__LockFeatureType(soap*, ...) allocate, set required members
/// - wfs__LockFeatureType* soap_new_set_wfs__LockFeatureType(soap*, ...) allocate, set all public members
/// - wfs__LockFeatureType::soap_default(soap*) default initialize members
/// - int soap_read_wfs__LockFeatureType(soap*, wfs__LockFeatureType*) deserialize from a stream
/// - int soap_write_wfs__LockFeatureType(soap*, wfs__LockFeatureType*) serialize to a stream
/// - wfs__LockFeatureType* wfs__LockFeatureType::soap_dup(soap*) returns deep copy of wfs__LockFeatureType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - wfs__LockFeatureType::soap_del() deep deletes wfs__LockFeatureType data members, use only after wfs__LockFeatureType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int wfs__LockFeatureType::soap_type() returns SOAP_TYPE_wfs__LockFeatureType or derived type identifier
class wfs__LockFeatureType : public wfs__BaseRequestType
{ public:
/*  INHERITED FROM wfs__BaseRequestType:
/// Attribute "service" of type xs:string.
  @ std::string                          service                        1 == "WFS";	///< Required attribute with fixed value="WFS".
/// Attribute "version" of type "http://www.opengis.net/wfs/2.0":VersionStringType.
  @ wfs__VersionStringType               version                        1;	///< Required attribute.
/// Attribute "handle" of type xs:string.
  @ std::string*                         handle                         0;	///< Optional attribute.
    END OF INHERITED FROM wfs__BaseRequestType */
/// Reference "http://www.opengis.net/fes/2.0":AbstractQueryExpression to abstract element.
//  BEGIN SUBSTITUTIONS <xs:element substitutionGroup="AbstractQueryExpression" maxOccurs="unbounded"> with choice of elements to substitute:
//    <StoredQuery> <StoredQuery>
  $ int                                  __sizeAbstractQueryExpression  0;
    class __wfs__union_LockFeatureType
    {
  $ int                                  __unionAbstractQueryExpression;	///< Union _wfs__union_LockFeatureType selector: set to SOAP_UNION__wfs__union_LockFeatureType_<fieldname>
/// Union for substitutionGroup wfs__AbstractQueryExpression.
    union _wfs__union_LockFeatureType
    {
/// Element "http://www.opengis.net/wfs/2.0":StoredQuery.
    wfs__StoredQueryType*                StoredQuery                   ;	///< Choice of element (one of multiple choices).
/// Element "http://www.opengis.net/wfs/2.0":StoredQuery.
    wfs__StoredQueryType*                StoredQuery_                  ;	///< Choice of element (one of multiple choices).
    }                                    union_LockFeatureType         ;
    }                                   *__union_LockFeatureType       ;
//  END OF SUBSTITUTIONS
/// Attribute "lockId" of type xs:string.
  @ std::string*                         lockId                         0;	///< Optional attribute.
/// Attribute "expiry" of type xs:positiveInteger.
  @ xsd__positiveInteger                 expiry                         0 /* @warning: cannot assign default/fixed value to this type */;	///< Optional attribute with default value="300".
/// Attribute "lockAction" of type "http://www.opengis.net/wfs/2.0":AllSomeType.
  @ enum wfs__AllSomeType                lockAction                     0 = wfs__AllSomeType__ALL;	///< Optional attribute with default value="ALL".
};

/// @brief "http://www.opengis.net/wfs/2.0":TransactionType is a complexType with complexContent extension of type "http://www.opengis.net/wfs/2.0":BaseRequestType.
///
/// @note class wfs__TransactionType operations:
/// - wfs__TransactionType* soap_new_wfs__TransactionType(soap*) allocate and default initialize
/// - wfs__TransactionType* soap_new_wfs__TransactionType(soap*, int num) allocate and default initialize an array
/// - wfs__TransactionType* soap_new_req_wfs__TransactionType(soap*, ...) allocate, set required members
/// - wfs__TransactionType* soap_new_set_wfs__TransactionType(soap*, ...) allocate, set all public members
/// - wfs__TransactionType::soap_default(soap*) default initialize members
/// - int soap_read_wfs__TransactionType(soap*, wfs__TransactionType*) deserialize from a stream
/// - int soap_write_wfs__TransactionType(soap*, wfs__TransactionType*) serialize to a stream
/// - wfs__TransactionType* wfs__TransactionType::soap_dup(soap*) returns deep copy of wfs__TransactionType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - wfs__TransactionType::soap_del() deep deletes wfs__TransactionType data members, use only after wfs__TransactionType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int wfs__TransactionType::soap_type() returns SOAP_TYPE_wfs__TransactionType or derived type identifier
class wfs__TransactionType : public wfs__BaseRequestType
{ public:
/*  INHERITED FROM wfs__BaseRequestType:
/// Attribute "service" of type xs:string.
  @ std::string                          service                        1 == "WFS";	///< Required attribute with fixed value="WFS".
/// Attribute "version" of type "http://www.opengis.net/wfs/2.0":VersionStringType.
  @ wfs__VersionStringType               version                        1;	///< Required attribute.
/// Attribute "handle" of type xs:string.
  @ std::string*                         handle                         0;	///< Optional attribute.
    END OF INHERITED FROM wfs__BaseRequestType */
//  BEGIN SEQUENCE <xs:sequence minOccurs="0" maxOccurs="unbounded">
    std::vector<
    struct __wfs__TransactionType_sequence
    {
/// Reference "http://www.opengis.net/wfs/2.0":AbstractTransactionAction to abstract element.
//  BEGIN SUBSTITUTIONS <xs:element substitutionGroup="AbstractTransactionAction"> with choice of elements to substitute:
//    <Insert> <Update> <Replace> <Delete> <Native>
  $ int                                  __unionAbstractTransactionAction;	///< Union _wfs__union_TransactionType selector: set to SOAP_UNION__wfs__union_TransactionType_<fieldname>
/// Union for substitutionGroup wfs__AbstractTransactionAction.
    union _wfs__union_TransactionType
    {
/// Element "http://www.opengis.net/wfs/2.0":Insert.
    wfs__InsertType*                     Insert                        ;	///< Choice of element (one of multiple choices).
/// Element "http://www.opengis.net/wfs/2.0":Update.
    wfs__UpdateType*                     Update                        ;	///< Choice of element (one of multiple choices).
/// Element "http://www.opengis.net/wfs/2.0":Replace.
    wfs__ReplaceType*                    Replace                       ;	///< Choice of element (one of multiple choices).
/// Element "http://www.opengis.net/wfs/2.0":Delete.
    wfs__DeleteType*                     Delete                        ;	///< Choice of element (one of multiple choices).
/// Element "http://www.opengis.net/wfs/2.0":Native.
    wfs__NativeType*                     Native                        ;	///< Choice of element (one of multiple choices).
    }                                    union_TransactionType         ;
//  END OF SUBSTITUTIONS
    }>                                   __TransactionType_sequence     0;
//  END OF SEQUENCE
/// Attribute "lockId" of type xs:string.
  @ std::string*                         lockId                         0;	///< Optional attribute.
/// Attribute "releaseAction" of type "http://www.opengis.net/wfs/2.0":AllSomeType.
  @ enum wfs__AllSomeType                releaseAction                  0 = wfs__AllSomeType__ALL;	///< Optional attribute with default value="ALL".
/// Attribute "srsName" of type xs:anyURI.
  @ xsd__anyURI*                         srsName                        0;	///< Optional attribute.
};

/// @brief "http://www.opengis.net/wfs/2.0":InsertType is a complexType with complexContent extension of type "http://www.opengis.net/wfs/2.0":AbstractTransactionActionType.
///
/// @note class wfs__InsertType operations:
/// - wfs__InsertType* soap_new_wfs__InsertType(soap*) allocate and default initialize
/// - wfs__InsertType* soap_new_wfs__InsertType(soap*, int num) allocate and default initialize an array
/// - wfs__InsertType* soap_new_req_wfs__InsertType(soap*, ...) allocate, set required members
/// - wfs__InsertType* soap_new_set_wfs__InsertType(soap*, ...) allocate, set all public members
/// - wfs__InsertType::soap_default(soap*) default initialize members
/// - int soap_read_wfs__InsertType(soap*, wfs__InsertType*) deserialize from a stream
/// - int soap_write_wfs__InsertType(soap*, wfs__InsertType*) serialize to a stream
/// - wfs__InsertType* wfs__InsertType::soap_dup(soap*) returns deep copy of wfs__InsertType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - wfs__InsertType::soap_del() deep deletes wfs__InsertType data members, use only after wfs__InsertType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int wfs__InsertType::soap_type() returns SOAP_TYPE_wfs__InsertType or derived type identifier
class wfs__InsertType : public wfs__AbstractTransactionActionType
{ public:
/*  INHERITED FROM wfs__AbstractTransactionActionType:
/// Attribute "handle" of type xs:string.
  @ std::string*                         handle                         0;	///< Optional attribute.
    END OF INHERITED FROM wfs__AbstractTransactionActionType */
/// <any namespace="##other" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Size of the array of XML or DOM nodes is 1..unbounded.
    std::vector<_XML                   > __any                         0;	///< Store any element content in XML string.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/wfs/2.0":StandardInputParameters">.
/// Attribute "inputFormat" of type xs:string.
  @ std::string                          inputFormat                    0 = "application/gml+xml; version=3.2";	///< Optional attribute with default value="application/gml+xml; version=3.2".
/// Attribute "srsName" of type xs:anyURI.
  @ xsd__anyURI*                         srsName                        0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.opengis.net/wfs/2.0":UpdateType is a complexType with complexContent extension of type "http://www.opengis.net/wfs/2.0":AbstractTransactionActionType.
///
/// @note class wfs__UpdateType operations:
/// - wfs__UpdateType* soap_new_wfs__UpdateType(soap*) allocate and default initialize
/// - wfs__UpdateType* soap_new_wfs__UpdateType(soap*, int num) allocate and default initialize an array
/// - wfs__UpdateType* soap_new_req_wfs__UpdateType(soap*, ...) allocate, set required members
/// - wfs__UpdateType* soap_new_set_wfs__UpdateType(soap*, ...) allocate, set all public members
/// - wfs__UpdateType::soap_default(soap*) default initialize members
/// - int soap_read_wfs__UpdateType(soap*, wfs__UpdateType*) deserialize from a stream
/// - int soap_write_wfs__UpdateType(soap*, wfs__UpdateType*) serialize to a stream
/// - wfs__UpdateType* wfs__UpdateType::soap_dup(soap*) returns deep copy of wfs__UpdateType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - wfs__UpdateType::soap_del() deep deletes wfs__UpdateType data members, use only after wfs__UpdateType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int wfs__UpdateType::soap_type() returns SOAP_TYPE_wfs__UpdateType or derived type identifier
class wfs__UpdateType : public wfs__AbstractTransactionActionType
{ public:
/*  INHERITED FROM wfs__AbstractTransactionActionType:
/// Attribute "handle" of type xs:string.
  @ std::string*                         handle                         0;	///< Optional attribute.
    END OF INHERITED FROM wfs__AbstractTransactionActionType */
/// Vector of wfs__PropertyType* element refs of length 1..unbounded.
    std::vector<wfs__PropertyType*     > Property                       1;	///< Multiple elements.
/// Element reference "http://www.opengis.net/wfs/2.0:""http://www.opengis.net/fes/2.0":Filter.
    fes__FilterType*                     fes__Filter                    0;	///< Optional element.
/// Attribute "typeName" of type xs:QName.
  @ xsd__QName                           typeName                       1;	///< Required attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/wfs/2.0":StandardInputParameters">.
/// Attribute "inputFormat" of type xs:string.
  @ std::string                          inputFormat                    0 = "application/gml+xml; version=3.2";	///< Optional attribute with default value="application/gml+xml; version=3.2".
/// Attribute "srsName" of type xs:anyURI.
  @ xsd__anyURI*                         srsName                        0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.opengis.net/wfs/2.0":ReplaceType is a complexType with complexContent extension of type "http://www.opengis.net/wfs/2.0":AbstractTransactionActionType.
///
/// @note class wfs__ReplaceType operations:
/// - wfs__ReplaceType* soap_new_wfs__ReplaceType(soap*) allocate and default initialize
/// - wfs__ReplaceType* soap_new_wfs__ReplaceType(soap*, int num) allocate and default initialize an array
/// - wfs__ReplaceType* soap_new_req_wfs__ReplaceType(soap*, ...) allocate, set required members
/// - wfs__ReplaceType* soap_new_set_wfs__ReplaceType(soap*, ...) allocate, set all public members
/// - wfs__ReplaceType::soap_default(soap*) default initialize members
/// - int soap_read_wfs__ReplaceType(soap*, wfs__ReplaceType*) deserialize from a stream
/// - int soap_write_wfs__ReplaceType(soap*, wfs__ReplaceType*) serialize to a stream
/// - wfs__ReplaceType* wfs__ReplaceType::soap_dup(soap*) returns deep copy of wfs__ReplaceType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - wfs__ReplaceType::soap_del() deep deletes wfs__ReplaceType data members, use only after wfs__ReplaceType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int wfs__ReplaceType::soap_type() returns SOAP_TYPE_wfs__ReplaceType or derived type identifier
class wfs__ReplaceType : public wfs__AbstractTransactionActionType
{ public:
/*  INHERITED FROM wfs__AbstractTransactionActionType:
/// Attribute "handle" of type xs:string.
  @ std::string*                         handle                         0;	///< Optional attribute.
    END OF INHERITED FROM wfs__AbstractTransactionActionType */
/// <any namespace="##other">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
    _XML                                 __any                         0;	///< Store any element content in XML string.
/// Element reference "http://www.opengis.net/wfs/2.0:""http://www.opengis.net/fes/2.0":Filter.
    fes__FilterType*                     fes__Filter                    1;	///< Required element.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/wfs/2.0":StandardInputParameters">.
/// Attribute "inputFormat" of type xs:string.
  @ std::string                          inputFormat                    0 = "application/gml+xml; version=3.2";	///< Optional attribute with default value="application/gml+xml; version=3.2".
/// Attribute "srsName" of type xs:anyURI.
  @ xsd__anyURI*                         srsName                        0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.opengis.net/wfs/2.0":DeleteType is a complexType with complexContent extension of type "http://www.opengis.net/wfs/2.0":AbstractTransactionActionType.
///
/// @note class wfs__DeleteType operations:
/// - wfs__DeleteType* soap_new_wfs__DeleteType(soap*) allocate and default initialize
/// - wfs__DeleteType* soap_new_wfs__DeleteType(soap*, int num) allocate and default initialize an array
/// - wfs__DeleteType* soap_new_req_wfs__DeleteType(soap*, ...) allocate, set required members
/// - wfs__DeleteType* soap_new_set_wfs__DeleteType(soap*, ...) allocate, set all public members
/// - wfs__DeleteType::soap_default(soap*) default initialize members
/// - int soap_read_wfs__DeleteType(soap*, wfs__DeleteType*) deserialize from a stream
/// - int soap_write_wfs__DeleteType(soap*, wfs__DeleteType*) serialize to a stream
/// - wfs__DeleteType* wfs__DeleteType::soap_dup(soap*) returns deep copy of wfs__DeleteType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - wfs__DeleteType::soap_del() deep deletes wfs__DeleteType data members, use only after wfs__DeleteType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int wfs__DeleteType::soap_type() returns SOAP_TYPE_wfs__DeleteType or derived type identifier
class wfs__DeleteType : public wfs__AbstractTransactionActionType
{ public:
/*  INHERITED FROM wfs__AbstractTransactionActionType:
/// Attribute "handle" of type xs:string.
  @ std::string*                         handle                         0;	///< Optional attribute.
    END OF INHERITED FROM wfs__AbstractTransactionActionType */
/// Element reference "http://www.opengis.net/wfs/2.0:""http://www.opengis.net/fes/2.0":Filter.
    fes__FilterType*                     fes__Filter                    1;	///< Required element.
/// Attribute "typeName" of type xs:QName.
  @ xsd__QName                           typeName                       1;	///< Required attribute.
};

/// @brief "http://www.opengis.net/wfs/2.0":NativeType is a complexType with complexContent extension of type "http://www.opengis.net/wfs/2.0":AbstractTransactionActionType.
///
/// @note class wfs__NativeType operations:
/// - wfs__NativeType* soap_new_wfs__NativeType(soap*) allocate and default initialize
/// - wfs__NativeType* soap_new_wfs__NativeType(soap*, int num) allocate and default initialize an array
/// - wfs__NativeType* soap_new_req_wfs__NativeType(soap*, ...) allocate, set required members
/// - wfs__NativeType* soap_new_set_wfs__NativeType(soap*, ...) allocate, set all public members
/// - wfs__NativeType::soap_default(soap*) default initialize members
/// - int soap_read_wfs__NativeType(soap*, wfs__NativeType*) deserialize from a stream
/// - int soap_write_wfs__NativeType(soap*, wfs__NativeType*) serialize to a stream
/// - wfs__NativeType* wfs__NativeType::soap_dup(soap*) returns deep copy of wfs__NativeType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - wfs__NativeType::soap_del() deep deletes wfs__NativeType data members, use only after wfs__NativeType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int wfs__NativeType::soap_type() returns SOAP_TYPE_wfs__NativeType or derived type identifier
class wfs__NativeType : public wfs__AbstractTransactionActionType
{ public:
/*  INHERITED FROM wfs__AbstractTransactionActionType:
/// Attribute "handle" of type xs:string.
  @ std::string*                         handle                         0;	///< Optional attribute.
    END OF INHERITED FROM wfs__AbstractTransactionActionType */
/// <any namespace="##other" minOccurs="0">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
    _XML                                 __any                         0;	///< Store any element content in XML string.
/// Attribute "vendorId" of type xs:string.
  @ std::string                          vendorId                       1;	///< Required attribute.
/// Attribute "safeToIgnore" of type xs:boolean.
  @ bool                                 safeToIgnore                   1;	///< Required attribute.
/// Mixed content.
/// @note Mixed content is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for DOM (soap_dom_element) to store mixed content.
    _XML                                 __mixed                       0;	///< Store mixed content as an xsd:any (an XML string by default).
};

/// @brief Top-level root element "http://www.opengis.net/wfs/2.0":Title
/// @brief "http://www.opengis.net/wfs/2.0":Title is a complexType with simpleContent extension of type xs:string.
///
/// @note class _wfs__Title operations:
/// - _wfs__Title* soap_new__wfs__Title(soap*) allocate and default initialize
/// - _wfs__Title* soap_new__wfs__Title(soap*, int num) allocate and default initialize an array
/// - _wfs__Title* soap_new_req__wfs__Title(soap*, ...) allocate, set required members
/// - _wfs__Title* soap_new_set__wfs__Title(soap*, ...) allocate, set all public members
/// - _wfs__Title::soap_default(soap*) default initialize members
/// - int soap_read__wfs__Title(soap*, _wfs__Title*) deserialize from a stream
/// - int soap_write__wfs__Title(soap*, _wfs__Title*) serialize to a stream
/// - _wfs__Title* _wfs__Title::soap_dup(soap*) returns deep copy of _wfs__Title, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _wfs__Title::soap_del() deep deletes _wfs__Title data members, use only after _wfs__Title::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _wfs__Title::soap_type() returns SOAP_TYPE__wfs__Title or derived type identifier
class _wfs__Title
{ public:
/// __item wraps simpleContent of type xs:string.
    std::string                          __item                        ;
/// Imported attribute reference xml:lang.
  @ _xml__lang                           xml__lang                      0 = "en";	///< Optional attribute with default value="en".
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.opengis.net/wfs/2.0":Abstract
/// @brief "http://www.opengis.net/wfs/2.0":Abstract is a complexType with simpleContent extension of type xs:string.
///
/// @note class _wfs__Abstract operations:
/// - _wfs__Abstract* soap_new__wfs__Abstract(soap*) allocate and default initialize
/// - _wfs__Abstract* soap_new__wfs__Abstract(soap*, int num) allocate and default initialize an array
/// - _wfs__Abstract* soap_new_req__wfs__Abstract(soap*, ...) allocate, set required members
/// - _wfs__Abstract* soap_new_set__wfs__Abstract(soap*, ...) allocate, set all public members
/// - _wfs__Abstract::soap_default(soap*) default initialize members
/// - int soap_read__wfs__Abstract(soap*, _wfs__Abstract*) deserialize from a stream
/// - int soap_write__wfs__Abstract(soap*, _wfs__Abstract*) serialize to a stream
/// - _wfs__Abstract* _wfs__Abstract::soap_dup(soap*) returns deep copy of _wfs__Abstract, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _wfs__Abstract::soap_del() deep deletes _wfs__Abstract data members, use only after _wfs__Abstract::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _wfs__Abstract::soap_type() returns SOAP_TYPE__wfs__Abstract or derived type identifier
class _wfs__Abstract
{ public:
/// __item wraps simpleContent of type xs:string.
    std::string                          __item                        ;
/// Imported attribute reference xml:lang.
  @ _xml__lang                           xml__lang                      0 = "en";	///< Optional attribute with default value="en".
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.opengis.net/wfs/2.0":PropertyName
/// @brief "http://www.opengis.net/wfs/2.0":PropertyName is a complexType with simpleContent extension of type xs:QName.
///
/// @note class _wfs__PropertyName operations:
/// - _wfs__PropertyName* soap_new__wfs__PropertyName(soap*) allocate and default initialize
/// - _wfs__PropertyName* soap_new__wfs__PropertyName(soap*, int num) allocate and default initialize an array
/// - _wfs__PropertyName* soap_new_req__wfs__PropertyName(soap*, ...) allocate, set required members
/// - _wfs__PropertyName* soap_new_set__wfs__PropertyName(soap*, ...) allocate, set all public members
/// - _wfs__PropertyName::soap_default(soap*) default initialize members
/// - int soap_read__wfs__PropertyName(soap*, _wfs__PropertyName*) deserialize from a stream
/// - int soap_write__wfs__PropertyName(soap*, _wfs__PropertyName*) serialize to a stream
/// - _wfs__PropertyName* _wfs__PropertyName::soap_dup(soap*) returns deep copy of _wfs__PropertyName, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _wfs__PropertyName::soap_del() deep deletes _wfs__PropertyName data members, use only after _wfs__PropertyName::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _wfs__PropertyName::soap_type() returns SOAP_TYPE__wfs__PropertyName or derived type identifier
class _wfs__PropertyName
{ public:
/// __item wraps simpleContent of type xs:QName.
    xsd__QName                           __item                        ;
/// Attribute "resolvePath" of type xs:string.
  @ std::string*                         resolvePath                    0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/wfs/2.0":StandardResolveParameters">.
/// Attribute "resolve" of type "http://www.opengis.net/wfs/2.0":ResolveValueType.
  @ enum wfs__ResolveValueType           resolve                        0 = wfs__ResolveValueType__none;	///< Optional attribute with default value="none".
/// Attribute "resolveDepth" of type "http://www.opengis.net/wfs/2.0":positiveIntegerWithStar.
  @ wfs__positiveIntegerWithStar         resolveDepth                   0 = "*";	///< Optional attribute with default value="*".
/// Attribute "resolveTimeout" of type xs:positiveInteger.
  @ xsd__positiveInteger                 resolveTimeout                 0 /* @warning: cannot assign default/fixed value to this type */;	///< Optional attribute with default value="300".
//  END OF ATTRIBUTEGROUP
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.opengis.net/wfs/2.0":DropStoredQuery
/// @brief "http://www.opengis.net/wfs/2.0":DropStoredQuery is a complexType with complexContent extension of type "http://www.opengis.net/wfs/2.0":BaseRequestType.
///
/// @note class _wfs__DropStoredQuery operations:
/// - _wfs__DropStoredQuery* soap_new__wfs__DropStoredQuery(soap*) allocate and default initialize
/// - _wfs__DropStoredQuery* soap_new__wfs__DropStoredQuery(soap*, int num) allocate and default initialize an array
/// - _wfs__DropStoredQuery* soap_new_req__wfs__DropStoredQuery(soap*, ...) allocate, set required members
/// - _wfs__DropStoredQuery* soap_new_set__wfs__DropStoredQuery(soap*, ...) allocate, set all public members
/// - _wfs__DropStoredQuery::soap_default(soap*) default initialize members
/// - int soap_read__wfs__DropStoredQuery(soap*, _wfs__DropStoredQuery*) deserialize from a stream
/// - int soap_write__wfs__DropStoredQuery(soap*, _wfs__DropStoredQuery*) serialize to a stream
/// - _wfs__DropStoredQuery* _wfs__DropStoredQuery::soap_dup(soap*) returns deep copy of _wfs__DropStoredQuery, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _wfs__DropStoredQuery::soap_del() deep deletes _wfs__DropStoredQuery data members, use only after _wfs__DropStoredQuery::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _wfs__DropStoredQuery::soap_type() returns SOAP_TYPE__wfs__DropStoredQuery or derived type identifier
class _wfs__DropStoredQuery : public wfs__BaseRequestType
{ public:
/*  INHERITED FROM wfs__BaseRequestType:
/// Attribute "service" of type xs:string.
  @ std::string                          service                        1 == "WFS";	///< Required attribute with fixed value="WFS".
/// Attribute "version" of type "http://www.opengis.net/wfs/2.0":VersionStringType.
  @ wfs__VersionStringType               version                        1;	///< Required attribute.
/// Attribute "handle" of type xs:string.
  @ std::string*                         handle                         0;	///< Optional attribute.
    END OF INHERITED FROM wfs__BaseRequestType */
/// Attribute "id" of type xs:anyURI.
  @ xsd__anyURI                          id                             1;	///< Required attribute.
};

/// @brief "http://www.opengis.net/ows/1.1":BasicIdentificationType is a complexType with complexContent extension of type "http://www.opengis.net/ows/1.1":DescriptionType.
///
/// <PRE><BLOCKQUOTE>
///   Basic metadata identifying and describing a set of data.
/// </BLOCKQUOTE></PRE>
///
/// @note class ows__BasicIdentificationType operations:
/// - ows__BasicIdentificationType* soap_new_ows__BasicIdentificationType(soap*) allocate and default initialize
/// - ows__BasicIdentificationType* soap_new_ows__BasicIdentificationType(soap*, int num) allocate and default initialize an array
/// - ows__BasicIdentificationType* soap_new_req_ows__BasicIdentificationType(soap*, ...) allocate, set required members
/// - ows__BasicIdentificationType* soap_new_set_ows__BasicIdentificationType(soap*, ...) allocate, set all public members
/// - ows__BasicIdentificationType::soap_default(soap*) default initialize members
/// - int soap_read_ows__BasicIdentificationType(soap*, ows__BasicIdentificationType*) deserialize from a stream
/// - int soap_write_ows__BasicIdentificationType(soap*, ows__BasicIdentificationType*) serialize to a stream
/// - ows__BasicIdentificationType* ows__BasicIdentificationType::soap_dup(soap*) returns deep copy of ows__BasicIdentificationType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - ows__BasicIdentificationType::soap_del() deep deletes ows__BasicIdentificationType data members, use only after ows__BasicIdentificationType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int ows__BasicIdentificationType::soap_type() returns SOAP_TYPE_ows__BasicIdentificationType or derived type identifier
class ows__BasicIdentificationType : public ows__DescriptionType
{ public:
/*  INHERITED FROM ows__DescriptionType:
/// <PRE><BLOCKQUOTE>
///   Title of this resource, normally used for display to a human.
/// </BLOCKQUOTE></PRE>
///
/// Vector of ows__LanguageStringType* element refs of length 0..unbounded.
    std::vector<ows__LanguageStringType*> Title                          0;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   Brief narrative description of this resource, normally used for display to a human.
/// </BLOCKQUOTE></PRE>
///
/// Vector of ows__LanguageStringType* element refs of length 0..unbounded.
    std::vector<ows__LanguageStringType*> Abstract                       0;	///< Multiple elements.
/// Vector of ows__KeywordsType* element refs of length 0..unbounded.
    std::vector<ows__KeywordsType*     > Keywords                       0;	///< Multiple elements.
    END OF INHERITED FROM ows__DescriptionType */
/// <PRE><BLOCKQUOTE>
///   Optional unique identifier or name of this dataset.
/// </BLOCKQUOTE></PRE>
///
/// <PRE><BLOCKQUOTE>
///   Unique identifier or name of this dataset.
/// </BLOCKQUOTE></PRE>
///
/// Element reference "http://www.opengis.net/ows/1.1:""http://www.opengis.net/ows/1.1":Identifier.
    ows__CodeType*                       Identifier                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional unordered list of additional metadata about this data(set). A list of optional metadata elements for this data identification could be specified in the Implementation Specification for this service.
/// </BLOCKQUOTE></PRE>
///
/// Vector of ows__MetadataType* element refs of length 0..unbounded.
    std::vector<ows__MetadataType*     > Metadata                       0;	///< Multiple elements.
};

/// @brief "http://www.opengis.net/ows/1.1":WGS84BoundingBoxType is a complexType with complexContent restriction of type "http://www.opengis.net/ows/1.1":BoundingBoxType.
///
/// <PRE><BLOCKQUOTE>
///   XML encoded minimum rectangular bounding box (or region) parameter, surrounding all the associated data. This box is specialized for use with the 2D WGS 84 coordinate reference system with decimal values of longitude and latitude.
/// </BLOCKQUOTE></PRE>
///
/// <PRE><BLOCKQUOTE>
///   This type is adapted from the general BoundingBoxType, with modified contents and documentation for use with the 2D WGS 84 coordinate reference system.
/// </BLOCKQUOTE></PRE>
///
/// @note class ows__WGS84BoundingBoxType operations:
/// - ows__WGS84BoundingBoxType* soap_new_ows__WGS84BoundingBoxType(soap*) allocate and default initialize
/// - ows__WGS84BoundingBoxType* soap_new_ows__WGS84BoundingBoxType(soap*, int num) allocate and default initialize an array
/// - ows__WGS84BoundingBoxType* soap_new_req_ows__WGS84BoundingBoxType(soap*, ...) allocate, set required members
/// - ows__WGS84BoundingBoxType* soap_new_set_ows__WGS84BoundingBoxType(soap*, ...) allocate, set all public members
/// - ows__WGS84BoundingBoxType::soap_default(soap*) default initialize members
/// - int soap_read_ows__WGS84BoundingBoxType(soap*, ows__WGS84BoundingBoxType*) deserialize from a stream
/// - int soap_write_ows__WGS84BoundingBoxType(soap*, ows__WGS84BoundingBoxType*) serialize to a stream
/// - ows__WGS84BoundingBoxType* ows__WGS84BoundingBoxType::soap_dup(soap*) returns deep copy of ows__WGS84BoundingBoxType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - ows__WGS84BoundingBoxType::soap_del() deep deletes ows__WGS84BoundingBoxType data members, use only after ows__WGS84BoundingBoxType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int ows__WGS84BoundingBoxType::soap_type() returns SOAP_TYPE_ows__WGS84BoundingBoxType or derived type identifier
class ows__WGS84BoundingBoxType : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   Position of the bounding box corner at which the values of longitude and latitude normally are the algebraic minimums within this bounding box. For more information, see Subclauses 10.4.5 and C.13.
/// </BLOCKQUOTE></PRE>
///
/// Element "LowerCorner" of type "http://www.opengis.net/ows/1.1":PositionType2D.
    ows__PositionType2D                  LowerCorner                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Position of the bounding box corner at which the values of longitude and latitude normally are the algebraic minimums within this bounding box. For more information, see Subclauses 10.4.5 and C.13.
/// </BLOCKQUOTE></PRE>
///
/// Element "UpperCorner" of type "http://www.opengis.net/ows/1.1":PositionType2D.
    ows__PositionType2D                  UpperCorner                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   This attribute can be included when considered useful. When included, this attribute shall reference the 2D WGS 84 coordinate reference system with longitude before latitude and decimal values of longitude and latitude.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "crs" of type xs:anyURI.
  @ xsd__anyURI                          crs                            0 /* @warning: cannot assign default/fixed value to this type */;	///< Optional attribute with fixed value="urn:ogc:def:crs:OGC:2:84".
/// <PRE><BLOCKQUOTE>
///   The number of dimensions in this CRS (the length of a coordinate sequence in this use of the PositionType). This number is specified by the CRS definition, but can also be specified here.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "dimensions" of type xs:positiveInteger.
  @ xsd__positiveInteger                 dimensions                     0 /* @warning: cannot assign default/fixed value to this type */;	///< Optional attribute with fixed value="2".
/*  RESTRICTED FROM ows__BoundingBoxType:
/// <PRE><BLOCKQUOTE>
///   Usually references the definition of a CRS, as specified in [OGC Topic 2]. Such a CRS definition can be XML encoded using the gml:CoordinateReferenceSystemType in [GML 3.1]. For well known references, it is not required that a CRS definition exist at the location the URI points to. If no anyURI value is included, the applicable CRS must be either:
///   a) Specified outside the bounding box, but inside a data structure that includes this bounding box, as specified for a specific OWS use of this bounding box type.
///   b) Fixed and specified in the Implementation Specification for a specific OWS use of the bounding box type.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "crs" of type xs:anyURI.
  @ xsd__anyURI*                         crs_                           0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   The number of dimensions in this CRS (the length of a coordinate sequence in this use of the PositionType). This number is specified by the CRS definition, but can also be specified here.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "dimensions" of type xs:positiveInteger.
  @ xsd__positiveInteger*                dimensions_                    0;	///< Optional attribute.
    END OF RESTRICTED FROM ows__BoundingBoxType */
};

/// @brief "http://www.opengis.net/ows/1.1":LanguageStringType is a complexType with simpleContent extension of type xs:string.
///
/// <PRE><BLOCKQUOTE>
///   Text string with the language of the string identified as recommended in the XML 1.0 W3C Recommendation, section 2.12.
/// </BLOCKQUOTE></PRE>
///
/// @note class ows__LanguageStringType operations:
/// - ows__LanguageStringType* soap_new_ows__LanguageStringType(soap*) allocate and default initialize
/// - ows__LanguageStringType* soap_new_ows__LanguageStringType(soap*, int num) allocate and default initialize an array
/// - ows__LanguageStringType* soap_new_req_ows__LanguageStringType(soap*, ...) allocate, set required members
/// - ows__LanguageStringType* soap_new_set_ows__LanguageStringType(soap*, ...) allocate, set all public members
/// - ows__LanguageStringType::soap_default(soap*) default initialize members
/// - int soap_read_ows__LanguageStringType(soap*, ows__LanguageStringType*) deserialize from a stream
/// - int soap_write_ows__LanguageStringType(soap*, ows__LanguageStringType*) serialize to a stream
/// - ows__LanguageStringType* ows__LanguageStringType::soap_dup(soap*) returns deep copy of ows__LanguageStringType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - ows__LanguageStringType::soap_del() deep deletes ows__LanguageStringType data members, use only after ows__LanguageStringType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int ows__LanguageStringType::soap_type() returns SOAP_TYPE_ows__LanguageStringType or derived type identifier
class ows__LanguageStringType : public xsd__anyType
{ public:
/// __item wraps simpleContent of type xs:string.
    std::string                          __item                        ;
/// Imported attribute reference xml:lang.
  @ _xml__lang*                          xml__lang                      0;	///< Optional attribute.
};

/// @brief "http://www.opengis.net/ows/1.1":CodeType is a complexType with simpleContent extension of type xs:string.
///
/// <PRE><BLOCKQUOTE>
///   Name or code with an (optional) authority. If the codeSpace attribute is present, its value shall reference a dictionary, thesaurus, or authority for the name or code, such as the organisation who assigned the value, or the dictionary from which it is taken.
/// </BLOCKQUOTE></PRE>
///
/// <PRE><BLOCKQUOTE>
///   Type copied from basicTypes.xsd of GML 3 with documentation edited, for possible use outside the ServiceIdentification section of a service metadata document.
/// </BLOCKQUOTE></PRE>
///
/// @note class ows__CodeType operations:
/// - ows__CodeType* soap_new_ows__CodeType(soap*) allocate and default initialize
/// - ows__CodeType* soap_new_ows__CodeType(soap*, int num) allocate and default initialize an array
/// - ows__CodeType* soap_new_req_ows__CodeType(soap*, ...) allocate, set required members
/// - ows__CodeType* soap_new_set_ows__CodeType(soap*, ...) allocate, set all public members
/// - ows__CodeType::soap_default(soap*) default initialize members
/// - int soap_read_ows__CodeType(soap*, ows__CodeType*) deserialize from a stream
/// - int soap_write_ows__CodeType(soap*, ows__CodeType*) serialize to a stream
/// - ows__CodeType* ows__CodeType::soap_dup(soap*) returns deep copy of ows__CodeType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - ows__CodeType::soap_del() deep deletes ows__CodeType data members, use only after ows__CodeType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int ows__CodeType::soap_type() returns SOAP_TYPE_ows__CodeType or derived type identifier
class ows__CodeType : public xsd__anyType
{ public:
/// __item wraps simpleContent of type xs:string.
    std::string                          __item                        ;
/// Attribute "codeSpace" of type xs:anyURI.
  @ xsd__anyURI*                         codeSpace                      0;	///< Optional attribute.
};

/// @brief "http://www.opengis.net/ows/1.1":RequestMethodType is a complexType with complexContent extension of type "http://www.opengis.net/ows/1.1":OnlineResourceType.
///
/// <PRE><BLOCKQUOTE>
///   Connect point URL and any constraints for this HTTP request method for this operation request. In the OnlineResourceType, the xlink:href attribute in the xlink:simpleAttrs attribute group shall be used to contain this URL. The other attributes in the xlink:simpleAttrs attribute group should not be used.
/// </BLOCKQUOTE></PRE>
///
/// @note class ows__RequestMethodType operations:
/// - ows__RequestMethodType* soap_new_ows__RequestMethodType(soap*) allocate and default initialize
/// - ows__RequestMethodType* soap_new_ows__RequestMethodType(soap*, int num) allocate and default initialize an array
/// - ows__RequestMethodType* soap_new_req_ows__RequestMethodType(soap*, ...) allocate, set required members
/// - ows__RequestMethodType* soap_new_set_ows__RequestMethodType(soap*, ...) allocate, set all public members
/// - ows__RequestMethodType::soap_default(soap*) default initialize members
/// - int soap_read_ows__RequestMethodType(soap*, ows__RequestMethodType*) deserialize from a stream
/// - int soap_write_ows__RequestMethodType(soap*, ows__RequestMethodType*) serialize to a stream
/// - ows__RequestMethodType* ows__RequestMethodType::soap_dup(soap*) returns deep copy of ows__RequestMethodType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - ows__RequestMethodType::soap_del() deep deletes ows__RequestMethodType data members, use only after ows__RequestMethodType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int ows__RequestMethodType::soap_type() returns SOAP_TYPE_ows__RequestMethodType or derived type identifier
class ows__RequestMethodType : public ows__OnlineResourceType
{ public:
/*  INHERITED FROM ows__OnlineResourceType:
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
  @ enum xlink__typeType                 xlink__type                    0 == xlink__typeType__simple;	///< Optional attribute with fixed value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
  @ xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
  @ xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
  @ xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
  @ xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
  @ enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
  @ enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
    END OF INHERITED FROM ows__OnlineResourceType */
/// <PRE><BLOCKQUOTE>
///   Optional unordered list of valid domain constraints on non-parameter quantities that each apply to this request method for this operation. If one of these Constraint elements has the same "name" attribute as a Constraint element in the OperationsMetadata or Operation element, this Constraint element shall override the other one for this operation. The list of required and optional constraints for this request method for this operation shall be specified in the Implementation Specification for this service.
/// </BLOCKQUOTE></PRE>
///
/// Vector of ows__DomainType* of length 0..unbounded.
    std::vector<ows__DomainType*       > Constraint                     0;	///< Multiple elements.
};

/// @brief "http://www.opengis.net/ows/1.1":DomainType is a complexType with complexContent extension of type "http://www.opengis.net/ows/1.1":UnNamedDomainType.
///
/// <PRE><BLOCKQUOTE>
///   Valid domain (or allowed set of values) of one quantity, with its name or identifier.
/// </BLOCKQUOTE></PRE>
///
/// @note class ows__DomainType operations:
/// - ows__DomainType* soap_new_ows__DomainType(soap*) allocate and default initialize
/// - ows__DomainType* soap_new_ows__DomainType(soap*, int num) allocate and default initialize an array
/// - ows__DomainType* soap_new_req_ows__DomainType(soap*, ...) allocate, set required members
/// - ows__DomainType* soap_new_set_ows__DomainType(soap*, ...) allocate, set all public members
/// - ows__DomainType::soap_default(soap*) default initialize members
/// - int soap_read_ows__DomainType(soap*, ows__DomainType*) deserialize from a stream
/// - int soap_write_ows__DomainType(soap*, ows__DomainType*) serialize to a stream
/// - ows__DomainType* ows__DomainType::soap_dup(soap*) returns deep copy of ows__DomainType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - ows__DomainType::soap_del() deep deletes ows__DomainType data members, use only after ows__DomainType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int ows__DomainType::soap_type() returns SOAP_TYPE_ows__DomainType or derived type identifier
class ows__DomainType : public ows__UnNamedDomainType
{ public:
/*  INHERITED FROM ows__UnNamedDomainType:
//  BEGIN GROUP <xs:group name="PossibleValues">
/// <PRE><BLOCKQUOTE>
///   Specifies the possible values of this quantity.
/// </BLOCKQUOTE></PRE>
///
//  BEGIN CHOICE <xs:choice>
  $ int                                  __union_DomainType            ;	///< Union _ows__union_DomainType selector: set to SOAP_UNION__ows__union_DomainType_<fieldname>
    union _ows__union_DomainType
    {
/// <PRE><BLOCKQUOTE>
///   List of all the valid values and/or ranges of values for this quantity. For numeric quantities, signed values should be ordered from negative infinity to positive infinity.
/// </BLOCKQUOTE></PRE>
///
/// Element reference "http://www.opengis.net/ows/1.1:""http://www.opengis.net/ows/1.1":AllowedValues.
    _ows__AllowedValues*                 AllowedValues                 ;	///< Choice of element (one of multiple choices).
/// <PRE><BLOCKQUOTE>
///   Specifies that any value is allowed for this parameter.
/// </BLOCKQUOTE></PRE>
///
/// Element reference "http://www.opengis.net/ows/1.1:""http://www.opengis.net/ows/1.1":AnyValue.
    _ows__AnyValue*                      AnyValue                      ;	///< Choice of element (one of multiple choices).
/// <PRE><BLOCKQUOTE>
///   Specifies that no values are allowed for this parameter or quantity.
/// </BLOCKQUOTE></PRE>
///
/// Element reference "http://www.opengis.net/ows/1.1:""http://www.opengis.net/ows/1.1":NoValues.
    _ows__NoValues*                      NoValues                      ;	///< Choice of element (one of multiple choices).
/// <PRE><BLOCKQUOTE>
///   Reference to externally specified list of all the valid values and/or ranges of values for this quantity. (Informative: This element was simplified from the metaDataProperty element in GML 3.0.)
/// </BLOCKQUOTE></PRE>
///
/// Element reference "http://www.opengis.net/ows/1.1:""http://www.opengis.net/ows/1.1":ValuesReference.
    _ows__ValuesReference*               ValuesReference               ;	///< Choice of element (one of multiple choices).
    }                                    union_DomainType              ;
//  END OF CHOICE
//  END OF GROUP
/// <PRE><BLOCKQUOTE>
///   Optional default value for this quantity, which should be included when this quantity has a default value.
/// </BLOCKQUOTE></PRE>
///
/// <PRE><BLOCKQUOTE>
///   The default value for a quantity for which multiple values are allowed.
/// </BLOCKQUOTE></PRE>
///
/// Element reference "http://www.opengis.net/ows/1.1:""http://www.opengis.net/ows/1.1":DefaultValue.
    ows__ValueType*                      DefaultValue                   0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Meaning metadata should be referenced or included for each quantity.
/// </BLOCKQUOTE></PRE>
///
/// <PRE><BLOCKQUOTE>
///   Definition of the meaning or semantics of this set of values. This Meaning can provide more specific, complete, precise, machine accessible, and machine understandable semantics about this quantity, relative to other available semantic information. For example, other semantic information is often provided in "documentation" elements in XML Schemas or "description" elements in GML objects.
/// </BLOCKQUOTE></PRE>
///
/// Element reference "http://www.opengis.net/ows/1.1:""http://www.opengis.net/ows/1.1":Meaning.
    ows__DomainMetadataType*             Meaning                        0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   This data type metadata should be referenced or included for each quantity.
/// </BLOCKQUOTE></PRE>
///
/// <PRE><BLOCKQUOTE>
///   Definition of the data type of this set of values. In this case, the xlink:href attribute can reference a URN for a well-known data type. For example, such a URN could be a data type identification URN defined in the "ogc" URN namespace.
/// </BLOCKQUOTE></PRE>
///
/// Element reference "http://www.opengis.net/ows/1.1:""http://www.opengis.net/ows/1.1":DataType.
    ows__DomainMetadataType*             DataType                       0;	///< Optional element.
//  BEGIN GROUP <xs:group name="ValuesUnit" minOccurs="0">
/// <PRE><BLOCKQUOTE>
///   Indicates that this quantity has units or a reference system, and identifies the unit or reference system used by the AllowedValues or ValuesReference.
/// </BLOCKQUOTE></PRE>
///
//  BEGIN CHOICE <xs:choice minOccurs="0">
  $ int                                  __union_DomainType_            0;	///< Union _ows__union_DomainType_ selector: set to SOAP_UNION__ows__union_DomainType__<fieldname> or 0 to omit
    union _ows__union_DomainType_
    {
/// <PRE><BLOCKQUOTE>
///   Identifier of unit of measure of this set of values. Should be included then this set of values has units (and not a more complete reference system).
/// </BLOCKQUOTE></PRE>
///
/// <PRE><BLOCKQUOTE>
///   Definition of the unit of measure of this set of values. In this case, the xlink:href attribute can reference a URN for a well-known unit of measure (uom). For example, such a URN could be a UOM identification URN defined in the "ogc" URN namespace.
/// </BLOCKQUOTE></PRE>
///
/// Element reference "http://www.opengis.net/ows/1.1:""http://www.opengis.net/ows/1.1":UOM.
    ows__DomainMetadataType*             UOM                           ;	///< Choice of element (one of multiple choices).
/// <PRE><BLOCKQUOTE>
///   Identifier of reference system used by this set of values. Should be included then this set of values has a reference system (not just units).
/// </BLOCKQUOTE></PRE>
///
/// <PRE><BLOCKQUOTE>
///   Definition of the reference system used by this set of values, including the unit of measure whenever applicable (as is normal). In this case, the xlink:href attribute can reference a URN for a well-known reference system, such as for a coordinate reference system (CRS). For example, such a URN could be a CRS identification URN defined in the "ogc" URN namespace.
/// </BLOCKQUOTE></PRE>
///
/// Element reference "http://www.opengis.net/ows/1.1:""http://www.opengis.net/ows/1.1":ReferenceSystem.
    ows__DomainMetadataType*             ReferenceSystem               ;	///< Choice of element (one of multiple choices).
    }                                    union_DomainType_             ;
//  END OF CHOICE
//  END OF GROUP
/// <PRE><BLOCKQUOTE>
///   Optional unordered list of other metadata about this quantity. A list of required and optional other metadata elements for this quantity should be specified in the Implementation Specification for this service.
/// </BLOCKQUOTE></PRE>
///
/// Vector of ows__MetadataType* element refs of length 0..unbounded.
    std::vector<ows__MetadataType*     > Metadata                       0;	///< Multiple elements.
    END OF INHERITED FROM ows__UnNamedDomainType */
/// <PRE><BLOCKQUOTE>
///   Name or identifier of this quantity.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "name" of type xs:string.
  @ std::string                          name                           1;	///< Required attribute.
};

/// @brief "http://www.opengis.net/ows/1.1":ValueType is a complexType with simpleContent extension of type xs:string.
///
/// <PRE><BLOCKQUOTE>
///   A single value, encoded as a string. This type can be used for one value, for a spacing between allowed values, or for the default value of a parameter.
/// </BLOCKQUOTE></PRE>
///
/// @note class ows__ValueType operations:
/// - ows__ValueType* soap_new_ows__ValueType(soap*) allocate and default initialize
/// - ows__ValueType* soap_new_ows__ValueType(soap*, int num) allocate and default initialize an array
/// - ows__ValueType* soap_new_req_ows__ValueType(soap*, ...) allocate, set required members
/// - ows__ValueType* soap_new_set_ows__ValueType(soap*, ...) allocate, set all public members
/// - ows__ValueType::soap_default(soap*) default initialize members
/// - int soap_read_ows__ValueType(soap*, ows__ValueType*) deserialize from a stream
/// - int soap_write_ows__ValueType(soap*, ows__ValueType*) serialize to a stream
/// - ows__ValueType* ows__ValueType::soap_dup(soap*) returns deep copy of ows__ValueType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - ows__ValueType::soap_del() deep deletes ows__ValueType data members, use only after ows__ValueType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int ows__ValueType::soap_type() returns SOAP_TYPE_ows__ValueType or derived type identifier
class ows__ValueType : public xsd__anyType
{ public:
/// __item wraps simpleContent of type xs:string.
    std::string                          __item                        ;
};

/// @brief "http://www.opengis.net/ows/1.1":DomainMetadataType is a complexType with simpleContent extension of type xs:string.
///
/// <PRE><BLOCKQUOTE>
///   References metadata about a quantity, and provides a name for this metadata. (Informative: This element was simplified from the metaDataProperty element in GML 3.0.)
/// </BLOCKQUOTE></PRE>
///
/// @note class ows__DomainMetadataType operations:
/// - ows__DomainMetadataType* soap_new_ows__DomainMetadataType(soap*) allocate and default initialize
/// - ows__DomainMetadataType* soap_new_ows__DomainMetadataType(soap*, int num) allocate and default initialize an array
/// - ows__DomainMetadataType* soap_new_req_ows__DomainMetadataType(soap*, ...) allocate, set required members
/// - ows__DomainMetadataType* soap_new_set_ows__DomainMetadataType(soap*, ...) allocate, set all public members
/// - ows__DomainMetadataType::soap_default(soap*) default initialize members
/// - int soap_read_ows__DomainMetadataType(soap*, ows__DomainMetadataType*) deserialize from a stream
/// - int soap_write_ows__DomainMetadataType(soap*, ows__DomainMetadataType*) serialize to a stream
/// - ows__DomainMetadataType* ows__DomainMetadataType::soap_dup(soap*) returns deep copy of ows__DomainMetadataType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - ows__DomainMetadataType::soap_del() deep deletes ows__DomainMetadataType data members, use only after ows__DomainMetadataType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int ows__DomainMetadataType::soap_type() returns SOAP_TYPE_ows__DomainMetadataType or derived type identifier
class ows__DomainMetadataType : public xsd__anyType
{ public:
/// __item wraps simpleContent of type xs:string.
    std::string                          __item                        ;
/// Attribute reference "http://www.opengis.net/ows/1.1":"http://www.opengis.net/ows/1.1":reference.
/// <PRE><BLOCKQUOTE>
///   Reference to data or metadata recorded elsewhere, either external to this XML document or within it. Whenever practical, this attribute should be a URL from which this metadata can be electronically retrieved. Alternately, this attribute can reference a URN for well-known metadata. For example, such a URN could be a URN defined in the "ogc" URN namespace.
/// </BLOCKQUOTE></PRE>
///
  @ xsd__anyURI*                         ows__reference                 0;	///< Optional attribute.
};

/// @brief "http://www.opengis.net/ows/1.1":DatasetDescriptionSummaryBaseType is a complexType with complexContent extension of type "http://www.opengis.net/ows/1.1":DescriptionType.
///
/// <PRE><BLOCKQUOTE>
///   Typical dataset metadata in typical Contents section of an OWS service metadata (Capabilities) document. This type shall be extended and/or restricted if needed for specific OWS use, to include the specific Dataset description metadata needed.
/// </BLOCKQUOTE></PRE>
///
/// @note class ows__DatasetDescriptionSummaryBaseType operations:
/// - ows__DatasetDescriptionSummaryBaseType* soap_new_ows__DatasetDescriptionSummaryBaseType(soap*) allocate and default initialize
/// - ows__DatasetDescriptionSummaryBaseType* soap_new_ows__DatasetDescriptionSummaryBaseType(soap*, int num) allocate and default initialize an array
/// - ows__DatasetDescriptionSummaryBaseType* soap_new_req_ows__DatasetDescriptionSummaryBaseType(soap*, ...) allocate, set required members
/// - ows__DatasetDescriptionSummaryBaseType* soap_new_set_ows__DatasetDescriptionSummaryBaseType(soap*, ...) allocate, set all public members
/// - ows__DatasetDescriptionSummaryBaseType::soap_default(soap*) default initialize members
/// - int soap_read_ows__DatasetDescriptionSummaryBaseType(soap*, ows__DatasetDescriptionSummaryBaseType*) deserialize from a stream
/// - int soap_write_ows__DatasetDescriptionSummaryBaseType(soap*, ows__DatasetDescriptionSummaryBaseType*) serialize to a stream
/// - ows__DatasetDescriptionSummaryBaseType* ows__DatasetDescriptionSummaryBaseType::soap_dup(soap*) returns deep copy of ows__DatasetDescriptionSummaryBaseType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - ows__DatasetDescriptionSummaryBaseType::soap_del() deep deletes ows__DatasetDescriptionSummaryBaseType data members, use only after ows__DatasetDescriptionSummaryBaseType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int ows__DatasetDescriptionSummaryBaseType::soap_type() returns SOAP_TYPE_ows__DatasetDescriptionSummaryBaseType or derived type identifier
class ows__DatasetDescriptionSummaryBaseType : public ows__DescriptionType
{ public:
/*  INHERITED FROM ows__DescriptionType:
/// <PRE><BLOCKQUOTE>
///   Title of this resource, normally used for display to a human.
/// </BLOCKQUOTE></PRE>
///
/// Vector of ows__LanguageStringType* element refs of length 0..unbounded.
    std::vector<ows__LanguageStringType*> Title                          0;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   Brief narrative description of this resource, normally used for display to a human.
/// </BLOCKQUOTE></PRE>
///
/// Vector of ows__LanguageStringType* element refs of length 0..unbounded.
    std::vector<ows__LanguageStringType*> Abstract                       0;	///< Multiple elements.
/// Vector of ows__KeywordsType* element refs of length 0..unbounded.
    std::vector<ows__KeywordsType*     > Keywords                       0;	///< Multiple elements.
    END OF INHERITED FROM ows__DescriptionType */
/// <PRE><BLOCKQUOTE>
///   Unordered list of zero or more minimum bounding rectangles surrounding coverage data, using the WGS 84 CRS with decimal degrees and longitude before latitude. If no WGS 84 bounding box is recorded for a coverage, any such bounding boxes recorded for a higher level in a hierarchy of datasets shall apply to this coverage. If WGS 84 bounding box(es) are recorded for a coverage, any such bounding boxes recorded for a higher level in a hierarchy of datasets shall be ignored. For each lowest-level coverage in a hierarchy, at least one applicable WGS84BoundingBox shall be either recorded or inherited, to simplify searching for datasets that might overlap a specified region. If multiple WGS 84 bounding boxes are included, this shall be interpreted as the union of the areas of these bounding boxes.
/// </BLOCKQUOTE></PRE>
///
/// Vector of ows__WGS84BoundingBoxType* element refs of length 0..unbounded.
    std::vector<ows__WGS84BoundingBoxType*> WGS84BoundingBox               0;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   Unambiguous identifier or name of this coverage, unique for this server.
/// </BLOCKQUOTE></PRE>
///
/// Element "Identifier" of type "http://www.opengis.net/ows/1.1":CodeType.
    ows__CodeType*                       Identifier                     1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Unordered list of zero or more minimum bounding rectangles surrounding coverage data, in AvailableCRSs. Zero or more BoundingBoxes are allowed in addition to one or more WGS84BoundingBoxes to allow more precise specification of the Dataset area in AvailableCRSs. These Bounding Boxes shall not use any CRS not listed as an AvailableCRS. However, an AvailableCRS can be listed without a corresponding Bounding Box. If no such bounding box is recorded for a coverage, any such bounding boxes recorded for a higher level in a hierarchy of datasets shall apply to this coverage. If such bounding box(es) are recorded for a coverage, any such bounding boxes recorded for a higher level in a hierarchy of datasets shall be ignored. If multiple bounding boxes are included with the same CRS, this shall be interpreted as the union of the areas of these bounding boxes.
/// </BLOCKQUOTE></PRE>
///
//  BEGIN SUBSTITUTIONS <xs:element substitutionGroup="BoundingBox" minOccurs="0" maxOccurs="unbounded"> with choice of elements to substitute:
//    <WGS84BoundingBox>
  $ int                                  __sizeBoundingBox              0;
    class __ows__union_DatasetDescriptionSummaryBaseType
    {
  $ int                                  __unionBoundingBox             0;	///< Union _ows__union_DatasetDescriptionSummaryBaseType selector: set to SOAP_UNION__ows__union_DatasetDescriptionSummaryBaseType_<fieldname> or 0 to omit
/// Union for substitutionGroup ows__BoundingBox.
    union _ows__union_DatasetDescriptionSummaryBaseType
    {
/// <PRE><BLOCKQUOTE>
///   Unordered list of zero or more minimum bounding rectangles surrounding coverage data, in AvailableCRSs. Zero or more BoundingBoxes are allowed in addition to one or more WGS84BoundingBoxes to allow more precise specification of the Dataset area in AvailableCRSs. These Bounding Boxes shall not use any CRS not listed as an AvailableCRS. However, an AvailableCRS can be listed without a corresponding Bounding Box. If no such bounding box is recorded for a coverage, any such bounding boxes recorded for a higher level in a hierarchy of datasets shall apply to this coverage. If such bounding box(es) are recorded for a coverage, any such bounding boxes recorded for a higher level in a hierarchy of datasets shall be ignored. If multiple bounding boxes are included with the same CRS, this shall be interpreted as the union of the areas of these bounding boxes.
/// </BLOCKQUOTE></PRE>
///
/// Vector of ows__BoundingBoxType* element refs of length 0..unbounded.
    std::vector<ows__BoundingBoxType* > *BoundingBox                   ;	///< Choice of optional element (one of multiple choices).
/// Element "http://www.opengis.net/ows/1.1":WGS84BoundingBox.
    ows__WGS84BoundingBoxType*           WGS84BoundingBox_             ;	///< Choice of element (one of multiple choices).
    }                                    union_DatasetDescriptionSummaryBaseType;
    }                                   *__union_DatasetDescriptionSummaryBaseType;
//  END OF SUBSTITUTIONS
/// <PRE><BLOCKQUOTE>
///   Optional unordered list of additional metadata about this dataset. A list of optional metadata elements for this dataset description could be specified in the Implementation Specification for this service.
/// </BLOCKQUOTE></PRE>
///
/// Vector of ows__MetadataType* element refs of length 0..unbounded.
    std::vector<ows__MetadataType*     > Metadata                       0;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   Metadata describing zero or more unordered subsidiary datasets available from this server.
/// </BLOCKQUOTE></PRE>
///
/// Vector of ows__DatasetDescriptionSummaryBaseType* element refs of length 0..unbounded.
    std::vector<ows__DatasetDescriptionSummaryBaseType*> DatasetDescriptionSummary      0;	///< Multiple elements.
};

/// @brief "http://www.opengis.net/ows/1.1":ReferenceType is a complexType with complexContent extension of type "http://www.opengis.net/ows/1.1":AbstractReferenceBaseType.
///
/// <PRE><BLOCKQUOTE>
///   Complete reference to a remote or local resource, allowing including metadata about that resource.
/// </BLOCKQUOTE></PRE>
///
/// @note class ows__ReferenceType operations:
/// - ows__ReferenceType* soap_new_ows__ReferenceType(soap*) allocate and default initialize
/// - ows__ReferenceType* soap_new_ows__ReferenceType(soap*, int num) allocate and default initialize an array
/// - ows__ReferenceType* soap_new_req_ows__ReferenceType(soap*, ...) allocate, set required members
/// - ows__ReferenceType* soap_new_set_ows__ReferenceType(soap*, ...) allocate, set all public members
/// - ows__ReferenceType::soap_default(soap*) default initialize members
/// - int soap_read_ows__ReferenceType(soap*, ows__ReferenceType*) deserialize from a stream
/// - int soap_write_ows__ReferenceType(soap*, ows__ReferenceType*) serialize to a stream
/// - ows__ReferenceType* ows__ReferenceType::soap_dup(soap*) returns deep copy of ows__ReferenceType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - ows__ReferenceType::soap_del() deep deletes ows__ReferenceType data members, use only after ows__ReferenceType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int ows__ReferenceType::soap_type() returns SOAP_TYPE_ows__ReferenceType or derived type identifier
class ows__ReferenceType : public ows__AbstractReferenceBaseType
{ public:
/*  INHERITED FROM ows__AbstractReferenceBaseType:
/// Attribute "type" of type xs:string.
  @ std::string                          ows__type                      0 == "simple";	///< Optional attribute with fixed value="simple".
/// <PRE><BLOCKQUOTE>
///   Reference to a remote resource or local payload. A remote resource is typically addressed by a URL. For a local payload (such as a multipart mime message), the xlink:href must start with the prefix cid:.
/// </BLOCKQUOTE></PRE>
///
/// Attribute reference "http://www.opengis.net/ows/1.1":"http://www.w3.org/1999/xlink":href.
  @ xlink__hrefType                      xlink__href                    1;	///< Required attribute.
/// <PRE><BLOCKQUOTE>
///   Reference to a resource that describes the role of this reference. When no value is supplied, no particular role value is to be inferred.
/// </BLOCKQUOTE></PRE>
///
/// Attribute reference "http://www.opengis.net/ows/1.1":"http://www.w3.org/1999/xlink":role.
  @ xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Although allowed, this attribute is not expected to be useful in this application of xlink:simpleAttrs.
/// </BLOCKQUOTE></PRE>
///
/// Attribute reference "http://www.opengis.net/ows/1.1":"http://www.w3.org/1999/xlink":arcrole.
  @ xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Describes the meaning of the referenced resource in a human-readable fashion.
/// </BLOCKQUOTE></PRE>
///
/// Attribute reference "http://www.opengis.net/ows/1.1":"http://www.w3.org/1999/xlink":title.
  @ xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Although allowed, this attribute is not expected to be useful in this application of xlink:simpleAttrs.
/// </BLOCKQUOTE></PRE>
///
/// Attribute reference "http://www.opengis.net/ows/1.1":"http://www.w3.org/1999/xlink":show.
  @ enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Although allowed, this attribute is not expected to be useful in this application of xlink:simpleAttrs.
/// </BLOCKQUOTE></PRE>
///
/// Attribute reference "http://www.opengis.net/ows/1.1":"http://www.w3.org/1999/xlink":actuate.
  @ enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
    END OF INHERITED FROM ows__AbstractReferenceBaseType */
/// <PRE><BLOCKQUOTE>
///   Optional unique identifier of the referenced resource.
/// </BLOCKQUOTE></PRE>
///
/// <PRE><BLOCKQUOTE>
///   Unique identifier or name of this dataset.
/// </BLOCKQUOTE></PRE>
///
/// Element reference "http://www.opengis.net/ows/1.1:""http://www.opengis.net/ows/1.1":Identifier.
    ows__CodeType*                       Identifier                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Brief narrative description of this resource, normally used for display to a human.
/// </BLOCKQUOTE></PRE>
///
/// Vector of ows__LanguageStringType* element refs of length 0..unbounded.
    std::vector<ows__LanguageStringType*> Abstract                       0;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   The format of the referenced resource. This element is omitted when the mime type is indicated in the http header of the reference.
/// </BLOCKQUOTE></PRE>
///
/// Element "Format" of type "http://www.opengis.net/ows/1.1":MimeType.
    ows__MimeType*                       Format                         0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional unordered list of additional metadata about this resource. A list of optional metadata elements for this ReferenceType could be specified in the Implementation Specification for each use of this type in a specific OWS.
/// </BLOCKQUOTE></PRE>
///
/// Vector of ows__MetadataType* element refs of length 0..unbounded.
    std::vector<ows__MetadataType*     > Metadata                       0;	///< Multiple elements.
};

/// @brief Top-level root element "http://www.opengis.net/ows/1.1":ServiceIdentification
/// <PRE><BLOCKQUOTE>
///   General metadata for this specific server. This XML Schema of this section shall be the same for all OWS.
/// </BLOCKQUOTE></PRE>
///
/// @brief "http://www.opengis.net/ows/1.1":ServiceIdentification is a complexType with complexContent extension of type "http://www.opengis.net/ows/1.1":DescriptionType.
///
/// @note class _ows__ServiceIdentification operations:
/// - _ows__ServiceIdentification* soap_new__ows__ServiceIdentification(soap*) allocate and default initialize
/// - _ows__ServiceIdentification* soap_new__ows__ServiceIdentification(soap*, int num) allocate and default initialize an array
/// - _ows__ServiceIdentification* soap_new_req__ows__ServiceIdentification(soap*, ...) allocate, set required members
/// - _ows__ServiceIdentification* soap_new_set__ows__ServiceIdentification(soap*, ...) allocate, set all public members
/// - _ows__ServiceIdentification::soap_default(soap*) default initialize members
/// - int soap_read__ows__ServiceIdentification(soap*, _ows__ServiceIdentification*) deserialize from a stream
/// - int soap_write__ows__ServiceIdentification(soap*, _ows__ServiceIdentification*) serialize to a stream
/// - _ows__ServiceIdentification* _ows__ServiceIdentification::soap_dup(soap*) returns deep copy of _ows__ServiceIdentification, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _ows__ServiceIdentification::soap_del() deep deletes _ows__ServiceIdentification data members, use only after _ows__ServiceIdentification::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _ows__ServiceIdentification::soap_type() returns SOAP_TYPE__ows__ServiceIdentification or derived type identifier
class _ows__ServiceIdentification : public ows__DescriptionType
{ public:
/*  INHERITED FROM ows__DescriptionType:
/// <PRE><BLOCKQUOTE>
///   Title of this resource, normally used for display to a human.
/// </BLOCKQUOTE></PRE>
///
/// Vector of ows__LanguageStringType* element refs of length 0..unbounded.
    std::vector<ows__LanguageStringType*> Title                          0;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   Brief narrative description of this resource, normally used for display to a human.
/// </BLOCKQUOTE></PRE>
///
/// Vector of ows__LanguageStringType* element refs of length 0..unbounded.
    std::vector<ows__LanguageStringType*> Abstract                       0;	///< Multiple elements.
/// Vector of ows__KeywordsType* element refs of length 0..unbounded.
    std::vector<ows__KeywordsType*     > Keywords                       0;	///< Multiple elements.
    END OF INHERITED FROM ows__DescriptionType */
/// <PRE><BLOCKQUOTE>
///   A service type name from a registry of services. For example, the values of the codeSpace URI and name and code string may be "OGC" and "catalogue." This type name is normally used for machine-to-machine communication.
/// </BLOCKQUOTE></PRE>
///
/// Element "ServiceType" of type "http://www.opengis.net/ows/1.1":CodeType.
    ows__CodeType*                       ServiceType                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Unordered list of one or more versions of this service type implemented by this server. This information is not adequate for version negotiation, and shall not be used for that purpose.
/// </BLOCKQUOTE></PRE>
///
/// Vector of ows__VersionType of length 1..unbounded.
    std::vector<ows__VersionType       > ServiceTypeVersion             1;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   Unordered list of identifiers of Application Profiles that are implemented by this server. This element should be included for each specified application profile implemented by this server. The identifier value should be specified by each Application Profile. If this element is omitted, no meaning is implied.
/// </BLOCKQUOTE></PRE>
///
/// Vector of xsd__anyURI of length 0..unbounded.
    std::vector<xsd__anyURI            > Profile                        0;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   If this element is omitted, no meaning is implied.
/// </BLOCKQUOTE></PRE>
///
/// <PRE><BLOCKQUOTE>
///   Fees and terms for retrieving data from or otherwise using this server, including the monetary units as specified in ISO 4217. The reserved value NONE (case insensitive) shall be used to mean no fees or terms.
/// </BLOCKQUOTE></PRE>
///
/// Element reference "http://www.opengis.net/ows/1.1:""http://www.opengis.net/ows/1.1":Fees.
    std::string*                         Fees                           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Unordered list of access constraints applied to assure the protection of privacy or intellectual property, and any other restrictions on retrieving or using data from or otherwise using this server. The reserved value NONE (case insensitive) shall be used to mean no access constraints are imposed. When this element is omitted, no meaning is implied.
/// </BLOCKQUOTE></PRE>
///
/// <PRE><BLOCKQUOTE>
///   Access constraint applied to assure the protection of privacy or intellectual property, or any other restrictions on retrieving or using data from or otherwise using this server. The reserved value NONE (case insensitive) shall be used to mean no access constraints are imposed.
/// </BLOCKQUOTE></PRE>
///
/// Vector of std::string element refs of length 0..unbounded.
    std::vector<std::string            > AccessConstraints              0;	///< Multiple elements.
};

/// @brief Top-level root element "http://www.opengis.net/ows/1.1":ValuesReference
/// <PRE><BLOCKQUOTE>
///   Reference to externally specified list of all the valid values and/or ranges of values for this quantity. (Informative: This element was simplified from the metaDataProperty element in GML 3.0.)
/// </BLOCKQUOTE></PRE>
///
/// @brief "http://www.opengis.net/ows/1.1":ValuesReference is a complexType with simpleContent extension of type xs:string.
///
/// @note class _ows__ValuesReference operations:
/// - _ows__ValuesReference* soap_new__ows__ValuesReference(soap*) allocate and default initialize
/// - _ows__ValuesReference* soap_new__ows__ValuesReference(soap*, int num) allocate and default initialize an array
/// - _ows__ValuesReference* soap_new_req__ows__ValuesReference(soap*, ...) allocate, set required members
/// - _ows__ValuesReference* soap_new_set__ows__ValuesReference(soap*, ...) allocate, set all public members
/// - _ows__ValuesReference::soap_default(soap*) default initialize members
/// - int soap_read__ows__ValuesReference(soap*, _ows__ValuesReference*) deserialize from a stream
/// - int soap_write__ows__ValuesReference(soap*, _ows__ValuesReference*) serialize to a stream
/// - _ows__ValuesReference* _ows__ValuesReference::soap_dup(soap*) returns deep copy of _ows__ValuesReference, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _ows__ValuesReference::soap_del() deep deletes _ows__ValuesReference data members, use only after _ows__ValuesReference::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _ows__ValuesReference::soap_type() returns SOAP_TYPE__ows__ValuesReference or derived type identifier
class _ows__ValuesReference
{ public:
/// __item wraps simpleContent of type xs:string.
    std::string                          __item                        ;
/// Attribute reference "http://www.opengis.net/ows/1.1":"http://www.opengis.net/ows/1.1":reference.
/// <PRE><BLOCKQUOTE>
///   Reference to data or metadata recorded elsewhere, either external to this XML document or within it. Whenever practical, this attribute should be a URL from which this metadata can be electronically retrieved. Alternately, this attribute can reference a URN for well-known metadata. For example, such a URN could be a URN defined in the "ogc" URN namespace.
/// </BLOCKQUOTE></PRE>
///
  @ xsd__anyURI                          ows__reference                 1;	///< Required attribute.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://inspire.ec.europa.eu/schemas/inspire_dls/1.0":ExtendedCapabilitiesType is a complexType with complexContent extension of type "http://inspire.ec.europa.eu/schemas/common/1.0":ExtendedCapabilitiesType.
///
/// <PRE><BLOCKQUOTE>
///   Extended capabilities for OGC WFS 2.0 services
/// </BLOCKQUOTE></PRE>
///
/// @note class idls__ExtendedCapabilitiesType operations:
/// - idls__ExtendedCapabilitiesType* soap_new_idls__ExtendedCapabilitiesType(soap*) allocate and default initialize
/// - idls__ExtendedCapabilitiesType* soap_new_idls__ExtendedCapabilitiesType(soap*, int num) allocate and default initialize an array
/// - idls__ExtendedCapabilitiesType* soap_new_req_idls__ExtendedCapabilitiesType(soap*, ...) allocate, set required members
/// - idls__ExtendedCapabilitiesType* soap_new_set_idls__ExtendedCapabilitiesType(soap*, ...) allocate, set all public members
/// - idls__ExtendedCapabilitiesType::soap_default(soap*) default initialize members
/// - int soap_read_idls__ExtendedCapabilitiesType(soap*, idls__ExtendedCapabilitiesType*) deserialize from a stream
/// - int soap_write_idls__ExtendedCapabilitiesType(soap*, idls__ExtendedCapabilitiesType*) serialize to a stream
/// - idls__ExtendedCapabilitiesType* idls__ExtendedCapabilitiesType::soap_dup(soap*) returns deep copy of idls__ExtendedCapabilitiesType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - idls__ExtendedCapabilitiesType::soap_del() deep deletes idls__ExtendedCapabilitiesType data members, use only after idls__ExtendedCapabilitiesType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int idls__ExtendedCapabilitiesType::soap_type() returns SOAP_TYPE_idls__ExtendedCapabilitiesType or derived type identifier
class idls__ExtendedCapabilitiesType : public icommon__ExtendedCapabilitiesType
{ public:
/*  INHERITED FROM icommon__ExtendedCapabilitiesType:
//  BEGIN CHOICE <xs:choice>
/// @note <xs:choice> with embedded <xs:sequence> or <xs:group> prevents the use of a union for <xs:choice>. Instead of being members of a union, the following members are declared optional. Only one sequence of members should be non-NULL by choice.
//  BEGIN SEQUENCE <xs:sequence>
/// <PRE><BLOCKQUOTE>
///   Scenario 1: Mandatory MetadataUrl element pointing to an INSPIRE Compliant ISO metadata document plus language parameters
/// </BLOCKQUOTE></PRE>
///
/// Element "MetadataUrl" of type "http://inspire.ec.europa.eu/schemas/common/1.0":resourceLocatorType.
    icommon__resourceLocatorType*        MetadataUrl                   ;	///< Choice of element (one of multiple choices).
/// Element "SupportedLanguages" of type "http://inspire.ec.europa.eu/schemas/common/1.0":supportedLanguagesType.
    icommon__supportedLanguagesType*     SupportedLanguages            ;	///< Choice of element (one of multiple choices).
/// Element "ResponseLanguage" of type "http://inspire.ec.europa.eu/schemas/common/1.0":languageElementISO6392B.
    icommon__languageElementISO6392B*    ResponseLanguage              ;	///< Choice of element (one of multiple choices).
//  END OF SEQUENCE
//  BEGIN SEQUENCE <xs:sequence>
/// <PRE><BLOCKQUOTE>
///   Scenario 2: Mandatory (where appropriate) metadata elements not mapped to standard capabilities, plus mandatory language parameters, plus OPTIONAL MetadataUrl pointing to an INSPIRE Compliant ISO metadata document
/// </BLOCKQUOTE></PRE>
///
/// <PRE><BLOCKQUOTE>
///   Mandatory linkage to the network service
/// </BLOCKQUOTE></PRE>
///
/// Vector of icommon__resourceLocatorType* of length 1..unbounded.
    std::vector<icommon__resourceLocatorType*> ResourceLocator               ;	///< Choice of element (one of multiple choices).
/// Element "ResourceType" of type "http://inspire.ec.europa.eu/schemas/common/1.0":serviceSpatialDataResourceType.
    enum icommon__serviceSpatialDataResourceType*  ResourceType                  ;	///< Choice of element (one of multiple choices).
/// Vector of icommon__temporalReference* of length 1..unbounded.
    std::vector<icommon__temporalReference*> TemporalReference             ;	///< Choice of element (one of multiple choices).
/// Vector of icommon__conformity* of length 1..unbounded.
    std::vector<icommon__conformity*   > Conformity                    ;	///< Choice of element (one of multiple choices).
/// Vector of icommon__metadataPointOfContact* of length 1..unbounded.
    std::vector<icommon__metadataPointOfContact*> MetadataPointOfContact        ;	///< Choice of element (one of multiple choices).
/// Element "MetadataDate" of type "http://inspire.ec.europa.eu/schemas/common/1.0":iso8601Date.
    icommon__iso8601Date*                MetadataDate                  ;	///< Choice of element (one of multiple choices).
/// Element "SpatialDataServiceType" of type "http://inspire.ec.europa.eu/schemas/common/1.0":spatialDataServiceType.
    enum icommon__spatialDataServiceType*  SpatialDataServiceType        ;	///< Choice of element (one of multiple choices).
/// Vector of icommon__classificationOfSpatialDataService* of length 1..unbounded.
    std::vector<icommon__classificationOfSpatialDataService*> MandatoryKeyword              ;	///< Choice of element (one of multiple choices).
/// <PRE><BLOCKQUOTE>
///   If the resource is a spatial data service, at least one keyword from Part D.4 shall be provided.
/// </BLOCKQUOTE></PRE>
///
/// Vector of icommon__keyword* of length 0..unbounded.
    std::vector<icommon__keyword*      > Keyword                       ;	///< Choice of optional element (one of multiple choices).
/// Element "SupportedLanguages" of type "http://inspire.ec.europa.eu/schemas/common/1.0":supportedLanguagesType.
    icommon__supportedLanguagesType*     SupportedLanguages_           ;	///< Choice of element (one of multiple choices).
/// Element "ResponseLanguage" of type "http://inspire.ec.europa.eu/schemas/common/1.0":languageElementISO6392B.
    icommon__languageElementISO6392B*    ResponseLanguage_             ;	///< Choice of element (one of multiple choices).
/// Element "MetadataUrl" of type "http://inspire.ec.europa.eu/schemas/common/1.0":resourceLocatorType.
    icommon__resourceLocatorType*        MetadataUrl_                  ;	///< Choice of optional element (one of multiple choices).
//  END OF SEQUENCE
//  END OF CHOICE
    END OF INHERITED FROM icommon__ExtendedCapabilitiesType */
/// <PRE><BLOCKQUOTE>
///   For each spatial data resource served by the Download Service, the most current Unique Resource Identifier shall be listed here
/// </BLOCKQUOTE></PRE>
///
/// Vector of icommon__uniqueResourceIdentifier* of length 1..unbounded.
    std::vector<icommon__uniqueResourceIdentifier*> SpatialDataSetIdentifier       1;	///< Multiple elements.
};

/// @brief "http://www.opengis.net/fes/2.0":AbstractAdhocQueryExpressionType is an abstract complexType with complexContent extension of type "http://www.opengis.net/fes/2.0":AbstractQueryExpressionType.
///
/// @note class fes__AbstractAdhocQueryExpressionType operations:
/// - fes__AbstractAdhocQueryExpressionType* soap_new_fes__AbstractAdhocQueryExpressionType(soap*) allocate and default initialize
/// - fes__AbstractAdhocQueryExpressionType* soap_new_fes__AbstractAdhocQueryExpressionType(soap*, int num) allocate and default initialize an array
/// - fes__AbstractAdhocQueryExpressionType* soap_new_req_fes__AbstractAdhocQueryExpressionType(soap*, ...) allocate, set required members
/// - fes__AbstractAdhocQueryExpressionType* soap_new_set_fes__AbstractAdhocQueryExpressionType(soap*, ...) allocate, set all public members
/// - fes__AbstractAdhocQueryExpressionType::soap_default(soap*) default initialize members
/// - int soap_read_fes__AbstractAdhocQueryExpressionType(soap*, fes__AbstractAdhocQueryExpressionType*) deserialize from a stream
/// - int soap_write_fes__AbstractAdhocQueryExpressionType(soap*, fes__AbstractAdhocQueryExpressionType*) serialize to a stream
/// - fes__AbstractAdhocQueryExpressionType* fes__AbstractAdhocQueryExpressionType::soap_dup(soap*) returns deep copy of fes__AbstractAdhocQueryExpressionType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - fes__AbstractAdhocQueryExpressionType::soap_del() deep deletes fes__AbstractAdhocQueryExpressionType data members, use only after fes__AbstractAdhocQueryExpressionType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int fes__AbstractAdhocQueryExpressionType::soap_type() returns SOAP_TYPE_fes__AbstractAdhocQueryExpressionType or derived type identifier
class fes__AbstractAdhocQueryExpressionType : public fes__AbstractQueryExpressionType
{ public:
/*  INHERITED FROM fes__AbstractQueryExpressionType:
/// Attribute "handle" of type xs:string.
  @ std::string*                         handle                         0;	///< Optional attribute.
    END OF INHERITED FROM fes__AbstractQueryExpressionType */
/// Reference "http://www.opengis.net/fes/2.0":AbstractProjectionClause to abstract element.
//  BEGIN SUBSTITUTIONS <xs:element substitutionGroup="AbstractProjectionClause" minOccurs="0" maxOccurs="unbounded"> with choice of elements to substitute:
//    <PropertyName> <PropertyName>
  $ int                                  __sizeAbstractProjectionClause 0;
    class __fes__union_AbstractAdhocQueryExpressionType
    {
  $ int                                  __unionAbstractProjectionClause 0;	///< Union _fes__union_AbstractAdhocQueryExpressionType selector: set to SOAP_UNION__fes__union_AbstractAdhocQueryExpressionType_<fieldname> or 0 to omit
/// Union for substitutionGroup fes__AbstractProjectionClause.
    union _fes__union_AbstractAdhocQueryExpressionType
    {
/// Element "http://www.opengis.net/wfs/2.0":PropertyName.
    _wfs__PropertyName*                  wfs__PropertyName             ;	///< Choice of element (one of multiple choices).
/// Element "http://www.opengis.net/wfs/2.0":PropertyName.
    _wfs__PropertyName*                  wfs__PropertyName_            ;	///< Choice of element (one of multiple choices).
    }                                    union_AbstractAdhocQueryExpressionType;
    }                                   *__union_AbstractAdhocQueryExpressionType;
//  END OF SUBSTITUTIONS
/// Reference "http://www.opengis.net/fes/2.0":AbstractSelectionClause to abstract element.
//  BEGIN SUBSTITUTIONS <xs:element substitutionGroup="AbstractSelectionClause" minOccurs="0"> with choice of elements to substitute:
//    <Filter>
  $ int                                  __unionAbstractSelectionClause 0;	///< Union _fes__union_AbstractAdhocQueryExpressionType_ selector: set to SOAP_UNION__fes__union_AbstractAdhocQueryExpressionType__<fieldname> or 0 to omit
/// Union for substitutionGroup fes__AbstractSelectionClause.
    union _fes__union_AbstractAdhocQueryExpressionType_
    {
/// Element "http://www.opengis.net/fes/2.0":Filter.
    fes__FilterType*                     Filter                        ;	///< Choice of element (one of multiple choices).
    }                                    union_AbstractAdhocQueryExpressionType_;
//  END OF SUBSTITUTIONS
/// Reference "http://www.opengis.net/fes/2.0":AbstractSortingClause to abstract element.
//  BEGIN SUBSTITUTIONS <xs:element substitutionGroup="AbstractSortingClause" minOccurs="0"> with choice of elements to substitute:
//    <SortBy>
  $ int                                  __unionAbstractSortingClause   0;	///< Union _fes__union_AbstractAdhocQueryExpressionType__ selector: set to SOAP_UNION__fes__union_AbstractAdhocQueryExpressionType___<fieldname> or 0 to omit
/// Union for substitutionGroup fes__AbstractSortingClause.
    union _fes__union_AbstractAdhocQueryExpressionType__
    {
/// Element "http://www.opengis.net/fes/2.0":SortBy.
    fes__SortByType*                     SortBy                        ;	///< Choice of element (one of multiple choices).
    }                                    union_AbstractAdhocQueryExpressionType__;
//  END OF SUBSTITUTIONS
/// Attribute "typeNames" of type "http://www.opengis.net/fes/2.0":TypeNamesListType.
  @ fes__TypeNamesListType               typeNames                      1;	///< Required attribute.
/// Attribute "aliases" of type "http://www.opengis.net/fes/2.0":AliasesType.
  @ fes__AliasesType*                    aliases                        0;	///< Optional attribute.
};

/// @brief "http://www.opengis.net/fes/2.0":FilterType is a complexType with complexContent extension of type "http://www.opengis.net/fes/2.0":AbstractSelectionClauseType.
///
/// @note class fes__FilterType operations:
/// - fes__FilterType* soap_new_fes__FilterType(soap*) allocate and default initialize
/// - fes__FilterType* soap_new_fes__FilterType(soap*, int num) allocate and default initialize an array
/// - fes__FilterType* soap_new_req_fes__FilterType(soap*, ...) allocate, set required members
/// - fes__FilterType* soap_new_set_fes__FilterType(soap*, ...) allocate, set all public members
/// - fes__FilterType::soap_default(soap*) default initialize members
/// - int soap_read_fes__FilterType(soap*, fes__FilterType*) deserialize from a stream
/// - int soap_write_fes__FilterType(soap*, fes__FilterType*) serialize to a stream
/// - fes__FilterType* fes__FilterType::soap_dup(soap*) returns deep copy of fes__FilterType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - fes__FilterType::soap_del() deep deletes fes__FilterType data members, use only after fes__FilterType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int fes__FilterType::soap_type() returns SOAP_TYPE_fes__FilterType or derived type identifier
class fes__FilterType : public fes__AbstractSelectionClauseType
{ public:
/*  INHERITED FROM fes__AbstractSelectionClauseType:
    END OF INHERITED FROM fes__AbstractSelectionClauseType */
//  BEGIN GROUP <xs:group name="FilterPredicates">
//  BEGIN CHOICE <xs:choice>
  $ int                                  __union_FilterType            ;	///< Union _fes__union_FilterType selector: set to SOAP_UNION__fes__union_FilterType_<fieldname>
    union _fes__union_FilterType
    {
/// Reference "http://www.opengis.net/fes/2.0":comparisonOps to abstract element.
//  BEGIN SUBSTITUTIONS <xs:element substitutionGroup="comparisonOps"> with choice of elements to substitute:
//    <PropertyIsEqualTo> <PropertyIsNotEqualTo> <PropertyIsLessThan> <PropertyIsGreaterThan> <PropertyIsLessThanOrEqualTo>
//    <PropertyIsGreaterThanOrEqualTo> <PropertyIsLike> <PropertyIsNull> <PropertyIsNil> <PropertyIsBetween>
/// Element "http://www.opengis.net/fes/2.0":PropertyIsEqualTo.
    fes__BinaryComparisonOpType*         PropertyIsEqualTo             ;	///< Choice of element (one of multiple choices).
/// Element "http://www.opengis.net/fes/2.0":PropertyIsNotEqualTo.
    fes__BinaryComparisonOpType*         PropertyIsNotEqualTo          ;	///< Choice of element (one of multiple choices).
/// Element "http://www.opengis.net/fes/2.0":PropertyIsLessThan.
    fes__BinaryComparisonOpType*         PropertyIsLessThan            ;	///< Choice of element (one of multiple choices).
/// Element "http://www.opengis.net/fes/2.0":PropertyIsGreaterThan.
    fes__BinaryComparisonOpType*         PropertyIsGreaterThan         ;	///< Choice of element (one of multiple choices).
/// Element "http://www.opengis.net/fes/2.0":PropertyIsLessThanOrEqualTo.
    fes__BinaryComparisonOpType*         PropertyIsLessThanOrEqualTo   ;	///< Choice of element (one of multiple choices).
/// Element "http://www.opengis.net/fes/2.0":PropertyIsGreaterThanOrEqualTo.
    fes__BinaryComparisonOpType*         PropertyIsGreaterThanOrEqualTo;	///< Choice of element (one of multiple choices).
/// Element "http://www.opengis.net/fes/2.0":PropertyIsLike.
    fes__PropertyIsLikeType*             PropertyIsLike                ;	///< Choice of element (one of multiple choices).
/// Element "http://www.opengis.net/fes/2.0":PropertyIsNull.
    fes__PropertyIsNullType*             PropertyIsNull                ;	///< Choice of element (one of multiple choices).
/// Element "http://www.opengis.net/fes/2.0":PropertyIsNil.
    fes__PropertyIsNilType*              PropertyIsNil                 ;	///< Choice of element (one of multiple choices).
/// Element "http://www.opengis.net/fes/2.0":PropertyIsBetween.
    fes__PropertyIsBetweenType*          PropertyIsBetween             ;	///< Choice of element (one of multiple choices).
//  END OF SUBSTITUTIONS
/// Reference "http://www.opengis.net/fes/2.0":spatialOps to abstract element.
//  BEGIN SUBSTITUTIONS <xs:element substitutionGroup="spatialOps"> with choice of elements to substitute:
//    <Equals> <Disjoint> <Touches> <Within> <Overlaps> <Crosses> <Intersects> <Contains> <DWithin> <Beyond> <BBOX>
/// Element "http://www.opengis.net/fes/2.0":Equals.
    fes__BinarySpatialOpType*            Equals                        ;	///< Choice of element (one of multiple choices).
/// Element "http://www.opengis.net/fes/2.0":Disjoint.
    fes__BinarySpatialOpType*            Disjoint                      ;	///< Choice of element (one of multiple choices).
/// Element "http://www.opengis.net/fes/2.0":Touches.
    fes__BinarySpatialOpType*            Touches                       ;	///< Choice of element (one of multiple choices).
/// Element "http://www.opengis.net/fes/2.0":Within.
    fes__BinarySpatialOpType*            Within                        ;	///< Choice of element (one of multiple choices).
/// Element "http://www.opengis.net/fes/2.0":Overlaps.
    fes__BinarySpatialOpType*            Overlaps                      ;	///< Choice of element (one of multiple choices).
/// Element "http://www.opengis.net/fes/2.0":Crosses.
    fes__BinarySpatialOpType*            Crosses                       ;	///< Choice of element (one of multiple choices).
/// Element "http://www.opengis.net/fes/2.0":Intersects.
    fes__BinarySpatialOpType*            Intersects                    ;	///< Choice of element (one of multiple choices).
/// Element "http://www.opengis.net/fes/2.0":Contains.
    fes__BinarySpatialOpType*            Contains                      ;	///< Choice of element (one of multiple choices).
/// Element "http://www.opengis.net/fes/2.0":DWithin.
    fes__DistanceBufferType*             DWithin                       ;	///< Choice of element (one of multiple choices).
/// Element "http://www.opengis.net/fes/2.0":Beyond.
    fes__DistanceBufferType*             Beyond                        ;	///< Choice of element (one of multiple choices).
/// Element "http://www.opengis.net/fes/2.0":BBOX.
    fes__BBOXType*                       BBOX                          ;	///< Choice of element (one of multiple choices).
//  END OF SUBSTITUTIONS
/// Reference "http://www.opengis.net/fes/2.0":temporalOps to abstract element.
//  BEGIN SUBSTITUTIONS <xs:element substitutionGroup="temporalOps"> with choice of elements to substitute:
//    <After> <Before> <Begins> <BegunBy> <TContains> <During> <EndedBy> <Ends> <TEquals> <Meets> <MetBy> <TOverlaps>
//    <OverlappedBy> <AnyInteracts>
/// Element "http://www.opengis.net/fes/2.0":After.
    fes__BinaryTemporalOpType*           After                         ;	///< Choice of element (one of multiple choices).
/// Element "http://www.opengis.net/fes/2.0":Before.
    fes__BinaryTemporalOpType*           Before                        ;	///< Choice of element (one of multiple choices).
/// Element "http://www.opengis.net/fes/2.0":Begins.
    fes__BinaryTemporalOpType*           Begins                        ;	///< Choice of element (one of multiple choices).
/// Element "http://www.opengis.net/fes/2.0":BegunBy.
    fes__BinaryTemporalOpType*           BegunBy                       ;	///< Choice of element (one of multiple choices).
/// Element "http://www.opengis.net/fes/2.0":TContains.
    fes__BinaryTemporalOpType*           TContains                     ;	///< Choice of element (one of multiple choices).
/// Element "http://www.opengis.net/fes/2.0":During.
    fes__BinaryTemporalOpType*           During                        ;	///< Choice of element (one of multiple choices).
/// Element "http://www.opengis.net/fes/2.0":EndedBy.
    fes__BinaryTemporalOpType*           EndedBy                       ;	///< Choice of element (one of multiple choices).
/// Element "http://www.opengis.net/fes/2.0":Ends.
    fes__BinaryTemporalOpType*           Ends                          ;	///< Choice of element (one of multiple choices).
/// Element "http://www.opengis.net/fes/2.0":TEquals.
    fes__BinaryTemporalOpType*           TEquals                       ;	///< Choice of element (one of multiple choices).
/// Element "http://www.opengis.net/fes/2.0":Meets.
    fes__BinaryTemporalOpType*           Meets                         ;	///< Choice of element (one of multiple choices).
/// Element "http://www.opengis.net/fes/2.0":MetBy.
    fes__BinaryTemporalOpType*           MetBy                         ;	///< Choice of element (one of multiple choices).
/// Element "http://www.opengis.net/fes/2.0":TOverlaps.
    fes__BinaryTemporalOpType*           TOverlaps                     ;	///< Choice of element (one of multiple choices).
/// Element "http://www.opengis.net/fes/2.0":OverlappedBy.
    fes__BinaryTemporalOpType*           OverlappedBy                  ;	///< Choice of element (one of multiple choices).
/// Element "http://www.opengis.net/fes/2.0":AnyInteracts.
    fes__BinaryTemporalOpType*           AnyInteracts                  ;	///< Choice of element (one of multiple choices).
//  END OF SUBSTITUTIONS
/// Reference "http://www.opengis.net/fes/2.0":logicOps to abstract element.
//  BEGIN SUBSTITUTIONS <xs:element substitutionGroup="logicOps"> with choice of elements to substitute:
//    <And> <Or> <Not>
/// Element "http://www.opengis.net/fes/2.0":And.
    fes__BinaryLogicOpType*              And                           ;	///< Choice of element (one of multiple choices).
/// Element "http://www.opengis.net/fes/2.0":Or.
    fes__BinaryLogicOpType*              Or                            ;	///< Choice of element (one of multiple choices).
/// Element "http://www.opengis.net/fes/2.0":Not.
    fes__UnaryLogicOpType*               Not                           ;	///< Choice of element (one of multiple choices).
//  END OF SUBSTITUTIONS
/// Reference "http://www.opengis.net/fes/2.0":extensionOps to abstract element.
//  BEGIN SUBSTITUTIONS <xs:element substitutionGroup="extensionOps"> with choice of elements to substitute:
//   
//  END OF SUBSTITUTIONS
/// Element reference "http://www.opengis.net/fes/2.0:""http://www.opengis.net/fes/2.0":Function.
    fes__FunctionType*                   Function                      ;	///< Choice of element (one of multiple choices).
/// Reference "http://www.opengis.net/fes/2.0":_Id to abstract element.
//  BEGIN SUBSTITUTIONS <xs:element substitutionGroup="_Id" maxOccurs="unbounded"> with choice of elements to substitute:
//    <ResourceId>
    struct ___fes__union_FilterType______
    {
  $ int                                  __size_x005fId                 0;
    class __fes__union_FilterType______
    {
  $ int                                  __union_x005fId               ;	///< Union _fes__union_FilterType______ selector: set to SOAP_UNION__fes__union_FilterType_______<fieldname>
/// Union for substitutionGroup fes___x005fId.
    union _fes__union_FilterType______
    {
/// Element "http://www.opengis.net/fes/2.0":ResourceId.
    fes__ResourceIdType*                 ResourceId                    ;	///< Choice of element (one of multiple choices).
    }                                    union_FilterType______        ;
    }                                   *__union_FilterType______      ;
    }                                    __union_FilterType______      ;
//  END OF SUBSTITUTIONS
    }                                    union_FilterType              ;
//  END OF CHOICE
//  END OF GROUP
};

/// @brief "http://www.opengis.net/fes/2.0":ResourceIdType is a complexType with complexContent extension of type "http://www.opengis.net/fes/2.0":AbstractIdType.
///
/// @note class fes__ResourceIdType operations:
/// - fes__ResourceIdType* soap_new_fes__ResourceIdType(soap*) allocate and default initialize
/// - fes__ResourceIdType* soap_new_fes__ResourceIdType(soap*, int num) allocate and default initialize an array
/// - fes__ResourceIdType* soap_new_req_fes__ResourceIdType(soap*, ...) allocate, set required members
/// - fes__ResourceIdType* soap_new_set_fes__ResourceIdType(soap*, ...) allocate, set all public members
/// - fes__ResourceIdType::soap_default(soap*) default initialize members
/// - int soap_read_fes__ResourceIdType(soap*, fes__ResourceIdType*) deserialize from a stream
/// - int soap_write_fes__ResourceIdType(soap*, fes__ResourceIdType*) serialize to a stream
/// - fes__ResourceIdType* fes__ResourceIdType::soap_dup(soap*) returns deep copy of fes__ResourceIdType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - fes__ResourceIdType::soap_del() deep deletes fes__ResourceIdType data members, use only after fes__ResourceIdType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int fes__ResourceIdType::soap_type() returns SOAP_TYPE_fes__ResourceIdType or derived type identifier
class fes__ResourceIdType : public fes__AbstractIdType
{ public:
/*  INHERITED FROM fes__AbstractIdType:
    END OF INHERITED FROM fes__AbstractIdType */
/// Attribute "rid" of type xs:string.
  @ std::string                          rid                            1;	///< Required attribute.
/// Attribute "previousRid" of type xs:string.
  @ std::string*                         previousRid                    0;	///< Optional attribute.
/// Attribute "version" of type "http://www.opengis.net/fes/2.0":VersionType.
  @ fes__VersionType*                    version                        0;	///< Optional attribute.
/// Attribute "startDate" of type xs:dateTime.
  @ time_t*                              startDate                      0;	///< Optional attribute.
/// Attribute "endDate" of type xs:dateTime.
  @ time_t*                              endDate                        0;	///< Optional attribute.
};

/// @brief "http://www.opengis.net/fes/2.0":BinaryComparisonOpType is a complexType with complexContent extension of type "http://www.opengis.net/fes/2.0":ComparisonOpsType.
///
/// @note class fes__BinaryComparisonOpType operations:
/// - fes__BinaryComparisonOpType* soap_new_fes__BinaryComparisonOpType(soap*) allocate and default initialize
/// - fes__BinaryComparisonOpType* soap_new_fes__BinaryComparisonOpType(soap*, int num) allocate and default initialize an array
/// - fes__BinaryComparisonOpType* soap_new_req_fes__BinaryComparisonOpType(soap*, ...) allocate, set required members
/// - fes__BinaryComparisonOpType* soap_new_set_fes__BinaryComparisonOpType(soap*, ...) allocate, set all public members
/// - fes__BinaryComparisonOpType::soap_default(soap*) default initialize members
/// - int soap_read_fes__BinaryComparisonOpType(soap*, fes__BinaryComparisonOpType*) deserialize from a stream
/// - int soap_write_fes__BinaryComparisonOpType(soap*, fes__BinaryComparisonOpType*) serialize to a stream
/// - fes__BinaryComparisonOpType* fes__BinaryComparisonOpType::soap_dup(soap*) returns deep copy of fes__BinaryComparisonOpType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - fes__BinaryComparisonOpType::soap_del() deep deletes fes__BinaryComparisonOpType data members, use only after fes__BinaryComparisonOpType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int fes__BinaryComparisonOpType::soap_type() returns SOAP_TYPE_fes__BinaryComparisonOpType or derived type identifier
class fes__BinaryComparisonOpType : public fes__ComparisonOpsType
{ public:
/*  INHERITED FROM fes__ComparisonOpsType:
    END OF INHERITED FROM fes__ComparisonOpsType */
/// Reference "http://www.opengis.net/fes/2.0":expression to abstract element.
//  BEGIN SUBSTITUTIONS <xs:element substitutionGroup="expression" minOccurs="2" maxOccurs="2"> with choice of elements to substitute:
//    <ValueReference> <Function> <Literal>
  $ int                                  __sizeexpression               2:2;
    class __fes__union_BinaryComparisonOpType
    {
  $ int                                  __unionexpression              2;	///< Union _fes__union_BinaryComparisonOpType selector: set to SOAP_UNION__fes__union_BinaryComparisonOpType_<fieldname>
/// Union for substitutionGroup fes__expression.
    union _fes__union_BinaryComparisonOpType
    {
/// Element "http://www.opengis.net/fes/2.0":ValueReference.
    std::string*                         ValueReference                ;	///< Choice of element (one of multiple choices).
/// Element "http://www.opengis.net/fes/2.0":Function.
    fes__FunctionType*                   Function                      ;	///< Choice of element (one of multiple choices).
/// Element "http://www.opengis.net/fes/2.0":Literal.
    fes__LiteralType*                    Literal                       ;	///< Choice of element (one of multiple choices).
    }                                    union_BinaryComparisonOpType  ;
    }                                   *__union_BinaryComparisonOpType;
//  END OF SUBSTITUTIONS
/// Attribute "matchCase" of type xs:boolean.
  @ bool                                 matchCase                      0 = true;	///< Optional attribute with default value="true".
/// Attribute "matchAction" of type "http://www.opengis.net/fes/2.0":MatchActionType.
  @ enum fes__MatchActionType            matchAction                    0 = fes__MatchActionType__Any;	///< Optional attribute with default value="Any".
};

/// @brief "http://www.opengis.net/fes/2.0":PropertyIsLikeType is a complexType with complexContent extension of type "http://www.opengis.net/fes/2.0":ComparisonOpsType.
///
/// @note class fes__PropertyIsLikeType operations:
/// - fes__PropertyIsLikeType* soap_new_fes__PropertyIsLikeType(soap*) allocate and default initialize
/// - fes__PropertyIsLikeType* soap_new_fes__PropertyIsLikeType(soap*, int num) allocate and default initialize an array
/// - fes__PropertyIsLikeType* soap_new_req_fes__PropertyIsLikeType(soap*, ...) allocate, set required members
/// - fes__PropertyIsLikeType* soap_new_set_fes__PropertyIsLikeType(soap*, ...) allocate, set all public members
/// - fes__PropertyIsLikeType::soap_default(soap*) default initialize members
/// - int soap_read_fes__PropertyIsLikeType(soap*, fes__PropertyIsLikeType*) deserialize from a stream
/// - int soap_write_fes__PropertyIsLikeType(soap*, fes__PropertyIsLikeType*) serialize to a stream
/// - fes__PropertyIsLikeType* fes__PropertyIsLikeType::soap_dup(soap*) returns deep copy of fes__PropertyIsLikeType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - fes__PropertyIsLikeType::soap_del() deep deletes fes__PropertyIsLikeType data members, use only after fes__PropertyIsLikeType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int fes__PropertyIsLikeType::soap_type() returns SOAP_TYPE_fes__PropertyIsLikeType or derived type identifier
class fes__PropertyIsLikeType : public fes__ComparisonOpsType
{ public:
/*  INHERITED FROM fes__ComparisonOpsType:
    END OF INHERITED FROM fes__ComparisonOpsType */
/// Reference "http://www.opengis.net/fes/2.0":expression to abstract element.
//  BEGIN SUBSTITUTIONS <xs:element substitutionGroup="expression" minOccurs="2" maxOccurs="2"> with choice of elements to substitute:
//    <ValueReference> <Function> <Literal>
  $ int                                  __sizeexpression               2:2;
    class __fes__union_PropertyIsLikeType
    {
  $ int                                  __unionexpression              2;	///< Union _fes__union_PropertyIsLikeType selector: set to SOAP_UNION__fes__union_PropertyIsLikeType_<fieldname>
/// Union for substitutionGroup fes__expression.
    union _fes__union_PropertyIsLikeType
    {
/// Element "http://www.opengis.net/fes/2.0":ValueReference.
    std::string*                         ValueReference                ;	///< Choice of element (one of multiple choices).
/// Element "http://www.opengis.net/fes/2.0":Function.
    fes__FunctionType*                   Function                      ;	///< Choice of element (one of multiple choices).
/// Element "http://www.opengis.net/fes/2.0":Literal.
    fes__LiteralType*                    Literal                       ;	///< Choice of element (one of multiple choices).
    }                                    union_PropertyIsLikeType      ;
    }                                   *__union_PropertyIsLikeType    ;
//  END OF SUBSTITUTIONS
/// Attribute "wildCard" of type xs:string.
  @ std::string                          wildCard                       1;	///< Required attribute.
/// Attribute "singleChar" of type xs:string.
  @ std::string                          singleChar                     1;	///< Required attribute.
/// Attribute "escapeChar" of type xs:string.
  @ std::string                          escapeChar                     1;	///< Required attribute.
/// Attribute "matchCase" of type xs:boolean.
  @ bool                                 matchCase                      0 = true;	///< Optional attribute with default value="true".
};

/// @brief "http://www.opengis.net/fes/2.0":PropertyIsNullType is a complexType with complexContent extension of type "http://www.opengis.net/fes/2.0":ComparisonOpsType.
///
/// @note class fes__PropertyIsNullType operations:
/// - fes__PropertyIsNullType* soap_new_fes__PropertyIsNullType(soap*) allocate and default initialize
/// - fes__PropertyIsNullType* soap_new_fes__PropertyIsNullType(soap*, int num) allocate and default initialize an array
/// - fes__PropertyIsNullType* soap_new_req_fes__PropertyIsNullType(soap*, ...) allocate, set required members
/// - fes__PropertyIsNullType* soap_new_set_fes__PropertyIsNullType(soap*, ...) allocate, set all public members
/// - fes__PropertyIsNullType::soap_default(soap*) default initialize members
/// - int soap_read_fes__PropertyIsNullType(soap*, fes__PropertyIsNullType*) deserialize from a stream
/// - int soap_write_fes__PropertyIsNullType(soap*, fes__PropertyIsNullType*) serialize to a stream
/// - fes__PropertyIsNullType* fes__PropertyIsNullType::soap_dup(soap*) returns deep copy of fes__PropertyIsNullType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - fes__PropertyIsNullType::soap_del() deep deletes fes__PropertyIsNullType data members, use only after fes__PropertyIsNullType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int fes__PropertyIsNullType::soap_type() returns SOAP_TYPE_fes__PropertyIsNullType or derived type identifier
class fes__PropertyIsNullType : public fes__ComparisonOpsType
{ public:
/*  INHERITED FROM fes__ComparisonOpsType:
    END OF INHERITED FROM fes__ComparisonOpsType */
/// Reference "http://www.opengis.net/fes/2.0":expression to abstract element.
//  BEGIN SUBSTITUTIONS <xs:element substitutionGroup="expression"> with choice of elements to substitute:
//    <ValueReference> <Function> <Literal>
  $ int                                  __unionexpression             ;	///< Union _fes__union_PropertyIsNullType selector: set to SOAP_UNION__fes__union_PropertyIsNullType_<fieldname>
/// Union for substitutionGroup fes__expression.
    union _fes__union_PropertyIsNullType
    {
/// Element "http://www.opengis.net/fes/2.0":ValueReference.
    std::string*                         ValueReference                ;	///< Choice of element (one of multiple choices).
/// Element "http://www.opengis.net/fes/2.0":Function.
    fes__FunctionType*                   Function                      ;	///< Choice of element (one of multiple choices).
/// Element "http://www.opengis.net/fes/2.0":Literal.
    fes__LiteralType*                    Literal                       ;	///< Choice of element (one of multiple choices).
    }                                    union_PropertyIsNullType      ;
//  END OF SUBSTITUTIONS
};

/// @brief "http://www.opengis.net/fes/2.0":PropertyIsNilType is a complexType with complexContent extension of type "http://www.opengis.net/fes/2.0":ComparisonOpsType.
///
/// @note class fes__PropertyIsNilType operations:
/// - fes__PropertyIsNilType* soap_new_fes__PropertyIsNilType(soap*) allocate and default initialize
/// - fes__PropertyIsNilType* soap_new_fes__PropertyIsNilType(soap*, int num) allocate and default initialize an array
/// - fes__PropertyIsNilType* soap_new_req_fes__PropertyIsNilType(soap*, ...) allocate, set required members
/// - fes__PropertyIsNilType* soap_new_set_fes__PropertyIsNilType(soap*, ...) allocate, set all public members
/// - fes__PropertyIsNilType::soap_default(soap*) default initialize members
/// - int soap_read_fes__PropertyIsNilType(soap*, fes__PropertyIsNilType*) deserialize from a stream
/// - int soap_write_fes__PropertyIsNilType(soap*, fes__PropertyIsNilType*) serialize to a stream
/// - fes__PropertyIsNilType* fes__PropertyIsNilType::soap_dup(soap*) returns deep copy of fes__PropertyIsNilType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - fes__PropertyIsNilType::soap_del() deep deletes fes__PropertyIsNilType data members, use only after fes__PropertyIsNilType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int fes__PropertyIsNilType::soap_type() returns SOAP_TYPE_fes__PropertyIsNilType or derived type identifier
class fes__PropertyIsNilType : public fes__ComparisonOpsType
{ public:
/*  INHERITED FROM fes__ComparisonOpsType:
    END OF INHERITED FROM fes__ComparisonOpsType */
/// Reference "http://www.opengis.net/fes/2.0":expression to abstract element.
//  BEGIN SUBSTITUTIONS <xs:element substitutionGroup="expression"> with choice of elements to substitute:
//    <ValueReference> <Function> <Literal>
  $ int                                  __unionexpression             ;	///< Union _fes__union_PropertyIsNilType selector: set to SOAP_UNION__fes__union_PropertyIsNilType_<fieldname>
/// Union for substitutionGroup fes__expression.
    union _fes__union_PropertyIsNilType
    {
/// Element "http://www.opengis.net/fes/2.0":ValueReference.
    std::string*                         ValueReference                ;	///< Choice of element (one of multiple choices).
/// Element "http://www.opengis.net/fes/2.0":Function.
    fes__FunctionType*                   Function                      ;	///< Choice of element (one of multiple choices).
/// Element "http://www.opengis.net/fes/2.0":Literal.
    fes__LiteralType*                    Literal                       ;	///< Choice of element (one of multiple choices).
    }                                    union_PropertyIsNilType       ;
//  END OF SUBSTITUTIONS
/// Attribute "nilReason" of type xs:string.
  @ std::string*                         nilReason                      0;	///< Optional attribute.
};

/// @brief "http://www.opengis.net/fes/2.0":PropertyIsBetweenType is a complexType with complexContent extension of type "http://www.opengis.net/fes/2.0":ComparisonOpsType.
///
/// @note class fes__PropertyIsBetweenType operations:
/// - fes__PropertyIsBetweenType* soap_new_fes__PropertyIsBetweenType(soap*) allocate and default initialize
/// - fes__PropertyIsBetweenType* soap_new_fes__PropertyIsBetweenType(soap*, int num) allocate and default initialize an array
/// - fes__PropertyIsBetweenType* soap_new_req_fes__PropertyIsBetweenType(soap*, ...) allocate, set required members
/// - fes__PropertyIsBetweenType* soap_new_set_fes__PropertyIsBetweenType(soap*, ...) allocate, set all public members
/// - fes__PropertyIsBetweenType::soap_default(soap*) default initialize members
/// - int soap_read_fes__PropertyIsBetweenType(soap*, fes__PropertyIsBetweenType*) deserialize from a stream
/// - int soap_write_fes__PropertyIsBetweenType(soap*, fes__PropertyIsBetweenType*) serialize to a stream
/// - fes__PropertyIsBetweenType* fes__PropertyIsBetweenType::soap_dup(soap*) returns deep copy of fes__PropertyIsBetweenType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - fes__PropertyIsBetweenType::soap_del() deep deletes fes__PropertyIsBetweenType data members, use only after fes__PropertyIsBetweenType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int fes__PropertyIsBetweenType::soap_type() returns SOAP_TYPE_fes__PropertyIsBetweenType or derived type identifier
class fes__PropertyIsBetweenType : public fes__ComparisonOpsType
{ public:
/*  INHERITED FROM fes__ComparisonOpsType:
    END OF INHERITED FROM fes__ComparisonOpsType */
/// Reference "http://www.opengis.net/fes/2.0":expression to abstract element.
//  BEGIN SUBSTITUTIONS <xs:element substitutionGroup="expression"> with choice of elements to substitute:
//    <ValueReference> <Function> <Literal>
  $ int                                  __unionexpression             ;	///< Union _fes__union_PropertyIsBetweenType selector: set to SOAP_UNION__fes__union_PropertyIsBetweenType_<fieldname>
/// Union for substitutionGroup fes__expression.
    union _fes__union_PropertyIsBetweenType
    {
/// Element "http://www.opengis.net/fes/2.0":ValueReference.
    std::string*                         ValueReference                ;	///< Choice of element (one of multiple choices).
/// Element "http://www.opengis.net/fes/2.0":Function.
    fes__FunctionType*                   Function                      ;	///< Choice of element (one of multiple choices).
/// Element "http://www.opengis.net/fes/2.0":Literal.
    fes__LiteralType*                    Literal                       ;	///< Choice of element (one of multiple choices).
    }                                    union_PropertyIsBetweenType   ;
//  END OF SUBSTITUTIONS
/// Element "LowerBoundary" of type "http://www.opengis.net/fes/2.0":LowerBoundaryType.
    fes__LowerBoundaryType*              LowerBoundary                  1;	///< Required element.
/// Element "UpperBoundary" of type "http://www.opengis.net/fes/2.0":UpperBoundaryType.
    fes__UpperBoundaryType*              UpperBoundary                  1;	///< Required element.
};

/// @brief "http://www.opengis.net/fes/2.0":BinarySpatialOpType is a complexType with complexContent extension of type "http://www.opengis.net/fes/2.0":SpatialOpsType.
///
/// @note class fes__BinarySpatialOpType operations:
/// - fes__BinarySpatialOpType* soap_new_fes__BinarySpatialOpType(soap*) allocate and default initialize
/// - fes__BinarySpatialOpType* soap_new_fes__BinarySpatialOpType(soap*, int num) allocate and default initialize an array
/// - fes__BinarySpatialOpType* soap_new_req_fes__BinarySpatialOpType(soap*, ...) allocate, set required members
/// - fes__BinarySpatialOpType* soap_new_set_fes__BinarySpatialOpType(soap*, ...) allocate, set all public members
/// - fes__BinarySpatialOpType::soap_default(soap*) default initialize members
/// - int soap_read_fes__BinarySpatialOpType(soap*, fes__BinarySpatialOpType*) deserialize from a stream
/// - int soap_write_fes__BinarySpatialOpType(soap*, fes__BinarySpatialOpType*) serialize to a stream
/// - fes__BinarySpatialOpType* fes__BinarySpatialOpType::soap_dup(soap*) returns deep copy of fes__BinarySpatialOpType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - fes__BinarySpatialOpType::soap_del() deep deletes fes__BinarySpatialOpType data members, use only after fes__BinarySpatialOpType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int fes__BinarySpatialOpType::soap_type() returns SOAP_TYPE_fes__BinarySpatialOpType or derived type identifier
class fes__BinarySpatialOpType : public fes__SpatialOpsType
{ public:
/*  INHERITED FROM fes__SpatialOpsType:
    END OF INHERITED FROM fes__SpatialOpsType */
//  BEGIN CHOICE <xs:choice maxOccurs="2">
    std::vector<
    class __fes__union_BinarySpatialOpType
    {
  $ int                                  __union_BinarySpatialOpType   ;	///< Union _fes__union_BinarySpatialOpType selector: set to SOAP_UNION__fes__union_BinarySpatialOpType_<fieldname>
/// Union for choice in fes__BinarySpatialOpType.
    union _fes__union_BinarySpatialOpType
    {
/// Reference "http://www.opengis.net/fes/2.0":expression to abstract element.
//  BEGIN SUBSTITUTIONS <xs:element substitutionGroup="expression"> with choice of elements to substitute:
//    <ValueReference> <Function> <Literal>
/// Element "http://www.opengis.net/fes/2.0":ValueReference.
    std::string*                         ValueReference                ;	///< Choice of element (one of multiple choices).
/// Element "http://www.opengis.net/fes/2.0":Function.
    fes__FunctionType*                   Function                      ;	///< Choice of element (one of multiple choices).
/// Element "http://www.opengis.net/fes/2.0":Literal.
    fes__LiteralType*                    Literal                       ;	///< Choice of element (one of multiple choices).
//  END OF SUBSTITUTIONS
/// <any namespace="##other">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
    _XML                                 __any                         0;	///< Store any element content in XML string.
    }                                    union_BinarySpatialOpType     ;
    }>                                   __union_BinarySpatialOpType    0:2;
//  END OF CHOICE
};

/// @brief "http://www.opengis.net/fes/2.0":BinaryTemporalOpType is a complexType with complexContent extension of type "http://www.opengis.net/fes/2.0":TemporalOpsType.
///
/// @note class fes__BinaryTemporalOpType operations:
/// - fes__BinaryTemporalOpType* soap_new_fes__BinaryTemporalOpType(soap*) allocate and default initialize
/// - fes__BinaryTemporalOpType* soap_new_fes__BinaryTemporalOpType(soap*, int num) allocate and default initialize an array
/// - fes__BinaryTemporalOpType* soap_new_req_fes__BinaryTemporalOpType(soap*, ...) allocate, set required members
/// - fes__BinaryTemporalOpType* soap_new_set_fes__BinaryTemporalOpType(soap*, ...) allocate, set all public members
/// - fes__BinaryTemporalOpType::soap_default(soap*) default initialize members
/// - int soap_read_fes__BinaryTemporalOpType(soap*, fes__BinaryTemporalOpType*) deserialize from a stream
/// - int soap_write_fes__BinaryTemporalOpType(soap*, fes__BinaryTemporalOpType*) serialize to a stream
/// - fes__BinaryTemporalOpType* fes__BinaryTemporalOpType::soap_dup(soap*) returns deep copy of fes__BinaryTemporalOpType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - fes__BinaryTemporalOpType::soap_del() deep deletes fes__BinaryTemporalOpType data members, use only after fes__BinaryTemporalOpType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int fes__BinaryTemporalOpType::soap_type() returns SOAP_TYPE_fes__BinaryTemporalOpType or derived type identifier
class fes__BinaryTemporalOpType : public fes__TemporalOpsType
{ public:
/*  INHERITED FROM fes__TemporalOpsType:
    END OF INHERITED FROM fes__TemporalOpsType */
//  BEGIN CHOICE <xs:choice maxOccurs="2">
    std::vector<
    class __fes__union_BinaryTemporalOpType
    {
  $ int                                  __union_BinaryTemporalOpType  ;	///< Union _fes__union_BinaryTemporalOpType selector: set to SOAP_UNION__fes__union_BinaryTemporalOpType_<fieldname>
/// Union for choice in fes__BinaryTemporalOpType.
    union _fes__union_BinaryTemporalOpType
    {
/// Reference "http://www.opengis.net/fes/2.0":expression to abstract element.
//  BEGIN SUBSTITUTIONS <xs:element substitutionGroup="expression"> with choice of elements to substitute:
//    <ValueReference> <Function> <Literal>
/// Element "http://www.opengis.net/fes/2.0":ValueReference.
    std::string*                         ValueReference                ;	///< Choice of element (one of multiple choices).
/// Element "http://www.opengis.net/fes/2.0":Function.
    fes__FunctionType*                   Function                      ;	///< Choice of element (one of multiple choices).
/// Element "http://www.opengis.net/fes/2.0":Literal.
    fes__LiteralType*                    Literal                       ;	///< Choice of element (one of multiple choices).
//  END OF SUBSTITUTIONS
/// <any namespace="##other">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
    _XML                                 __any                         0;	///< Store any element content in XML string.
    }                                    union_BinaryTemporalOpType    ;
    }>                                   __union_BinaryTemporalOpType   0:2;
//  END OF CHOICE
};

/// @brief "http://www.opengis.net/fes/2.0":BBOXType is a complexType with complexContent extension of type "http://www.opengis.net/fes/2.0":SpatialOpsType.
///
/// @note class fes__BBOXType operations:
/// - fes__BBOXType* soap_new_fes__BBOXType(soap*) allocate and default initialize
/// - fes__BBOXType* soap_new_fes__BBOXType(soap*, int num) allocate and default initialize an array
/// - fes__BBOXType* soap_new_req_fes__BBOXType(soap*, ...) allocate, set required members
/// - fes__BBOXType* soap_new_set_fes__BBOXType(soap*, ...) allocate, set all public members
/// - fes__BBOXType::soap_default(soap*) default initialize members
/// - int soap_read_fes__BBOXType(soap*, fes__BBOXType*) deserialize from a stream
/// - int soap_write_fes__BBOXType(soap*, fes__BBOXType*) serialize to a stream
/// - fes__BBOXType* fes__BBOXType::soap_dup(soap*) returns deep copy of fes__BBOXType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - fes__BBOXType::soap_del() deep deletes fes__BBOXType data members, use only after fes__BBOXType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int fes__BBOXType::soap_type() returns SOAP_TYPE_fes__BBOXType or derived type identifier
class fes__BBOXType : public fes__SpatialOpsType
{ public:
/*  INHERITED FROM fes__SpatialOpsType:
    END OF INHERITED FROM fes__SpatialOpsType */
//  BEGIN CHOICE <xs:choice maxOccurs="2">
    std::vector<
    class __fes__union_BBOXType
    {
  $ int                                  __union_BBOXType              ;	///< Union _fes__union_BBOXType selector: set to SOAP_UNION__fes__union_BBOXType_<fieldname>
/// Union for choice in fes__BBOXType.
    union _fes__union_BBOXType
    {
/// Reference "http://www.opengis.net/fes/2.0":expression to abstract element.
//  BEGIN SUBSTITUTIONS <xs:element substitutionGroup="expression"> with choice of elements to substitute:
//    <ValueReference> <Function> <Literal>
/// Element "http://www.opengis.net/fes/2.0":ValueReference.
    std::string*                         ValueReference                ;	///< Choice of element (one of multiple choices).
/// Element "http://www.opengis.net/fes/2.0":Function.
    fes__FunctionType*                   Function                      ;	///< Choice of element (one of multiple choices).
/// Element "http://www.opengis.net/fes/2.0":Literal.
    fes__LiteralType*                    Literal                       ;	///< Choice of element (one of multiple choices).
//  END OF SUBSTITUTIONS
/// <any namespace="##other">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
    _XML                                 __any                         0;	///< Store any element content in XML string.
    }                                    union_BBOXType                ;
    }>                                   __union_BBOXType               0:2;
//  END OF CHOICE
};

/// @brief "http://www.opengis.net/fes/2.0":DistanceBufferType is a complexType with complexContent extension of type "http://www.opengis.net/fes/2.0":SpatialOpsType.
///
/// @note class fes__DistanceBufferType operations:
/// - fes__DistanceBufferType* soap_new_fes__DistanceBufferType(soap*) allocate and default initialize
/// - fes__DistanceBufferType* soap_new_fes__DistanceBufferType(soap*, int num) allocate and default initialize an array
/// - fes__DistanceBufferType* soap_new_req_fes__DistanceBufferType(soap*, ...) allocate, set required members
/// - fes__DistanceBufferType* soap_new_set_fes__DistanceBufferType(soap*, ...) allocate, set all public members
/// - fes__DistanceBufferType::soap_default(soap*) default initialize members
/// - int soap_read_fes__DistanceBufferType(soap*, fes__DistanceBufferType*) deserialize from a stream
/// - int soap_write_fes__DistanceBufferType(soap*, fes__DistanceBufferType*) serialize to a stream
/// - fes__DistanceBufferType* fes__DistanceBufferType::soap_dup(soap*) returns deep copy of fes__DistanceBufferType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - fes__DistanceBufferType::soap_del() deep deletes fes__DistanceBufferType data members, use only after fes__DistanceBufferType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int fes__DistanceBufferType::soap_type() returns SOAP_TYPE_fes__DistanceBufferType or derived type identifier
class fes__DistanceBufferType : public fes__SpatialOpsType
{ public:
/*  INHERITED FROM fes__SpatialOpsType:
    END OF INHERITED FROM fes__SpatialOpsType */
//  BEGIN CHOICE <xs:choice maxOccurs="2">
    std::vector<
    class __fes__union_DistanceBufferType
    {
  $ int                                  __union_DistanceBufferType    ;	///< Union _fes__union_DistanceBufferType selector: set to SOAP_UNION__fes__union_DistanceBufferType_<fieldname>
    union _fes__union_DistanceBufferType
    {
/// Reference "http://www.opengis.net/fes/2.0":expression to abstract element.
//  BEGIN SUBSTITUTIONS <xs:element substitutionGroup="expression"> with choice of elements to substitute:
//    <ValueReference> <Function> <Literal>
/// Element "http://www.opengis.net/fes/2.0":ValueReference.
    std::string*                         ValueReference                ;	///< Choice of element (one of multiple choices).
/// Element "http://www.opengis.net/fes/2.0":Function.
    fes__FunctionType*                   Function                      ;	///< Choice of element (one of multiple choices).
/// Element "http://www.opengis.net/fes/2.0":Literal.
    fes__LiteralType*                    Literal                       ;	///< Choice of element (one of multiple choices).
//  END OF SUBSTITUTIONS
/// <any namespace="##other">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
    _XML                                 __any                         0;	///< Store any element content in XML string.
    }                                    union_DistanceBufferType      ;
    }>                                   __union_DistanceBufferType     0:2;
//  END OF CHOICE
/// Element "Distance" of type "http://www.opengis.net/fes/2.0":MeasureType.
    fes__MeasureType*                    Distance                       1;	///< Required element.
};

/// @brief "http://www.opengis.net/fes/2.0":BinaryLogicOpType is a complexType with complexContent extension of type "http://www.opengis.net/fes/2.0":LogicOpsType.
///
/// @note class fes__BinaryLogicOpType operations:
/// - fes__BinaryLogicOpType* soap_new_fes__BinaryLogicOpType(soap*) allocate and default initialize
/// - fes__BinaryLogicOpType* soap_new_fes__BinaryLogicOpType(soap*, int num) allocate and default initialize an array
/// - fes__BinaryLogicOpType* soap_new_req_fes__BinaryLogicOpType(soap*, ...) allocate, set required members
/// - fes__BinaryLogicOpType* soap_new_set_fes__BinaryLogicOpType(soap*, ...) allocate, set all public members
/// - fes__BinaryLogicOpType::soap_default(soap*) default initialize members
/// - int soap_read_fes__BinaryLogicOpType(soap*, fes__BinaryLogicOpType*) deserialize from a stream
/// - int soap_write_fes__BinaryLogicOpType(soap*, fes__BinaryLogicOpType*) serialize to a stream
/// - fes__BinaryLogicOpType* fes__BinaryLogicOpType::soap_dup(soap*) returns deep copy of fes__BinaryLogicOpType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - fes__BinaryLogicOpType::soap_del() deep deletes fes__BinaryLogicOpType data members, use only after fes__BinaryLogicOpType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int fes__BinaryLogicOpType::soap_type() returns SOAP_TYPE_fes__BinaryLogicOpType or derived type identifier
class fes__BinaryLogicOpType : public fes__LogicOpsType
{ public:
/*  INHERITED FROM fes__LogicOpsType:
    END OF INHERITED FROM fes__LogicOpsType */
//  BEGIN CHOICE <xs:choice minOccurs="2" maxOccurs="unbounded">
/// @note <xs:choice> with embedded <xs:sequence> or <xs:group> prevents the use of a union for <xs:choice>. Instead of being members of a union, the following members are declared optional. Only one sequence of members should be non-NULL by choice.
    std::vector<
    class __fes__union_BinaryLogicOpType
    {
//  BEGIN GROUP <xs:group name="FilterPredicates">
//  BEGIN CHOICE <xs:choice>
  $ int                                  __union_BinaryLogicOpType_    ;	///< Union _fes__union_BinaryLogicOpType_ selector: set to SOAP_UNION__fes__union_BinaryLogicOpType__<fieldname>
    union _fes__union_BinaryLogicOpType_
    {
/// Reference "http://www.opengis.net/fes/2.0":comparisonOps to abstract element.
//  BEGIN SUBSTITUTIONS <xs:element substitutionGroup="comparisonOps"> with choice of elements to substitute:
//    <PropertyIsEqualTo> <PropertyIsNotEqualTo> <PropertyIsLessThan> <PropertyIsGreaterThan> <PropertyIsLessThanOrEqualTo>
//    <PropertyIsGreaterThanOrEqualTo> <PropertyIsLike> <PropertyIsNull> <PropertyIsNil> <PropertyIsBetween>
/// Element "http://www.opengis.net/fes/2.0":PropertyIsEqualTo.
    fes__BinaryComparisonOpType*         PropertyIsEqualTo             ;	///< Choice of element (one of multiple choices).
/// Element "http://www.opengis.net/fes/2.0":PropertyIsNotEqualTo.
    fes__BinaryComparisonOpType*         PropertyIsNotEqualTo          ;	///< Choice of element (one of multiple choices).
/// Element "http://www.opengis.net/fes/2.0":PropertyIsLessThan.
    fes__BinaryComparisonOpType*         PropertyIsLessThan            ;	///< Choice of element (one of multiple choices).
/// Element "http://www.opengis.net/fes/2.0":PropertyIsGreaterThan.
    fes__BinaryComparisonOpType*         PropertyIsGreaterThan         ;	///< Choice of element (one of multiple choices).
/// Element "http://www.opengis.net/fes/2.0":PropertyIsLessThanOrEqualTo.
    fes__BinaryComparisonOpType*         PropertyIsLessThanOrEqualTo   ;	///< Choice of element (one of multiple choices).
/// Element "http://www.opengis.net/fes/2.0":PropertyIsGreaterThanOrEqualTo.
    fes__BinaryComparisonOpType*         PropertyIsGreaterThanOrEqualTo;	///< Choice of element (one of multiple choices).
/// Element "http://www.opengis.net/fes/2.0":PropertyIsLike.
    fes__PropertyIsLikeType*             PropertyIsLike                ;	///< Choice of element (one of multiple choices).
/// Element "http://www.opengis.net/fes/2.0":PropertyIsNull.
    fes__PropertyIsNullType*             PropertyIsNull                ;	///< Choice of element (one of multiple choices).
/// Element "http://www.opengis.net/fes/2.0":PropertyIsNil.
    fes__PropertyIsNilType*              PropertyIsNil                 ;	///< Choice of element (one of multiple choices).
/// Element "http://www.opengis.net/fes/2.0":PropertyIsBetween.
    fes__PropertyIsBetweenType*          PropertyIsBetween             ;	///< Choice of element (one of multiple choices).
//  END OF SUBSTITUTIONS
/// Reference "http://www.opengis.net/fes/2.0":spatialOps to abstract element.
//  BEGIN SUBSTITUTIONS <xs:element substitutionGroup="spatialOps"> with choice of elements to substitute:
//    <Equals> <Disjoint> <Touches> <Within> <Overlaps> <Crosses> <Intersects> <Contains> <DWithin> <Beyond> <BBOX>
/// Element "http://www.opengis.net/fes/2.0":Equals.
    fes__BinarySpatialOpType*            Equals                        ;	///< Choice of element (one of multiple choices).
/// Element "http://www.opengis.net/fes/2.0":Disjoint.
    fes__BinarySpatialOpType*            Disjoint                      ;	///< Choice of element (one of multiple choices).
/// Element "http://www.opengis.net/fes/2.0":Touches.
    fes__BinarySpatialOpType*            Touches                       ;	///< Choice of element (one of multiple choices).
/// Element "http://www.opengis.net/fes/2.0":Within.
    fes__BinarySpatialOpType*            Within                        ;	///< Choice of element (one of multiple choices).
/// Element "http://www.opengis.net/fes/2.0":Overlaps.
    fes__BinarySpatialOpType*            Overlaps                      ;	///< Choice of element (one of multiple choices).
/// Element "http://www.opengis.net/fes/2.0":Crosses.
    fes__BinarySpatialOpType*            Crosses                       ;	///< Choice of element (one of multiple choices).
/// Element "http://www.opengis.net/fes/2.0":Intersects.
    fes__BinarySpatialOpType*            Intersects                    ;	///< Choice of element (one of multiple choices).
/// Element "http://www.opengis.net/fes/2.0":Contains.
    fes__BinarySpatialOpType*            Contains                      ;	///< Choice of element (one of multiple choices).
/// Element "http://www.opengis.net/fes/2.0":DWithin.
    fes__DistanceBufferType*             DWithin                       ;	///< Choice of element (one of multiple choices).
/// Element "http://www.opengis.net/fes/2.0":Beyond.
    fes__DistanceBufferType*             Beyond                        ;	///< Choice of element (one of multiple choices).
/// Element "http://www.opengis.net/fes/2.0":BBOX.
    fes__BBOXType*                       BBOX                          ;	///< Choice of element (one of multiple choices).
//  END OF SUBSTITUTIONS
/// Reference "http://www.opengis.net/fes/2.0":temporalOps to abstract element.
//  BEGIN SUBSTITUTIONS <xs:element substitutionGroup="temporalOps"> with choice of elements to substitute:
//    <After> <Before> <Begins> <BegunBy> <TContains> <During> <EndedBy> <Ends> <TEquals> <Meets> <MetBy> <TOverlaps>
//    <OverlappedBy> <AnyInteracts>
/// Element "http://www.opengis.net/fes/2.0":After.
    fes__BinaryTemporalOpType*           After                         ;	///< Choice of element (one of multiple choices).
/// Element "http://www.opengis.net/fes/2.0":Before.
    fes__BinaryTemporalOpType*           Before                        ;	///< Choice of element (one of multiple choices).
/// Element "http://www.opengis.net/fes/2.0":Begins.
    fes__BinaryTemporalOpType*           Begins                        ;	///< Choice of element (one of multiple choices).
/// Element "http://www.opengis.net/fes/2.0":BegunBy.
    fes__BinaryTemporalOpType*           BegunBy                       ;	///< Choice of element (one of multiple choices).
/// Element "http://www.opengis.net/fes/2.0":TContains.
    fes__BinaryTemporalOpType*           TContains                     ;	///< Choice of element (one of multiple choices).
/// Element "http://www.opengis.net/fes/2.0":During.
    fes__BinaryTemporalOpType*           During                        ;	///< Choice of element (one of multiple choices).
/// Element "http://www.opengis.net/fes/2.0":EndedBy.
    fes__BinaryTemporalOpType*           EndedBy                       ;	///< Choice of element (one of multiple choices).
/// Element "http://www.opengis.net/fes/2.0":Ends.
    fes__BinaryTemporalOpType*           Ends                          ;	///< Choice of element (one of multiple choices).
/// Element "http://www.opengis.net/fes/2.0":TEquals.
    fes__BinaryTemporalOpType*           TEquals                       ;	///< Choice of element (one of multiple choices).
/// Element "http://www.opengis.net/fes/2.0":Meets.
    fes__BinaryTemporalOpType*           Meets                         ;	///< Choice of element (one of multiple choices).
/// Element "http://www.opengis.net/fes/2.0":MetBy.
    fes__BinaryTemporalOpType*           MetBy                         ;	///< Choice of element (one of multiple choices).
/// Element "http://www.opengis.net/fes/2.0":TOverlaps.
    fes__BinaryTemporalOpType*           TOverlaps                     ;	///< Choice of element (one of multiple choices).
/// Element "http://www.opengis.net/fes/2.0":OverlappedBy.
    fes__BinaryTemporalOpType*           OverlappedBy                  ;	///< Choice of element (one of multiple choices).
/// Element "http://www.opengis.net/fes/2.0":AnyInteracts.
    fes__BinaryTemporalOpType*           AnyInteracts                  ;	///< Choice of element (one of multiple choices).
//  END OF SUBSTITUTIONS
/// Reference "http://www.opengis.net/fes/2.0":logicOps to abstract element.
//  BEGIN SUBSTITUTIONS <xs:element substitutionGroup="logicOps"> with choice of elements to substitute:
//    <And> <Or> <Not>
/// Element "http://www.opengis.net/fes/2.0":And.
    fes__BinaryLogicOpType*              And                           ;	///< Choice of element (one of multiple choices).
/// Element "http://www.opengis.net/fes/2.0":Or.
    fes__BinaryLogicOpType*              Or                            ;	///< Choice of element (one of multiple choices).
/// Element "http://www.opengis.net/fes/2.0":Not.
    fes__UnaryLogicOpType*               Not                           ;	///< Choice of element (one of multiple choices).
//  END OF SUBSTITUTIONS
/// Reference "http://www.opengis.net/fes/2.0":extensionOps to abstract element.
//  BEGIN SUBSTITUTIONS <xs:element substitutionGroup="extensionOps"> with choice of elements to substitute:
//   
//  END OF SUBSTITUTIONS
/// Element reference "http://www.opengis.net/fes/2.0:""http://www.opengis.net/fes/2.0":Function.
    fes__FunctionType*                   Function                      ;	///< Choice of element (one of multiple choices).
/// Reference "http://www.opengis.net/fes/2.0":_Id to abstract element.
//  BEGIN SUBSTITUTIONS <xs:element substitutionGroup="_Id" maxOccurs="unbounded"> with choice of elements to substitute:
//    <ResourceId>
    struct ___fes__union_BinaryLogicOpType_______
    {
  $ int                                  __size_x005fId                 0;
    class __fes__union_BinaryLogicOpType_______
    {
  $ int                                  __union_x005fId               ;	///< Union _fes__union_BinaryLogicOpType_______ selector: set to SOAP_UNION__fes__union_BinaryLogicOpType________<fieldname>
/// Union for substitutionGroup fes___x005fId.
    union _fes__union_BinaryLogicOpType_______
    {
/// Element "http://www.opengis.net/fes/2.0":ResourceId.
    fes__ResourceIdType*                 ResourceId                    ;	///< Choice of element (one of multiple choices).
    }                                    union_BinaryLogicOpType_______;
    }                                   *__union_BinaryLogicOpType_______;
    }                                    __union_BinaryLogicOpType_______;
//  END OF SUBSTITUTIONS
    }                                    union_BinaryLogicOpType_      ;
//  END OF CHOICE
//  END OF GROUP
    }>                                   __union_BinaryLogicOpType      2;
//  END OF CHOICE
};

/// @brief "http://www.opengis.net/fes/2.0":UnaryLogicOpType is a complexType with complexContent extension of type "http://www.opengis.net/fes/2.0":LogicOpsType.
///
/// @note class fes__UnaryLogicOpType operations:
/// - fes__UnaryLogicOpType* soap_new_fes__UnaryLogicOpType(soap*) allocate and default initialize
/// - fes__UnaryLogicOpType* soap_new_fes__UnaryLogicOpType(soap*, int num) allocate and default initialize an array
/// - fes__UnaryLogicOpType* soap_new_req_fes__UnaryLogicOpType(soap*, ...) allocate, set required members
/// - fes__UnaryLogicOpType* soap_new_set_fes__UnaryLogicOpType(soap*, ...) allocate, set all public members
/// - fes__UnaryLogicOpType::soap_default(soap*) default initialize members
/// - int soap_read_fes__UnaryLogicOpType(soap*, fes__UnaryLogicOpType*) deserialize from a stream
/// - int soap_write_fes__UnaryLogicOpType(soap*, fes__UnaryLogicOpType*) serialize to a stream
/// - fes__UnaryLogicOpType* fes__UnaryLogicOpType::soap_dup(soap*) returns deep copy of fes__UnaryLogicOpType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - fes__UnaryLogicOpType::soap_del() deep deletes fes__UnaryLogicOpType data members, use only after fes__UnaryLogicOpType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int fes__UnaryLogicOpType::soap_type() returns SOAP_TYPE_fes__UnaryLogicOpType or derived type identifier
class fes__UnaryLogicOpType : public fes__LogicOpsType
{ public:
/*  INHERITED FROM fes__LogicOpsType:
    END OF INHERITED FROM fes__LogicOpsType */
//  BEGIN CHOICE <xs:choice>
/// @note <xs:choice> with embedded <xs:sequence> or <xs:group> prevents the use of a union for <xs:choice>. Instead of being members of a union, the following members are declared optional. Only one sequence of members should be non-NULL by choice.
//  BEGIN GROUP <xs:group name="FilterPredicates">
//  BEGIN CHOICE <xs:choice>
  $ int                                  __union_UnaryLogicOpType_     ;	///< Union _fes__union_UnaryLogicOpType_ selector: set to SOAP_UNION__fes__union_UnaryLogicOpType__<fieldname>
    union _fes__union_UnaryLogicOpType_
    {
/// Reference "http://www.opengis.net/fes/2.0":comparisonOps to abstract element.
//  BEGIN SUBSTITUTIONS <xs:element substitutionGroup="comparisonOps"> with choice of elements to substitute:
//    <PropertyIsEqualTo> <PropertyIsNotEqualTo> <PropertyIsLessThan> <PropertyIsGreaterThan> <PropertyIsLessThanOrEqualTo>
//    <PropertyIsGreaterThanOrEqualTo> <PropertyIsLike> <PropertyIsNull> <PropertyIsNil> <PropertyIsBetween>
/// Element "http://www.opengis.net/fes/2.0":PropertyIsEqualTo.
    fes__BinaryComparisonOpType*         PropertyIsEqualTo             ;	///< Choice of element (one of multiple choices).
/// Element "http://www.opengis.net/fes/2.0":PropertyIsNotEqualTo.
    fes__BinaryComparisonOpType*         PropertyIsNotEqualTo          ;	///< Choice of element (one of multiple choices).
/// Element "http://www.opengis.net/fes/2.0":PropertyIsLessThan.
    fes__BinaryComparisonOpType*         PropertyIsLessThan            ;	///< Choice of element (one of multiple choices).
/// Element "http://www.opengis.net/fes/2.0":PropertyIsGreaterThan.
    fes__BinaryComparisonOpType*         PropertyIsGreaterThan         ;	///< Choice of element (one of multiple choices).
/// Element "http://www.opengis.net/fes/2.0":PropertyIsLessThanOrEqualTo.
    fes__BinaryComparisonOpType*         PropertyIsLessThanOrEqualTo   ;	///< Choice of element (one of multiple choices).
/// Element "http://www.opengis.net/fes/2.0":PropertyIsGreaterThanOrEqualTo.
    fes__BinaryComparisonOpType*         PropertyIsGreaterThanOrEqualTo;	///< Choice of element (one of multiple choices).
/// Element "http://www.opengis.net/fes/2.0":PropertyIsLike.
    fes__PropertyIsLikeType*             PropertyIsLike                ;	///< Choice of element (one of multiple choices).
/// Element "http://www.opengis.net/fes/2.0":PropertyIsNull.
    fes__PropertyIsNullType*             PropertyIsNull                ;	///< Choice of element (one of multiple choices).
/// Element "http://www.opengis.net/fes/2.0":PropertyIsNil.
    fes__PropertyIsNilType*              PropertyIsNil                 ;	///< Choice of element (one of multiple choices).
/// Element "http://www.opengis.net/fes/2.0":PropertyIsBetween.
    fes__PropertyIsBetweenType*          PropertyIsBetween             ;	///< Choice of element (one of multiple choices).
//  END OF SUBSTITUTIONS
/// Reference "http://www.opengis.net/fes/2.0":spatialOps to abstract element.
//  BEGIN SUBSTITUTIONS <xs:element substitutionGroup="spatialOps"> with choice of elements to substitute:
//    <Equals> <Disjoint> <Touches> <Within> <Overlaps> <Crosses> <Intersects> <Contains> <DWithin> <Beyond> <BBOX>
/// Element "http://www.opengis.net/fes/2.0":Equals.
    fes__BinarySpatialOpType*            Equals                        ;	///< Choice of element (one of multiple choices).
/// Element "http://www.opengis.net/fes/2.0":Disjoint.
    fes__BinarySpatialOpType*            Disjoint                      ;	///< Choice of element (one of multiple choices).
/// Element "http://www.opengis.net/fes/2.0":Touches.
    fes__BinarySpatialOpType*            Touches                       ;	///< Choice of element (one of multiple choices).
/// Element "http://www.opengis.net/fes/2.0":Within.
    fes__BinarySpatialOpType*            Within                        ;	///< Choice of element (one of multiple choices).
/// Element "http://www.opengis.net/fes/2.0":Overlaps.
    fes__BinarySpatialOpType*            Overlaps                      ;	///< Choice of element (one of multiple choices).
/// Element "http://www.opengis.net/fes/2.0":Crosses.
    fes__BinarySpatialOpType*            Crosses                       ;	///< Choice of element (one of multiple choices).
/// Element "http://www.opengis.net/fes/2.0":Intersects.
    fes__BinarySpatialOpType*            Intersects                    ;	///< Choice of element (one of multiple choices).
/// Element "http://www.opengis.net/fes/2.0":Contains.
    fes__BinarySpatialOpType*            Contains                      ;	///< Choice of element (one of multiple choices).
/// Element "http://www.opengis.net/fes/2.0":DWithin.
    fes__DistanceBufferType*             DWithin                       ;	///< Choice of element (one of multiple choices).
/// Element "http://www.opengis.net/fes/2.0":Beyond.
    fes__DistanceBufferType*             Beyond                        ;	///< Choice of element (one of multiple choices).
/// Element "http://www.opengis.net/fes/2.0":BBOX.
    fes__BBOXType*                       BBOX                          ;	///< Choice of element (one of multiple choices).
//  END OF SUBSTITUTIONS
/// Reference "http://www.opengis.net/fes/2.0":temporalOps to abstract element.
//  BEGIN SUBSTITUTIONS <xs:element substitutionGroup="temporalOps"> with choice of elements to substitute:
//    <After> <Before> <Begins> <BegunBy> <TContains> <During> <EndedBy> <Ends> <TEquals> <Meets> <MetBy> <TOverlaps>
//    <OverlappedBy> <AnyInteracts>
/// Element "http://www.opengis.net/fes/2.0":After.
    fes__BinaryTemporalOpType*           After                         ;	///< Choice of element (one of multiple choices).
/// Element "http://www.opengis.net/fes/2.0":Before.
    fes__BinaryTemporalOpType*           Before                        ;	///< Choice of element (one of multiple choices).
/// Element "http://www.opengis.net/fes/2.0":Begins.
    fes__BinaryTemporalOpType*           Begins                        ;	///< Choice of element (one of multiple choices).
/// Element "http://www.opengis.net/fes/2.0":BegunBy.
    fes__BinaryTemporalOpType*           BegunBy                       ;	///< Choice of element (one of multiple choices).
/// Element "http://www.opengis.net/fes/2.0":TContains.
    fes__BinaryTemporalOpType*           TContains                     ;	///< Choice of element (one of multiple choices).
/// Element "http://www.opengis.net/fes/2.0":During.
    fes__BinaryTemporalOpType*           During                        ;	///< Choice of element (one of multiple choices).
/// Element "http://www.opengis.net/fes/2.0":EndedBy.
    fes__BinaryTemporalOpType*           EndedBy                       ;	///< Choice of element (one of multiple choices).
/// Element "http://www.opengis.net/fes/2.0":Ends.
    fes__BinaryTemporalOpType*           Ends                          ;	///< Choice of element (one of multiple choices).
/// Element "http://www.opengis.net/fes/2.0":TEquals.
    fes__BinaryTemporalOpType*           TEquals                       ;	///< Choice of element (one of multiple choices).
/// Element "http://www.opengis.net/fes/2.0":Meets.
    fes__BinaryTemporalOpType*           Meets                         ;	///< Choice of element (one of multiple choices).
/// Element "http://www.opengis.net/fes/2.0":MetBy.
    fes__BinaryTemporalOpType*           MetBy                         ;	///< Choice of element (one of multiple choices).
/// Element "http://www.opengis.net/fes/2.0":TOverlaps.
    fes__BinaryTemporalOpType*           TOverlaps                     ;	///< Choice of element (one of multiple choices).
/// Element "http://www.opengis.net/fes/2.0":OverlappedBy.
    fes__BinaryTemporalOpType*           OverlappedBy                  ;	///< Choice of element (one of multiple choices).
/// Element "http://www.opengis.net/fes/2.0":AnyInteracts.
    fes__BinaryTemporalOpType*           AnyInteracts                  ;	///< Choice of element (one of multiple choices).
//  END OF SUBSTITUTIONS
/// Reference "http://www.opengis.net/fes/2.0":logicOps to abstract element.
//  BEGIN SUBSTITUTIONS <xs:element substitutionGroup="logicOps"> with choice of elements to substitute:
//    <And> <Or> <Not>
/// Element "http://www.opengis.net/fes/2.0":And.
    fes__BinaryLogicOpType*              And                           ;	///< Choice of element (one of multiple choices).
/// Element "http://www.opengis.net/fes/2.0":Or.
    fes__BinaryLogicOpType*              Or                            ;	///< Choice of element (one of multiple choices).
/// Element "http://www.opengis.net/fes/2.0":Not.
    fes__UnaryLogicOpType*               Not                           ;	///< Choice of element (one of multiple choices).
//  END OF SUBSTITUTIONS
/// Reference "http://www.opengis.net/fes/2.0":extensionOps to abstract element.
//  BEGIN SUBSTITUTIONS <xs:element substitutionGroup="extensionOps"> with choice of elements to substitute:
//   
//  END OF SUBSTITUTIONS
/// Element reference "http://www.opengis.net/fes/2.0:""http://www.opengis.net/fes/2.0":Function.
    fes__FunctionType*                   Function                      ;	///< Choice of element (one of multiple choices).
/// Reference "http://www.opengis.net/fes/2.0":_Id to abstract element.
//  BEGIN SUBSTITUTIONS <xs:element substitutionGroup="_Id" maxOccurs="unbounded"> with choice of elements to substitute:
//    <ResourceId>
    struct ___fes__union_UnaryLogicOpType_______
    {
  $ int                                  __size_x005fId                 0;
    class __fes__union_UnaryLogicOpType_______
    {
  $ int                                  __union_x005fId               ;	///< Union _fes__union_UnaryLogicOpType_______ selector: set to SOAP_UNION__fes__union_UnaryLogicOpType________<fieldname>
/// Union for substitutionGroup fes___x005fId.
    union _fes__union_UnaryLogicOpType_______
    {
/// Element "http://www.opengis.net/fes/2.0":ResourceId.
    fes__ResourceIdType*                 ResourceId                    ;	///< Choice of element (one of multiple choices).
    }                                    union_UnaryLogicOpType_______ ;
    }                                   *__union_UnaryLogicOpType_______;
    }                                    __union_UnaryLogicOpType_______;
//  END OF SUBSTITUTIONS
    }                                    union_UnaryLogicOpType_       ;
//  END OF CHOICE
//  END OF GROUP
//  END OF CHOICE
};

/// @brief "http://www.opengis.net/fes/2.0":MeasureType is a complexType with simpleContent extension of type xs:double.
///
/// @note class fes__MeasureType operations:
/// - fes__MeasureType* soap_new_fes__MeasureType(soap*) allocate and default initialize
/// - fes__MeasureType* soap_new_fes__MeasureType(soap*, int num) allocate and default initialize an array
/// - fes__MeasureType* soap_new_req_fes__MeasureType(soap*, ...) allocate, set required members
/// - fes__MeasureType* soap_new_set_fes__MeasureType(soap*, ...) allocate, set all public members
/// - fes__MeasureType::soap_default(soap*) default initialize members
/// - int soap_read_fes__MeasureType(soap*, fes__MeasureType*) deserialize from a stream
/// - int soap_write_fes__MeasureType(soap*, fes__MeasureType*) serialize to a stream
/// - fes__MeasureType* fes__MeasureType::soap_dup(soap*) returns deep copy of fes__MeasureType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - fes__MeasureType::soap_del() deep deletes fes__MeasureType data members, use only after fes__MeasureType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int fes__MeasureType::soap_type() returns SOAP_TYPE_fes__MeasureType or derived type identifier
class fes__MeasureType : public xsd__anyType
{ public:
/// __item wraps simpleContent of type xs:double.
    double                               __item                        ;
/// Attribute "uom" of type "http://www.opengis.net/fes/2.0":UomIdentifier.
  @ fes__UomIdentifier                   uom                            1;	///< Required attribute.
};

/// @brief "http://inspire.ec.europa.eu/schemas/common/1.0":data is an abstract complexType with complexContent extension of type "http://inspire.ec.europa.eu/schemas/common/1.0":resource.
///
/// @note class icommon__data operations:
/// - icommon__data* soap_new_icommon__data(soap*) allocate and default initialize
/// - icommon__data* soap_new_icommon__data(soap*, int num) allocate and default initialize an array
/// - icommon__data* soap_new_req_icommon__data(soap*, ...) allocate, set required members
/// - icommon__data* soap_new_set_icommon__data(soap*, ...) allocate, set all public members
/// - icommon__data::soap_default(soap*) default initialize members
/// - int soap_read_icommon__data(soap*, icommon__data*) deserialize from a stream
/// - int soap_write_icommon__data(soap*, icommon__data*) serialize to a stream
/// - icommon__data* icommon__data::soap_dup(soap*) returns deep copy of icommon__data, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - icommon__data::soap_del() deep deletes icommon__data data members, use only after icommon__data::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int icommon__data::soap_type() returns SOAP_TYPE_icommon__data or derived type identifier
class icommon__data : public icommon__resource
{ public:
/*  INHERITED FROM icommon__resource:
/// Element "ResourceTitle" of type "http://inspire.ec.europa.eu/schemas/common/1.0":notEmptyString.
    icommon__notEmptyString              ResourceTitle                  1;	///< Required element.
/// Element "ResourceAbstract" of type "http://inspire.ec.europa.eu/schemas/common/1.0":notEmptyString.
    icommon__notEmptyString              ResourceAbstract               1;	///< Required element.
/// Element "ResourceType" of type "http://inspire.ec.europa.eu/schemas/common/1.0":resourceType.
    enum icommon__resourceType           ResourceType                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Mandatory if a URL is available to obtain more information on
///   the resource, and/or access related services.
/// </BLOCKQUOTE></PRE>
///
/// Vector of icommon__resourceLocatorType* of length 0..unbounded.
    std::vector<icommon__resourceLocatorType*> ResourceLocator                0;	///< Multiple elements.
/// Vector of icommon__keyword* of length 1..unbounded.
    std::vector<icommon__keyword*      > MandatoryKeyword               1;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   If a resource is a spatial data set or spatial data set series, at least one keyword shall be provided from the general environmental multilingual thesaurus (GEMET) describing the relevant spatial data theme as defined in Annex I, II or III to Directive 2007/2/EC.
/// </BLOCKQUOTE></PRE>
///
/// Vector of icommon__keyword* of length 0..unbounded.
    std::vector<icommon__keyword*      > Keyword                        0;	///< Multiple elements.
/// Vector of icommon__geographicBoundingBox* of length 0..unbounded.
    std::vector<icommon__geographicBoundingBox*> GeographicBoundingBox          0;	///< Multiple elements.
/// Vector of icommon__temporalReference* of length 1..unbounded.
    std::vector<icommon__temporalReference*> TemporalReference              1;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   Mandatory when there is a restriction on the spatial resolution for this service.
/// </BLOCKQUOTE></PRE>
///
/// Vector of icommon__spatialResolution* of length 0..unbounded.
    std::vector<icommon__spatialResolution*> SpatialResolution              0;	///< Multiple elements.
/// Vector of icommon__conformity* of length 1..unbounded.
    std::vector<icommon__conformity*   > Conformity                     1;	///< Multiple elements.
/// Vector of icommon__notEmptyString of length 1..unbounded.
    std::vector<icommon__notEmptyString> ConditionsForAccessAndUse      1;	///< Multiple elements.
/// Vector of icommon__notEmptyString of length 1..unbounded.
    std::vector<icommon__notEmptyString> LimitationsOnPublicAccess      1;	///< Multiple elements.
/// Vector of icommon__responsibleOrganisation* of length 1..unbounded.
    std::vector<icommon__responsibleOrganisation*> ResponsibleOrganisation        1;	///< Multiple elements.
/// Vector of icommon__metadataPointOfContact* of length 1..unbounded.
    std::vector<icommon__metadataPointOfContact*> MetadataPointOfContact         1;	///< Multiple elements.
/// Element "MetadataDate" of type "http://inspire.ec.europa.eu/schemas/common/1.0":iso8601Date.
    icommon__iso8601Date                 MetadataDate                   1;	///< Required element.
/// Element "MetadataLanguage" of type "http://inspire.ec.europa.eu/schemas/common/1.0":euLanguageISO6392B.
    enum icommon__euLanguageISO6392B     MetadataLanguage               1;	///< Required element.
/// Imported attribute reference xml:lang.
  @ _xml__lang*                          xml__lang                      0;	///< Optional attribute.
    END OF INHERITED FROM icommon__resource */
/// Vector of icommon__uniqueResourceIdentifier* of length 1..unbounded.
    std::vector<icommon__uniqueResourceIdentifier*> UniqueResourceIdentifier       1;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   Mandatory if the resource includes textual information.
/// </BLOCKQUOTE></PRE>
///
/// Vector of enum icommon__languageISO6392B of length 0..unbounded.
    std::vector<enum icommon__languageISO6392B> ResourceLanguage               0;	///< Multiple elements.
/// Vector of enum icommon__topicCategory of length 1..unbounded.
    std::vector<enum icommon__topicCategory> TopicCategory                  1;	///< Multiple elements.
/// Element "Lineage" of type "http://inspire.ec.europa.eu/schemas/common/1.0":notEmptyString.
    icommon__notEmptyString              Lineage                        1;	///< Required element.
};

/// @brief "http://inspire.ec.europa.eu/schemas/common/1.0":service_ext is an abstract complexType with complexContent extension of type "http://inspire.ec.europa.eu/schemas/common/1.0":resource.
///
/// @note class icommon__service_x005fext operations:
/// - icommon__service_x005fext* soap_new_icommon__service_x005fext(soap*) allocate and default initialize
/// - icommon__service_x005fext* soap_new_icommon__service_x005fext(soap*, int num) allocate and default initialize an array
/// - icommon__service_x005fext* soap_new_req_icommon__service_x005fext(soap*, ...) allocate, set required members
/// - icommon__service_x005fext* soap_new_set_icommon__service_x005fext(soap*, ...) allocate, set all public members
/// - icommon__service_x005fext::soap_default(soap*) default initialize members
/// - int soap_read_icommon__service_x005fext(soap*, icommon__service_x005fext*) deserialize from a stream
/// - int soap_write_icommon__service_x005fext(soap*, icommon__service_x005fext*) serialize to a stream
/// - icommon__service_x005fext* icommon__service_x005fext::soap_dup(soap*) returns deep copy of icommon__service_x005fext, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - icommon__service_x005fext::soap_del() deep deletes icommon__service_x005fext data members, use only after icommon__service_x005fext::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int icommon__service_x005fext::soap_type() returns SOAP_TYPE_icommon__service_x005fext or derived type identifier
class icommon__service_x005fext : public icommon__resource
{ public:
/*  INHERITED FROM icommon__resource:
/// Element "ResourceTitle" of type "http://inspire.ec.europa.eu/schemas/common/1.0":notEmptyString.
    icommon__notEmptyString              ResourceTitle                  1;	///< Required element.
/// Element "ResourceAbstract" of type "http://inspire.ec.europa.eu/schemas/common/1.0":notEmptyString.
    icommon__notEmptyString              ResourceAbstract               1;	///< Required element.
/// Element "ResourceType" of type "http://inspire.ec.europa.eu/schemas/common/1.0":resourceType.
    enum icommon__resourceType           ResourceType                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Mandatory if a URL is available to obtain more information on
///   the resource, and/or access related services.
/// </BLOCKQUOTE></PRE>
///
/// Vector of icommon__resourceLocatorType* of length 0..unbounded.
    std::vector<icommon__resourceLocatorType*> ResourceLocator                0;	///< Multiple elements.
/// Vector of icommon__keyword* of length 1..unbounded.
    std::vector<icommon__keyword*      > MandatoryKeyword               1;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   If a resource is a spatial data set or spatial data set series, at least one keyword shall be provided from the general environmental multilingual thesaurus (GEMET) describing the relevant spatial data theme as defined in Annex I, II or III to Directive 2007/2/EC.
/// </BLOCKQUOTE></PRE>
///
/// Vector of icommon__keyword* of length 0..unbounded.
    std::vector<icommon__keyword*      > Keyword                        0;	///< Multiple elements.
/// Vector of icommon__geographicBoundingBox* of length 0..unbounded.
    std::vector<icommon__geographicBoundingBox*> GeographicBoundingBox          0;	///< Multiple elements.
/// Vector of icommon__temporalReference* of length 1..unbounded.
    std::vector<icommon__temporalReference*> TemporalReference              1;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   Mandatory when there is a restriction on the spatial resolution for this service.
/// </BLOCKQUOTE></PRE>
///
/// Vector of icommon__spatialResolution* of length 0..unbounded.
    std::vector<icommon__spatialResolution*> SpatialResolution              0;	///< Multiple elements.
/// Vector of icommon__conformity* of length 1..unbounded.
    std::vector<icommon__conformity*   > Conformity                     1;	///< Multiple elements.
/// Vector of icommon__notEmptyString of length 1..unbounded.
    std::vector<icommon__notEmptyString> ConditionsForAccessAndUse      1;	///< Multiple elements.
/// Vector of icommon__notEmptyString of length 1..unbounded.
    std::vector<icommon__notEmptyString> LimitationsOnPublicAccess      1;	///< Multiple elements.
/// Vector of icommon__responsibleOrganisation* of length 1..unbounded.
    std::vector<icommon__responsibleOrganisation*> ResponsibleOrganisation        1;	///< Multiple elements.
/// Vector of icommon__metadataPointOfContact* of length 1..unbounded.
    std::vector<icommon__metadataPointOfContact*> MetadataPointOfContact         1;	///< Multiple elements.
/// Element "MetadataDate" of type "http://inspire.ec.europa.eu/schemas/common/1.0":iso8601Date.
    icommon__iso8601Date                 MetadataDate                   1;	///< Required element.
/// Element "MetadataLanguage" of type "http://inspire.ec.europa.eu/schemas/common/1.0":euLanguageISO6392B.
    enum icommon__euLanguageISO6392B     MetadataLanguage               1;	///< Required element.
/// Imported attribute reference xml:lang.
  @ _xml__lang*                          xml__lang                      0;	///< Optional attribute.
    END OF INHERITED FROM icommon__resource */
/// <PRE><BLOCKQUOTE>
///   Mandatory if linkage to data sets on which the service operates are available.
/// </BLOCKQUOTE></PRE>
///
/// Vector of icommon__uniqueResourceIdentifier* of length 0..unbounded.
    std::vector<icommon__uniqueResourceIdentifier*> CoupledResource                0;	///< Multiple elements.
/// Element "SpatialDataServiceType" of type "http://inspire.ec.europa.eu/schemas/common/1.0":spatialDataServiceType.
    enum icommon__spatialDataServiceType  SpatialDataServiceType         1;	///< Required element.
};

/// @brief "http://inspire.ec.europa.eu/schemas/common/1.0":citationConformity is a complexType with complexContent restriction of type "http://inspire.ec.europa.eu/schemas/common/1.0":citation.
///
/// This type is restricted by:
/// - "http://inspire.ec.europa.eu/schemas/common/1.0":citationInspireInteroperabilityRegulation_bul as icommon__citationInspireInteroperabilityRegulation_x005fbul
/// - "http://inspire.ec.europa.eu/schemas/common/1.0":citationInspireInteroperabilityRegulation_cze as icommon__citationInspireInteroperabilityRegulation_x005fcze
/// - "http://inspire.ec.europa.eu/schemas/common/1.0":citationInspireInteroperabilityRegulation_dan as icommon__citationInspireInteroperabilityRegulation_x005fdan
/// - "http://inspire.ec.europa.eu/schemas/common/1.0":citationInspireInteroperabilityRegulation_dut as icommon__citationInspireInteroperabilityRegulation_x005fdut
/// - "http://inspire.ec.europa.eu/schemas/common/1.0":citationInspireInteroperabilityRegulation_eng as icommon__citationInspireInteroperabilityRegulation_x005feng
/// - "http://inspire.ec.europa.eu/schemas/common/1.0":citationInspireInteroperabilityRegulation_est as icommon__citationInspireInteroperabilityRegulation_x005fest
/// - "http://inspire.ec.europa.eu/schemas/common/1.0":citationInspireInteroperabilityRegulation_fin as icommon__citationInspireInteroperabilityRegulation_x005ffin
/// - "http://inspire.ec.europa.eu/schemas/common/1.0":citationInspireInteroperabilityRegulation_fre as icommon__citationInspireInteroperabilityRegulation_x005ffre
/// - "http://inspire.ec.europa.eu/schemas/common/1.0":citationInspireInteroperabilityRegulation_ger as icommon__citationInspireInteroperabilityRegulation_x005fger
/// - "http://inspire.ec.europa.eu/schemas/common/1.0":citationInspireInteroperabilityRegulation_gle as icommon__citationInspireInteroperabilityRegulation_x005fgle
/// - "http://inspire.ec.europa.eu/schemas/common/1.0":citationInspireInteroperabilityRegulation_gre as icommon__citationInspireInteroperabilityRegulation_x005fgre
/// - "http://inspire.ec.europa.eu/schemas/common/1.0":citationInspireInteroperabilityRegulation_hun as icommon__citationInspireInteroperabilityRegulation_x005fhun
/// - "http://inspire.ec.europa.eu/schemas/common/1.0":citationInspireInteroperabilityRegulation_ita as icommon__citationInspireInteroperabilityRegulation_x005fita
/// - "http://inspire.ec.europa.eu/schemas/common/1.0":citationInspireInteroperabilityRegulation_lav as icommon__citationInspireInteroperabilityRegulation_x005flav
/// - "http://inspire.ec.europa.eu/schemas/common/1.0":citationInspireInteroperabilityRegulation_lit as icommon__citationInspireInteroperabilityRegulation_x005flit
/// - "http://inspire.ec.europa.eu/schemas/common/1.0":citationInspireInteroperabilityRegulation_mlt as icommon__citationInspireInteroperabilityRegulation_x005fmlt
/// - "http://inspire.ec.europa.eu/schemas/common/1.0":citationInspireInteroperabilityRegulation_pol as icommon__citationInspireInteroperabilityRegulation_x005fpol
/// - "http://inspire.ec.europa.eu/schemas/common/1.0":citationInspireInteroperabilityRegulation_por as icommon__citationInspireInteroperabilityRegulation_x005fpor
/// - "http://inspire.ec.europa.eu/schemas/common/1.0":citationInspireInteroperabilityRegulation_rum as icommon__citationInspireInteroperabilityRegulation_x005frum
/// - "http://inspire.ec.europa.eu/schemas/common/1.0":citationInspireInteroperabilityRegulation_slo as icommon__citationInspireInteroperabilityRegulation_x005fslo
/// - "http://inspire.ec.europa.eu/schemas/common/1.0":citationInspireInteroperabilityRegulation_slv as icommon__citationInspireInteroperabilityRegulation_x005fslv
/// - "http://inspire.ec.europa.eu/schemas/common/1.0":citationInspireInteroperabilityRegulation_spa as icommon__citationInspireInteroperabilityRegulation_x005fspa
/// - "http://inspire.ec.europa.eu/schemas/common/1.0":citationInspireInteroperabilityRegulation_swe as icommon__citationInspireInteroperabilityRegulation_x005fswe
///
/// @note class icommon__citationConformity operations:
/// - icommon__citationConformity* soap_new_icommon__citationConformity(soap*) allocate and default initialize
/// - icommon__citationConformity* soap_new_icommon__citationConformity(soap*, int num) allocate and default initialize an array
/// - icommon__citationConformity* soap_new_req_icommon__citationConformity(soap*, ...) allocate, set required members
/// - icommon__citationConformity* soap_new_set_icommon__citationConformity(soap*, ...) allocate, set all public members
/// - icommon__citationConformity::soap_default(soap*) default initialize members
/// - int soap_read_icommon__citationConformity(soap*, icommon__citationConformity*) deserialize from a stream
/// - int soap_write_icommon__citationConformity(soap*, icommon__citationConformity*) serialize to a stream
/// - icommon__citationConformity* icommon__citationConformity::soap_dup(soap*) returns deep copy of icommon__citationConformity, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - icommon__citationConformity::soap_del() deep deletes icommon__citationConformity data members, use only after icommon__citationConformity::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int icommon__citationConformity::soap_type() returns SOAP_TYPE_icommon__citationConformity or derived type identifier
class icommon__citationConformity : public xsd__anyType
{ public:
/// Element "Title" of type "http://inspire.ec.europa.eu/schemas/common/1.0":notEmptyString.
    icommon__notEmptyString              Title                          1;	///< Required element.
//  BEGIN CHOICE <xs:choice>
  $ int                                  __union_citationConformity    ;	///< Union _icommon__union_citationConformity selector: set to SOAP_UNION__icommon__union_citationConformity_<fieldname>
    union _icommon__union_citationConformity
    {
/// Element "DateOfPublication" of type "http://inspire.ec.europa.eu/schemas/common/1.0":iso8601Date.
    icommon__iso8601Date*                DateOfPublication             ;	///< Choice of element (one of multiple choices).
/// Element "DateOfCreation" of type "http://inspire.ec.europa.eu/schemas/common/1.0":iso8601Date.
    icommon__iso8601Date*                DateOfCreation                ;	///< Choice of element (one of multiple choices).
/// Element "DateOfLastRevision" of type "http://inspire.ec.europa.eu/schemas/common/1.0":iso8601Date.
    icommon__iso8601Date*                DateOfLastRevision            ;	///< Choice of element (one of multiple choices).
    }                                    union_citationConformity      ;
//  END OF CHOICE
/// <PRE><BLOCKQUOTE>
///   One or more Documentation URIs if available
/// </BLOCKQUOTE></PRE>
///
/// Vector of xsd__anyURI of length 0..unbounded.
    std::vector<xsd__anyURI            > URI                            0;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   One or more URLs if available
/// </BLOCKQUOTE></PRE>
///
/// Vector of icommon__resourceLocatorType* of length 0..unbounded.
    std::vector<icommon__resourceLocatorType*> ResourceLocator                0;	///< Multiple elements.
/*  RESTRICTED FROM icommon__citation:
    END OF RESTRICTED FROM icommon__citation */
};

/// @brief "http://inspire.ec.europa.eu/schemas/common/1.0":originatingControlledVocabulary is a complexType with complexContent restriction of type "http://inspire.ec.europa.eu/schemas/common/1.0":citation.
///
/// This type is restricted by:
/// - "http://inspire.ec.europa.eu/schemas/common/1.0":originatingControlledVocabularyGemetInspireThemes as icommon__originatingControlledVocabularyGemetInspireThemes
/// - "http://inspire.ec.europa.eu/schemas/common/1.0":originatingControlledVocabularyMD as icommon__originatingControlledVocabularyMD
///
/// @note class icommon__originatingControlledVocabulary operations:
/// - icommon__originatingControlledVocabulary* soap_new_icommon__originatingControlledVocabulary(soap*) allocate and default initialize
/// - icommon__originatingControlledVocabulary* soap_new_icommon__originatingControlledVocabulary(soap*, int num) allocate and default initialize an array
/// - icommon__originatingControlledVocabulary* soap_new_req_icommon__originatingControlledVocabulary(soap*, ...) allocate, set required members
/// - icommon__originatingControlledVocabulary* soap_new_set_icommon__originatingControlledVocabulary(soap*, ...) allocate, set all public members
/// - icommon__originatingControlledVocabulary::soap_default(soap*) default initialize members
/// - int soap_read_icommon__originatingControlledVocabulary(soap*, icommon__originatingControlledVocabulary*) deserialize from a stream
/// - int soap_write_icommon__originatingControlledVocabulary(soap*, icommon__originatingControlledVocabulary*) serialize to a stream
/// - icommon__originatingControlledVocabulary* icommon__originatingControlledVocabulary::soap_dup(soap*) returns deep copy of icommon__originatingControlledVocabulary, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - icommon__originatingControlledVocabulary::soap_del() deep deletes icommon__originatingControlledVocabulary data members, use only after icommon__originatingControlledVocabulary::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int icommon__originatingControlledVocabulary::soap_type() returns SOAP_TYPE_icommon__originatingControlledVocabulary or derived type identifier
class icommon__originatingControlledVocabulary : public xsd__anyType
{ public:
/// Element "Title" of type "http://inspire.ec.europa.eu/schemas/common/1.0":notEmptyString.
    icommon__notEmptyString              Title                          1;	///< Required element.
//  BEGIN CHOICE <xs:choice>
  $ int                                  __union_originatingControlledVocabulary;	///< Union _icommon__union_originatingControlledVocabulary selector: set to SOAP_UNION__icommon__union_originatingControlledVocabulary_<fieldname>
    union _icommon__union_originatingControlledVocabulary
    {
/// Element "DateOfPublication" of type "http://inspire.ec.europa.eu/schemas/common/1.0":iso8601Date.
    icommon__iso8601Date*                DateOfPublication             ;	///< Choice of element (one of multiple choices).
/// Element "DateOfCreation" of type "http://inspire.ec.europa.eu/schemas/common/1.0":iso8601Date.
    icommon__iso8601Date*                DateOfCreation                ;	///< Choice of element (one of multiple choices).
/// Element "DateOfLastRevision" of type "http://inspire.ec.europa.eu/schemas/common/1.0":iso8601Date.
    icommon__iso8601Date*                DateOfLastRevision            ;	///< Choice of element (one of multiple choices).
    }                                    union_originatingControlledVocabulary;
//  END OF CHOICE
/// <PRE><BLOCKQUOTE>
///   One or more Documentation URIs if available
/// </BLOCKQUOTE></PRE>
///
/// Vector of xsd__anyURI of length 0..unbounded.
    std::vector<xsd__anyURI            > URI                            0;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   One or more URLs if available
/// </BLOCKQUOTE></PRE>
///
/// Vector of icommon__resourceLocatorType* of length 0..unbounded.
    std::vector<icommon__resourceLocatorType*> ResourceLocator                0;	///< Multiple elements.
/*  RESTRICTED FROM icommon__citation:
    END OF RESTRICTED FROM icommon__citation */
};

/// @brief "http://inspire.ec.europa.eu/schemas/common/1.0":classificationOfSpatialDataService is a complexType with complexContent restriction of type "http://inspire.ec.europa.eu/schemas/common/1.0":keyword.
///
/// @note class icommon__classificationOfSpatialDataService operations:
/// - icommon__classificationOfSpatialDataService* soap_new_icommon__classificationOfSpatialDataService(soap*) allocate and default initialize
/// - icommon__classificationOfSpatialDataService* soap_new_icommon__classificationOfSpatialDataService(soap*, int num) allocate and default initialize an array
/// - icommon__classificationOfSpatialDataService* soap_new_req_icommon__classificationOfSpatialDataService(soap*, ...) allocate, set required members
/// - icommon__classificationOfSpatialDataService* soap_new_set_icommon__classificationOfSpatialDataService(soap*, ...) allocate, set all public members
/// - icommon__classificationOfSpatialDataService::soap_default(soap*) default initialize members
/// - int soap_read_icommon__classificationOfSpatialDataService(soap*, icommon__classificationOfSpatialDataService*) deserialize from a stream
/// - int soap_write_icommon__classificationOfSpatialDataService(soap*, icommon__classificationOfSpatialDataService*) serialize to a stream
/// - icommon__classificationOfSpatialDataService* icommon__classificationOfSpatialDataService::soap_dup(soap*) returns deep copy of icommon__classificationOfSpatialDataService, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - icommon__classificationOfSpatialDataService::soap_del() deep deletes icommon__classificationOfSpatialDataService data members, use only after icommon__classificationOfSpatialDataService::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int icommon__classificationOfSpatialDataService::soap_type() returns SOAP_TYPE_icommon__classificationOfSpatialDataService or derived type identifier
class icommon__classificationOfSpatialDataService : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   The INSPIRE Metadata Regulation for spatial data services requires that a mandatory keyword which comes from a list and not an originating controlled vocabulary. This is also what the INSPIRE Metadata Technical Guidelines implement
/// </BLOCKQUOTE></PRE>
///
/// Vector of icommon__originatingControlledVocabulary* of length 0..0.
    std::vector<icommon__originatingControlledVocabulary*> OriginatingControlledVocabulary 0:0;	///< Prohibited element.
    enum _icommon__classificationOfSpatialDataService_KeywordValue
    {
	_icommon__classificationOfSpatialDataService_KeywordValue__chainDefinitionService,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="chainDefinitionService"
	_icommon__classificationOfSpatialDataService_KeywordValue__comEncodingService,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="comEncodingService"
	_icommon__classificationOfSpatialDataService_KeywordValue__comGeographicCompressionService,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="comGeographicCompressionService"
	_icommon__classificationOfSpatialDataService_KeywordValue__comGeographicFormatConversionService,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="comGeographicFormatConversionService"
	_icommon__classificationOfSpatialDataService_KeywordValue__comMessagingService,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="comMessagingService"
	_icommon__classificationOfSpatialDataService_KeywordValue__comRemoteFileAndExecutableManagement,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="comRemoteFileAndExecutableManagement"
	_icommon__classificationOfSpatialDataService_KeywordValue__comService,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="comService"
	_icommon__classificationOfSpatialDataService_KeywordValue__comTransferService,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="comTransferService"
	_icommon__classificationOfSpatialDataService_KeywordValue__humanCatalogueViewer,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="humanCatalogueViewer"
	_icommon__classificationOfSpatialDataService_KeywordValue__humanChainDefinitionEditor,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="humanChainDefinitionEditor"
	_icommon__classificationOfSpatialDataService_KeywordValue__humanFeatureGeneralizationEditor,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="humanFeatureGeneralizationEditor"
	_icommon__classificationOfSpatialDataService_KeywordValue__humanGeographicDataStructureViewer,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="humanGeographicDataStructureViewer"
	_icommon__classificationOfSpatialDataService_KeywordValue__humanGeographicFeatureEditor,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="humanGeographicFeatureEditor"
	_icommon__classificationOfSpatialDataService_KeywordValue__humanGeographicSpreadsheetViewer,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="humanGeographicSpreadsheetViewer"
	_icommon__classificationOfSpatialDataService_KeywordValue__humanGeographicSymbolEditor,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="humanGeographicSymbolEditor"
	_icommon__classificationOfSpatialDataService_KeywordValue__humanGeographicViewer,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="humanGeographicViewer"
	_icommon__classificationOfSpatialDataService_KeywordValue__humanInteractionService,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="humanInteractionService"
	_icommon__classificationOfSpatialDataService_KeywordValue__humanServiceEditor,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="humanServiceEditor"
	_icommon__classificationOfSpatialDataService_KeywordValue__humanWorkflowEnactmentManager,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="humanWorkflowEnactmentManager"
	_icommon__classificationOfSpatialDataService_KeywordValue__infoCatalogueService,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="infoCatalogueService"
	_icommon__classificationOfSpatialDataService_KeywordValue__infoCoverageAccessService,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="infoCoverageAccessService"
	_icommon__classificationOfSpatialDataService_KeywordValue__infoFeatureAccessService,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="infoFeatureAccessService"
	_icommon__classificationOfSpatialDataService_KeywordValue__infoFeatureTypeService,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="infoFeatureTypeService"
	_icommon__classificationOfSpatialDataService_KeywordValue__infoGazetteerService,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="infoGazetteerService"
	_icommon__classificationOfSpatialDataService_KeywordValue__infoManagementService,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="infoManagementService"
	_icommon__classificationOfSpatialDataService_KeywordValue__infoMapAccessService,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="infoMapAccessService"
	_icommon__classificationOfSpatialDataService_KeywordValue__infoOrderHandlingService,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="infoOrderHandlingService"
	_icommon__classificationOfSpatialDataService_KeywordValue__infoProductAccessService,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="infoProductAccessService"
	_icommon__classificationOfSpatialDataService_KeywordValue__infoRegistryService,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="infoRegistryService"
	_icommon__classificationOfSpatialDataService_KeywordValue__infoSensorDescriptionService,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="infoSensorDescriptionService"
	_icommon__classificationOfSpatialDataService_KeywordValue__infoStandingOrderService,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="infoStandingOrderService"
	_icommon__classificationOfSpatialDataService_KeywordValue__metadataGeographicAnnotationService,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="metadataGeographicAnnotationService"
	_icommon__classificationOfSpatialDataService_KeywordValue__metadataProcessingService,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="metadataProcessingService"
	_icommon__classificationOfSpatialDataService_KeywordValue__metadataStatisticalCalculationService,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="metadataStatisticalCalculationService"
	_icommon__classificationOfSpatialDataService_KeywordValue__spatialCoordinateConversionService,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="spatialCoordinateConversionService"
	_icommon__classificationOfSpatialDataService_KeywordValue__spatialCoordinateTransformationService,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="spatialCoordinateTransformationService"
	_icommon__classificationOfSpatialDataService_KeywordValue__spatialCoverageVectorConversionService,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="spatialCoverageVectorConversionService"
	_icommon__classificationOfSpatialDataService_KeywordValue__spatialDimensionMeasurementService,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="spatialDimensionMeasurementService"
	_icommon__classificationOfSpatialDataService_KeywordValue__spatialFeatureGeneralizationService,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="spatialFeatureGeneralizationService"
	_icommon__classificationOfSpatialDataService_KeywordValue__spatialFeatureManipulationService,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="spatialFeatureManipulationService"
	_icommon__classificationOfSpatialDataService_KeywordValue__spatialFeatureMatchingService,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="spatialFeatureMatchingService"
	_icommon__classificationOfSpatialDataService_KeywordValue__spatialImageCoordinateConversionService,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="spatialImageCoordinateConversionService"
	_icommon__classificationOfSpatialDataService_KeywordValue__spatialImageGeometryModelConversionService,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="spatialImageGeometryModelConversionService"
	_icommon__classificationOfSpatialDataService_KeywordValue__spatialOrthorectificationService,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="spatialOrthorectificationService"
	_icommon__classificationOfSpatialDataService_KeywordValue__spatialPositioningService,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="spatialPositioningService"
	_icommon__classificationOfSpatialDataService_KeywordValue__spatialProcessingService,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="spatialProcessingService"
	_icommon__classificationOfSpatialDataService_KeywordValue__spatialProximityAnalysisService,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="spatialProximityAnalysisService"
	_icommon__classificationOfSpatialDataService_KeywordValue__spatialRectificationService,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="spatialRectificationService"
	_icommon__classificationOfSpatialDataService_KeywordValue__spatialRouteDeterminationService,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="spatialRouteDeterminationService"
	_icommon__classificationOfSpatialDataService_KeywordValue__spatialSamplingService,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="spatialSamplingService"
	_icommon__classificationOfSpatialDataService_KeywordValue__spatialSensorGeometryModelAdjustmentService,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="spatialSensorGeometryModelAdjustmentService"
	_icommon__classificationOfSpatialDataService_KeywordValue__spatialSubsettingService,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="spatialSubsettingService"
	_icommon__classificationOfSpatialDataService_KeywordValue__spatialTilingChangeService,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="spatialTilingChangeService"
	_icommon__classificationOfSpatialDataService_KeywordValue__subscriptionService,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="subscriptionService"
	_icommon__classificationOfSpatialDataService_KeywordValue__taskManagementService,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="taskManagementService"
	_icommon__classificationOfSpatialDataService_KeywordValue__temporalProcessingService,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="temporalProcessingService"
	_icommon__classificationOfSpatialDataService_KeywordValue__temporalProximityAnalysisService,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="temporalProximityAnalysisService"
	_icommon__classificationOfSpatialDataService_KeywordValue__temporalReferenceSystemTransformationService,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="temporalReferenceSystemTransformationService"
	_icommon__classificationOfSpatialDataService_KeywordValue__temporalSamplingService,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="temporalSamplingService"
	_icommon__classificationOfSpatialDataService_KeywordValue__temporalSubsettingService,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="temporalSubsettingService"
	_icommon__classificationOfSpatialDataService_KeywordValue__thematicChangeDetectionService,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="thematicChangeDetectionService"
	_icommon__classificationOfSpatialDataService_KeywordValue__thematicClassificationService,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="thematicClassificationService"
	_icommon__classificationOfSpatialDataService_KeywordValue__thematicFeatureGeneralizationService,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="thematicFeatureGeneralizationService"
	_icommon__classificationOfSpatialDataService_KeywordValue__thematicGeocodingService,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="thematicGeocodingService"
	_icommon__classificationOfSpatialDataService_KeywordValue__thematicGeographicInformationExtractionService,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="thematicGeographicInformationExtractionService"
	_icommon__classificationOfSpatialDataService_KeywordValue__thematicGeoparsingService,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="thematicGeoparsingService"
	_icommon__classificationOfSpatialDataService_KeywordValue__thematicGoparameterCalculationService,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="thematicGoparameterCalculationService"
	_icommon__classificationOfSpatialDataService_KeywordValue__thematicImageManipulationService,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="thematicImageManipulationService"
	_icommon__classificationOfSpatialDataService_KeywordValue__thematicImageProcessingService,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="thematicImageProcessingService"
	_icommon__classificationOfSpatialDataService_KeywordValue__thematicImageSynthesisService,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="thematicImageSynthesisService"
	_icommon__classificationOfSpatialDataService_KeywordValue__thematicImageUnderstandingService,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="thematicImageUnderstandingService"
	_icommon__classificationOfSpatialDataService_KeywordValue__thematicMultibandImageManipulationService,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="thematicMultibandImageManipulationService"
	_icommon__classificationOfSpatialDataService_KeywordValue__thematicObjectDetectionService,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="thematicObjectDetectionService"
	_icommon__classificationOfSpatialDataService_KeywordValue__thematicProcessingService,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="thematicProcessingService"
	_icommon__classificationOfSpatialDataService_KeywordValue__thematicReducedResolutionGenerationService,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="thematicReducedResolutionGenerationService"
	_icommon__classificationOfSpatialDataService_KeywordValue__thematicSpatialCountingService,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="thematicSpatialCountingService"
	_icommon__classificationOfSpatialDataService_KeywordValue__thematicSubsettingService,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="thematicSubsettingService"
	_icommon__classificationOfSpatialDataService_KeywordValue__workflowEnactmentService,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="workflowEnactmentService"
    }
                                         KeywordValue                   1;	///< Required element.
/*  RESTRICTED FROM icommon__keyword:
    END OF RESTRICTED FROM icommon__keyword */
};

/// @brief "http://inspire.ec.europa.eu/schemas/common/1.0":languageElementISO6392B is a complexType with complexContent restriction of type "http://inspire.ec.europa.eu/schemas/common/1.0":languageElement.
///
/// @note class icommon__languageElementISO6392B operations:
/// - icommon__languageElementISO6392B* soap_new_icommon__languageElementISO6392B(soap*) allocate and default initialize
/// - icommon__languageElementISO6392B* soap_new_icommon__languageElementISO6392B(soap*, int num) allocate and default initialize an array
/// - icommon__languageElementISO6392B* soap_new_req_icommon__languageElementISO6392B(soap*, ...) allocate, set required members
/// - icommon__languageElementISO6392B* soap_new_set_icommon__languageElementISO6392B(soap*, ...) allocate, set all public members
/// - icommon__languageElementISO6392B::soap_default(soap*) default initialize members
/// - int soap_read_icommon__languageElementISO6392B(soap*, icommon__languageElementISO6392B*) deserialize from a stream
/// - int soap_write_icommon__languageElementISO6392B(soap*, icommon__languageElementISO6392B*) serialize to a stream
/// - icommon__languageElementISO6392B* icommon__languageElementISO6392B::soap_dup(soap*) returns deep copy of icommon__languageElementISO6392B, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - icommon__languageElementISO6392B::soap_del() deep deletes icommon__languageElementISO6392B data members, use only after icommon__languageElementISO6392B::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int icommon__languageElementISO6392B::soap_type() returns SOAP_TYPE_icommon__languageElementISO6392B or derived type identifier
class icommon__languageElementISO6392B : public xsd__anyType
{ public:
/// Element "Language" of type "http://inspire.ec.europa.eu/schemas/common/1.0":euLanguageISO6392B.
    enum icommon__euLanguageISO6392B     Language                       1;	///< Required element.
/*  RESTRICTED FROM icommon__languageElement:
    END OF RESTRICTED FROM icommon__languageElement */
};

/// @brief "http://inspire.ec.europa.eu/schemas/common/1.0":languageElementIETF is a complexType with complexContent restriction of type "http://inspire.ec.europa.eu/schemas/common/1.0":languageElement.
///
/// @note class icommon__languageElementIETF operations:
/// - icommon__languageElementIETF* soap_new_icommon__languageElementIETF(soap*) allocate and default initialize
/// - icommon__languageElementIETF* soap_new_icommon__languageElementIETF(soap*, int num) allocate and default initialize an array
/// - icommon__languageElementIETF* soap_new_req_icommon__languageElementIETF(soap*, ...) allocate, set required members
/// - icommon__languageElementIETF* soap_new_set_icommon__languageElementIETF(soap*, ...) allocate, set all public members
/// - icommon__languageElementIETF::soap_default(soap*) default initialize members
/// - int soap_read_icommon__languageElementIETF(soap*, icommon__languageElementIETF*) deserialize from a stream
/// - int soap_write_icommon__languageElementIETF(soap*, icommon__languageElementIETF*) serialize to a stream
/// - icommon__languageElementIETF* icommon__languageElementIETF::soap_dup(soap*) returns deep copy of icommon__languageElementIETF, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - icommon__languageElementIETF::soap_del() deep deletes icommon__languageElementIETF data members, use only after icommon__languageElementIETF::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int icommon__languageElementIETF::soap_type() returns SOAP_TYPE_icommon__languageElementIETF or derived type identifier
class icommon__languageElementIETF : public xsd__anyType
{ public:
/// Element "Language" of type "http://inspire.ec.europa.eu/schemas/common/1.0":euLanguageIETF.
    enum icommon__euLanguageIETF         Language                       1;	///< Required element.
/*  RESTRICTED FROM icommon__languageElement:
    END OF RESTRICTED FROM icommon__languageElement */
};

/// @brief "http://inspire.ec.europa.eu/schemas/common/1.0":inspireTheme is an abstract complexType with complexContent restriction of type "http://inspire.ec.europa.eu/schemas/common/1.0":keyword.
///
/// This type is restricted by:
/// - "http://inspire.ec.europa.eu/schemas/common/1.0":inspireTheme_bul as icommon__inspireTheme_x005fbul
/// - "http://inspire.ec.europa.eu/schemas/common/1.0":inspireTheme_cze as icommon__inspireTheme_x005fcze
/// - "http://inspire.ec.europa.eu/schemas/common/1.0":inspireTheme_dan as icommon__inspireTheme_x005fdan
/// - "http://inspire.ec.europa.eu/schemas/common/1.0":inspireTheme_dut as icommon__inspireTheme_x005fdut
/// - "http://inspire.ec.europa.eu/schemas/common/1.0":inspireTheme_eng as icommon__inspireTheme_x005feng
/// - "http://inspire.ec.europa.eu/schemas/common/1.0":inspireTheme_est as icommon__inspireTheme_x005fest
/// - "http://inspire.ec.europa.eu/schemas/common/1.0":inspireTheme_fin as icommon__inspireTheme_x005ffin
/// - "http://inspire.ec.europa.eu/schemas/common/1.0":inspireTheme_fre as icommon__inspireTheme_x005ffre
/// - "http://inspire.ec.europa.eu/schemas/common/1.0":inspireTheme_ger as icommon__inspireTheme_x005fger
/// - "http://inspire.ec.europa.eu/schemas/common/1.0":inspireTheme_gle as icommon__inspireTheme_x005fgle
/// - "http://inspire.ec.europa.eu/schemas/common/1.0":inspireTheme_gre as icommon__inspireTheme_x005fgre
/// - "http://inspire.ec.europa.eu/schemas/common/1.0":inspireTheme_hun as icommon__inspireTheme_x005fhun
/// - "http://inspire.ec.europa.eu/schemas/common/1.0":inspireTheme_ita as icommon__inspireTheme_x005fita
/// - "http://inspire.ec.europa.eu/schemas/common/1.0":inspireTheme_lav as icommon__inspireTheme_x005flav
/// - "http://inspire.ec.europa.eu/schemas/common/1.0":inspireTheme_lit as icommon__inspireTheme_x005flit
/// - "http://inspire.ec.europa.eu/schemas/common/1.0":inspireTheme_mlt as icommon__inspireTheme_x005fmlt
/// - "http://inspire.ec.europa.eu/schemas/common/1.0":inspireTheme_pol as icommon__inspireTheme_x005fpol
/// - "http://inspire.ec.europa.eu/schemas/common/1.0":inspireTheme_por as icommon__inspireTheme_x005fpor
/// - "http://inspire.ec.europa.eu/schemas/common/1.0":inspireTheme_rum as icommon__inspireTheme_x005frum
/// - "http://inspire.ec.europa.eu/schemas/common/1.0":inspireTheme_slo as icommon__inspireTheme_x005fslo
/// - "http://inspire.ec.europa.eu/schemas/common/1.0":inspireTheme_slv as icommon__inspireTheme_x005fslv
/// - "http://inspire.ec.europa.eu/schemas/common/1.0":inspireTheme_spa as icommon__inspireTheme_x005fspa
/// - "http://inspire.ec.europa.eu/schemas/common/1.0":inspireTheme_swe as icommon__inspireTheme_x005fswe
///
/// @note class icommon__inspireTheme operations:
/// - icommon__inspireTheme* soap_new_icommon__inspireTheme(soap*) allocate and default initialize
/// - icommon__inspireTheme* soap_new_icommon__inspireTheme(soap*, int num) allocate and default initialize an array
/// - icommon__inspireTheme* soap_new_req_icommon__inspireTheme(soap*, ...) allocate, set required members
/// - icommon__inspireTheme* soap_new_set_icommon__inspireTheme(soap*, ...) allocate, set all public members
/// - icommon__inspireTheme::soap_default(soap*) default initialize members
/// - int soap_read_icommon__inspireTheme(soap*, icommon__inspireTheme*) deserialize from a stream
/// - int soap_write_icommon__inspireTheme(soap*, icommon__inspireTheme*) serialize to a stream
/// - icommon__inspireTheme* icommon__inspireTheme::soap_dup(soap*) returns deep copy of icommon__inspireTheme, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - icommon__inspireTheme::soap_del() deep deletes icommon__inspireTheme data members, use only after icommon__inspireTheme::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int icommon__inspireTheme::soap_type() returns SOAP_TYPE_icommon__inspireTheme or derived type identifier
class icommon__inspireTheme : public xsd__anyType
{ public:
/// Element "OriginatingControlledVocabulary" of type "http://inspire.ec.europa.eu/schemas/common/1.0":originatingControlledVocabularyGemetInspireThemes.
    icommon__originatingControlledVocabularyGemetInspireThemes*  OriginatingControlledVocabulary 1;	///< Required element.
/// Element "KeywordValue" of type "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue.
    icommon__keywordValue                KeywordValue                   1;	///< Required element.
/*  RESTRICTED FROM icommon__keyword:
    END OF RESTRICTED FROM icommon__keyword */
};

/// @brief "http://inspire.ec.europa.eu/schemas/common/1.0":resLocInspireInteroperabilityRegulation_bul is a complexType with complexContent restriction of type "http://inspire.ec.europa.eu/schemas/common/1.0":resourceLocatorType.
///
/// @note class icommon__resLocInspireInteroperabilityRegulation_x005fbul operations:
/// - icommon__resLocInspireInteroperabilityRegulation_x005fbul* soap_new_icommon__resLocInspireInteroperabilityRegulation_x005fbul(soap*) allocate and default initialize
/// - icommon__resLocInspireInteroperabilityRegulation_x005fbul* soap_new_icommon__resLocInspireInteroperabilityRegulation_x005fbul(soap*, int num) allocate and default initialize an array
/// - icommon__resLocInspireInteroperabilityRegulation_x005fbul* soap_new_req_icommon__resLocInspireInteroperabilityRegulation_x005fbul(soap*, ...) allocate, set required members
/// - icommon__resLocInspireInteroperabilityRegulation_x005fbul* soap_new_set_icommon__resLocInspireInteroperabilityRegulation_x005fbul(soap*, ...) allocate, set all public members
/// - icommon__resLocInspireInteroperabilityRegulation_x005fbul::soap_default(soap*) default initialize members
/// - int soap_read_icommon__resLocInspireInteroperabilityRegulation_x005fbul(soap*, icommon__resLocInspireInteroperabilityRegulation_x005fbul*) deserialize from a stream
/// - int soap_write_icommon__resLocInspireInteroperabilityRegulation_x005fbul(soap*, icommon__resLocInspireInteroperabilityRegulation_x005fbul*) serialize to a stream
/// - icommon__resLocInspireInteroperabilityRegulation_x005fbul* icommon__resLocInspireInteroperabilityRegulation_x005fbul::soap_dup(soap*) returns deep copy of icommon__resLocInspireInteroperabilityRegulation_x005fbul, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - icommon__resLocInspireInteroperabilityRegulation_x005fbul::soap_del() deep deletes icommon__resLocInspireInteroperabilityRegulation_x005fbul data members, use only after icommon__resLocInspireInteroperabilityRegulation_x005fbul::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int icommon__resLocInspireInteroperabilityRegulation_x005fbul::soap_type() returns SOAP_TYPE_icommon__resLocInspireInteroperabilityRegulation_x005fbul or derived type identifier
class icommon__resLocInspireInteroperabilityRegulation_x005fbul : public xsd__anyType
{ public:
    enum _icommon__resLocInspireInteroperabilityRegulation_x005fbul_URL
    {
	_icommon__resLocInspireInteroperabilityRegulation_x005fbul_URL__http_x003a_x002f_x002feur_lex_x002eeuropa_x002eeu_x002fLexUriServ_x002fLexUriServ_x002edo_x003furi_x003dOJ_x003aL_x003a2010_x003a323_x003a0011_x003a0102_x003aBG_x003aPDF,	///< xs:anyURI value="http://eur-lex.europa.eu/LexUriServ/LexUriServ.do?uri=OJ:L:2010:323:0011:0102:BG:PDF"
    }
                                         URL                            1;	///< Required element.
    enum _icommon__resLocInspireInteroperabilityRegulation_x005fbul_MediaType
    {
	_icommon__resLocInspireInteroperabilityRegulation_x005fbul_MediaType__application_x002fpdf,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":mediaType value="application/pdf"
    }
                                         MediaType                      1;	///< Required element.
/*  RESTRICTED FROM icommon__resourceLocatorType:
    END OF RESTRICTED FROM icommon__resourceLocatorType */
};

/// @brief "http://inspire.ec.europa.eu/schemas/common/1.0":resLocInspireInteroperabilityRegulation_cze is a complexType with complexContent restriction of type "http://inspire.ec.europa.eu/schemas/common/1.0":resourceLocatorType.
///
/// @note class icommon__resLocInspireInteroperabilityRegulation_x005fcze operations:
/// - icommon__resLocInspireInteroperabilityRegulation_x005fcze* soap_new_icommon__resLocInspireInteroperabilityRegulation_x005fcze(soap*) allocate and default initialize
/// - icommon__resLocInspireInteroperabilityRegulation_x005fcze* soap_new_icommon__resLocInspireInteroperabilityRegulation_x005fcze(soap*, int num) allocate and default initialize an array
/// - icommon__resLocInspireInteroperabilityRegulation_x005fcze* soap_new_req_icommon__resLocInspireInteroperabilityRegulation_x005fcze(soap*, ...) allocate, set required members
/// - icommon__resLocInspireInteroperabilityRegulation_x005fcze* soap_new_set_icommon__resLocInspireInteroperabilityRegulation_x005fcze(soap*, ...) allocate, set all public members
/// - icommon__resLocInspireInteroperabilityRegulation_x005fcze::soap_default(soap*) default initialize members
/// - int soap_read_icommon__resLocInspireInteroperabilityRegulation_x005fcze(soap*, icommon__resLocInspireInteroperabilityRegulation_x005fcze*) deserialize from a stream
/// - int soap_write_icommon__resLocInspireInteroperabilityRegulation_x005fcze(soap*, icommon__resLocInspireInteroperabilityRegulation_x005fcze*) serialize to a stream
/// - icommon__resLocInspireInteroperabilityRegulation_x005fcze* icommon__resLocInspireInteroperabilityRegulation_x005fcze::soap_dup(soap*) returns deep copy of icommon__resLocInspireInteroperabilityRegulation_x005fcze, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - icommon__resLocInspireInteroperabilityRegulation_x005fcze::soap_del() deep deletes icommon__resLocInspireInteroperabilityRegulation_x005fcze data members, use only after icommon__resLocInspireInteroperabilityRegulation_x005fcze::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int icommon__resLocInspireInteroperabilityRegulation_x005fcze::soap_type() returns SOAP_TYPE_icommon__resLocInspireInteroperabilityRegulation_x005fcze or derived type identifier
class icommon__resLocInspireInteroperabilityRegulation_x005fcze : public xsd__anyType
{ public:
    enum _icommon__resLocInspireInteroperabilityRegulation_x005fcze_URL
    {
	_icommon__resLocInspireInteroperabilityRegulation_x005fcze_URL__http_x003a_x002f_x002feur_lex_x002eeuropa_x002eeu_x002fLexUriServ_x002fLexUriServ_x002edo_x003furi_x003dOJ_x003aL_x003a2010_x003a323_x003a0011_x003a0102_x003aCS_x003aPDF,	///< xs:anyURI value="http://eur-lex.europa.eu/LexUriServ/LexUriServ.do?uri=OJ:L:2010:323:0011:0102:CS:PDF"
    }
                                         URL                            1;	///< Required element.
    enum _icommon__resLocInspireInteroperabilityRegulation_x005fcze_MediaType
    {
	_icommon__resLocInspireInteroperabilityRegulation_x005fcze_MediaType__application_x002fpdf,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":mediaType value="application/pdf"
    }
                                         MediaType                      1;	///< Required element.
/*  RESTRICTED FROM icommon__resourceLocatorType:
    END OF RESTRICTED FROM icommon__resourceLocatorType */
};

/// @brief "http://inspire.ec.europa.eu/schemas/common/1.0":resLocInspireInteroperabilityRegulation_dan is a complexType with complexContent restriction of type "http://inspire.ec.europa.eu/schemas/common/1.0":resourceLocatorType.
///
/// @note class icommon__resLocInspireInteroperabilityRegulation_x005fdan operations:
/// - icommon__resLocInspireInteroperabilityRegulation_x005fdan* soap_new_icommon__resLocInspireInteroperabilityRegulation_x005fdan(soap*) allocate and default initialize
/// - icommon__resLocInspireInteroperabilityRegulation_x005fdan* soap_new_icommon__resLocInspireInteroperabilityRegulation_x005fdan(soap*, int num) allocate and default initialize an array
/// - icommon__resLocInspireInteroperabilityRegulation_x005fdan* soap_new_req_icommon__resLocInspireInteroperabilityRegulation_x005fdan(soap*, ...) allocate, set required members
/// - icommon__resLocInspireInteroperabilityRegulation_x005fdan* soap_new_set_icommon__resLocInspireInteroperabilityRegulation_x005fdan(soap*, ...) allocate, set all public members
/// - icommon__resLocInspireInteroperabilityRegulation_x005fdan::soap_default(soap*) default initialize members
/// - int soap_read_icommon__resLocInspireInteroperabilityRegulation_x005fdan(soap*, icommon__resLocInspireInteroperabilityRegulation_x005fdan*) deserialize from a stream
/// - int soap_write_icommon__resLocInspireInteroperabilityRegulation_x005fdan(soap*, icommon__resLocInspireInteroperabilityRegulation_x005fdan*) serialize to a stream
/// - icommon__resLocInspireInteroperabilityRegulation_x005fdan* icommon__resLocInspireInteroperabilityRegulation_x005fdan::soap_dup(soap*) returns deep copy of icommon__resLocInspireInteroperabilityRegulation_x005fdan, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - icommon__resLocInspireInteroperabilityRegulation_x005fdan::soap_del() deep deletes icommon__resLocInspireInteroperabilityRegulation_x005fdan data members, use only after icommon__resLocInspireInteroperabilityRegulation_x005fdan::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int icommon__resLocInspireInteroperabilityRegulation_x005fdan::soap_type() returns SOAP_TYPE_icommon__resLocInspireInteroperabilityRegulation_x005fdan or derived type identifier
class icommon__resLocInspireInteroperabilityRegulation_x005fdan : public xsd__anyType
{ public:
    enum _icommon__resLocInspireInteroperabilityRegulation_x005fdan_URL
    {
	_icommon__resLocInspireInteroperabilityRegulation_x005fdan_URL__http_x003a_x002f_x002feur_lex_x002eeuropa_x002eeu_x002fLexUriServ_x002fLexUriServ_x002edo_x003furi_x003dOJ_x003aL_x003a2010_x003a323_x003a0011_x003a0102_x003aDA_x003aPDF,	///< xs:anyURI value="http://eur-lex.europa.eu/LexUriServ/LexUriServ.do?uri=OJ:L:2010:323:0011:0102:DA:PDF"
    }
                                         URL                            1;	///< Required element.
    enum _icommon__resLocInspireInteroperabilityRegulation_x005fdan_MediaType
    {
	_icommon__resLocInspireInteroperabilityRegulation_x005fdan_MediaType__application_x002fpdf,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":mediaType value="application/pdf"
    }
                                         MediaType                      1;	///< Required element.
/*  RESTRICTED FROM icommon__resourceLocatorType:
    END OF RESTRICTED FROM icommon__resourceLocatorType */
};

/// @brief "http://inspire.ec.europa.eu/schemas/common/1.0":resLocInspireInteroperabilityRegulation_dut is a complexType with complexContent restriction of type "http://inspire.ec.europa.eu/schemas/common/1.0":resourceLocatorType.
///
/// @note class icommon__resLocInspireInteroperabilityRegulation_x005fdut operations:
/// - icommon__resLocInspireInteroperabilityRegulation_x005fdut* soap_new_icommon__resLocInspireInteroperabilityRegulation_x005fdut(soap*) allocate and default initialize
/// - icommon__resLocInspireInteroperabilityRegulation_x005fdut* soap_new_icommon__resLocInspireInteroperabilityRegulation_x005fdut(soap*, int num) allocate and default initialize an array
/// - icommon__resLocInspireInteroperabilityRegulation_x005fdut* soap_new_req_icommon__resLocInspireInteroperabilityRegulation_x005fdut(soap*, ...) allocate, set required members
/// - icommon__resLocInspireInteroperabilityRegulation_x005fdut* soap_new_set_icommon__resLocInspireInteroperabilityRegulation_x005fdut(soap*, ...) allocate, set all public members
/// - icommon__resLocInspireInteroperabilityRegulation_x005fdut::soap_default(soap*) default initialize members
/// - int soap_read_icommon__resLocInspireInteroperabilityRegulation_x005fdut(soap*, icommon__resLocInspireInteroperabilityRegulation_x005fdut*) deserialize from a stream
/// - int soap_write_icommon__resLocInspireInteroperabilityRegulation_x005fdut(soap*, icommon__resLocInspireInteroperabilityRegulation_x005fdut*) serialize to a stream
/// - icommon__resLocInspireInteroperabilityRegulation_x005fdut* icommon__resLocInspireInteroperabilityRegulation_x005fdut::soap_dup(soap*) returns deep copy of icommon__resLocInspireInteroperabilityRegulation_x005fdut, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - icommon__resLocInspireInteroperabilityRegulation_x005fdut::soap_del() deep deletes icommon__resLocInspireInteroperabilityRegulation_x005fdut data members, use only after icommon__resLocInspireInteroperabilityRegulation_x005fdut::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int icommon__resLocInspireInteroperabilityRegulation_x005fdut::soap_type() returns SOAP_TYPE_icommon__resLocInspireInteroperabilityRegulation_x005fdut or derived type identifier
class icommon__resLocInspireInteroperabilityRegulation_x005fdut : public xsd__anyType
{ public:
    enum _icommon__resLocInspireInteroperabilityRegulation_x005fdut_URL
    {
	_icommon__resLocInspireInteroperabilityRegulation_x005fdut_URL__http_x003a_x002f_x002feur_lex_x002eeuropa_x002eeu_x002fLexUriServ_x002fLexUriServ_x002edo_x003furi_x003dOJ_x003aL_x003a2010_x003a323_x003a0011_x003a0102_x003aNL_x003aPDF,	///< xs:anyURI value="http://eur-lex.europa.eu/LexUriServ/LexUriServ.do?uri=OJ:L:2010:323:0011:0102:NL:PDF"
    }
                                         URL                            1;	///< Required element.
    enum _icommon__resLocInspireInteroperabilityRegulation_x005fdut_MediaType
    {
	_icommon__resLocInspireInteroperabilityRegulation_x005fdut_MediaType__application_x002fpdf,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":mediaType value="application/pdf"
    }
                                         MediaType                      1;	///< Required element.
/*  RESTRICTED FROM icommon__resourceLocatorType:
    END OF RESTRICTED FROM icommon__resourceLocatorType */
};

/// @brief "http://inspire.ec.europa.eu/schemas/common/1.0":resLocGEMETInspireThemes_eng is a complexType with complexContent restriction of type "http://inspire.ec.europa.eu/schemas/common/1.0":resourceLocatorType.
///
/// @note class icommon__resLocGEMETInspireThemes_x005feng operations:
/// - icommon__resLocGEMETInspireThemes_x005feng* soap_new_icommon__resLocGEMETInspireThemes_x005feng(soap*) allocate and default initialize
/// - icommon__resLocGEMETInspireThemes_x005feng* soap_new_icommon__resLocGEMETInspireThemes_x005feng(soap*, int num) allocate and default initialize an array
/// - icommon__resLocGEMETInspireThemes_x005feng* soap_new_req_icommon__resLocGEMETInspireThemes_x005feng(soap*, ...) allocate, set required members
/// - icommon__resLocGEMETInspireThemes_x005feng* soap_new_set_icommon__resLocGEMETInspireThemes_x005feng(soap*, ...) allocate, set all public members
/// - icommon__resLocGEMETInspireThemes_x005feng::soap_default(soap*) default initialize members
/// - int soap_read_icommon__resLocGEMETInspireThemes_x005feng(soap*, icommon__resLocGEMETInspireThemes_x005feng*) deserialize from a stream
/// - int soap_write_icommon__resLocGEMETInspireThemes_x005feng(soap*, icommon__resLocGEMETInspireThemes_x005feng*) serialize to a stream
/// - icommon__resLocGEMETInspireThemes_x005feng* icommon__resLocGEMETInspireThemes_x005feng::soap_dup(soap*) returns deep copy of icommon__resLocGEMETInspireThemes_x005feng, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - icommon__resLocGEMETInspireThemes_x005feng::soap_del() deep deletes icommon__resLocGEMETInspireThemes_x005feng data members, use only after icommon__resLocGEMETInspireThemes_x005feng::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int icommon__resLocGEMETInspireThemes_x005feng::soap_type() returns SOAP_TYPE_icommon__resLocGEMETInspireThemes_x005feng or derived type identifier
class icommon__resLocGEMETInspireThemes_x005feng : public xsd__anyType
{ public:
    enum _icommon__resLocGEMETInspireThemes_x005feng_URL
    {
	_icommon__resLocGEMETInspireThemes_x005feng_URL__http_x003a_x002f_x002fwww_x002eeionet_x002eeuropa_x002eeu_x002fgemet_x002finspire_x005fthemes_x003flangcode_x003den,	///< xs:anyURI value="http://www.eionet.europa.eu/gemet/inspire_themes?langcode=en"
    }
                                         URL                            1;	///< Required element.
    enum _icommon__resLocGEMETInspireThemes_x005feng_MediaType
    {
	_icommon__resLocGEMETInspireThemes_x005feng_MediaType__text_x002fhtml,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":mediaType value="text/html"
    }
                                         MediaType                      1;	///< Required element.
/*  RESTRICTED FROM icommon__resourceLocatorType:
    END OF RESTRICTED FROM icommon__resourceLocatorType */
};

/// @brief "http://inspire.ec.europa.eu/schemas/common/1.0":citationGEMETInspireThemes_eng is a complexType with complexContent restriction of type "http://inspire.ec.europa.eu/schemas/common/1.0":citation.
///
/// @note class icommon__citationGEMETInspireThemes_x005feng operations:
/// - icommon__citationGEMETInspireThemes_x005feng* soap_new_icommon__citationGEMETInspireThemes_x005feng(soap*) allocate and default initialize
/// - icommon__citationGEMETInspireThemes_x005feng* soap_new_icommon__citationGEMETInspireThemes_x005feng(soap*, int num) allocate and default initialize an array
/// - icommon__citationGEMETInspireThemes_x005feng* soap_new_req_icommon__citationGEMETInspireThemes_x005feng(soap*, ...) allocate, set required members
/// - icommon__citationGEMETInspireThemes_x005feng* soap_new_set_icommon__citationGEMETInspireThemes_x005feng(soap*, ...) allocate, set all public members
/// - icommon__citationGEMETInspireThemes_x005feng::soap_default(soap*) default initialize members
/// - int soap_read_icommon__citationGEMETInspireThemes_x005feng(soap*, icommon__citationGEMETInspireThemes_x005feng*) deserialize from a stream
/// - int soap_write_icommon__citationGEMETInspireThemes_x005feng(soap*, icommon__citationGEMETInspireThemes_x005feng*) serialize to a stream
/// - icommon__citationGEMETInspireThemes_x005feng* icommon__citationGEMETInspireThemes_x005feng::soap_dup(soap*) returns deep copy of icommon__citationGEMETInspireThemes_x005feng, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - icommon__citationGEMETInspireThemes_x005feng::soap_del() deep deletes icommon__citationGEMETInspireThemes_x005feng data members, use only after icommon__citationGEMETInspireThemes_x005feng::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int icommon__citationGEMETInspireThemes_x005feng::soap_type() returns SOAP_TYPE_icommon__citationGEMETInspireThemes_x005feng or derived type identifier
class icommon__citationGEMETInspireThemes_x005feng : public xsd__anyType
{ public:
    enum _icommon__citationGEMETInspireThemes_x005feng_Title
    {
	_icommon__citationGEMETInspireThemes_x005feng_Title__GEMET_x0020__x0020INSPIRE_x0020themes,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":notEmptyString value="GEMET - INSPIRE themes"
    }
                                         Title                          1;	///< Required element.
//  BEGIN CHOICE <xs:choice>
  $ int                                  __union_citationGEMETInspireThemes_x005feng;	///< Union _icommon__union_citationGEMETInspireThemes_x005feng selector: set to SOAP_UNION__icommon__union_citationGEMETInspireThemes_x005feng_<fieldname>
    union _icommon__union_citationGEMETInspireThemes_x005feng
    {
    enum _icommon__citationGEMETInspireThemes_x005feng_DateOfPublication
    {
	_icommon__citationGEMETInspireThemes_x005feng_DateOfPublication__2008_06_01,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":iso8601Date value="2008-06-01"
    }
                                        *DateOfPublication             ;	///< Choice of element (one of multiple choices).
    }                                    union_citationGEMETInspireThemes_x005feng;
//  END OF CHOICE
/// Element "URI" has no type or ref (empty or with literal XML content).
/// Vector of XML of length 0..0.
    std::vector<_XML                   > URI                            0:0;	///< Prohibited element.
/// Element "ResourceLocator" of type "http://inspire.ec.europa.eu/schemas/common/1.0":resLocGEMETInspireThemes_eng.
    icommon__resLocGEMETInspireThemes_x005feng*  ResourceLocator                1;	///< Required element.
/*  RESTRICTED FROM icommon__citation:
    END OF RESTRICTED FROM icommon__citation */
};

/// @brief "http://inspire.ec.europa.eu/schemas/common/1.0":resLocInspireInteroperabilityRegulation_eng is a complexType with complexContent restriction of type "http://inspire.ec.europa.eu/schemas/common/1.0":resourceLocatorType.
///
/// @note class icommon__resLocInspireInteroperabilityRegulation_x005feng operations:
/// - icommon__resLocInspireInteroperabilityRegulation_x005feng* soap_new_icommon__resLocInspireInteroperabilityRegulation_x005feng(soap*) allocate and default initialize
/// - icommon__resLocInspireInteroperabilityRegulation_x005feng* soap_new_icommon__resLocInspireInteroperabilityRegulation_x005feng(soap*, int num) allocate and default initialize an array
/// - icommon__resLocInspireInteroperabilityRegulation_x005feng* soap_new_req_icommon__resLocInspireInteroperabilityRegulation_x005feng(soap*, ...) allocate, set required members
/// - icommon__resLocInspireInteroperabilityRegulation_x005feng* soap_new_set_icommon__resLocInspireInteroperabilityRegulation_x005feng(soap*, ...) allocate, set all public members
/// - icommon__resLocInspireInteroperabilityRegulation_x005feng::soap_default(soap*) default initialize members
/// - int soap_read_icommon__resLocInspireInteroperabilityRegulation_x005feng(soap*, icommon__resLocInspireInteroperabilityRegulation_x005feng*) deserialize from a stream
/// - int soap_write_icommon__resLocInspireInteroperabilityRegulation_x005feng(soap*, icommon__resLocInspireInteroperabilityRegulation_x005feng*) serialize to a stream
/// - icommon__resLocInspireInteroperabilityRegulation_x005feng* icommon__resLocInspireInteroperabilityRegulation_x005feng::soap_dup(soap*) returns deep copy of icommon__resLocInspireInteroperabilityRegulation_x005feng, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - icommon__resLocInspireInteroperabilityRegulation_x005feng::soap_del() deep deletes icommon__resLocInspireInteroperabilityRegulation_x005feng data members, use only after icommon__resLocInspireInteroperabilityRegulation_x005feng::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int icommon__resLocInspireInteroperabilityRegulation_x005feng::soap_type() returns SOAP_TYPE_icommon__resLocInspireInteroperabilityRegulation_x005feng or derived type identifier
class icommon__resLocInspireInteroperabilityRegulation_x005feng : public xsd__anyType
{ public:
    enum _icommon__resLocInspireInteroperabilityRegulation_x005feng_URL
    {
	_icommon__resLocInspireInteroperabilityRegulation_x005feng_URL__http_x003a_x002f_x002feur_lex_x002eeuropa_x002eeu_x002fLexUriServ_x002fLexUriServ_x002edo_x003furi_x003dOJ_x003aL_x003a2010_x003a323_x003a0011_x003a0102_x003aEN_x003aPDF,	///< xs:anyURI value="http://eur-lex.europa.eu/LexUriServ/LexUriServ.do?uri=OJ:L:2010:323:0011:0102:EN:PDF"
    }
                                         URL                            1;	///< Required element.
    enum _icommon__resLocInspireInteroperabilityRegulation_x005feng_MediaType
    {
	_icommon__resLocInspireInteroperabilityRegulation_x005feng_MediaType__application_x002fpdf,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":mediaType value="application/pdf"
    }
                                         MediaType                      1;	///< Required element.
/*  RESTRICTED FROM icommon__resourceLocatorType:
    END OF RESTRICTED FROM icommon__resourceLocatorType */
};

/// @brief "http://inspire.ec.europa.eu/schemas/common/1.0":resLocInspireInteroperabilityRegulation_est is a complexType with complexContent restriction of type "http://inspire.ec.europa.eu/schemas/common/1.0":resourceLocatorType.
///
/// @note class icommon__resLocInspireInteroperabilityRegulation_x005fest operations:
/// - icommon__resLocInspireInteroperabilityRegulation_x005fest* soap_new_icommon__resLocInspireInteroperabilityRegulation_x005fest(soap*) allocate and default initialize
/// - icommon__resLocInspireInteroperabilityRegulation_x005fest* soap_new_icommon__resLocInspireInteroperabilityRegulation_x005fest(soap*, int num) allocate and default initialize an array
/// - icommon__resLocInspireInteroperabilityRegulation_x005fest* soap_new_req_icommon__resLocInspireInteroperabilityRegulation_x005fest(soap*, ...) allocate, set required members
/// - icommon__resLocInspireInteroperabilityRegulation_x005fest* soap_new_set_icommon__resLocInspireInteroperabilityRegulation_x005fest(soap*, ...) allocate, set all public members
/// - icommon__resLocInspireInteroperabilityRegulation_x005fest::soap_default(soap*) default initialize members
/// - int soap_read_icommon__resLocInspireInteroperabilityRegulation_x005fest(soap*, icommon__resLocInspireInteroperabilityRegulation_x005fest*) deserialize from a stream
/// - int soap_write_icommon__resLocInspireInteroperabilityRegulation_x005fest(soap*, icommon__resLocInspireInteroperabilityRegulation_x005fest*) serialize to a stream
/// - icommon__resLocInspireInteroperabilityRegulation_x005fest* icommon__resLocInspireInteroperabilityRegulation_x005fest::soap_dup(soap*) returns deep copy of icommon__resLocInspireInteroperabilityRegulation_x005fest, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - icommon__resLocInspireInteroperabilityRegulation_x005fest::soap_del() deep deletes icommon__resLocInspireInteroperabilityRegulation_x005fest data members, use only after icommon__resLocInspireInteroperabilityRegulation_x005fest::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int icommon__resLocInspireInteroperabilityRegulation_x005fest::soap_type() returns SOAP_TYPE_icommon__resLocInspireInteroperabilityRegulation_x005fest or derived type identifier
class icommon__resLocInspireInteroperabilityRegulation_x005fest : public xsd__anyType
{ public:
    enum _icommon__resLocInspireInteroperabilityRegulation_x005fest_URL
    {
	_icommon__resLocInspireInteroperabilityRegulation_x005fest_URL__http_x003a_x002f_x002feur_lex_x002eeuropa_x002eeu_x002fLexUriServ_x002fLexUriServ_x002edo_x003furi_x003dOJ_x003aL_x003a2010_x003a323_x003a0011_x003a0102_x003aET_x003aPDF,	///< xs:anyURI value="http://eur-lex.europa.eu/LexUriServ/LexUriServ.do?uri=OJ:L:2010:323:0011:0102:ET:PDF"
    }
                                         URL                            1;	///< Required element.
    enum _icommon__resLocInspireInteroperabilityRegulation_x005fest_MediaType
    {
	_icommon__resLocInspireInteroperabilityRegulation_x005fest_MediaType__application_x002fpdf,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":mediaType value="application/pdf"
    }
                                         MediaType                      1;	///< Required element.
/*  RESTRICTED FROM icommon__resourceLocatorType:
    END OF RESTRICTED FROM icommon__resourceLocatorType */
};

/// @brief "http://inspire.ec.europa.eu/schemas/common/1.0":resLocInspireInteroperabilityRegulation_fin is a complexType with complexContent restriction of type "http://inspire.ec.europa.eu/schemas/common/1.0":resourceLocatorType.
///
/// @note class icommon__resLocInspireInteroperabilityRegulation_x005ffin operations:
/// - icommon__resLocInspireInteroperabilityRegulation_x005ffin* soap_new_icommon__resLocInspireInteroperabilityRegulation_x005ffin(soap*) allocate and default initialize
/// - icommon__resLocInspireInteroperabilityRegulation_x005ffin* soap_new_icommon__resLocInspireInteroperabilityRegulation_x005ffin(soap*, int num) allocate and default initialize an array
/// - icommon__resLocInspireInteroperabilityRegulation_x005ffin* soap_new_req_icommon__resLocInspireInteroperabilityRegulation_x005ffin(soap*, ...) allocate, set required members
/// - icommon__resLocInspireInteroperabilityRegulation_x005ffin* soap_new_set_icommon__resLocInspireInteroperabilityRegulation_x005ffin(soap*, ...) allocate, set all public members
/// - icommon__resLocInspireInteroperabilityRegulation_x005ffin::soap_default(soap*) default initialize members
/// - int soap_read_icommon__resLocInspireInteroperabilityRegulation_x005ffin(soap*, icommon__resLocInspireInteroperabilityRegulation_x005ffin*) deserialize from a stream
/// - int soap_write_icommon__resLocInspireInteroperabilityRegulation_x005ffin(soap*, icommon__resLocInspireInteroperabilityRegulation_x005ffin*) serialize to a stream
/// - icommon__resLocInspireInteroperabilityRegulation_x005ffin* icommon__resLocInspireInteroperabilityRegulation_x005ffin::soap_dup(soap*) returns deep copy of icommon__resLocInspireInteroperabilityRegulation_x005ffin, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - icommon__resLocInspireInteroperabilityRegulation_x005ffin::soap_del() deep deletes icommon__resLocInspireInteroperabilityRegulation_x005ffin data members, use only after icommon__resLocInspireInteroperabilityRegulation_x005ffin::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int icommon__resLocInspireInteroperabilityRegulation_x005ffin::soap_type() returns SOAP_TYPE_icommon__resLocInspireInteroperabilityRegulation_x005ffin or derived type identifier
class icommon__resLocInspireInteroperabilityRegulation_x005ffin : public xsd__anyType
{ public:
    enum _icommon__resLocInspireInteroperabilityRegulation_x005ffin_URL
    {
	_icommon__resLocInspireInteroperabilityRegulation_x005ffin_URL__http_x003a_x002f_x002feur_lex_x002eeuropa_x002eeu_x002fLexUriServ_x002fLexUriServ_x002edo_x003furi_x003dOJ_x003aL_x003a2010_x003a323_x003a0011_x003a0102_x003aFI_x003aPDF,	///< xs:anyURI value="http://eur-lex.europa.eu/LexUriServ/LexUriServ.do?uri=OJ:L:2010:323:0011:0102:FI:PDF"
    }
                                         URL                            1;	///< Required element.
    enum _icommon__resLocInspireInteroperabilityRegulation_x005ffin_MediaType
    {
	_icommon__resLocInspireInteroperabilityRegulation_x005ffin_MediaType__application_x002fpdf,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":mediaType value="application/pdf"
    }
                                         MediaType                      1;	///< Required element.
/*  RESTRICTED FROM icommon__resourceLocatorType:
    END OF RESTRICTED FROM icommon__resourceLocatorType */
};

/// @brief "http://inspire.ec.europa.eu/schemas/common/1.0":resLocInspireInteroperabilityRegulation_fre is a complexType with complexContent restriction of type "http://inspire.ec.europa.eu/schemas/common/1.0":resourceLocatorType.
///
/// @note class icommon__resLocInspireInteroperabilityRegulation_x005ffre operations:
/// - icommon__resLocInspireInteroperabilityRegulation_x005ffre* soap_new_icommon__resLocInspireInteroperabilityRegulation_x005ffre(soap*) allocate and default initialize
/// - icommon__resLocInspireInteroperabilityRegulation_x005ffre* soap_new_icommon__resLocInspireInteroperabilityRegulation_x005ffre(soap*, int num) allocate and default initialize an array
/// - icommon__resLocInspireInteroperabilityRegulation_x005ffre* soap_new_req_icommon__resLocInspireInteroperabilityRegulation_x005ffre(soap*, ...) allocate, set required members
/// - icommon__resLocInspireInteroperabilityRegulation_x005ffre* soap_new_set_icommon__resLocInspireInteroperabilityRegulation_x005ffre(soap*, ...) allocate, set all public members
/// - icommon__resLocInspireInteroperabilityRegulation_x005ffre::soap_default(soap*) default initialize members
/// - int soap_read_icommon__resLocInspireInteroperabilityRegulation_x005ffre(soap*, icommon__resLocInspireInteroperabilityRegulation_x005ffre*) deserialize from a stream
/// - int soap_write_icommon__resLocInspireInteroperabilityRegulation_x005ffre(soap*, icommon__resLocInspireInteroperabilityRegulation_x005ffre*) serialize to a stream
/// - icommon__resLocInspireInteroperabilityRegulation_x005ffre* icommon__resLocInspireInteroperabilityRegulation_x005ffre::soap_dup(soap*) returns deep copy of icommon__resLocInspireInteroperabilityRegulation_x005ffre, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - icommon__resLocInspireInteroperabilityRegulation_x005ffre::soap_del() deep deletes icommon__resLocInspireInteroperabilityRegulation_x005ffre data members, use only after icommon__resLocInspireInteroperabilityRegulation_x005ffre::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int icommon__resLocInspireInteroperabilityRegulation_x005ffre::soap_type() returns SOAP_TYPE_icommon__resLocInspireInteroperabilityRegulation_x005ffre or derived type identifier
class icommon__resLocInspireInteroperabilityRegulation_x005ffre : public xsd__anyType
{ public:
    enum _icommon__resLocInspireInteroperabilityRegulation_x005ffre_URL
    {
	_icommon__resLocInspireInteroperabilityRegulation_x005ffre_URL__http_x003a_x002f_x002feur_lex_x002eeuropa_x002eeu_x002fLexUriServ_x002fLexUriServ_x002edo_x003furi_x003dOJ_x003aL_x003a2010_x003a323_x003a0011_x003a0102_x003aFR_x003aPDF,	///< xs:anyURI value="http://eur-lex.europa.eu/LexUriServ/LexUriServ.do?uri=OJ:L:2010:323:0011:0102:FR:PDF"
    }
                                         URL                            1;	///< Required element.
    enum _icommon__resLocInspireInteroperabilityRegulation_x005ffre_MediaType
    {
	_icommon__resLocInspireInteroperabilityRegulation_x005ffre_MediaType__application_x002fpdf,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":mediaType value="application/pdf"
    }
                                         MediaType                      1;	///< Required element.
/*  RESTRICTED FROM icommon__resourceLocatorType:
    END OF RESTRICTED FROM icommon__resourceLocatorType */
};

/// @brief "http://inspire.ec.europa.eu/schemas/common/1.0":resLocInspireInteroperabilityRegulation_ger is a complexType with complexContent restriction of type "http://inspire.ec.europa.eu/schemas/common/1.0":resourceLocatorType.
///
/// @note class icommon__resLocInspireInteroperabilityRegulation_x005fger operations:
/// - icommon__resLocInspireInteroperabilityRegulation_x005fger* soap_new_icommon__resLocInspireInteroperabilityRegulation_x005fger(soap*) allocate and default initialize
/// - icommon__resLocInspireInteroperabilityRegulation_x005fger* soap_new_icommon__resLocInspireInteroperabilityRegulation_x005fger(soap*, int num) allocate and default initialize an array
/// - icommon__resLocInspireInteroperabilityRegulation_x005fger* soap_new_req_icommon__resLocInspireInteroperabilityRegulation_x005fger(soap*, ...) allocate, set required members
/// - icommon__resLocInspireInteroperabilityRegulation_x005fger* soap_new_set_icommon__resLocInspireInteroperabilityRegulation_x005fger(soap*, ...) allocate, set all public members
/// - icommon__resLocInspireInteroperabilityRegulation_x005fger::soap_default(soap*) default initialize members
/// - int soap_read_icommon__resLocInspireInteroperabilityRegulation_x005fger(soap*, icommon__resLocInspireInteroperabilityRegulation_x005fger*) deserialize from a stream
/// - int soap_write_icommon__resLocInspireInteroperabilityRegulation_x005fger(soap*, icommon__resLocInspireInteroperabilityRegulation_x005fger*) serialize to a stream
/// - icommon__resLocInspireInteroperabilityRegulation_x005fger* icommon__resLocInspireInteroperabilityRegulation_x005fger::soap_dup(soap*) returns deep copy of icommon__resLocInspireInteroperabilityRegulation_x005fger, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - icommon__resLocInspireInteroperabilityRegulation_x005fger::soap_del() deep deletes icommon__resLocInspireInteroperabilityRegulation_x005fger data members, use only after icommon__resLocInspireInteroperabilityRegulation_x005fger::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int icommon__resLocInspireInteroperabilityRegulation_x005fger::soap_type() returns SOAP_TYPE_icommon__resLocInspireInteroperabilityRegulation_x005fger or derived type identifier
class icommon__resLocInspireInteroperabilityRegulation_x005fger : public xsd__anyType
{ public:
    enum _icommon__resLocInspireInteroperabilityRegulation_x005fger_URL
    {
	_icommon__resLocInspireInteroperabilityRegulation_x005fger_URL__http_x003a_x002f_x002feur_lex_x002eeuropa_x002eeu_x002fLexUriServ_x002fLexUriServ_x002edo_x003furi_x003dOJ_x003aL_x003a2010_x003a323_x003a0011_x003a0102_x003aDE_x003aPDF,	///< xs:anyURI value="http://eur-lex.europa.eu/LexUriServ/LexUriServ.do?uri=OJ:L:2010:323:0011:0102:DE:PDF"
    }
                                         URL                            1;	///< Required element.
    enum _icommon__resLocInspireInteroperabilityRegulation_x005fger_MediaType
    {
	_icommon__resLocInspireInteroperabilityRegulation_x005fger_MediaType__application_x002fpdf,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":mediaType value="application/pdf"
    }
                                         MediaType                      1;	///< Required element.
/*  RESTRICTED FROM icommon__resourceLocatorType:
    END OF RESTRICTED FROM icommon__resourceLocatorType */
};

/// @brief "http://inspire.ec.europa.eu/schemas/common/1.0":resLocInspireInteroperabilityRegulation_gle is a complexType with complexContent restriction of type "http://inspire.ec.europa.eu/schemas/common/1.0":resourceLocatorType.
///
/// @note class icommon__resLocInspireInteroperabilityRegulation_x005fgle operations:
/// - icommon__resLocInspireInteroperabilityRegulation_x005fgle* soap_new_icommon__resLocInspireInteroperabilityRegulation_x005fgle(soap*) allocate and default initialize
/// - icommon__resLocInspireInteroperabilityRegulation_x005fgle* soap_new_icommon__resLocInspireInteroperabilityRegulation_x005fgle(soap*, int num) allocate and default initialize an array
/// - icommon__resLocInspireInteroperabilityRegulation_x005fgle* soap_new_req_icommon__resLocInspireInteroperabilityRegulation_x005fgle(soap*, ...) allocate, set required members
/// - icommon__resLocInspireInteroperabilityRegulation_x005fgle* soap_new_set_icommon__resLocInspireInteroperabilityRegulation_x005fgle(soap*, ...) allocate, set all public members
/// - icommon__resLocInspireInteroperabilityRegulation_x005fgle::soap_default(soap*) default initialize members
/// - int soap_read_icommon__resLocInspireInteroperabilityRegulation_x005fgle(soap*, icommon__resLocInspireInteroperabilityRegulation_x005fgle*) deserialize from a stream
/// - int soap_write_icommon__resLocInspireInteroperabilityRegulation_x005fgle(soap*, icommon__resLocInspireInteroperabilityRegulation_x005fgle*) serialize to a stream
/// - icommon__resLocInspireInteroperabilityRegulation_x005fgle* icommon__resLocInspireInteroperabilityRegulation_x005fgle::soap_dup(soap*) returns deep copy of icommon__resLocInspireInteroperabilityRegulation_x005fgle, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - icommon__resLocInspireInteroperabilityRegulation_x005fgle::soap_del() deep deletes icommon__resLocInspireInteroperabilityRegulation_x005fgle data members, use only after icommon__resLocInspireInteroperabilityRegulation_x005fgle::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int icommon__resLocInspireInteroperabilityRegulation_x005fgle::soap_type() returns SOAP_TYPE_icommon__resLocInspireInteroperabilityRegulation_x005fgle or derived type identifier
class icommon__resLocInspireInteroperabilityRegulation_x005fgle : public xsd__anyType
{ public:
    enum _icommon__resLocInspireInteroperabilityRegulation_x005fgle_URL
    {
	_icommon__resLocInspireInteroperabilityRegulation_x005fgle_URL__http_x003a_x002f_x002feur_lex_x002eeuropa_x002eeu_x002fLexUriServ_x002fLexUriServ_x002edo_x003furi_x003dOJ_x003aL_x003a2010_x003a323_x003a0011_x003a0102_x003aEN_x003aPDF,	///< xs:anyURI value="http://eur-lex.europa.eu/LexUriServ/LexUriServ.do?uri=OJ:L:2010:323:0011:0102:EN:PDF"
    }
                                         URL                            1;	///< Required element.
    enum _icommon__resLocInspireInteroperabilityRegulation_x005fgle_MediaType
    {
	_icommon__resLocInspireInteroperabilityRegulation_x005fgle_MediaType__application_x002fpdf,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":mediaType value="application/pdf"
    }
                                         MediaType                      1;	///< Required element.
/*  RESTRICTED FROM icommon__resourceLocatorType:
    END OF RESTRICTED FROM icommon__resourceLocatorType */
};

/// @brief "http://inspire.ec.europa.eu/schemas/common/1.0":resLocInspireInteroperabilityRegulation_gre is a complexType with complexContent restriction of type "http://inspire.ec.europa.eu/schemas/common/1.0":resourceLocatorType.
///
/// @note class icommon__resLocInspireInteroperabilityRegulation_x005fgre operations:
/// - icommon__resLocInspireInteroperabilityRegulation_x005fgre* soap_new_icommon__resLocInspireInteroperabilityRegulation_x005fgre(soap*) allocate and default initialize
/// - icommon__resLocInspireInteroperabilityRegulation_x005fgre* soap_new_icommon__resLocInspireInteroperabilityRegulation_x005fgre(soap*, int num) allocate and default initialize an array
/// - icommon__resLocInspireInteroperabilityRegulation_x005fgre* soap_new_req_icommon__resLocInspireInteroperabilityRegulation_x005fgre(soap*, ...) allocate, set required members
/// - icommon__resLocInspireInteroperabilityRegulation_x005fgre* soap_new_set_icommon__resLocInspireInteroperabilityRegulation_x005fgre(soap*, ...) allocate, set all public members
/// - icommon__resLocInspireInteroperabilityRegulation_x005fgre::soap_default(soap*) default initialize members
/// - int soap_read_icommon__resLocInspireInteroperabilityRegulation_x005fgre(soap*, icommon__resLocInspireInteroperabilityRegulation_x005fgre*) deserialize from a stream
/// - int soap_write_icommon__resLocInspireInteroperabilityRegulation_x005fgre(soap*, icommon__resLocInspireInteroperabilityRegulation_x005fgre*) serialize to a stream
/// - icommon__resLocInspireInteroperabilityRegulation_x005fgre* icommon__resLocInspireInteroperabilityRegulation_x005fgre::soap_dup(soap*) returns deep copy of icommon__resLocInspireInteroperabilityRegulation_x005fgre, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - icommon__resLocInspireInteroperabilityRegulation_x005fgre::soap_del() deep deletes icommon__resLocInspireInteroperabilityRegulation_x005fgre data members, use only after icommon__resLocInspireInteroperabilityRegulation_x005fgre::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int icommon__resLocInspireInteroperabilityRegulation_x005fgre::soap_type() returns SOAP_TYPE_icommon__resLocInspireInteroperabilityRegulation_x005fgre or derived type identifier
class icommon__resLocInspireInteroperabilityRegulation_x005fgre : public xsd__anyType
{ public:
    enum _icommon__resLocInspireInteroperabilityRegulation_x005fgre_URL
    {
	_icommon__resLocInspireInteroperabilityRegulation_x005fgre_URL__http_x003a_x002f_x002feur_lex_x002eeuropa_x002eeu_x002fLexUriServ_x002fLexUriServ_x002edo_x003furi_x003dOJ_x003aL_x003a2010_x003a323_x003a0011_x003a0102_x003aEL_x003aPDF,	///< xs:anyURI value="http://eur-lex.europa.eu/LexUriServ/LexUriServ.do?uri=OJ:L:2010:323:0011:0102:EL:PDF"
    }
                                         URL                            1;	///< Required element.
    enum _icommon__resLocInspireInteroperabilityRegulation_x005fgre_MediaType
    {
	_icommon__resLocInspireInteroperabilityRegulation_x005fgre_MediaType__application_x002fpdf,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":mediaType value="application/pdf"
    }
                                         MediaType                      1;	///< Required element.
/*  RESTRICTED FROM icommon__resourceLocatorType:
    END OF RESTRICTED FROM icommon__resourceLocatorType */
};

/// @brief "http://inspire.ec.europa.eu/schemas/common/1.0":resLocInspireInteroperabilityRegulation_hun is a complexType with complexContent restriction of type "http://inspire.ec.europa.eu/schemas/common/1.0":resourceLocatorType.
///
/// @note class icommon__resLocInspireInteroperabilityRegulation_x005fhun operations:
/// - icommon__resLocInspireInteroperabilityRegulation_x005fhun* soap_new_icommon__resLocInspireInteroperabilityRegulation_x005fhun(soap*) allocate and default initialize
/// - icommon__resLocInspireInteroperabilityRegulation_x005fhun* soap_new_icommon__resLocInspireInteroperabilityRegulation_x005fhun(soap*, int num) allocate and default initialize an array
/// - icommon__resLocInspireInteroperabilityRegulation_x005fhun* soap_new_req_icommon__resLocInspireInteroperabilityRegulation_x005fhun(soap*, ...) allocate, set required members
/// - icommon__resLocInspireInteroperabilityRegulation_x005fhun* soap_new_set_icommon__resLocInspireInteroperabilityRegulation_x005fhun(soap*, ...) allocate, set all public members
/// - icommon__resLocInspireInteroperabilityRegulation_x005fhun::soap_default(soap*) default initialize members
/// - int soap_read_icommon__resLocInspireInteroperabilityRegulation_x005fhun(soap*, icommon__resLocInspireInteroperabilityRegulation_x005fhun*) deserialize from a stream
/// - int soap_write_icommon__resLocInspireInteroperabilityRegulation_x005fhun(soap*, icommon__resLocInspireInteroperabilityRegulation_x005fhun*) serialize to a stream
/// - icommon__resLocInspireInteroperabilityRegulation_x005fhun* icommon__resLocInspireInteroperabilityRegulation_x005fhun::soap_dup(soap*) returns deep copy of icommon__resLocInspireInteroperabilityRegulation_x005fhun, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - icommon__resLocInspireInteroperabilityRegulation_x005fhun::soap_del() deep deletes icommon__resLocInspireInteroperabilityRegulation_x005fhun data members, use only after icommon__resLocInspireInteroperabilityRegulation_x005fhun::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int icommon__resLocInspireInteroperabilityRegulation_x005fhun::soap_type() returns SOAP_TYPE_icommon__resLocInspireInteroperabilityRegulation_x005fhun or derived type identifier
class icommon__resLocInspireInteroperabilityRegulation_x005fhun : public xsd__anyType
{ public:
    enum _icommon__resLocInspireInteroperabilityRegulation_x005fhun_URL
    {
	_icommon__resLocInspireInteroperabilityRegulation_x005fhun_URL__http_x003a_x002f_x002feur_lex_x002eeuropa_x002eeu_x002fLexUriServ_x002fLexUriServ_x002edo_x003furi_x003dOJ_x003aL_x003a2010_x003a323_x003a0011_x003a0102_x003aHU_x003aPDF,	///< xs:anyURI value="http://eur-lex.europa.eu/LexUriServ/LexUriServ.do?uri=OJ:L:2010:323:0011:0102:HU:PDF"
    }
                                         URL                            1;	///< Required element.
    enum _icommon__resLocInspireInteroperabilityRegulation_x005fhun_MediaType
    {
	_icommon__resLocInspireInteroperabilityRegulation_x005fhun_MediaType__application_x002fpdf,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":mediaType value="application/pdf"
    }
                                         MediaType                      1;	///< Required element.
/*  RESTRICTED FROM icommon__resourceLocatorType:
    END OF RESTRICTED FROM icommon__resourceLocatorType */
};

/// @brief "http://inspire.ec.europa.eu/schemas/common/1.0":resLocInspireInteroperabilityRegulation_ita is a complexType with complexContent restriction of type "http://inspire.ec.europa.eu/schemas/common/1.0":resourceLocatorType.
///
/// @note class icommon__resLocInspireInteroperabilityRegulation_x005fita operations:
/// - icommon__resLocInspireInteroperabilityRegulation_x005fita* soap_new_icommon__resLocInspireInteroperabilityRegulation_x005fita(soap*) allocate and default initialize
/// - icommon__resLocInspireInteroperabilityRegulation_x005fita* soap_new_icommon__resLocInspireInteroperabilityRegulation_x005fita(soap*, int num) allocate and default initialize an array
/// - icommon__resLocInspireInteroperabilityRegulation_x005fita* soap_new_req_icommon__resLocInspireInteroperabilityRegulation_x005fita(soap*, ...) allocate, set required members
/// - icommon__resLocInspireInteroperabilityRegulation_x005fita* soap_new_set_icommon__resLocInspireInteroperabilityRegulation_x005fita(soap*, ...) allocate, set all public members
/// - icommon__resLocInspireInteroperabilityRegulation_x005fita::soap_default(soap*) default initialize members
/// - int soap_read_icommon__resLocInspireInteroperabilityRegulation_x005fita(soap*, icommon__resLocInspireInteroperabilityRegulation_x005fita*) deserialize from a stream
/// - int soap_write_icommon__resLocInspireInteroperabilityRegulation_x005fita(soap*, icommon__resLocInspireInteroperabilityRegulation_x005fita*) serialize to a stream
/// - icommon__resLocInspireInteroperabilityRegulation_x005fita* icommon__resLocInspireInteroperabilityRegulation_x005fita::soap_dup(soap*) returns deep copy of icommon__resLocInspireInteroperabilityRegulation_x005fita, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - icommon__resLocInspireInteroperabilityRegulation_x005fita::soap_del() deep deletes icommon__resLocInspireInteroperabilityRegulation_x005fita data members, use only after icommon__resLocInspireInteroperabilityRegulation_x005fita::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int icommon__resLocInspireInteroperabilityRegulation_x005fita::soap_type() returns SOAP_TYPE_icommon__resLocInspireInteroperabilityRegulation_x005fita or derived type identifier
class icommon__resLocInspireInteroperabilityRegulation_x005fita : public xsd__anyType
{ public:
    enum _icommon__resLocInspireInteroperabilityRegulation_x005fita_URL
    {
	_icommon__resLocInspireInteroperabilityRegulation_x005fita_URL__http_x003a_x002f_x002feur_lex_x002eeuropa_x002eeu_x002fLexUriServ_x002fLexUriServ_x002edo_x003furi_x003dOJ_x003aL_x003a2010_x003a323_x003a0011_x003a0102_x003aIT_x003aPDF,	///< xs:anyURI value="http://eur-lex.europa.eu/LexUriServ/LexUriServ.do?uri=OJ:L:2010:323:0011:0102:IT:PDF"
    }
                                         URL                            1;	///< Required element.
    enum _icommon__resLocInspireInteroperabilityRegulation_x005fita_MediaType
    {
	_icommon__resLocInspireInteroperabilityRegulation_x005fita_MediaType__application_x002fpdf,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":mediaType value="application/pdf"
    }
                                         MediaType                      1;	///< Required element.
/*  RESTRICTED FROM icommon__resourceLocatorType:
    END OF RESTRICTED FROM icommon__resourceLocatorType */
};

/// @brief "http://inspire.ec.europa.eu/schemas/common/1.0":resLocInspireInteroperabilityRegulation_lav is a complexType with complexContent restriction of type "http://inspire.ec.europa.eu/schemas/common/1.0":resourceLocatorType.
///
/// @note class icommon__resLocInspireInteroperabilityRegulation_x005flav operations:
/// - icommon__resLocInspireInteroperabilityRegulation_x005flav* soap_new_icommon__resLocInspireInteroperabilityRegulation_x005flav(soap*) allocate and default initialize
/// - icommon__resLocInspireInteroperabilityRegulation_x005flav* soap_new_icommon__resLocInspireInteroperabilityRegulation_x005flav(soap*, int num) allocate and default initialize an array
/// - icommon__resLocInspireInteroperabilityRegulation_x005flav* soap_new_req_icommon__resLocInspireInteroperabilityRegulation_x005flav(soap*, ...) allocate, set required members
/// - icommon__resLocInspireInteroperabilityRegulation_x005flav* soap_new_set_icommon__resLocInspireInteroperabilityRegulation_x005flav(soap*, ...) allocate, set all public members
/// - icommon__resLocInspireInteroperabilityRegulation_x005flav::soap_default(soap*) default initialize members
/// - int soap_read_icommon__resLocInspireInteroperabilityRegulation_x005flav(soap*, icommon__resLocInspireInteroperabilityRegulation_x005flav*) deserialize from a stream
/// - int soap_write_icommon__resLocInspireInteroperabilityRegulation_x005flav(soap*, icommon__resLocInspireInteroperabilityRegulation_x005flav*) serialize to a stream
/// - icommon__resLocInspireInteroperabilityRegulation_x005flav* icommon__resLocInspireInteroperabilityRegulation_x005flav::soap_dup(soap*) returns deep copy of icommon__resLocInspireInteroperabilityRegulation_x005flav, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - icommon__resLocInspireInteroperabilityRegulation_x005flav::soap_del() deep deletes icommon__resLocInspireInteroperabilityRegulation_x005flav data members, use only after icommon__resLocInspireInteroperabilityRegulation_x005flav::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int icommon__resLocInspireInteroperabilityRegulation_x005flav::soap_type() returns SOAP_TYPE_icommon__resLocInspireInteroperabilityRegulation_x005flav or derived type identifier
class icommon__resLocInspireInteroperabilityRegulation_x005flav : public xsd__anyType
{ public:
    enum _icommon__resLocInspireInteroperabilityRegulation_x005flav_URL
    {
	_icommon__resLocInspireInteroperabilityRegulation_x005flav_URL__http_x003a_x002f_x002feur_lex_x002eeuropa_x002eeu_x002fLexUriServ_x002fLexUriServ_x002edo_x003furi_x003dOJ_x003aL_x003a2010_x003a323_x003a0011_x003a0102_x003aLV_x003aPDF,	///< xs:anyURI value="http://eur-lex.europa.eu/LexUriServ/LexUriServ.do?uri=OJ:L:2010:323:0011:0102:LV:PDF"
    }
                                         URL                            1;	///< Required element.
    enum _icommon__resLocInspireInteroperabilityRegulation_x005flav_MediaType
    {
	_icommon__resLocInspireInteroperabilityRegulation_x005flav_MediaType__application_x002fpdf,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":mediaType value="application/pdf"
    }
                                         MediaType                      1;	///< Required element.
/*  RESTRICTED FROM icommon__resourceLocatorType:
    END OF RESTRICTED FROM icommon__resourceLocatorType */
};

/// @brief "http://inspire.ec.europa.eu/schemas/common/1.0":resLocInspireInteroperabilityRegulation_lit is a complexType with complexContent restriction of type "http://inspire.ec.europa.eu/schemas/common/1.0":resourceLocatorType.
///
/// @note class icommon__resLocInspireInteroperabilityRegulation_x005flit operations:
/// - icommon__resLocInspireInteroperabilityRegulation_x005flit* soap_new_icommon__resLocInspireInteroperabilityRegulation_x005flit(soap*) allocate and default initialize
/// - icommon__resLocInspireInteroperabilityRegulation_x005flit* soap_new_icommon__resLocInspireInteroperabilityRegulation_x005flit(soap*, int num) allocate and default initialize an array
/// - icommon__resLocInspireInteroperabilityRegulation_x005flit* soap_new_req_icommon__resLocInspireInteroperabilityRegulation_x005flit(soap*, ...) allocate, set required members
/// - icommon__resLocInspireInteroperabilityRegulation_x005flit* soap_new_set_icommon__resLocInspireInteroperabilityRegulation_x005flit(soap*, ...) allocate, set all public members
/// - icommon__resLocInspireInteroperabilityRegulation_x005flit::soap_default(soap*) default initialize members
/// - int soap_read_icommon__resLocInspireInteroperabilityRegulation_x005flit(soap*, icommon__resLocInspireInteroperabilityRegulation_x005flit*) deserialize from a stream
/// - int soap_write_icommon__resLocInspireInteroperabilityRegulation_x005flit(soap*, icommon__resLocInspireInteroperabilityRegulation_x005flit*) serialize to a stream
/// - icommon__resLocInspireInteroperabilityRegulation_x005flit* icommon__resLocInspireInteroperabilityRegulation_x005flit::soap_dup(soap*) returns deep copy of icommon__resLocInspireInteroperabilityRegulation_x005flit, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - icommon__resLocInspireInteroperabilityRegulation_x005flit::soap_del() deep deletes icommon__resLocInspireInteroperabilityRegulation_x005flit data members, use only after icommon__resLocInspireInteroperabilityRegulation_x005flit::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int icommon__resLocInspireInteroperabilityRegulation_x005flit::soap_type() returns SOAP_TYPE_icommon__resLocInspireInteroperabilityRegulation_x005flit or derived type identifier
class icommon__resLocInspireInteroperabilityRegulation_x005flit : public xsd__anyType
{ public:
    enum _icommon__resLocInspireInteroperabilityRegulation_x005flit_URL
    {
	_icommon__resLocInspireInteroperabilityRegulation_x005flit_URL__http_x003a_x002f_x002feur_lex_x002eeuropa_x002eeu_x002fLexUriServ_x002fLexUriServ_x002edo_x003furi_x003dOJ_x003aL_x003a2010_x003a323_x003a0011_x003a0102_x003aLT_x003aPDF,	///< xs:anyURI value="http://eur-lex.europa.eu/LexUriServ/LexUriServ.do?uri=OJ:L:2010:323:0011:0102:LT:PDF"
    }
                                         URL                            1;	///< Required element.
    enum _icommon__resLocInspireInteroperabilityRegulation_x005flit_MediaType
    {
	_icommon__resLocInspireInteroperabilityRegulation_x005flit_MediaType__application_x002fpdf,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":mediaType value="application/pdf"
    }
                                         MediaType                      1;	///< Required element.
/*  RESTRICTED FROM icommon__resourceLocatorType:
    END OF RESTRICTED FROM icommon__resourceLocatorType */
};

/// @brief "http://inspire.ec.europa.eu/schemas/common/1.0":resLocInspireInteroperabilityRegulation_mlt is a complexType with complexContent restriction of type "http://inspire.ec.europa.eu/schemas/common/1.0":resourceLocatorType.
///
/// @note class icommon__resLocInspireInteroperabilityRegulation_x005fmlt operations:
/// - icommon__resLocInspireInteroperabilityRegulation_x005fmlt* soap_new_icommon__resLocInspireInteroperabilityRegulation_x005fmlt(soap*) allocate and default initialize
/// - icommon__resLocInspireInteroperabilityRegulation_x005fmlt* soap_new_icommon__resLocInspireInteroperabilityRegulation_x005fmlt(soap*, int num) allocate and default initialize an array
/// - icommon__resLocInspireInteroperabilityRegulation_x005fmlt* soap_new_req_icommon__resLocInspireInteroperabilityRegulation_x005fmlt(soap*, ...) allocate, set required members
/// - icommon__resLocInspireInteroperabilityRegulation_x005fmlt* soap_new_set_icommon__resLocInspireInteroperabilityRegulation_x005fmlt(soap*, ...) allocate, set all public members
/// - icommon__resLocInspireInteroperabilityRegulation_x005fmlt::soap_default(soap*) default initialize members
/// - int soap_read_icommon__resLocInspireInteroperabilityRegulation_x005fmlt(soap*, icommon__resLocInspireInteroperabilityRegulation_x005fmlt*) deserialize from a stream
/// - int soap_write_icommon__resLocInspireInteroperabilityRegulation_x005fmlt(soap*, icommon__resLocInspireInteroperabilityRegulation_x005fmlt*) serialize to a stream
/// - icommon__resLocInspireInteroperabilityRegulation_x005fmlt* icommon__resLocInspireInteroperabilityRegulation_x005fmlt::soap_dup(soap*) returns deep copy of icommon__resLocInspireInteroperabilityRegulation_x005fmlt, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - icommon__resLocInspireInteroperabilityRegulation_x005fmlt::soap_del() deep deletes icommon__resLocInspireInteroperabilityRegulation_x005fmlt data members, use only after icommon__resLocInspireInteroperabilityRegulation_x005fmlt::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int icommon__resLocInspireInteroperabilityRegulation_x005fmlt::soap_type() returns SOAP_TYPE_icommon__resLocInspireInteroperabilityRegulation_x005fmlt or derived type identifier
class icommon__resLocInspireInteroperabilityRegulation_x005fmlt : public xsd__anyType
{ public:
    enum _icommon__resLocInspireInteroperabilityRegulation_x005fmlt_URL
    {
	_icommon__resLocInspireInteroperabilityRegulation_x005fmlt_URL__http_x003a_x002f_x002feur_lex_x002eeuropa_x002eeu_x002fLexUriServ_x002fLexUriServ_x002edo_x003furi_x003dOJ_x003aL_x003a2010_x003a323_x003a0011_x003a0102_x003aMT_x003aPDF,	///< xs:anyURI value="http://eur-lex.europa.eu/LexUriServ/LexUriServ.do?uri=OJ:L:2010:323:0011:0102:MT:PDF"
    }
                                         URL                            1;	///< Required element.
    enum _icommon__resLocInspireInteroperabilityRegulation_x005fmlt_MediaType
    {
	_icommon__resLocInspireInteroperabilityRegulation_x005fmlt_MediaType__application_x002fpdf,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":mediaType value="application/pdf"
    }
                                         MediaType                      1;	///< Required element.
/*  RESTRICTED FROM icommon__resourceLocatorType:
    END OF RESTRICTED FROM icommon__resourceLocatorType */
};

/// @brief "http://inspire.ec.europa.eu/schemas/common/1.0":resLocInspireInteroperabilityRegulation_pol is a complexType with complexContent restriction of type "http://inspire.ec.europa.eu/schemas/common/1.0":resourceLocatorType.
///
/// @note class icommon__resLocInspireInteroperabilityRegulation_x005fpol operations:
/// - icommon__resLocInspireInteroperabilityRegulation_x005fpol* soap_new_icommon__resLocInspireInteroperabilityRegulation_x005fpol(soap*) allocate and default initialize
/// - icommon__resLocInspireInteroperabilityRegulation_x005fpol* soap_new_icommon__resLocInspireInteroperabilityRegulation_x005fpol(soap*, int num) allocate and default initialize an array
/// - icommon__resLocInspireInteroperabilityRegulation_x005fpol* soap_new_req_icommon__resLocInspireInteroperabilityRegulation_x005fpol(soap*, ...) allocate, set required members
/// - icommon__resLocInspireInteroperabilityRegulation_x005fpol* soap_new_set_icommon__resLocInspireInteroperabilityRegulation_x005fpol(soap*, ...) allocate, set all public members
/// - icommon__resLocInspireInteroperabilityRegulation_x005fpol::soap_default(soap*) default initialize members
/// - int soap_read_icommon__resLocInspireInteroperabilityRegulation_x005fpol(soap*, icommon__resLocInspireInteroperabilityRegulation_x005fpol*) deserialize from a stream
/// - int soap_write_icommon__resLocInspireInteroperabilityRegulation_x005fpol(soap*, icommon__resLocInspireInteroperabilityRegulation_x005fpol*) serialize to a stream
/// - icommon__resLocInspireInteroperabilityRegulation_x005fpol* icommon__resLocInspireInteroperabilityRegulation_x005fpol::soap_dup(soap*) returns deep copy of icommon__resLocInspireInteroperabilityRegulation_x005fpol, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - icommon__resLocInspireInteroperabilityRegulation_x005fpol::soap_del() deep deletes icommon__resLocInspireInteroperabilityRegulation_x005fpol data members, use only after icommon__resLocInspireInteroperabilityRegulation_x005fpol::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int icommon__resLocInspireInteroperabilityRegulation_x005fpol::soap_type() returns SOAP_TYPE_icommon__resLocInspireInteroperabilityRegulation_x005fpol or derived type identifier
class icommon__resLocInspireInteroperabilityRegulation_x005fpol : public xsd__anyType
{ public:
    enum _icommon__resLocInspireInteroperabilityRegulation_x005fpol_URL
    {
	_icommon__resLocInspireInteroperabilityRegulation_x005fpol_URL__http_x003a_x002f_x002feur_lex_x002eeuropa_x002eeu_x002fLexUriServ_x002fLexUriServ_x002edo_x003furi_x003dOJ_x003aL_x003a2010_x003a323_x003a0011_x003a0102_x003aPL_x003aPDF,	///< xs:anyURI value="http://eur-lex.europa.eu/LexUriServ/LexUriServ.do?uri=OJ:L:2010:323:0011:0102:PL:PDF"
    }
                                         URL                            1;	///< Required element.
    enum _icommon__resLocInspireInteroperabilityRegulation_x005fpol_MediaType
    {
	_icommon__resLocInspireInteroperabilityRegulation_x005fpol_MediaType__application_x002fpdf,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":mediaType value="application/pdf"
    }
                                         MediaType                      1;	///< Required element.
/*  RESTRICTED FROM icommon__resourceLocatorType:
    END OF RESTRICTED FROM icommon__resourceLocatorType */
};

/// @brief "http://inspire.ec.europa.eu/schemas/common/1.0":resLocInspireInteroperabilityRegulation_por is a complexType with complexContent restriction of type "http://inspire.ec.europa.eu/schemas/common/1.0":resourceLocatorType.
///
/// @note class icommon__resLocInspireInteroperabilityRegulation_x005fpor operations:
/// - icommon__resLocInspireInteroperabilityRegulation_x005fpor* soap_new_icommon__resLocInspireInteroperabilityRegulation_x005fpor(soap*) allocate and default initialize
/// - icommon__resLocInspireInteroperabilityRegulation_x005fpor* soap_new_icommon__resLocInspireInteroperabilityRegulation_x005fpor(soap*, int num) allocate and default initialize an array
/// - icommon__resLocInspireInteroperabilityRegulation_x005fpor* soap_new_req_icommon__resLocInspireInteroperabilityRegulation_x005fpor(soap*, ...) allocate, set required members
/// - icommon__resLocInspireInteroperabilityRegulation_x005fpor* soap_new_set_icommon__resLocInspireInteroperabilityRegulation_x005fpor(soap*, ...) allocate, set all public members
/// - icommon__resLocInspireInteroperabilityRegulation_x005fpor::soap_default(soap*) default initialize members
/// - int soap_read_icommon__resLocInspireInteroperabilityRegulation_x005fpor(soap*, icommon__resLocInspireInteroperabilityRegulation_x005fpor*) deserialize from a stream
/// - int soap_write_icommon__resLocInspireInteroperabilityRegulation_x005fpor(soap*, icommon__resLocInspireInteroperabilityRegulation_x005fpor*) serialize to a stream
/// - icommon__resLocInspireInteroperabilityRegulation_x005fpor* icommon__resLocInspireInteroperabilityRegulation_x005fpor::soap_dup(soap*) returns deep copy of icommon__resLocInspireInteroperabilityRegulation_x005fpor, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - icommon__resLocInspireInteroperabilityRegulation_x005fpor::soap_del() deep deletes icommon__resLocInspireInteroperabilityRegulation_x005fpor data members, use only after icommon__resLocInspireInteroperabilityRegulation_x005fpor::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int icommon__resLocInspireInteroperabilityRegulation_x005fpor::soap_type() returns SOAP_TYPE_icommon__resLocInspireInteroperabilityRegulation_x005fpor or derived type identifier
class icommon__resLocInspireInteroperabilityRegulation_x005fpor : public xsd__anyType
{ public:
    enum _icommon__resLocInspireInteroperabilityRegulation_x005fpor_URL
    {
	_icommon__resLocInspireInteroperabilityRegulation_x005fpor_URL__http_x003a_x002f_x002feur_lex_x002eeuropa_x002eeu_x002fLexUriServ_x002fLexUriServ_x002edo_x003furi_x003dOJ_x003aL_x003a2010_x003a323_x003a0011_x003a0102_x003aPT_x003aPDF,	///< xs:anyURI value="http://eur-lex.europa.eu/LexUriServ/LexUriServ.do?uri=OJ:L:2010:323:0011:0102:PT:PDF"
    }
                                         URL                            1;	///< Required element.
    enum _icommon__resLocInspireInteroperabilityRegulation_x005fpor_MediaType
    {
	_icommon__resLocInspireInteroperabilityRegulation_x005fpor_MediaType__application_x002fpdf,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":mediaType value="application/pdf"
    }
                                         MediaType                      1;	///< Required element.
/*  RESTRICTED FROM icommon__resourceLocatorType:
    END OF RESTRICTED FROM icommon__resourceLocatorType */
};

/// @brief "http://inspire.ec.europa.eu/schemas/common/1.0":resLocInspireInteroperabilityRegulation_rum is a complexType with complexContent restriction of type "http://inspire.ec.europa.eu/schemas/common/1.0":resourceLocatorType.
///
/// @note class icommon__resLocInspireInteroperabilityRegulation_x005frum operations:
/// - icommon__resLocInspireInteroperabilityRegulation_x005frum* soap_new_icommon__resLocInspireInteroperabilityRegulation_x005frum(soap*) allocate and default initialize
/// - icommon__resLocInspireInteroperabilityRegulation_x005frum* soap_new_icommon__resLocInspireInteroperabilityRegulation_x005frum(soap*, int num) allocate and default initialize an array
/// - icommon__resLocInspireInteroperabilityRegulation_x005frum* soap_new_req_icommon__resLocInspireInteroperabilityRegulation_x005frum(soap*, ...) allocate, set required members
/// - icommon__resLocInspireInteroperabilityRegulation_x005frum* soap_new_set_icommon__resLocInspireInteroperabilityRegulation_x005frum(soap*, ...) allocate, set all public members
/// - icommon__resLocInspireInteroperabilityRegulation_x005frum::soap_default(soap*) default initialize members
/// - int soap_read_icommon__resLocInspireInteroperabilityRegulation_x005frum(soap*, icommon__resLocInspireInteroperabilityRegulation_x005frum*) deserialize from a stream
/// - int soap_write_icommon__resLocInspireInteroperabilityRegulation_x005frum(soap*, icommon__resLocInspireInteroperabilityRegulation_x005frum*) serialize to a stream
/// - icommon__resLocInspireInteroperabilityRegulation_x005frum* icommon__resLocInspireInteroperabilityRegulation_x005frum::soap_dup(soap*) returns deep copy of icommon__resLocInspireInteroperabilityRegulation_x005frum, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - icommon__resLocInspireInteroperabilityRegulation_x005frum::soap_del() deep deletes icommon__resLocInspireInteroperabilityRegulation_x005frum data members, use only after icommon__resLocInspireInteroperabilityRegulation_x005frum::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int icommon__resLocInspireInteroperabilityRegulation_x005frum::soap_type() returns SOAP_TYPE_icommon__resLocInspireInteroperabilityRegulation_x005frum or derived type identifier
class icommon__resLocInspireInteroperabilityRegulation_x005frum : public xsd__anyType
{ public:
    enum _icommon__resLocInspireInteroperabilityRegulation_x005frum_URL
    {
	_icommon__resLocInspireInteroperabilityRegulation_x005frum_URL__http_x003a_x002f_x002feur_lex_x002eeuropa_x002eeu_x002fLexUriServ_x002fLexUriServ_x002edo_x003furi_x003dOJ_x003aL_x003a2010_x003a323_x003a0011_x003a0102_x003aRO_x003aPDF,	///< xs:anyURI value="http://eur-lex.europa.eu/LexUriServ/LexUriServ.do?uri=OJ:L:2010:323:0011:0102:RO:PDF"
    }
                                         URL                            1;	///< Required element.
    enum _icommon__resLocInspireInteroperabilityRegulation_x005frum_MediaType
    {
	_icommon__resLocInspireInteroperabilityRegulation_x005frum_MediaType__application_x002fpdf,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":mediaType value="application/pdf"
    }
                                         MediaType                      1;	///< Required element.
/*  RESTRICTED FROM icommon__resourceLocatorType:
    END OF RESTRICTED FROM icommon__resourceLocatorType */
};

/// @brief "http://inspire.ec.europa.eu/schemas/common/1.0":resLocInspireInteroperabilityRegulation_slo is a complexType with complexContent restriction of type "http://inspire.ec.europa.eu/schemas/common/1.0":resourceLocatorType.
///
/// @note class icommon__resLocInspireInteroperabilityRegulation_x005fslo operations:
/// - icommon__resLocInspireInteroperabilityRegulation_x005fslo* soap_new_icommon__resLocInspireInteroperabilityRegulation_x005fslo(soap*) allocate and default initialize
/// - icommon__resLocInspireInteroperabilityRegulation_x005fslo* soap_new_icommon__resLocInspireInteroperabilityRegulation_x005fslo(soap*, int num) allocate and default initialize an array
/// - icommon__resLocInspireInteroperabilityRegulation_x005fslo* soap_new_req_icommon__resLocInspireInteroperabilityRegulation_x005fslo(soap*, ...) allocate, set required members
/// - icommon__resLocInspireInteroperabilityRegulation_x005fslo* soap_new_set_icommon__resLocInspireInteroperabilityRegulation_x005fslo(soap*, ...) allocate, set all public members
/// - icommon__resLocInspireInteroperabilityRegulation_x005fslo::soap_default(soap*) default initialize members
/// - int soap_read_icommon__resLocInspireInteroperabilityRegulation_x005fslo(soap*, icommon__resLocInspireInteroperabilityRegulation_x005fslo*) deserialize from a stream
/// - int soap_write_icommon__resLocInspireInteroperabilityRegulation_x005fslo(soap*, icommon__resLocInspireInteroperabilityRegulation_x005fslo*) serialize to a stream
/// - icommon__resLocInspireInteroperabilityRegulation_x005fslo* icommon__resLocInspireInteroperabilityRegulation_x005fslo::soap_dup(soap*) returns deep copy of icommon__resLocInspireInteroperabilityRegulation_x005fslo, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - icommon__resLocInspireInteroperabilityRegulation_x005fslo::soap_del() deep deletes icommon__resLocInspireInteroperabilityRegulation_x005fslo data members, use only after icommon__resLocInspireInteroperabilityRegulation_x005fslo::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int icommon__resLocInspireInteroperabilityRegulation_x005fslo::soap_type() returns SOAP_TYPE_icommon__resLocInspireInteroperabilityRegulation_x005fslo or derived type identifier
class icommon__resLocInspireInteroperabilityRegulation_x005fslo : public xsd__anyType
{ public:
    enum _icommon__resLocInspireInteroperabilityRegulation_x005fslo_URL
    {
	_icommon__resLocInspireInteroperabilityRegulation_x005fslo_URL__http_x003a_x002f_x002feur_lex_x002eeuropa_x002eeu_x002fLexUriServ_x002fLexUriServ_x002edo_x003furi_x003dOJ_x003aL_x003a2010_x003a323_x003a0011_x003a0102_x003aSK_x003aPDF,	///< xs:anyURI value="http://eur-lex.europa.eu/LexUriServ/LexUriServ.do?uri=OJ:L:2010:323:0011:0102:SK:PDF"
    }
                                         URL                            1;	///< Required element.
    enum _icommon__resLocInspireInteroperabilityRegulation_x005fslo_MediaType
    {
	_icommon__resLocInspireInteroperabilityRegulation_x005fslo_MediaType__application_x002fpdf,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":mediaType value="application/pdf"
    }
                                         MediaType                      1;	///< Required element.
/*  RESTRICTED FROM icommon__resourceLocatorType:
    END OF RESTRICTED FROM icommon__resourceLocatorType */
};

/// @brief "http://inspire.ec.europa.eu/schemas/common/1.0":resLocInspireInteroperabilityRegulation_slv is a complexType with complexContent restriction of type "http://inspire.ec.europa.eu/schemas/common/1.0":resourceLocatorType.
///
/// @note class icommon__resLocInspireInteroperabilityRegulation_x005fslv operations:
/// - icommon__resLocInspireInteroperabilityRegulation_x005fslv* soap_new_icommon__resLocInspireInteroperabilityRegulation_x005fslv(soap*) allocate and default initialize
/// - icommon__resLocInspireInteroperabilityRegulation_x005fslv* soap_new_icommon__resLocInspireInteroperabilityRegulation_x005fslv(soap*, int num) allocate and default initialize an array
/// - icommon__resLocInspireInteroperabilityRegulation_x005fslv* soap_new_req_icommon__resLocInspireInteroperabilityRegulation_x005fslv(soap*, ...) allocate, set required members
/// - icommon__resLocInspireInteroperabilityRegulation_x005fslv* soap_new_set_icommon__resLocInspireInteroperabilityRegulation_x005fslv(soap*, ...) allocate, set all public members
/// - icommon__resLocInspireInteroperabilityRegulation_x005fslv::soap_default(soap*) default initialize members
/// - int soap_read_icommon__resLocInspireInteroperabilityRegulation_x005fslv(soap*, icommon__resLocInspireInteroperabilityRegulation_x005fslv*) deserialize from a stream
/// - int soap_write_icommon__resLocInspireInteroperabilityRegulation_x005fslv(soap*, icommon__resLocInspireInteroperabilityRegulation_x005fslv*) serialize to a stream
/// - icommon__resLocInspireInteroperabilityRegulation_x005fslv* icommon__resLocInspireInteroperabilityRegulation_x005fslv::soap_dup(soap*) returns deep copy of icommon__resLocInspireInteroperabilityRegulation_x005fslv, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - icommon__resLocInspireInteroperabilityRegulation_x005fslv::soap_del() deep deletes icommon__resLocInspireInteroperabilityRegulation_x005fslv data members, use only after icommon__resLocInspireInteroperabilityRegulation_x005fslv::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int icommon__resLocInspireInteroperabilityRegulation_x005fslv::soap_type() returns SOAP_TYPE_icommon__resLocInspireInteroperabilityRegulation_x005fslv or derived type identifier
class icommon__resLocInspireInteroperabilityRegulation_x005fslv : public xsd__anyType
{ public:
    enum _icommon__resLocInspireInteroperabilityRegulation_x005fslv_URL
    {
	_icommon__resLocInspireInteroperabilityRegulation_x005fslv_URL__http_x003a_x002f_x002feur_lex_x002eeuropa_x002eeu_x002fLexUriServ_x002fLexUriServ_x002edo_x003furi_x003dOJ_x003aL_x003a2010_x003a323_x003a0011_x003a0102_x003aSL_x003aPDF,	///< xs:anyURI value="http://eur-lex.europa.eu/LexUriServ/LexUriServ.do?uri=OJ:L:2010:323:0011:0102:SL:PDF"
    }
                                         URL                            1;	///< Required element.
    enum _icommon__resLocInspireInteroperabilityRegulation_x005fslv_MediaType
    {
	_icommon__resLocInspireInteroperabilityRegulation_x005fslv_MediaType__application_x002fpdf,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":mediaType value="application/pdf"
    }
                                         MediaType                      1;	///< Required element.
/*  RESTRICTED FROM icommon__resourceLocatorType:
    END OF RESTRICTED FROM icommon__resourceLocatorType */
};

/// @brief "http://inspire.ec.europa.eu/schemas/common/1.0":resLocInspireInteroperabilityRegulation_spa is a complexType with complexContent restriction of type "http://inspire.ec.europa.eu/schemas/common/1.0":resourceLocatorType.
///
/// @note class icommon__resLocInspireInteroperabilityRegulation_x005fspa operations:
/// - icommon__resLocInspireInteroperabilityRegulation_x005fspa* soap_new_icommon__resLocInspireInteroperabilityRegulation_x005fspa(soap*) allocate and default initialize
/// - icommon__resLocInspireInteroperabilityRegulation_x005fspa* soap_new_icommon__resLocInspireInteroperabilityRegulation_x005fspa(soap*, int num) allocate and default initialize an array
/// - icommon__resLocInspireInteroperabilityRegulation_x005fspa* soap_new_req_icommon__resLocInspireInteroperabilityRegulation_x005fspa(soap*, ...) allocate, set required members
/// - icommon__resLocInspireInteroperabilityRegulation_x005fspa* soap_new_set_icommon__resLocInspireInteroperabilityRegulation_x005fspa(soap*, ...) allocate, set all public members
/// - icommon__resLocInspireInteroperabilityRegulation_x005fspa::soap_default(soap*) default initialize members
/// - int soap_read_icommon__resLocInspireInteroperabilityRegulation_x005fspa(soap*, icommon__resLocInspireInteroperabilityRegulation_x005fspa*) deserialize from a stream
/// - int soap_write_icommon__resLocInspireInteroperabilityRegulation_x005fspa(soap*, icommon__resLocInspireInteroperabilityRegulation_x005fspa*) serialize to a stream
/// - icommon__resLocInspireInteroperabilityRegulation_x005fspa* icommon__resLocInspireInteroperabilityRegulation_x005fspa::soap_dup(soap*) returns deep copy of icommon__resLocInspireInteroperabilityRegulation_x005fspa, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - icommon__resLocInspireInteroperabilityRegulation_x005fspa::soap_del() deep deletes icommon__resLocInspireInteroperabilityRegulation_x005fspa data members, use only after icommon__resLocInspireInteroperabilityRegulation_x005fspa::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int icommon__resLocInspireInteroperabilityRegulation_x005fspa::soap_type() returns SOAP_TYPE_icommon__resLocInspireInteroperabilityRegulation_x005fspa or derived type identifier
class icommon__resLocInspireInteroperabilityRegulation_x005fspa : public xsd__anyType
{ public:
    enum _icommon__resLocInspireInteroperabilityRegulation_x005fspa_URL
    {
	_icommon__resLocInspireInteroperabilityRegulation_x005fspa_URL__http_x003a_x002f_x002feur_lex_x002eeuropa_x002eeu_x002fLexUriServ_x002fLexUriServ_x002edo_x003furi_x003dOJ_x003aL_x003a2010_x003a323_x003a0011_x003a0102_x003aEN_x003aPDF,	///< xs:anyURI value="http://eur-lex.europa.eu/LexUriServ/LexUriServ.do?uri=OJ:L:2010:323:0011:0102:EN:PDF"
    }
                                         URL                            1;	///< Required element.
    enum _icommon__resLocInspireInteroperabilityRegulation_x005fspa_MediaType
    {
	_icommon__resLocInspireInteroperabilityRegulation_x005fspa_MediaType__application_x002fpdf,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":mediaType value="application/pdf"
    }
                                         MediaType                      1;	///< Required element.
/*  RESTRICTED FROM icommon__resourceLocatorType:
    END OF RESTRICTED FROM icommon__resourceLocatorType */
};

/// @brief "http://inspire.ec.europa.eu/schemas/common/1.0":resLocInspireInteroperabilityRegulation_swe is a complexType with complexContent restriction of type "http://inspire.ec.europa.eu/schemas/common/1.0":resourceLocatorType.
///
/// @note class icommon__resLocInspireInteroperabilityRegulation_x005fswe operations:
/// - icommon__resLocInspireInteroperabilityRegulation_x005fswe* soap_new_icommon__resLocInspireInteroperabilityRegulation_x005fswe(soap*) allocate and default initialize
/// - icommon__resLocInspireInteroperabilityRegulation_x005fswe* soap_new_icommon__resLocInspireInteroperabilityRegulation_x005fswe(soap*, int num) allocate and default initialize an array
/// - icommon__resLocInspireInteroperabilityRegulation_x005fswe* soap_new_req_icommon__resLocInspireInteroperabilityRegulation_x005fswe(soap*, ...) allocate, set required members
/// - icommon__resLocInspireInteroperabilityRegulation_x005fswe* soap_new_set_icommon__resLocInspireInteroperabilityRegulation_x005fswe(soap*, ...) allocate, set all public members
/// - icommon__resLocInspireInteroperabilityRegulation_x005fswe::soap_default(soap*) default initialize members
/// - int soap_read_icommon__resLocInspireInteroperabilityRegulation_x005fswe(soap*, icommon__resLocInspireInteroperabilityRegulation_x005fswe*) deserialize from a stream
/// - int soap_write_icommon__resLocInspireInteroperabilityRegulation_x005fswe(soap*, icommon__resLocInspireInteroperabilityRegulation_x005fswe*) serialize to a stream
/// - icommon__resLocInspireInteroperabilityRegulation_x005fswe* icommon__resLocInspireInteroperabilityRegulation_x005fswe::soap_dup(soap*) returns deep copy of icommon__resLocInspireInteroperabilityRegulation_x005fswe, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - icommon__resLocInspireInteroperabilityRegulation_x005fswe::soap_del() deep deletes icommon__resLocInspireInteroperabilityRegulation_x005fswe data members, use only after icommon__resLocInspireInteroperabilityRegulation_x005fswe::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int icommon__resLocInspireInteroperabilityRegulation_x005fswe::soap_type() returns SOAP_TYPE_icommon__resLocInspireInteroperabilityRegulation_x005fswe or derived type identifier
class icommon__resLocInspireInteroperabilityRegulation_x005fswe : public xsd__anyType
{ public:
    enum _icommon__resLocInspireInteroperabilityRegulation_x005fswe_URL
    {
	_icommon__resLocInspireInteroperabilityRegulation_x005fswe_URL__http_x003a_x002f_x002feur_lex_x002eeuropa_x002eeu_x002fLexUriServ_x002fLexUriServ_x002edo_x003furi_x003dOJ_x003aL_x003a2010_x003a323_x003a0011_x003a0102_x003aSV_x003aPDF,	///< xs:anyURI value="http://eur-lex.europa.eu/LexUriServ/LexUriServ.do?uri=OJ:L:2010:323:0011:0102:SV:PDF"
    }
                                         URL                            1;	///< Required element.
    enum _icommon__resLocInspireInteroperabilityRegulation_x005fswe_MediaType
    {
	_icommon__resLocInspireInteroperabilityRegulation_x005fswe_MediaType__application_x002fpdf,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":mediaType value="application/pdf"
    }
                                         MediaType                      1;	///< Required element.
/*  RESTRICTED FROM icommon__resourceLocatorType:
    END OF RESTRICTED FROM icommon__resourceLocatorType */
};

/// @brief "http://www.opengis.net/wfs/2.0":QueryType is a complexType with complexContent extension of type "http://www.opengis.net/fes/2.0":AbstractAdhocQueryExpressionType.
///
/// @note class wfs__QueryType operations:
/// - wfs__QueryType* soap_new_wfs__QueryType(soap*) allocate and default initialize
/// - wfs__QueryType* soap_new_wfs__QueryType(soap*, int num) allocate and default initialize an array
/// - wfs__QueryType* soap_new_req_wfs__QueryType(soap*, ...) allocate, set required members
/// - wfs__QueryType* soap_new_set_wfs__QueryType(soap*, ...) allocate, set all public members
/// - wfs__QueryType::soap_default(soap*) default initialize members
/// - int soap_read_wfs__QueryType(soap*, wfs__QueryType*) deserialize from a stream
/// - int soap_write_wfs__QueryType(soap*, wfs__QueryType*) serialize to a stream
/// - wfs__QueryType* wfs__QueryType::soap_dup(soap*) returns deep copy of wfs__QueryType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - wfs__QueryType::soap_del() deep deletes wfs__QueryType data members, use only after wfs__QueryType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int wfs__QueryType::soap_type() returns SOAP_TYPE_wfs__QueryType or derived type identifier
class wfs__QueryType : public fes__AbstractAdhocQueryExpressionType
{ public:
/*  INHERITED FROM fes__AbstractQueryExpressionType:
/// Attribute "handle" of type xs:string.
  @ std::string*                         handle                         0;	///< Optional attribute.
    END OF INHERITED FROM fes__AbstractQueryExpressionType */
/*  INHERITED FROM fes__AbstractAdhocQueryExpressionType:
/// Reference "http://www.opengis.net/fes/2.0":AbstractProjectionClause to abstract element.
//  BEGIN SUBSTITUTIONS <xs:element substitutionGroup="AbstractProjectionClause" minOccurs="0" maxOccurs="unbounded"> with choice of elements to substitute:
//    <PropertyName> <PropertyName>
  $ int                                  __sizeAbstractProjectionClause 0;
    class __fes__union_QueryType
    {
  $ int                                  __unionAbstractProjectionClause 0;	///< Union _fes__union_QueryType selector: set to SOAP_UNION__fes__union_QueryType_<fieldname> or 0 to omit
/// Union for substitutionGroup fes__AbstractProjectionClause.
    union _fes__union_QueryType
    {
/// Element "http://www.opengis.net/wfs/2.0":PropertyName.
    _wfs__PropertyName*                  wfs__PropertyName             ;	///< Choice of element (one of multiple choices).
/// Element "http://www.opengis.net/wfs/2.0":PropertyName.
    _wfs__PropertyName*                  wfs__PropertyName_            ;	///< Choice of element (one of multiple choices).
    }                                    union_QueryType               ;
    }                                   *__union_QueryType             ;
//  END OF SUBSTITUTIONS
/// Reference "http://www.opengis.net/fes/2.0":AbstractSelectionClause to abstract element.
//  BEGIN SUBSTITUTIONS <xs:element substitutionGroup="AbstractSelectionClause" minOccurs="0"> with choice of elements to substitute:
//    <Filter>
  $ int                                  __unionAbstractSelectionClause 0;	///< Union _fes__union_QueryType_ selector: set to SOAP_UNION__fes__union_QueryType__<fieldname> or 0 to omit
/// Union for substitutionGroup fes__AbstractSelectionClause.
    union _fes__union_QueryType_
    {
/// Element "http://www.opengis.net/fes/2.0":Filter.
    fes__FilterType*                     Filter                        ;	///< Choice of element (one of multiple choices).
    }                                    union_QueryType_              ;
//  END OF SUBSTITUTIONS
/// Reference "http://www.opengis.net/fes/2.0":AbstractSortingClause to abstract element.
//  BEGIN SUBSTITUTIONS <xs:element substitutionGroup="AbstractSortingClause" minOccurs="0"> with choice of elements to substitute:
//    <SortBy>
  $ int                                  __unionAbstractSortingClause   0;	///< Union _fes__union_QueryType__ selector: set to SOAP_UNION__fes__union_QueryType___<fieldname> or 0 to omit
/// Union for substitutionGroup fes__AbstractSortingClause.
    union _fes__union_QueryType__
    {
/// Element "http://www.opengis.net/fes/2.0":SortBy.
    fes__SortByType*                     SortBy                        ;	///< Choice of element (one of multiple choices).
    }                                    union_QueryType__             ;
//  END OF SUBSTITUTIONS
/// Attribute "typeNames" of type "http://www.opengis.net/fes/2.0":TypeNamesListType.
  @ fes__TypeNamesListType               typeNames                      1;	///< Required attribute.
/// Attribute "aliases" of type "http://www.opengis.net/fes/2.0":AliasesType.
  @ fes__AliasesType*                    aliases                        0;	///< Optional attribute.
    END OF INHERITED FROM fes__AbstractAdhocQueryExpressionType */
/// Attribute "srsName" of type xs:anyURI.
  @ xsd__anyURI*                         srsName                        0;	///< Optional attribute.
/// Attribute "featureVersion" of type xs:string.
  @ std::string*                         featureVersion                 0;	///< Optional attribute.
};

/// @brief "http://www.opengis.net/wfs/2.0":GetFeatureWithLockType is a complexType with complexContent extension of type "http://www.opengis.net/wfs/2.0":GetFeatureType.
///
/// @note class wfs__GetFeatureWithLockType operations:
/// - wfs__GetFeatureWithLockType* soap_new_wfs__GetFeatureWithLockType(soap*) allocate and default initialize
/// - wfs__GetFeatureWithLockType* soap_new_wfs__GetFeatureWithLockType(soap*, int num) allocate and default initialize an array
/// - wfs__GetFeatureWithLockType* soap_new_req_wfs__GetFeatureWithLockType(soap*, ...) allocate, set required members
/// - wfs__GetFeatureWithLockType* soap_new_set_wfs__GetFeatureWithLockType(soap*, ...) allocate, set all public members
/// - wfs__GetFeatureWithLockType::soap_default(soap*) default initialize members
/// - int soap_read_wfs__GetFeatureWithLockType(soap*, wfs__GetFeatureWithLockType*) deserialize from a stream
/// - int soap_write_wfs__GetFeatureWithLockType(soap*, wfs__GetFeatureWithLockType*) serialize to a stream
/// - wfs__GetFeatureWithLockType* wfs__GetFeatureWithLockType::soap_dup(soap*) returns deep copy of wfs__GetFeatureWithLockType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - wfs__GetFeatureWithLockType::soap_del() deep deletes wfs__GetFeatureWithLockType data members, use only after wfs__GetFeatureWithLockType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int wfs__GetFeatureWithLockType::soap_type() returns SOAP_TYPE_wfs__GetFeatureWithLockType or derived type identifier
class wfs__GetFeatureWithLockType : public wfs__GetFeatureType
{ public:
/*  INHERITED FROM wfs__BaseRequestType:
/// Attribute "service" of type xs:string.
  @ std::string                          service                        1 == "WFS";	///< Required attribute with fixed value="WFS".
/// Attribute "version" of type "http://www.opengis.net/wfs/2.0":VersionStringType.
  @ wfs__VersionStringType               version                        1;	///< Required attribute.
/// Attribute "handle" of type xs:string.
  @ std::string*                         handle                         0;	///< Optional attribute.
    END OF INHERITED FROM wfs__BaseRequestType */
/*  INHERITED FROM wfs__GetFeatureType:
/// Reference "http://www.opengis.net/fes/2.0":AbstractQueryExpression to abstract element.
//  BEGIN SUBSTITUTIONS <xs:element substitutionGroup="AbstractQueryExpression" maxOccurs="unbounded"> with choice of elements to substitute:
//    <StoredQuery> <StoredQuery>
  $ int                                  __sizeAbstractQueryExpression  0;
    class __wfs__union_GetFeatureWithLockType
    {
  $ int                                  __unionAbstractQueryExpression;	///< Union _wfs__union_GetFeatureWithLockType selector: set to SOAP_UNION__wfs__union_GetFeatureWithLockType_<fieldname>
/// Union for substitutionGroup wfs__AbstractQueryExpression.
    union _wfs__union_GetFeatureWithLockType
    {
/// Element "http://www.opengis.net/wfs/2.0":StoredQuery.
    wfs__StoredQueryType*                StoredQuery                   ;	///< Choice of element (one of multiple choices).
/// Element "http://www.opengis.net/wfs/2.0":StoredQuery.
    wfs__StoredQueryType*                StoredQuery_                  ;	///< Choice of element (one of multiple choices).
    }                                    union_GetFeatureWithLockType  ;
    }                                   *__union_GetFeatureWithLockType;
//  END OF SUBSTITUTIONS
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/wfs/2.0":StandardPresentationParameters">.
/// Attribute "startIndex" of type xs:nonNegativeInteger.
  @ xsd__nonNegativeInteger              startIndex                     0;	///< Optional attribute with default value="0".
/// Attribute "count" of type xs:nonNegativeInteger.
  @ xsd__nonNegativeInteger*             count                          0;	///< Optional attribute.
/// Attribute "resultType" of type "http://www.opengis.net/wfs/2.0":ResultTypeType.
  @ enum wfs__ResultTypeType             resultType                     0 = wfs__ResultTypeType__results;	///< Optional attribute with default value="results".
/// Attribute "outputFormat" of type xs:string.
  @ std::string                          outputFormat                   0 = "application/gml+xml; version=3.2";	///< Optional attribute with default value="application/gml+xml; version=3.2".
//  END OF ATTRIBUTEGROUP
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/wfs/2.0":StandardResolveParameters">.
/// Attribute "resolve" of type "http://www.opengis.net/wfs/2.0":ResolveValueType.
  @ enum wfs__ResolveValueType           resolve                        0 = wfs__ResolveValueType__none;	///< Optional attribute with default value="none".
/// Attribute "resolveDepth" of type "http://www.opengis.net/wfs/2.0":positiveIntegerWithStar.
  @ wfs__positiveIntegerWithStar         resolveDepth                   0 = "*";	///< Optional attribute with default value="*".
/// Attribute "resolveTimeout" of type xs:positiveInteger.
  @ xsd__positiveInteger                 resolveTimeout                 0;	///< Optional attribute with default value="300".
//  END OF ATTRIBUTEGROUP
    END OF INHERITED FROM wfs__GetFeatureType */
/// Attribute "expiry" of type xs:positiveInteger.
  @ xsd__positiveInteger                 expiry                         0 /* @warning: cannot assign default/fixed value to this type */;	///< Optional attribute with default value="300".
/// Attribute "lockAction" of type "http://www.opengis.net/wfs/2.0":AllSomeType.
  @ enum wfs__AllSomeType                lockAction                     0 = wfs__AllSomeType__ALL;	///< Optional attribute with default value="ALL".
};

/// @brief "http://www.opengis.net/ows/1.1":IdentificationType is a complexType with complexContent extension of type "http://www.opengis.net/ows/1.1":BasicIdentificationType.
///
/// <PRE><BLOCKQUOTE>
///   Extended metadata identifying and describing a set of data. This type shall be extended if needed for each specific OWS to include additional metadata for each type of dataset. If needed, this type should first be restricted for each specific OWS to change the multiplicity (or optionality) of some elements.
/// </BLOCKQUOTE></PRE>
///
/// @note class ows__IdentificationType operations:
/// - ows__IdentificationType* soap_new_ows__IdentificationType(soap*) allocate and default initialize
/// - ows__IdentificationType* soap_new_ows__IdentificationType(soap*, int num) allocate and default initialize an array
/// - ows__IdentificationType* soap_new_req_ows__IdentificationType(soap*, ...) allocate, set required members
/// - ows__IdentificationType* soap_new_set_ows__IdentificationType(soap*, ...) allocate, set all public members
/// - ows__IdentificationType::soap_default(soap*) default initialize members
/// - int soap_read_ows__IdentificationType(soap*, ows__IdentificationType*) deserialize from a stream
/// - int soap_write_ows__IdentificationType(soap*, ows__IdentificationType*) serialize to a stream
/// - ows__IdentificationType* ows__IdentificationType::soap_dup(soap*) returns deep copy of ows__IdentificationType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - ows__IdentificationType::soap_del() deep deletes ows__IdentificationType data members, use only after ows__IdentificationType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int ows__IdentificationType::soap_type() returns SOAP_TYPE_ows__IdentificationType or derived type identifier
class ows__IdentificationType : public ows__BasicIdentificationType
{ public:
/*  INHERITED FROM ows__DescriptionType:
/// <PRE><BLOCKQUOTE>
///   Title of this resource, normally used for display to a human.
/// </BLOCKQUOTE></PRE>
///
/// Vector of ows__LanguageStringType* element refs of length 0..unbounded.
    std::vector<ows__LanguageStringType*> Title                          0;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   Brief narrative description of this resource, normally used for display to a human.
/// </BLOCKQUOTE></PRE>
///
/// Vector of ows__LanguageStringType* element refs of length 0..unbounded.
    std::vector<ows__LanguageStringType*> Abstract                       0;	///< Multiple elements.
/// Vector of ows__KeywordsType* element refs of length 0..unbounded.
    std::vector<ows__KeywordsType*     > Keywords                       0;	///< Multiple elements.
    END OF INHERITED FROM ows__DescriptionType */
/*  INHERITED FROM ows__BasicIdentificationType:
/// <PRE><BLOCKQUOTE>
///   Optional unique identifier or name of this dataset.
/// </BLOCKQUOTE></PRE>
///
/// <PRE><BLOCKQUOTE>
///   Unique identifier or name of this dataset.
/// </BLOCKQUOTE></PRE>
///
/// Element reference "http://www.opengis.net/ows/1.1:""http://www.opengis.net/ows/1.1":Identifier.
    ows__CodeType*                       Identifier                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional unordered list of additional metadata about this data(set). A list of optional metadata elements for this data identification could be specified in the Implementation Specification for this service.
/// </BLOCKQUOTE></PRE>
///
/// Vector of ows__MetadataType* element refs of length 0..unbounded.
    std::vector<ows__MetadataType*     > Metadata                       0;	///< Multiple elements.
    END OF INHERITED FROM ows__BasicIdentificationType */
/// <PRE><BLOCKQUOTE>
///   Unordered list of zero or more bounding boxes whose union describes the extent of this dataset.
/// </BLOCKQUOTE></PRE>
///
//  BEGIN SUBSTITUTIONS <xs:element substitutionGroup="BoundingBox" minOccurs="0" maxOccurs="unbounded"> with choice of elements to substitute:
//    <WGS84BoundingBox>
  $ int                                  __sizeBoundingBox              0;
    class __ows__union_IdentificationType
    {
  $ int                                  __unionBoundingBox             0;	///< Union _ows__union_IdentificationType selector: set to SOAP_UNION__ows__union_IdentificationType_<fieldname> or 0 to omit
/// Union for substitutionGroup ows__BoundingBox.
    union _ows__union_IdentificationType
    {
/// <PRE><BLOCKQUOTE>
///   Unordered list of zero or more bounding boxes whose union describes the extent of this dataset.
/// </BLOCKQUOTE></PRE>
///
/// Vector of ows__BoundingBoxType* element refs of length 0..unbounded.
    std::vector<ows__BoundingBoxType* > *BoundingBox                   ;	///< Choice of optional element (one of multiple choices).
/// Element "http://www.opengis.net/ows/1.1":WGS84BoundingBox.
    ows__WGS84BoundingBoxType*           WGS84BoundingBox              ;	///< Choice of element (one of multiple choices).
    }                                    union_IdentificationType      ;
    }                                   *__union_IdentificationType    ;
//  END OF SUBSTITUTIONS
/// <PRE><BLOCKQUOTE>
///   Unordered list of zero or more references to data formats supported for server outputs.
/// </BLOCKQUOTE></PRE>
///
/// <PRE><BLOCKQUOTE>
///   Reference to a format in which this data can be encoded and transferred. More specific parameter names should be used by specific OWS specifications wherever applicable. More than one such parameter can be included for different purposes.
/// </BLOCKQUOTE></PRE>
///
/// Vector of ows__MimeType element refs of length 0..unbounded.
    std::vector<ows__MimeType          > OutputFormat                   0;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   Unordered list of zero or more available coordinate reference systems.
/// </BLOCKQUOTE></PRE>
///
//  BEGIN SUBSTITUTIONS <xs:element substitutionGroup="AvailableCRS" minOccurs="0" maxOccurs="unbounded"> with choice of elements to substitute:
//    <SupportedCRS>
  $ int                                  __sizeAvailableCRS             0;
    class __ows__union_IdentificationType_
    {
  $ int                                  __unionAvailableCRS            0;	///< Union _ows__union_IdentificationType_ selector: set to SOAP_UNION__ows__union_IdentificationType__<fieldname> or 0 to omit
/// Union for substitutionGroup ows__AvailableCRS.
    union _ows__union_IdentificationType_
    {
/// <PRE><BLOCKQUOTE>
///   Unordered list of zero or more available coordinate reference systems.
/// </BLOCKQUOTE></PRE>
///
/// Vector of xsd__anyURI element refs of length 0..unbounded.
    std::vector<xsd__anyURI           > *AvailableCRS                  ;	///< Choice of optional element (one of multiple choices).
/// <PRE><BLOCKQUOTE>
///   Coordinate reference system in which data from this data(set) or resource is available or supported. More specific parameter names should be used by specific OWS specifications wherever applicable. More than one such parameter can be included for different purposes.
/// </BLOCKQUOTE></PRE>
///
/// Element "http://www.opengis.net/ows/1.1":SupportedCRS.
    xsd__anyURI*                         SupportedCRS                  ;	///< Choice of element (one of multiple choices).
    }                                    union_IdentificationType_     ;
    }                                   *__union_IdentificationType_   ;
//  END OF SUBSTITUTIONS
};

/// @brief "http://www.opengis.net/ows/1.1":ServiceReferenceType is a complexType with complexContent extension of type "http://www.opengis.net/ows/1.1":ReferenceType.
///
/// <PRE><BLOCKQUOTE>
///   Complete reference to a remote resource that needs to be retrieved from an OWS using an XML-encoded operation request. This element shall be used, within an InputData or Manifest element that is used for input data, when that input data needs to be retrieved from another web service using a XML-encoded OWS operation request. This element shall not be used for local payload input data or for requesting the resource from a web server using HTTP Get.
/// </BLOCKQUOTE></PRE>
///
/// @note class ows__ServiceReferenceType operations:
/// - ows__ServiceReferenceType* soap_new_ows__ServiceReferenceType(soap*) allocate and default initialize
/// - ows__ServiceReferenceType* soap_new_ows__ServiceReferenceType(soap*, int num) allocate and default initialize an array
/// - ows__ServiceReferenceType* soap_new_req_ows__ServiceReferenceType(soap*, ...) allocate, set required members
/// - ows__ServiceReferenceType* soap_new_set_ows__ServiceReferenceType(soap*, ...) allocate, set all public members
/// - ows__ServiceReferenceType::soap_default(soap*) default initialize members
/// - int soap_read_ows__ServiceReferenceType(soap*, ows__ServiceReferenceType*) deserialize from a stream
/// - int soap_write_ows__ServiceReferenceType(soap*, ows__ServiceReferenceType*) serialize to a stream
/// - ows__ServiceReferenceType* ows__ServiceReferenceType::soap_dup(soap*) returns deep copy of ows__ServiceReferenceType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - ows__ServiceReferenceType::soap_del() deep deletes ows__ServiceReferenceType data members, use only after ows__ServiceReferenceType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int ows__ServiceReferenceType::soap_type() returns SOAP_TYPE_ows__ServiceReferenceType or derived type identifier
class ows__ServiceReferenceType : public ows__ReferenceType
{ public:
/*  INHERITED FROM ows__AbstractReferenceBaseType:
/// Attribute "type" of type xs:string.
  @ std::string                          ows__type                      0 == "simple";	///< Optional attribute with fixed value="simple".
/// <PRE><BLOCKQUOTE>
///   Reference to a remote resource or local payload. A remote resource is typically addressed by a URL. For a local payload (such as a multipart mime message), the xlink:href must start with the prefix cid:.
/// </BLOCKQUOTE></PRE>
///
/// Attribute reference "http://www.opengis.net/ows/1.1":"http://www.w3.org/1999/xlink":href.
  @ xlink__hrefType                      xlink__href                    1;	///< Required attribute.
/// <PRE><BLOCKQUOTE>
///   Reference to a resource that describes the role of this reference. When no value is supplied, no particular role value is to be inferred.
/// </BLOCKQUOTE></PRE>
///
/// Attribute reference "http://www.opengis.net/ows/1.1":"http://www.w3.org/1999/xlink":role.
  @ xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Although allowed, this attribute is not expected to be useful in this application of xlink:simpleAttrs.
/// </BLOCKQUOTE></PRE>
///
/// Attribute reference "http://www.opengis.net/ows/1.1":"http://www.w3.org/1999/xlink":arcrole.
  @ xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Describes the meaning of the referenced resource in a human-readable fashion.
/// </BLOCKQUOTE></PRE>
///
/// Attribute reference "http://www.opengis.net/ows/1.1":"http://www.w3.org/1999/xlink":title.
  @ xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Although allowed, this attribute is not expected to be useful in this application of xlink:simpleAttrs.
/// </BLOCKQUOTE></PRE>
///
/// Attribute reference "http://www.opengis.net/ows/1.1":"http://www.w3.org/1999/xlink":show.
  @ enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Although allowed, this attribute is not expected to be useful in this application of xlink:simpleAttrs.
/// </BLOCKQUOTE></PRE>
///
/// Attribute reference "http://www.opengis.net/ows/1.1":"http://www.w3.org/1999/xlink":actuate.
  @ enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
    END OF INHERITED FROM ows__AbstractReferenceBaseType */
/*  INHERITED FROM ows__ReferenceType:
/// <PRE><BLOCKQUOTE>
///   Optional unique identifier of the referenced resource.
/// </BLOCKQUOTE></PRE>
///
/// <PRE><BLOCKQUOTE>
///   Unique identifier or name of this dataset.
/// </BLOCKQUOTE></PRE>
///
/// Element reference "http://www.opengis.net/ows/1.1:""http://www.opengis.net/ows/1.1":Identifier.
    ows__CodeType*                       Identifier                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Brief narrative description of this resource, normally used for display to a human.
/// </BLOCKQUOTE></PRE>
///
/// Vector of ows__LanguageStringType* element refs of length 0..unbounded.
    std::vector<ows__LanguageStringType*> Abstract                       0;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   The format of the referenced resource. This element is omitted when the mime type is indicated in the http header of the reference.
/// </BLOCKQUOTE></PRE>
///
/// Element "Format" of type "http://www.opengis.net/ows/1.1":MimeType.
    ows__MimeType*                       Format                         0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional unordered list of additional metadata about this resource. A list of optional metadata elements for this ReferenceType could be specified in the Implementation Specification for each use of this type in a specific OWS.
/// </BLOCKQUOTE></PRE>
///
/// Vector of ows__MetadataType* element refs of length 0..unbounded.
    std::vector<ows__MetadataType*     > Metadata                       0;	///< Multiple elements.
    END OF INHERITED FROM ows__ReferenceType */
//  BEGIN CHOICE <xs:choice>
  $ int                                  __union_ServiceReferenceType  ;	///< Union _ows__union_ServiceReferenceType selector: set to SOAP_UNION__ows__union_ServiceReferenceType_<fieldname>
/// Union for choice in ows__ServiceReferenceType.
    union _ows__union_ServiceReferenceType
    {
/// <PRE><BLOCKQUOTE>
///   The XML-encoded operation request message to be sent to request this input data from another web server using HTTP Post.
/// </BLOCKQUOTE></PRE>
///
/// Element "RequestMessage" of type xs:anyType.
    xsd__anyType*                        RequestMessage                ;	///< Choice of element (one of multiple choices).
/// <PRE><BLOCKQUOTE>
///   Reference to the XML-encoded operation request message to be sent to request this input data from another web server using HTTP Post. The referenced message shall be attached to the same message (using the cid scheme), or be accessible using a URL.
/// </BLOCKQUOTE></PRE>
///
/// Element "RequestMessageReference" of type xs:anyURI.
    xsd__anyURI*                         RequestMessageReference       ;	///< Choice of element (one of multiple choices).
    }                                    union_ServiceReferenceType    ;
//  END OF CHOICE
};

/// @brief "http://www.opengis.net/ows/1.1":ReferenceGroupType is a complexType with complexContent extension of type "http://www.opengis.net/ows/1.1":BasicIdentificationType.
///
/// <PRE><BLOCKQUOTE>
///   Logical group of one or more references to remote and/or local resources, allowing including metadata about that group. A Group can be used instead of a Manifest that can only contain one group.
/// </BLOCKQUOTE></PRE>
///
/// @note class ows__ReferenceGroupType operations:
/// - ows__ReferenceGroupType* soap_new_ows__ReferenceGroupType(soap*) allocate and default initialize
/// - ows__ReferenceGroupType* soap_new_ows__ReferenceGroupType(soap*, int num) allocate and default initialize an array
/// - ows__ReferenceGroupType* soap_new_req_ows__ReferenceGroupType(soap*, ...) allocate, set required members
/// - ows__ReferenceGroupType* soap_new_set_ows__ReferenceGroupType(soap*, ...) allocate, set all public members
/// - ows__ReferenceGroupType::soap_default(soap*) default initialize members
/// - int soap_read_ows__ReferenceGroupType(soap*, ows__ReferenceGroupType*) deserialize from a stream
/// - int soap_write_ows__ReferenceGroupType(soap*, ows__ReferenceGroupType*) serialize to a stream
/// - ows__ReferenceGroupType* ows__ReferenceGroupType::soap_dup(soap*) returns deep copy of ows__ReferenceGroupType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - ows__ReferenceGroupType::soap_del() deep deletes ows__ReferenceGroupType data members, use only after ows__ReferenceGroupType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int ows__ReferenceGroupType::soap_type() returns SOAP_TYPE_ows__ReferenceGroupType or derived type identifier
class ows__ReferenceGroupType : public ows__BasicIdentificationType
{ public:
/*  INHERITED FROM ows__DescriptionType:
/// <PRE><BLOCKQUOTE>
///   Title of this resource, normally used for display to a human.
/// </BLOCKQUOTE></PRE>
///
/// Vector of ows__LanguageStringType* element refs of length 0..unbounded.
    std::vector<ows__LanguageStringType*> Title                          0;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   Brief narrative description of this resource, normally used for display to a human.
/// </BLOCKQUOTE></PRE>
///
/// Vector of ows__LanguageStringType* element refs of length 0..unbounded.
    std::vector<ows__LanguageStringType*> Abstract                       0;	///< Multiple elements.
/// Vector of ows__KeywordsType* element refs of length 0..unbounded.
    std::vector<ows__KeywordsType*     > Keywords                       0;	///< Multiple elements.
    END OF INHERITED FROM ows__DescriptionType */
/*  INHERITED FROM ows__BasicIdentificationType:
/// <PRE><BLOCKQUOTE>
///   Optional unique identifier or name of this dataset.
/// </BLOCKQUOTE></PRE>
///
/// <PRE><BLOCKQUOTE>
///   Unique identifier or name of this dataset.
/// </BLOCKQUOTE></PRE>
///
/// Element reference "http://www.opengis.net/ows/1.1:""http://www.opengis.net/ows/1.1":Identifier.
    ows__CodeType*                       Identifier                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional unordered list of additional metadata about this data(set). A list of optional metadata elements for this data identification could be specified in the Implementation Specification for this service.
/// </BLOCKQUOTE></PRE>
///
/// Vector of ows__MetadataType* element refs of length 0..unbounded.
    std::vector<ows__MetadataType*     > Metadata                       0;	///< Multiple elements.
    END OF INHERITED FROM ows__BasicIdentificationType */
/// Reference "http://www.opengis.net/ows/1.1":AbstractReferenceBase to abstract element.
//  BEGIN SUBSTITUTIONS <xs:element substitutionGroup="AbstractReferenceBase" maxOccurs="unbounded"> with choice of elements to substitute:
//    <Reference>
  $ int                                  __sizeAbstractReferenceBase    0;
    class __ows__union_ReferenceGroupType
    {
  $ int                                  __unionAbstractReferenceBase  ;	///< Union _ows__union_ReferenceGroupType selector: set to SOAP_UNION__ows__union_ReferenceGroupType_<fieldname>
/// Union for substitutionGroup ows__AbstractReferenceBase.
    union _ows__union_ReferenceGroupType
    {
//  BEGIN SUBSTITUTIONS <xs:element substitutionGroup="Reference"> with choice of elements to substitute:
//    <ServiceReference>
/// Element "http://www.opengis.net/ows/1.1":Reference.
    ows__ReferenceType*                  Reference                     ;	///< Choice of element (one of multiple choices).
/// Element "http://www.opengis.net/ows/1.1":ServiceReference.
    ows__ServiceReferenceType*           ServiceReference              ;	///< Choice of element (one of multiple choices).
//  END OF SUBSTITUTIONS
    }                                    union_ReferenceGroupType      ;
    }                                   *__union_ReferenceGroupType    ;
//  END OF SUBSTITUTIONS
};

/// @brief "http://www.opengis.net/ows/1.1":ManifestType is a complexType with complexContent extension of type "http://www.opengis.net/ows/1.1":BasicIdentificationType.
///
/// <PRE><BLOCKQUOTE>
///   Unordered list of one or more groups of references to remote and/or local resources.
/// </BLOCKQUOTE></PRE>
///
/// @note class ows__ManifestType operations:
/// - ows__ManifestType* soap_new_ows__ManifestType(soap*) allocate and default initialize
/// - ows__ManifestType* soap_new_ows__ManifestType(soap*, int num) allocate and default initialize an array
/// - ows__ManifestType* soap_new_req_ows__ManifestType(soap*, ...) allocate, set required members
/// - ows__ManifestType* soap_new_set_ows__ManifestType(soap*, ...) allocate, set all public members
/// - ows__ManifestType::soap_default(soap*) default initialize members
/// - int soap_read_ows__ManifestType(soap*, ows__ManifestType*) deserialize from a stream
/// - int soap_write_ows__ManifestType(soap*, ows__ManifestType*) serialize to a stream
/// - ows__ManifestType* ows__ManifestType::soap_dup(soap*) returns deep copy of ows__ManifestType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - ows__ManifestType::soap_del() deep deletes ows__ManifestType data members, use only after ows__ManifestType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int ows__ManifestType::soap_type() returns SOAP_TYPE_ows__ManifestType or derived type identifier
class ows__ManifestType : public ows__BasicIdentificationType
{ public:
/*  INHERITED FROM ows__DescriptionType:
/// <PRE><BLOCKQUOTE>
///   Title of this resource, normally used for display to a human.
/// </BLOCKQUOTE></PRE>
///
/// Vector of ows__LanguageStringType* element refs of length 0..unbounded.
    std::vector<ows__LanguageStringType*> Title                          0;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   Brief narrative description of this resource, normally used for display to a human.
/// </BLOCKQUOTE></PRE>
///
/// Vector of ows__LanguageStringType* element refs of length 0..unbounded.
    std::vector<ows__LanguageStringType*> Abstract                       0;	///< Multiple elements.
/// Vector of ows__KeywordsType* element refs of length 0..unbounded.
    std::vector<ows__KeywordsType*     > Keywords                       0;	///< Multiple elements.
    END OF INHERITED FROM ows__DescriptionType */
/*  INHERITED FROM ows__BasicIdentificationType:
/// <PRE><BLOCKQUOTE>
///   Optional unique identifier or name of this dataset.
/// </BLOCKQUOTE></PRE>
///
/// <PRE><BLOCKQUOTE>
///   Unique identifier or name of this dataset.
/// </BLOCKQUOTE></PRE>
///
/// Element reference "http://www.opengis.net/ows/1.1:""http://www.opengis.net/ows/1.1":Identifier.
    ows__CodeType*                       Identifier                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional unordered list of additional metadata about this data(set). A list of optional metadata elements for this data identification could be specified in the Implementation Specification for this service.
/// </BLOCKQUOTE></PRE>
///
/// Vector of ows__MetadataType* element refs of length 0..unbounded.
    std::vector<ows__MetadataType*     > Metadata                       0;	///< Multiple elements.
    END OF INHERITED FROM ows__BasicIdentificationType */
/// Vector of ows__ReferenceGroupType* element refs of length 1..unbounded.
    std::vector<ows__ReferenceGroupType*> ReferenceGroup                 1;	///< Multiple elements.
};

/// @brief "http://inspire.ec.europa.eu/schemas/common/1.0":dataset is a complexType with complexContent restriction of type "http://inspire.ec.europa.eu/schemas/common/1.0":data.
///
/// @note class icommon__dataset operations:
/// - icommon__dataset* soap_new_icommon__dataset(soap*) allocate and default initialize
/// - icommon__dataset* soap_new_icommon__dataset(soap*, int num) allocate and default initialize an array
/// - icommon__dataset* soap_new_req_icommon__dataset(soap*, ...) allocate, set required members
/// - icommon__dataset* soap_new_set_icommon__dataset(soap*, ...) allocate, set all public members
/// - icommon__dataset::soap_default(soap*) default initialize members
/// - int soap_read_icommon__dataset(soap*, icommon__dataset*) deserialize from a stream
/// - int soap_write_icommon__dataset(soap*, icommon__dataset*) serialize to a stream
/// - icommon__dataset* icommon__dataset::soap_dup(soap*) returns deep copy of icommon__dataset, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - icommon__dataset::soap_del() deep deletes icommon__dataset data members, use only after icommon__dataset::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int icommon__dataset::soap_type() returns SOAP_TYPE_icommon__dataset or derived type identifier
class icommon__dataset : public xsd__anyType
{ public:
/// Element "ResourceTitle" of type "http://inspire.ec.europa.eu/schemas/common/1.0":notEmptyString.
    icommon__notEmptyString              ResourceTitle                  1;	///< Required element.
/// Element "ResourceAbstract" of type "http://inspire.ec.europa.eu/schemas/common/1.0":notEmptyString.
    icommon__notEmptyString              ResourceAbstract               1;	///< Required element.
    enum _icommon__dataset_ResourceType
    {
	_icommon__dataset_ResourceType__dataset,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":resourceType value="dataset"
    }
                                         ResourceType                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Mandatory if a URL is available to obtain more information on
///   the resource, and/or access related services.
/// </BLOCKQUOTE></PRE>
///
/// Vector of icommon__resourceLocatorType* of length 0..unbounded.
    std::vector<icommon__resourceLocatorType*> ResourceLocator                0;	///< Multiple elements.
/// Vector of icommon__inspireTheme* of length 1..unbounded.
    std::vector<icommon__inspireTheme* > MandatoryKeyword               1;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   If a resource is a spatial data set or spatial data set series, at least one keyword shall be provided from the general environmental multilingual thesaurus (GEMET) describing the relevant spatial data theme as defined in Annex I, II or III to Directive 2007/2/EC.
/// </BLOCKQUOTE></PRE>
///
/// Vector of icommon__keyword* of length 0..unbounded.
    std::vector<icommon__keyword*      > Keyword                        0;	///< Multiple elements.
/// Vector of icommon__geographicBoundingBox* of length 1..unbounded.
    std::vector<icommon__geographicBoundingBox*> GeographicBoundingBox          1;	///< Multiple elements.
/// Vector of icommon__temporalReference* of length 1..unbounded.
    std::vector<icommon__temporalReference*> TemporalReference              1;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   Mandatory when there is a restriction on the spatial resolution for this service.
/// </BLOCKQUOTE></PRE>
///
/// Vector of icommon__spatialResolution* of length 0..unbounded.
    std::vector<icommon__spatialResolution*> SpatialResolution              0;	///< Multiple elements.
/// Vector of icommon__conformity* of length 1..unbounded.
    std::vector<icommon__conformity*   > Conformity                     1;	///< Multiple elements.
/// Vector of icommon__notEmptyString of length 1..unbounded.
    std::vector<icommon__notEmptyString> ConditionsForAccessAndUse      1;	///< Multiple elements.
/// Vector of icommon__notEmptyString of length 1..unbounded.
    std::vector<icommon__notEmptyString> LimitationsOnPublicAccess      1;	///< Multiple elements.
/// Vector of icommon__responsibleOrganisation* of length 1..unbounded.
    std::vector<icommon__responsibleOrganisation*> ResponsibleOrganisation        1;	///< Multiple elements.
/// Vector of icommon__metadataPointOfContact* of length 1..unbounded.
    std::vector<icommon__metadataPointOfContact*> MetadataPointOfContact         1;	///< Multiple elements.
/// Element "MetadataDate" of type "http://inspire.ec.europa.eu/schemas/common/1.0":iso8601Date.
    icommon__iso8601Date                 MetadataDate                   1;	///< Required element.
/// Element "MetadataLanguage" of type "http://inspire.ec.europa.eu/schemas/common/1.0":euLanguageISO6392B.
    enum icommon__euLanguageISO6392B     MetadataLanguage               1;	///< Required element.
/// Vector of icommon__uniqueResourceIdentifier* of length 1..unbounded.
    std::vector<icommon__uniqueResourceIdentifier*> UniqueResourceIdentifier       1;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   Mandatory if the resource includes textual information.
/// </BLOCKQUOTE></PRE>
///
/// Vector of enum icommon__languageISO6392B of length 0..unbounded.
    std::vector<enum icommon__languageISO6392B> ResourceLanguage               0;	///< Multiple elements.
/// Vector of enum icommon__topicCategory of length 1..unbounded.
    std::vector<enum icommon__topicCategory> TopicCategory                  1;	///< Multiple elements.
/// Element "Lineage" of type "http://inspire.ec.europa.eu/schemas/common/1.0":notEmptyString.
    icommon__notEmptyString              Lineage                        1;	///< Required element.
/*  RESTRICTED FROM icommon__data:
    END OF RESTRICTED FROM icommon__data */
/*  RESTRICTED FROM icommon__resource:
/// Imported attribute reference xml:lang.
  @ _xml__lang*                          xml__lang                      0;	///< Optional attribute.
    END OF RESTRICTED FROM icommon__resource */
};

/// @brief "http://inspire.ec.europa.eu/schemas/common/1.0":series is a complexType with complexContent restriction of type "http://inspire.ec.europa.eu/schemas/common/1.0":data.
///
/// @note class icommon__series operations:
/// - icommon__series* soap_new_icommon__series(soap*) allocate and default initialize
/// - icommon__series* soap_new_icommon__series(soap*, int num) allocate and default initialize an array
/// - icommon__series* soap_new_req_icommon__series(soap*, ...) allocate, set required members
/// - icommon__series* soap_new_set_icommon__series(soap*, ...) allocate, set all public members
/// - icommon__series::soap_default(soap*) default initialize members
/// - int soap_read_icommon__series(soap*, icommon__series*) deserialize from a stream
/// - int soap_write_icommon__series(soap*, icommon__series*) serialize to a stream
/// - icommon__series* icommon__series::soap_dup(soap*) returns deep copy of icommon__series, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - icommon__series::soap_del() deep deletes icommon__series data members, use only after icommon__series::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int icommon__series::soap_type() returns SOAP_TYPE_icommon__series or derived type identifier
class icommon__series : public xsd__anyType
{ public:
/// Element "ResourceTitle" of type "http://inspire.ec.europa.eu/schemas/common/1.0":notEmptyString.
    icommon__notEmptyString              ResourceTitle                  1;	///< Required element.
/// Element "ResourceAbstract" of type "http://inspire.ec.europa.eu/schemas/common/1.0":notEmptyString.
    icommon__notEmptyString              ResourceAbstract               1;	///< Required element.
    enum _icommon__series_ResourceType
    {
	_icommon__series_ResourceType__series,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":resourceType value="series"
    }
                                         ResourceType                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Mandatory if a URL is available to obtain more information on
///   the resource, and/or access related services.
/// </BLOCKQUOTE></PRE>
///
/// Vector of icommon__resourceLocatorType* of length 0..unbounded.
    std::vector<icommon__resourceLocatorType*> ResourceLocator                0;	///< Multiple elements.
/// Vector of icommon__inspireTheme* of length 1..unbounded.
    std::vector<icommon__inspireTheme* > MandatoryKeyword               1;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   If a resource is a spatial data set or spatial data set series, at least one keyword shall be provided from the general environmental multilingual thesaurus (GEMET) describing the relevant spatial data theme as defined in Annex I, II or III to Directive 2007/2/EC.
/// </BLOCKQUOTE></PRE>
///
/// Vector of icommon__keyword* of length 0..unbounded.
    std::vector<icommon__keyword*      > Keyword                        0;	///< Multiple elements.
/// Vector of icommon__geographicBoundingBox* of length 1..unbounded.
    std::vector<icommon__geographicBoundingBox*> GeographicBoundingBox          1;	///< Multiple elements.
/// Vector of icommon__temporalReference* of length 1..unbounded.
    std::vector<icommon__temporalReference*> TemporalReference              1;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   Mandatory when there is a restriction on the spatial resolution for this service.
/// </BLOCKQUOTE></PRE>
///
/// Vector of icommon__spatialResolution* of length 0..unbounded.
    std::vector<icommon__spatialResolution*> SpatialResolution              0;	///< Multiple elements.
/// Vector of icommon__conformity* of length 1..unbounded.
    std::vector<icommon__conformity*   > Conformity                     1;	///< Multiple elements.
/// Vector of icommon__notEmptyString of length 1..unbounded.
    std::vector<icommon__notEmptyString> ConditionsForAccessAndUse      1;	///< Multiple elements.
/// Vector of icommon__notEmptyString of length 1..unbounded.
    std::vector<icommon__notEmptyString> LimitationsOnPublicAccess      1;	///< Multiple elements.
/// Vector of icommon__responsibleOrganisation* of length 1..unbounded.
    std::vector<icommon__responsibleOrganisation*> ResponsibleOrganisation        1;	///< Multiple elements.
/// Vector of icommon__metadataPointOfContact* of length 1..unbounded.
    std::vector<icommon__metadataPointOfContact*> MetadataPointOfContact         1;	///< Multiple elements.
/// Element "MetadataDate" of type "http://inspire.ec.europa.eu/schemas/common/1.0":iso8601Date.
    icommon__iso8601Date                 MetadataDate                   1;	///< Required element.
/// Element "MetadataLanguage" of type "http://inspire.ec.europa.eu/schemas/common/1.0":euLanguageISO6392B.
    enum icommon__euLanguageISO6392B     MetadataLanguage               1;	///< Required element.
/// Vector of icommon__uniqueResourceIdentifier* of length 1..unbounded.
    std::vector<icommon__uniqueResourceIdentifier*> UniqueResourceIdentifier       1;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   Mandatory if the resource includes textual information.
/// </BLOCKQUOTE></PRE>
///
/// Vector of enum icommon__languageISO6392B of length 0..unbounded.
    std::vector<enum icommon__languageISO6392B> ResourceLanguage               0;	///< Multiple elements.
/// Vector of enum icommon__topicCategory of length 1..unbounded.
    std::vector<enum icommon__topicCategory> TopicCategory                  1;	///< Multiple elements.
/// Element "Lineage" of type "http://inspire.ec.europa.eu/schemas/common/1.0":notEmptyString.
    icommon__notEmptyString              Lineage                        1;	///< Required element.
/*  RESTRICTED FROM icommon__data:
    END OF RESTRICTED FROM icommon__data */
/*  RESTRICTED FROM icommon__resource:
/// Imported attribute reference xml:lang.
  @ _xml__lang*                          xml__lang                      0;	///< Optional attribute.
    END OF RESTRICTED FROM icommon__resource */
};

/// @brief "http://inspire.ec.europa.eu/schemas/common/1.0":service is a complexType with complexContent restriction of type "http://inspire.ec.europa.eu/schemas/common/1.0":service_ext.
///
/// This type is extended by:
/// - "http://inspire.ec.europa.eu/schemas/common/1.0":discoveryService_ext as icommon__discoveryService_x005fext
/// - "http://inspire.ec.europa.eu/schemas/common/1.0":viewService_ext as icommon__viewService_x005fext
/// - "http://inspire.ec.europa.eu/schemas/common/1.0":downloadService_ext as icommon__downloadService_x005fext
/// - "http://inspire.ec.europa.eu/schemas/common/1.0":transformationService_ext as icommon__transformationService_x005fext
/// - "http://inspire.ec.europa.eu/schemas/common/1.0":invokeService_ext as icommon__invokeService_x005fext
/// - "http://inspire.ec.europa.eu/schemas/common/1.0":otherService_ext as icommon__otherService_x005fext
///
/// @note class icommon__service operations:
/// - icommon__service* soap_new_icommon__service(soap*) allocate and default initialize
/// - icommon__service* soap_new_icommon__service(soap*, int num) allocate and default initialize an array
/// - icommon__service* soap_new_req_icommon__service(soap*, ...) allocate, set required members
/// - icommon__service* soap_new_set_icommon__service(soap*, ...) allocate, set all public members
/// - icommon__service::soap_default(soap*) default initialize members
/// - int soap_read_icommon__service(soap*, icommon__service*) deserialize from a stream
/// - int soap_write_icommon__service(soap*, icommon__service*) serialize to a stream
/// - icommon__service* icommon__service::soap_dup(soap*) returns deep copy of icommon__service, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - icommon__service::soap_del() deep deletes icommon__service data members, use only after icommon__service::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int icommon__service::soap_type() returns SOAP_TYPE_icommon__service or derived type identifier
class icommon__service : public xsd__anyType
{ public:
/// Element "ResourceTitle" of type "http://inspire.ec.europa.eu/schemas/common/1.0":notEmptyString.
    icommon__notEmptyString              ResourceTitle                  1;	///< Required element.
/// Element "ResourceAbstract" of type "http://inspire.ec.europa.eu/schemas/common/1.0":notEmptyString.
    icommon__notEmptyString              ResourceAbstract               1;	///< Required element.
/// Element "ResourceType" of type "http://inspire.ec.europa.eu/schemas/common/1.0":serviceSpatialDataResourceType.
    enum icommon__serviceSpatialDataResourceType  ResourceType                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Mandatory if linkage to the service is available
/// </BLOCKQUOTE></PRE>
///
/// Vector of icommon__resourceLocatorType* of length 0..unbounded.
    std::vector<icommon__resourceLocatorType*> ResourceLocator                0;	///< Multiple elements.
/// Vector of icommon__classificationOfSpatialDataService* of length 1..unbounded.
    std::vector<icommon__classificationOfSpatialDataService*> MandatoryKeyword               1;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   If the resource is a spatial data service, at least one keyword from Part D.4 shall be provided.
/// </BLOCKQUOTE></PRE>
///
/// Vector of icommon__keyword* of length 0..unbounded.
    std::vector<icommon__keyword*      > Keyword                        0;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   Mandatory for services with an explicit geographic extent.
/// </BLOCKQUOTE></PRE>
///
/// Vector of icommon__geographicBoundingBox* of length 0..unbounded.
    std::vector<icommon__geographicBoundingBox*> GeographicBoundingBox          0;	///< Multiple elements.
/// Vector of icommon__temporalReference* of length 1..unbounded.
    std::vector<icommon__temporalReference*> TemporalReference              1;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   Mandatory when there is a restriction on the spatial resolution for this service.
/// </BLOCKQUOTE></PRE>
///
/// Vector of icommon__spatialResolution* of length 0..unbounded.
    std::vector<icommon__spatialResolution*> SpatialResolution              0;	///< Multiple elements.
/// Vector of icommon__conformity* of length 1..unbounded.
    std::vector<icommon__conformity*   > Conformity                     1;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   The element must have values. If no conditions apply to the access and use of the resource, no conditions apply
///   shall be used. If conditions are unknown, conditions unknown shall be used.
/// </BLOCKQUOTE></PRE>
///
/// Vector of icommon__notEmptyString of length 1..unbounded.
    std::vector<icommon__notEmptyString> ConditionsForAccessAndUse      1;	///< Multiple elements.
/// Vector of icommon__notEmptyString of length 1..unbounded.
    std::vector<icommon__notEmptyString> LimitationsOnPublicAccess      1;	///< Multiple elements.
/// Vector of icommon__responsibleOrganisation* of length 1..unbounded.
    std::vector<icommon__responsibleOrganisation*> ResponsibleOrganisation        1;	///< Multiple elements.
/// Vector of icommon__metadataPointOfContact* of length 1..unbounded.
    std::vector<icommon__metadataPointOfContact*> MetadataPointOfContact         1;	///< Multiple elements.
/// Element "MetadataDate" of type "http://inspire.ec.europa.eu/schemas/common/1.0":iso8601Date.
    icommon__iso8601Date                 MetadataDate                   1;	///< Required element.
/// Element "MetadataLanguage" of type "http://inspire.ec.europa.eu/schemas/common/1.0":euLanguageISO6392B.
    enum icommon__euLanguageISO6392B     MetadataLanguage               1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Mandatory if linkage to data sets on which the service operates are available.
/// </BLOCKQUOTE></PRE>
///
/// Vector of icommon__uniqueResourceIdentifier* of length 0..unbounded.
    std::vector<icommon__uniqueResourceIdentifier*> CoupledResource                0;	///< Multiple elements.
/// Element "SpatialDataServiceType" of type "http://inspire.ec.europa.eu/schemas/common/1.0":spatialDataServiceType.
    enum icommon__spatialDataServiceType  SpatialDataServiceType         1;	///< Required element.
/*  RESTRICTED FROM icommon__service_x005fext:
    END OF RESTRICTED FROM icommon__service_x005fext */
/*  RESTRICTED FROM icommon__resource:
/// Imported attribute reference xml:lang.
  @ _xml__lang*                          xml__lang                      0;	///< Optional attribute.
    END OF RESTRICTED FROM icommon__resource */
};

/// @brief "http://inspire.ec.europa.eu/schemas/common/1.0":originatingControlledVocabularyGemetInspireThemes is a complexType with complexContent restriction of type "http://inspire.ec.europa.eu/schemas/common/1.0":originatingControlledVocabulary.
///
/// @note class icommon__originatingControlledVocabularyGemetInspireThemes operations:
/// - icommon__originatingControlledVocabularyGemetInspireThemes* soap_new_icommon__originatingControlledVocabularyGemetInspireThemes(soap*) allocate and default initialize
/// - icommon__originatingControlledVocabularyGemetInspireThemes* soap_new_icommon__originatingControlledVocabularyGemetInspireThemes(soap*, int num) allocate and default initialize an array
/// - icommon__originatingControlledVocabularyGemetInspireThemes* soap_new_req_icommon__originatingControlledVocabularyGemetInspireThemes(soap*, ...) allocate, set required members
/// - icommon__originatingControlledVocabularyGemetInspireThemes* soap_new_set_icommon__originatingControlledVocabularyGemetInspireThemes(soap*, ...) allocate, set all public members
/// - icommon__originatingControlledVocabularyGemetInspireThemes::soap_default(soap*) default initialize members
/// - int soap_read_icommon__originatingControlledVocabularyGemetInspireThemes(soap*, icommon__originatingControlledVocabularyGemetInspireThemes*) deserialize from a stream
/// - int soap_write_icommon__originatingControlledVocabularyGemetInspireThemes(soap*, icommon__originatingControlledVocabularyGemetInspireThemes*) serialize to a stream
/// - icommon__originatingControlledVocabularyGemetInspireThemes* icommon__originatingControlledVocabularyGemetInspireThemes::soap_dup(soap*) returns deep copy of icommon__originatingControlledVocabularyGemetInspireThemes, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - icommon__originatingControlledVocabularyGemetInspireThemes::soap_del() deep deletes icommon__originatingControlledVocabularyGemetInspireThemes data members, use only after icommon__originatingControlledVocabularyGemetInspireThemes::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int icommon__originatingControlledVocabularyGemetInspireThemes::soap_type() returns SOAP_TYPE_icommon__originatingControlledVocabularyGemetInspireThemes or derived type identifier
class icommon__originatingControlledVocabularyGemetInspireThemes : public xsd__anyType
{ public:
    enum _icommon__originatingControlledVocabularyGemetInspireThemes_Title
    {
	_icommon__originatingControlledVocabularyGemetInspireThemes_Title__GEMET_x0020__x0020INSPIRE_x0020themes,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":notEmptyString value="GEMET - INSPIRE themes"
    }
                                         Title                          1;	///< Required element.
//  BEGIN CHOICE <xs:choice>
  $ int                                  __union_originatingControlledVocabularyGemetInspireThemes;	///< Union _icommon__union_originatingControlledVocabularyGemetInspireThemes selector: set to SOAP_UNION__icommon__union_originatingControlledVocabularyGemetInspireThemes_<fieldname>
    union _icommon__union_originatingControlledVocabularyGemetInspireThemes
    {
    enum _icommon__originatingControlledVocabularyGemetInspireThemes_DateOfPublication
    {
	_icommon__originatingControlledVocabularyGemetInspireThemes_DateOfPublication__2008_06_01,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":iso8601Date value="2008-06-01"
    }
                                        *DateOfPublication             ;	///< Choice of element (one of multiple choices).
    }                                    union_originatingControlledVocabularyGemetInspireThemes;
//  END OF CHOICE
/*  RESTRICTED FROM icommon__originatingControlledVocabulary:
    END OF RESTRICTED FROM icommon__originatingControlledVocabulary */
/*  RESTRICTED FROM icommon__citation:
    END OF RESTRICTED FROM icommon__citation */
};

/// @brief "http://inspire.ec.europa.eu/schemas/common/1.0":originatingControlledVocabularyMD is a complexType with complexContent restriction of type "http://inspire.ec.europa.eu/schemas/common/1.0":originatingControlledVocabulary.
///
/// @note class icommon__originatingControlledVocabularyMD operations:
/// - icommon__originatingControlledVocabularyMD* soap_new_icommon__originatingControlledVocabularyMD(soap*) allocate and default initialize
/// - icommon__originatingControlledVocabularyMD* soap_new_icommon__originatingControlledVocabularyMD(soap*, int num) allocate and default initialize an array
/// - icommon__originatingControlledVocabularyMD* soap_new_req_icommon__originatingControlledVocabularyMD(soap*, ...) allocate, set required members
/// - icommon__originatingControlledVocabularyMD* soap_new_set_icommon__originatingControlledVocabularyMD(soap*, ...) allocate, set all public members
/// - icommon__originatingControlledVocabularyMD::soap_default(soap*) default initialize members
/// - int soap_read_icommon__originatingControlledVocabularyMD(soap*, icommon__originatingControlledVocabularyMD*) deserialize from a stream
/// - int soap_write_icommon__originatingControlledVocabularyMD(soap*, icommon__originatingControlledVocabularyMD*) serialize to a stream
/// - icommon__originatingControlledVocabularyMD* icommon__originatingControlledVocabularyMD::soap_dup(soap*) returns deep copy of icommon__originatingControlledVocabularyMD, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - icommon__originatingControlledVocabularyMD::soap_del() deep deletes icommon__originatingControlledVocabularyMD data members, use only after icommon__originatingControlledVocabularyMD::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int icommon__originatingControlledVocabularyMD::soap_type() returns SOAP_TYPE_icommon__originatingControlledVocabularyMD or derived type identifier
class icommon__originatingControlledVocabularyMD : public xsd__anyType
{ public:
    enum _icommon__originatingControlledVocabularyMD_Title
    {
	_icommon__originatingControlledVocabularyMD_Title__GEMET_x0020__x0020INSPIRE_x0020themes,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":notEmptyString value="GEMET - INSPIRE themes"
    }
                                         Title                          1;	///< Required element.
//  BEGIN CHOICE <xs:choice>
  $ int                                  __union_originatingControlledVocabularyMD;	///< Union _icommon__union_originatingControlledVocabularyMD selector: set to SOAP_UNION__icommon__union_originatingControlledVocabularyMD_<fieldname>
    union _icommon__union_originatingControlledVocabularyMD
    {
    enum _icommon__originatingControlledVocabularyMD_DateOfPublication
    {
	_icommon__originatingControlledVocabularyMD_DateOfPublication__2008_06_01,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":iso8601Date value="2008-06-01"
    }
                                        *DateOfPublication             ;	///< Choice of element (one of multiple choices).
    }                                    union_originatingControlledVocabularyMD;
//  END OF CHOICE
/*  RESTRICTED FROM icommon__originatingControlledVocabulary:
    END OF RESTRICTED FROM icommon__originatingControlledVocabulary */
/*  RESTRICTED FROM icommon__citation:
    END OF RESTRICTED FROM icommon__citation */
};

/// @brief "http://inspire.ec.europa.eu/schemas/common/1.0":inspireTheme_bul is a complexType with complexContent restriction of type "http://inspire.ec.europa.eu/schemas/common/1.0":inspireTheme.
///
/// @note class icommon__inspireTheme_x005fbul operations:
/// - icommon__inspireTheme_x005fbul* soap_new_icommon__inspireTheme_x005fbul(soap*) allocate and default initialize
/// - icommon__inspireTheme_x005fbul* soap_new_icommon__inspireTheme_x005fbul(soap*, int num) allocate and default initialize an array
/// - icommon__inspireTheme_x005fbul* soap_new_req_icommon__inspireTheme_x005fbul(soap*, ...) allocate, set required members
/// - icommon__inspireTheme_x005fbul* soap_new_set_icommon__inspireTheme_x005fbul(soap*, ...) allocate, set all public members
/// - icommon__inspireTheme_x005fbul::soap_default(soap*) default initialize members
/// - int soap_read_icommon__inspireTheme_x005fbul(soap*, icommon__inspireTheme_x005fbul*) deserialize from a stream
/// - int soap_write_icommon__inspireTheme_x005fbul(soap*, icommon__inspireTheme_x005fbul*) serialize to a stream
/// - icommon__inspireTheme_x005fbul* icommon__inspireTheme_x005fbul::soap_dup(soap*) returns deep copy of icommon__inspireTheme_x005fbul, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - icommon__inspireTheme_x005fbul::soap_del() deep deletes icommon__inspireTheme_x005fbul data members, use only after icommon__inspireTheme_x005fbul::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int icommon__inspireTheme_x005fbul::soap_type() returns SOAP_TYPE_icommon__inspireTheme_x005fbul or derived type identifier
class icommon__inspireTheme_x005fbul : public xsd__anyType
{ public:
/// Element "OriginatingControlledVocabulary" of type "http://inspire.ec.europa.eu/schemas/common/1.0":originatingControlledVocabularyGemetInspireThemes.
    icommon__originatingControlledVocabularyGemetInspireThemes*  OriginatingControlledVocabulary 1;	///< Required element.
    enum _icommon__inspireTheme_x005fbul_KeywordValue
    {
	_icommon__inspireTheme_x005fbul_KeywordValue___x0410_x0434_x043c_x0438_x043d_x0438_x0441_x0442_x0440_x0430_x0442_x0438_x0432_x043d_x0438_x0020_x0435_x0434_x0438_x043d_x0438_x0446_x0438,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Административни единици"
	_icommon__inspireTheme_x005fbul_KeywordValue___x0410_x0434_x0440_x0435_x0441_x0438,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Адреси"
	_icommon__inspireTheme_x005fbul_KeywordValue___x0410_x0442_x043c_x043e_x0441_x0444_x0435_x0440_x043d_x0438_x0020_x0443_x0441_x043b_x043e_x0432_x0438_x044f,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Атмосферни условия"
	_icommon__inspireTheme_x005fbul_KeywordValue___x0411_x0438_x043e_x0433_x0435_x043e_x0433_x0440_x0430_x0444_x0441_x043a_x0438_x0020_x0440_x0435_x0433_x0438_x043e_x043d_x0438,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Биогеографски региони"
	_icommon__inspireTheme_x005fbul_KeywordValue___x0413_x0435_x043e_x0433_x0440_x0430_x0444_x0441_x043a_x0438_x0020_x043a_x043e_x043e_x0440_x0434_x0438_x043d_x0430_x0442_x043d_x0438_x0020_x0441_x0438_x0441_x0442_x0435_x043c_x0438,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Географски координатни системи"
	_icommon__inspireTheme_x005fbul_KeywordValue___x0413_x0435_x043e_x0433_x0440_x0430_x0444_x0441_x043a_x0438_x0020_x043d_x0430_x0438_x043c_x0435_x043d_x043e_x0432_x0430_x043d_x0438_x044f,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Географски наименования"
	_icommon__inspireTheme_x005fbul_KeywordValue___x0413_x0435_x043e_x043b_x043e_x0433_x0438_x044f,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Геология"
	_icommon__inspireTheme_x005fbul_KeywordValue___x0415_x043d_x0435_x0440_x0433_x0438_x0439_x043d_x0438_x0020_x0438_x0437_x0442_x043e_x0447_x043d_x0438_x0446_x0438,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Енергийни източници"
	_icommon__inspireTheme_x005fbul_KeywordValue___x0417_x0430_x0449_x0438_x0442_x0435_x043d_x0438_x0020_x043e_x0431_x0435_x043a_x0442_x0438,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Защитени обекти"
	_icommon__inspireTheme_x005fbul_KeywordValue___x0417_x0434_x0440_x0430_x0432_x0435_x0020_x0438_x0020_x0431_x0435_x0437_x043e_x043f_x0430_x0441_x043d_x043e_x0441_x0442_x0020_x043d_x0430_x0020_x0447_x043e_x0432_x0435_x043a_x0430,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Здраве и безопасност на човека"
	_icommon__inspireTheme_x005fbul_KeywordValue___x0417_x0435_x043c_x043d_x0430_x0020_x043f_x043e_x043a_x0440_x0438_x0432_x043a_x0430,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Земна покривка"
	_icommon__inspireTheme_x005fbul_KeywordValue___x041a_x0430_x0434_x0430_x0441_x0442_x0440_x0430_x043b_x043d_x0438_x0020_x043f_x0430_x0440_x0446_x0435_x043b_x0438,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Кадастрални парцели"
	_icommon__inspireTheme_x005fbul_KeywordValue___x041a_x043e_x043c_x0443_x043d_x0430_x043b_x043d_x043e__x0431_x0438_x0442_x043e_x0432_x0438_x0020_x0438_x0020_x043e_x0431_x0449_x0435_x0441_x0442_x0432_x0435_x043d_x0438_x0020_x0443_x0441_x043b_x0443_x0433_x0438,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Комунално-битови и обществени услуги"
	_icommon__inspireTheme_x005fbul_KeywordValue___x041a_x043e_x043e_x0440_x0434_x0438_x043d_x0430_x0442_x043d_x0438_x0020_x0441_x043f_x0440_x0430_x0432_x043e_x0447_x043d_x0438_x0020_x0441_x0438_x0441_x0442_x0435_x043c_x0438,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Координатни справочни системи"
	_icommon__inspireTheme_x005fbul_KeywordValue___x041c_x0435_x0441_x0442_x043e_x043e_x0431_x0438_x0442_x0430_x043d_x0438_x044f_x0020_x0438_x0020_x0431_x0438_x043e_x0442_x043e_x043f_x0438,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Местообитания и биотопи"
	_icommon__inspireTheme_x005fbul_KeywordValue___x041c_x0435_x0442_x0435_x043e_x0440_x043e_x043b_x043e_x0433_x0438_x0447_x043d_x0438_x0020_x0433_x0435_x043e_x0433_x0440_x0430_x0444_x0441_x043a_x0438_x0020_x0445_x0430_x0440_x0430_x043a_x0442_x0435_x0440_x0438_x0441_x0442_x0438_x043a_x0438,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Метеорологични географски характеристики"
	_icommon__inspireTheme_x005fbul_KeywordValue___x041c_x0438_x043d_x0435_x0440_x0430_x043b_x043d_x0438_x0020_x0440_x0435_x0441_x0443_x0440_x0441_x0438,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Минерални ресурси"
	_icommon__inspireTheme_x005fbul_KeywordValue___x041c_x043e_x0440_x0441_x043a_x0438_x0020_x0440_x0435_x0433_x0438_x043e_x043d_x0438,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Морски региони"
	_icommon__inspireTheme_x005fbul_KeywordValue___x041e_x043a_x0435_x0430_x043d_x043e_x0433_x0440_x0430_x0444_x0441_x043a_x0438_x0020_x0433_x0435_x043e_x0433_x0440_x0430_x0444_x0441_x043a_x0438_x0020_x0445_x0430_x0440_x0430_x043a_x0442_x0435_x0440_x0438_x0441_x0442_x0438_x043a_x0438,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Океанографски географски характеристики"
	_icommon__inspireTheme_x005fbul_KeywordValue___x041e_x0440_x0442_x043e_x0438_x0437_x043e_x0431_x0440_x0430_x0436_x0435_x043d_x0438_x0435,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Ортоизображение"
	_icommon__inspireTheme_x005fbul_KeywordValue___x041f_x043e_x043b_x0437_x0432_x0430_x043d_x0435_x0020_x043d_x0430_x0020_x0437_x0435_x043c_x044f_x0442_x0430,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Ползване на земята"
	_icommon__inspireTheme_x005fbul_KeywordValue___x041f_x043e_x0447_x0432_x0430,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Почва"
	_icommon__inspireTheme_x005fbul_KeywordValue___x041f_x0440_x0438_x0440_x043e_x0434_x043d_x0438_x0020_x0440_x0438_x0441_x043a_x043e_x0432_x0438_x0020_x0437_x043e_x043d_x0438,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Природни рискови зони"
	_icommon__inspireTheme_x005fbul_KeywordValue___x041f_x0440_x043e_x0438_x0437_x0432_x043e_x0434_x0441_x0442_x0432_x0435_x043d_x0438_x0020_x0438_x0020_x043f_x0440_x043e_x043c_x0438_x0448_x043b_x0435_x043d_x0438_x0020_x0441_x044a_x043e_x0440_x044a_x0436_x0435_x043d_x0438_x044f,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Производствени и промишлени съоръжения"
	_icommon__inspireTheme_x005fbul_KeywordValue___x0420_x0430_x0437_x043f_x0440_x0435_x0434_x0435_x043b_x0435_x043d_x0438_x0435_x0020_x043d_x0430_x0020_x0432_x0438_x0434_x043e_x0432_x0435_x0442_x0435,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Разпределение на видовете"
	_icommon__inspireTheme_x005fbul_KeywordValue___x0420_x0430_x0437_x043f_x0440_x0435_x0434_x0435_x043b_x0435_x043d_x0438_x0435_x0020_x043d_x0430_x0020_x043d_x0430_x0441_x0435_x043b_x0435_x043d_x0438_x0435_x0442_x043e_x0020_x2014_x0020_x0434_x0435_x043c_x043e_x0433_x0440_x0430_x0444_x0438_x044f,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Разпределение на населението — демография"
	_icommon__inspireTheme_x005fbul_KeywordValue___x0420_x0435_x043b_x0435_x0444,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Релеф"
	_icommon__inspireTheme_x005fbul_KeywordValue___x0421_x0433_x0440_x0430_x0434_x0438,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Сгради"
	_icommon__inspireTheme_x005fbul_KeywordValue___x0421_x0435_x043b_x0441_x043a_x043e_x0441_x0442_x043e_x043f_x0430_x043d_x0441_x043a_x0438_x0020_x0438_x0020_x0432_x043e_x0434_x043d_x043e_x0441_x0442_x043e_x043f_x0430_x043d_x0441_x043a_x0438_x0020_x0441_x044a_x043e_x0440_x044a_x0436_x0435_x043d_x0438_x044f,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Селскостопански и водностопански съоръжения"
	_icommon__inspireTheme_x005fbul_KeywordValue___x0421_x0442_x0430_x0442_x0438_x0441_x0442_x0438_x0447_x0435_x0441_x043a_x0438_x0020_x0435_x0434_x0438_x043d_x0438_x0446_x0438,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Статистически единици"
	_icommon__inspireTheme_x005fbul_KeywordValue___x0421_x044a_x043e_x0440_x044a_x0436_x0435_x043d_x0438_x044f_x0020_x0437_x0430_x0020_x0443_x043f_x0440_x0430_x0432_x043b_x0435_x043d_x0438_x0435_x0020_x043d_x0430_x0020_x043e_x043a_x043e_x043b_x043d_x0430_x0442_x0430_x0020_x0441_x0440_x0435_x0434_x0430,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Съоръжения за управление на околната среда"
	_icommon__inspireTheme_x005fbul_KeywordValue___x0422_x0440_x0430_x043d_x0441_x043f_x043e_x0440_x0442_x043d_x0438_x0020_x043c_x0440_x0435_x0436_x0438,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Транспортни мрежи"
	_icommon__inspireTheme_x005fbul_KeywordValue___x0423_x043f_x0440_x0430_x0432_x043b_x0435_x043d_x0438_x0435_x0020_x043d_x0430_x0020_x0442_x0435_x0440_x0438_x0442_x043e_x0440_x0438_x044f_x0442_x0430_x002f_x043e_x0433_x0440_x0430_x043d_x0438_x0447_x0435_x043d_x0438_x002f_x0440_x0435_x0433_x0443_x043b_x0438_x0440_x0430_x043d_x0438_x0020_x0437_x043e_x043d_x0438_x0020_x0438_x0020_x043e_x0442_x0447_x0435_x0442_x043d_x0438_x0020_x0435_x0434_x0438_x043d_x0438_x0446_x0438,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Управление на територията/ограничени/регулирани зони и отчетни единици"
	_icommon__inspireTheme_x005fbul_KeywordValue___x0425_x0438_x0434_x0440_x043e_x0433_x0440_x0430_x0444_x0438_x044f,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Хидрография"
    }
                                         KeywordValue                   1;	///< Required element.
/*  RESTRICTED FROM icommon__inspireTheme:
    END OF RESTRICTED FROM icommon__inspireTheme */
/*  RESTRICTED FROM icommon__keyword:
    END OF RESTRICTED FROM icommon__keyword */
};

/// @brief "http://inspire.ec.europa.eu/schemas/common/1.0":citationInspireInteroperabilityRegulation_bul is a complexType with complexContent restriction of type "http://inspire.ec.europa.eu/schemas/common/1.0":citationConformity.
///
/// @note class icommon__citationInspireInteroperabilityRegulation_x005fbul operations:
/// - icommon__citationInspireInteroperabilityRegulation_x005fbul* soap_new_icommon__citationInspireInteroperabilityRegulation_x005fbul(soap*) allocate and default initialize
/// - icommon__citationInspireInteroperabilityRegulation_x005fbul* soap_new_icommon__citationInspireInteroperabilityRegulation_x005fbul(soap*, int num) allocate and default initialize an array
/// - icommon__citationInspireInteroperabilityRegulation_x005fbul* soap_new_req_icommon__citationInspireInteroperabilityRegulation_x005fbul(soap*, ...) allocate, set required members
/// - icommon__citationInspireInteroperabilityRegulation_x005fbul* soap_new_set_icommon__citationInspireInteroperabilityRegulation_x005fbul(soap*, ...) allocate, set all public members
/// - icommon__citationInspireInteroperabilityRegulation_x005fbul::soap_default(soap*) default initialize members
/// - int soap_read_icommon__citationInspireInteroperabilityRegulation_x005fbul(soap*, icommon__citationInspireInteroperabilityRegulation_x005fbul*) deserialize from a stream
/// - int soap_write_icommon__citationInspireInteroperabilityRegulation_x005fbul(soap*, icommon__citationInspireInteroperabilityRegulation_x005fbul*) serialize to a stream
/// - icommon__citationInspireInteroperabilityRegulation_x005fbul* icommon__citationInspireInteroperabilityRegulation_x005fbul::soap_dup(soap*) returns deep copy of icommon__citationInspireInteroperabilityRegulation_x005fbul, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - icommon__citationInspireInteroperabilityRegulation_x005fbul::soap_del() deep deletes icommon__citationInspireInteroperabilityRegulation_x005fbul data members, use only after icommon__citationInspireInteroperabilityRegulation_x005fbul::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int icommon__citationInspireInteroperabilityRegulation_x005fbul::soap_type() returns SOAP_TYPE_icommon__citationInspireInteroperabilityRegulation_x005fbul or derived type identifier
class icommon__citationInspireInteroperabilityRegulation_x005fbul : public xsd__anyType
{ public:
    enum _icommon__citationInspireInteroperabilityRegulation_x005fbul_Title
    {
	_icommon__citationInspireInteroperabilityRegulation_x005fbul_Title___x0420_x0415_x0413_x041b_x0410_x041c_x0415_x041d_x0422_x0020_x0028_x0415_x0421_x0029_x0020_x2116_x00201089_x002f2010_x0020_x041d_x0410_x0020_x041a_x041e_x041c_x0418_x0421_x0418_x042f_x0422_x0410_x0020_x043e_x0442_x002023_x0020_x043d_x043e_x0435_x043c_x0432_x0440_x0438_x00202010_x0020_x0433_x043e_x0434_x0438_x043d_x0430_x0020_x0437_x0430_x0020_x043f_x0440_x0438_x043b_x0430_x0433_x0430_x043d_x0435_x0020_x043d_x0430_x0020_x0414_x0438_x0440_x0435_x043a_x0442_x0438_x0432_x0430_x00202007_x002f2_x002f_x0415_x041e_x0020_x043d_x0430_x0020_x0415_x0432_x0440_x043e_x043f_x0435_x0439_x0441_x043a_x0438_x044f_x0020_x043f_x0430_x0440_x043b_x0430_x043c_x0435_x043d_x0442_x0020_x0438_x0020_x043d_x0430_x0020_x0421_x044a_x0432_x0435_x0442_x0430_x0020_x043f_x043e_x0020_x043e_x0442_x043d_x043e_x0448_x0435_x043d_x0438_x0435_x0020_x043d_x0430_x0020_x043e_x043f_x0435_x0440_x0430_x0442_x0438_x0432_x043d_x0430_x0442_x0430_x0020_x0441_x044a_x0432_x043c_x0435_x0441_x0442_x0438_x043c_x043e_x0441_x0442_x0020_x043d_x0430_x0020_x043c_x0430_x0441_x0438_x0432_x0438_x0020_x043e_x0442_x0020_x043f_x0440_x043e_x0441_x0442_x0440_x0430_x043d_x0441_x0442_x0432_x0435_x043d_x0438_x0020_x0434_x0430_x043d_x043d_x0438_x0020_x0438_x0020_x0443_x0441_x043b_x0443_x0433_x0438_x0020_x0437_x0430_x0020_x043f_x0440_x043e_x0441_x0442_x0440_x0430_x043d_x0441_x0442_x0432_x0435_x043d_x0438_x0020_x0434_x0430_x043d_x043d_x0438,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":notEmptyString value="РЕГЛАМЕНТ (ЕС) № 1089/2010 НА КОМИСИЯТА от 23 ноември 2010 година за прилагане на Директива 2007/2/ЕО на Европейския парламент и на Съвета по отношение на оперативната съвместимост на масиви от пространствени данни и услуги за пространствени данни"
    }
                                         Title                          1;	///< Required element.
//  BEGIN CHOICE <xs:choice>
  $ int                                  __union_citationInspireInteroperabilityRegulation_x005fbul;	///< Union _icommon__union_citationInspireInteroperabilityRegulation_x005fbul selector: set to SOAP_UNION__icommon__union_citationInspireInteroperabilityRegulation_x005fbul_<fieldname>
    union _icommon__union_citationInspireInteroperabilityRegulation_x005fbul
    {
    enum _icommon__citationInspireInteroperabilityRegulation_x005fbul_DateOfPublication
    {
	_icommon__citationInspireInteroperabilityRegulation_x005fbul_DateOfPublication__2010_12_08,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":iso8601Date value="2010-12-08"
    }
                                        *DateOfPublication             ;	///< Choice of element (one of multiple choices).
    }                                    union_citationInspireInteroperabilityRegulation_x005fbul;
//  END OF CHOICE
    enum _icommon__citationInspireInteroperabilityRegulation_x005fbul_URI
    {
	_icommon__citationInspireInteroperabilityRegulation_x005fbul_URI__OJ_x003aL_x003a2010_x003a323_x003a0011_x003a0102_x003aBG_x003aPDF,	///< xs:anyURI value="OJ:L:2010:323:0011:0102:BG:PDF"
    }
                                         URI                            1;	///< Required element.
/// Element "ResourceLocator" of type "http://inspire.ec.europa.eu/schemas/common/1.0":resLocInspireInteroperabilityRegulation_bul.
    icommon__resLocInspireInteroperabilityRegulation_x005fbul*  ResourceLocator                1;	///< Required element.
/*  RESTRICTED FROM icommon__citationConformity:
    END OF RESTRICTED FROM icommon__citationConformity */
/*  RESTRICTED FROM icommon__citation:
    END OF RESTRICTED FROM icommon__citation */
};

/// @brief "http://inspire.ec.europa.eu/schemas/common/1.0":inspireTheme_cze is a complexType with complexContent restriction of type "http://inspire.ec.europa.eu/schemas/common/1.0":inspireTheme.
///
/// @note class icommon__inspireTheme_x005fcze operations:
/// - icommon__inspireTheme_x005fcze* soap_new_icommon__inspireTheme_x005fcze(soap*) allocate and default initialize
/// - icommon__inspireTheme_x005fcze* soap_new_icommon__inspireTheme_x005fcze(soap*, int num) allocate and default initialize an array
/// - icommon__inspireTheme_x005fcze* soap_new_req_icommon__inspireTheme_x005fcze(soap*, ...) allocate, set required members
/// - icommon__inspireTheme_x005fcze* soap_new_set_icommon__inspireTheme_x005fcze(soap*, ...) allocate, set all public members
/// - icommon__inspireTheme_x005fcze::soap_default(soap*) default initialize members
/// - int soap_read_icommon__inspireTheme_x005fcze(soap*, icommon__inspireTheme_x005fcze*) deserialize from a stream
/// - int soap_write_icommon__inspireTheme_x005fcze(soap*, icommon__inspireTheme_x005fcze*) serialize to a stream
/// - icommon__inspireTheme_x005fcze* icommon__inspireTheme_x005fcze::soap_dup(soap*) returns deep copy of icommon__inspireTheme_x005fcze, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - icommon__inspireTheme_x005fcze::soap_del() deep deletes icommon__inspireTheme_x005fcze data members, use only after icommon__inspireTheme_x005fcze::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int icommon__inspireTheme_x005fcze::soap_type() returns SOAP_TYPE_icommon__inspireTheme_x005fcze or derived type identifier
class icommon__inspireTheme_x005fcze : public xsd__anyType
{ public:
/// Element "OriginatingControlledVocabulary" of type "http://inspire.ec.europa.eu/schemas/common/1.0":originatingControlledVocabularyGemetInspireThemes.
    icommon__originatingControlledVocabularyGemetInspireThemes*  OriginatingControlledVocabulary 1;	///< Required element.
    enum _icommon__inspireTheme_x005fcze_KeywordValue
    {
	_icommon__inspireTheme_x005fcze_KeywordValue__Adresy,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Adresy"
	_icommon__inspireTheme_x005fcze_KeywordValue__Bioregiony,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Bioregiony"
	_icommon__inspireTheme_x005fcze_KeywordValue__Budovy,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Budovy"
	_icommon__inspireTheme_x005fcze_KeywordValue__Chr_x00e1n_x011bn_x00e1_x0020_x00fazem_x00ed,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Chráněná území"
	_icommon__inspireTheme_x005fcze_KeywordValue__Dopravn_x00ed_x0020s_x00edt_x011b,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Dopravní sítě"
	_icommon__inspireTheme_x005fcze_KeywordValue__Energetick_x00e9_x0020zdroje,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Energetické zdroje"
	_icommon__inspireTheme_x005fcze_KeywordValue__Geologie,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Geologie"
	_icommon__inspireTheme_x005fcze_KeywordValue__Katastr_x00e1ln_x00ed_x0020parcely,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Katastrální parcely"
	_icommon__inspireTheme_x005fcze_KeywordValue__Krajinn_x00fd_x0020pokryv,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Krajinný pokryv"
	_icommon__inspireTheme_x005fcze_KeywordValue__Lidsk_x00e9_x0020zdrav_x00ed_x0020a_x0020bezpe_x010dnost,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Lidské zdraví a bezpečnost"
	_icommon__inspireTheme_x005fcze_KeywordValue__Mo_x0159sk_x00e9_x0020oblasti,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Mořské oblasti"
	_icommon__inspireTheme_x005fcze_KeywordValue__Nadmo_x0159sk_x00e1_x0020v_x00fd_x0161ka,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Nadmořská výška"
	_icommon__inspireTheme_x005fcze_KeywordValue__Nerostn_x00e9_x0020suroviny,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Nerostné suroviny"
	_icommon__inspireTheme_x005fcze_KeywordValue__Oblasti_x0020ohro_x017een_x00e9_x0020p_x0159_x00edrodn_x00edmi_x0020riziky,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Oblasti ohrožené přírodními riziky"
	_icommon__inspireTheme_x005fcze_KeywordValue__Ortofotosn_x00edmky,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Ortofotosnímky"
	_icommon__inspireTheme_x005fcze_KeywordValue__P_x016fda,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Půda"
	_icommon__inspireTheme_x005fcze_KeywordValue__Rozlo_x017een_x00ed_x0020druh_x016f,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Rozložení druhů"
	_icommon__inspireTheme_x005fcze_KeywordValue__Rozlo_x017een_x00ed_x0020obyvatelstva_x0020_x2013_x0020demografie,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Rozložení obyvatelstva – demografie"
	_icommon__inspireTheme_x005fcze_KeywordValue__Sou_x0159adnicov_x00e9_x0020referen_x010dn_x00ed_x0020syst_x00e9my,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Souřadnicové referenční systémy"
	_icommon__inspireTheme_x005fcze_KeywordValue__Spr_x00e1vn_x00ed_x0020jednotky,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Správní jednotky"
	_icommon__inspireTheme_x005fcze_KeywordValue__Spr_x00e1vn_x00ed_x0020oblasti_x002fchr_x00e1n_x011bn_x00e1_x0020p_x00e1sma_x002fregulovan_x00e1_x0020_x00fazem_x00ed_x0020a_x0020jednotky_x0020pod_x00e1vaj_x00edc_x00ed_x0020hl_x00e1_x0161en_x00ed,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Správní oblasti/chráněná pásma/regulovaná území a jednotky podávající hlášení"
	_icommon__inspireTheme_x005fcze_KeywordValue__Stanovi_x0161t_x011b_x0020a_x0020biotopy,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Stanoviště a biotopy"
	_icommon__inspireTheme_x005fcze_KeywordValue__Statistick_x00e9_x0020jednotky,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Statistické jednotky"
	_icommon__inspireTheme_x005fcze_KeywordValue__Stav_x0020ovzdu_x0161_x00ed,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Stav ovzduší"
	_icommon__inspireTheme_x005fcze_KeywordValue__Ve_x0159ejn_x00e9_x0020slu_x017eby_x0020a_x0020slu_x017eby_x0020ve_x0159ejn_x00e9_x0020spr_x00e1vy,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Veřejné služby a služby veřejné správy"
	_icommon__inspireTheme_x005fcze_KeywordValue__Vodopis,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Vodopis"
	_icommon__inspireTheme_x005fcze_KeywordValue__V_x00fdrobn_x00ed_x0020a_x0020pr_x016fmyslov_x00e1_x0020za_x0159_x00edzen_x00ed,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Výrobní a průmyslová zařízení"
	_icommon__inspireTheme_x005fcze_KeywordValue__Vyu_x017eit_x00ed_x0020_x00fazem_x00ed,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Využití území"
	_icommon__inspireTheme_x005fcze_KeywordValue__Za_x0159_x00edzen_x00ed_x0020pro_x0020sledov_x00e1n_x00ed_x0020_x017eivotn_x00edho_x0020prost_x0159ed_x00ed,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Zařízení pro sledování životního prostředí"
	_icommon__inspireTheme_x005fcze_KeywordValue__Zem_x011bd_x011blsk_x00e1_x0020a_x0020akvakulturn_x00ed_x0020za_x0159_x00edzen_x00ed,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Zemědělská a akvakulturní zařízení"
	_icommon__inspireTheme_x005fcze_KeywordValue__Zem_x011bpisn_x00e9_x0020meteorologick_x00e9_x0020prvky,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Zeměpisné meteorologické prvky"
	_icommon__inspireTheme_x005fcze_KeywordValue__Zem_x011bpisn_x00e9_x0020n_x00e1zvy,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Zeměpisné názvy"
	_icommon__inspireTheme_x005fcze_KeywordValue__Zem_x011bpisn_x00e9_x0020oce_x00e1nografick_x00e9_x0020prvky,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Zeměpisné oceánografické prvky"
	_icommon__inspireTheme_x005fcze_KeywordValue__Zem_x011bpisn_x00e9_x0020soustavy_x0020sou_x0159adnicov_x00fdch_x0020s_x00edt_x00ed,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Zeměpisné soustavy souřadnicových sítí"
    }
                                         KeywordValue                   1;	///< Required element.
/*  RESTRICTED FROM icommon__inspireTheme:
    END OF RESTRICTED FROM icommon__inspireTheme */
/*  RESTRICTED FROM icommon__keyword:
    END OF RESTRICTED FROM icommon__keyword */
};

/// @brief "http://inspire.ec.europa.eu/schemas/common/1.0":citationInspireInteroperabilityRegulation_cze is a complexType with complexContent restriction of type "http://inspire.ec.europa.eu/schemas/common/1.0":citationConformity.
///
/// @note class icommon__citationInspireInteroperabilityRegulation_x005fcze operations:
/// - icommon__citationInspireInteroperabilityRegulation_x005fcze* soap_new_icommon__citationInspireInteroperabilityRegulation_x005fcze(soap*) allocate and default initialize
/// - icommon__citationInspireInteroperabilityRegulation_x005fcze* soap_new_icommon__citationInspireInteroperabilityRegulation_x005fcze(soap*, int num) allocate and default initialize an array
/// - icommon__citationInspireInteroperabilityRegulation_x005fcze* soap_new_req_icommon__citationInspireInteroperabilityRegulation_x005fcze(soap*, ...) allocate, set required members
/// - icommon__citationInspireInteroperabilityRegulation_x005fcze* soap_new_set_icommon__citationInspireInteroperabilityRegulation_x005fcze(soap*, ...) allocate, set all public members
/// - icommon__citationInspireInteroperabilityRegulation_x005fcze::soap_default(soap*) default initialize members
/// - int soap_read_icommon__citationInspireInteroperabilityRegulation_x005fcze(soap*, icommon__citationInspireInteroperabilityRegulation_x005fcze*) deserialize from a stream
/// - int soap_write_icommon__citationInspireInteroperabilityRegulation_x005fcze(soap*, icommon__citationInspireInteroperabilityRegulation_x005fcze*) serialize to a stream
/// - icommon__citationInspireInteroperabilityRegulation_x005fcze* icommon__citationInspireInteroperabilityRegulation_x005fcze::soap_dup(soap*) returns deep copy of icommon__citationInspireInteroperabilityRegulation_x005fcze, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - icommon__citationInspireInteroperabilityRegulation_x005fcze::soap_del() deep deletes icommon__citationInspireInteroperabilityRegulation_x005fcze data members, use only after icommon__citationInspireInteroperabilityRegulation_x005fcze::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int icommon__citationInspireInteroperabilityRegulation_x005fcze::soap_type() returns SOAP_TYPE_icommon__citationInspireInteroperabilityRegulation_x005fcze or derived type identifier
class icommon__citationInspireInteroperabilityRegulation_x005fcze : public xsd__anyType
{ public:
    enum _icommon__citationInspireInteroperabilityRegulation_x005fcze_Title
    {
	_icommon__citationInspireInteroperabilityRegulation_x005fcze_Title__NA_x0158_x00cdZEN_x00cd_x0020KOMISE_x0020_x0028EU_x0029_x0020_x010d_x002e_x00201089_x002f2010_x0020ze_x0020dne_x002023_x002e_x0020listopadu_x00202010_x002c_x0020kter_x00fdm_x0020se_x0020prov_x00e1d_x00ed_x0020sm_x011brnice_x0020Evropsk_x00e9ho_x0020parlamentu_x0020a_x0020Rady_x00202007_x002f2_x002fES_x002c_x0020pokud_x0020jde_x0020o_x0020interoperabilitu_x0020sad_x0020prostorov_x00fdch_x0020dat_x0020a_x0020slu_x017eeb_x0020prostorov_x00fdch_x0020dat,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":notEmptyString value="NAŘÍZENÍ KOMISE (EU) č. 1089/2010 ze dne 23. listopadu 2010, kterým se provádí směrnice Evropského parlamentu a Rady 2007/2/ES, pokud jde o interoperabilitu sad prostorových dat a služeb prostorových dat"
    }
                                         Title                          1;	///< Required element.
//  BEGIN CHOICE <xs:choice>
  $ int                                  __union_citationInspireInteroperabilityRegulation_x005fcze;	///< Union _icommon__union_citationInspireInteroperabilityRegulation_x005fcze selector: set to SOAP_UNION__icommon__union_citationInspireInteroperabilityRegulation_x005fcze_<fieldname>
    union _icommon__union_citationInspireInteroperabilityRegulation_x005fcze
    {
    enum _icommon__citationInspireInteroperabilityRegulation_x005fcze_DateOfPublication
    {
	_icommon__citationInspireInteroperabilityRegulation_x005fcze_DateOfPublication__2010_12_08,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":iso8601Date value="2010-12-08"
    }
                                        *DateOfPublication             ;	///< Choice of element (one of multiple choices).
    }                                    union_citationInspireInteroperabilityRegulation_x005fcze;
//  END OF CHOICE
    enum _icommon__citationInspireInteroperabilityRegulation_x005fcze_URI
    {
	_icommon__citationInspireInteroperabilityRegulation_x005fcze_URI__OJ_x003aL_x003a2010_x003a323_x003a0011_x003a0102_x003aCS_x003aPDF,	///< xs:anyURI value="OJ:L:2010:323:0011:0102:CS:PDF"
    }
                                         URI                            1;	///< Required element.
/// Element "ResourceLocator" of type "http://inspire.ec.europa.eu/schemas/common/1.0":resLocInspireInteroperabilityRegulation_cze.
    icommon__resLocInspireInteroperabilityRegulation_x005fcze*  ResourceLocator                1;	///< Required element.
/*  RESTRICTED FROM icommon__citationConformity:
    END OF RESTRICTED FROM icommon__citationConformity */
/*  RESTRICTED FROM icommon__citation:
    END OF RESTRICTED FROM icommon__citation */
};

/// @brief "http://inspire.ec.europa.eu/schemas/common/1.0":inspireTheme_dan is a complexType with complexContent restriction of type "http://inspire.ec.europa.eu/schemas/common/1.0":inspireTheme.
///
/// @note class icommon__inspireTheme_x005fdan operations:
/// - icommon__inspireTheme_x005fdan* soap_new_icommon__inspireTheme_x005fdan(soap*) allocate and default initialize
/// - icommon__inspireTheme_x005fdan* soap_new_icommon__inspireTheme_x005fdan(soap*, int num) allocate and default initialize an array
/// - icommon__inspireTheme_x005fdan* soap_new_req_icommon__inspireTheme_x005fdan(soap*, ...) allocate, set required members
/// - icommon__inspireTheme_x005fdan* soap_new_set_icommon__inspireTheme_x005fdan(soap*, ...) allocate, set all public members
/// - icommon__inspireTheme_x005fdan::soap_default(soap*) default initialize members
/// - int soap_read_icommon__inspireTheme_x005fdan(soap*, icommon__inspireTheme_x005fdan*) deserialize from a stream
/// - int soap_write_icommon__inspireTheme_x005fdan(soap*, icommon__inspireTheme_x005fdan*) serialize to a stream
/// - icommon__inspireTheme_x005fdan* icommon__inspireTheme_x005fdan::soap_dup(soap*) returns deep copy of icommon__inspireTheme_x005fdan, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - icommon__inspireTheme_x005fdan::soap_del() deep deletes icommon__inspireTheme_x005fdan data members, use only after icommon__inspireTheme_x005fdan::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int icommon__inspireTheme_x005fdan::soap_type() returns SOAP_TYPE_icommon__inspireTheme_x005fdan or derived type identifier
class icommon__inspireTheme_x005fdan : public xsd__anyType
{ public:
/// Element "OriginatingControlledVocabulary" of type "http://inspire.ec.europa.eu/schemas/common/1.0":originatingControlledVocabularyGemetInspireThemes.
    icommon__originatingControlledVocabularyGemetInspireThemes*  OriginatingControlledVocabulary 1;	///< Required element.
    enum _icommon__inspireTheme_x005fdan_KeywordValue
    {
	_icommon__inspireTheme_x005fdan_KeywordValue__Administrative_x0020enheder,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Administrative enheder"
	_icommon__inspireTheme_x005fdan_KeywordValue__Adresser,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Adresser"
	_icommon__inspireTheme_x005fdan_KeywordValue__Arealanvendelse,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Arealanvendelse"
	_icommon__inspireTheme_x005fdan_KeywordValue__Areald_x00e6kke,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Arealdække"
	_icommon__inspireTheme_x005fdan_KeywordValue__Artsfordeling,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Artsfordeling"
	_icommon__inspireTheme_x005fdan_KeywordValue__Atmosf_x00e6riske_x0020forhold,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Atmosfæriske forhold"
	_icommon__inspireTheme_x005fdan_KeywordValue__Befolkningsfordeling_x0020_x2014_x0020demografi,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Befolkningsfordeling — demografi"
	_icommon__inspireTheme_x005fdan_KeywordValue__Beskyttede_x0020lokaliteter,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Beskyttede lokaliteter"
	_icommon__inspireTheme_x005fdan_KeywordValue__Biogeografiske_x0020regioner,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Biogeografiske regioner"
	_icommon__inspireTheme_x005fdan_KeywordValue__Bygninger,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Bygninger"
	_icommon__inspireTheme_x005fdan_KeywordValue__Energiressourcer,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Energiressourcer"
	_icommon__inspireTheme_x005fdan_KeywordValue__Forvaltede_x0020og_x0020regulerede_x0020omr_x00e5der_x0020samt_x0020omr_x00e5der_x0020med_x0020brugsbegr_x00e6nsning_x0020og_x0020indberetningsenheder,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Forvaltede og regulerede områder samt områder med brugsbegrænsning og indberetningsenheder"
	_icommon__inspireTheme_x005fdan_KeywordValue__Geografiske_x0020kvadratnetsystemer,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Geografiske kvadratnetsystemer"
	_icommon__inspireTheme_x005fdan_KeywordValue__Geologi,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Geologi"
	_icommon__inspireTheme_x005fdan_KeywordValue__Havomr_x00e5der,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Havområder"
	_icommon__inspireTheme_x005fdan_KeywordValue__H_x00f8jde,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Højde"
	_icommon__inspireTheme_x005fdan_KeywordValue__Hydrograf,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Hydrograf"
	_icommon__inspireTheme_x005fdan_KeywordValue__Jord,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Jord"
	_icommon__inspireTheme_x005fdan_KeywordValue__Koordinatsystemer,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Koordinatsystemer"
	_icommon__inspireTheme_x005fdan_KeywordValue__Landbrugs__x0020og_x0020akvakulturanl_x00e6g,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Landbrugs- og akvakulturanlæg"
	_icommon__inspireTheme_x005fdan_KeywordValue__Levesteder_x0020og_x0020biotoper,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Levesteder og biotoper"
	_icommon__inspireTheme_x005fdan_KeywordValue__Matrikul_x00e6re_x0020parceller,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Matrikulære parceller"
	_icommon__inspireTheme_x005fdan_KeywordValue__Meteorologisk_geografiske_x0020forhold,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Meteorologisk-geografiske forhold"
	_icommon__inspireTheme_x005fdan_KeywordValue__Milj_x00f8overv_x00e5gningsfaciliteter,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Miljøovervågningsfaciliteter"
	_icommon__inspireTheme_x005fdan_KeywordValue__Mineralressourcer,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Mineralressourcer"
	_icommon__inspireTheme_x005fdan_KeywordValue__Oceanografiske_x002fgeografiske_x0020forhold,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Oceanografiske/geografiske forhold"
	_icommon__inspireTheme_x005fdan_KeywordValue__Offentlig_x0020forsyningsvirksomhed_x0020og_x0020offentlige_x0020tjenesteydelser,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Offentlig forsyningsvirksomhed og offentlige tjenesteydelser"
	_icommon__inspireTheme_x005fdan_KeywordValue__Omr_x00e5der_x0020med_x0020naturlige_x0020risici,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Områder med naturlige risici"
	_icommon__inspireTheme_x005fdan_KeywordValue__Ortofoto,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Ortofoto"
	_icommon__inspireTheme_x005fdan_KeywordValue__Produktions__x0020og_x0020industrifaciliteter,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Produktions- og industrifaciliteter"
	_icommon__inspireTheme_x005fdan_KeywordValue__Sikkerhed,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Sikkerhed"
	_icommon__inspireTheme_x005fdan_KeywordValue__Statistiske_x0020enheder,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Statistiske enheder"
	_icommon__inspireTheme_x005fdan_KeywordValue__Stednavne,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Stednavne"
	_icommon__inspireTheme_x005fdan_KeywordValue__Transportnet,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Transportnet"
    }
                                         KeywordValue                   1;	///< Required element.
/*  RESTRICTED FROM icommon__inspireTheme:
    END OF RESTRICTED FROM icommon__inspireTheme */
/*  RESTRICTED FROM icommon__keyword:
    END OF RESTRICTED FROM icommon__keyword */
};

/// @brief "http://inspire.ec.europa.eu/schemas/common/1.0":citationInspireInteroperabilityRegulation_dan is a complexType with complexContent restriction of type "http://inspire.ec.europa.eu/schemas/common/1.0":citationConformity.
///
/// @note class icommon__citationInspireInteroperabilityRegulation_x005fdan operations:
/// - icommon__citationInspireInteroperabilityRegulation_x005fdan* soap_new_icommon__citationInspireInteroperabilityRegulation_x005fdan(soap*) allocate and default initialize
/// - icommon__citationInspireInteroperabilityRegulation_x005fdan* soap_new_icommon__citationInspireInteroperabilityRegulation_x005fdan(soap*, int num) allocate and default initialize an array
/// - icommon__citationInspireInteroperabilityRegulation_x005fdan* soap_new_req_icommon__citationInspireInteroperabilityRegulation_x005fdan(soap*, ...) allocate, set required members
/// - icommon__citationInspireInteroperabilityRegulation_x005fdan* soap_new_set_icommon__citationInspireInteroperabilityRegulation_x005fdan(soap*, ...) allocate, set all public members
/// - icommon__citationInspireInteroperabilityRegulation_x005fdan::soap_default(soap*) default initialize members
/// - int soap_read_icommon__citationInspireInteroperabilityRegulation_x005fdan(soap*, icommon__citationInspireInteroperabilityRegulation_x005fdan*) deserialize from a stream
/// - int soap_write_icommon__citationInspireInteroperabilityRegulation_x005fdan(soap*, icommon__citationInspireInteroperabilityRegulation_x005fdan*) serialize to a stream
/// - icommon__citationInspireInteroperabilityRegulation_x005fdan* icommon__citationInspireInteroperabilityRegulation_x005fdan::soap_dup(soap*) returns deep copy of icommon__citationInspireInteroperabilityRegulation_x005fdan, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - icommon__citationInspireInteroperabilityRegulation_x005fdan::soap_del() deep deletes icommon__citationInspireInteroperabilityRegulation_x005fdan data members, use only after icommon__citationInspireInteroperabilityRegulation_x005fdan::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int icommon__citationInspireInteroperabilityRegulation_x005fdan::soap_type() returns SOAP_TYPE_icommon__citationInspireInteroperabilityRegulation_x005fdan or derived type identifier
class icommon__citationInspireInteroperabilityRegulation_x005fdan : public xsd__anyType
{ public:
    enum _icommon__citationInspireInteroperabilityRegulation_x005fdan_Title
    {
	_icommon__citationInspireInteroperabilityRegulation_x005fdan_Title__KOMMISSIONENS_x0020FORORDNING_x0020_x0028EU_x0029_x0020Nr_x002e_x00201089_x002f2010_x0020af_x002023_x002e_x0020november_x00202010_x0020om_x0020gennemf_x00f8relse_x0020af_x0020Europa_Parlamentets_x0020og_x0020R_x00e5dets_x0020direktiv_x00202007_x002f2_x002fEF_x0020for_x0020s_x00e5_x0020vidt_x0020ang_x00e5r_x0020interoperabilitet_x0020for_x0020geodatas_x00e6t_x0020og_x0020_tjenester,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":notEmptyString value="KOMMISSIONENS FORORDNING (EU) Nr. 1089/2010 af 23. november 2010 om gennemførelse af Europa-Parlamentets og Rådets direktiv 2007/2/EF for så vidt angår interoperabilitet for geodatasæt og -tjenester"
    }
                                         Title                          1;	///< Required element.
//  BEGIN CHOICE <xs:choice>
  $ int                                  __union_citationInspireInteroperabilityRegulation_x005fdan;	///< Union _icommon__union_citationInspireInteroperabilityRegulation_x005fdan selector: set to SOAP_UNION__icommon__union_citationInspireInteroperabilityRegulation_x005fdan_<fieldname>
    union _icommon__union_citationInspireInteroperabilityRegulation_x005fdan
    {
    enum _icommon__citationInspireInteroperabilityRegulation_x005fdan_DateOfPublication
    {
	_icommon__citationInspireInteroperabilityRegulation_x005fdan_DateOfPublication__2010_12_08,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":iso8601Date value="2010-12-08"
    }
                                        *DateOfPublication             ;	///< Choice of element (one of multiple choices).
    }                                    union_citationInspireInteroperabilityRegulation_x005fdan;
//  END OF CHOICE
    enum _icommon__citationInspireInteroperabilityRegulation_x005fdan_URI
    {
	_icommon__citationInspireInteroperabilityRegulation_x005fdan_URI__OJ_x003aL_x003a2010_x003a323_x003a0011_x003a0102_x003aDA_x003aPDF,	///< xs:anyURI value="OJ:L:2010:323:0011:0102:DA:PDF"
    }
                                         URI                            1;	///< Required element.
/// Element "ResourceLocator" of type "http://inspire.ec.europa.eu/schemas/common/1.0":resLocInspireInteroperabilityRegulation_dan.
    icommon__resLocInspireInteroperabilityRegulation_x005fdan*  ResourceLocator                1;	///< Required element.
/*  RESTRICTED FROM icommon__citationConformity:
    END OF RESTRICTED FROM icommon__citationConformity */
/*  RESTRICTED FROM icommon__citation:
    END OF RESTRICTED FROM icommon__citation */
};

/// @brief "http://inspire.ec.europa.eu/schemas/common/1.0":inspireTheme_dut is a complexType with complexContent restriction of type "http://inspire.ec.europa.eu/schemas/common/1.0":inspireTheme.
///
/// @note class icommon__inspireTheme_x005fdut operations:
/// - icommon__inspireTheme_x005fdut* soap_new_icommon__inspireTheme_x005fdut(soap*) allocate and default initialize
/// - icommon__inspireTheme_x005fdut* soap_new_icommon__inspireTheme_x005fdut(soap*, int num) allocate and default initialize an array
/// - icommon__inspireTheme_x005fdut* soap_new_req_icommon__inspireTheme_x005fdut(soap*, ...) allocate, set required members
/// - icommon__inspireTheme_x005fdut* soap_new_set_icommon__inspireTheme_x005fdut(soap*, ...) allocate, set all public members
/// - icommon__inspireTheme_x005fdut::soap_default(soap*) default initialize members
/// - int soap_read_icommon__inspireTheme_x005fdut(soap*, icommon__inspireTheme_x005fdut*) deserialize from a stream
/// - int soap_write_icommon__inspireTheme_x005fdut(soap*, icommon__inspireTheme_x005fdut*) serialize to a stream
/// - icommon__inspireTheme_x005fdut* icommon__inspireTheme_x005fdut::soap_dup(soap*) returns deep copy of icommon__inspireTheme_x005fdut, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - icommon__inspireTheme_x005fdut::soap_del() deep deletes icommon__inspireTheme_x005fdut data members, use only after icommon__inspireTheme_x005fdut::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int icommon__inspireTheme_x005fdut::soap_type() returns SOAP_TYPE_icommon__inspireTheme_x005fdut or derived type identifier
class icommon__inspireTheme_x005fdut : public xsd__anyType
{ public:
/// Element "OriginatingControlledVocabulary" of type "http://inspire.ec.europa.eu/schemas/common/1.0":originatingControlledVocabularyGemetInspireThemes.
    icommon__originatingControlledVocabularyGemetInspireThemes*  OriginatingControlledVocabulary 1;	///< Required element.
    enum _icommon__inspireTheme_x005fdut_KeywordValue
    {
	_icommon__inspireTheme_x005fdut_KeywordValue__Administratieve_x0020eenheden,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Administratieve eenheden"
	_icommon__inspireTheme_x005fdut_KeywordValue__Adressen,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Adressen"
	_icommon__inspireTheme_x005fdut_KeywordValue__Atmosferische_x0020omstandigheden,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Atmosferische omstandigheden"
	_icommon__inspireTheme_x005fdut_KeywordValue__Beschermde_x0020gebieden,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Beschermde gebieden"
	_icommon__inspireTheme_x005fdut_KeywordValue__Biogeografische_x0020gebieden,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Biogeografische gebieden"
	_icommon__inspireTheme_x005fdut_KeywordValue__Bodem,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Bodem"
	_icommon__inspireTheme_x005fdut_KeywordValue__Bodemgebruik,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Bodemgebruik"
	_icommon__inspireTheme_x005fdut_KeywordValue__Energiebronnen,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Energiebronnen"
	_icommon__inspireTheme_x005fdut_KeywordValue__Faciliteiten_x0020voor_x0020landbouw_x0020en_x0020aquacultuur,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Faciliteiten voor landbouw en aquacultuur"
	_icommon__inspireTheme_x005fdut_KeywordValue__Faciliteiten_x0020voor_x0020productie_x0020en_x0020industrie,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Faciliteiten voor productie en industrie"
	_icommon__inspireTheme_x005fdut_KeywordValue__Gebieden_x0020met_x0020natuurrisico_x0027es,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Gebieden met natuurrisico'es"
	_icommon__inspireTheme_x005fdut_KeywordValue__Gebiedsbeheer_x002c_x0020gebieden_x0020waar_x0020beperkingen_x0020gelden_x002c_x0020gereguleerde_x0020gebieden_x0020en_x0020rapportage_eenheden,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Gebiedsbeheer, gebieden waar beperkingen gelden, gereguleerde gebieden en rapportage-eenheden"
	_icommon__inspireTheme_x005fdut_KeywordValue__Gebouwen,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Gebouwen"
	_icommon__inspireTheme_x005fdut_KeywordValue__Geografisch_x0020rastersysteem,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Geografisch rastersysteem"
	_icommon__inspireTheme_x005fdut_KeywordValue__Geografische_x0020namen,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Geografische namen"
	_icommon__inspireTheme_x005fdut_KeywordValue__Geologie,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Geologie"
	_icommon__inspireTheme_x005fdut_KeywordValue__Habitats_x0020en_x0020biotopen,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Habitats en biotopen"
	_icommon__inspireTheme_x005fdut_KeywordValue__Hoogte,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Hoogte"
	_icommon__inspireTheme_x005fdut_KeywordValue__Hydrografie,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Hydrografie"
	_icommon__inspireTheme_x005fdut_KeywordValue__Kadastrale_x0020percelen,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Kadastrale percelen"
	_icommon__inspireTheme_x005fdut_KeywordValue__Landgebruik,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Landgebruik"
	_icommon__inspireTheme_x005fdut_KeywordValue__Menselijke_x0020gezondheid_x0020en_x0020veiligheid,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Menselijke gezondheid en veiligheid"
	_icommon__inspireTheme_x005fdut_KeywordValue__Meteorologische_x0020geografische_x0020kenmerken,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Meteorologische geografische kenmerken"
	_icommon__inspireTheme_x005fdut_KeywordValue__Milieubewakingsvoorzieningen,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Milieubewakingsvoorzieningen"
	_icommon__inspireTheme_x005fdut_KeywordValue__Minerale_x0020bronnen,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Minerale bronnen"
	_icommon__inspireTheme_x005fdut_KeywordValue__Nutsdiensten_x0020en_x0020overheidsdiensten,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Nutsdiensten en overheidsdiensten"
	_icommon__inspireTheme_x005fdut_KeywordValue__Oceanografische_x0020geografische_x0020kenmerken,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Oceanografische geografische kenmerken"
	_icommon__inspireTheme_x005fdut_KeywordValue__Orthobeeldvorming,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Orthobeeldvorming"
	_icommon__inspireTheme_x005fdut_KeywordValue__Spreiding_x0020van_x0020de_x0020bevolking_x0020_x2014_x0020demografie,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Spreiding van de bevolking — demografie"
	_icommon__inspireTheme_x005fdut_KeywordValue__Spreiding_x0020van_x0020soorten,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Spreiding van soorten"
	_icommon__inspireTheme_x005fdut_KeywordValue__Statistische_x0020eenheden,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Statistische eenheden"
	_icommon__inspireTheme_x005fdut_KeywordValue__Systemen_x0020voor_x0020verwijzing_x0020door_x0020middel_x0020van_x0020co_x00f6rdinaten,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Systemen voor verwijzing door middel van coördinaten"
	_icommon__inspireTheme_x005fdut_KeywordValue__Vervoersnetwerken,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Vervoersnetwerken"
	_icommon__inspireTheme_x005fdut_KeywordValue__Zeegebieden,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Zeegebieden"
    }
                                         KeywordValue                   1;	///< Required element.
/*  RESTRICTED FROM icommon__inspireTheme:
    END OF RESTRICTED FROM icommon__inspireTheme */
/*  RESTRICTED FROM icommon__keyword:
    END OF RESTRICTED FROM icommon__keyword */
};

/// @brief "http://inspire.ec.europa.eu/schemas/common/1.0":citationInspireInteroperabilityRegulation_dut is a complexType with complexContent restriction of type "http://inspire.ec.europa.eu/schemas/common/1.0":citationConformity.
///
/// @note class icommon__citationInspireInteroperabilityRegulation_x005fdut operations:
/// - icommon__citationInspireInteroperabilityRegulation_x005fdut* soap_new_icommon__citationInspireInteroperabilityRegulation_x005fdut(soap*) allocate and default initialize
/// - icommon__citationInspireInteroperabilityRegulation_x005fdut* soap_new_icommon__citationInspireInteroperabilityRegulation_x005fdut(soap*, int num) allocate and default initialize an array
/// - icommon__citationInspireInteroperabilityRegulation_x005fdut* soap_new_req_icommon__citationInspireInteroperabilityRegulation_x005fdut(soap*, ...) allocate, set required members
/// - icommon__citationInspireInteroperabilityRegulation_x005fdut* soap_new_set_icommon__citationInspireInteroperabilityRegulation_x005fdut(soap*, ...) allocate, set all public members
/// - icommon__citationInspireInteroperabilityRegulation_x005fdut::soap_default(soap*) default initialize members
/// - int soap_read_icommon__citationInspireInteroperabilityRegulation_x005fdut(soap*, icommon__citationInspireInteroperabilityRegulation_x005fdut*) deserialize from a stream
/// - int soap_write_icommon__citationInspireInteroperabilityRegulation_x005fdut(soap*, icommon__citationInspireInteroperabilityRegulation_x005fdut*) serialize to a stream
/// - icommon__citationInspireInteroperabilityRegulation_x005fdut* icommon__citationInspireInteroperabilityRegulation_x005fdut::soap_dup(soap*) returns deep copy of icommon__citationInspireInteroperabilityRegulation_x005fdut, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - icommon__citationInspireInteroperabilityRegulation_x005fdut::soap_del() deep deletes icommon__citationInspireInteroperabilityRegulation_x005fdut data members, use only after icommon__citationInspireInteroperabilityRegulation_x005fdut::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int icommon__citationInspireInteroperabilityRegulation_x005fdut::soap_type() returns SOAP_TYPE_icommon__citationInspireInteroperabilityRegulation_x005fdut or derived type identifier
class icommon__citationInspireInteroperabilityRegulation_x005fdut : public xsd__anyType
{ public:
    enum _icommon__citationInspireInteroperabilityRegulation_x005fdut_Title
    {
	_icommon__citationInspireInteroperabilityRegulation_x005fdut_Title__VERORDENING_x0020_x0028EU_x0029_x0020Nr_x002e_x00201089_x002f2010_x0020VAN_x0020DE_x0020COMMISSIE_x0020van_x002023_x0020november_x00202010_x0020ter_x0020uitvoering_x0020van_x0020Richtlijn_x00202007_x002f2_x002fEG_x0020van_x0020het_x0020Europees_x0020Parlement_x0020en_x0020de_x0020Raad_x0020betreffende_x0020de_x0020interoperabiliteit_x0020van_x0020verzamelingen_x0020ruimtelijke_x0020gegevens_x0020en_x0020van_x0020diensten_x0020met_x0020betrekking_x0020tot_x0020ruimtelijke_x0020gegevens,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":notEmptyString value="VERORDENING (EU) Nr. 1089/2010 VAN DE COMMISSIE van 23 november 2010 ter uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad betreffende de interoperabiliteit van verzamelingen ruimtelijke gegevens en van diensten met betrekking tot ruimtelijke gegevens"
    }
                                         Title                          1;	///< Required element.
//  BEGIN CHOICE <xs:choice>
  $ int                                  __union_citationInspireInteroperabilityRegulation_x005fdut;	///< Union _icommon__union_citationInspireInteroperabilityRegulation_x005fdut selector: set to SOAP_UNION__icommon__union_citationInspireInteroperabilityRegulation_x005fdut_<fieldname>
    union _icommon__union_citationInspireInteroperabilityRegulation_x005fdut
    {
    enum _icommon__citationInspireInteroperabilityRegulation_x005fdut_DateOfPublication
    {
	_icommon__citationInspireInteroperabilityRegulation_x005fdut_DateOfPublication__2010_12_08,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":iso8601Date value="2010-12-08"
    }
                                        *DateOfPublication             ;	///< Choice of element (one of multiple choices).
    }                                    union_citationInspireInteroperabilityRegulation_x005fdut;
//  END OF CHOICE
    enum _icommon__citationInspireInteroperabilityRegulation_x005fdut_URI
    {
	_icommon__citationInspireInteroperabilityRegulation_x005fdut_URI__OJ_x003aL_x003a2010_x003a323_x003a0011_x003a0102_x003aNL_x003aPDF,	///< xs:anyURI value="OJ:L:2010:323:0011:0102:NL:PDF"
    }
                                         URI                            1;	///< Required element.
/// Element "ResourceLocator" of type "http://inspire.ec.europa.eu/schemas/common/1.0":resLocInspireInteroperabilityRegulation_dut.
    icommon__resLocInspireInteroperabilityRegulation_x005fdut*  ResourceLocator                1;	///< Required element.
/*  RESTRICTED FROM icommon__citationConformity:
    END OF RESTRICTED FROM icommon__citationConformity */
/*  RESTRICTED FROM icommon__citation:
    END OF RESTRICTED FROM icommon__citation */
};

/// @brief "http://inspire.ec.europa.eu/schemas/common/1.0":inspireTheme_eng is a complexType with complexContent restriction of type "http://inspire.ec.europa.eu/schemas/common/1.0":inspireTheme.
///
/// @note class icommon__inspireTheme_x005feng operations:
/// - icommon__inspireTheme_x005feng* soap_new_icommon__inspireTheme_x005feng(soap*) allocate and default initialize
/// - icommon__inspireTheme_x005feng* soap_new_icommon__inspireTheme_x005feng(soap*, int num) allocate and default initialize an array
/// - icommon__inspireTheme_x005feng* soap_new_req_icommon__inspireTheme_x005feng(soap*, ...) allocate, set required members
/// - icommon__inspireTheme_x005feng* soap_new_set_icommon__inspireTheme_x005feng(soap*, ...) allocate, set all public members
/// - icommon__inspireTheme_x005feng::soap_default(soap*) default initialize members
/// - int soap_read_icommon__inspireTheme_x005feng(soap*, icommon__inspireTheme_x005feng*) deserialize from a stream
/// - int soap_write_icommon__inspireTheme_x005feng(soap*, icommon__inspireTheme_x005feng*) serialize to a stream
/// - icommon__inspireTheme_x005feng* icommon__inspireTheme_x005feng::soap_dup(soap*) returns deep copy of icommon__inspireTheme_x005feng, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - icommon__inspireTheme_x005feng::soap_del() deep deletes icommon__inspireTheme_x005feng data members, use only after icommon__inspireTheme_x005feng::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int icommon__inspireTheme_x005feng::soap_type() returns SOAP_TYPE_icommon__inspireTheme_x005feng or derived type identifier
class icommon__inspireTheme_x005feng : public xsd__anyType
{ public:
/// Element "OriginatingControlledVocabulary" of type "http://inspire.ec.europa.eu/schemas/common/1.0":originatingControlledVocabularyGemetInspireThemes.
    icommon__originatingControlledVocabularyGemetInspireThemes*  OriginatingControlledVocabulary 1;	///< Required element.
    enum _icommon__inspireTheme_x005feng_KeywordValue
    {
	_icommon__inspireTheme_x005feng_KeywordValue__Addresses,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Addresses"
	_icommon__inspireTheme_x005feng_KeywordValue__Administrative_x0020units,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Administrative units"
	_icommon__inspireTheme_x005feng_KeywordValue__Agricultural_x0020and_x0020aquaculture_x0020facilities,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Agricultural and aquaculture facilities"
	_icommon__inspireTheme_x005feng_KeywordValue__Area_x0020management_x002frestriction_x002fregulation_x0020zones_x0020and_x0020reporting_x0020units,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Area management/restriction/regulation zones and reporting units"
	_icommon__inspireTheme_x005feng_KeywordValue__Atmospheric_x0020conditions,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Atmospheric conditions"
	_icommon__inspireTheme_x005feng_KeywordValue__Bio_geographical_x0020regions,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Bio-geographical regions"
	_icommon__inspireTheme_x005feng_KeywordValue__Buildings,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Buildings"
	_icommon__inspireTheme_x005feng_KeywordValue__Cadastral_x0020parcels,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Cadastral parcels"
	_icommon__inspireTheme_x005feng_KeywordValue__Coordinate_x0020reference_x0020systems,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Coordinate reference systems"
	_icommon__inspireTheme_x005feng_KeywordValue__Elevation,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Elevation"
	_icommon__inspireTheme_x005feng_KeywordValue__Energy_x0020resources,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Energy resources"
	_icommon__inspireTheme_x005feng_KeywordValue__Environmental_x0020monitoring_x0020facilities,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Environmental monitoring facilities"
	_icommon__inspireTheme_x005feng_KeywordValue__Geographical_x0020grid_x0020systems,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Geographical grid systems"
	_icommon__inspireTheme_x005feng_KeywordValue__Geographical_x0020names,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Geographical names"
	_icommon__inspireTheme_x005feng_KeywordValue__Geology,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Geology"
	_icommon__inspireTheme_x005feng_KeywordValue__Habitats_x0020and_x0020biotopes,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Habitats and biotopes"
	_icommon__inspireTheme_x005feng_KeywordValue__Human_x0020health_x0020and_x0020safety,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Human health and safety"
	_icommon__inspireTheme_x005feng_KeywordValue__Hydrography,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Hydrography"
	_icommon__inspireTheme_x005feng_KeywordValue__Land_x0020cover,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Land cover"
	_icommon__inspireTheme_x005feng_KeywordValue__Land_x0020use,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Land use"
	_icommon__inspireTheme_x005feng_KeywordValue__Meteorological_x0020geographical_x0020features,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Meteorological geographical features"
	_icommon__inspireTheme_x005feng_KeywordValue__Mineral_x0020resources,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Mineral resources"
	_icommon__inspireTheme_x005feng_KeywordValue__Natural_x0020risk_x0020zones,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Natural risk zones"
	_icommon__inspireTheme_x005feng_KeywordValue__Oceanographic_x0020geographical_x0020features,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Oceanographic geographical features"
	_icommon__inspireTheme_x005feng_KeywordValue__Orthoimagery,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Orthoimagery"
	_icommon__inspireTheme_x005feng_KeywordValue__Population_x0020distribution_x0020_x2014_x0020demography,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Population distribution — demography"
	_icommon__inspireTheme_x005feng_KeywordValue__Production_x0020and_x0020industrial_x0020facilities,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Production and industrial facilities"
	_icommon__inspireTheme_x005feng_KeywordValue__Protected_x0020sites,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Protected sites"
	_icommon__inspireTheme_x005feng_KeywordValue__Sea_x0020regions,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Sea regions"
	_icommon__inspireTheme_x005feng_KeywordValue__Soil,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Soil"
	_icommon__inspireTheme_x005feng_KeywordValue__Species_x0020distribution,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Species distribution"
	_icommon__inspireTheme_x005feng_KeywordValue__Statistical_x0020units,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Statistical units"
	_icommon__inspireTheme_x005feng_KeywordValue__Transport_x0020networks,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Transport networks"
	_icommon__inspireTheme_x005feng_KeywordValue__Utility_x0020and_x0020governmental_x0020services,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Utility and governmental services"
    }
                                         KeywordValue                   1;	///< Required element.
/*  RESTRICTED FROM icommon__inspireTheme:
    END OF RESTRICTED FROM icommon__inspireTheme */
/*  RESTRICTED FROM icommon__keyword:
    END OF RESTRICTED FROM icommon__keyword */
};

/// @brief "http://inspire.ec.europa.eu/schemas/common/1.0":citationInspireInteroperabilityRegulation_eng is a complexType with complexContent restriction of type "http://inspire.ec.europa.eu/schemas/common/1.0":citationConformity.
///
/// @note class icommon__citationInspireInteroperabilityRegulation_x005feng operations:
/// - icommon__citationInspireInteroperabilityRegulation_x005feng* soap_new_icommon__citationInspireInteroperabilityRegulation_x005feng(soap*) allocate and default initialize
/// - icommon__citationInspireInteroperabilityRegulation_x005feng* soap_new_icommon__citationInspireInteroperabilityRegulation_x005feng(soap*, int num) allocate and default initialize an array
/// - icommon__citationInspireInteroperabilityRegulation_x005feng* soap_new_req_icommon__citationInspireInteroperabilityRegulation_x005feng(soap*, ...) allocate, set required members
/// - icommon__citationInspireInteroperabilityRegulation_x005feng* soap_new_set_icommon__citationInspireInteroperabilityRegulation_x005feng(soap*, ...) allocate, set all public members
/// - icommon__citationInspireInteroperabilityRegulation_x005feng::soap_default(soap*) default initialize members
/// - int soap_read_icommon__citationInspireInteroperabilityRegulation_x005feng(soap*, icommon__citationInspireInteroperabilityRegulation_x005feng*) deserialize from a stream
/// - int soap_write_icommon__citationInspireInteroperabilityRegulation_x005feng(soap*, icommon__citationInspireInteroperabilityRegulation_x005feng*) serialize to a stream
/// - icommon__citationInspireInteroperabilityRegulation_x005feng* icommon__citationInspireInteroperabilityRegulation_x005feng::soap_dup(soap*) returns deep copy of icommon__citationInspireInteroperabilityRegulation_x005feng, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - icommon__citationInspireInteroperabilityRegulation_x005feng::soap_del() deep deletes icommon__citationInspireInteroperabilityRegulation_x005feng data members, use only after icommon__citationInspireInteroperabilityRegulation_x005feng::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int icommon__citationInspireInteroperabilityRegulation_x005feng::soap_type() returns SOAP_TYPE_icommon__citationInspireInteroperabilityRegulation_x005feng or derived type identifier
class icommon__citationInspireInteroperabilityRegulation_x005feng : public xsd__anyType
{ public:
    enum _icommon__citationInspireInteroperabilityRegulation_x005feng_Title
    {
	_icommon__citationInspireInteroperabilityRegulation_x005feng_Title__COMMISSION_x0020REGULATION_x0020_x0028EU_x0029_x0020No_x00201089_x002f2010_x0020of_x002023_x0020November_x00202010_x0020implementing_x0020Directive_x00202007_x002f2_x002fEC_x0020of_x0020the_x0020European_x0020Parliament_x0020and_x0020of_x0020the_x0020Council_x0020as_x0020regards_x0020interoperability_x0020of_x0020spatial_x0020data_x0020sets_x0020and_x0020services,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":notEmptyString value="COMMISSION REGULATION (EU) No 1089/2010 of 23 November 2010 implementing Directive 2007/2/EC of the European Parliament and of the Council as regards interoperability of spatial data sets and services"
    }
                                         Title                          1;	///< Required element.
//  BEGIN CHOICE <xs:choice>
  $ int                                  __union_citationInspireInteroperabilityRegulation_x005feng;	///< Union _icommon__union_citationInspireInteroperabilityRegulation_x005feng selector: set to SOAP_UNION__icommon__union_citationInspireInteroperabilityRegulation_x005feng_<fieldname>
    union _icommon__union_citationInspireInteroperabilityRegulation_x005feng
    {
    enum _icommon__citationInspireInteroperabilityRegulation_x005feng_DateOfPublication
    {
	_icommon__citationInspireInteroperabilityRegulation_x005feng_DateOfPublication__2010_12_08,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":iso8601Date value="2010-12-08"
    }
                                        *DateOfPublication             ;	///< Choice of element (one of multiple choices).
    }                                    union_citationInspireInteroperabilityRegulation_x005feng;
//  END OF CHOICE
    enum _icommon__citationInspireInteroperabilityRegulation_x005feng_URI
    {
	_icommon__citationInspireInteroperabilityRegulation_x005feng_URI__OJ_x003aL_x003a2010_x003a323_x003a0011_x003a0102_x003aEN_x003aPDF,	///< xs:anyURI value="OJ:L:2010:323:0011:0102:EN:PDF"
    }
                                         URI                            1;	///< Required element.
/// Element "ResourceLocator" of type "http://inspire.ec.europa.eu/schemas/common/1.0":resLocInspireInteroperabilityRegulation_eng.
    icommon__resLocInspireInteroperabilityRegulation_x005feng*  ResourceLocator                1;	///< Required element.
/*  RESTRICTED FROM icommon__citationConformity:
    END OF RESTRICTED FROM icommon__citationConformity */
/*  RESTRICTED FROM icommon__citation:
    END OF RESTRICTED FROM icommon__citation */
};

/// @brief "http://inspire.ec.europa.eu/schemas/common/1.0":inspireTheme_est is a complexType with complexContent restriction of type "http://inspire.ec.europa.eu/schemas/common/1.0":inspireTheme.
///
/// @note class icommon__inspireTheme_x005fest operations:
/// - icommon__inspireTheme_x005fest* soap_new_icommon__inspireTheme_x005fest(soap*) allocate and default initialize
/// - icommon__inspireTheme_x005fest* soap_new_icommon__inspireTheme_x005fest(soap*, int num) allocate and default initialize an array
/// - icommon__inspireTheme_x005fest* soap_new_req_icommon__inspireTheme_x005fest(soap*, ...) allocate, set required members
/// - icommon__inspireTheme_x005fest* soap_new_set_icommon__inspireTheme_x005fest(soap*, ...) allocate, set all public members
/// - icommon__inspireTheme_x005fest::soap_default(soap*) default initialize members
/// - int soap_read_icommon__inspireTheme_x005fest(soap*, icommon__inspireTheme_x005fest*) deserialize from a stream
/// - int soap_write_icommon__inspireTheme_x005fest(soap*, icommon__inspireTheme_x005fest*) serialize to a stream
/// - icommon__inspireTheme_x005fest* icommon__inspireTheme_x005fest::soap_dup(soap*) returns deep copy of icommon__inspireTheme_x005fest, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - icommon__inspireTheme_x005fest::soap_del() deep deletes icommon__inspireTheme_x005fest data members, use only after icommon__inspireTheme_x005fest::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int icommon__inspireTheme_x005fest::soap_type() returns SOAP_TYPE_icommon__inspireTheme_x005fest or derived type identifier
class icommon__inspireTheme_x005fest : public xsd__anyType
{ public:
/// Element "OriginatingControlledVocabulary" of type "http://inspire.ec.europa.eu/schemas/common/1.0":originatingControlledVocabularyGemetInspireThemes.
    icommon__originatingControlledVocabularyGemetInspireThemes*  OriginatingControlledVocabulary 1;	///< Required element.
    enum _icommon__inspireTheme_x005fest_KeywordValue
    {
	_icommon__inspireTheme_x005fest_KeywordValue__Aadressid,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Aadressid"
	_icommon__inspireTheme_x005fest_KeywordValue__Atmosf_x00e4_x00e4ritingimused,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Atmosfääritingimused"
	_icommon__inspireTheme_x005fest_KeywordValue__Bio_geograafilised_x0020piirkonnad,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Bio-geograafilised piirkonnad"
	_icommon__inspireTheme_x005fest_KeywordValue__Ehitised,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Ehitised"
	_icommon__inspireTheme_x005fest_KeywordValue__Elanikkonna_x0020jaotumine_x0020_x2013_x0020demograafia,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Elanikkonna jaotumine – demograafia"
	_icommon__inspireTheme_x005fest_KeywordValue__Elupaigad_x0020ja_x0020biotoobid,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Elupaigad ja biotoobid"
	_icommon__inspireTheme_x005fest_KeywordValue__Energiaressursid,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Energiaressursid"
	_icommon__inspireTheme_x005fest_KeywordValue__Geograafilised_x0020nimed,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Geograafilised nimed"
	_icommon__inspireTheme_x005fest_KeywordValue__Geograafilised_x0020ruutv_x00f5rgud,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Geograafilised ruutvõrgud"
	_icommon__inspireTheme_x005fest_KeywordValue__Geoloogia,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Geoloogia"
	_icommon__inspireTheme_x005fest_KeywordValue__Haldus_x00fcksused,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Haldusüksused"
	_icommon__inspireTheme_x005fest_KeywordValue__H_x00fcdrograafia,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Hüdrograafia"
	_icommon__inspireTheme_x005fest_KeywordValue__Inimeste_x0020tervis_x0020ja_x0020ohutus,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Inimeste tervis ja ohutus"
	_icommon__inspireTheme_x005fest_KeywordValue__Kaitsealused_x0020kohad,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Kaitsealused kohad"
	_icommon__inspireTheme_x005fest_KeywordValue__Katastri_x00fcksused,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Katastriüksused"
	_icommon__inspireTheme_x005fest_KeywordValue__Keskkonnaseirerajatised,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Keskkonnaseirerajatised"
	_icommon__inspireTheme_x005fest_KeywordValue__Kommunaal__x0020ja_x0020riiklikud_x0020teenused,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Kommunaal- ja riiklikud teenused"
	_icommon__inspireTheme_x005fest_KeywordValue__Koordinaats_x00fcsteemid,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Koordinaatsüsteemid"
	_icommon__inspireTheme_x005fest_KeywordValue__K_x00f5rgused,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Kõrgused"
	_icommon__inspireTheme_x005fest_KeywordValue__Liikide_x0020jaotumine,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Liikide jaotumine"
	_icommon__inspireTheme_x005fest_KeywordValue__Looduslikud_x0020ohutsoonid,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Looduslikud ohutsoonid"
	_icommon__inspireTheme_x005fest_KeywordValue__Maakasutus,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Maakasutus"
	_icommon__inspireTheme_x005fest_KeywordValue__Maakate,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Maakate"
	_icommon__inspireTheme_x005fest_KeywordValue__Maavarad,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Maavarad"
	_icommon__inspireTheme_x005fest_KeywordValue__Merepiirkonnad,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Merepiirkonnad"
	_icommon__inspireTheme_x005fest_KeywordValue__Meteoroloogilis_geograafilised_x0020tunnusjooned,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Meteoroloogilis-geograafilised tunnusjooned"
	_icommon__inspireTheme_x005fest_KeywordValue__Okeanograafilis_geograafilised_x0020tunnusjooned,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Okeanograafilis-geograafilised tunnusjooned"
	_icommon__inspireTheme_x005fest_KeywordValue__Ortokujutised,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Ortokujutised"
	_icommon__inspireTheme_x005fest_KeywordValue__Pinnas,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Pinnas"
	_icommon__inspireTheme_x005fest_KeywordValue__P_x00f5llumajandus__x0020ja_x0020vesiviljelusrajatised,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Põllumajandus- ja vesiviljelusrajatised"
	_icommon__inspireTheme_x005fest_KeywordValue__Statistilised_x0020_x00fcksused,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Statistilised üksused"
	_icommon__inspireTheme_x005fest_KeywordValue__Tootmis__x0020ja_x0020t_x00f6_x00f6stusrajatised,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Tootmis- ja tööstusrajatised"
	_icommon__inspireTheme_x005fest_KeywordValue__Transpordiv_x00f5rgud,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Transpordivõrgud"
	_icommon__inspireTheme_x005fest_KeywordValue___x00dcldplaneering_x002fpiirangu__x002freguleeritud_x0020tsoonid_x0020ja_x0020aruandlus_x00fcksused,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Üldplaneering/piirangu-/reguleeritud tsoonid ja aruandlusüksused"
    }
                                         KeywordValue                   1;	///< Required element.
/*  RESTRICTED FROM icommon__inspireTheme:
    END OF RESTRICTED FROM icommon__inspireTheme */
/*  RESTRICTED FROM icommon__keyword:
    END OF RESTRICTED FROM icommon__keyword */
};

/// @brief "http://inspire.ec.europa.eu/schemas/common/1.0":citationInspireInteroperabilityRegulation_est is a complexType with complexContent restriction of type "http://inspire.ec.europa.eu/schemas/common/1.0":citationConformity.
///
/// @note class icommon__citationInspireInteroperabilityRegulation_x005fest operations:
/// - icommon__citationInspireInteroperabilityRegulation_x005fest* soap_new_icommon__citationInspireInteroperabilityRegulation_x005fest(soap*) allocate and default initialize
/// - icommon__citationInspireInteroperabilityRegulation_x005fest* soap_new_icommon__citationInspireInteroperabilityRegulation_x005fest(soap*, int num) allocate and default initialize an array
/// - icommon__citationInspireInteroperabilityRegulation_x005fest* soap_new_req_icommon__citationInspireInteroperabilityRegulation_x005fest(soap*, ...) allocate, set required members
/// - icommon__citationInspireInteroperabilityRegulation_x005fest* soap_new_set_icommon__citationInspireInteroperabilityRegulation_x005fest(soap*, ...) allocate, set all public members
/// - icommon__citationInspireInteroperabilityRegulation_x005fest::soap_default(soap*) default initialize members
/// - int soap_read_icommon__citationInspireInteroperabilityRegulation_x005fest(soap*, icommon__citationInspireInteroperabilityRegulation_x005fest*) deserialize from a stream
/// - int soap_write_icommon__citationInspireInteroperabilityRegulation_x005fest(soap*, icommon__citationInspireInteroperabilityRegulation_x005fest*) serialize to a stream
/// - icommon__citationInspireInteroperabilityRegulation_x005fest* icommon__citationInspireInteroperabilityRegulation_x005fest::soap_dup(soap*) returns deep copy of icommon__citationInspireInteroperabilityRegulation_x005fest, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - icommon__citationInspireInteroperabilityRegulation_x005fest::soap_del() deep deletes icommon__citationInspireInteroperabilityRegulation_x005fest data members, use only after icommon__citationInspireInteroperabilityRegulation_x005fest::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int icommon__citationInspireInteroperabilityRegulation_x005fest::soap_type() returns SOAP_TYPE_icommon__citationInspireInteroperabilityRegulation_x005fest or derived type identifier
class icommon__citationInspireInteroperabilityRegulation_x005fest : public xsd__anyType
{ public:
    enum _icommon__citationInspireInteroperabilityRegulation_x005fest_Title
    {
	_icommon__citationInspireInteroperabilityRegulation_x005fest_Title__KOMISJONI_x0020M_x00c4_x00c4RUS_x0020_x0028EL_x0029_x0020nr_x00201089_x002f2010_x002c_x002023_x002e_x0020november_x00202010_x002c_x0020millega_x0020rakendatakse_x0020Euroopa_x0020Parlamendi_x0020ja_x0020n_x00f5ukogu_x0020direktiivi_x00202007_x002f2_x002fE_x00dc_x0020seoses_x0020ruumiandmekogumite_x0020ja_x0020_teenuste_x0020ristkasutatavusega,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":notEmptyString value="KOMISJONI MÄÄRUS (EL) nr 1089/2010, 23. november 2010, millega rakendatakse Euroopa Parlamendi ja nõukogu direktiivi 2007/2/EÜ seoses ruumiandmekogumite ja -teenuste ristkasutatavusega"
    }
                                         Title                          1;	///< Required element.
//  BEGIN CHOICE <xs:choice>
  $ int                                  __union_citationInspireInteroperabilityRegulation_x005fest;	///< Union _icommon__union_citationInspireInteroperabilityRegulation_x005fest selector: set to SOAP_UNION__icommon__union_citationInspireInteroperabilityRegulation_x005fest_<fieldname>
    union _icommon__union_citationInspireInteroperabilityRegulation_x005fest
    {
    enum _icommon__citationInspireInteroperabilityRegulation_x005fest_DateOfPublication
    {
	_icommon__citationInspireInteroperabilityRegulation_x005fest_DateOfPublication__2010_12_08,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":iso8601Date value="2010-12-08"
    }
                                        *DateOfPublication             ;	///< Choice of element (one of multiple choices).
    }                                    union_citationInspireInteroperabilityRegulation_x005fest;
//  END OF CHOICE
    enum _icommon__citationInspireInteroperabilityRegulation_x005fest_URI
    {
	_icommon__citationInspireInteroperabilityRegulation_x005fest_URI__OJ_x003aL_x003a2010_x003a323_x003a0011_x003a0102_x003aET_x003aPDF,	///< xs:anyURI value="OJ:L:2010:323:0011:0102:ET:PDF"
    }
                                         URI                            1;	///< Required element.
/// Element "ResourceLocator" of type "http://inspire.ec.europa.eu/schemas/common/1.0":resLocInspireInteroperabilityRegulation_est.
    icommon__resLocInspireInteroperabilityRegulation_x005fest*  ResourceLocator                1;	///< Required element.
/*  RESTRICTED FROM icommon__citationConformity:
    END OF RESTRICTED FROM icommon__citationConformity */
/*  RESTRICTED FROM icommon__citation:
    END OF RESTRICTED FROM icommon__citation */
};

/// @brief "http://inspire.ec.europa.eu/schemas/common/1.0":inspireTheme_fin is a complexType with complexContent restriction of type "http://inspire.ec.europa.eu/schemas/common/1.0":inspireTheme.
///
/// @note class icommon__inspireTheme_x005ffin operations:
/// - icommon__inspireTheme_x005ffin* soap_new_icommon__inspireTheme_x005ffin(soap*) allocate and default initialize
/// - icommon__inspireTheme_x005ffin* soap_new_icommon__inspireTheme_x005ffin(soap*, int num) allocate and default initialize an array
/// - icommon__inspireTheme_x005ffin* soap_new_req_icommon__inspireTheme_x005ffin(soap*, ...) allocate, set required members
/// - icommon__inspireTheme_x005ffin* soap_new_set_icommon__inspireTheme_x005ffin(soap*, ...) allocate, set all public members
/// - icommon__inspireTheme_x005ffin::soap_default(soap*) default initialize members
/// - int soap_read_icommon__inspireTheme_x005ffin(soap*, icommon__inspireTheme_x005ffin*) deserialize from a stream
/// - int soap_write_icommon__inspireTheme_x005ffin(soap*, icommon__inspireTheme_x005ffin*) serialize to a stream
/// - icommon__inspireTheme_x005ffin* icommon__inspireTheme_x005ffin::soap_dup(soap*) returns deep copy of icommon__inspireTheme_x005ffin, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - icommon__inspireTheme_x005ffin::soap_del() deep deletes icommon__inspireTheme_x005ffin data members, use only after icommon__inspireTheme_x005ffin::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int icommon__inspireTheme_x005ffin::soap_type() returns SOAP_TYPE_icommon__inspireTheme_x005ffin or derived type identifier
class icommon__inspireTheme_x005ffin : public xsd__anyType
{ public:
/// Element "OriginatingControlledVocabulary" of type "http://inspire.ec.europa.eu/schemas/common/1.0":originatingControlledVocabularyGemetInspireThemes.
    icommon__originatingControlledVocabularyGemetInspireThemes*  OriginatingControlledVocabulary 1;	///< Required element.
    enum _icommon__inspireTheme_x005ffin_KeywordValue
    {
	_icommon__inspireTheme_x005ffin_KeywordValue__Aluesuunnittelun_x002c_x0020rajoitusten_x0020ja_x0020s_x00e4_x00e4ntelyn_x0020piiriin_x0020kuuluvat_x0020alueet_x0020ja_x0020raportointiyksik_x00f6t,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Aluesuunnittelun, rajoitusten ja sääntelyn piiriin kuuluvat alueet ja raportointiyksiköt"
	_icommon__inspireTheme_x005ffin_KeywordValue__Biomaantieteelliset_x0020alueet,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Biomaantieteelliset alueet"
	_icommon__inspireTheme_x005ffin_KeywordValue__Elinymp_x00e4rist_x00f6t_x0020ja_x0020biotoopit,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Elinympäristöt ja biotoopit"
	_icommon__inspireTheme_x005ffin_KeywordValue__Energiavarat,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Energiavarat"
	_icommon__inspireTheme_x005ffin_KeywordValue__Geologia,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Geologia"
	_icommon__inspireTheme_x005ffin_KeywordValue__Hallinnolliset_x0020yksik_x00f6t,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Hallinnolliset yksiköt"
	_icommon__inspireTheme_x005ffin_KeywordValue__Hydrografia,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Hydrografia"
	_icommon__inspireTheme_x005ffin_KeywordValue__Ilmakeh_x00e4n_x0020tila,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Ilmakehän tila"
	_icommon__inspireTheme_x005ffin_KeywordValue__Ilmaston_x0020maantieteelliset_x0020ominaispiirteet,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Ilmaston maantieteelliset ominaispiirteet"
	_icommon__inspireTheme_x005ffin_KeywordValue__Kiinteist_x00f6t,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Kiinteistöt"
	_icommon__inspireTheme_x005ffin_KeywordValue__Koordinaattij_x00e4rjestelm_x00e4t,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Koordinaattijärjestelmät"
	_icommon__inspireTheme_x005ffin_KeywordValue__Korkeus,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Korkeus"
	_icommon__inspireTheme_x005ffin_KeywordValue__Lajien_x0020levinneisyys,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Lajien levinneisyys"
	_icommon__inspireTheme_x005ffin_KeywordValue__Liikenneverkot,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Liikenneverkot"
	_icommon__inspireTheme_x005ffin_KeywordValue__Luonnonriskialueet,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Luonnonriskialueet"
	_icommon__inspireTheme_x005ffin_KeywordValue__Maank_x00e4ytt_x00f6,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Maankäyttö"
	_icommon__inspireTheme_x005ffin_KeywordValue__Maanpeite,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Maanpeite"
	_icommon__inspireTheme_x005ffin_KeywordValue__Maaper_x00e4,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Maaperä"
	_icommon__inspireTheme_x005ffin_KeywordValue__Maatalous__x0020ja_x0020vesiviljelylaitokset,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Maatalous- ja vesiviljelylaitokset"
	_icommon__inspireTheme_x005ffin_KeywordValue__Merentutkimuksen_x0020maantieteelliset_x0020ominaispiirteet,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Merentutkimuksen maantieteelliset ominaispiirteet"
	_icommon__inspireTheme_x005ffin_KeywordValue__Merialueet,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Merialueet"
	_icommon__inspireTheme_x005ffin_KeywordValue__Mineraalivarat,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Mineraalivarat"
	_icommon__inspireTheme_x005ffin_KeywordValue__Ortoilmakuvat,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Ortoilmakuvat"
	_icommon__inspireTheme_x005ffin_KeywordValue__Osoitteet,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Osoitteet"
	_icommon__inspireTheme_x005ffin_KeywordValue__Paikannimet,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Paikannimet"
	_icommon__inspireTheme_x005ffin_KeywordValue__Paikannusruudustot,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Paikannusruudustot"
	_icommon__inspireTheme_x005ffin_KeywordValue__Rakennukset,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Rakennukset"
	_icommon__inspireTheme_x005ffin_KeywordValue__Suojellut_x0020alueet,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Suojellut alueet"
	_icommon__inspireTheme_x005ffin_KeywordValue__Tilastoyksik_x00f6t,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Tilastoyksiköt"
	_icommon__inspireTheme_x005ffin_KeywordValue__Tuotanto__x0020ja_x0020teollisuuslaitokset,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Tuotanto- ja teollisuuslaitokset"
	_icommon__inspireTheme_x005ffin_KeywordValue__V_x00e4est_x00f6jakauma_x0020_x2013_x0020demografia,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Väestöjakauma – demografia"
	_icommon__inspireTheme_x005ffin_KeywordValue__V_x00e4est_x00f6n_x0020terveys_x0020ja_x0020turvallisuus,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Väestön terveys ja turvallisuus"
	_icommon__inspireTheme_x005ffin_KeywordValue__Yleishy_x00f6dylliset_x0020ja_x0020muut_x0020julkiset_x0020palvelut,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Yleishyödylliset ja muut julkiset palvelut"
	_icommon__inspireTheme_x005ffin_KeywordValue__Ymp_x00e4rist_x00f6n_x0020tilan_x0020seurantalaitteet,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Ympäristön tilan seurantalaitteet"
    }
                                         KeywordValue                   1;	///< Required element.
/*  RESTRICTED FROM icommon__inspireTheme:
    END OF RESTRICTED FROM icommon__inspireTheme */
/*  RESTRICTED FROM icommon__keyword:
    END OF RESTRICTED FROM icommon__keyword */
};

/// @brief "http://inspire.ec.europa.eu/schemas/common/1.0":citationInspireInteroperabilityRegulation_fin is a complexType with complexContent restriction of type "http://inspire.ec.europa.eu/schemas/common/1.0":citationConformity.
///
/// @note class icommon__citationInspireInteroperabilityRegulation_x005ffin operations:
/// - icommon__citationInspireInteroperabilityRegulation_x005ffin* soap_new_icommon__citationInspireInteroperabilityRegulation_x005ffin(soap*) allocate and default initialize
/// - icommon__citationInspireInteroperabilityRegulation_x005ffin* soap_new_icommon__citationInspireInteroperabilityRegulation_x005ffin(soap*, int num) allocate and default initialize an array
/// - icommon__citationInspireInteroperabilityRegulation_x005ffin* soap_new_req_icommon__citationInspireInteroperabilityRegulation_x005ffin(soap*, ...) allocate, set required members
/// - icommon__citationInspireInteroperabilityRegulation_x005ffin* soap_new_set_icommon__citationInspireInteroperabilityRegulation_x005ffin(soap*, ...) allocate, set all public members
/// - icommon__citationInspireInteroperabilityRegulation_x005ffin::soap_default(soap*) default initialize members
/// - int soap_read_icommon__citationInspireInteroperabilityRegulation_x005ffin(soap*, icommon__citationInspireInteroperabilityRegulation_x005ffin*) deserialize from a stream
/// - int soap_write_icommon__citationInspireInteroperabilityRegulation_x005ffin(soap*, icommon__citationInspireInteroperabilityRegulation_x005ffin*) serialize to a stream
/// - icommon__citationInspireInteroperabilityRegulation_x005ffin* icommon__citationInspireInteroperabilityRegulation_x005ffin::soap_dup(soap*) returns deep copy of icommon__citationInspireInteroperabilityRegulation_x005ffin, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - icommon__citationInspireInteroperabilityRegulation_x005ffin::soap_del() deep deletes icommon__citationInspireInteroperabilityRegulation_x005ffin data members, use only after icommon__citationInspireInteroperabilityRegulation_x005ffin::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int icommon__citationInspireInteroperabilityRegulation_x005ffin::soap_type() returns SOAP_TYPE_icommon__citationInspireInteroperabilityRegulation_x005ffin or derived type identifier
class icommon__citationInspireInteroperabilityRegulation_x005ffin : public xsd__anyType
{ public:
    enum _icommon__citationInspireInteroperabilityRegulation_x005ffin_Title
    {
	_icommon__citationInspireInteroperabilityRegulation_x005ffin_Title__KOMISSION_x0020ASETUS_x0020_x0028EU_x0029_x0020N_x003ao_x00201089_x002f2010_x002c_x0020annettu_x002023_x0020p_x00e4iv_x00e4n_x00e4_x0020marraskuuta_x00202010_x002c_x0020Euroopan_x0020parlamentin_x0020ja_x0020neuvoston_x0020direktiivin_x00202007_x002f2_x002fEY_x0020t_x00e4yt_x00e4nt_x00f6_x00f6npanosta_x0020paikkatietoaineistojen_x0020ja_x0020_palvelujen_x0020yhteentoimivuuden_x0020osalta,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":notEmptyString value="KOMISSION ASETUS (EU) N:o 1089/2010, annettu 23 päivänä marraskuuta 2010, Euroopan parlamentin ja neuvoston direktiivin 2007/2/EY täytäntöönpanosta paikkatietoaineistojen ja -palvelujen yhteentoimivuuden osalta"
    }
                                         Title                          1;	///< Required element.
//  BEGIN CHOICE <xs:choice>
  $ int                                  __union_citationInspireInteroperabilityRegulation_x005ffin;	///< Union _icommon__union_citationInspireInteroperabilityRegulation_x005ffin selector: set to SOAP_UNION__icommon__union_citationInspireInteroperabilityRegulation_x005ffin_<fieldname>
    union _icommon__union_citationInspireInteroperabilityRegulation_x005ffin
    {
    enum _icommon__citationInspireInteroperabilityRegulation_x005ffin_DateOfPublication
    {
	_icommon__citationInspireInteroperabilityRegulation_x005ffin_DateOfPublication__2010_12_08,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":iso8601Date value="2010-12-08"
    }
                                        *DateOfPublication             ;	///< Choice of element (one of multiple choices).
    }                                    union_citationInspireInteroperabilityRegulation_x005ffin;
//  END OF CHOICE
    enum _icommon__citationInspireInteroperabilityRegulation_x005ffin_URI
    {
	_icommon__citationInspireInteroperabilityRegulation_x005ffin_URI__OJ_x003aL_x003a2010_x003a323_x003a0011_x003a0102_x003aFI_x003aPDF,	///< xs:anyURI value="OJ:L:2010:323:0011:0102:FI:PDF"
    }
                                         URI                            1;	///< Required element.
/// Element "ResourceLocator" of type "http://inspire.ec.europa.eu/schemas/common/1.0":resLocInspireInteroperabilityRegulation_fin.
    icommon__resLocInspireInteroperabilityRegulation_x005ffin*  ResourceLocator                1;	///< Required element.
/*  RESTRICTED FROM icommon__citationConformity:
    END OF RESTRICTED FROM icommon__citationConformity */
/*  RESTRICTED FROM icommon__citation:
    END OF RESTRICTED FROM icommon__citation */
};

/// @brief "http://inspire.ec.europa.eu/schemas/common/1.0":inspireTheme_fre is a complexType with complexContent restriction of type "http://inspire.ec.europa.eu/schemas/common/1.0":inspireTheme.
///
/// @note class icommon__inspireTheme_x005ffre operations:
/// - icommon__inspireTheme_x005ffre* soap_new_icommon__inspireTheme_x005ffre(soap*) allocate and default initialize
/// - icommon__inspireTheme_x005ffre* soap_new_icommon__inspireTheme_x005ffre(soap*, int num) allocate and default initialize an array
/// - icommon__inspireTheme_x005ffre* soap_new_req_icommon__inspireTheme_x005ffre(soap*, ...) allocate, set required members
/// - icommon__inspireTheme_x005ffre* soap_new_set_icommon__inspireTheme_x005ffre(soap*, ...) allocate, set all public members
/// - icommon__inspireTheme_x005ffre::soap_default(soap*) default initialize members
/// - int soap_read_icommon__inspireTheme_x005ffre(soap*, icommon__inspireTheme_x005ffre*) deserialize from a stream
/// - int soap_write_icommon__inspireTheme_x005ffre(soap*, icommon__inspireTheme_x005ffre*) serialize to a stream
/// - icommon__inspireTheme_x005ffre* icommon__inspireTheme_x005ffre::soap_dup(soap*) returns deep copy of icommon__inspireTheme_x005ffre, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - icommon__inspireTheme_x005ffre::soap_del() deep deletes icommon__inspireTheme_x005ffre data members, use only after icommon__inspireTheme_x005ffre::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int icommon__inspireTheme_x005ffre::soap_type() returns SOAP_TYPE_icommon__inspireTheme_x005ffre or derived type identifier
class icommon__inspireTheme_x005ffre : public xsd__anyType
{ public:
/// Element "OriginatingControlledVocabulary" of type "http://inspire.ec.europa.eu/schemas/common/1.0":originatingControlledVocabularyGemetInspireThemes.
    icommon__originatingControlledVocabularyGemetInspireThemes*  OriginatingControlledVocabulary 1;	///< Required element.
    enum _icommon__inspireTheme_x005ffre_KeywordValue
    {
	_icommon__inspireTheme_x005ffre_KeywordValue__Adresses,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Adresses"
	_icommon__inspireTheme_x005ffre_KeywordValue__Altitude,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Altitude"
	_icommon__inspireTheme_x005ffre_KeywordValue__B_x00e2timents,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Bâtiments"
	_icommon__inspireTheme_x005ffre_KeywordValue__Caract_x00e9ristiques_x0020g_x00e9ographiques_x0020m_x00e9t_x00e9orologiques,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Caractéristiques géographiques météorologiques"
	_icommon__inspireTheme_x005ffre_KeywordValue__Caract_x00e9ristiques_x0020g_x00e9ographiques_x0020oc_x00e9anographiques,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Caractéristiques géographiques océanographiques"
	_icommon__inspireTheme_x005ffre_KeywordValue__Conditions_x0020atmosph_x00e9riques,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Conditions atmosphériques"
	_icommon__inspireTheme_x005ffre_KeywordValue__D_x00e9nominations_x0020g_x00e9ographiques,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Dénominations géographiques"
	_icommon__inspireTheme_x005ffre_KeywordValue__G_x00e9ologie,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Géologie"
	_icommon__inspireTheme_x005ffre_KeywordValue__Habitats_x0020et_x0020biotopes,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Habitats et biotopes"
	_icommon__inspireTheme_x005ffre_KeywordValue__Hydrographie,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Hydrographie"
	_icommon__inspireTheme_x005ffre_KeywordValue__Installations_x0020agricoles_x0020et_x0020aquacoles,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Installations agricoles et aquacoles"
	_icommon__inspireTheme_x005ffre_KeywordValue__Installations_x0020de_x0020suivi_x0020environnemental,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Installations de suivi environnemental"
	_icommon__inspireTheme_x005ffre_KeywordValue__Lieux_x0020de_x0020production_x0020et_x0020sites_x0020industriels,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Lieux de production et sites industriels"
	_icommon__inspireTheme_x005ffre_KeywordValue__Occupation_x0020des_x0020terres,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Occupation des terres"
	_icommon__inspireTheme_x005ffre_KeywordValue__Ortho_imagerie,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Ortho-imagerie"
	_icommon__inspireTheme_x005ffre_KeywordValue__Parcelles_x0020cadastrales,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Parcelles cadastrales"
	_icommon__inspireTheme_x005ffre_KeywordValue__R_x00e9f_x00e9rentiels_x0020de_x0020coordonn_x00e9es,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Référentiels de coordonnées"
	_icommon__inspireTheme_x005ffre_KeywordValue__R_x00e9gions_x0020biog_x00e9ographiques,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Régions biogéographiques"
	_icommon__inspireTheme_x005ffre_KeywordValue__R_x00e9gions_x0020maritimes,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Régions maritimes"
	_icommon__inspireTheme_x005ffre_KeywordValue__R_x00e9partition_x0020de_x0020la_x0020population_x0020_x2014_x0020d_x00e9mographie,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Répartition de la population — démographie"
	_icommon__inspireTheme_x005ffre_KeywordValue__R_x00e9partition_x0020des_x0020esp_x00e8ces,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Répartition des espèces"
	_icommon__inspireTheme_x005ffre_KeywordValue__R_x00e9seaux_x0020de_x0020transport,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Réseaux de transport"
	_icommon__inspireTheme_x005ffre_KeywordValue__Ressources_x0020min_x00e9rales,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Ressources minérales"
	_icommon__inspireTheme_x005ffre_KeywordValue__Sant_x00e9_x0020et_x0020s_x00e9curit_x00e9_x0020des_x0020personnes,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Santé et sécurité des personnes"
	_icommon__inspireTheme_x005ffre_KeywordValue__Services_x0020d_x0027utilit_x00e9_x0020publique_x0020et_x0020services_x0020publics,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Services d'utilité publique et services publics"
	_icommon__inspireTheme_x005ffre_KeywordValue__Sites_x0020prot_x00e9g_x00e9s,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Sites protégés"
	_icommon__inspireTheme_x005ffre_KeywordValue__Sols,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Sols"
	_icommon__inspireTheme_x005ffre_KeywordValue__Sources_x0020d_x0027_x00e9nergie,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Sources d'énergie"
	_icommon__inspireTheme_x005ffre_KeywordValue__Syst_x00e8mes_x0020de_x0020maillage_x0020g_x00e9ographique,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Systèmes de maillage géographique"
	_icommon__inspireTheme_x005ffre_KeywordValue__Unit_x00e9s_x0020administratives,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Unités administratives"
	_icommon__inspireTheme_x005ffre_KeywordValue__Unit_x00e9s_x0020statistiques,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Unités statistiques"
	_icommon__inspireTheme_x005ffre_KeywordValue__Usage_x0020des_x0020sols,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Usage des sols"
	_icommon__inspireTheme_x005ffre_KeywordValue__Zones_x0020_x00e0_x0020risque_x0020naturel,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Zones à risque naturel"
	_icommon__inspireTheme_x005ffre_KeywordValue__Zones_x0020de_x0020gestion_x002c_x0020de_x0020restriction_x0020ou_x0020de_x0020r_x00e9glementation_x0020et_x0020unit_x00e9s_x0020de_x0020d_x00e9claration,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Zones de gestion, de restriction ou de réglementation et unités de déclaration"
    }
                                         KeywordValue                   1;	///< Required element.
/*  RESTRICTED FROM icommon__inspireTheme:
    END OF RESTRICTED FROM icommon__inspireTheme */
/*  RESTRICTED FROM icommon__keyword:
    END OF RESTRICTED FROM icommon__keyword */
};

/// @brief "http://inspire.ec.europa.eu/schemas/common/1.0":citationInspireInteroperabilityRegulation_fre is a complexType with complexContent restriction of type "http://inspire.ec.europa.eu/schemas/common/1.0":citationConformity.
///
/// @note class icommon__citationInspireInteroperabilityRegulation_x005ffre operations:
/// - icommon__citationInspireInteroperabilityRegulation_x005ffre* soap_new_icommon__citationInspireInteroperabilityRegulation_x005ffre(soap*) allocate and default initialize
/// - icommon__citationInspireInteroperabilityRegulation_x005ffre* soap_new_icommon__citationInspireInteroperabilityRegulation_x005ffre(soap*, int num) allocate and default initialize an array
/// - icommon__citationInspireInteroperabilityRegulation_x005ffre* soap_new_req_icommon__citationInspireInteroperabilityRegulation_x005ffre(soap*, ...) allocate, set required members
/// - icommon__citationInspireInteroperabilityRegulation_x005ffre* soap_new_set_icommon__citationInspireInteroperabilityRegulation_x005ffre(soap*, ...) allocate, set all public members
/// - icommon__citationInspireInteroperabilityRegulation_x005ffre::soap_default(soap*) default initialize members
/// - int soap_read_icommon__citationInspireInteroperabilityRegulation_x005ffre(soap*, icommon__citationInspireInteroperabilityRegulation_x005ffre*) deserialize from a stream
/// - int soap_write_icommon__citationInspireInteroperabilityRegulation_x005ffre(soap*, icommon__citationInspireInteroperabilityRegulation_x005ffre*) serialize to a stream
/// - icommon__citationInspireInteroperabilityRegulation_x005ffre* icommon__citationInspireInteroperabilityRegulation_x005ffre::soap_dup(soap*) returns deep copy of icommon__citationInspireInteroperabilityRegulation_x005ffre, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - icommon__citationInspireInteroperabilityRegulation_x005ffre::soap_del() deep deletes icommon__citationInspireInteroperabilityRegulation_x005ffre data members, use only after icommon__citationInspireInteroperabilityRegulation_x005ffre::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int icommon__citationInspireInteroperabilityRegulation_x005ffre::soap_type() returns SOAP_TYPE_icommon__citationInspireInteroperabilityRegulation_x005ffre or derived type identifier
class icommon__citationInspireInteroperabilityRegulation_x005ffre : public xsd__anyType
{ public:
    enum _icommon__citationInspireInteroperabilityRegulation_x005ffre_Title
    {
	_icommon__citationInspireInteroperabilityRegulation_x005ffre_Title__R_x00c8GLEMENT_x0020_x0028UE_x0029_x0020N_x0020o_x00201089_x002f2010_x0020DE_x0020LA_x0020COMMISSION_x0020du_x002023_x0020novembre_x00202010_x0020portant_x0020modalit_x00e9s_x0020d_x0027application_x0020de_x0020la_x0020directive_x00202007_x002f2_x002fCE_x0020du_x0020Parlement_x0020europ_x00e9en_x0020et_x0020du_x0020Conseil_x0020en_x0020ce_x0020qui_x0020concerne_x0020l_x0027interop_x00e9rabilit_x00e9_x0020des_x0020s_x00e9ries_x0020et_x0020des_x0020services_x0020de_x0020donn_x00e9es_x0020g_x00e9ographiques,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":notEmptyString value="RÈGLEMENT (UE) N o 1089/2010 DE LA COMMISSION du 23 novembre 2010 portant modalités d'application de la directive 2007/2/CE du Parlement européen et du Conseil en ce qui concerne l'interopérabilité des séries et des services de données géographiques"
    }
                                         Title                          1;	///< Required element.
//  BEGIN CHOICE <xs:choice>
  $ int                                  __union_citationInspireInteroperabilityRegulation_x005ffre;	///< Union _icommon__union_citationInspireInteroperabilityRegulation_x005ffre selector: set to SOAP_UNION__icommon__union_citationInspireInteroperabilityRegulation_x005ffre_<fieldname>
    union _icommon__union_citationInspireInteroperabilityRegulation_x005ffre
    {
    enum _icommon__citationInspireInteroperabilityRegulation_x005ffre_DateOfPublication
    {
	_icommon__citationInspireInteroperabilityRegulation_x005ffre_DateOfPublication__2010_12_08,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":iso8601Date value="2010-12-08"
    }
                                        *DateOfPublication             ;	///< Choice of element (one of multiple choices).
    }                                    union_citationInspireInteroperabilityRegulation_x005ffre;
//  END OF CHOICE
    enum _icommon__citationInspireInteroperabilityRegulation_x005ffre_URI
    {
	_icommon__citationInspireInteroperabilityRegulation_x005ffre_URI__OJ_x003aL_x003a2010_x003a323_x003a0011_x003a0102_x003aFR_x003aPDF,	///< xs:anyURI value="OJ:L:2010:323:0011:0102:FR:PDF"
    }
                                         URI                            1;	///< Required element.
/// Element "ResourceLocator" of type "http://inspire.ec.europa.eu/schemas/common/1.0":resLocInspireInteroperabilityRegulation_fre.
    icommon__resLocInspireInteroperabilityRegulation_x005ffre*  ResourceLocator                1;	///< Required element.
/*  RESTRICTED FROM icommon__citationConformity:
    END OF RESTRICTED FROM icommon__citationConformity */
/*  RESTRICTED FROM icommon__citation:
    END OF RESTRICTED FROM icommon__citation */
};

/// @brief "http://inspire.ec.europa.eu/schemas/common/1.0":inspireTheme_ger is a complexType with complexContent restriction of type "http://inspire.ec.europa.eu/schemas/common/1.0":inspireTheme.
///
/// @note class icommon__inspireTheme_x005fger operations:
/// - icommon__inspireTheme_x005fger* soap_new_icommon__inspireTheme_x005fger(soap*) allocate and default initialize
/// - icommon__inspireTheme_x005fger* soap_new_icommon__inspireTheme_x005fger(soap*, int num) allocate and default initialize an array
/// - icommon__inspireTheme_x005fger* soap_new_req_icommon__inspireTheme_x005fger(soap*, ...) allocate, set required members
/// - icommon__inspireTheme_x005fger* soap_new_set_icommon__inspireTheme_x005fger(soap*, ...) allocate, set all public members
/// - icommon__inspireTheme_x005fger::soap_default(soap*) default initialize members
/// - int soap_read_icommon__inspireTheme_x005fger(soap*, icommon__inspireTheme_x005fger*) deserialize from a stream
/// - int soap_write_icommon__inspireTheme_x005fger(soap*, icommon__inspireTheme_x005fger*) serialize to a stream
/// - icommon__inspireTheme_x005fger* icommon__inspireTheme_x005fger::soap_dup(soap*) returns deep copy of icommon__inspireTheme_x005fger, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - icommon__inspireTheme_x005fger::soap_del() deep deletes icommon__inspireTheme_x005fger data members, use only after icommon__inspireTheme_x005fger::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int icommon__inspireTheme_x005fger::soap_type() returns SOAP_TYPE_icommon__inspireTheme_x005fger or derived type identifier
class icommon__inspireTheme_x005fger : public xsd__anyType
{ public:
/// Element "OriginatingControlledVocabulary" of type "http://inspire.ec.europa.eu/schemas/common/1.0":originatingControlledVocabularyGemetInspireThemes.
    icommon__originatingControlledVocabularyGemetInspireThemes*  OriginatingControlledVocabulary 1;	///< Required element.
    enum _icommon__inspireTheme_x005fger_KeywordValue
    {
	_icommon__inspireTheme_x005fger_KeywordValue__Adressen,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Adressen"
	_icommon__inspireTheme_x005fger_KeywordValue__Atmosph_x00e4rische_x0020Bedingungen,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Atmosphärische Bedingungen"
	_icommon__inspireTheme_x005fger_KeywordValue__Bewirtschaftungsgebiete_x002fSchutzgebiete_x002fgeregelte_x0020Gebiete_x0020und_x0020Berichterstattungseinheiten,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Bewirtschaftungsgebiete/Schutzgebiete/geregelte Gebiete und Berichterstattungseinheiten"
	_icommon__inspireTheme_x005fger_KeywordValue__Biogeografische_x0020Regionen,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Biogeografische Regionen"
	_icommon__inspireTheme_x005fger_KeywordValue__Boden,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Boden"
	_icommon__inspireTheme_x005fger_KeywordValue__Bodenbedeckung,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Bodenbedeckung"
	_icommon__inspireTheme_x005fger_KeywordValue__Bodennutzung,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Bodennutzung"
	_icommon__inspireTheme_x005fger_KeywordValue__Energiequellen,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Energiequellen"
	_icommon__inspireTheme_x005fger_KeywordValue__Flurst_x00fccke_x002fGrundst_x00fccke_x0020_x0028Katasterparzellen_x0029,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Flurstücke/Grundstücke (Katasterparzellen)"
	_icommon__inspireTheme_x005fger_KeywordValue__Geb_x00e4ude,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Gebäude"
	_icommon__inspireTheme_x005fger_KeywordValue__Gebiete_x0020mit_x0020naturbedingten_x0020Risiken,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Gebiete mit naturbedingten Risiken"
	_icommon__inspireTheme_x005fger_KeywordValue__Geografische_x0020Bezeichnungen,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Geografische Bezeichnungen"
	_icommon__inspireTheme_x005fger_KeywordValue__Geografische_x0020Gittersysteme,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Geografische Gittersysteme"
	_icommon__inspireTheme_x005fger_KeywordValue__Geologie,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Geologie"
	_icommon__inspireTheme_x005fger_KeywordValue__Gesundheit_x0020und_x0020Sicherheit,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Gesundheit und Sicherheit"
	_icommon__inspireTheme_x005fger_KeywordValue__Gew_x00e4ssernetz,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Gewässernetz"
	_icommon__inspireTheme_x005fger_KeywordValue__H_x00f6he,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Höhe"
	_icommon__inspireTheme_x005fger_KeywordValue__Koordinatenreferenzsysteme,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Koordinatenreferenzsysteme"
	_icommon__inspireTheme_x005fger_KeywordValue__Landwirtschaftliche_x0020Anlagen_x0020und_x0020Aquakulturanlagen,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Landwirtschaftliche Anlagen und Aquakulturanlagen"
	_icommon__inspireTheme_x005fger_KeywordValue__Lebensr_x00e4ume_x0020und_x0020Biotope,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Lebensräume und Biotope"
	_icommon__inspireTheme_x005fger_KeywordValue__Meeresregionen,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Meeresregionen"
	_icommon__inspireTheme_x005fger_KeywordValue__Meteorologisch_geografische_x0020Kennwerte,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Meteorologisch-geografische Kennwerte"
	_icommon__inspireTheme_x005fger_KeywordValue__Mineralische_x0020Bodensch_x00e4tze,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Mineralische Bodenschätze"
	_icommon__inspireTheme_x005fger_KeywordValue__Orthofotografie,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Orthofotografie"
	_icommon__inspireTheme_x005fger_KeywordValue__Ozeanografisch_geografische_x0020Kennwerte,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Ozeanografisch-geografische Kennwerte"
	_icommon__inspireTheme_x005fger_KeywordValue__Produktions__x0020und_x0020Industrieanlagen,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Produktions- und Industrieanlagen"
	_icommon__inspireTheme_x005fger_KeywordValue__Schutzgebiete,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Schutzgebiete"
	_icommon__inspireTheme_x005fger_KeywordValue__Statistische_x0020Einheiten,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Statistische Einheiten"
	_icommon__inspireTheme_x005fger_KeywordValue__Umwelt_x00fcberwachung,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Umweltüberwachung"
	_icommon__inspireTheme_x005fger_KeywordValue__Verkehrsnetze,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Verkehrsnetze"
	_icommon__inspireTheme_x005fger_KeywordValue__Versorgungswirtschaft_x0020und_x0020staatliche_x0020Dienste,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Versorgungswirtschaft und staatliche Dienste"
	_icommon__inspireTheme_x005fger_KeywordValue__Verteilung_x0020der_x0020Arten,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Verteilung der Arten"
	_icommon__inspireTheme_x005fger_KeywordValue__Verteilung_x0020der_x0020Bev_x00f6lkerung_x0020_x2014_x0020Demografie,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Verteilung der Bevölkerung — Demografie"
	_icommon__inspireTheme_x005fger_KeywordValue__Verwaltungseinheiten,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Verwaltungseinheiten"
    }
                                         KeywordValue                   1;	///< Required element.
/*  RESTRICTED FROM icommon__inspireTheme:
    END OF RESTRICTED FROM icommon__inspireTheme */
/*  RESTRICTED FROM icommon__keyword:
    END OF RESTRICTED FROM icommon__keyword */
};

/// @brief "http://inspire.ec.europa.eu/schemas/common/1.0":citationInspireInteroperabilityRegulation_ger is a complexType with complexContent restriction of type "http://inspire.ec.europa.eu/schemas/common/1.0":citationConformity.
///
/// @note class icommon__citationInspireInteroperabilityRegulation_x005fger operations:
/// - icommon__citationInspireInteroperabilityRegulation_x005fger* soap_new_icommon__citationInspireInteroperabilityRegulation_x005fger(soap*) allocate and default initialize
/// - icommon__citationInspireInteroperabilityRegulation_x005fger* soap_new_icommon__citationInspireInteroperabilityRegulation_x005fger(soap*, int num) allocate and default initialize an array
/// - icommon__citationInspireInteroperabilityRegulation_x005fger* soap_new_req_icommon__citationInspireInteroperabilityRegulation_x005fger(soap*, ...) allocate, set required members
/// - icommon__citationInspireInteroperabilityRegulation_x005fger* soap_new_set_icommon__citationInspireInteroperabilityRegulation_x005fger(soap*, ...) allocate, set all public members
/// - icommon__citationInspireInteroperabilityRegulation_x005fger::soap_default(soap*) default initialize members
/// - int soap_read_icommon__citationInspireInteroperabilityRegulation_x005fger(soap*, icommon__citationInspireInteroperabilityRegulation_x005fger*) deserialize from a stream
/// - int soap_write_icommon__citationInspireInteroperabilityRegulation_x005fger(soap*, icommon__citationInspireInteroperabilityRegulation_x005fger*) serialize to a stream
/// - icommon__citationInspireInteroperabilityRegulation_x005fger* icommon__citationInspireInteroperabilityRegulation_x005fger::soap_dup(soap*) returns deep copy of icommon__citationInspireInteroperabilityRegulation_x005fger, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - icommon__citationInspireInteroperabilityRegulation_x005fger::soap_del() deep deletes icommon__citationInspireInteroperabilityRegulation_x005fger data members, use only after icommon__citationInspireInteroperabilityRegulation_x005fger::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int icommon__citationInspireInteroperabilityRegulation_x005fger::soap_type() returns SOAP_TYPE_icommon__citationInspireInteroperabilityRegulation_x005fger or derived type identifier
class icommon__citationInspireInteroperabilityRegulation_x005fger : public xsd__anyType
{ public:
    enum _icommon__citationInspireInteroperabilityRegulation_x005fger_Title
    {
	_icommon__citationInspireInteroperabilityRegulation_x005fger_Title__VERORDNUNG_x0020_x0028EG_x0029_x0020Nr_x002e_x00201089_x002f2010_x0020DER_x0020KOMMISSION_x0020vom_x002023_x002e_x0020November_x00202010_x0020zur_x0020Durchf_x00fchrung_x0020der_x0020Richtlinie_x00202007_x002f2_x002fEG_x0020des_x0020Europ_x00e4ischen_x0020Parlaments_x0020und_x0020des_x0020Rates_x0020hinsichtlich_x0020der_x0020Interoperabilit_x00e4t_x0020von_x0020Geodatens_x00e4tzen_x0020und_x0020_diensten,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":notEmptyString value="VERORDNUNG (EG) Nr. 1089/2010 DER KOMMISSION vom 23. November 2010 zur Durchführung der Richtlinie 2007/2/EG des Europäischen Parlaments und des Rates hinsichtlich der Interoperabilität von Geodatensätzen und -diensten"
    }
                                         Title                          1;	///< Required element.
//  BEGIN CHOICE <xs:choice>
  $ int                                  __union_citationInspireInteroperabilityRegulation_x005fger;	///< Union _icommon__union_citationInspireInteroperabilityRegulation_x005fger selector: set to SOAP_UNION__icommon__union_citationInspireInteroperabilityRegulation_x005fger_<fieldname>
    union _icommon__union_citationInspireInteroperabilityRegulation_x005fger
    {
    enum _icommon__citationInspireInteroperabilityRegulation_x005fger_DateOfPublication
    {
	_icommon__citationInspireInteroperabilityRegulation_x005fger_DateOfPublication__2010_12_08,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":iso8601Date value="2010-12-08"
    }
                                        *DateOfPublication             ;	///< Choice of element (one of multiple choices).
    }                                    union_citationInspireInteroperabilityRegulation_x005fger;
//  END OF CHOICE
    enum _icommon__citationInspireInteroperabilityRegulation_x005fger_URI
    {
	_icommon__citationInspireInteroperabilityRegulation_x005fger_URI__OJ_x003aL_x003a2010_x003a323_x003a0011_x003a0102_x003aDE_x003aPDF,	///< xs:anyURI value="OJ:L:2010:323:0011:0102:DE:PDF"
    }
                                         URI                            1;	///< Required element.
/// Element "ResourceLocator" of type "http://inspire.ec.europa.eu/schemas/common/1.0":resLocInspireInteroperabilityRegulation_ger.
    icommon__resLocInspireInteroperabilityRegulation_x005fger*  ResourceLocator                1;	///< Required element.
/*  RESTRICTED FROM icommon__citationConformity:
    END OF RESTRICTED FROM icommon__citationConformity */
/*  RESTRICTED FROM icommon__citation:
    END OF RESTRICTED FROM icommon__citation */
};

/// @brief "http://inspire.ec.europa.eu/schemas/common/1.0":inspireTheme_gle is a complexType with complexContent restriction of type "http://inspire.ec.europa.eu/schemas/common/1.0":inspireTheme.
///
/// @note class icommon__inspireTheme_x005fgle operations:
/// - icommon__inspireTheme_x005fgle* soap_new_icommon__inspireTheme_x005fgle(soap*) allocate and default initialize
/// - icommon__inspireTheme_x005fgle* soap_new_icommon__inspireTheme_x005fgle(soap*, int num) allocate and default initialize an array
/// - icommon__inspireTheme_x005fgle* soap_new_req_icommon__inspireTheme_x005fgle(soap*, ...) allocate, set required members
/// - icommon__inspireTheme_x005fgle* soap_new_set_icommon__inspireTheme_x005fgle(soap*, ...) allocate, set all public members
/// - icommon__inspireTheme_x005fgle::soap_default(soap*) default initialize members
/// - int soap_read_icommon__inspireTheme_x005fgle(soap*, icommon__inspireTheme_x005fgle*) deserialize from a stream
/// - int soap_write_icommon__inspireTheme_x005fgle(soap*, icommon__inspireTheme_x005fgle*) serialize to a stream
/// - icommon__inspireTheme_x005fgle* icommon__inspireTheme_x005fgle::soap_dup(soap*) returns deep copy of icommon__inspireTheme_x005fgle, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - icommon__inspireTheme_x005fgle::soap_del() deep deletes icommon__inspireTheme_x005fgle data members, use only after icommon__inspireTheme_x005fgle::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int icommon__inspireTheme_x005fgle::soap_type() returns SOAP_TYPE_icommon__inspireTheme_x005fgle or derived type identifier
class icommon__inspireTheme_x005fgle : public xsd__anyType
{ public:
/// Element "OriginatingControlledVocabulary" of type "http://inspire.ec.europa.eu/schemas/common/1.0":originatingControlledVocabularyGemetInspireThemes.
    icommon__originatingControlledVocabularyGemetInspireThemes*  OriginatingControlledVocabulary 1;	///< Required element.
    enum _icommon__inspireTheme_x005fgle_KeywordValue
    {
	_icommon__inspireTheme_x005fgle_KeywordValue__Addresses,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Addresses"
	_icommon__inspireTheme_x005fgle_KeywordValue__Administrative_x0020units,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Administrative units"
	_icommon__inspireTheme_x005fgle_KeywordValue__Agricultural_x0020and_x0020aquaculture_x0020facilities,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Agricultural and aquaculture facilities"
	_icommon__inspireTheme_x005fgle_KeywordValue__Area_x0020management_x002frestriction_x002fregulation_x0020zones_x0020and_x0020reporting_x0020units,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Area management/restriction/regulation zones and reporting units"
	_icommon__inspireTheme_x005fgle_KeywordValue__Atmospheric_x0020conditions,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Atmospheric conditions"
	_icommon__inspireTheme_x005fgle_KeywordValue__Bio_geographical_x0020regions,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Bio-geographical regions"
	_icommon__inspireTheme_x005fgle_KeywordValue__Buildings,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Buildings"
	_icommon__inspireTheme_x005fgle_KeywordValue__Cadastral_x0020parcels,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Cadastral parcels"
	_icommon__inspireTheme_x005fgle_KeywordValue__Coordinate_x0020reference_x0020systems,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Coordinate reference systems"
	_icommon__inspireTheme_x005fgle_KeywordValue__Elevation,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Elevation"
	_icommon__inspireTheme_x005fgle_KeywordValue__Energy_x0020resources,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Energy resources"
	_icommon__inspireTheme_x005fgle_KeywordValue__Environmental_x0020monitoring_x0020facilities,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Environmental monitoring facilities"
	_icommon__inspireTheme_x005fgle_KeywordValue__Geographical_x0020grid_x0020systems,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Geographical grid systems"
	_icommon__inspireTheme_x005fgle_KeywordValue__Geographical_x0020names,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Geographical names"
	_icommon__inspireTheme_x005fgle_KeywordValue__Geology,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Geology"
	_icommon__inspireTheme_x005fgle_KeywordValue__Habitats_x0020and_x0020biotopes,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Habitats and biotopes"
	_icommon__inspireTheme_x005fgle_KeywordValue__Human_x0020health_x0020and_x0020safety,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Human health and safety"
	_icommon__inspireTheme_x005fgle_KeywordValue__Hydrography,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Hydrography"
	_icommon__inspireTheme_x005fgle_KeywordValue__Land_x0020cover,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Land cover"
	_icommon__inspireTheme_x005fgle_KeywordValue__Land_x0020use,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Land use"
	_icommon__inspireTheme_x005fgle_KeywordValue__Meteorological_x0020geographical_x0020features,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Meteorological geographical features"
	_icommon__inspireTheme_x005fgle_KeywordValue__Mineral_x0020resources,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Mineral resources"
	_icommon__inspireTheme_x005fgle_KeywordValue__Natural_x0020risk_x0020zones,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Natural risk zones"
	_icommon__inspireTheme_x005fgle_KeywordValue__Oceanographic_x0020geographical_x0020features,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Oceanographic geographical features"
	_icommon__inspireTheme_x005fgle_KeywordValue__Orthoimagery,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Orthoimagery"
	_icommon__inspireTheme_x005fgle_KeywordValue__Population_x0020distribution_x0020_x2014_x0020demography,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Population distribution — demography"
	_icommon__inspireTheme_x005fgle_KeywordValue__Production_x0020and_x0020industrial_x0020facilities,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Production and industrial facilities"
	_icommon__inspireTheme_x005fgle_KeywordValue__Protected_x0020sites,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Protected sites"
	_icommon__inspireTheme_x005fgle_KeywordValue__Sea_x0020regions,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Sea regions"
	_icommon__inspireTheme_x005fgle_KeywordValue__Soil,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Soil"
	_icommon__inspireTheme_x005fgle_KeywordValue__Species_x0020distribution,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Species distribution"
	_icommon__inspireTheme_x005fgle_KeywordValue__Statistical_x0020units,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Statistical units"
	_icommon__inspireTheme_x005fgle_KeywordValue__Transport_x0020networks,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Transport networks"
	_icommon__inspireTheme_x005fgle_KeywordValue__Utility_x0020and_x0020governmental_x0020services,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Utility and governmental services"
    }
                                         KeywordValue                   1;	///< Required element.
/*  RESTRICTED FROM icommon__inspireTheme:
    END OF RESTRICTED FROM icommon__inspireTheme */
/*  RESTRICTED FROM icommon__keyword:
    END OF RESTRICTED FROM icommon__keyword */
};

/// @brief "http://inspire.ec.europa.eu/schemas/common/1.0":citationInspireInteroperabilityRegulation_gle is a complexType with complexContent restriction of type "http://inspire.ec.europa.eu/schemas/common/1.0":citationConformity.
///
/// @note class icommon__citationInspireInteroperabilityRegulation_x005fgle operations:
/// - icommon__citationInspireInteroperabilityRegulation_x005fgle* soap_new_icommon__citationInspireInteroperabilityRegulation_x005fgle(soap*) allocate and default initialize
/// - icommon__citationInspireInteroperabilityRegulation_x005fgle* soap_new_icommon__citationInspireInteroperabilityRegulation_x005fgle(soap*, int num) allocate and default initialize an array
/// - icommon__citationInspireInteroperabilityRegulation_x005fgle* soap_new_req_icommon__citationInspireInteroperabilityRegulation_x005fgle(soap*, ...) allocate, set required members
/// - icommon__citationInspireInteroperabilityRegulation_x005fgle* soap_new_set_icommon__citationInspireInteroperabilityRegulation_x005fgle(soap*, ...) allocate, set all public members
/// - icommon__citationInspireInteroperabilityRegulation_x005fgle::soap_default(soap*) default initialize members
/// - int soap_read_icommon__citationInspireInteroperabilityRegulation_x005fgle(soap*, icommon__citationInspireInteroperabilityRegulation_x005fgle*) deserialize from a stream
/// - int soap_write_icommon__citationInspireInteroperabilityRegulation_x005fgle(soap*, icommon__citationInspireInteroperabilityRegulation_x005fgle*) serialize to a stream
/// - icommon__citationInspireInteroperabilityRegulation_x005fgle* icommon__citationInspireInteroperabilityRegulation_x005fgle::soap_dup(soap*) returns deep copy of icommon__citationInspireInteroperabilityRegulation_x005fgle, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - icommon__citationInspireInteroperabilityRegulation_x005fgle::soap_del() deep deletes icommon__citationInspireInteroperabilityRegulation_x005fgle data members, use only after icommon__citationInspireInteroperabilityRegulation_x005fgle::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int icommon__citationInspireInteroperabilityRegulation_x005fgle::soap_type() returns SOAP_TYPE_icommon__citationInspireInteroperabilityRegulation_x005fgle or derived type identifier
class icommon__citationInspireInteroperabilityRegulation_x005fgle : public xsd__anyType
{ public:
    enum _icommon__citationInspireInteroperabilityRegulation_x005fgle_Title
    {
	_icommon__citationInspireInteroperabilityRegulation_x005fgle_Title__COMMISSION_x0020REGULATION_x0020_x0028EU_x0029_x0020No_x00201089_x002f2010_x0020of_x002023_x0020November_x00202010_x0020implementing_x0020Directive_x00202007_x002f2_x002fEC_x0020of_x0020the_x0020European_x0020Parliament_x0020and_x0020of_x0020the_x0020Council_x0020as_x0020regards_x0020interoperability_x0020of_x0020spatial_x0020data_x0020sets_x0020and_x0020services,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":notEmptyString value="COMMISSION REGULATION (EU) No 1089/2010 of 23 November 2010 implementing Directive 2007/2/EC of the European Parliament and of the Council as regards interoperability of spatial data sets and services"
    }
                                         Title                          1;	///< Required element.
//  BEGIN CHOICE <xs:choice>
  $ int                                  __union_citationInspireInteroperabilityRegulation_x005fgle;	///< Union _icommon__union_citationInspireInteroperabilityRegulation_x005fgle selector: set to SOAP_UNION__icommon__union_citationInspireInteroperabilityRegulation_x005fgle_<fieldname>
    union _icommon__union_citationInspireInteroperabilityRegulation_x005fgle
    {
    enum _icommon__citationInspireInteroperabilityRegulation_x005fgle_DateOfPublication
    {
	_icommon__citationInspireInteroperabilityRegulation_x005fgle_DateOfPublication__2010_12_08,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":iso8601Date value="2010-12-08"
    }
                                        *DateOfPublication             ;	///< Choice of element (one of multiple choices).
    }                                    union_citationInspireInteroperabilityRegulation_x005fgle;
//  END OF CHOICE
    enum _icommon__citationInspireInteroperabilityRegulation_x005fgle_URI
    {
	_icommon__citationInspireInteroperabilityRegulation_x005fgle_URI__OJ_x003aL_x003a2010_x003a323_x003a0011_x003a0102_x003aEN_x003aPDF,	///< xs:anyURI value="OJ:L:2010:323:0011:0102:EN:PDF"
    }
                                         URI                            1;	///< Required element.
/// Element "ResourceLocator" of type "http://inspire.ec.europa.eu/schemas/common/1.0":resLocInspireInteroperabilityRegulation_gle.
    icommon__resLocInspireInteroperabilityRegulation_x005fgle*  ResourceLocator                1;	///< Required element.
/*  RESTRICTED FROM icommon__citationConformity:
    END OF RESTRICTED FROM icommon__citationConformity */
/*  RESTRICTED FROM icommon__citation:
    END OF RESTRICTED FROM icommon__citation */
};

/// @brief "http://inspire.ec.europa.eu/schemas/common/1.0":inspireTheme_gre is a complexType with complexContent restriction of type "http://inspire.ec.europa.eu/schemas/common/1.0":inspireTheme.
///
/// @note class icommon__inspireTheme_x005fgre operations:
/// - icommon__inspireTheme_x005fgre* soap_new_icommon__inspireTheme_x005fgre(soap*) allocate and default initialize
/// - icommon__inspireTheme_x005fgre* soap_new_icommon__inspireTheme_x005fgre(soap*, int num) allocate and default initialize an array
/// - icommon__inspireTheme_x005fgre* soap_new_req_icommon__inspireTheme_x005fgre(soap*, ...) allocate, set required members
/// - icommon__inspireTheme_x005fgre* soap_new_set_icommon__inspireTheme_x005fgre(soap*, ...) allocate, set all public members
/// - icommon__inspireTheme_x005fgre::soap_default(soap*) default initialize members
/// - int soap_read_icommon__inspireTheme_x005fgre(soap*, icommon__inspireTheme_x005fgre*) deserialize from a stream
/// - int soap_write_icommon__inspireTheme_x005fgre(soap*, icommon__inspireTheme_x005fgre*) serialize to a stream
/// - icommon__inspireTheme_x005fgre* icommon__inspireTheme_x005fgre::soap_dup(soap*) returns deep copy of icommon__inspireTheme_x005fgre, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - icommon__inspireTheme_x005fgre::soap_del() deep deletes icommon__inspireTheme_x005fgre data members, use only after icommon__inspireTheme_x005fgre::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int icommon__inspireTheme_x005fgre::soap_type() returns SOAP_TYPE_icommon__inspireTheme_x005fgre or derived type identifier
class icommon__inspireTheme_x005fgre : public xsd__anyType
{ public:
/// Element "OriginatingControlledVocabulary" of type "http://inspire.ec.europa.eu/schemas/common/1.0":originatingControlledVocabularyGemetInspireThemes.
    icommon__originatingControlledVocabularyGemetInspireThemes*  OriginatingControlledVocabulary 1;	///< Required element.
    enum _icommon__inspireTheme_x005fgre_KeywordValue
    {
	_icommon__inspireTheme_x005fgre_KeywordValue___x0391_x03bd_x03b8_x03c1_x03ce_x03c0_x03b9_x03bd_x03b7_x0020_x03c5_x03b3_x03b5_x03af_x03b1_x0020_x03ba_x03b1_x03b9_x0020_x03b1_x03c3_x03c6_x03ac_x03bb_x03b5_x03b9_x03b1,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Ανθρώπινη υγεία και ασφάλεια"
	_icommon__inspireTheme_x005fgre_KeywordValue___x0391_x03c4_x03bc_x03bf_x03c3_x03c6_x03b1_x03b9_x03c1_x03b9_x03ba_x03ad_x03c2_x0020_x03c3_x03c5_x03bd_x03b8_x03ae_x03ba_x03b5_x03c2,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Ατμοσφαιρικές συνθήκες"
	_icommon__inspireTheme_x005fgre_KeywordValue___x0392_x03b9_x03bf_x03b3_x03b5_x03c9_x03b3_x03c1_x03b1_x03c6_x03b9_x03ba_x03ad_x03c2_x0020_x03c0_x03b5_x03c1_x03b9_x03bf_x03c7_x03ad_x03c2,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Βιογεωγραφικές περιοχές"
	_icommon__inspireTheme_x005fgre_KeywordValue___x0393_x03b5_x03c9_x03bb_x03bf_x03b3_x03af_x03b1,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Γεωλογία"
	_icommon__inspireTheme_x005fgre_KeywordValue___x0393_x03b5_x03c9_x03c1_x03b3_x03b9_x03ba_x03ad_x03c2_x0020_x03b5_x03b3_x03ba_x03b1_x03c4_x03b1_x03c3_x03c4_x03ac_x03c3_x03b5_x03b9_x03c2_x0020_x03ba_x03b1_x03b9_x0020_x03b5_x03b3_x03ba_x03b1_x03c4_x03b1_x03c3_x03c4_x03ac_x03c3_x03b5_x03b9_x03c2_x0020_x03c5_x03b4_x03b1_x03c4_x03bf_x03ba_x03b1_x03bb_x03bb_x03b9_x03ad_x03c1_x03b3_x03b5_x03b9_x03b1_x03c2,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Γεωργικές εγκαταστάσεις και εγκαταστάσεις υδατοκαλλιέργειας"
	_icommon__inspireTheme_x005fgre_KeywordValue___x0393_x03b5_x03c9_x03c4_x03b5_x03bc_x03ac_x03c7_x03b9_x03b1_x0020_x03ba_x03c4_x03b7_x03bc_x03b1_x03c4_x03bf_x03bb_x03bf_x03b3_x03af_x03bf_x03c5,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Γεωτεμάχια κτηματολογίου"
	_icommon__inspireTheme_x005fgre_KeywordValue___x0394_x03b9_x03b5_x03c5_x03b8_x03cd_x03bd_x03c3_x03b5_x03b9_x03c2,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Διευθύνσεις"
	_icommon__inspireTheme_x005fgre_KeywordValue___x0394_x03af_x03ba_x03c4_x03c5_x03b1_x0020_x03bc_x03b5_x03c4_x03b1_x03c6_x03bf_x03c1_x03ce_x03bd,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Δίκτυα μεταφορών"
	_icommon__inspireTheme_x005fgre_KeywordValue___x0394_x03b9_x03bf_x03b9_x03ba_x03b7_x03c4_x03b9_x03ba_x03ad_x03c2_x0020_x03b5_x03bd_x03cc_x03c4_x03b7_x03c4_x03b5_x03c2,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Διοικητικές ενότητες"
	_icommon__inspireTheme_x005fgre_KeywordValue___x0395_x03b3_x03ba_x03b1_x03c4_x03b1_x03c3_x03c4_x03ac_x03c3_x03b5_x03b9_x03c2_x0020_x03c0_x03b1_x03c1_x03b1_x03b3_x03c9_x03b3_x03ae_x03c2_x0020_x03ba_x03b1_x03b9_x0020_x03b2_x03b9_x03bf_x03bc_x03b7_x03c7_x03b1_x03bd_x03b9_x03ba_x03ad_x03c2_x0020_x03b5_x03b3_x03ba_x03b1_x03c4_x03b1_x03c3_x03c4_x03ac_x03c3_x03b5_x03b9_x03c2,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Εγκαταστάσεις παραγωγής και βιομηχανικές εγκαταστάσεις"
	_icommon__inspireTheme_x005fgre_KeywordValue___x0395_x03b3_x03ba_x03b1_x03c4_x03b1_x03c3_x03c4_x03ac_x03c3_x03b5_x03b9_x03c2_x0020_x03c0_x03b1_x03c1_x03b1_x03ba_x03bf_x03bb_x03bf_x03cd_x03b8_x03b7_x03c3_x03b7_x03c2_x0020_x03c4_x03bf_x03c5_x0020_x03c0_x03b5_x03c1_x03b9_x03b2_x03ac_x03bb_x03bb_x03bf_x03bd_x03c4_x03bf_x03c2,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Εγκαταστάσεις παρακολούθησης του περιβάλλοντος"
	_icommon__inspireTheme_x005fgre_KeywordValue___x0388_x03b4_x03b1_x03c6_x03bf_x03c2,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Έδαφος"
	_icommon__inspireTheme_x005fgre_KeywordValue___x0395_x03bd_x03b4_x03b9_x03b1_x03b9_x03c4_x03ae_x03bc_x03b1_x03c4_x03b1_x0020_x03ba_x03b1_x03b9_x0020_x03b2_x03b9_x03cc_x03c4_x03bf_x03c0_x03bf_x03b9,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Ενδιαιτήματα και βιότοποι"
	_icommon__inspireTheme_x005fgre_KeywordValue___x0395_x03bd_x03b5_x03c1_x03b3_x03b5_x03b9_x03b1_x03ba_x03bf_x03af_x0020_x03c0_x03cc_x03c1_x03bf_x03b9,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Ενεργειακοί πόροι"
	_icommon__inspireTheme_x005fgre_KeywordValue___x0395_x03c0_x03b9_x03c7_x03b5_x03b9_x03c1_x03ae_x03c3_x03b5_x03b9_x03c2_x0020_x03ba_x03bf_x03b9_x03bd_x03ae_x03c2_x0020_x03c9_x03c6_x03b5_x03bb_x03b5_x03af_x03b1_x03c2_x0020_x03ba_x03b1_x03b9_x0020_x03ba_x03c1_x03b1_x03c4_x03b9_x03ba_x03ad_x03c2_x0020_x03c5_x03c0_x03b7_x03c1_x03b5_x03c3_x03af_x03b5_x03c2,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Επιχειρήσεις κοινής ωφελείας και κρατικές υπηρεσίες"
	_icommon__inspireTheme_x005fgre_KeywordValue___x0396_x03ce_x03bd_x03b5_x03c2_x0020_x03b4_x03b9_x03b1_x03c7_x03b5_x03af_x03c1_x03b9_x03c3_x03b7_x03c2_x002f_x03c0_x03b5_x03c1_x03b9_x03bf_x03c1_x03b9_x03c3_x03bc_x03bf_x03cd_x002f_x03c1_x03cd_x03b8_x03bc_x03b9_x03c3_x03b7_x03c2_x0020_x03b5_x03ba_x03c4_x03ac_x03c3_x03b5_x03c9_x03bd_x0020_x03ba_x03b1_x03b9_x0020_x03bc_x03bf_x03bd_x03ac_x03b4_x03b5_x03c2_x0020_x03b1_x03bd_x03b1_x03c6_x03bf_x03c1_x03ac_x03c2,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Ζώνες διαχείρισης/περιορισμού/ρύθμισης εκτάσεων και μονάδες αναφοράς"
	_icommon__inspireTheme_x005fgre_KeywordValue___x0396_x03ce_x03bd_x03b5_x03c2_x0020_x03c6_x03c5_x03c3_x03b9_x03ba_x03ce_x03bd_x0020_x03ba_x03b9_x03bd_x03b4_x03cd_x03bd_x03c9_x03bd,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Ζώνες φυσικών κινδύνων"
	_icommon__inspireTheme_x005fgre_KeywordValue___x0398_x03b1_x03bb_x03ac_x03c3_x03c3_x03b9_x03b5_x03c2_x0020_x03c0_x03b5_x03c1_x03b9_x03bf_x03c7_x03ad_x03c2,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Θαλάσσιες περιοχές"
	_icommon__inspireTheme_x005fgre_KeywordValue___x039a_x03ac_x03bb_x03c5_x03c8_x03b7_x0020_x03b3_x03b7_x03c2,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Κάλυψη γης"
	_icommon__inspireTheme_x005fgre_KeywordValue___x039a_x03b1_x03c4_x03b1_x03bd_x03bf_x03bc_x03ae_x0020_x03b5_x03b9_x03b4_x03ce_x03bd,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Κατανομή ειδών"
	_icommon__inspireTheme_x005fgre_KeywordValue___x039a_x03b1_x03c4_x03b1_x03bd_x03bf_x03bc_x03ae_x0020_x03c0_x03bb_x03b7_x03b8_x03c5_x03c3_x03bc_x03bf_x03cd_x0020_x2014_x0020_x03b4_x03b7_x03bc_x03bf_x03b3_x03c1_x03b1_x03c6_x03af_x03b1,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Κατανομή πληθυσμού — δημογραφία"
	_icommon__inspireTheme_x005fgre_KeywordValue___x039a_x03c4_x03af_x03c1_x03b9_x03b1,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Κτίρια"
	_icommon__inspireTheme_x005fgre_KeywordValue___x039c_x03b5_x03c4_x03b5_x03c9_x03c1_x03bf_x03bb_x03bf_x03b3_x03b9_x03ba_x03ac_x0020_x03b3_x03b5_x03c9_x03b3_x03c1_x03b1_x03c6_x03b9_x03ba_x03ac_x0020_x03c7_x03b1_x03c1_x03b1_x03ba_x03c4_x03b7_x03c1_x03b9_x03c3_x03c4_x03b9_x03ba_x03ac,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Μετεωρολογικά γεωγραφικά χαρακτηριστικά"
	_icommon__inspireTheme_x005fgre_KeywordValue___x039f_x03c1_x03b8_x03bf_x03c6_x03c9_x03c4_x03bf_x03b3_x03c1_x03b1_x03c6_x03af_x03b1,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Ορθοφωτογραφία"
	_icommon__inspireTheme_x005fgre_KeywordValue___x039f_x03c1_x03c5_x03ba_x03c4_x03bf_x03af_x0020_x03c0_x03cc_x03c1_x03bf_x03b9,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Ορυκτοί πόροι"
	_icommon__inspireTheme_x005fgre_KeywordValue___x03a0_x03c1_x03bf_x03c3_x03c4_x03b1_x03c4_x03b5_x03c5_x03cc_x03bc_x03b5_x03bd_x03b5_x03c2_x0020_x03c4_x03bf_x03c0_x03bf_x03b8_x03b5_x03c3_x03af_x03b5_x03c2,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Προστατευόμενες τοποθεσίες"
	_icommon__inspireTheme_x005fgre_KeywordValue___x03a3_x03c4_x03b1_x03c4_x03b9_x03c3_x03c4_x03b9_x03ba_x03ad_x03c2_x0020_x03bc_x03bf_x03bd_x03ac_x03b4_x03b5_x03c2,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Στατιστικές μονάδες"
	_icommon__inspireTheme_x005fgre_KeywordValue___x03a3_x03c5_x03c3_x03c4_x03ae_x03bc_x03b1_x03c4_x03b1_x0020_x03b3_x03b5_x03c9_x03b3_x03c1_x03b1_x03c6_x03b9_x03ba_x03bf_x03cd_x0020_x03ba_x03b1_x03bd_x03bd_x03ac_x03b2_x03bf_x03c5,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Συστήματα γεωγραφικού καννάβου"
	_icommon__inspireTheme_x005fgre_KeywordValue___x03a3_x03c5_x03c3_x03c4_x03ae_x03bc_x03b1_x03c4_x03b1_x0020_x03c3_x03c5_x03bd_x03c4_x03b5_x03c4_x03b1_x03b3_x03bc_x03ad_x03bd_x03c9_x03bd,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Συστήματα συντεταγμένων"
	_icommon__inspireTheme_x005fgre_KeywordValue___x03a4_x03bf_x03c0_x03c9_x03bd_x03cd_x03bc_x03b9_x03b1,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Τοπωνύμια"
	_icommon__inspireTheme_x005fgre_KeywordValue___x03a5_x03b4_x03c1_x03bf_x03b3_x03c1_x03b1_x03c6_x03af_x03b1,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Υδρογραφία"
	_icommon__inspireTheme_x005fgre_KeywordValue___x03a5_x03c8_x03bf_x03bc_x03b5_x03c4_x03c1_x03af_x03b1,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Υψομετρία"
	_icommon__inspireTheme_x005fgre_KeywordValue___x03a7_x03c1_x03ae_x03c3_x03b5_x03b9_x03c2_x0020_x03b3_x03b7_x03c2,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Χρήσεις γης"
	_icommon__inspireTheme_x005fgre_KeywordValue___x03a9_x03ba_x03b5_x03b1_x03bd_x03bf_x03b3_x03c1_x03b1_x03c6_x03b9_x03ba_x03ac_x0020_x03b3_x03b5_x03c9_x03b3_x03c1_x03b1_x03c6_x03b9_x03ba_x03ac_x0020_x03c7_x03b1_x03c1_x03b1_x03ba_x03c4_x03b7_x03c1_x03b9_x03c3_x03c4_x03b9_x03ba_x03ac,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Ωκεανογραφικά γεωγραφικά χαρακτηριστικά"
    }
                                         KeywordValue                   1;	///< Required element.
/*  RESTRICTED FROM icommon__inspireTheme:
    END OF RESTRICTED FROM icommon__inspireTheme */
/*  RESTRICTED FROM icommon__keyword:
    END OF RESTRICTED FROM icommon__keyword */
};

/// @brief "http://inspire.ec.europa.eu/schemas/common/1.0":citationInspireInteroperabilityRegulation_gre is a complexType with complexContent restriction of type "http://inspire.ec.europa.eu/schemas/common/1.0":citationConformity.
///
/// @note class icommon__citationInspireInteroperabilityRegulation_x005fgre operations:
/// - icommon__citationInspireInteroperabilityRegulation_x005fgre* soap_new_icommon__citationInspireInteroperabilityRegulation_x005fgre(soap*) allocate and default initialize
/// - icommon__citationInspireInteroperabilityRegulation_x005fgre* soap_new_icommon__citationInspireInteroperabilityRegulation_x005fgre(soap*, int num) allocate and default initialize an array
/// - icommon__citationInspireInteroperabilityRegulation_x005fgre* soap_new_req_icommon__citationInspireInteroperabilityRegulation_x005fgre(soap*, ...) allocate, set required members
/// - icommon__citationInspireInteroperabilityRegulation_x005fgre* soap_new_set_icommon__citationInspireInteroperabilityRegulation_x005fgre(soap*, ...) allocate, set all public members
/// - icommon__citationInspireInteroperabilityRegulation_x005fgre::soap_default(soap*) default initialize members
/// - int soap_read_icommon__citationInspireInteroperabilityRegulation_x005fgre(soap*, icommon__citationInspireInteroperabilityRegulation_x005fgre*) deserialize from a stream
/// - int soap_write_icommon__citationInspireInteroperabilityRegulation_x005fgre(soap*, icommon__citationInspireInteroperabilityRegulation_x005fgre*) serialize to a stream
/// - icommon__citationInspireInteroperabilityRegulation_x005fgre* icommon__citationInspireInteroperabilityRegulation_x005fgre::soap_dup(soap*) returns deep copy of icommon__citationInspireInteroperabilityRegulation_x005fgre, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - icommon__citationInspireInteroperabilityRegulation_x005fgre::soap_del() deep deletes icommon__citationInspireInteroperabilityRegulation_x005fgre data members, use only after icommon__citationInspireInteroperabilityRegulation_x005fgre::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int icommon__citationInspireInteroperabilityRegulation_x005fgre::soap_type() returns SOAP_TYPE_icommon__citationInspireInteroperabilityRegulation_x005fgre or derived type identifier
class icommon__citationInspireInteroperabilityRegulation_x005fgre : public xsd__anyType
{ public:
    enum _icommon__citationInspireInteroperabilityRegulation_x005fgre_Title
    {
	_icommon__citationInspireInteroperabilityRegulation_x005fgre_Title___x039a_x0391_x039d_x039f_x039d_x0399_x03a3_x039c_x039f_x03a3_x0020_x0028_x0395_x0395_x0029_x0020_x03b1_x03c1_x03b9_x03b8_x002e_x00201089_x002f2010_x0020_x03a4_x0397_x03a3_x0020_x0395_x03a0_x0399_x03a4_x03a1_x039f_x03a0_x0397_x03a3_x0020_x03c4_x03b7_x03c2_x002023_x03b7_x03c2_x0020_x039d_x03bf_x03b5_x03bc_x03b2_x03c1_x03af_x03bf_x03c5_x00202010_x0020_x03c3_x03c7_x03b5_x03c4_x03b9_x03ba_x03ac_x0020_x03bc_x03b5_x0020_x03c4_x03b7_x03bd_x0020_x03b5_x03c6_x03b1_x03c1_x03bc_x03bf_x03b3_x03ae_x0020_x03c4_x03b7_x03c2_x0020_x03bf_x03b4_x03b7_x03b3_x03af_x03b1_x03c2_x00202007_x002f2_x002f_x0395_x039a_x0020_x03c4_x03bf_x03c5_x0020_x0395_x03c5_x03c1_x03c9_x03c0_x03b1_x03ca_x03ba_x03bf_x03cd_x0020_x039a_x03bf_x03b9_x03bd_x03bf_x03b2_x03bf_x03c5_x03bb_x03af_x03bf_x03c5_x0020_x03ba_x03b1_x03b9_x0020_x03c4_x03bf_x03c5_x0020_x03a3_x03c5_x03bc_x03b2_x03bf_x03c5_x03bb_x03af_x03bf_x03c5_x0020_x03cc_x03c3_x03bf_x03bd_x0020_x03b1_x03c6_x03bf_x03c1_x03ac_x0020_x03c4_x03b7_x0020_x03b4_x03b9_x03b1_x03bb_x03b5_x03b9_x03c4_x03bf_x03c5_x03c1_x03b3_x03b9_x03ba_x03cc_x03c4_x03b7_x03c4_x03b1_x0020_x03c4_x03c9_x03bd_x0020_x03c3_x03c5_x03bd_x03cc_x03bb_x03c9_x03bd_x0020_x03ba_x03b1_x03b9_x0020_x03c4_x03c9_x03bd_x0020_x03c5_x03c0_x03b7_x03c1_x03b5_x03c3_x03b9_x03ce_x03bd_x0020_x03c7_x03c9_x03c1_x03b9_x03ba_x03ce_x03bd_x0020_x03b4_x03b5_x03b4_x03bf_x03bc_x03ad_x03bd_x03c9_x03bd,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":notEmptyString value="ΚΑΝΟΝΙΣΜΟΣ (ΕΕ) αριθ. 1089/2010 ΤΗΣ ΕΠΙΤΡΟΠΗΣ της 23ης Νοεμβρίου 2010 σχετικά με την εφαρμογή της οδηγίας 2007/2/ΕΚ του Ευρωπαϊκού Κοινοβουλίου και του Συμβουλίου όσον αφορά τη διαλειτουργικότητα των συνόλων και των υπηρεσιών χωρικών δεδομένων"
    }
                                         Title                          1;	///< Required element.
//  BEGIN CHOICE <xs:choice>
  $ int                                  __union_citationInspireInteroperabilityRegulation_x005fgre;	///< Union _icommon__union_citationInspireInteroperabilityRegulation_x005fgre selector: set to SOAP_UNION__icommon__union_citationInspireInteroperabilityRegulation_x005fgre_<fieldname>
    union _icommon__union_citationInspireInteroperabilityRegulation_x005fgre
    {
    enum _icommon__citationInspireInteroperabilityRegulation_x005fgre_DateOfPublication
    {
	_icommon__citationInspireInteroperabilityRegulation_x005fgre_DateOfPublication__2010_12_08,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":iso8601Date value="2010-12-08"
    }
                                        *DateOfPublication             ;	///< Choice of element (one of multiple choices).
    }                                    union_citationInspireInteroperabilityRegulation_x005fgre;
//  END OF CHOICE
    enum _icommon__citationInspireInteroperabilityRegulation_x005fgre_URI
    {
	_icommon__citationInspireInteroperabilityRegulation_x005fgre_URI__OJ_x003aL_x003a2010_x003a323_x003a0011_x003a0102_x003aEL_x003aPDF,	///< xs:anyURI value="OJ:L:2010:323:0011:0102:EL:PDF"
    }
                                         URI                            1;	///< Required element.
/// Element "ResourceLocator" of type "http://inspire.ec.europa.eu/schemas/common/1.0":resLocInspireInteroperabilityRegulation_gre.
    icommon__resLocInspireInteroperabilityRegulation_x005fgre*  ResourceLocator                1;	///< Required element.
/*  RESTRICTED FROM icommon__citationConformity:
    END OF RESTRICTED FROM icommon__citationConformity */
/*  RESTRICTED FROM icommon__citation:
    END OF RESTRICTED FROM icommon__citation */
};

/// @brief "http://inspire.ec.europa.eu/schemas/common/1.0":inspireTheme_hun is a complexType with complexContent restriction of type "http://inspire.ec.europa.eu/schemas/common/1.0":inspireTheme.
///
/// @note class icommon__inspireTheme_x005fhun operations:
/// - icommon__inspireTheme_x005fhun* soap_new_icommon__inspireTheme_x005fhun(soap*) allocate and default initialize
/// - icommon__inspireTheme_x005fhun* soap_new_icommon__inspireTheme_x005fhun(soap*, int num) allocate and default initialize an array
/// - icommon__inspireTheme_x005fhun* soap_new_req_icommon__inspireTheme_x005fhun(soap*, ...) allocate, set required members
/// - icommon__inspireTheme_x005fhun* soap_new_set_icommon__inspireTheme_x005fhun(soap*, ...) allocate, set all public members
/// - icommon__inspireTheme_x005fhun::soap_default(soap*) default initialize members
/// - int soap_read_icommon__inspireTheme_x005fhun(soap*, icommon__inspireTheme_x005fhun*) deserialize from a stream
/// - int soap_write_icommon__inspireTheme_x005fhun(soap*, icommon__inspireTheme_x005fhun*) serialize to a stream
/// - icommon__inspireTheme_x005fhun* icommon__inspireTheme_x005fhun::soap_dup(soap*) returns deep copy of icommon__inspireTheme_x005fhun, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - icommon__inspireTheme_x005fhun::soap_del() deep deletes icommon__inspireTheme_x005fhun data members, use only after icommon__inspireTheme_x005fhun::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int icommon__inspireTheme_x005fhun::soap_type() returns SOAP_TYPE_icommon__inspireTheme_x005fhun or derived type identifier
class icommon__inspireTheme_x005fhun : public xsd__anyType
{ public:
/// Element "OriginatingControlledVocabulary" of type "http://inspire.ec.europa.eu/schemas/common/1.0":originatingControlledVocabularyGemetInspireThemes.
    icommon__originatingControlledVocabularyGemetInspireThemes*  OriginatingControlledVocabulary 1;	///< Required element.
    enum _icommon__inspireTheme_x005fhun_KeywordValue
    {
	_icommon__inspireTheme_x005fhun_KeywordValue__A_x0020fajok_x0020megoszl_x00e1sa,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="A fajok megoszlása"
	_icommon__inspireTheme_x005fhun_KeywordValue__A_x0020felsz_x00edn_x0020bor_x00edt_x00e1sa,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="A felszín borítása"
	_icommon__inspireTheme_x005fhun_KeywordValue__A_x0020n_x00e9pess_x00e9g_x0020eloszl_x00e1sa_x0020_x2013_x0020demogr_x00e1fia,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="A népesség eloszlása – demográfia"
	_icommon__inspireTheme_x005fhun_KeywordValue___x00c1sv_x00e1nyi_x0020nyersanyagok,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Ásványi nyersanyagok"
	_icommon__inspireTheme_x005fhun_KeywordValue__Biogeogr_x00e1fiai_x0020r_x00e9gi_x00f3k,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Biogeográfiai régiók"
	_icommon__inspireTheme_x005fhun_KeywordValue__C_x00edmek,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Címek"
	_icommon__inspireTheme_x005fhun_KeywordValue__Domborzat,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Domborzat"
	_icommon__inspireTheme_x005fhun_KeywordValue___x00c9l_x0151helyek_x0020_x00e9s_x0020biot_x00f3pok,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Élőhelyek és biotópok"
	_icommon__inspireTheme_x005fhun_KeywordValue__Emberi_x0020eg_x00e9szs_x00e9g_x0020_x00e9s_x0020biztons_x00e1g,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Emberi egészség és biztonság"
	_icommon__inspireTheme_x005fhun_KeywordValue__Energiaforr_x00e1sok,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Energiaforrások"
	_icommon__inspireTheme_x005fhun_KeywordValue___x00c9p_x00fcletek,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Épületek"
	_icommon__inspireTheme_x005fhun_KeywordValue__F_x00f6ldhaszn_x00e1lat,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Földhasználat"
	_icommon__inspireTheme_x005fhun_KeywordValue__F_x00f6ldrajzi_x0020nevek,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Földrajzi nevek"
	_icommon__inspireTheme_x005fhun_KeywordValue__F_x00f6ldrajzi_x0020r_x00e1csrendszerek,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Földrajzi rácsrendszerek"
	_icommon__inspireTheme_x005fhun_KeywordValue__F_x00f6ldtan,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Földtan"
	_icommon__inspireTheme_x005fhun_KeywordValue__Kataszteri_x0020parcell_x00e1k,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Kataszteri parcellák"
	_icommon__inspireTheme_x005fhun_KeywordValue__Koordin_x00e1tarendszerek,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Koordinátarendszerek"
	_icommon__inspireTheme_x005fhun_KeywordValue__K_x00f6rnyezetv_x00e9delmi_x0020monitoringl_x00e9tes_x00edtm_x00e9nyek,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Környezetvédelmi monitoringlétesítmények"
	_icommon__inspireTheme_x005fhun_KeywordValue__K_x00f6zigazgat_x00e1si_x0020egys_x00e9gek,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Közigazgatási egységek"
	_icommon__inspireTheme_x005fhun_KeywordValue__K_x00f6zleked_x00e9si_x0020h_x00e1l_x00f3zatok,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Közlekedési hálózatok"
	_icommon__inspireTheme_x005fhun_KeywordValue__K_x00f6z_x00fczemi_x0020_x00e9s_x0020k_x00f6zszolg_x00e1ltat_x00e1sok,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Közüzemi és közszolgáltatások"
	_icommon__inspireTheme_x005fhun_KeywordValue__L_x00e9gk_x00f6ri_x0020viszonyok,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Légköri viszonyok"
	_icommon__inspireTheme_x005fhun_KeywordValue__Meteorol_x00f3giai_x0020f_x00f6ldrajzi_x0020jellemz_x0151k,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Meteorológiai földrajzi jellemzők"
	_icommon__inspireTheme_x005fhun_KeywordValue__Mez_x0151gazdas_x00e1gi_x0020_x00e9s_x0020akvakult_x00fara__x00e1gazati_x0020l_x00e9tes_x00edtm_x00e9nyek,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Mezőgazdasági és akvakultúra-ágazati létesítmények"
	_icommon__inspireTheme_x005fhun_KeywordValue__Oceanogr_x00e1fiai_x0020f_x00f6ldrajzi_x0020jellemz_x0151k,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Oceanográfiai földrajzi jellemzők"
	_icommon__inspireTheme_x005fhun_KeywordValue__Ortofot_x00f3k,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Ortofotók"
	_icommon__inspireTheme_x005fhun_KeywordValue__Statisztikai_x0020egys_x00e9gek,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Statisztikai egységek"
	_icommon__inspireTheme_x005fhun_KeywordValue__Talaj,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Talaj"
	_icommon__inspireTheme_x005fhun_KeywordValue__Tengeri_x0020r_x00e9gi_x00f3k,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Tengeri régiók"
	_icommon__inspireTheme_x005fhun_KeywordValue__Termel_x0151_x0020_x00e9s_x0020ipari_x0020l_x00e9tes_x00edtm_x00e9nyek,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Termelő és ipari létesítmények"
	_icommon__inspireTheme_x005fhun_KeywordValue__Term_x00e9szeti_x0020kock_x00e1zati_x0020z_x00f3n_x00e1k,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Természeti kockázati zónák"
	_icommon__inspireTheme_x005fhun_KeywordValue__Ter_x00fcletgazd_x00e1lkod_x00e1si_x002f_korl_x00e1toz_x00e1si_x002f_szab_x00e1lyoz_x00e1si_x0020_x00f6vezetek_x0020_x00e9s_x0020adatszolg_x00e1ltat_x00f3_x0020egys_x00e9gek,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Területgazdálkodási/-korlátozási/-szabályozási övezetek és adatszolgáltató egységek"
	_icommon__inspireTheme_x005fhun_KeywordValue__V_x00e9dett_x0020helyek,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Védett helyek"
	_icommon__inspireTheme_x005fhun_KeywordValue__V_x00edzrajz,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Vízrajz"
    }
                                         KeywordValue                   1;	///< Required element.
/*  RESTRICTED FROM icommon__inspireTheme:
    END OF RESTRICTED FROM icommon__inspireTheme */
/*  RESTRICTED FROM icommon__keyword:
    END OF RESTRICTED FROM icommon__keyword */
};

/// @brief "http://inspire.ec.europa.eu/schemas/common/1.0":citationInspireInteroperabilityRegulation_hun is a complexType with complexContent restriction of type "http://inspire.ec.europa.eu/schemas/common/1.0":citationConformity.
///
/// @note class icommon__citationInspireInteroperabilityRegulation_x005fhun operations:
/// - icommon__citationInspireInteroperabilityRegulation_x005fhun* soap_new_icommon__citationInspireInteroperabilityRegulation_x005fhun(soap*) allocate and default initialize
/// - icommon__citationInspireInteroperabilityRegulation_x005fhun* soap_new_icommon__citationInspireInteroperabilityRegulation_x005fhun(soap*, int num) allocate and default initialize an array
/// - icommon__citationInspireInteroperabilityRegulation_x005fhun* soap_new_req_icommon__citationInspireInteroperabilityRegulation_x005fhun(soap*, ...) allocate, set required members
/// - icommon__citationInspireInteroperabilityRegulation_x005fhun* soap_new_set_icommon__citationInspireInteroperabilityRegulation_x005fhun(soap*, ...) allocate, set all public members
/// - icommon__citationInspireInteroperabilityRegulation_x005fhun::soap_default(soap*) default initialize members
/// - int soap_read_icommon__citationInspireInteroperabilityRegulation_x005fhun(soap*, icommon__citationInspireInteroperabilityRegulation_x005fhun*) deserialize from a stream
/// - int soap_write_icommon__citationInspireInteroperabilityRegulation_x005fhun(soap*, icommon__citationInspireInteroperabilityRegulation_x005fhun*) serialize to a stream
/// - icommon__citationInspireInteroperabilityRegulation_x005fhun* icommon__citationInspireInteroperabilityRegulation_x005fhun::soap_dup(soap*) returns deep copy of icommon__citationInspireInteroperabilityRegulation_x005fhun, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - icommon__citationInspireInteroperabilityRegulation_x005fhun::soap_del() deep deletes icommon__citationInspireInteroperabilityRegulation_x005fhun data members, use only after icommon__citationInspireInteroperabilityRegulation_x005fhun::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int icommon__citationInspireInteroperabilityRegulation_x005fhun::soap_type() returns SOAP_TYPE_icommon__citationInspireInteroperabilityRegulation_x005fhun or derived type identifier
class icommon__citationInspireInteroperabilityRegulation_x005fhun : public xsd__anyType
{ public:
    enum _icommon__citationInspireInteroperabilityRegulation_x005fhun_Title
    {
	_icommon__citationInspireInteroperabilityRegulation_x005fhun_Title__A_x0020BIZOTTS_x00c1G_x00201089_x002f2010_x002fEU_x0020RENDELETE_x0020_x00282010_x002e_x0020november_x002023_x002e_x0029_x0020a_x00202007_x002f2_x002fEK_x0020eur_x00f3pai_x0020parlamenti_x0020_x00e9s_x0020tan_x00e1csi_x0020ir_x00e1nyelv_x0020t_x00e9radatk_x00e9szletek_x0020_x00e9s_x0020_szolg_x00e1ltat_x00e1sok_x0020interoperabilit_x00e1s_x00e1ra_x0020vonatkoz_x00f3_x0020rendelkez_x00e9seinek_x0020v_x00e9grehajt_x00e1s_x00e1r_x00f3l,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":notEmptyString value="A BIZOTTSÁG 1089/2010/EU RENDELETE (2010. november 23.) a 2007/2/EK európai parlamenti és tanácsi irányelv téradatkészletek és -szolgáltatások interoperabilitására vonatkozó rendelkezéseinek végrehajtásáról"
    }
                                         Title                          1;	///< Required element.
//  BEGIN CHOICE <xs:choice>
  $ int                                  __union_citationInspireInteroperabilityRegulation_x005fhun;	///< Union _icommon__union_citationInspireInteroperabilityRegulation_x005fhun selector: set to SOAP_UNION__icommon__union_citationInspireInteroperabilityRegulation_x005fhun_<fieldname>
    union _icommon__union_citationInspireInteroperabilityRegulation_x005fhun
    {
    enum _icommon__citationInspireInteroperabilityRegulation_x005fhun_DateOfPublication
    {
	_icommon__citationInspireInteroperabilityRegulation_x005fhun_DateOfPublication__2010_12_08,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":iso8601Date value="2010-12-08"
    }
                                        *DateOfPublication             ;	///< Choice of element (one of multiple choices).
    }                                    union_citationInspireInteroperabilityRegulation_x005fhun;
//  END OF CHOICE
    enum _icommon__citationInspireInteroperabilityRegulation_x005fhun_URI
    {
	_icommon__citationInspireInteroperabilityRegulation_x005fhun_URI__OJ_x003aL_x003a2010_x003a323_x003a0011_x003a0102_x003aHU_x003aPDF,	///< xs:anyURI value="OJ:L:2010:323:0011:0102:HU:PDF"
    }
                                         URI                            1;	///< Required element.
/// Element "ResourceLocator" of type "http://inspire.ec.europa.eu/schemas/common/1.0":resLocInspireInteroperabilityRegulation_hun.
    icommon__resLocInspireInteroperabilityRegulation_x005fhun*  ResourceLocator                1;	///< Required element.
/*  RESTRICTED FROM icommon__citationConformity:
    END OF RESTRICTED FROM icommon__citationConformity */
/*  RESTRICTED FROM icommon__citation:
    END OF RESTRICTED FROM icommon__citation */
};

/// @brief "http://inspire.ec.europa.eu/schemas/common/1.0":inspireTheme_ita is a complexType with complexContent restriction of type "http://inspire.ec.europa.eu/schemas/common/1.0":inspireTheme.
///
/// @note class icommon__inspireTheme_x005fita operations:
/// - icommon__inspireTheme_x005fita* soap_new_icommon__inspireTheme_x005fita(soap*) allocate and default initialize
/// - icommon__inspireTheme_x005fita* soap_new_icommon__inspireTheme_x005fita(soap*, int num) allocate and default initialize an array
/// - icommon__inspireTheme_x005fita* soap_new_req_icommon__inspireTheme_x005fita(soap*, ...) allocate, set required members
/// - icommon__inspireTheme_x005fita* soap_new_set_icommon__inspireTheme_x005fita(soap*, ...) allocate, set all public members
/// - icommon__inspireTheme_x005fita::soap_default(soap*) default initialize members
/// - int soap_read_icommon__inspireTheme_x005fita(soap*, icommon__inspireTheme_x005fita*) deserialize from a stream
/// - int soap_write_icommon__inspireTheme_x005fita(soap*, icommon__inspireTheme_x005fita*) serialize to a stream
/// - icommon__inspireTheme_x005fita* icommon__inspireTheme_x005fita::soap_dup(soap*) returns deep copy of icommon__inspireTheme_x005fita, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - icommon__inspireTheme_x005fita::soap_del() deep deletes icommon__inspireTheme_x005fita data members, use only after icommon__inspireTheme_x005fita::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int icommon__inspireTheme_x005fita::soap_type() returns SOAP_TYPE_icommon__inspireTheme_x005fita or derived type identifier
class icommon__inspireTheme_x005fita : public xsd__anyType
{ public:
/// Element "OriginatingControlledVocabulary" of type "http://inspire.ec.europa.eu/schemas/common/1.0":originatingControlledVocabularyGemetInspireThemes.
    icommon__originatingControlledVocabularyGemetInspireThemes*  OriginatingControlledVocabulary 1;	///< Required element.
    enum _icommon__inspireTheme_x005fita_KeywordValue
    {
	_icommon__inspireTheme_x005fita_KeywordValue__Condizioni_x0020atmosferiche,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Condizioni atmosferiche"
	_icommon__inspireTheme_x005fita_KeywordValue__Copertura_x0020del_x0020suolo,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Copertura del suolo"
	_icommon__inspireTheme_x005fita_KeywordValue__Distribuzione_x0020della_x0020popolazione_x0020_x2014_x0020demografia,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Distribuzione della popolazione — demografia"
	_icommon__inspireTheme_x005fita_KeywordValue__Distribuzione_x0020delle_x0020specie,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Distribuzione delle specie"
	_icommon__inspireTheme_x005fita_KeywordValue__Edifici,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Edifici"
	_icommon__inspireTheme_x005fita_KeywordValue__Elementi_x0020geografici_x0020meteorologici,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Elementi geografici meteorologici"
	_icommon__inspireTheme_x005fita_KeywordValue__Elementi_x0020geografici_x0020oceanografici,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Elementi geografici oceanografici"
	_icommon__inspireTheme_x005fita_KeywordValue__Elevazione,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Elevazione"
	_icommon__inspireTheme_x005fita_KeywordValue__Geologia,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Geologia"
	_icommon__inspireTheme_x005fita_KeywordValue__Habitat_x0020e_x0020biotopi,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Habitat e biotopi"
	_icommon__inspireTheme_x005fita_KeywordValue__Idrografia,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Idrografia"
	_icommon__inspireTheme_x005fita_KeywordValue__Impianti_x0020agricoli_x0020e_x0020di_x0020acquacoltura,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Impianti agricoli e di acquacoltura"
	_icommon__inspireTheme_x005fita_KeywordValue__Impianti_x0020di_x0020monitoraggio_x0020ambientale,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Impianti di monitoraggio ambientale"
	_icommon__inspireTheme_x005fita_KeywordValue__Indirizzi,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Indirizzi"
	_icommon__inspireTheme_x005fita_KeywordValue__Nomi_x0020geografici,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Nomi geografici"
	_icommon__inspireTheme_x005fita_KeywordValue__Orto_x0020immagini,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Orto immagini"
	_icommon__inspireTheme_x005fita_KeywordValue__Parcelle_x0020catastali,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Parcelle catastali"
	_icommon__inspireTheme_x005fita_KeywordValue__Produzione_x0020e_x0020impianti_x0020industriali,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Produzione e impianti industriali"
	_icommon__inspireTheme_x005fita_KeywordValue__Regioni_x0020biogeografiche,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Regioni biogeografiche"
	_icommon__inspireTheme_x005fita_KeywordValue__Regioni_x0020marine,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Regioni marine"
	_icommon__inspireTheme_x005fita_KeywordValue__Reti_x0020di_x0020trasporto,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Reti di trasporto"
	_icommon__inspireTheme_x005fita_KeywordValue__Risorse_x0020energetiche,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Risorse energetiche"
	_icommon__inspireTheme_x005fita_KeywordValue__Risorse_x0020minerarie,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Risorse minerarie"
	_icommon__inspireTheme_x005fita_KeywordValue__Salute_x0020umana_x0020e_x0020sicurezza,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Salute umana e sicurezza"
	_icommon__inspireTheme_x005fita_KeywordValue__Servizi_x0020di_x0020pubblica_x0020utilit_x00e0_x0020e_x0020servizi_x0020amministrativi,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Servizi di pubblica utilità e servizi amministrativi"
	_icommon__inspireTheme_x005fita_KeywordValue__Sistemi_x0020di_x0020coordinate,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Sistemi di coordinate"
	_icommon__inspireTheme_x005fita_KeywordValue__Sistemi_x0020di_x0020griglie_x0020geografiche,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Sistemi di griglie geografiche"
	_icommon__inspireTheme_x005fita_KeywordValue__Siti_x0020protetti,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Siti protetti"
	_icommon__inspireTheme_x005fita_KeywordValue__Suolo,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Suolo"
	_icommon__inspireTheme_x005fita_KeywordValue__Unit_x00e0_x0020amministrative,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Unità amministrative"
	_icommon__inspireTheme_x005fita_KeywordValue__Unit_x00e0_x0020statistiche,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Unità statistiche"
	_icommon__inspireTheme_x005fita_KeywordValue__Utilizzo_x0020del_x0020territorio,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Utilizzo del territorio"
	_icommon__inspireTheme_x005fita_KeywordValue__Zone_x0020a_x0020rischio_x0020naturale,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Zone a rischio naturale"
	_icommon__inspireTheme_x005fita_KeywordValue__Zone_x0020sottoposte_x0020a_x0020gestione_x002flimitazioni_x002fregolamentazione_x0020e_x0020unit_x00e0_x0020con_x0020obbligo_x0020di_x0020comunicare_x0020dati,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Zone sottoposte a gestione/limitazioni/regolamentazione e unità con obbligo di comunicare dati"
    }
                                         KeywordValue                   1;	///< Required element.
/*  RESTRICTED FROM icommon__inspireTheme:
    END OF RESTRICTED FROM icommon__inspireTheme */
/*  RESTRICTED FROM icommon__keyword:
    END OF RESTRICTED FROM icommon__keyword */
};

/// @brief "http://inspire.ec.europa.eu/schemas/common/1.0":citationInspireInteroperabilityRegulation_ita is a complexType with complexContent restriction of type "http://inspire.ec.europa.eu/schemas/common/1.0":citationConformity.
///
/// @note class icommon__citationInspireInteroperabilityRegulation_x005fita operations:
/// - icommon__citationInspireInteroperabilityRegulation_x005fita* soap_new_icommon__citationInspireInteroperabilityRegulation_x005fita(soap*) allocate and default initialize
/// - icommon__citationInspireInteroperabilityRegulation_x005fita* soap_new_icommon__citationInspireInteroperabilityRegulation_x005fita(soap*, int num) allocate and default initialize an array
/// - icommon__citationInspireInteroperabilityRegulation_x005fita* soap_new_req_icommon__citationInspireInteroperabilityRegulation_x005fita(soap*, ...) allocate, set required members
/// - icommon__citationInspireInteroperabilityRegulation_x005fita* soap_new_set_icommon__citationInspireInteroperabilityRegulation_x005fita(soap*, ...) allocate, set all public members
/// - icommon__citationInspireInteroperabilityRegulation_x005fita::soap_default(soap*) default initialize members
/// - int soap_read_icommon__citationInspireInteroperabilityRegulation_x005fita(soap*, icommon__citationInspireInteroperabilityRegulation_x005fita*) deserialize from a stream
/// - int soap_write_icommon__citationInspireInteroperabilityRegulation_x005fita(soap*, icommon__citationInspireInteroperabilityRegulation_x005fita*) serialize to a stream
/// - icommon__citationInspireInteroperabilityRegulation_x005fita* icommon__citationInspireInteroperabilityRegulation_x005fita::soap_dup(soap*) returns deep copy of icommon__citationInspireInteroperabilityRegulation_x005fita, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - icommon__citationInspireInteroperabilityRegulation_x005fita::soap_del() deep deletes icommon__citationInspireInteroperabilityRegulation_x005fita data members, use only after icommon__citationInspireInteroperabilityRegulation_x005fita::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int icommon__citationInspireInteroperabilityRegulation_x005fita::soap_type() returns SOAP_TYPE_icommon__citationInspireInteroperabilityRegulation_x005fita or derived type identifier
class icommon__citationInspireInteroperabilityRegulation_x005fita : public xsd__anyType
{ public:
    enum _icommon__citationInspireInteroperabilityRegulation_x005fita_Title
    {
	_icommon__citationInspireInteroperabilityRegulation_x005fita_Title__REGOLAMENTO_x0020_x0028UE_x0029_x0020N_x002e_x00201089_x002f2010_x0020DELLA_x0020COMMISSIONE_x0020del_x002023_x0020novembre_x00202010_x0020recante_x0020attuazione_x0020della_x0020direttiva_x00202007_x002f2_x002fCE_x0020del_x0020Parlamento_x0020europeo_x0020e_x0020del_x0020Consiglio_x0020per_x0020quanto_x0020riguarda_x0020l_x0027interoperabilit_x00e0_x0020dei_x0020set_x0020di_x0020dati_x0020territoriali_x0020e_x0020dei_x0020servizi_x0020di_x0020dati_x0020territoriali,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":notEmptyString value="REGOLAMENTO (UE) N. 1089/2010 DELLA COMMISSIONE del 23 novembre 2010 recante attuazione della direttiva 2007/2/CE del Parlamento europeo e del Consiglio per quanto riguarda l'interoperabilità dei set di dati territoriali e dei servizi di dati territoriali"
    }
                                         Title                          1;	///< Required element.
//  BEGIN CHOICE <xs:choice>
  $ int                                  __union_citationInspireInteroperabilityRegulation_x005fita;	///< Union _icommon__union_citationInspireInteroperabilityRegulation_x005fita selector: set to SOAP_UNION__icommon__union_citationInspireInteroperabilityRegulation_x005fita_<fieldname>
    union _icommon__union_citationInspireInteroperabilityRegulation_x005fita
    {
    enum _icommon__citationInspireInteroperabilityRegulation_x005fita_DateOfPublication
    {
	_icommon__citationInspireInteroperabilityRegulation_x005fita_DateOfPublication__2010_12_08,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":iso8601Date value="2010-12-08"
    }
                                        *DateOfPublication             ;	///< Choice of element (one of multiple choices).
    }                                    union_citationInspireInteroperabilityRegulation_x005fita;
//  END OF CHOICE
    enum _icommon__citationInspireInteroperabilityRegulation_x005fita_URI
    {
	_icommon__citationInspireInteroperabilityRegulation_x005fita_URI__OJ_x003aL_x003a2010_x003a323_x003a0011_x003a0102_x003aIT_x003aPDF,	///< xs:anyURI value="OJ:L:2010:323:0011:0102:IT:PDF"
    }
                                         URI                            1;	///< Required element.
/// Element "ResourceLocator" of type "http://inspire.ec.europa.eu/schemas/common/1.0":resLocInspireInteroperabilityRegulation_ita.
    icommon__resLocInspireInteroperabilityRegulation_x005fita*  ResourceLocator                1;	///< Required element.
/*  RESTRICTED FROM icommon__citationConformity:
    END OF RESTRICTED FROM icommon__citationConformity */
/*  RESTRICTED FROM icommon__citation:
    END OF RESTRICTED FROM icommon__citation */
};

/// @brief "http://inspire.ec.europa.eu/schemas/common/1.0":inspireTheme_lav is a complexType with complexContent restriction of type "http://inspire.ec.europa.eu/schemas/common/1.0":inspireTheme.
///
/// @note class icommon__inspireTheme_x005flav operations:
/// - icommon__inspireTheme_x005flav* soap_new_icommon__inspireTheme_x005flav(soap*) allocate and default initialize
/// - icommon__inspireTheme_x005flav* soap_new_icommon__inspireTheme_x005flav(soap*, int num) allocate and default initialize an array
/// - icommon__inspireTheme_x005flav* soap_new_req_icommon__inspireTheme_x005flav(soap*, ...) allocate, set required members
/// - icommon__inspireTheme_x005flav* soap_new_set_icommon__inspireTheme_x005flav(soap*, ...) allocate, set all public members
/// - icommon__inspireTheme_x005flav::soap_default(soap*) default initialize members
/// - int soap_read_icommon__inspireTheme_x005flav(soap*, icommon__inspireTheme_x005flav*) deserialize from a stream
/// - int soap_write_icommon__inspireTheme_x005flav(soap*, icommon__inspireTheme_x005flav*) serialize to a stream
/// - icommon__inspireTheme_x005flav* icommon__inspireTheme_x005flav::soap_dup(soap*) returns deep copy of icommon__inspireTheme_x005flav, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - icommon__inspireTheme_x005flav::soap_del() deep deletes icommon__inspireTheme_x005flav data members, use only after icommon__inspireTheme_x005flav::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int icommon__inspireTheme_x005flav::soap_type() returns SOAP_TYPE_icommon__inspireTheme_x005flav or derived type identifier
class icommon__inspireTheme_x005flav : public xsd__anyType
{ public:
/// Element "OriginatingControlledVocabulary" of type "http://inspire.ec.europa.eu/schemas/common/1.0":originatingControlledVocabularyGemetInspireThemes.
    icommon__originatingControlledVocabularyGemetInspireThemes*  OriginatingControlledVocabulary 1;	///< Required element.
    enum _icommon__inspireTheme_x005flav_KeywordValue
    {
	_icommon__inspireTheme_x005flav_KeywordValue__Administrat_x012bvas_x0020vien_x012bbas,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Administratīvas vienības"
	_icommon__inspireTheme_x005flav_KeywordValue__Adreses,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Adreses"
	_icommon__inspireTheme_x005flav_KeywordValue__Aizsarg_x0101jamas_x0020teritorijas,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Aizsargājamas teritorijas"
	_icommon__inspireTheme_x005flav_KeywordValue__Apgabala_x0020p_x0101rvald_x012bbas_x002fierobe_x017eojumu_x002freglament_x0113tas_x0020zonas_x0020un_x0020zi_x0146o_x0161anas_x0020vien_x012bbas,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Apgabala pārvaldības/ierobežojumu/reglamentētas zonas un ziņošanas vienības"
	_icommon__inspireTheme_x005flav_KeywordValue__Atmosf_x0113ras_x0020apst_x0101k_x013ci,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Atmosfēras apstākļi"
	_icommon__inspireTheme_x005flav_KeywordValue__Augsne,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Augsne"
	_icommon__inspireTheme_x005flav_KeywordValue__Augstums,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Augstums"
	_icommon__inspireTheme_x005flav_KeywordValue__Bio_x0123eogr_x0101fiskie_x0020re_x0123ioni,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Bioģeogrāfiskie reģioni"
	_icommon__inspireTheme_x005flav_KeywordValue__Cilv_x0113ku_x0020vesel_x012bba_x0020un_x0020dro_x0161_x012bba,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Cilvēku veselība un drošība"
	_icommon__inspireTheme_x005flav_KeywordValue__Dabas_x0020apdraud_x0113juma_x0020zonas,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Dabas apdraudējuma zonas"
	_icommon__inspireTheme_x005flav_KeywordValue__Der_x012bgo_x0020izrakte_x0146u_x0020resursi,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Derīgo izrakteņu resursi"
	_icommon__inspireTheme_x005flav_KeywordValue__Dz_x012bvotnes_x0020un_x0020biotopi,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Dzīvotnes un biotopi"
	_icommon__inspireTheme_x005flav_KeywordValue___x0112kas,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Ēkas"
	_icommon__inspireTheme_x005flav_KeywordValue__Ener_x0123ijas_x0020resursi,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Enerģijas resursi"
	_icommon__inspireTheme_x005flav_KeywordValue___x0122eogr_x0101fisko_x0020koordin_x0101tu_x0020t_x012bklu_x0020sist_x0113mas,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Ģeogrāfisko koordinātu tīklu sistēmas"
	_icommon__inspireTheme_x005flav_KeywordValue___x0122eolo_x0123ija,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Ģeoloģija"
	_icommon__inspireTheme_x005flav_KeywordValue__Hidrogr_x0101fija,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Hidrogrāfija"
	_icommon__inspireTheme_x005flav_KeywordValue__Iedz_x012bvot_x0101ju_x0020sadal_x012bjums_x0020_x2013_x0020demogr_x0101fija,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Iedzīvotāju sadalījums – demogrāfija"
	_icommon__inspireTheme_x005flav_KeywordValue__J_x016bru_x0020re_x0123ioni,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Jūru reģioni"
	_icommon__inspireTheme_x005flav_KeywordValue__Kadastr_x0101li_x0020zemes_x0020gabali,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Kadastrāli zemes gabali"
	_icommon__inspireTheme_x005flav_KeywordValue__Komun_x0101lie_x0020un_x0020valsts_x0020dienesti,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Komunālie un valsts dienesti"
	_icommon__inspireTheme_x005flav_KeywordValue__Koordin_x0101tu_x0020atskaites_x0020sist_x0113mas,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Koordinātu atskaites sistēmas"
	_icommon__inspireTheme_x005flav_KeywordValue__Lauksaimniec_x012bbas_x0020un_x0020akvakult_x016bras_x0020iek_x0101rtas,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Lauksaimniecības un akvakultūras iekārtas"
	_icommon__inspireTheme_x005flav_KeywordValue__Meteorolo_x0123iski_x0020_x0123eogr_x0101fiskie_x0020raksturlielumi,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Meteoroloģiski ģeogrāfiskie raksturlielumi"
	_icommon__inspireTheme_x005flav_KeywordValue__Okeanogr_x0101fiski_x0020_x0123eogr_x0101fiskie_x0020raksturlielumi,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Okeanogrāfiski ģeogrāfiskie raksturlielumi"
	_icommon__inspireTheme_x005flav_KeywordValue__Ortofotogr_x0101fija,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Ortofotogrāfija"
	_icommon__inspireTheme_x005flav_KeywordValue__Ra_x017eo_x0161anas_x0020un_x0020r_x016bpniec_x012bbas_x0020iek_x0101rtas,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Ražošanas un rūpniecības iekārtas"
	_icommon__inspireTheme_x005flav_KeywordValue__Statistikas_x0020vien_x012bbas,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Statistikas vienības"
	_icommon__inspireTheme_x005flav_KeywordValue__Sugu_x0020izplat_x012bba,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Sugu izplatība"
	_icommon__inspireTheme_x005flav_KeywordValue__Topon_x012bmi,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Toponīmi"
	_icommon__inspireTheme_x005flav_KeywordValue__Transporta_x0020t_x012bkli,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Transporta tīkli"
	_icommon__inspireTheme_x005flav_KeywordValue__Vides_x0020monitoringa_x0020iek_x0101rtas,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Vides monitoringa iekārtas"
	_icommon__inspireTheme_x005flav_KeywordValue__Zemes_x0020izmanto_x0161ana,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Zemes izmantošana"
	_icommon__inspireTheme_x005flav_KeywordValue__Zemes_x0020virsma,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Zemes virsma"
    }
                                         KeywordValue                   1;	///< Required element.
/*  RESTRICTED FROM icommon__inspireTheme:
    END OF RESTRICTED FROM icommon__inspireTheme */
/*  RESTRICTED FROM icommon__keyword:
    END OF RESTRICTED FROM icommon__keyword */
};

/// @brief "http://inspire.ec.europa.eu/schemas/common/1.0":citationInspireInteroperabilityRegulation_lav is a complexType with complexContent restriction of type "http://inspire.ec.europa.eu/schemas/common/1.0":citationConformity.
///
/// @note class icommon__citationInspireInteroperabilityRegulation_x005flav operations:
/// - icommon__citationInspireInteroperabilityRegulation_x005flav* soap_new_icommon__citationInspireInteroperabilityRegulation_x005flav(soap*) allocate and default initialize
/// - icommon__citationInspireInteroperabilityRegulation_x005flav* soap_new_icommon__citationInspireInteroperabilityRegulation_x005flav(soap*, int num) allocate and default initialize an array
/// - icommon__citationInspireInteroperabilityRegulation_x005flav* soap_new_req_icommon__citationInspireInteroperabilityRegulation_x005flav(soap*, ...) allocate, set required members
/// - icommon__citationInspireInteroperabilityRegulation_x005flav* soap_new_set_icommon__citationInspireInteroperabilityRegulation_x005flav(soap*, ...) allocate, set all public members
/// - icommon__citationInspireInteroperabilityRegulation_x005flav::soap_default(soap*) default initialize members
/// - int soap_read_icommon__citationInspireInteroperabilityRegulation_x005flav(soap*, icommon__citationInspireInteroperabilityRegulation_x005flav*) deserialize from a stream
/// - int soap_write_icommon__citationInspireInteroperabilityRegulation_x005flav(soap*, icommon__citationInspireInteroperabilityRegulation_x005flav*) serialize to a stream
/// - icommon__citationInspireInteroperabilityRegulation_x005flav* icommon__citationInspireInteroperabilityRegulation_x005flav::soap_dup(soap*) returns deep copy of icommon__citationInspireInteroperabilityRegulation_x005flav, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - icommon__citationInspireInteroperabilityRegulation_x005flav::soap_del() deep deletes icommon__citationInspireInteroperabilityRegulation_x005flav data members, use only after icommon__citationInspireInteroperabilityRegulation_x005flav::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int icommon__citationInspireInteroperabilityRegulation_x005flav::soap_type() returns SOAP_TYPE_icommon__citationInspireInteroperabilityRegulation_x005flav or derived type identifier
class icommon__citationInspireInteroperabilityRegulation_x005flav : public xsd__anyType
{ public:
    enum _icommon__citationInspireInteroperabilityRegulation_x005flav_Title
    {
	_icommon__citationInspireInteroperabilityRegulation_x005flav_Title__KOMISIJAS_x0020REGULA_x0020_x0028ES_x0029_x0020Nr_x002e_x00201089_x002f2010_x0020_x00282010_x002e_x0020gada_x002023_x002e_x0020novembris_x0029_x002c_x0020ar_x0020kuru_x0020_x012bsteno_x0020Eiropas_x0020Parlamenta_x0020un_x0020Padomes_x0020Direkt_x012bvu_x00202007_x002f2_x002fEK_x0020attiec_x012bb_x0101_x0020uz_x0020telpisko_x0020datu_x0020kopu_x0020un_x0020telpisko_x0020datu_x0020pakalpojumu_x0020savstarp_x0113jo_x0020izmantojam_x012bbu,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":notEmptyString value="KOMISIJAS REGULA (ES) Nr. 1089/2010 (2010. gada 23. novembris), ar kuru īsteno Eiropas Parlamenta un Padomes Direktīvu 2007/2/EK attiecībā uz telpisko datu kopu un telpisko datu pakalpojumu savstarpējo izmantojamību"
    }
                                         Title                          1;	///< Required element.
//  BEGIN CHOICE <xs:choice>
  $ int                                  __union_citationInspireInteroperabilityRegulation_x005flav;	///< Union _icommon__union_citationInspireInteroperabilityRegulation_x005flav selector: set to SOAP_UNION__icommon__union_citationInspireInteroperabilityRegulation_x005flav_<fieldname>
    union _icommon__union_citationInspireInteroperabilityRegulation_x005flav
    {
    enum _icommon__citationInspireInteroperabilityRegulation_x005flav_DateOfPublication
    {
	_icommon__citationInspireInteroperabilityRegulation_x005flav_DateOfPublication__2010_12_08,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":iso8601Date value="2010-12-08"
    }
                                        *DateOfPublication             ;	///< Choice of element (one of multiple choices).
    }                                    union_citationInspireInteroperabilityRegulation_x005flav;
//  END OF CHOICE
    enum _icommon__citationInspireInteroperabilityRegulation_x005flav_URI
    {
	_icommon__citationInspireInteroperabilityRegulation_x005flav_URI__OJ_x003aL_x003a2010_x003a323_x003a0011_x003a0102_x003aLV_x003aPDF,	///< xs:anyURI value="OJ:L:2010:323:0011:0102:LV:PDF"
    }
                                         URI                            1;	///< Required element.
/// Element "ResourceLocator" of type "http://inspire.ec.europa.eu/schemas/common/1.0":resLocInspireInteroperabilityRegulation_lav.
    icommon__resLocInspireInteroperabilityRegulation_x005flav*  ResourceLocator                1;	///< Required element.
/*  RESTRICTED FROM icommon__citationConformity:
    END OF RESTRICTED FROM icommon__citationConformity */
/*  RESTRICTED FROM icommon__citation:
    END OF RESTRICTED FROM icommon__citation */
};

/// @brief "http://inspire.ec.europa.eu/schemas/common/1.0":inspireTheme_lit is a complexType with complexContent restriction of type "http://inspire.ec.europa.eu/schemas/common/1.0":inspireTheme.
///
/// @note class icommon__inspireTheme_x005flit operations:
/// - icommon__inspireTheme_x005flit* soap_new_icommon__inspireTheme_x005flit(soap*) allocate and default initialize
/// - icommon__inspireTheme_x005flit* soap_new_icommon__inspireTheme_x005flit(soap*, int num) allocate and default initialize an array
/// - icommon__inspireTheme_x005flit* soap_new_req_icommon__inspireTheme_x005flit(soap*, ...) allocate, set required members
/// - icommon__inspireTheme_x005flit* soap_new_set_icommon__inspireTheme_x005flit(soap*, ...) allocate, set all public members
/// - icommon__inspireTheme_x005flit::soap_default(soap*) default initialize members
/// - int soap_read_icommon__inspireTheme_x005flit(soap*, icommon__inspireTheme_x005flit*) deserialize from a stream
/// - int soap_write_icommon__inspireTheme_x005flit(soap*, icommon__inspireTheme_x005flit*) serialize to a stream
/// - icommon__inspireTheme_x005flit* icommon__inspireTheme_x005flit::soap_dup(soap*) returns deep copy of icommon__inspireTheme_x005flit, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - icommon__inspireTheme_x005flit::soap_del() deep deletes icommon__inspireTheme_x005flit data members, use only after icommon__inspireTheme_x005flit::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int icommon__inspireTheme_x005flit::soap_type() returns SOAP_TYPE_icommon__inspireTheme_x005flit or derived type identifier
class icommon__inspireTheme_x005flit : public xsd__anyType
{ public:
/// Element "OriginatingControlledVocabulary" of type "http://inspire.ec.europa.eu/schemas/common/1.0":originatingControlledVocabularyGemetInspireThemes.
    icommon__originatingControlledVocabularyGemetInspireThemes*  OriginatingControlledVocabulary 1;	///< Required element.
    enum _icommon__inspireTheme_x005flit_KeywordValue
    {
	_icommon__inspireTheme_x005flit_KeywordValue__Administraciniai_x0020vienetai,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Administraciniai vienetai"
	_icommon__inspireTheme_x005flit_KeywordValue__Adresai,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Adresai"
	_icommon__inspireTheme_x005flit_KeywordValue__Aplinkos_x0020steb_x0117senos_x0020priemon_x0117s,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Aplinkos stebėsenos priemonės"
	_icommon__inspireTheme_x005flit_KeywordValue__Atmosferos_x0020s_x0105lygos,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Atmosferos sąlygos"
	_icommon__inspireTheme_x005flit_KeywordValue__Auk_x0161tis,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Aukštis"
	_icommon__inspireTheme_x005flit_KeywordValue__Biogeografiniai_x0020regionai,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Biogeografiniai regionai"
	_icommon__inspireTheme_x005flit_KeywordValue__Buvein_x0117s_x0020ir_x0020biotopai,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Buveinės ir biotopai"
	_icommon__inspireTheme_x005flit_KeywordValue__Dirvo_x017eemis,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Dirvožemis"
	_icommon__inspireTheme_x005flit_KeywordValue__Energijos_x0020i_x0161tekliai,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Energijos ištekliai"
	_icommon__inspireTheme_x005flit_KeywordValue__Gamtini_x0173_x0020pavoj_x0173_x0020zonos,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Gamtinių pavojų zonos"
	_icommon__inspireTheme_x005flit_KeywordValue__Gamybos_x0020ir_x0020pramon_x0117s_x0020_x012frenginiai,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Gamybos ir pramonės įrenginiai"
	_icommon__inspireTheme_x005flit_KeywordValue__Geografiniai_x0020pavadinimai,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Geografiniai pavadinimai"
	_icommon__inspireTheme_x005flit_KeywordValue__Geografinio_x0020tinklelio_x0020sistemos,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Geografinio tinklelio sistemos"
	_icommon__inspireTheme_x005flit_KeywordValue__Geologija,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Geologija"
	_icommon__inspireTheme_x005flit_KeywordValue__Gyventoj_x0173_x0020pasiskirstymas_x0020_x2013_x0020demografija,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Gyventojų pasiskirstymas – demografija"
	_icommon__inspireTheme_x005flit_KeywordValue__Hidrografija,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Hidrografija"
	_icommon__inspireTheme_x005flit_KeywordValue__J_x016br_x0173_x0020regionai,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Jūrų regionai"
	_icommon__inspireTheme_x005flit_KeywordValue__Kadastro_x0020sklypai,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Kadastro sklypai"
	_icommon__inspireTheme_x005flit_KeywordValue__Komunalin_x0117s_x0020_x012fmon_x0117s_x0020ir_x0020valstyb_x0117s_x0020tarnybos,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Komunalinės įmonės ir valstybės tarnybos"
	_icommon__inspireTheme_x005flit_KeywordValue__Koordina_x010di_x0173_x0020atskaitos_x0020sistemos,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Koordinačių atskaitos sistemos"
	_icommon__inspireTheme_x005flit_KeywordValue__Meteorologin_x0117s_x0020geografin_x0117s_x0020s_x0105lygos,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Meteorologinės geografinės sąlygos"
	_icommon__inspireTheme_x005flit_KeywordValue__Naudingosios_x0020i_x0161kasenos,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Naudingosios iškasenos"
	_icommon__inspireTheme_x005flit_KeywordValue__Okeanografin_x0117s_x0020geografin_x0117s_x0020s_x0105lygos,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Okeanografinės geografinės sąlygos"
	_icommon__inspireTheme_x005flit_KeywordValue__Ortofotografinis_x0020vaizdavimas,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Ortofotografinis vaizdavimas"
	_icommon__inspireTheme_x005flit_KeywordValue__Pastatai,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Pastatai"
	_icommon__inspireTheme_x005flit_KeywordValue__R_x016b_x0161i_x0173_x0020pasiskirstymas,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Rūšių pasiskirstymas"
	_icommon__inspireTheme_x005flit_KeywordValue__Saugomos_x0020teritorijos,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Saugomos teritorijos"
	_icommon__inspireTheme_x005flit_KeywordValue__Statistiniai_x0020vienetai,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Statistiniai vienetai"
	_icommon__inspireTheme_x005flit_KeywordValue__Transporto_x0020tinklai,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Transporto tinklai"
	_icommon__inspireTheme_x005flit_KeywordValue__Tvarkomos_x0020teritorijos_x002c_x0020ribojamos_x0020ir_x0020reglamentuojamos_x0020zonos_x0020bei_x0020vienetai_x002c_x0020u_x017e_x0020kuriuos_x0020atsiskaitoma,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Tvarkomos teritorijos, ribojamos ir reglamentuojamos zonos bei vienetai, už kuriuos atsiskaitoma"
	_icommon__inspireTheme_x005flit_KeywordValue___x017dem_x0117s_x0020danga,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Žemės danga"
	_icommon__inspireTheme_x005flit_KeywordValue___x017dem_x0117s_x0020naudojimas,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Žemės naudojimas"
	_icommon__inspireTheme_x005flit_KeywordValue___x017dem_x0117s_x0020_x016bkio_x0020ir_x0020akvakult_x016bros_x0020infrastrukt_x016bra,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Žemės ūkio ir akvakultūros infrastruktūra"
	_icommon__inspireTheme_x005flit_KeywordValue___x017dmoni_x0173_x0020sveikata_x0020ir_x0020sauga,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Žmonių sveikata ir sauga"
    }
                                         KeywordValue                   1;	///< Required element.
/*  RESTRICTED FROM icommon__inspireTheme:
    END OF RESTRICTED FROM icommon__inspireTheme */
/*  RESTRICTED FROM icommon__keyword:
    END OF RESTRICTED FROM icommon__keyword */
};

/// @brief "http://inspire.ec.europa.eu/schemas/common/1.0":citationInspireInteroperabilityRegulation_lit is a complexType with complexContent restriction of type "http://inspire.ec.europa.eu/schemas/common/1.0":citationConformity.
///
/// @note class icommon__citationInspireInteroperabilityRegulation_x005flit operations:
/// - icommon__citationInspireInteroperabilityRegulation_x005flit* soap_new_icommon__citationInspireInteroperabilityRegulation_x005flit(soap*) allocate and default initialize
/// - icommon__citationInspireInteroperabilityRegulation_x005flit* soap_new_icommon__citationInspireInteroperabilityRegulation_x005flit(soap*, int num) allocate and default initialize an array
/// - icommon__citationInspireInteroperabilityRegulation_x005flit* soap_new_req_icommon__citationInspireInteroperabilityRegulation_x005flit(soap*, ...) allocate, set required members
/// - icommon__citationInspireInteroperabilityRegulation_x005flit* soap_new_set_icommon__citationInspireInteroperabilityRegulation_x005flit(soap*, ...) allocate, set all public members
/// - icommon__citationInspireInteroperabilityRegulation_x005flit::soap_default(soap*) default initialize members
/// - int soap_read_icommon__citationInspireInteroperabilityRegulation_x005flit(soap*, icommon__citationInspireInteroperabilityRegulation_x005flit*) deserialize from a stream
/// - int soap_write_icommon__citationInspireInteroperabilityRegulation_x005flit(soap*, icommon__citationInspireInteroperabilityRegulation_x005flit*) serialize to a stream
/// - icommon__citationInspireInteroperabilityRegulation_x005flit* icommon__citationInspireInteroperabilityRegulation_x005flit::soap_dup(soap*) returns deep copy of icommon__citationInspireInteroperabilityRegulation_x005flit, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - icommon__citationInspireInteroperabilityRegulation_x005flit::soap_del() deep deletes icommon__citationInspireInteroperabilityRegulation_x005flit data members, use only after icommon__citationInspireInteroperabilityRegulation_x005flit::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int icommon__citationInspireInteroperabilityRegulation_x005flit::soap_type() returns SOAP_TYPE_icommon__citationInspireInteroperabilityRegulation_x005flit or derived type identifier
class icommon__citationInspireInteroperabilityRegulation_x005flit : public xsd__anyType
{ public:
    enum _icommon__citationInspireInteroperabilityRegulation_x005flit_Title
    {
	_icommon__citationInspireInteroperabilityRegulation_x005flit_Title__KOMISIJOS_x0020REGLAMENTAS_x0020_x0028ES_x0029_x0020Nr_x002e_x00201089_x002f2010_x00202010_x0020m_x002e_x0020lapkri_x010dio_x002023_x0020d_x002e_x0020kuriuo_x0020_x012fgyvendinamos_x0020Europos_x0020Parlamento_x0020ir_x0020Tarybos_x0020direktyvos_x00202007_x002f2_x002fEB_x0020nuostatos_x0020d_x0117l_x0020erdvini_x0173_x0020duomen_x0173_x0020rinkini_x0173_x0020ir_x0020paslaug_x0173_x0020s_x0105veikumo,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":notEmptyString value="KOMISIJOS REGLAMENTAS (ES) Nr. 1089/2010 2010 m. lapkričio 23 d. kuriuo įgyvendinamos Europos Parlamento ir Tarybos direktyvos 2007/2/EB nuostatos dėl erdvinių duomenų rinkinių ir paslaugų sąveikumo"
    }
                                         Title                          1;	///< Required element.
//  BEGIN CHOICE <xs:choice>
  $ int                                  __union_citationInspireInteroperabilityRegulation_x005flit;	///< Union _icommon__union_citationInspireInteroperabilityRegulation_x005flit selector: set to SOAP_UNION__icommon__union_citationInspireInteroperabilityRegulation_x005flit_<fieldname>
    union _icommon__union_citationInspireInteroperabilityRegulation_x005flit
    {
    enum _icommon__citationInspireInteroperabilityRegulation_x005flit_DateOfPublication
    {
	_icommon__citationInspireInteroperabilityRegulation_x005flit_DateOfPublication__2010_12_08,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":iso8601Date value="2010-12-08"
    }
                                        *DateOfPublication             ;	///< Choice of element (one of multiple choices).
    }                                    union_citationInspireInteroperabilityRegulation_x005flit;
//  END OF CHOICE
    enum _icommon__citationInspireInteroperabilityRegulation_x005flit_URI
    {
	_icommon__citationInspireInteroperabilityRegulation_x005flit_URI__OJ_x003aL_x003a2010_x003a323_x003a0011_x003a0102_x003aLT_x003aPDF,	///< xs:anyURI value="OJ:L:2010:323:0011:0102:LT:PDF"
    }
                                         URI                            1;	///< Required element.
/// Element "ResourceLocator" of type "http://inspire.ec.europa.eu/schemas/common/1.0":resLocInspireInteroperabilityRegulation_lit.
    icommon__resLocInspireInteroperabilityRegulation_x005flit*  ResourceLocator                1;	///< Required element.
/*  RESTRICTED FROM icommon__citationConformity:
    END OF RESTRICTED FROM icommon__citationConformity */
/*  RESTRICTED FROM icommon__citation:
    END OF RESTRICTED FROM icommon__citation */
};

/// @brief "http://inspire.ec.europa.eu/schemas/common/1.0":inspireTheme_mlt is a complexType with complexContent restriction of type "http://inspire.ec.europa.eu/schemas/common/1.0":inspireTheme.
///
/// @note class icommon__inspireTheme_x005fmlt operations:
/// - icommon__inspireTheme_x005fmlt* soap_new_icommon__inspireTheme_x005fmlt(soap*) allocate and default initialize
/// - icommon__inspireTheme_x005fmlt* soap_new_icommon__inspireTheme_x005fmlt(soap*, int num) allocate and default initialize an array
/// - icommon__inspireTheme_x005fmlt* soap_new_req_icommon__inspireTheme_x005fmlt(soap*, ...) allocate, set required members
/// - icommon__inspireTheme_x005fmlt* soap_new_set_icommon__inspireTheme_x005fmlt(soap*, ...) allocate, set all public members
/// - icommon__inspireTheme_x005fmlt::soap_default(soap*) default initialize members
/// - int soap_read_icommon__inspireTheme_x005fmlt(soap*, icommon__inspireTheme_x005fmlt*) deserialize from a stream
/// - int soap_write_icommon__inspireTheme_x005fmlt(soap*, icommon__inspireTheme_x005fmlt*) serialize to a stream
/// - icommon__inspireTheme_x005fmlt* icommon__inspireTheme_x005fmlt::soap_dup(soap*) returns deep copy of icommon__inspireTheme_x005fmlt, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - icommon__inspireTheme_x005fmlt::soap_del() deep deletes icommon__inspireTheme_x005fmlt data members, use only after icommon__inspireTheme_x005fmlt::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int icommon__inspireTheme_x005fmlt::soap_type() returns SOAP_TYPE_icommon__inspireTheme_x005fmlt or derived type identifier
class icommon__inspireTheme_x005fmlt : public xsd__anyType
{ public:
/// Element "OriginatingControlledVocabulary" of type "http://inspire.ec.europa.eu/schemas/common/1.0":originatingControlledVocabularyGemetInspireThemes.
    icommon__originatingControlledVocabularyGemetInspireThemes*  OriginatingControlledVocabulary 1;	///< Required element.
    enum _icommon__inspireTheme_x005fmlt_KeywordValue
    {
	_icommon__inspireTheme_x005fmlt_KeywordValue__Addresses,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Addresses"
	_icommon__inspireTheme_x005fmlt_KeywordValue__Administrative_x0020units,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Administrative units"
	_icommon__inspireTheme_x005fmlt_KeywordValue__Agricultural_x0020and_x0020aquaculture_x0020facilities,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Agricultural and aquaculture facilities"
	_icommon__inspireTheme_x005fmlt_KeywordValue__Area_x0020management_x002frestriction_x002fregulation_x0020zones_x0020and_x0020reporting_x0020units,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Area management/restriction/regulation zones and reporting units"
	_icommon__inspireTheme_x005fmlt_KeywordValue__Atmospheric_x0020conditions,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Atmospheric conditions"
	_icommon__inspireTheme_x005fmlt_KeywordValue__Bio_geographical_x0020regions,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Bio-geographical regions"
	_icommon__inspireTheme_x005fmlt_KeywordValue__Buildings,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Buildings"
	_icommon__inspireTheme_x005fmlt_KeywordValue__Cadastral_x0020parcels,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Cadastral parcels"
	_icommon__inspireTheme_x005fmlt_KeywordValue__Coordinate_x0020reference_x0020systems,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Coordinate reference systems"
	_icommon__inspireTheme_x005fmlt_KeywordValue__Elevation,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Elevation"
	_icommon__inspireTheme_x005fmlt_KeywordValue__Energy_x0020resources,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Energy resources"
	_icommon__inspireTheme_x005fmlt_KeywordValue__Environmental_x0020monitoring_x0020facilities,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Environmental monitoring facilities"
	_icommon__inspireTheme_x005fmlt_KeywordValue__Geographical_x0020grid_x0020systems,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Geographical grid systems"
	_icommon__inspireTheme_x005fmlt_KeywordValue__Geographical_x0020names,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Geographical names"
	_icommon__inspireTheme_x005fmlt_KeywordValue__Geology,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Geology"
	_icommon__inspireTheme_x005fmlt_KeywordValue__Habitats_x0020and_x0020biotopes,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Habitats and biotopes"
	_icommon__inspireTheme_x005fmlt_KeywordValue__Human_x0020health_x0020and_x0020safety,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Human health and safety"
	_icommon__inspireTheme_x005fmlt_KeywordValue__Hydrography,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Hydrography"
	_icommon__inspireTheme_x005fmlt_KeywordValue__Land_x0020cover,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Land cover"
	_icommon__inspireTheme_x005fmlt_KeywordValue__Land_x0020use,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Land use"
	_icommon__inspireTheme_x005fmlt_KeywordValue__Meteorological_x0020geographical_x0020features,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Meteorological geographical features"
	_icommon__inspireTheme_x005fmlt_KeywordValue__Mineral_x0020resources,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Mineral resources"
	_icommon__inspireTheme_x005fmlt_KeywordValue__Natural_x0020risk_x0020zones,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Natural risk zones"
	_icommon__inspireTheme_x005fmlt_KeywordValue__Oceanographic_x0020geographical_x0020features,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Oceanographic geographical features"
	_icommon__inspireTheme_x005fmlt_KeywordValue__Orthoimagery,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Orthoimagery"
	_icommon__inspireTheme_x005fmlt_KeywordValue__Population_x0020distribution_x0020_x2014_x0020demography,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Population distribution — demography"
	_icommon__inspireTheme_x005fmlt_KeywordValue__Production_x0020and_x0020industrial_x0020facilities,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Production and industrial facilities"
	_icommon__inspireTheme_x005fmlt_KeywordValue__Protected_x0020sites,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Protected sites"
	_icommon__inspireTheme_x005fmlt_KeywordValue__Sea_x0020regions,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Sea regions"
	_icommon__inspireTheme_x005fmlt_KeywordValue__Soil,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Soil"
	_icommon__inspireTheme_x005fmlt_KeywordValue__Species_x0020distribution,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Species distribution"
	_icommon__inspireTheme_x005fmlt_KeywordValue__Statistical_x0020units,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Statistical units"
	_icommon__inspireTheme_x005fmlt_KeywordValue__Transport_x0020networks,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Transport networks"
	_icommon__inspireTheme_x005fmlt_KeywordValue__Utility_x0020and_x0020governmental_x0020services,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Utility and governmental services"
    }
                                         KeywordValue                   1;	///< Required element.
/*  RESTRICTED FROM icommon__inspireTheme:
    END OF RESTRICTED FROM icommon__inspireTheme */
/*  RESTRICTED FROM icommon__keyword:
    END OF RESTRICTED FROM icommon__keyword */
};

/// @brief "http://inspire.ec.europa.eu/schemas/common/1.0":citationInspireInteroperabilityRegulation_mlt is a complexType with complexContent restriction of type "http://inspire.ec.europa.eu/schemas/common/1.0":citationConformity.
///
/// @note class icommon__citationInspireInteroperabilityRegulation_x005fmlt operations:
/// - icommon__citationInspireInteroperabilityRegulation_x005fmlt* soap_new_icommon__citationInspireInteroperabilityRegulation_x005fmlt(soap*) allocate and default initialize
/// - icommon__citationInspireInteroperabilityRegulation_x005fmlt* soap_new_icommon__citationInspireInteroperabilityRegulation_x005fmlt(soap*, int num) allocate and default initialize an array
/// - icommon__citationInspireInteroperabilityRegulation_x005fmlt* soap_new_req_icommon__citationInspireInteroperabilityRegulation_x005fmlt(soap*, ...) allocate, set required members
/// - icommon__citationInspireInteroperabilityRegulation_x005fmlt* soap_new_set_icommon__citationInspireInteroperabilityRegulation_x005fmlt(soap*, ...) allocate, set all public members
/// - icommon__citationInspireInteroperabilityRegulation_x005fmlt::soap_default(soap*) default initialize members
/// - int soap_read_icommon__citationInspireInteroperabilityRegulation_x005fmlt(soap*, icommon__citationInspireInteroperabilityRegulation_x005fmlt*) deserialize from a stream
/// - int soap_write_icommon__citationInspireInteroperabilityRegulation_x005fmlt(soap*, icommon__citationInspireInteroperabilityRegulation_x005fmlt*) serialize to a stream
/// - icommon__citationInspireInteroperabilityRegulation_x005fmlt* icommon__citationInspireInteroperabilityRegulation_x005fmlt::soap_dup(soap*) returns deep copy of icommon__citationInspireInteroperabilityRegulation_x005fmlt, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - icommon__citationInspireInteroperabilityRegulation_x005fmlt::soap_del() deep deletes icommon__citationInspireInteroperabilityRegulation_x005fmlt data members, use only after icommon__citationInspireInteroperabilityRegulation_x005fmlt::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int icommon__citationInspireInteroperabilityRegulation_x005fmlt::soap_type() returns SOAP_TYPE_icommon__citationInspireInteroperabilityRegulation_x005fmlt or derived type identifier
class icommon__citationInspireInteroperabilityRegulation_x005fmlt : public xsd__anyType
{ public:
    enum _icommon__citationInspireInteroperabilityRegulation_x005fmlt_Title
    {
	_icommon__citationInspireInteroperabilityRegulation_x005fmlt_Title__REGOLAMENT_x0020TAL_KUMMISSJONI_x0020_x0028UE_x0029_x0020Nru_x00201089_x002f2010_x0020tat_23_x0020ta_x0027_x0020Novembru_x00202010_x0020li_x0020jimplimenta_x0020d_Direttiva_x00202007_x002f2_x002fKE_x0020tal_Parlament_x0020Ewropew_x0020u_x0020tal_Kunsill_x0020fir_rigward_x0020tal__x0020interoperabbilt_x00e0_x0020tas_settijiet_x0020ta_x2019_x0020dejta_x0020u_x0020servizzi_x0020_x0121eografi_x010bi,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":notEmptyString value="REGOLAMENT TAL-KUMMISSJONI (UE) Nru 1089/2010 tat-23 ta' Novembru 2010 li jimplimenta d-Direttiva 2007/2/KE tal-Parlament Ewropew u tal-Kunsill fir-rigward tal- interoperabbiltà tas-settijiet ta’ dejta u servizzi ġeografiċi"
    }
                                         Title                          1;	///< Required element.
//  BEGIN CHOICE <xs:choice>
  $ int                                  __union_citationInspireInteroperabilityRegulation_x005fmlt;	///< Union _icommon__union_citationInspireInteroperabilityRegulation_x005fmlt selector: set to SOAP_UNION__icommon__union_citationInspireInteroperabilityRegulation_x005fmlt_<fieldname>
    union _icommon__union_citationInspireInteroperabilityRegulation_x005fmlt
    {
    enum _icommon__citationInspireInteroperabilityRegulation_x005fmlt_DateOfPublication
    {
	_icommon__citationInspireInteroperabilityRegulation_x005fmlt_DateOfPublication__2010_12_08,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":iso8601Date value="2010-12-08"
    }
                                        *DateOfPublication             ;	///< Choice of element (one of multiple choices).
    }                                    union_citationInspireInteroperabilityRegulation_x005fmlt;
//  END OF CHOICE
    enum _icommon__citationInspireInteroperabilityRegulation_x005fmlt_URI
    {
	_icommon__citationInspireInteroperabilityRegulation_x005fmlt_URI__OJ_x003aL_x003a2010_x003a323_x003a0011_x003a0102_x003aMT_x003aPDF,	///< xs:anyURI value="OJ:L:2010:323:0011:0102:MT:PDF"
    }
                                         URI                            1;	///< Required element.
/// Element "ResourceLocator" of type "http://inspire.ec.europa.eu/schemas/common/1.0":resLocInspireInteroperabilityRegulation_mlt.
    icommon__resLocInspireInteroperabilityRegulation_x005fmlt*  ResourceLocator                1;	///< Required element.
/*  RESTRICTED FROM icommon__citationConformity:
    END OF RESTRICTED FROM icommon__citationConformity */
/*  RESTRICTED FROM icommon__citation:
    END OF RESTRICTED FROM icommon__citation */
};

/// @brief "http://inspire.ec.europa.eu/schemas/common/1.0":inspireTheme_pol is a complexType with complexContent restriction of type "http://inspire.ec.europa.eu/schemas/common/1.0":inspireTheme.
///
/// @note class icommon__inspireTheme_x005fpol operations:
/// - icommon__inspireTheme_x005fpol* soap_new_icommon__inspireTheme_x005fpol(soap*) allocate and default initialize
/// - icommon__inspireTheme_x005fpol* soap_new_icommon__inspireTheme_x005fpol(soap*, int num) allocate and default initialize an array
/// - icommon__inspireTheme_x005fpol* soap_new_req_icommon__inspireTheme_x005fpol(soap*, ...) allocate, set required members
/// - icommon__inspireTheme_x005fpol* soap_new_set_icommon__inspireTheme_x005fpol(soap*, ...) allocate, set all public members
/// - icommon__inspireTheme_x005fpol::soap_default(soap*) default initialize members
/// - int soap_read_icommon__inspireTheme_x005fpol(soap*, icommon__inspireTheme_x005fpol*) deserialize from a stream
/// - int soap_write_icommon__inspireTheme_x005fpol(soap*, icommon__inspireTheme_x005fpol*) serialize to a stream
/// - icommon__inspireTheme_x005fpol* icommon__inspireTheme_x005fpol::soap_dup(soap*) returns deep copy of icommon__inspireTheme_x005fpol, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - icommon__inspireTheme_x005fpol::soap_del() deep deletes icommon__inspireTheme_x005fpol data members, use only after icommon__inspireTheme_x005fpol::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int icommon__inspireTheme_x005fpol::soap_type() returns SOAP_TYPE_icommon__inspireTheme_x005fpol or derived type identifier
class icommon__inspireTheme_x005fpol : public xsd__anyType
{ public:
/// Element "OriginatingControlledVocabulary" of type "http://inspire.ec.europa.eu/schemas/common/1.0":originatingControlledVocabularyGemetInspireThemes.
    icommon__originatingControlledVocabularyGemetInspireThemes*  OriginatingControlledVocabulary 1;	///< Required element.
    enum _icommon__inspireTheme_x005fpol_KeywordValue
    {
	_icommon__inspireTheme_x005fpol_KeywordValue__Adresy,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Adresy"
	_icommon__inspireTheme_x005fpol_KeywordValue__Budynki,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Budynki"
	_icommon__inspireTheme_x005fpol_KeywordValue__Dzia_x0142ki_x0020katastralne,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Działki katastralne"
	_icommon__inspireTheme_x005fpol_KeywordValue__Geologia,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Geologia"
	_icommon__inspireTheme_x005fpol_KeywordValue__Gleba,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Gleba"
	_icommon__inspireTheme_x005fpol_KeywordValue__Gospodarowanie_x0020obszarem_x002fstrefy_x0020ograniczone_x002fregulacyjne_x0020oraz_x0020jednostki_x0020sprawozdawcze,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Gospodarowanie obszarem/strefy ograniczone/regulacyjne oraz jednostki sprawozdawcze"
	_icommon__inspireTheme_x005fpol_KeywordValue__Hydrografia,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Hydrografia"
	_icommon__inspireTheme_x005fpol_KeywordValue__Jednostki_x0020administracyjne,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Jednostki administracyjne"
	_icommon__inspireTheme_x005fpol_KeywordValue__Jednostki_x0020statystyczne,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Jednostki statystyczne"
	_icommon__inspireTheme_x005fpol_KeywordValue__Nazwy_x0020geograficzne,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Nazwy geograficzne"
	_icommon__inspireTheme_x005fpol_KeywordValue__Obiekty_x0020produkcyjne_x0020i_x0020przemys_x0142owe,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Obiekty produkcyjne i przemysłowe"
	_icommon__inspireTheme_x005fpol_KeywordValue__Obiekty_x0020rolnicze_x0020oraz_x0020akwakultury,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Obiekty rolnicze oraz akwakultury"
	_icommon__inspireTheme_x005fpol_KeywordValue__Obszary_x0020chronione,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Obszary chronione"
	_icommon__inspireTheme_x005fpol_KeywordValue__Regiony_x0020biogeograficzne,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Regiony biogeograficzne"
	_icommon__inspireTheme_x005fpol_KeywordValue__Regiony_x0020morskie,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Regiony morskie"
	_icommon__inspireTheme_x005fpol_KeywordValue__Rozmieszczenie_x0020gatunk_x00f3w,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Rozmieszczenie gatunków"
	_icommon__inspireTheme_x005fpol_KeywordValue__Rozmieszczenie_x0020ludno_x015bci_x0020_x2013_x0020demografia,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Rozmieszczenie ludności – demografia"
	_icommon__inspireTheme_x005fpol_KeywordValue__Sieci_x0020transportowe,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Sieci transportowe"
	_icommon__inspireTheme_x005fpol_KeywordValue__Siedliska_x0020i_x0020obszary_x0020przyrodniczo_x0020jednorodne,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Siedliska i obszary przyrodniczo jednorodne"
	_icommon__inspireTheme_x005fpol_KeywordValue__Sporz_x0105dzanie_x0020ortoobraz_x00f3w,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Sporządzanie ortoobrazów"
	_icommon__inspireTheme_x005fpol_KeywordValue__Strefy_x0020zagro_x017cenia_x0020naturalnego,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Strefy zagrożenia naturalnego"
	_icommon__inspireTheme_x005fpol_KeywordValue__Systemy_x0020odniesienia_x0020za_x0020pomoc_x0105_x0020wsp_x00f3_x0142rz_x0119dnych,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Systemy odniesienia za pomocą współrzędnych"
	_icommon__inspireTheme_x005fpol_KeywordValue__Systemy_x0020siatek_x0020geograficznych,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Systemy siatek geograficznych"
	_icommon__inspireTheme_x005fpol_KeywordValue__Ukszta_x0142towanie_x0020terenu,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Ukształtowanie terenu"
	_icommon__inspireTheme_x005fpol_KeywordValue__Urz_x0105dzenia_x0020do_x0020monitorowania_x0020_x015brodowiska,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Urządzenia do monitorowania środowiska"
	_icommon__inspireTheme_x005fpol_KeywordValue__Us_x0142ugi_x0020u_x017cyteczno_x015bci_x0020publicznej_x0020i_x0020s_x0142u_x017cby_x0020pa_x0144stwowe,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Usługi użyteczności publicznej i służby państwowe"
	_icommon__inspireTheme_x005fpol_KeywordValue__U_x017cytkowanie_x0020terenu,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Użytkowanie terenu"
	_icommon__inspireTheme_x005fpol_KeywordValue__Warunki_x0020atmosferyczne,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Warunki atmosferyczne"
	_icommon__inspireTheme_x005fpol_KeywordValue__Warunki_x0020meteorologiczno_geograficzne,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Warunki meteorologiczno-geograficzne"
	_icommon__inspireTheme_x005fpol_KeywordValue__Warunki_x0020oceanograficzno_geograficzne,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Warunki oceanograficzno-geograficzne"
	_icommon__inspireTheme_x005fpol_KeywordValue__Zagospodarowanie_x0020przestrzenne,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Zagospodarowanie przestrzenne"
	_icommon__inspireTheme_x005fpol_KeywordValue__Zasoby_x0020energetyczne,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Zasoby energetyczne"
	_icommon__inspireTheme_x005fpol_KeywordValue__Zasoby_x0020mineralne,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Zasoby mineralne"
	_icommon__inspireTheme_x005fpol_KeywordValue__Zdrowie_x0020i_x0020bezpiecze_x0144stwo_x0020ludzi,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Zdrowie i bezpieczeństwo ludzi"
    }
                                         KeywordValue                   1;	///< Required element.
/*  RESTRICTED FROM icommon__inspireTheme:
    END OF RESTRICTED FROM icommon__inspireTheme */
/*  RESTRICTED FROM icommon__keyword:
    END OF RESTRICTED FROM icommon__keyword */
};

/// @brief "http://inspire.ec.europa.eu/schemas/common/1.0":citationInspireInteroperabilityRegulation_pol is a complexType with complexContent restriction of type "http://inspire.ec.europa.eu/schemas/common/1.0":citationConformity.
///
/// @note class icommon__citationInspireInteroperabilityRegulation_x005fpol operations:
/// - icommon__citationInspireInteroperabilityRegulation_x005fpol* soap_new_icommon__citationInspireInteroperabilityRegulation_x005fpol(soap*) allocate and default initialize
/// - icommon__citationInspireInteroperabilityRegulation_x005fpol* soap_new_icommon__citationInspireInteroperabilityRegulation_x005fpol(soap*, int num) allocate and default initialize an array
/// - icommon__citationInspireInteroperabilityRegulation_x005fpol* soap_new_req_icommon__citationInspireInteroperabilityRegulation_x005fpol(soap*, ...) allocate, set required members
/// - icommon__citationInspireInteroperabilityRegulation_x005fpol* soap_new_set_icommon__citationInspireInteroperabilityRegulation_x005fpol(soap*, ...) allocate, set all public members
/// - icommon__citationInspireInteroperabilityRegulation_x005fpol::soap_default(soap*) default initialize members
/// - int soap_read_icommon__citationInspireInteroperabilityRegulation_x005fpol(soap*, icommon__citationInspireInteroperabilityRegulation_x005fpol*) deserialize from a stream
/// - int soap_write_icommon__citationInspireInteroperabilityRegulation_x005fpol(soap*, icommon__citationInspireInteroperabilityRegulation_x005fpol*) serialize to a stream
/// - icommon__citationInspireInteroperabilityRegulation_x005fpol* icommon__citationInspireInteroperabilityRegulation_x005fpol::soap_dup(soap*) returns deep copy of icommon__citationInspireInteroperabilityRegulation_x005fpol, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - icommon__citationInspireInteroperabilityRegulation_x005fpol::soap_del() deep deletes icommon__citationInspireInteroperabilityRegulation_x005fpol data members, use only after icommon__citationInspireInteroperabilityRegulation_x005fpol::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int icommon__citationInspireInteroperabilityRegulation_x005fpol::soap_type() returns SOAP_TYPE_icommon__citationInspireInteroperabilityRegulation_x005fpol or derived type identifier
class icommon__citationInspireInteroperabilityRegulation_x005fpol : public xsd__anyType
{ public:
    enum _icommon__citationInspireInteroperabilityRegulation_x005fpol_Title
    {
	_icommon__citationInspireInteroperabilityRegulation_x005fpol_Title__ROZPORZ_x0104DZENIE_x0020KOMISJI_x0020_x0028UE_x0029_x0020NR_x00201089_x002f2010_x0020z_x0020dnia_x002023_x0020listopada_x00202010_x0020r_x002e_x0020w_x0020sprawie_x0020wykonania_x0020dyrektywy_x00202007_x002f2_x002fWE_x0020Parlamentu_x0020Europejskiego_x0020i_x0020Rady_x0020w_x0020zakresie_x0020interoperacyjno_x015bci_x0020zbior_x00f3w_x0020i_x0020us_x0142ug_x0020danych_x0020przestrzennych,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":notEmptyString value="ROZPORZĄDZENIE KOMISJI (UE) NR 1089/2010 z dnia 23 listopada 2010 r. w sprawie wykonania dyrektywy 2007/2/WE Parlamentu Europejskiego i Rady w zakresie interoperacyjności zbiorów i usług danych przestrzennych"
    }
                                         Title                          1;	///< Required element.
//  BEGIN CHOICE <xs:choice>
  $ int                                  __union_citationInspireInteroperabilityRegulation_x005fpol;	///< Union _icommon__union_citationInspireInteroperabilityRegulation_x005fpol selector: set to SOAP_UNION__icommon__union_citationInspireInteroperabilityRegulation_x005fpol_<fieldname>
    union _icommon__union_citationInspireInteroperabilityRegulation_x005fpol
    {
    enum _icommon__citationInspireInteroperabilityRegulation_x005fpol_DateOfPublication
    {
	_icommon__citationInspireInteroperabilityRegulation_x005fpol_DateOfPublication__2010_12_08,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":iso8601Date value="2010-12-08"
    }
                                        *DateOfPublication             ;	///< Choice of element (one of multiple choices).
    }                                    union_citationInspireInteroperabilityRegulation_x005fpol;
//  END OF CHOICE
    enum _icommon__citationInspireInteroperabilityRegulation_x005fpol_URI
    {
	_icommon__citationInspireInteroperabilityRegulation_x005fpol_URI__OJ_x003aL_x003a2010_x003a323_x003a0011_x003a0102_x003aPL_x003aPDF,	///< xs:anyURI value="OJ:L:2010:323:0011:0102:PL:PDF"
    }
                                         URI                            1;	///< Required element.
/// Element "ResourceLocator" of type "http://inspire.ec.europa.eu/schemas/common/1.0":resLocInspireInteroperabilityRegulation_pol.
    icommon__resLocInspireInteroperabilityRegulation_x005fpol*  ResourceLocator                1;	///< Required element.
/*  RESTRICTED FROM icommon__citationConformity:
    END OF RESTRICTED FROM icommon__citationConformity */
/*  RESTRICTED FROM icommon__citation:
    END OF RESTRICTED FROM icommon__citation */
};

/// @brief "http://inspire.ec.europa.eu/schemas/common/1.0":inspireTheme_por is a complexType with complexContent restriction of type "http://inspire.ec.europa.eu/schemas/common/1.0":inspireTheme.
///
/// @note class icommon__inspireTheme_x005fpor operations:
/// - icommon__inspireTheme_x005fpor* soap_new_icommon__inspireTheme_x005fpor(soap*) allocate and default initialize
/// - icommon__inspireTheme_x005fpor* soap_new_icommon__inspireTheme_x005fpor(soap*, int num) allocate and default initialize an array
/// - icommon__inspireTheme_x005fpor* soap_new_req_icommon__inspireTheme_x005fpor(soap*, ...) allocate, set required members
/// - icommon__inspireTheme_x005fpor* soap_new_set_icommon__inspireTheme_x005fpor(soap*, ...) allocate, set all public members
/// - icommon__inspireTheme_x005fpor::soap_default(soap*) default initialize members
/// - int soap_read_icommon__inspireTheme_x005fpor(soap*, icommon__inspireTheme_x005fpor*) deserialize from a stream
/// - int soap_write_icommon__inspireTheme_x005fpor(soap*, icommon__inspireTheme_x005fpor*) serialize to a stream
/// - icommon__inspireTheme_x005fpor* icommon__inspireTheme_x005fpor::soap_dup(soap*) returns deep copy of icommon__inspireTheme_x005fpor, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - icommon__inspireTheme_x005fpor::soap_del() deep deletes icommon__inspireTheme_x005fpor data members, use only after icommon__inspireTheme_x005fpor::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int icommon__inspireTheme_x005fpor::soap_type() returns SOAP_TYPE_icommon__inspireTheme_x005fpor or derived type identifier
class icommon__inspireTheme_x005fpor : public xsd__anyType
{ public:
/// Element "OriginatingControlledVocabulary" of type "http://inspire.ec.europa.eu/schemas/common/1.0":originatingControlledVocabularyGemetInspireThemes.
    icommon__originatingControlledVocabularyGemetInspireThemes*  OriginatingControlledVocabulary 1;	///< Required element.
    enum _icommon__inspireTheme_x005fpor_KeywordValue
    {
	_icommon__inspireTheme_x005fpor_KeywordValue__Altitude,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Altitude"
	_icommon__inspireTheme_x005fpor_KeywordValue__Caracter_x00edsticas_x0020geometeorol_x00f3gicas,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Características geometeorológicas"
	_icommon__inspireTheme_x005fpor_KeywordValue__Caracter_x00edsticas_x0020oceanogr_x00e1ficas,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Características oceanográficas"
	_icommon__inspireTheme_x005fpor_KeywordValue__Condi_x00e7_x00f5es_x0020atmosf_x00e9ricas,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Condições atmosféricas"
	_icommon__inspireTheme_x005fpor_KeywordValue__Distribui_x00e7_x00e3o_x0020da_x0020popula_x00e7_x00e3o_x0020_x2014_x0020demografia,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Distribuição da população — demografia"
	_icommon__inspireTheme_x005fpor_KeywordValue__Distribui_x00e7_x00e3o_x0020das_x0020esp_x00e9cies,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Distribuição das espécies"
	_icommon__inspireTheme_x005fpor_KeywordValue__Edif_x00edcios,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Edifícios"
	_icommon__inspireTheme_x005fpor_KeywordValue__Endere_x00e7os,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Endereços"
	_icommon__inspireTheme_x005fpor_KeywordValue__Geologia,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Geologia"
	_icommon__inspireTheme_x005fpor_KeywordValue__Habitats_x0020e_x0020bi_x00f3topos,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Habitats e biótopos"
	_icommon__inspireTheme_x005fpor_KeywordValue__Hidrografia,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Hidrografia"
	_icommon__inspireTheme_x005fpor_KeywordValue__Instala_x00e7_x00f5es_x0020agr_x00edcolas_x0020e_x0020aqu_x00edcolas,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Instalações agrícolas e aquícolas"
	_icommon__inspireTheme_x005fpor_KeywordValue__Instala_x00e7_x00f5es_x0020de_x0020monitoriza_x00e7_x00e3o_x0020do_x0020ambiente,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Instalações de monitorização do ambiente"
	_icommon__inspireTheme_x005fpor_KeywordValue__Instala_x00e7_x00f5es_x0020industriais_x0020e_x0020de_x0020produ_x00e7_x00e3o,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Instalações industriais e de produção"
	_icommon__inspireTheme_x005fpor_KeywordValue__Ocupa_x00e7_x00e3o_x0020do_x0020solo,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Ocupação do solo"
	_icommon__inspireTheme_x005fpor_KeywordValue__Ortoimagens,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Ortoimagens"
	_icommon__inspireTheme_x005fpor_KeywordValue__Parcelas_x0020cadastrais,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Parcelas cadastrais"
	_icommon__inspireTheme_x005fpor_KeywordValue__Recursos_x0020energ_x00e9ticos,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Recursos energéticos"
	_icommon__inspireTheme_x005fpor_KeywordValue__Recursos_x0020minerais,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Recursos minerais"
	_icommon__inspireTheme_x005fpor_KeywordValue__Redes_x0020de_x0020transporte,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Redes de transporte"
	_icommon__inspireTheme_x005fpor_KeywordValue__Regi_x00f5es_x0020biogeogr_x00e1ficas,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Regiões biogeográficas"
	_icommon__inspireTheme_x005fpor_KeywordValue__Regi_x00f5es_x0020marinhas,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Regiões marinhas"
	_icommon__inspireTheme_x005fpor_KeywordValue__Sa_x00fade_x0020humana_x0020e_x0020seguran_x00e7a,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Saúde humana e segurança"
	_icommon__inspireTheme_x005fpor_KeywordValue__Servi_x00e7os_x0020de_x0020utilidade_x0020p_x00fablica_x0020e_x0020do_x0020Estado,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Serviços de utilidade pública e do Estado"
	_icommon__inspireTheme_x005fpor_KeywordValue__Sistemas_x0020de_x0020quadr_x00edculas_x0020geogr_x00e1ficas,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Sistemas de quadrículas geográficas"
	_icommon__inspireTheme_x005fpor_KeywordValue__Sistemas_x0020de_x0020referencia,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Sistemas de referencia"
	_icommon__inspireTheme_x005fpor_KeywordValue__S_x00edtios_x0020protegidos,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Sítios protegidos"
	_icommon__inspireTheme_x005fpor_KeywordValue__Solo,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Solo"
	_icommon__inspireTheme_x005fpor_KeywordValue__Topon_x00edmia,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Toponímia"
	_icommon__inspireTheme_x005fpor_KeywordValue__Unidades_x0020administrativas,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Unidades administrativas"
	_icommon__inspireTheme_x005fpor_KeywordValue__Unidades_x0020estat_x00edsticas,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Unidades estatísticas"
	_icommon__inspireTheme_x005fpor_KeywordValue__Uso_x0020do_x0020solo,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Uso do solo"
	_icommon__inspireTheme_x005fpor_KeywordValue__Zonas_x0020de_x0020gest_x00e3o_x002frestri_x00e7_x00e3o_x002fregulamenta_x00e7_x00e3o_x0020e_x0020unidades_x0020de_x0020refer_x00eancia,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Zonas de gestão/restrição/regulamentação e unidades de referência"
	_icommon__inspireTheme_x005fpor_KeywordValue__Zonas_x0020de_x0020risco_x0020natural,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Zonas de risco natural"
    }
                                         KeywordValue                   1;	///< Required element.
/*  RESTRICTED FROM icommon__inspireTheme:
    END OF RESTRICTED FROM icommon__inspireTheme */
/*  RESTRICTED FROM icommon__keyword:
    END OF RESTRICTED FROM icommon__keyword */
};

/// @brief "http://inspire.ec.europa.eu/schemas/common/1.0":citationInspireInteroperabilityRegulation_por is a complexType with complexContent restriction of type "http://inspire.ec.europa.eu/schemas/common/1.0":citationConformity.
///
/// @note class icommon__citationInspireInteroperabilityRegulation_x005fpor operations:
/// - icommon__citationInspireInteroperabilityRegulation_x005fpor* soap_new_icommon__citationInspireInteroperabilityRegulation_x005fpor(soap*) allocate and default initialize
/// - icommon__citationInspireInteroperabilityRegulation_x005fpor* soap_new_icommon__citationInspireInteroperabilityRegulation_x005fpor(soap*, int num) allocate and default initialize an array
/// - icommon__citationInspireInteroperabilityRegulation_x005fpor* soap_new_req_icommon__citationInspireInteroperabilityRegulation_x005fpor(soap*, ...) allocate, set required members
/// - icommon__citationInspireInteroperabilityRegulation_x005fpor* soap_new_set_icommon__citationInspireInteroperabilityRegulation_x005fpor(soap*, ...) allocate, set all public members
/// - icommon__citationInspireInteroperabilityRegulation_x005fpor::soap_default(soap*) default initialize members
/// - int soap_read_icommon__citationInspireInteroperabilityRegulation_x005fpor(soap*, icommon__citationInspireInteroperabilityRegulation_x005fpor*) deserialize from a stream
/// - int soap_write_icommon__citationInspireInteroperabilityRegulation_x005fpor(soap*, icommon__citationInspireInteroperabilityRegulation_x005fpor*) serialize to a stream
/// - icommon__citationInspireInteroperabilityRegulation_x005fpor* icommon__citationInspireInteroperabilityRegulation_x005fpor::soap_dup(soap*) returns deep copy of icommon__citationInspireInteroperabilityRegulation_x005fpor, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - icommon__citationInspireInteroperabilityRegulation_x005fpor::soap_del() deep deletes icommon__citationInspireInteroperabilityRegulation_x005fpor data members, use only after icommon__citationInspireInteroperabilityRegulation_x005fpor::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int icommon__citationInspireInteroperabilityRegulation_x005fpor::soap_type() returns SOAP_TYPE_icommon__citationInspireInteroperabilityRegulation_x005fpor or derived type identifier
class icommon__citationInspireInteroperabilityRegulation_x005fpor : public xsd__anyType
{ public:
    enum _icommon__citationInspireInteroperabilityRegulation_x005fpor_Title
    {
	_icommon__citationInspireInteroperabilityRegulation_x005fpor_Title__REGULAMENTO_x0020_x0028UE_x0029_x0020N_x002e_x0020o_x00201089_x002f2010_x0020DA_x0020COMISS_x00c3O_x0020de_x002023_x0020de_x0020Novembro_x0020de_x00202010_x0020que_x0020estabelece_x0020as_x0020disposi_x00e7_x00f5es_x0020de_x0020execu_x00e7_x00e3o_x0020da_x0020Directiva_x00202007_x002f2_x002fCE_x0020do_x0020Parlamento_x0020Europeu_x0020e_x0020do_x0020Conselho_x0020relativamente_x0020_x00e0_x0020interoperabilidade_x0020dos_x0020conjuntos_x0020e_x0020servi_x00e7os_x0020de_x0020dados_x0020geogr_x00e1ficos,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":notEmptyString value="REGULAMENTO (UE) N. o 1089/2010 DA COMISSÃO de 23 de Novembro de 2010 que estabelece as disposições de execução da Directiva 2007/2/CE do Parlamento Europeu e do Conselho relativamente à interoperabilidade dos conjuntos e serviços de dados geográficos"
    }
                                         Title                          1;	///< Required element.
//  BEGIN CHOICE <xs:choice>
  $ int                                  __union_citationInspireInteroperabilityRegulation_x005fpor;	///< Union _icommon__union_citationInspireInteroperabilityRegulation_x005fpor selector: set to SOAP_UNION__icommon__union_citationInspireInteroperabilityRegulation_x005fpor_<fieldname>
    union _icommon__union_citationInspireInteroperabilityRegulation_x005fpor
    {
    enum _icommon__citationInspireInteroperabilityRegulation_x005fpor_DateOfPublication
    {
	_icommon__citationInspireInteroperabilityRegulation_x005fpor_DateOfPublication__2010_12_08,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":iso8601Date value="2010-12-08"
    }
                                        *DateOfPublication             ;	///< Choice of element (one of multiple choices).
    }                                    union_citationInspireInteroperabilityRegulation_x005fpor;
//  END OF CHOICE
    enum _icommon__citationInspireInteroperabilityRegulation_x005fpor_URI
    {
	_icommon__citationInspireInteroperabilityRegulation_x005fpor_URI__OJ_x003aL_x003a2010_x003a323_x003a0011_x003a0102_x003aPT_x003aPDF,	///< xs:anyURI value="OJ:L:2010:323:0011:0102:PT:PDF"
    }
                                         URI                            1;	///< Required element.
/// Element "ResourceLocator" of type "http://inspire.ec.europa.eu/schemas/common/1.0":resLocInspireInteroperabilityRegulation_por.
    icommon__resLocInspireInteroperabilityRegulation_x005fpor*  ResourceLocator                1;	///< Required element.
/*  RESTRICTED FROM icommon__citationConformity:
    END OF RESTRICTED FROM icommon__citationConformity */
/*  RESTRICTED FROM icommon__citation:
    END OF RESTRICTED FROM icommon__citation */
};

/// @brief "http://inspire.ec.europa.eu/schemas/common/1.0":inspireTheme_rum is a complexType with complexContent restriction of type "http://inspire.ec.europa.eu/schemas/common/1.0":inspireTheme.
///
/// @note class icommon__inspireTheme_x005frum operations:
/// - icommon__inspireTheme_x005frum* soap_new_icommon__inspireTheme_x005frum(soap*) allocate and default initialize
/// - icommon__inspireTheme_x005frum* soap_new_icommon__inspireTheme_x005frum(soap*, int num) allocate and default initialize an array
/// - icommon__inspireTheme_x005frum* soap_new_req_icommon__inspireTheme_x005frum(soap*, ...) allocate, set required members
/// - icommon__inspireTheme_x005frum* soap_new_set_icommon__inspireTheme_x005frum(soap*, ...) allocate, set all public members
/// - icommon__inspireTheme_x005frum::soap_default(soap*) default initialize members
/// - int soap_read_icommon__inspireTheme_x005frum(soap*, icommon__inspireTheme_x005frum*) deserialize from a stream
/// - int soap_write_icommon__inspireTheme_x005frum(soap*, icommon__inspireTheme_x005frum*) serialize to a stream
/// - icommon__inspireTheme_x005frum* icommon__inspireTheme_x005frum::soap_dup(soap*) returns deep copy of icommon__inspireTheme_x005frum, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - icommon__inspireTheme_x005frum::soap_del() deep deletes icommon__inspireTheme_x005frum data members, use only after icommon__inspireTheme_x005frum::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int icommon__inspireTheme_x005frum::soap_type() returns SOAP_TYPE_icommon__inspireTheme_x005frum or derived type identifier
class icommon__inspireTheme_x005frum : public xsd__anyType
{ public:
/// Element "OriginatingControlledVocabulary" of type "http://inspire.ec.europa.eu/schemas/common/1.0":originatingControlledVocabularyGemetInspireThemes.
    icommon__originatingControlledVocabularyGemetInspireThemes*  OriginatingControlledVocabulary 1;	///< Required element.
    enum _icommon__inspireTheme_x005frum_KeywordValue
    {
	_icommon__inspireTheme_x005frum_KeywordValue__Acoperire_x0020terestr_x0103,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Acoperire terestră"
	_icommon__inspireTheme_x005frum_KeywordValue__Adrese,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Adrese"
	_icommon__inspireTheme_x005frum_KeywordValue__Caracteristici_x0020geografice_x0020meteorologice,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Caracteristici geografice meteorologice"
	_icommon__inspireTheme_x005frum_KeywordValue__Caracteristici_x0020geografice_x0020oceanografice,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Caracteristici geografice oceanografice"
	_icommon__inspireTheme_x005frum_KeywordValue__Cl_x0103diri,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Clădiri"
	_icommon__inspireTheme_x005frum_KeywordValue__Condi_x0163ii_x0020atmosferice,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Condiţii atmosferice"
	_icommon__inspireTheme_x005frum_KeywordValue__Denumiri_x0020geografice,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Denumiri geografice"
	_icommon__inspireTheme_x005frum_KeywordValue__Eleva_x0163ie,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Elevaţie"
	_icommon__inspireTheme_x005frum_KeywordValue__Geologie,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Geologie"
	_icommon__inspireTheme_x005frum_KeywordValue__Habitate_x0020_x015fi_x0020biotopuri,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Habitate şi biotopuri"
	_icommon__inspireTheme_x005frum_KeywordValue__Hidrografie,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Hidrografie"
	_icommon__inspireTheme_x005frum_KeywordValue__Instala_x0163ii_x0020agricole_x0020_x015fi_x0020pentru_x0020acvacultur_x0103,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Instalaţii agricole şi pentru acvacultură"
	_icommon__inspireTheme_x005frum_KeywordValue__Instala_x0163ii_x0020de_x0020produc_x0163ie_x0020_x015fi_x0020industriale,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Instalaţii de producţie şi industriale"
	_icommon__inspireTheme_x005frum_KeywordValue__Instala_x0163ii_x0020de_x0020supraveghere_x0020a_x0020mediului,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Instalaţii de supraveghere a mediului"
	_icommon__inspireTheme_x005frum_KeywordValue__Ortoimagini,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Ortoimagini"
	_icommon__inspireTheme_x005frum_KeywordValue__Parcele_x0020cadastrale,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Parcele cadastrale"
	_icommon__inspireTheme_x005frum_KeywordValue__Regiuni_x0020biogeografice,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Regiuni biogeografice"
	_icommon__inspireTheme_x005frum_KeywordValue__Regiuni_x0020maritime,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Regiuni maritime"
	_icommon__inspireTheme_x005frum_KeywordValue__Repartizarea_x0020popula_x0163iei_x0020_x2013_x0020demografie,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Repartizarea populaţiei – demografie"
	_icommon__inspireTheme_x005frum_KeywordValue__Repartizarea_x0020speciilor,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Repartizarea speciilor"
	_icommon__inspireTheme_x005frum_KeywordValue__Resurse_x0020energetice,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Resurse energetice"
	_icommon__inspireTheme_x005frum_KeywordValue__Resurse_x0020minerale,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Resurse minerale"
	_icommon__inspireTheme_x005frum_KeywordValue__Re_x0163ele_x0020de_x0020transport,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Reţele de transport"
	_icommon__inspireTheme_x005frum_KeywordValue__S_x0103n_x0103tate_x0020_x015fi_x0020siguran_x0163_x0103_x0020uman_x0103,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Sănătate şi siguranţă umană"
	_icommon__inspireTheme_x005frum_KeywordValue__Servicii_x0020de_x0020utilitate_x0020public_x0103_x0020_x015fi_x0020servicii_x0020publice,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Servicii de utilitate publică şi servicii publice"
	_icommon__inspireTheme_x005frum_KeywordValue__Sisteme_x0020de_x0020caroiaj_x0020geografic,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Sisteme de caroiaj geografic"
	_icommon__inspireTheme_x005frum_KeywordValue__Sisteme_x0020de_x0020coordonate_x0020de_x0020referin_x0163_x0103,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Sisteme de coordonate de referinţă"
	_icommon__inspireTheme_x005frum_KeywordValue__Soluri,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Soluri"
	_icommon__inspireTheme_x005frum_KeywordValue__Unit_x0103_x0163i_x0020administrative,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Unităţi administrative"
	_icommon__inspireTheme_x005frum_KeywordValue__Unit_x0103_x0163i_x0020statistice,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Unităţi statistice"
	_icommon__inspireTheme_x005frum_KeywordValue__Utilizarea_x0020terenului,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Utilizarea terenului"
	_icommon__inspireTheme_x005frum_KeywordValue__Zone_x0020de_x0020administrare_x002frestric_x0163ie_x002freglementare_x0020_x015fi_x0020unit_x0103_x0163i_x0020de_x0020raportare,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Zone de administrare/restricţie/reglementare şi unităţi de raportare"
	_icommon__inspireTheme_x005frum_KeywordValue__Zone_x0020de_x0020risc_x0020natural,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Zone de risc natural"
	_icommon__inspireTheme_x005frum_KeywordValue__Zone_x0020protejate,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Zone protejate"
    }
                                         KeywordValue                   1;	///< Required element.
/*  RESTRICTED FROM icommon__inspireTheme:
    END OF RESTRICTED FROM icommon__inspireTheme */
/*  RESTRICTED FROM icommon__keyword:
    END OF RESTRICTED FROM icommon__keyword */
};

/// @brief "http://inspire.ec.europa.eu/schemas/common/1.0":citationInspireInteroperabilityRegulation_rum is a complexType with complexContent restriction of type "http://inspire.ec.europa.eu/schemas/common/1.0":citationConformity.
///
/// @note class icommon__citationInspireInteroperabilityRegulation_x005frum operations:
/// - icommon__citationInspireInteroperabilityRegulation_x005frum* soap_new_icommon__citationInspireInteroperabilityRegulation_x005frum(soap*) allocate and default initialize
/// - icommon__citationInspireInteroperabilityRegulation_x005frum* soap_new_icommon__citationInspireInteroperabilityRegulation_x005frum(soap*, int num) allocate and default initialize an array
/// - icommon__citationInspireInteroperabilityRegulation_x005frum* soap_new_req_icommon__citationInspireInteroperabilityRegulation_x005frum(soap*, ...) allocate, set required members
/// - icommon__citationInspireInteroperabilityRegulation_x005frum* soap_new_set_icommon__citationInspireInteroperabilityRegulation_x005frum(soap*, ...) allocate, set all public members
/// - icommon__citationInspireInteroperabilityRegulation_x005frum::soap_default(soap*) default initialize members
/// - int soap_read_icommon__citationInspireInteroperabilityRegulation_x005frum(soap*, icommon__citationInspireInteroperabilityRegulation_x005frum*) deserialize from a stream
/// - int soap_write_icommon__citationInspireInteroperabilityRegulation_x005frum(soap*, icommon__citationInspireInteroperabilityRegulation_x005frum*) serialize to a stream
/// - icommon__citationInspireInteroperabilityRegulation_x005frum* icommon__citationInspireInteroperabilityRegulation_x005frum::soap_dup(soap*) returns deep copy of icommon__citationInspireInteroperabilityRegulation_x005frum, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - icommon__citationInspireInteroperabilityRegulation_x005frum::soap_del() deep deletes icommon__citationInspireInteroperabilityRegulation_x005frum data members, use only after icommon__citationInspireInteroperabilityRegulation_x005frum::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int icommon__citationInspireInteroperabilityRegulation_x005frum::soap_type() returns SOAP_TYPE_icommon__citationInspireInteroperabilityRegulation_x005frum or derived type identifier
class icommon__citationInspireInteroperabilityRegulation_x005frum : public xsd__anyType
{ public:
    enum _icommon__citationInspireInteroperabilityRegulation_x005frum_Title
    {
	_icommon__citationInspireInteroperabilityRegulation_x005frum_Title__REGULAMENTUL_x0020_x0028UE_x0029_x0020NR_x002e_x00201089_x002f2010_x0020AL_x0020COMISIEI_x0020din_x002023_x0020noiembrie_x00202010_x0020de_x0020punere_x0020_x00een_x0020aplicare_x0020a_x0020Directivei_x00202007_x002f2_x002fCE_x0020a_x0020Parlamentului_x0020European_x0020_x015fi_x0020a_x0020Consiliului_x0020_x00een_x0020ceea_x0020ce_x0020prive_x015fte_x0020interoperabilitatea_x0020seturilor_x0020_x015fi_x0020serviciilor_x0020de_x0020date_x0020spa_x0163iale,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":notEmptyString value="REGULAMENTUL (UE) NR. 1089/2010 AL COMISIEI din 23 noiembrie 2010 de punere în aplicare a Directivei 2007/2/CE a Parlamentului European şi a Consiliului în ceea ce priveşte interoperabilitatea seturilor şi serviciilor de date spaţiale"
    }
                                         Title                          1;	///< Required element.
//  BEGIN CHOICE <xs:choice>
  $ int                                  __union_citationInspireInteroperabilityRegulation_x005frum;	///< Union _icommon__union_citationInspireInteroperabilityRegulation_x005frum selector: set to SOAP_UNION__icommon__union_citationInspireInteroperabilityRegulation_x005frum_<fieldname>
    union _icommon__union_citationInspireInteroperabilityRegulation_x005frum
    {
    enum _icommon__citationInspireInteroperabilityRegulation_x005frum_DateOfPublication
    {
	_icommon__citationInspireInteroperabilityRegulation_x005frum_DateOfPublication__2010_12_08,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":iso8601Date value="2010-12-08"
    }
                                        *DateOfPublication             ;	///< Choice of element (one of multiple choices).
    }                                    union_citationInspireInteroperabilityRegulation_x005frum;
//  END OF CHOICE
    enum _icommon__citationInspireInteroperabilityRegulation_x005frum_URI
    {
	_icommon__citationInspireInteroperabilityRegulation_x005frum_URI__OJ_x003aL_x003a2010_x003a323_x003a0011_x003a0102_x003aRO_x003aPDF,	///< xs:anyURI value="OJ:L:2010:323:0011:0102:RO:PDF"
    }
                                         URI                            1;	///< Required element.
/// Element "ResourceLocator" of type "http://inspire.ec.europa.eu/schemas/common/1.0":resLocInspireInteroperabilityRegulation_rum.
    icommon__resLocInspireInteroperabilityRegulation_x005frum*  ResourceLocator                1;	///< Required element.
/*  RESTRICTED FROM icommon__citationConformity:
    END OF RESTRICTED FROM icommon__citationConformity */
/*  RESTRICTED FROM icommon__citation:
    END OF RESTRICTED FROM icommon__citation */
};

/// @brief "http://inspire.ec.europa.eu/schemas/common/1.0":inspireTheme_slo is a complexType with complexContent restriction of type "http://inspire.ec.europa.eu/schemas/common/1.0":inspireTheme.
///
/// @note class icommon__inspireTheme_x005fslo operations:
/// - icommon__inspireTheme_x005fslo* soap_new_icommon__inspireTheme_x005fslo(soap*) allocate and default initialize
/// - icommon__inspireTheme_x005fslo* soap_new_icommon__inspireTheme_x005fslo(soap*, int num) allocate and default initialize an array
/// - icommon__inspireTheme_x005fslo* soap_new_req_icommon__inspireTheme_x005fslo(soap*, ...) allocate, set required members
/// - icommon__inspireTheme_x005fslo* soap_new_set_icommon__inspireTheme_x005fslo(soap*, ...) allocate, set all public members
/// - icommon__inspireTheme_x005fslo::soap_default(soap*) default initialize members
/// - int soap_read_icommon__inspireTheme_x005fslo(soap*, icommon__inspireTheme_x005fslo*) deserialize from a stream
/// - int soap_write_icommon__inspireTheme_x005fslo(soap*, icommon__inspireTheme_x005fslo*) serialize to a stream
/// - icommon__inspireTheme_x005fslo* icommon__inspireTheme_x005fslo::soap_dup(soap*) returns deep copy of icommon__inspireTheme_x005fslo, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - icommon__inspireTheme_x005fslo::soap_del() deep deletes icommon__inspireTheme_x005fslo data members, use only after icommon__inspireTheme_x005fslo::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int icommon__inspireTheme_x005fslo::soap_type() returns SOAP_TYPE_icommon__inspireTheme_x005fslo or derived type identifier
class icommon__inspireTheme_x005fslo : public xsd__anyType
{ public:
/// Element "OriginatingControlledVocabulary" of type "http://inspire.ec.europa.eu/schemas/common/1.0":originatingControlledVocabularyGemetInspireThemes.
    icommon__originatingControlledVocabularyGemetInspireThemes*  OriginatingControlledVocabulary 1;	///< Required element.
    enum _icommon__inspireTheme_x005fslo_KeywordValue
    {
	_icommon__inspireTheme_x005fslo_KeywordValue__Adresy,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Adresy"
	_icommon__inspireTheme_x005fslo_KeywordValue__Atmosf_x00e9rick_x00e9_x0020podmienky,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Atmosférické podmienky"
	_icommon__inspireTheme_x005fslo_KeywordValue__Biogeografick_x00e9_x0020regi_x00f3ny,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Biogeografické regióny"
	_icommon__inspireTheme_x005fslo_KeywordValue__Chr_x00e1nen_x00e9_x0020_x00fazemia,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Chránené územia"
	_icommon__inspireTheme_x005fslo_KeywordValue__Dopravn_x00e9_x0020siete,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Dopravné siete"
	_icommon__inspireTheme_x005fslo_KeywordValue__Geografick_x00e9_x0020syst_x00e9my_x0020siet_x00ed,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Geografické systémy sietí"
	_icommon__inspireTheme_x005fslo_KeywordValue__Geol_x00f3gia,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Geológia"
	_icommon__inspireTheme_x005fslo_KeywordValue__Habitaty_x0020a_x0020biotopy,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Habitaty a biotopy"
	_icommon__inspireTheme_x005fslo_KeywordValue__Hydrografia,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Hydrografia"
	_icommon__inspireTheme_x005fslo_KeywordValue__Katastr_x00e1lne_x0020parcely,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Katastrálne parcely"
	_icommon__inspireTheme_x005fslo_KeywordValue__Krajinn_x00e1_x0020pokr_x00fdvka_x0020_x0028land_x0020cover_x0029,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Krajinná pokrývka (land cover)"
	_icommon__inspireTheme_x005fslo_KeywordValue___x013dudsk_x00e9_x0020zdravie_x0020a_x0020bezpe_x010dnos_x0165,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Ľudské zdravie a bezpečnosť"
	_icommon__inspireTheme_x005fslo_KeywordValue__Meteorologick_x00e9_x0020geografick_x00e9_x0020prvky,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Meteorologické geografické prvky"
	_icommon__inspireTheme_x005fslo_KeywordValue__Morsk_x00e9_x0020regi_x00f3ny,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Morské regióny"
	_icommon__inspireTheme_x005fslo_KeywordValue__Oce_x00e1nografick_x00e9_x0020geografick_x00e9_x0020prvky,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Oceánografické geografické prvky"
	_icommon__inspireTheme_x005fslo_KeywordValue__Ortometria,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Ortometria"
	_icommon__inspireTheme_x005fslo_KeywordValue__P_x00f4da,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Pôda"
	_icommon__inspireTheme_x005fslo_KeywordValue__Po_x013enohospod_x00e1rske_x0020zariadenia_x0020a_x0020zariadenia_x0020akvakult_x00fary,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Poľnohospodárske zariadenia a zariadenia akvakultúry"
	_icommon__inspireTheme_x005fslo_KeywordValue__Rozmiestnenie_x0020obyvate_x013estva_x0020_x2013_x0020demografia,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Rozmiestnenie obyvateľstva – demografia"
	_icommon__inspireTheme_x005fslo_KeywordValue__Spr_x00e1vne_x0020jednotky,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Správne jednotky"
	_icommon__inspireTheme_x005fslo_KeywordValue__Spravovan_x00e9_x002fobmedzen_x00e9_x002fregulovan_x00e9_x0020z_x00f3ny_x0020a_x0020jednotky_x0020pod_x00e1vaj_x00face_x0020spr_x00e1vy,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Spravované/obmedzené/regulované zóny a jednotky podávajúce správy"
	_icommon__inspireTheme_x005fslo_KeywordValue___x0160tatistick_x00e9_x0020jednotky,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Štatistické jednotky"
	_icommon__inspireTheme_x005fslo_KeywordValue__Stavby,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Stavby"
	_icommon__inspireTheme_x005fslo_KeywordValue__S_x00faradnicov_x00e9_x0020referen_x010dn_x00e9_x0020syst_x00e9my,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Súradnicové referenčné systémy"
	_icommon__inspireTheme_x005fslo_KeywordValue__Verejn_x00e9_x0020a_x0020_x0161t_x00e1tne_x0020slu_x017eby,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Verejné a štátne služby"
	_icommon__inspireTheme_x005fslo_KeywordValue__V_x00fdrobn_x00e9_x0020a_x0020priemyseln_x00e9_x0020zariadenia,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Výrobné a priemyselné zariadenia"
	_icommon__inspireTheme_x005fslo_KeywordValue__V_x00fd_x0161ka,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Výška"
	_icommon__inspireTheme_x005fslo_KeywordValue__V_x00fdskyt_x0020druhov,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Výskyt druhov"
	_icommon__inspireTheme_x005fslo_KeywordValue__Vyu_x017eitie_x0020_x00fazemia,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Využitie územia"
	_icommon__inspireTheme_x005fslo_KeywordValue__Zariadenia_x0020na_x0020monitorovanie_x0020_x017eivotn_x00e9ho_x0020prostredia,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Zariadenia na monitorovanie životného prostredia"
	_icommon__inspireTheme_x005fslo_KeywordValue__Zdroje_x0020energie,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Zdroje energie"
	_icommon__inspireTheme_x005fslo_KeywordValue__Zdroje_x0020nerastn_x00fdch_x0020surov_x00edn,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Zdroje nerastných surovín"
	_icommon__inspireTheme_x005fslo_KeywordValue__Zemepisn_x00e9_x0020n_x00e1zvy,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Zemepisné názvy"
	_icommon__inspireTheme_x005fslo_KeywordValue__Z_x00f3ny_x0020pr_x00edrodn_x00e9ho_x0020rizika,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Zóny prírodného rizika"
    }
                                         KeywordValue                   1;	///< Required element.
/*  RESTRICTED FROM icommon__inspireTheme:
    END OF RESTRICTED FROM icommon__inspireTheme */
/*  RESTRICTED FROM icommon__keyword:
    END OF RESTRICTED FROM icommon__keyword */
};

/// @brief "http://inspire.ec.europa.eu/schemas/common/1.0":citationInspireInteroperabilityRegulation_slo is a complexType with complexContent restriction of type "http://inspire.ec.europa.eu/schemas/common/1.0":citationConformity.
///
/// @note class icommon__citationInspireInteroperabilityRegulation_x005fslo operations:
/// - icommon__citationInspireInteroperabilityRegulation_x005fslo* soap_new_icommon__citationInspireInteroperabilityRegulation_x005fslo(soap*) allocate and default initialize
/// - icommon__citationInspireInteroperabilityRegulation_x005fslo* soap_new_icommon__citationInspireInteroperabilityRegulation_x005fslo(soap*, int num) allocate and default initialize an array
/// - icommon__citationInspireInteroperabilityRegulation_x005fslo* soap_new_req_icommon__citationInspireInteroperabilityRegulation_x005fslo(soap*, ...) allocate, set required members
/// - icommon__citationInspireInteroperabilityRegulation_x005fslo* soap_new_set_icommon__citationInspireInteroperabilityRegulation_x005fslo(soap*, ...) allocate, set all public members
/// - icommon__citationInspireInteroperabilityRegulation_x005fslo::soap_default(soap*) default initialize members
/// - int soap_read_icommon__citationInspireInteroperabilityRegulation_x005fslo(soap*, icommon__citationInspireInteroperabilityRegulation_x005fslo*) deserialize from a stream
/// - int soap_write_icommon__citationInspireInteroperabilityRegulation_x005fslo(soap*, icommon__citationInspireInteroperabilityRegulation_x005fslo*) serialize to a stream
/// - icommon__citationInspireInteroperabilityRegulation_x005fslo* icommon__citationInspireInteroperabilityRegulation_x005fslo::soap_dup(soap*) returns deep copy of icommon__citationInspireInteroperabilityRegulation_x005fslo, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - icommon__citationInspireInteroperabilityRegulation_x005fslo::soap_del() deep deletes icommon__citationInspireInteroperabilityRegulation_x005fslo data members, use only after icommon__citationInspireInteroperabilityRegulation_x005fslo::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int icommon__citationInspireInteroperabilityRegulation_x005fslo::soap_type() returns SOAP_TYPE_icommon__citationInspireInteroperabilityRegulation_x005fslo or derived type identifier
class icommon__citationInspireInteroperabilityRegulation_x005fslo : public xsd__anyType
{ public:
    enum _icommon__citationInspireInteroperabilityRegulation_x005fslo_Title
    {
	_icommon__citationInspireInteroperabilityRegulation_x005fslo_Title__NARIADENIE_x0020KOMISIE_x0020_x0028E_x00da_x0029_x0020_x010d_x002e_x00201089_x002f2010_x0020z_x002023_x002e_x0020novembra_x00202010_x002c_x0020ktor_x00fdm_x0020sa_x0020vykon_x00e1va_x0020smernica_x0020Eur_x00f3pskeho_x0020parlamentu_x0020a_x0020Rady_x00202007_x002f2_x002fES_x002c_x0020pokia_x013e_x0020ide_x0020o_x0020interoperabilitu_x0020s_x00faborov_x0020a_x0020slu_x017eieb_x0020priestorov_x00fdch_x0020_x00fadajov,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":notEmptyString value="NARIADENIE KOMISIE (EÚ) č. 1089/2010 z 23. novembra 2010, ktorým sa vykonáva smernica Európskeho parlamentu a Rady 2007/2/ES, pokiaľ ide o interoperabilitu súborov a služieb priestorových údajov"
    }
                                         Title                          1;	///< Required element.
//  BEGIN CHOICE <xs:choice>
  $ int                                  __union_citationInspireInteroperabilityRegulation_x005fslo;	///< Union _icommon__union_citationInspireInteroperabilityRegulation_x005fslo selector: set to SOAP_UNION__icommon__union_citationInspireInteroperabilityRegulation_x005fslo_<fieldname>
    union _icommon__union_citationInspireInteroperabilityRegulation_x005fslo
    {
    enum _icommon__citationInspireInteroperabilityRegulation_x005fslo_DateOfPublication
    {
	_icommon__citationInspireInteroperabilityRegulation_x005fslo_DateOfPublication__2010_12_08,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":iso8601Date value="2010-12-08"
    }
                                        *DateOfPublication             ;	///< Choice of element (one of multiple choices).
    }                                    union_citationInspireInteroperabilityRegulation_x005fslo;
//  END OF CHOICE
    enum _icommon__citationInspireInteroperabilityRegulation_x005fslo_URI
    {
	_icommon__citationInspireInteroperabilityRegulation_x005fslo_URI__OJ_x003aL_x003a2010_x003a323_x003a0011_x003a0102_x003aSK_x003aPDF,	///< xs:anyURI value="OJ:L:2010:323:0011:0102:SK:PDF"
    }
                                         URI                            1;	///< Required element.
/// Element "ResourceLocator" of type "http://inspire.ec.europa.eu/schemas/common/1.0":resLocInspireInteroperabilityRegulation_slo.
    icommon__resLocInspireInteroperabilityRegulation_x005fslo*  ResourceLocator                1;	///< Required element.
/*  RESTRICTED FROM icommon__citationConformity:
    END OF RESTRICTED FROM icommon__citationConformity */
/*  RESTRICTED FROM icommon__citation:
    END OF RESTRICTED FROM icommon__citation */
};

/// @brief "http://inspire.ec.europa.eu/schemas/common/1.0":inspireTheme_slv is a complexType with complexContent restriction of type "http://inspire.ec.europa.eu/schemas/common/1.0":inspireTheme.
///
/// @note class icommon__inspireTheme_x005fslv operations:
/// - icommon__inspireTheme_x005fslv* soap_new_icommon__inspireTheme_x005fslv(soap*) allocate and default initialize
/// - icommon__inspireTheme_x005fslv* soap_new_icommon__inspireTheme_x005fslv(soap*, int num) allocate and default initialize an array
/// - icommon__inspireTheme_x005fslv* soap_new_req_icommon__inspireTheme_x005fslv(soap*, ...) allocate, set required members
/// - icommon__inspireTheme_x005fslv* soap_new_set_icommon__inspireTheme_x005fslv(soap*, ...) allocate, set all public members
/// - icommon__inspireTheme_x005fslv::soap_default(soap*) default initialize members
/// - int soap_read_icommon__inspireTheme_x005fslv(soap*, icommon__inspireTheme_x005fslv*) deserialize from a stream
/// - int soap_write_icommon__inspireTheme_x005fslv(soap*, icommon__inspireTheme_x005fslv*) serialize to a stream
/// - icommon__inspireTheme_x005fslv* icommon__inspireTheme_x005fslv::soap_dup(soap*) returns deep copy of icommon__inspireTheme_x005fslv, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - icommon__inspireTheme_x005fslv::soap_del() deep deletes icommon__inspireTheme_x005fslv data members, use only after icommon__inspireTheme_x005fslv::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int icommon__inspireTheme_x005fslv::soap_type() returns SOAP_TYPE_icommon__inspireTheme_x005fslv or derived type identifier
class icommon__inspireTheme_x005fslv : public xsd__anyType
{ public:
/// Element "OriginatingControlledVocabulary" of type "http://inspire.ec.europa.eu/schemas/common/1.0":originatingControlledVocabularyGemetInspireThemes.
    icommon__originatingControlledVocabularyGemetInspireThemes*  OriginatingControlledVocabulary 1;	///< Required element.
    enum _icommon__inspireTheme_x005fslv_KeywordValue
    {
	_icommon__inspireTheme_x005fslv_KeywordValue__Biogeografske_x0020regije,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Biogeografske regije"
	_icommon__inspireTheme_x005fslv_KeywordValue__Digitalni_x0020model_x0020vi_x0161in,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Digitalni model višin"
	_icommon__inspireTheme_x005fslv_KeywordValue__Energetski_x0020viri,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Energetski viri"
	_icommon__inspireTheme_x005fslv_KeywordValue__Geografska_x0020koordinatna_x0020mre_x017ea,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Geografska koordinatna mreža"
	_icommon__inspireTheme_x005fslv_KeywordValue__Geologija,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Geologija"
	_icommon__inspireTheme_x005fslv_KeywordValue__Habitati_x0020in_x0020biotopi,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Habitati in biotopi"
	_icommon__inspireTheme_x005fslv_KeywordValue__Hidrografija,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Hidrografija"
	_icommon__inspireTheme_x005fslv_KeywordValue__Katastrske_x0020parcele,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Katastrske parcele"
	_icommon__inspireTheme_x005fslv_KeywordValue__Komunalne_x0020in_x0020javne_x0020storitve,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Komunalne in javne storitve"
	_icommon__inspireTheme_x005fslv_KeywordValue__Meteorolo_x0161ke_x0020zna_x010dilnosti,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Meteorološke značilnosti"
	_icommon__inspireTheme_x005fslv_KeywordValue__Mineralni_x0020viri,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Mineralni viri"
	_icommon__inspireTheme_x005fslv_KeywordValue__Morske_x0020regije,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Morske regije"
	_icommon__inspireTheme_x005fslv_KeywordValue__Namenska_x0020raba_x0020tal,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Namenska raba tal"
	_icommon__inspireTheme_x005fslv_KeywordValue__Naprave_x0020in_x0020objekti_x0020za_x0020monitoring_x0020okolja,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Naprave in objekti za monitoring okolja"
	_icommon__inspireTheme_x005fslv_KeywordValue__Naslovi,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Naslovi"
	_icommon__inspireTheme_x005fslv_KeywordValue__Objekti_x0020in_x0020naprave_x0020za_x0020kmetijstvo_x0020in_x0020ribogojstvo,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Objekti in naprave za kmetijstvo in ribogojstvo"
	_icommon__inspireTheme_x005fslv_KeywordValue__Obmo_x010dja_x0020nevarnosti_x0020naravnih_x0020nesre_x010d,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Območja nevarnosti naravnih nesreč"
	_icommon__inspireTheme_x005fslv_KeywordValue__Obmo_x010dja_x0020upravljanja_x002fzaprta_x0020obmo_x010dja_x002fregulirana_x0020obmo_x010dja_x0020in_x0020poro_x010devalske_x0020enote,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Območja upravljanja/zaprta območja/regulirana območja in poročevalske enote"
	_icommon__inspireTheme_x005fslv_KeywordValue__Oceanogeografske_x0020zna_x010dilnosti,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Oceanogeografske značilnosti"
	_icommon__inspireTheme_x005fslv_KeywordValue__Ortofoto,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Ortofoto"
	_icommon__inspireTheme_x005fslv_KeywordValue__Ozra_x010dje,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Ozračje"
	_icommon__inspireTheme_x005fslv_KeywordValue__Pokrovnost_x0020tal,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Pokrovnost tal"
	_icommon__inspireTheme_x005fslv_KeywordValue__Porazdelitev_x0020prebivalstva_x0020_x2013_x0020demografski_x0020podatki,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Porazdelitev prebivalstva – demografski podatki"
	_icommon__inspireTheme_x005fslv_KeywordValue__Porazdelitev_x0020vrst,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Porazdelitev vrst"
	_icommon__inspireTheme_x005fslv_KeywordValue__Proizvodni_x0020in_x0020industrijski_x0020objekti_x0020in_x0020naprave,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Proizvodni in industrijski objekti in naprave"
	_icommon__inspireTheme_x005fslv_KeywordValue__Prometna_x0020omre_x017eja,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Prometna omrežja"
	_icommon__inspireTheme_x005fslv_KeywordValue__Referen_x010dni_x0020koordinatni_x0020sistemi,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Referenčni koordinatni sistemi"
	_icommon__inspireTheme_x005fslv_KeywordValue__Statisti_x010dni_x0020okoli_x0161i,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Statistični okoliši"
	_icommon__inspireTheme_x005fslv_KeywordValue__Stavbe,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Stavbe"
	_icommon__inspireTheme_x005fslv_KeywordValue__Tla,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Tla"
	_icommon__inspireTheme_x005fslv_KeywordValue__Upravne_x0020enote,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Upravne enote"
	_icommon__inspireTheme_x005fslv_KeywordValue__Zavarovana_x0020obmo_x010dja,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Zavarovana območja"
	_icommon__inspireTheme_x005fslv_KeywordValue__Zdravje_x0020in_x0020varnost_x0020prebivalstva,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Zdravje in varnost prebivalstva"
	_icommon__inspireTheme_x005fslv_KeywordValue__Zemljepisna_x0020imena,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Zemljepisna imena"
    }
                                         KeywordValue                   1;	///< Required element.
/*  RESTRICTED FROM icommon__inspireTheme:
    END OF RESTRICTED FROM icommon__inspireTheme */
/*  RESTRICTED FROM icommon__keyword:
    END OF RESTRICTED FROM icommon__keyword */
};

/// @brief "http://inspire.ec.europa.eu/schemas/common/1.0":citationInspireInteroperabilityRegulation_slv is a complexType with complexContent restriction of type "http://inspire.ec.europa.eu/schemas/common/1.0":citationConformity.
///
/// @note class icommon__citationInspireInteroperabilityRegulation_x005fslv operations:
/// - icommon__citationInspireInteroperabilityRegulation_x005fslv* soap_new_icommon__citationInspireInteroperabilityRegulation_x005fslv(soap*) allocate and default initialize
/// - icommon__citationInspireInteroperabilityRegulation_x005fslv* soap_new_icommon__citationInspireInteroperabilityRegulation_x005fslv(soap*, int num) allocate and default initialize an array
/// - icommon__citationInspireInteroperabilityRegulation_x005fslv* soap_new_req_icommon__citationInspireInteroperabilityRegulation_x005fslv(soap*, ...) allocate, set required members
/// - icommon__citationInspireInteroperabilityRegulation_x005fslv* soap_new_set_icommon__citationInspireInteroperabilityRegulation_x005fslv(soap*, ...) allocate, set all public members
/// - icommon__citationInspireInteroperabilityRegulation_x005fslv::soap_default(soap*) default initialize members
/// - int soap_read_icommon__citationInspireInteroperabilityRegulation_x005fslv(soap*, icommon__citationInspireInteroperabilityRegulation_x005fslv*) deserialize from a stream
/// - int soap_write_icommon__citationInspireInteroperabilityRegulation_x005fslv(soap*, icommon__citationInspireInteroperabilityRegulation_x005fslv*) serialize to a stream
/// - icommon__citationInspireInteroperabilityRegulation_x005fslv* icommon__citationInspireInteroperabilityRegulation_x005fslv::soap_dup(soap*) returns deep copy of icommon__citationInspireInteroperabilityRegulation_x005fslv, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - icommon__citationInspireInteroperabilityRegulation_x005fslv::soap_del() deep deletes icommon__citationInspireInteroperabilityRegulation_x005fslv data members, use only after icommon__citationInspireInteroperabilityRegulation_x005fslv::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int icommon__citationInspireInteroperabilityRegulation_x005fslv::soap_type() returns SOAP_TYPE_icommon__citationInspireInteroperabilityRegulation_x005fslv or derived type identifier
class icommon__citationInspireInteroperabilityRegulation_x005fslv : public xsd__anyType
{ public:
    enum _icommon__citationInspireInteroperabilityRegulation_x005fslv_Title
    {
	_icommon__citationInspireInteroperabilityRegulation_x005fslv_Title__UREDBA_x0020KOMISIJE_x0020_x0028EU_x0029_x0020_x0161t_x002e_x00201089_x002f2010_x0020z_x0020dne_x002023_x002e_x0020novembra_x00202010_x0020o_x0020izvajanju_x0020Direktive_x00202007_x002f2_x002fES_x0020Evropskega_x0020parlamenta_x0020in_x0020Sveta_x0020glede_x0020medopravilnosti_x0020zbirk_x0020prostorskih_x0020podatkov_x0020in_x0020storitev_x0020v_x0020zvezi_x0020s_x0020prostorskimi_x0020podatki,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":notEmptyString value="UREDBA KOMISIJE (EU) št. 1089/2010 z dne 23. novembra 2010 o izvajanju Direktive 2007/2/ES Evropskega parlamenta in Sveta glede medopravilnosti zbirk prostorskih podatkov in storitev v zvezi s prostorskimi podatki"
    }
                                         Title                          1;	///< Required element.
//  BEGIN CHOICE <xs:choice>
  $ int                                  __union_citationInspireInteroperabilityRegulation_x005fslv;	///< Union _icommon__union_citationInspireInteroperabilityRegulation_x005fslv selector: set to SOAP_UNION__icommon__union_citationInspireInteroperabilityRegulation_x005fslv_<fieldname>
    union _icommon__union_citationInspireInteroperabilityRegulation_x005fslv
    {
    enum _icommon__citationInspireInteroperabilityRegulation_x005fslv_DateOfPublication
    {
	_icommon__citationInspireInteroperabilityRegulation_x005fslv_DateOfPublication__2010_12_08,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":iso8601Date value="2010-12-08"
    }
                                        *DateOfPublication             ;	///< Choice of element (one of multiple choices).
    }                                    union_citationInspireInteroperabilityRegulation_x005fslv;
//  END OF CHOICE
    enum _icommon__citationInspireInteroperabilityRegulation_x005fslv_URI
    {
	_icommon__citationInspireInteroperabilityRegulation_x005fslv_URI__OJ_x003aL_x003a2010_x003a323_x003a0011_x003a0102_x003aSL_x003aPDF,	///< xs:anyURI value="OJ:L:2010:323:0011:0102:SL:PDF"
    }
                                         URI                            1;	///< Required element.
/// Element "ResourceLocator" of type "http://inspire.ec.europa.eu/schemas/common/1.0":resLocInspireInteroperabilityRegulation_slv.
    icommon__resLocInspireInteroperabilityRegulation_x005fslv*  ResourceLocator                1;	///< Required element.
/*  RESTRICTED FROM icommon__citationConformity:
    END OF RESTRICTED FROM icommon__citationConformity */
/*  RESTRICTED FROM icommon__citation:
    END OF RESTRICTED FROM icommon__citation */
};

/// @brief "http://inspire.ec.europa.eu/schemas/common/1.0":inspireTheme_spa is a complexType with complexContent restriction of type "http://inspire.ec.europa.eu/schemas/common/1.0":inspireTheme.
///
/// @note class icommon__inspireTheme_x005fspa operations:
/// - icommon__inspireTheme_x005fspa* soap_new_icommon__inspireTheme_x005fspa(soap*) allocate and default initialize
/// - icommon__inspireTheme_x005fspa* soap_new_icommon__inspireTheme_x005fspa(soap*, int num) allocate and default initialize an array
/// - icommon__inspireTheme_x005fspa* soap_new_req_icommon__inspireTheme_x005fspa(soap*, ...) allocate, set required members
/// - icommon__inspireTheme_x005fspa* soap_new_set_icommon__inspireTheme_x005fspa(soap*, ...) allocate, set all public members
/// - icommon__inspireTheme_x005fspa::soap_default(soap*) default initialize members
/// - int soap_read_icommon__inspireTheme_x005fspa(soap*, icommon__inspireTheme_x005fspa*) deserialize from a stream
/// - int soap_write_icommon__inspireTheme_x005fspa(soap*, icommon__inspireTheme_x005fspa*) serialize to a stream
/// - icommon__inspireTheme_x005fspa* icommon__inspireTheme_x005fspa::soap_dup(soap*) returns deep copy of icommon__inspireTheme_x005fspa, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - icommon__inspireTheme_x005fspa::soap_del() deep deletes icommon__inspireTheme_x005fspa data members, use only after icommon__inspireTheme_x005fspa::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int icommon__inspireTheme_x005fspa::soap_type() returns SOAP_TYPE_icommon__inspireTheme_x005fspa or derived type identifier
class icommon__inspireTheme_x005fspa : public xsd__anyType
{ public:
/// Element "OriginatingControlledVocabulary" of type "http://inspire.ec.europa.eu/schemas/common/1.0":originatingControlledVocabularyGemetInspireThemes.
    icommon__originatingControlledVocabularyGemetInspireThemes*  OriginatingControlledVocabulary 1;	///< Required element.
    enum _icommon__inspireTheme_x005fspa_KeywordValue
    {
	_icommon__inspireTheme_x005fspa_KeywordValue__Aspectos_x0020geogr_x00e1ficos_x0020de_x0020car_x00e1cter_x0020meteorol_x00f3gico,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Aspectos geográficos de carácter meteorológico"
	_icommon__inspireTheme_x005fspa_KeywordValue__Condiciones_x0020atmosf_x00e9ricas,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Condiciones atmosféricas"
	_icommon__inspireTheme_x005fspa_KeywordValue__Cubierta_x0020terrestre,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Cubierta terrestre"
	_icommon__inspireTheme_x005fspa_KeywordValue__Direcciones,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Direcciones"
	_icommon__inspireTheme_x005fspa_KeywordValue__Distribuci_x00f3n_x0020de_x0020la_x0020poblaci_x00f3n_x0020_x2014_x0020demograf_x00eda,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Distribución de la población — demografía"
	_icommon__inspireTheme_x005fspa_KeywordValue__Distribuci_x00f3n_x0020de_x0020las_x0020especies,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Distribución de las especies"
	_icommon__inspireTheme_x005fspa_KeywordValue__Edificios,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Edificios"
	_icommon__inspireTheme_x005fspa_KeywordValue__Elevaciones,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Elevaciones"
	_icommon__inspireTheme_x005fspa_KeywordValue__Geolog_x00eda,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Geología"
	_icommon__inspireTheme_x005fspa_KeywordValue__H_x00e1bitats_x0020y_x0020biotopos,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Hábitats y biotopos"
	_icommon__inspireTheme_x005fspa_KeywordValue__Hidrograf_x00eda,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Hidrografía"
	_icommon__inspireTheme_x005fspa_KeywordValue__Instalaciones_x0020agr_x00edcolas_x0020y_x0020de_x0020acuicultura,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Instalaciones agrícolas y de acuicultura"
	_icommon__inspireTheme_x005fspa_KeywordValue__Instalaciones_x0020de_x0020observaci_x00f3n_x0020del_x0020medio_x0020ambiente,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Instalaciones de observación del medio ambiente"
	_icommon__inspireTheme_x005fspa_KeywordValue__Instalaciones_x0020de_x0020producci_x00f3n_x0020e_x0020industriales,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Instalaciones de producción e industriales"
	_icommon__inspireTheme_x005fspa_KeywordValue__Lugares_x0020protegidos,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Lugares protegidos"
	_icommon__inspireTheme_x005fspa_KeywordValue__Nombres_x0020geogr_x00e1ficos,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Nombres geográficos"
	_icommon__inspireTheme_x005fspa_KeywordValue__Ortoim_x00e1genes,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Ortoimágenes"
	_icommon__inspireTheme_x005fspa_KeywordValue__Parcelas_x0020catastrales,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Parcelas catastrales"
	_icommon__inspireTheme_x005fspa_KeywordValue__Rasgos_x0020geogr_x00e1ficos_x0020oceanogr_x00e1ficos,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Rasgos geográficos oceanográficos"
	_icommon__inspireTheme_x005fspa_KeywordValue__Recursos_x0020energ_x00e9ticos,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Recursos energéticos"
	_icommon__inspireTheme_x005fspa_KeywordValue__Recursos_x0020minerales,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Recursos minerales"
	_icommon__inspireTheme_x005fspa_KeywordValue__Redes_x0020de_x0020transporte,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Redes de transporte"
	_icommon__inspireTheme_x005fspa_KeywordValue__Regiones_x0020biogeogr_x00e1ficas,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Regiones biogeográficas"
	_icommon__inspireTheme_x005fspa_KeywordValue__Regiones_x0020marinas,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Regiones marinas"
	_icommon__inspireTheme_x005fspa_KeywordValue__Salud_x0020y_x0020seguridad_x0020humanas,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Salud y seguridad humanas"
	_icommon__inspireTheme_x005fspa_KeywordValue__Servicios_x0020de_x0020utilidad_x0020p_x00fablica_x0020y_x0020estatales,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Servicios de utilidad pública y estatales"
	_icommon__inspireTheme_x005fspa_KeywordValue__Sistema_x0020de_x0020cuadr_x00edculas_x0020geogr_x00e1ficas,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Sistema de cuadrículas geográficas"
	_icommon__inspireTheme_x005fspa_KeywordValue__Sistemas_x0020de_x0020coordenadas_x0020de_x0020referencia,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Sistemas de coordenadas de referencia"
	_icommon__inspireTheme_x005fspa_KeywordValue__Suelo,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Suelo"
	_icommon__inspireTheme_x005fspa_KeywordValue__Unidades_x0020administrativas,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Unidades administrativas"
	_icommon__inspireTheme_x005fspa_KeywordValue__Unidades_x0020estad_x00edsticas,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Unidades estadísticas"
	_icommon__inspireTheme_x005fspa_KeywordValue__Uso_x0020del_x0020suelo,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Uso del suelo"
	_icommon__inspireTheme_x005fspa_KeywordValue__Zonas_x0020de_x0020riesgos_x0020naturales,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Zonas de riesgos naturales"
	_icommon__inspireTheme_x005fspa_KeywordValue__Zonas_x0020sujetas_x0020a_x0020ordenaci_x00f3n_x002c_x0020a_x0020restricciones_x0020o_x0020reglamentaciones_x0020y_x0020unidades_x0020de_x0020notificaci_x00f3n,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Zonas sujetas a ordenación, a restricciones o reglamentaciones y unidades de notificación"
    }
                                         KeywordValue                   1;	///< Required element.
/*  RESTRICTED FROM icommon__inspireTheme:
    END OF RESTRICTED FROM icommon__inspireTheme */
/*  RESTRICTED FROM icommon__keyword:
    END OF RESTRICTED FROM icommon__keyword */
};

/// @brief "http://inspire.ec.europa.eu/schemas/common/1.0":citationInspireInteroperabilityRegulation_spa is a complexType with complexContent restriction of type "http://inspire.ec.europa.eu/schemas/common/1.0":citationConformity.
///
/// @note class icommon__citationInspireInteroperabilityRegulation_x005fspa operations:
/// - icommon__citationInspireInteroperabilityRegulation_x005fspa* soap_new_icommon__citationInspireInteroperabilityRegulation_x005fspa(soap*) allocate and default initialize
/// - icommon__citationInspireInteroperabilityRegulation_x005fspa* soap_new_icommon__citationInspireInteroperabilityRegulation_x005fspa(soap*, int num) allocate and default initialize an array
/// - icommon__citationInspireInteroperabilityRegulation_x005fspa* soap_new_req_icommon__citationInspireInteroperabilityRegulation_x005fspa(soap*, ...) allocate, set required members
/// - icommon__citationInspireInteroperabilityRegulation_x005fspa* soap_new_set_icommon__citationInspireInteroperabilityRegulation_x005fspa(soap*, ...) allocate, set all public members
/// - icommon__citationInspireInteroperabilityRegulation_x005fspa::soap_default(soap*) default initialize members
/// - int soap_read_icommon__citationInspireInteroperabilityRegulation_x005fspa(soap*, icommon__citationInspireInteroperabilityRegulation_x005fspa*) deserialize from a stream
/// - int soap_write_icommon__citationInspireInteroperabilityRegulation_x005fspa(soap*, icommon__citationInspireInteroperabilityRegulation_x005fspa*) serialize to a stream
/// - icommon__citationInspireInteroperabilityRegulation_x005fspa* icommon__citationInspireInteroperabilityRegulation_x005fspa::soap_dup(soap*) returns deep copy of icommon__citationInspireInteroperabilityRegulation_x005fspa, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - icommon__citationInspireInteroperabilityRegulation_x005fspa::soap_del() deep deletes icommon__citationInspireInteroperabilityRegulation_x005fspa data members, use only after icommon__citationInspireInteroperabilityRegulation_x005fspa::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int icommon__citationInspireInteroperabilityRegulation_x005fspa::soap_type() returns SOAP_TYPE_icommon__citationInspireInteroperabilityRegulation_x005fspa or derived type identifier
class icommon__citationInspireInteroperabilityRegulation_x005fspa : public xsd__anyType
{ public:
    enum _icommon__citationInspireInteroperabilityRegulation_x005fspa_Title
    {
	_icommon__citationInspireInteroperabilityRegulation_x005fspa_Title__REGLAMENTO_x0020_x0028UE_x0029_x0020N_x0020o_x00201089_x002f2010_x0020DE_x0020LA_x0020COMISI_x00d3N_x0020de_x002023_x0020de_x0020noviembre_x0020de_x00202010_x0020por_x0020el_x0020que_x0020se_x0020aplica_x0020la_x0020Directiva_x00202007_x002f2_x002fCE_x0020del_x0020Parlamento_x0020Europeo_x0020y_x0020del_x0020Consejo_x0020en_x0020lo_x0020que_x0020se_x0020refiere_x0020a_x0020la_x0020interoperabilidad_x0020de_x0020los_x0020conjuntos_x0020y_x0020los_x0020servicios_x0020de_x0020datos_x0020espaciales,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":notEmptyString value="REGLAMENTO (UE) N o 1089/2010 DE LA COMISIÓN de 23 de noviembre de 2010 por el que se aplica la Directiva 2007/2/CE del Parlamento Europeo y del Consejo en lo que se refiere a la interoperabilidad de los conjuntos y los servicios de datos espaciales"
    }
                                         Title                          1;	///< Required element.
//  BEGIN CHOICE <xs:choice>
  $ int                                  __union_citationInspireInteroperabilityRegulation_x005fspa;	///< Union _icommon__union_citationInspireInteroperabilityRegulation_x005fspa selector: set to SOAP_UNION__icommon__union_citationInspireInteroperabilityRegulation_x005fspa_<fieldname>
    union _icommon__union_citationInspireInteroperabilityRegulation_x005fspa
    {
    enum _icommon__citationInspireInteroperabilityRegulation_x005fspa_DateOfPublication
    {
	_icommon__citationInspireInteroperabilityRegulation_x005fspa_DateOfPublication__2010_12_08,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":iso8601Date value="2010-12-08"
    }
                                        *DateOfPublication             ;	///< Choice of element (one of multiple choices).
    }                                    union_citationInspireInteroperabilityRegulation_x005fspa;
//  END OF CHOICE
    enum _icommon__citationInspireInteroperabilityRegulation_x005fspa_URI
    {
	_icommon__citationInspireInteroperabilityRegulation_x005fspa_URI__OJ_x003aL_x003a2010_x003a323_x003a0011_x003a0102_x003aES_x003aPDF,	///< xs:anyURI value="OJ:L:2010:323:0011:0102:ES:PDF"
    }
                                         URI                            1;	///< Required element.
/// Element "ResourceLocator" of type "http://inspire.ec.europa.eu/schemas/common/1.0":resLocInspireInteroperabilityRegulation_spa.
    icommon__resLocInspireInteroperabilityRegulation_x005fspa*  ResourceLocator                1;	///< Required element.
/*  RESTRICTED FROM icommon__citationConformity:
    END OF RESTRICTED FROM icommon__citationConformity */
/*  RESTRICTED FROM icommon__citation:
    END OF RESTRICTED FROM icommon__citation */
};

/// @brief "http://inspire.ec.europa.eu/schemas/common/1.0":inspireTheme_swe is a complexType with complexContent restriction of type "http://inspire.ec.europa.eu/schemas/common/1.0":inspireTheme.
///
/// @note class icommon__inspireTheme_x005fswe operations:
/// - icommon__inspireTheme_x005fswe* soap_new_icommon__inspireTheme_x005fswe(soap*) allocate and default initialize
/// - icommon__inspireTheme_x005fswe* soap_new_icommon__inspireTheme_x005fswe(soap*, int num) allocate and default initialize an array
/// - icommon__inspireTheme_x005fswe* soap_new_req_icommon__inspireTheme_x005fswe(soap*, ...) allocate, set required members
/// - icommon__inspireTheme_x005fswe* soap_new_set_icommon__inspireTheme_x005fswe(soap*, ...) allocate, set all public members
/// - icommon__inspireTheme_x005fswe::soap_default(soap*) default initialize members
/// - int soap_read_icommon__inspireTheme_x005fswe(soap*, icommon__inspireTheme_x005fswe*) deserialize from a stream
/// - int soap_write_icommon__inspireTheme_x005fswe(soap*, icommon__inspireTheme_x005fswe*) serialize to a stream
/// - icommon__inspireTheme_x005fswe* icommon__inspireTheme_x005fswe::soap_dup(soap*) returns deep copy of icommon__inspireTheme_x005fswe, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - icommon__inspireTheme_x005fswe::soap_del() deep deletes icommon__inspireTheme_x005fswe data members, use only after icommon__inspireTheme_x005fswe::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int icommon__inspireTheme_x005fswe::soap_type() returns SOAP_TYPE_icommon__inspireTheme_x005fswe or derived type identifier
class icommon__inspireTheme_x005fswe : public xsd__anyType
{ public:
/// Element "OriginatingControlledVocabulary" of type "http://inspire.ec.europa.eu/schemas/common/1.0":originatingControlledVocabularyGemetInspireThemes.
    icommon__originatingControlledVocabularyGemetInspireThemes*  OriginatingControlledVocabulary 1;	///< Required element.
    enum _icommon__inspireTheme_x005fswe_KeywordValue
    {
	_icommon__inspireTheme_x005fswe_KeywordValue__Administrativa_x0020enheter,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Administrativa enheter"
	_icommon__inspireTheme_x005fswe_KeywordValue__Adresser,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Adresser"
	_icommon__inspireTheme_x005fswe_KeywordValue__Allm_x00e4nnyttiga_x0020och_x0020offentliga_x0020tj_x00e4nster,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Allmännyttiga och offentliga tjänster"
	_icommon__inspireTheme_x005fswe_KeywordValue__Anl_x00e4ggningar_x0020f_x00f6r_x0020milj_x00f6_x00f6vervakning,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Anläggningar för miljöövervakning"
	_icommon__inspireTheme_x005fswe_KeywordValue__Arters_x0020utbredning,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Arters utbredning"
	_icommon__inspireTheme_x005fswe_KeywordValue__Atmosf_x00e4riska_x0020f_x00f6rh_x00e5llanden,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Atmosfäriska förhållanden"
	_icommon__inspireTheme_x005fswe_KeywordValue__Befolkningsf_x00f6rdelning_x0020_x2013_x0020demografi,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Befolkningsfördelning – demografi"
	_icommon__inspireTheme_x005fswe_KeywordValue__Biogeografiska_x0020regioner,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Biogeografiska regioner"
	_icommon__inspireTheme_x005fswe_KeywordValue__Byggnader,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Byggnader"
	_icommon__inspireTheme_x005fswe_KeywordValue__Energiresurser,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Energiresurser"
	_icommon__inspireTheme_x005fswe_KeywordValue__Fastighetsomr_x00e5den,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Fastighetsområden"
	_icommon__inspireTheme_x005fswe_KeywordValue__Geografiska_x0020meteorologiska_x0020f_x00f6rh_x00e5llanden,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Geografiska meteorologiska förhållanden"
	_icommon__inspireTheme_x005fswe_KeywordValue__Geografiska_x0020namn,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Geografiska namn"
	_icommon__inspireTheme_x005fswe_KeywordValue__Geografiska_x0020oceanografiska_x0020f_x00f6rh_x00e5llanden,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Geografiska oceanografiska förhållanden"
	_icommon__inspireTheme_x005fswe_KeywordValue__Geografiska_x0020rutn_x00e4tssystem,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Geografiska rutnätssystem"
	_icommon__inspireTheme_x005fswe_KeywordValue__Geologi,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Geologi"
	_icommon__inspireTheme_x005fswe_KeywordValue__Havsomr_x00e5den,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Havsområden"
	_icommon__inspireTheme_x005fswe_KeywordValue__Hydrografi,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Hydrografi"
	_icommon__inspireTheme_x005fswe_KeywordValue__H_x00f6jd,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Höjd"
	_icommon__inspireTheme_x005fswe_KeywordValue__Jordbruks__x0020och_x0020vattenbruksanl_x00e4ggningar,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Jordbruks- och vattenbruksanläggningar"
	_icommon__inspireTheme_x005fswe_KeywordValue__Landt_x00e4cke,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Landtäcke"
	_icommon__inspireTheme_x005fswe_KeywordValue__Mark,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Mark"
	_icommon__inspireTheme_x005fswe_KeywordValue__Markanv_x00e4ndning,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Markanvändning"
	_icommon__inspireTheme_x005fswe_KeywordValue__Mineralfyndigheter,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Mineralfyndigheter"
	_icommon__inspireTheme_x005fswe_KeywordValue__M_x00e4nniskors_x0020h_x00e4lsa_x0020och_x0020s_x00e4kerhet,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Människors hälsa och säkerhet"
	_icommon__inspireTheme_x005fswe_KeywordValue__Naturliga_x0020riskomr_x00e5den,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Naturliga riskområden"
	_icommon__inspireTheme_x005fswe_KeywordValue__Naturtyper_x0020och_x0020biotoper,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Naturtyper och biotoper"
	_icommon__inspireTheme_x005fswe_KeywordValue__Omr_x00e5den_x0020med_x0020s_x00e4rskild_x0020f_x00f6rvaltning_x002fbegr_x00e4nsningar_x002freglering_x0020samt_x0020enheter_x0020f_x00f6r_x0020rapportering,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Områden med särskild förvaltning/begränsningar/reglering samt enheter för rapportering"
	_icommon__inspireTheme_x005fswe_KeywordValue__Ortofoto,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Ortofoto"
	_icommon__inspireTheme_x005fswe_KeywordValue__Produktions__x0020och_x0020industrianl_x00e4ggningar,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Produktions- och industrianläggningar"
	_icommon__inspireTheme_x005fswe_KeywordValue__Referenskoordinatsystem,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Referenskoordinatsystem"
	_icommon__inspireTheme_x005fswe_KeywordValue__Skyddade_x0020omr_x00e5den,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Skyddade områden"
	_icommon__inspireTheme_x005fswe_KeywordValue__Statistiska_x0020enheter,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Statistiska enheter"
	_icommon__inspireTheme_x005fswe_KeywordValue__Transportn_x00e4t,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":keywordValue value="Transportnät"
    }
                                         KeywordValue                   1;	///< Required element.
/*  RESTRICTED FROM icommon__inspireTheme:
    END OF RESTRICTED FROM icommon__inspireTheme */
/*  RESTRICTED FROM icommon__keyword:
    END OF RESTRICTED FROM icommon__keyword */
};

/// @brief "http://inspire.ec.europa.eu/schemas/common/1.0":citationInspireInteroperabilityRegulation_swe is a complexType with complexContent restriction of type "http://inspire.ec.europa.eu/schemas/common/1.0":citationConformity.
///
/// @note class icommon__citationInspireInteroperabilityRegulation_x005fswe operations:
/// - icommon__citationInspireInteroperabilityRegulation_x005fswe* soap_new_icommon__citationInspireInteroperabilityRegulation_x005fswe(soap*) allocate and default initialize
/// - icommon__citationInspireInteroperabilityRegulation_x005fswe* soap_new_icommon__citationInspireInteroperabilityRegulation_x005fswe(soap*, int num) allocate and default initialize an array
/// - icommon__citationInspireInteroperabilityRegulation_x005fswe* soap_new_req_icommon__citationInspireInteroperabilityRegulation_x005fswe(soap*, ...) allocate, set required members
/// - icommon__citationInspireInteroperabilityRegulation_x005fswe* soap_new_set_icommon__citationInspireInteroperabilityRegulation_x005fswe(soap*, ...) allocate, set all public members
/// - icommon__citationInspireInteroperabilityRegulation_x005fswe::soap_default(soap*) default initialize members
/// - int soap_read_icommon__citationInspireInteroperabilityRegulation_x005fswe(soap*, icommon__citationInspireInteroperabilityRegulation_x005fswe*) deserialize from a stream
/// - int soap_write_icommon__citationInspireInteroperabilityRegulation_x005fswe(soap*, icommon__citationInspireInteroperabilityRegulation_x005fswe*) serialize to a stream
/// - icommon__citationInspireInteroperabilityRegulation_x005fswe* icommon__citationInspireInteroperabilityRegulation_x005fswe::soap_dup(soap*) returns deep copy of icommon__citationInspireInteroperabilityRegulation_x005fswe, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - icommon__citationInspireInteroperabilityRegulation_x005fswe::soap_del() deep deletes icommon__citationInspireInteroperabilityRegulation_x005fswe data members, use only after icommon__citationInspireInteroperabilityRegulation_x005fswe::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int icommon__citationInspireInteroperabilityRegulation_x005fswe::soap_type() returns SOAP_TYPE_icommon__citationInspireInteroperabilityRegulation_x005fswe or derived type identifier
class icommon__citationInspireInteroperabilityRegulation_x005fswe : public xsd__anyType
{ public:
    enum _icommon__citationInspireInteroperabilityRegulation_x005fswe_Title
    {
	_icommon__citationInspireInteroperabilityRegulation_x005fswe_Title__KOMMISSIONENS_x0020F_x00d6RORDNING_x0020_x0028EU_x0029_x0020nr_x00201089_x002f2010_x0020av_x0020den_x002023_x0020november_x00202010_x0020om_x0020genomf_x00f6rande_x0020av_x0020Europaparlamentets_x0020och_x0020r_x00e5dets_x0020direktiv_x00202007_x002f2_x002fEG_x0020vad_x0020g_x00e4ller_x0020interoperabilitet_x0020f_x00f6r_x0020rumsliga_x0020datam_x00e4ngder_x0020och_x0020datatj_x00e4nster,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":notEmptyString value="KOMMISSIONENS FÖRORDNING (EU) nr 1089/2010 av den 23 november 2010 om genomförande av Europaparlamentets och rådets direktiv 2007/2/EG vad gäller interoperabilitet för rumsliga datamängder och datatjänster"
    }
                                         Title                          1;	///< Required element.
//  BEGIN CHOICE <xs:choice>
  $ int                                  __union_citationInspireInteroperabilityRegulation_x005fswe;	///< Union _icommon__union_citationInspireInteroperabilityRegulation_x005fswe selector: set to SOAP_UNION__icommon__union_citationInspireInteroperabilityRegulation_x005fswe_<fieldname>
    union _icommon__union_citationInspireInteroperabilityRegulation_x005fswe
    {
    enum _icommon__citationInspireInteroperabilityRegulation_x005fswe_DateOfPublication
    {
	_icommon__citationInspireInteroperabilityRegulation_x005fswe_DateOfPublication__2010_12_08,	///< "http://inspire.ec.europa.eu/schemas/common/1.0":iso8601Date value="2010-12-08"
    }
                                        *DateOfPublication             ;	///< Choice of element (one of multiple choices).
    }                                    union_citationInspireInteroperabilityRegulation_x005fswe;
//  END OF CHOICE
    enum _icommon__citationInspireInteroperabilityRegulation_x005fswe_URI
    {
	_icommon__citationInspireInteroperabilityRegulation_x005fswe_URI__OJ_x003aL_x003a2010_x003a323_x003a0011_x003a0102_x003aSV_x003aPDF,	///< xs:anyURI value="OJ:L:2010:323:0011:0102:SV:PDF"
    }
                                         URI                            1;	///< Required element.
/// Element "ResourceLocator" of type "http://inspire.ec.europa.eu/schemas/common/1.0":resLocInspireInteroperabilityRegulation_swe.
    icommon__resLocInspireInteroperabilityRegulation_x005fswe*  ResourceLocator                1;	///< Required element.
/*  RESTRICTED FROM icommon__citationConformity:
    END OF RESTRICTED FROM icommon__citationConformity */
/*  RESTRICTED FROM icommon__citation:
    END OF RESTRICTED FROM icommon__citation */
};

/// @brief "http://inspire.ec.europa.eu/schemas/common/1.0":discoveryService_ext is a complexType with complexContent extension of type "http://inspire.ec.europa.eu/schemas/common/1.0":service.
///
/// @note class icommon__discoveryService_x005fext operations:
/// - icommon__discoveryService_x005fext* soap_new_icommon__discoveryService_x005fext(soap*) allocate and default initialize
/// - icommon__discoveryService_x005fext* soap_new_icommon__discoveryService_x005fext(soap*, int num) allocate and default initialize an array
/// - icommon__discoveryService_x005fext* soap_new_req_icommon__discoveryService_x005fext(soap*, ...) allocate, set required members
/// - icommon__discoveryService_x005fext* soap_new_set_icommon__discoveryService_x005fext(soap*, ...) allocate, set all public members
/// - icommon__discoveryService_x005fext::soap_default(soap*) default initialize members
/// - int soap_read_icommon__discoveryService_x005fext(soap*, icommon__discoveryService_x005fext*) deserialize from a stream
/// - int soap_write_icommon__discoveryService_x005fext(soap*, icommon__discoveryService_x005fext*) serialize to a stream
/// - icommon__discoveryService_x005fext* icommon__discoveryService_x005fext::soap_dup(soap*) returns deep copy of icommon__discoveryService_x005fext, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - icommon__discoveryService_x005fext::soap_del() deep deletes icommon__discoveryService_x005fext data members, use only after icommon__discoveryService_x005fext::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int icommon__discoveryService_x005fext::soap_type() returns SOAP_TYPE_icommon__discoveryService_x005fext or derived type identifier
class icommon__discoveryService_x005fext : public icommon__service
{ public:
/*  INHERITED FROM icommon__service:
    END OF INHERITED FROM icommon__service */
};

/// @brief "http://inspire.ec.europa.eu/schemas/common/1.0":viewService_ext is a complexType with complexContent extension of type "http://inspire.ec.europa.eu/schemas/common/1.0":service.
///
/// @note class icommon__viewService_x005fext operations:
/// - icommon__viewService_x005fext* soap_new_icommon__viewService_x005fext(soap*) allocate and default initialize
/// - icommon__viewService_x005fext* soap_new_icommon__viewService_x005fext(soap*, int num) allocate and default initialize an array
/// - icommon__viewService_x005fext* soap_new_req_icommon__viewService_x005fext(soap*, ...) allocate, set required members
/// - icommon__viewService_x005fext* soap_new_set_icommon__viewService_x005fext(soap*, ...) allocate, set all public members
/// - icommon__viewService_x005fext::soap_default(soap*) default initialize members
/// - int soap_read_icommon__viewService_x005fext(soap*, icommon__viewService_x005fext*) deserialize from a stream
/// - int soap_write_icommon__viewService_x005fext(soap*, icommon__viewService_x005fext*) serialize to a stream
/// - icommon__viewService_x005fext* icommon__viewService_x005fext::soap_dup(soap*) returns deep copy of icommon__viewService_x005fext, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - icommon__viewService_x005fext::soap_del() deep deletes icommon__viewService_x005fext data members, use only after icommon__viewService_x005fext::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int icommon__viewService_x005fext::soap_type() returns SOAP_TYPE_icommon__viewService_x005fext or derived type identifier
class icommon__viewService_x005fext : public icommon__service
{ public:
/*  INHERITED FROM icommon__service:
    END OF INHERITED FROM icommon__service */
/// Element "Layers" of type "http://inspire.ec.europa.eu/schemas/common/1.0":layers.
    icommon__layers*                     Layers                         1;	///< Required element.
};

/// @brief "http://inspire.ec.europa.eu/schemas/common/1.0":downloadService_ext is a complexType with complexContent extension of type "http://inspire.ec.europa.eu/schemas/common/1.0":service.
///
/// @note class icommon__downloadService_x005fext operations:
/// - icommon__downloadService_x005fext* soap_new_icommon__downloadService_x005fext(soap*) allocate and default initialize
/// - icommon__downloadService_x005fext* soap_new_icommon__downloadService_x005fext(soap*, int num) allocate and default initialize an array
/// - icommon__downloadService_x005fext* soap_new_req_icommon__downloadService_x005fext(soap*, ...) allocate, set required members
/// - icommon__downloadService_x005fext* soap_new_set_icommon__downloadService_x005fext(soap*, ...) allocate, set all public members
/// - icommon__downloadService_x005fext::soap_default(soap*) default initialize members
/// - int soap_read_icommon__downloadService_x005fext(soap*, icommon__downloadService_x005fext*) deserialize from a stream
/// - int soap_write_icommon__downloadService_x005fext(soap*, icommon__downloadService_x005fext*) serialize to a stream
/// - icommon__downloadService_x005fext* icommon__downloadService_x005fext::soap_dup(soap*) returns deep copy of icommon__downloadService_x005fext, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - icommon__downloadService_x005fext::soap_del() deep deletes icommon__downloadService_x005fext data members, use only after icommon__downloadService_x005fext::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int icommon__downloadService_x005fext::soap_type() returns SOAP_TYPE_icommon__downloadService_x005fext or derived type identifier
class icommon__downloadService_x005fext : public icommon__service
{ public:
/*  INHERITED FROM icommon__service:
    END OF INHERITED FROM icommon__service */
};

/// @brief "http://inspire.ec.europa.eu/schemas/common/1.0":transformationService_ext is a complexType with complexContent extension of type "http://inspire.ec.europa.eu/schemas/common/1.0":service.
///
/// @note class icommon__transformationService_x005fext operations:
/// - icommon__transformationService_x005fext* soap_new_icommon__transformationService_x005fext(soap*) allocate and default initialize
/// - icommon__transformationService_x005fext* soap_new_icommon__transformationService_x005fext(soap*, int num) allocate and default initialize an array
/// - icommon__transformationService_x005fext* soap_new_req_icommon__transformationService_x005fext(soap*, ...) allocate, set required members
/// - icommon__transformationService_x005fext* soap_new_set_icommon__transformationService_x005fext(soap*, ...) allocate, set all public members
/// - icommon__transformationService_x005fext::soap_default(soap*) default initialize members
/// - int soap_read_icommon__transformationService_x005fext(soap*, icommon__transformationService_x005fext*) deserialize from a stream
/// - int soap_write_icommon__transformationService_x005fext(soap*, icommon__transformationService_x005fext*) serialize to a stream
/// - icommon__transformationService_x005fext* icommon__transformationService_x005fext::soap_dup(soap*) returns deep copy of icommon__transformationService_x005fext, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - icommon__transformationService_x005fext::soap_del() deep deletes icommon__transformationService_x005fext data members, use only after icommon__transformationService_x005fext::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int icommon__transformationService_x005fext::soap_type() returns SOAP_TYPE_icommon__transformationService_x005fext or derived type identifier
class icommon__transformationService_x005fext : public icommon__service
{ public:
/*  INHERITED FROM icommon__service:
    END OF INHERITED FROM icommon__service */
};

/// @brief "http://inspire.ec.europa.eu/schemas/common/1.0":invokeService_ext is a complexType with complexContent extension of type "http://inspire.ec.europa.eu/schemas/common/1.0":service.
///
/// @note class icommon__invokeService_x005fext operations:
/// - icommon__invokeService_x005fext* soap_new_icommon__invokeService_x005fext(soap*) allocate and default initialize
/// - icommon__invokeService_x005fext* soap_new_icommon__invokeService_x005fext(soap*, int num) allocate and default initialize an array
/// - icommon__invokeService_x005fext* soap_new_req_icommon__invokeService_x005fext(soap*, ...) allocate, set required members
/// - icommon__invokeService_x005fext* soap_new_set_icommon__invokeService_x005fext(soap*, ...) allocate, set all public members
/// - icommon__invokeService_x005fext::soap_default(soap*) default initialize members
/// - int soap_read_icommon__invokeService_x005fext(soap*, icommon__invokeService_x005fext*) deserialize from a stream
/// - int soap_write_icommon__invokeService_x005fext(soap*, icommon__invokeService_x005fext*) serialize to a stream
/// - icommon__invokeService_x005fext* icommon__invokeService_x005fext::soap_dup(soap*) returns deep copy of icommon__invokeService_x005fext, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - icommon__invokeService_x005fext::soap_del() deep deletes icommon__invokeService_x005fext data members, use only after icommon__invokeService_x005fext::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int icommon__invokeService_x005fext::soap_type() returns SOAP_TYPE_icommon__invokeService_x005fext or derived type identifier
class icommon__invokeService_x005fext : public icommon__service
{ public:
/*  INHERITED FROM icommon__service:
    END OF INHERITED FROM icommon__service */
};

/// @brief "http://inspire.ec.europa.eu/schemas/common/1.0":otherService_ext is a complexType with complexContent extension of type "http://inspire.ec.europa.eu/schemas/common/1.0":service.
///
/// @note class icommon__otherService_x005fext operations:
/// - icommon__otherService_x005fext* soap_new_icommon__otherService_x005fext(soap*) allocate and default initialize
/// - icommon__otherService_x005fext* soap_new_icommon__otherService_x005fext(soap*, int num) allocate and default initialize an array
/// - icommon__otherService_x005fext* soap_new_req_icommon__otherService_x005fext(soap*, ...) allocate, set required members
/// - icommon__otherService_x005fext* soap_new_set_icommon__otherService_x005fext(soap*, ...) allocate, set all public members
/// - icommon__otherService_x005fext::soap_default(soap*) default initialize members
/// - int soap_read_icommon__otherService_x005fext(soap*, icommon__otherService_x005fext*) deserialize from a stream
/// - int soap_write_icommon__otherService_x005fext(soap*, icommon__otherService_x005fext*) serialize to a stream
/// - icommon__otherService_x005fext* icommon__otherService_x005fext::soap_dup(soap*) returns deep copy of icommon__otherService_x005fext, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - icommon__otherService_x005fext::soap_del() deep deletes icommon__otherService_x005fext data members, use only after icommon__otherService_x005fext::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int icommon__otherService_x005fext::soap_type() returns SOAP_TYPE_icommon__otherService_x005fext or derived type identifier
class icommon__otherService_x005fext : public icommon__service
{ public:
/*  INHERITED FROM icommon__service:
    END OF INHERITED FROM icommon__service */
};

/// @brief "http://inspire.ec.europa.eu/schemas/common/1.0":discoveryService is a complexType with complexContent restriction of type "http://inspire.ec.europa.eu/schemas/common/1.0":discoveryService_ext.
///
/// @note class icommon__discoveryService operations:
/// - icommon__discoveryService* soap_new_icommon__discoveryService(soap*) allocate and default initialize
/// - icommon__discoveryService* soap_new_icommon__discoveryService(soap*, int num) allocate and default initialize an array
/// - icommon__discoveryService* soap_new_req_icommon__discoveryService(soap*, ...) allocate, set required members
/// - icommon__discoveryService* soap_new_set_icommon__discoveryService(soap*, ...) allocate, set all public members
/// - icommon__discoveryService::soap_default(soap*) default initialize members
/// - int soap_read_icommon__discoveryService(soap*, icommon__discoveryService*) deserialize from a stream
/// - int soap_write_icommon__discoveryService(soap*, icommon__discoveryService*) serialize to a stream
/// - icommon__discoveryService* icommon__discoveryService::soap_dup(soap*) returns deep copy of icommon__discoveryService, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - icommon__discoveryService::soap_del() deep deletes icommon__discoveryService data members, use only after icommon__discoveryService::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int icommon__discoveryService::soap_type() returns SOAP_TYPE_icommon__discoveryService or derived type identifier
class icommon__discoveryService : public xsd__anyType
{ public:
/// Element "ResourceTitle" of type "http://inspire.ec.europa.eu/schemas/common/1.0":notEmptyString.
    icommon__notEmptyString              ResourceTitle                  1;	///< Required element.
/// Element "ResourceAbstract" of type "http://inspire.ec.europa.eu/schemas/common/1.0":notEmptyString.
    icommon__notEmptyString              ResourceAbstract               1;	///< Required element.
/// Element "ResourceType" of type "http://inspire.ec.europa.eu/schemas/common/1.0":serviceSpatialDataResourceType.
    enum icommon__serviceSpatialDataResourceType  ResourceType                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Mandatory if linkage to the service is available
/// </BLOCKQUOTE></PRE>
///
/// Vector of icommon__resourceLocatorType* of length 0..unbounded.
    std::vector<icommon__resourceLocatorType*> ResourceLocator                0;	///< Multiple elements.
/// Vector of icommon__classificationOfSpatialDataService* of length 1..unbounded.
    std::vector<icommon__classificationOfSpatialDataService*> MandatoryKeyword               1;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   If the resource is a spatial data service, at least one keyword from Part D.4 shall be provided.
/// </BLOCKQUOTE></PRE>
///
/// Vector of icommon__keyword* of length 0..unbounded.
    std::vector<icommon__keyword*      > Keyword                        0;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   Mandatory for services with an explicit geographic extent.
/// </BLOCKQUOTE></PRE>
///
/// Vector of icommon__geographicBoundingBox* of length 0..unbounded.
    std::vector<icommon__geographicBoundingBox*> GeographicBoundingBox          0;	///< Multiple elements.
/// Vector of icommon__temporalReference* of length 1..unbounded.
    std::vector<icommon__temporalReference*> TemporalReference              1;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   Mandatory when there is a restriction on the spatial resolution for this service.
/// </BLOCKQUOTE></PRE>
///
/// Vector of icommon__spatialResolution* of length 0..unbounded.
    std::vector<icommon__spatialResolution*> SpatialResolution              0;	///< Multiple elements.
/// Vector of icommon__conformity* of length 1..unbounded.
    std::vector<icommon__conformity*   > Conformity                     1;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   The element must have values. If no conditions apply to the access and use of the resource, no conditions apply shall be used. If conditions are unknown, conditions unknown shall be used.
/// </BLOCKQUOTE></PRE>
///
/// Vector of icommon__notEmptyString of length 1..unbounded.
    std::vector<icommon__notEmptyString> ConditionsForAccessAndUse      1;	///< Multiple elements.
/// Vector of icommon__notEmptyString of length 1..unbounded.
    std::vector<icommon__notEmptyString> LimitationsOnPublicAccess      1;	///< Multiple elements.
/// Vector of icommon__responsibleOrganisation* of length 1..unbounded.
    std::vector<icommon__responsibleOrganisation*> ResponsibleOrganisation        1;	///< Multiple elements.
/// Vector of icommon__metadataPointOfContact* of length 1..unbounded.
    std::vector<icommon__metadataPointOfContact*> MetadataPointOfContact         1;	///< Multiple elements.
/// Element "MetadataDate" of type "http://inspire.ec.europa.eu/schemas/common/1.0":iso8601Date.
    icommon__iso8601Date                 MetadataDate                   1;	///< Required element.
/// Element "MetadataLanguage" of type "http://inspire.ec.europa.eu/schemas/common/1.0":euLanguageISO6392B.
    enum icommon__euLanguageISO6392B     MetadataLanguage               1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Mandatory if linkage to data sets on which the service operates are available.
/// </BLOCKQUOTE></PRE>
///
/// Vector of icommon__uniqueResourceIdentifier* of length 0..unbounded.
    std::vector<icommon__uniqueResourceIdentifier*> CoupledResource                0;	///< Multiple elements.
/// Element "SpatialDataServiceType" of type "http://inspire.ec.europa.eu/schemas/common/1.0":discoverySpatialDataServiceType.
    enum icommon__discoverySpatialDataServiceType  SpatialDataServiceType         1;	///< Required element.
/*  RESTRICTED FROM icommon__discoveryService_x005fext:
    END OF RESTRICTED FROM icommon__discoveryService_x005fext */
/*  RESTRICTED FROM icommon__service:
    END OF RESTRICTED FROM icommon__service */
/*  RESTRICTED FROM icommon__service_x005fext:
    END OF RESTRICTED FROM icommon__service_x005fext */
/*  RESTRICTED FROM icommon__resource:
/// Imported attribute reference xml:lang.
  @ _xml__lang*                          xml__lang                      0;	///< Optional attribute.
    END OF RESTRICTED FROM icommon__resource */
};

/// @brief "http://inspire.ec.europa.eu/schemas/common/1.0":viewService is a complexType with complexContent restriction of type "http://inspire.ec.europa.eu/schemas/common/1.0":viewService_ext.
///
/// @note class icommon__viewService operations:
/// - icommon__viewService* soap_new_icommon__viewService(soap*) allocate and default initialize
/// - icommon__viewService* soap_new_icommon__viewService(soap*, int num) allocate and default initialize an array
/// - icommon__viewService* soap_new_req_icommon__viewService(soap*, ...) allocate, set required members
/// - icommon__viewService* soap_new_set_icommon__viewService(soap*, ...) allocate, set all public members
/// - icommon__viewService::soap_default(soap*) default initialize members
/// - int soap_read_icommon__viewService(soap*, icommon__viewService*) deserialize from a stream
/// - int soap_write_icommon__viewService(soap*, icommon__viewService*) serialize to a stream
/// - icommon__viewService* icommon__viewService::soap_dup(soap*) returns deep copy of icommon__viewService, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - icommon__viewService::soap_del() deep deletes icommon__viewService data members, use only after icommon__viewService::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int icommon__viewService::soap_type() returns SOAP_TYPE_icommon__viewService or derived type identifier
class icommon__viewService : public xsd__anyType
{ public:
/// Element "ResourceTitle" of type "http://inspire.ec.europa.eu/schemas/common/1.0":notEmptyString.
    icommon__notEmptyString              ResourceTitle                  1;	///< Required element.
/// Element "ResourceAbstract" of type "http://inspire.ec.europa.eu/schemas/common/1.0":notEmptyString.
    icommon__notEmptyString              ResourceAbstract               1;	///< Required element.
/// Element "ResourceType" of type "http://inspire.ec.europa.eu/schemas/common/1.0":serviceSpatialDataResourceType.
    enum icommon__serviceSpatialDataResourceType  ResourceType                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Mandatory if linkage to the service is available
/// </BLOCKQUOTE></PRE>
///
/// Vector of icommon__resourceLocatorType* of length 0..unbounded.
    std::vector<icommon__resourceLocatorType*> ResourceLocator                0;	///< Multiple elements.
/// Vector of icommon__classificationOfSpatialDataService* of length 1..unbounded.
    std::vector<icommon__classificationOfSpatialDataService*> MandatoryKeyword               1;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   If the resource is a spatial data service, at least one keyword from Part D.4 shall be provided.
/// </BLOCKQUOTE></PRE>
///
/// Vector of icommon__keyword* of length 0..unbounded.
    std::vector<icommon__keyword*      > Keyword                        0;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   Mandatory for services with an explicit geographic extent.
/// </BLOCKQUOTE></PRE>
///
/// Vector of icommon__geographicBoundingBox* of length 0..unbounded.
    std::vector<icommon__geographicBoundingBox*> GeographicBoundingBox          0;	///< Multiple elements.
/// Vector of icommon__temporalReference* of length 1..unbounded.
    std::vector<icommon__temporalReference*> TemporalReference              1;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   Mandatory when there is a restriction on the spatial resolution for this service.
/// </BLOCKQUOTE></PRE>
///
/// Vector of icommon__spatialResolution* of length 0..unbounded.
    std::vector<icommon__spatialResolution*> SpatialResolution              0;	///< Multiple elements.
/// Vector of icommon__conformity* of length 1..unbounded.
    std::vector<icommon__conformity*   > Conformity                     1;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   The element must have values. If no conditions apply to the access and use of the resource, no conditions apply
///   shall be used. If conditions are unknown, conditions unknown shall be used.
/// </BLOCKQUOTE></PRE>
///
/// Vector of icommon__notEmptyString of length 1..unbounded.
    std::vector<icommon__notEmptyString> ConditionsForAccessAndUse      1;	///< Multiple elements.
/// Vector of icommon__notEmptyString of length 1..unbounded.
    std::vector<icommon__notEmptyString> LimitationsOnPublicAccess      1;	///< Multiple elements.
/// Vector of icommon__responsibleOrganisation* of length 1..unbounded.
    std::vector<icommon__responsibleOrganisation*> ResponsibleOrganisation        1;	///< Multiple elements.
/// Vector of icommon__metadataPointOfContact* of length 1..unbounded.
    std::vector<icommon__metadataPointOfContact*> MetadataPointOfContact         1;	///< Multiple elements.
/// Element "MetadataDate" of type "http://inspire.ec.europa.eu/schemas/common/1.0":iso8601Date.
    icommon__iso8601Date                 MetadataDate                   1;	///< Required element.
/// Element "MetadataLanguage" of type "http://inspire.ec.europa.eu/schemas/common/1.0":euLanguageISO6392B.
    enum icommon__euLanguageISO6392B     MetadataLanguage               1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Mandatory if linkage to data sets on which the service operates are available.
/// </BLOCKQUOTE></PRE>
///
/// Vector of icommon__uniqueResourceIdentifier* of length 0..unbounded.
    std::vector<icommon__uniqueResourceIdentifier*> CoupledResource                0;	///< Multiple elements.
/// Element "SpatialDataServiceType" of type "http://inspire.ec.europa.eu/schemas/common/1.0":viewSpatialDataServiceType.
    enum icommon__viewSpatialDataServiceType  SpatialDataServiceType         1;	///< Required element.
/// Element "Layers" of type "http://inspire.ec.europa.eu/schemas/common/1.0":layers.
    icommon__layers*                     Layers                         1;	///< Required element.
/*  RESTRICTED FROM icommon__viewService_x005fext:
    END OF RESTRICTED FROM icommon__viewService_x005fext */
/*  RESTRICTED FROM icommon__service:
    END OF RESTRICTED FROM icommon__service */
/*  RESTRICTED FROM icommon__service_x005fext:
    END OF RESTRICTED FROM icommon__service_x005fext */
/*  RESTRICTED FROM icommon__resource:
/// Imported attribute reference xml:lang.
  @ _xml__lang*                          xml__lang                      0;	///< Optional attribute.
    END OF RESTRICTED FROM icommon__resource */
};

/// @brief "http://inspire.ec.europa.eu/schemas/common/1.0":downloadService is a complexType with complexContent restriction of type "http://inspire.ec.europa.eu/schemas/common/1.0":downloadService_ext.
///
/// @note class icommon__downloadService operations:
/// - icommon__downloadService* soap_new_icommon__downloadService(soap*) allocate and default initialize
/// - icommon__downloadService* soap_new_icommon__downloadService(soap*, int num) allocate and default initialize an array
/// - icommon__downloadService* soap_new_req_icommon__downloadService(soap*, ...) allocate, set required members
/// - icommon__downloadService* soap_new_set_icommon__downloadService(soap*, ...) allocate, set all public members
/// - icommon__downloadService::soap_default(soap*) default initialize members
/// - int soap_read_icommon__downloadService(soap*, icommon__downloadService*) deserialize from a stream
/// - int soap_write_icommon__downloadService(soap*, icommon__downloadService*) serialize to a stream
/// - icommon__downloadService* icommon__downloadService::soap_dup(soap*) returns deep copy of icommon__downloadService, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - icommon__downloadService::soap_del() deep deletes icommon__downloadService data members, use only after icommon__downloadService::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int icommon__downloadService::soap_type() returns SOAP_TYPE_icommon__downloadService or derived type identifier
class icommon__downloadService : public xsd__anyType
{ public:
/// Element "ResourceTitle" of type "http://inspire.ec.europa.eu/schemas/common/1.0":notEmptyString.
    icommon__notEmptyString              ResourceTitle                  1;	///< Required element.
/// Element "ResourceAbstract" of type "http://inspire.ec.europa.eu/schemas/common/1.0":notEmptyString.
    icommon__notEmptyString              ResourceAbstract               1;	///< Required element.
/// Element "ResourceType" of type "http://inspire.ec.europa.eu/schemas/common/1.0":serviceSpatialDataResourceType.
    enum icommon__serviceSpatialDataResourceType  ResourceType                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Mandatory if linkage to the service is available
/// </BLOCKQUOTE></PRE>
///
/// Vector of icommon__resourceLocatorType* of length 0..unbounded.
    std::vector<icommon__resourceLocatorType*> ResourceLocator                0;	///< Multiple elements.
/// Vector of icommon__classificationOfSpatialDataService* of length 1..unbounded.
    std::vector<icommon__classificationOfSpatialDataService*> MandatoryKeyword               1;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   If the resource is a spatial data service, at least one keyword from Part D.4 shall be provided.
/// </BLOCKQUOTE></PRE>
///
/// Vector of icommon__keyword* of length 0..unbounded.
    std::vector<icommon__keyword*      > Keyword                        0;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   Mandatory for services with an explicit geographic extent.
/// </BLOCKQUOTE></PRE>
///
/// Vector of icommon__geographicBoundingBox* of length 0..unbounded.
    std::vector<icommon__geographicBoundingBox*> GeographicBoundingBox          0;	///< Multiple elements.
/// Vector of icommon__temporalReference* of length 1..unbounded.
    std::vector<icommon__temporalReference*> TemporalReference              1;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   Mandatory when there is a restriction on the spatial resolution for this service.
/// </BLOCKQUOTE></PRE>
///
/// Vector of icommon__spatialResolution* of length 0..unbounded.
    std::vector<icommon__spatialResolution*> SpatialResolution              0;	///< Multiple elements.
/// Vector of icommon__conformity* of length 1..unbounded.
    std::vector<icommon__conformity*   > Conformity                     1;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   The element must have values. If no conditions apply to the access and use of the resource, no conditions apply
///   shall be used. If conditions are unknown, conditions unknown shall be used.
/// </BLOCKQUOTE></PRE>
///
/// Vector of icommon__notEmptyString of length 1..unbounded.
    std::vector<icommon__notEmptyString> ConditionsForAccessAndUse      1;	///< Multiple elements.
/// Vector of icommon__notEmptyString of length 1..unbounded.
    std::vector<icommon__notEmptyString> LimitationsOnPublicAccess      1;	///< Multiple elements.
/// Vector of icommon__responsibleOrganisation* of length 1..unbounded.
    std::vector<icommon__responsibleOrganisation*> ResponsibleOrganisation        1;	///< Multiple elements.
/// Vector of icommon__metadataPointOfContact* of length 1..unbounded.
    std::vector<icommon__metadataPointOfContact*> MetadataPointOfContact         1;	///< Multiple elements.
/// Element "MetadataDate" of type "http://inspire.ec.europa.eu/schemas/common/1.0":iso8601Date.
    icommon__iso8601Date                 MetadataDate                   1;	///< Required element.
/// Element "MetadataLanguage" of type "http://inspire.ec.europa.eu/schemas/common/1.0":euLanguageISO6392B.
    enum icommon__euLanguageISO6392B     MetadataLanguage               1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Mandatory if linkage to data sets on which the service operates are available.
/// </BLOCKQUOTE></PRE>
///
/// Vector of icommon__uniqueResourceIdentifier* of length 0..unbounded.
    std::vector<icommon__uniqueResourceIdentifier*> CoupledResource                0;	///< Multiple elements.
/// Element "SpatialDataServiceType" of type "http://inspire.ec.europa.eu/schemas/common/1.0":transformationSpatialDataServiceType.
    enum icommon__transformationSpatialDataServiceType  SpatialDataServiceType         1;	///< Required element.
/*  RESTRICTED FROM icommon__downloadService_x005fext:
    END OF RESTRICTED FROM icommon__downloadService_x005fext */
/*  RESTRICTED FROM icommon__service:
    END OF RESTRICTED FROM icommon__service */
/*  RESTRICTED FROM icommon__service_x005fext:
    END OF RESTRICTED FROM icommon__service_x005fext */
/*  RESTRICTED FROM icommon__resource:
/// Imported attribute reference xml:lang.
  @ _xml__lang*                          xml__lang                      0;	///< Optional attribute.
    END OF RESTRICTED FROM icommon__resource */
};

/// @brief "http://inspire.ec.europa.eu/schemas/common/1.0":transformationService is a complexType with complexContent restriction of type "http://inspire.ec.europa.eu/schemas/common/1.0":transformationService_ext.
///
/// @note class icommon__transformationService operations:
/// - icommon__transformationService* soap_new_icommon__transformationService(soap*) allocate and default initialize
/// - icommon__transformationService* soap_new_icommon__transformationService(soap*, int num) allocate and default initialize an array
/// - icommon__transformationService* soap_new_req_icommon__transformationService(soap*, ...) allocate, set required members
/// - icommon__transformationService* soap_new_set_icommon__transformationService(soap*, ...) allocate, set all public members
/// - icommon__transformationService::soap_default(soap*) default initialize members
/// - int soap_read_icommon__transformationService(soap*, icommon__transformationService*) deserialize from a stream
/// - int soap_write_icommon__transformationService(soap*, icommon__transformationService*) serialize to a stream
/// - icommon__transformationService* icommon__transformationService::soap_dup(soap*) returns deep copy of icommon__transformationService, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - icommon__transformationService::soap_del() deep deletes icommon__transformationService data members, use only after icommon__transformationService::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int icommon__transformationService::soap_type() returns SOAP_TYPE_icommon__transformationService or derived type identifier
class icommon__transformationService : public xsd__anyType
{ public:
/// Element "ResourceTitle" of type "http://inspire.ec.europa.eu/schemas/common/1.0":notEmptyString.
    icommon__notEmptyString              ResourceTitle                  1;	///< Required element.
/// Element "ResourceAbstract" of type "http://inspire.ec.europa.eu/schemas/common/1.0":notEmptyString.
    icommon__notEmptyString              ResourceAbstract               1;	///< Required element.
/// Element "ResourceType" of type "http://inspire.ec.europa.eu/schemas/common/1.0":serviceSpatialDataResourceType.
    enum icommon__serviceSpatialDataResourceType  ResourceType                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Mandatory if linkage to the service is available
/// </BLOCKQUOTE></PRE>
///
/// Vector of icommon__resourceLocatorType* of length 0..unbounded.
    std::vector<icommon__resourceLocatorType*> ResourceLocator                0;	///< Multiple elements.
/// Vector of icommon__classificationOfSpatialDataService* of length 1..unbounded.
    std::vector<icommon__classificationOfSpatialDataService*> MandatoryKeyword               1;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   If the resource is a spatial data service, at least one keyword from Part D.4 shall be provided.
/// </BLOCKQUOTE></PRE>
///
/// Vector of icommon__keyword* of length 0..unbounded.
    std::vector<icommon__keyword*      > Keyword                        0;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   Mandatory for services with an explicit geographic extent.
/// </BLOCKQUOTE></PRE>
///
/// Vector of icommon__geographicBoundingBox* of length 0..unbounded.
    std::vector<icommon__geographicBoundingBox*> GeographicBoundingBox          0;	///< Multiple elements.
/// Vector of icommon__temporalReference* of length 1..unbounded.
    std::vector<icommon__temporalReference*> TemporalReference              1;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   Mandatory when there is a restriction on the spatial resolution for this service.
/// </BLOCKQUOTE></PRE>
///
/// Vector of icommon__spatialResolution* of length 0..unbounded.
    std::vector<icommon__spatialResolution*> SpatialResolution              0;	///< Multiple elements.
/// Vector of icommon__conformity* of length 1..unbounded.
    std::vector<icommon__conformity*   > Conformity                     1;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   The element must have values. If no conditions apply to the access and use of the resource, no conditions apply
///   shall be used. If conditions are unknown, conditions unknown shall be used.
/// </BLOCKQUOTE></PRE>
///
/// Vector of icommon__notEmptyString of length 1..unbounded.
    std::vector<icommon__notEmptyString> ConditionsForAccessAndUse      1;	///< Multiple elements.
/// Vector of icommon__notEmptyString of length 1..unbounded.
    std::vector<icommon__notEmptyString> LimitationsOnPublicAccess      1;	///< Multiple elements.
/// Vector of icommon__responsibleOrganisation* of length 1..unbounded.
    std::vector<icommon__responsibleOrganisation*> ResponsibleOrganisation        1;	///< Multiple elements.
/// Vector of icommon__metadataPointOfContact* of length 1..unbounded.
    std::vector<icommon__metadataPointOfContact*> MetadataPointOfContact         1;	///< Multiple elements.
/// Element "MetadataDate" of type "http://inspire.ec.europa.eu/schemas/common/1.0":iso8601Date.
    icommon__iso8601Date                 MetadataDate                   1;	///< Required element.
/// Element "MetadataLanguage" of type "http://inspire.ec.europa.eu/schemas/common/1.0":euLanguageISO6392B.
    enum icommon__euLanguageISO6392B     MetadataLanguage               1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Mandatory if linkage to data sets on which the service operates are available.
/// </BLOCKQUOTE></PRE>
///
/// Vector of icommon__uniqueResourceIdentifier* of length 0..unbounded.
    std::vector<icommon__uniqueResourceIdentifier*> CoupledResource                0;	///< Multiple elements.
/// Element "SpatialDataServiceType" of type "http://inspire.ec.europa.eu/schemas/common/1.0":transformationSpatialDataServiceType.
    enum icommon__transformationSpatialDataServiceType  SpatialDataServiceType         1;	///< Required element.
/*  RESTRICTED FROM icommon__transformationService_x005fext:
    END OF RESTRICTED FROM icommon__transformationService_x005fext */
/*  RESTRICTED FROM icommon__service:
    END OF RESTRICTED FROM icommon__service */
/*  RESTRICTED FROM icommon__service_x005fext:
    END OF RESTRICTED FROM icommon__service_x005fext */
/*  RESTRICTED FROM icommon__resource:
/// Imported attribute reference xml:lang.
  @ _xml__lang*                          xml__lang                      0;	///< Optional attribute.
    END OF RESTRICTED FROM icommon__resource */
};

/// @brief "http://inspire.ec.europa.eu/schemas/common/1.0":invokeService is a complexType with complexContent restriction of type "http://inspire.ec.europa.eu/schemas/common/1.0":invokeService_ext.
///
/// @note class icommon__invokeService operations:
/// - icommon__invokeService* soap_new_icommon__invokeService(soap*) allocate and default initialize
/// - icommon__invokeService* soap_new_icommon__invokeService(soap*, int num) allocate and default initialize an array
/// - icommon__invokeService* soap_new_req_icommon__invokeService(soap*, ...) allocate, set required members
/// - icommon__invokeService* soap_new_set_icommon__invokeService(soap*, ...) allocate, set all public members
/// - icommon__invokeService::soap_default(soap*) default initialize members
/// - int soap_read_icommon__invokeService(soap*, icommon__invokeService*) deserialize from a stream
/// - int soap_write_icommon__invokeService(soap*, icommon__invokeService*) serialize to a stream
/// - icommon__invokeService* icommon__invokeService::soap_dup(soap*) returns deep copy of icommon__invokeService, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - icommon__invokeService::soap_del() deep deletes icommon__invokeService data members, use only after icommon__invokeService::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int icommon__invokeService::soap_type() returns SOAP_TYPE_icommon__invokeService or derived type identifier
class icommon__invokeService : public xsd__anyType
{ public:
/// Element "ResourceTitle" of type "http://inspire.ec.europa.eu/schemas/common/1.0":notEmptyString.
    icommon__notEmptyString              ResourceTitle                  1;	///< Required element.
/// Element "ResourceAbstract" of type "http://inspire.ec.europa.eu/schemas/common/1.0":notEmptyString.
    icommon__notEmptyString              ResourceAbstract               1;	///< Required element.
/// Element "ResourceType" of type "http://inspire.ec.europa.eu/schemas/common/1.0":serviceSpatialDataResourceType.
    enum icommon__serviceSpatialDataResourceType  ResourceType                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Mandatory if linkage to the service is available
/// </BLOCKQUOTE></PRE>
///
/// Vector of icommon__resourceLocatorType* of length 0..unbounded.
    std::vector<icommon__resourceLocatorType*> ResourceLocator                0;	///< Multiple elements.
/// Vector of icommon__classificationOfSpatialDataService* of length 1..unbounded.
    std::vector<icommon__classificationOfSpatialDataService*> MandatoryKeyword               1;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   If the resource is a spatial data service, at least one keyword from Part D.4 shall be provided.
/// </BLOCKQUOTE></PRE>
///
/// Vector of icommon__keyword* of length 0..unbounded.
    std::vector<icommon__keyword*      > Keyword                        0;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   Mandatory for services with an explicit geographic extent.
/// </BLOCKQUOTE></PRE>
///
/// Vector of icommon__geographicBoundingBox* of length 0..unbounded.
    std::vector<icommon__geographicBoundingBox*> GeographicBoundingBox          0;	///< Multiple elements.
/// Vector of icommon__temporalReference* of length 1..unbounded.
    std::vector<icommon__temporalReference*> TemporalReference              1;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   Mandatory when there is a restriction on the spatial resolution for this service.
/// </BLOCKQUOTE></PRE>
///
/// Vector of icommon__spatialResolution* of length 0..unbounded.
    std::vector<icommon__spatialResolution*> SpatialResolution              0;	///< Multiple elements.
/// Vector of icommon__conformity* of length 1..unbounded.
    std::vector<icommon__conformity*   > Conformity                     1;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   The element must have values. If no conditions apply to the access and use of the resource, no conditions apply
///   shall be used. If conditions are unknown, conditions unknown shall be used.
/// </BLOCKQUOTE></PRE>
///
/// Vector of icommon__notEmptyString of length 1..unbounded.
    std::vector<icommon__notEmptyString> ConditionsForAccessAndUse      1;	///< Multiple elements.
/// Vector of icommon__notEmptyString of length 1..unbounded.
    std::vector<icommon__notEmptyString> LimitationsOnPublicAccess      1;	///< Multiple elements.
/// Vector of icommon__responsibleOrganisation* of length 1..unbounded.
    std::vector<icommon__responsibleOrganisation*> ResponsibleOrganisation        1;	///< Multiple elements.
/// Vector of icommon__metadataPointOfContact* of length 1..unbounded.
    std::vector<icommon__metadataPointOfContact*> MetadataPointOfContact         1;	///< Multiple elements.
/// Element "MetadataDate" of type "http://inspire.ec.europa.eu/schemas/common/1.0":iso8601Date.
    icommon__iso8601Date                 MetadataDate                   1;	///< Required element.
/// Element "MetadataLanguage" of type "http://inspire.ec.europa.eu/schemas/common/1.0":euLanguageISO6392B.
    enum icommon__euLanguageISO6392B     MetadataLanguage               1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Mandatory if linkage to data sets on which the service operates are available.
/// </BLOCKQUOTE></PRE>
///
/// Vector of icommon__uniqueResourceIdentifier* of length 0..unbounded.
    std::vector<icommon__uniqueResourceIdentifier*> CoupledResource                0;	///< Multiple elements.
/// Element "SpatialDataServiceType" of type "http://inspire.ec.europa.eu/schemas/common/1.0":discoverySpatialDataServiceType.
    enum icommon__discoverySpatialDataServiceType  SpatialDataServiceType         1;	///< Required element.
/*  RESTRICTED FROM icommon__invokeService_x005fext:
    END OF RESTRICTED FROM icommon__invokeService_x005fext */
/*  RESTRICTED FROM icommon__service:
    END OF RESTRICTED FROM icommon__service */
/*  RESTRICTED FROM icommon__service_x005fext:
    END OF RESTRICTED FROM icommon__service_x005fext */
/*  RESTRICTED FROM icommon__resource:
/// Imported attribute reference xml:lang.
  @ _xml__lang*                          xml__lang                      0;	///< Optional attribute.
    END OF RESTRICTED FROM icommon__resource */
};

/// @brief "http://inspire.ec.europa.eu/schemas/common/1.0":otherService is a complexType with complexContent restriction of type "http://inspire.ec.europa.eu/schemas/common/1.0":otherService_ext.
///
/// @note class icommon__otherService operations:
/// - icommon__otherService* soap_new_icommon__otherService(soap*) allocate and default initialize
/// - icommon__otherService* soap_new_icommon__otherService(soap*, int num) allocate and default initialize an array
/// - icommon__otherService* soap_new_req_icommon__otherService(soap*, ...) allocate, set required members
/// - icommon__otherService* soap_new_set_icommon__otherService(soap*, ...) allocate, set all public members
/// - icommon__otherService::soap_default(soap*) default initialize members
/// - int soap_read_icommon__otherService(soap*, icommon__otherService*) deserialize from a stream
/// - int soap_write_icommon__otherService(soap*, icommon__otherService*) serialize to a stream
/// - icommon__otherService* icommon__otherService::soap_dup(soap*) returns deep copy of icommon__otherService, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - icommon__otherService::soap_del() deep deletes icommon__otherService data members, use only after icommon__otherService::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int icommon__otherService::soap_type() returns SOAP_TYPE_icommon__otherService or derived type identifier
class icommon__otherService : public xsd__anyType
{ public:
/// Element "ResourceTitle" of type "http://inspire.ec.europa.eu/schemas/common/1.0":notEmptyString.
    icommon__notEmptyString              ResourceTitle                  1;	///< Required element.
/// Element "ResourceAbstract" of type "http://inspire.ec.europa.eu/schemas/common/1.0":notEmptyString.
    icommon__notEmptyString              ResourceAbstract               1;	///< Required element.
/// Element "ResourceType" of type "http://inspire.ec.europa.eu/schemas/common/1.0":serviceSpatialDataResourceType.
    enum icommon__serviceSpatialDataResourceType  ResourceType                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Mandatory if linkage to the service is available
/// </BLOCKQUOTE></PRE>
///
/// Vector of icommon__resourceLocatorType* of length 0..unbounded.
    std::vector<icommon__resourceLocatorType*> ResourceLocator                0;	///< Multiple elements.
/// Vector of icommon__classificationOfSpatialDataService* of length 1..unbounded.
    std::vector<icommon__classificationOfSpatialDataService*> MandatoryKeyword               1;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   If the resource is a spatial data service, at least one keyword from Part D.4 shall be provided.
/// </BLOCKQUOTE></PRE>
///
/// Vector of icommon__keyword* of length 0..unbounded.
    std::vector<icommon__keyword*      > Keyword                        0;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   Mandatory for services with an explicit geographic extent.
/// </BLOCKQUOTE></PRE>
///
/// Vector of icommon__geographicBoundingBox* of length 0..unbounded.
    std::vector<icommon__geographicBoundingBox*> GeographicBoundingBox          0;	///< Multiple elements.
/// Vector of icommon__temporalReference* of length 1..unbounded.
    std::vector<icommon__temporalReference*> TemporalReference              1;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   Mandatory when there is a restriction on the spatial resolution for this service.
/// </BLOCKQUOTE></PRE>
///
/// Vector of icommon__spatialResolution* of length 0..unbounded.
    std::vector<icommon__spatialResolution*> SpatialResolution              0;	///< Multiple elements.
/// Vector of icommon__conformity* of length 1..unbounded.
    std::vector<icommon__conformity*   > Conformity                     1;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   The element must have values. If no conditions apply to the access and use of the resource, no conditions apply
///   shall be used. If conditions are unknown, conditions unknown shall be used.
/// </BLOCKQUOTE></PRE>
///
/// Vector of icommon__notEmptyString of length 1..unbounded.
    std::vector<icommon__notEmptyString> ConditionsForAccessAndUse      1;	///< Multiple elements.
/// Vector of icommon__notEmptyString of length 1..unbounded.
    std::vector<icommon__notEmptyString> LimitationsOnPublicAccess      1;	///< Multiple elements.
/// Vector of icommon__responsibleOrganisation* of length 1..unbounded.
    std::vector<icommon__responsibleOrganisation*> ResponsibleOrganisation        1;	///< Multiple elements.
/// Vector of icommon__metadataPointOfContact* of length 1..unbounded.
    std::vector<icommon__metadataPointOfContact*> MetadataPointOfContact         1;	///< Multiple elements.
/// Element "MetadataDate" of type "http://inspire.ec.europa.eu/schemas/common/1.0":iso8601Date.
    icommon__iso8601Date                 MetadataDate                   1;	///< Required element.
/// Element "MetadataLanguage" of type "http://inspire.ec.europa.eu/schemas/common/1.0":euLanguageISO6392B.
    enum icommon__euLanguageISO6392B     MetadataLanguage               1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Mandatory if linkage to data sets on which the service operates are available.
/// </BLOCKQUOTE></PRE>
///
/// Vector of icommon__uniqueResourceIdentifier* of length 0..unbounded.
    std::vector<icommon__uniqueResourceIdentifier*> CoupledResource                0;	///< Multiple elements.
/// Element "SpatialDataServiceType" of type "http://inspire.ec.europa.eu/schemas/common/1.0":discoverySpatialDataServiceType.
    enum icommon__discoverySpatialDataServiceType  SpatialDataServiceType         1;	///< Required element.
/*  RESTRICTED FROM icommon__otherService_x005fext:
    END OF RESTRICTED FROM icommon__otherService_x005fext */
/*  RESTRICTED FROM icommon__service:
    END OF RESTRICTED FROM icommon__service */
/*  RESTRICTED FROM icommon__service_x005fext:
    END OF RESTRICTED FROM icommon__service_x005fext */
/*  RESTRICTED FROM icommon__resource:
/// Imported attribute reference xml:lang.
  @ _xml__lang*                          xml__lang                      0;	///< Optional attribute.
    END OF RESTRICTED FROM icommon__resource */
};


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://www.opengis.net/wfs/2.0                                           *
 *                                                                            *
\******************************************************************************/

/// @brief Top-level root element "http://www.opengis.net/wfs/2.0":Query of type "http://www.opengis.net/wfs/2.0":QueryType.
typedef wfs__QueryType _wfs__Query;

/// @brief Top-level root element "http://www.opengis.net/wfs/2.0":StoredQuery of type "http://www.opengis.net/wfs/2.0":StoredQueryType.
typedef wfs__StoredQueryType _wfs__StoredQuery;

/// @brief Top-level root element "http://www.opengis.net/wfs/2.0":GetCapabilities of type "http://www.opengis.net/wfs/2.0":GetCapabilitiesType.
typedef wfs__GetCapabilitiesType _wfs__GetCapabilities;

/// @brief Top-level root element "http://www.opengis.net/wfs/2.0":WFS_Capabilities of type "http://www.opengis.net/wfs/2.0":WFS_CapabilitiesType.
typedef wfs__WFS_x005fCapabilitiesType _wfs__WFS_x005fCapabilities;

/// @brief Top-level root element "http://www.opengis.net/wfs/2.0":FeatureTypeList of type "http://www.opengis.net/wfs/2.0":FeatureTypeListType.
typedef wfs__FeatureTypeListType _wfs__FeatureTypeList;

/// @brief Top-level root element "http://www.opengis.net/wfs/2.0":Element of type "http://www.opengis.net/wfs/2.0":ElementType.
typedef wfs__ElementType _wfs__Element;

/// @brief Top-level root element "http://www.opengis.net/wfs/2.0":ValueList of type "http://www.opengis.net/wfs/2.0":ValueListType.
typedef wfs__ValueListType _wfs__ValueList;

/// @brief Top-level root element "http://www.opengis.net/wfs/2.0":Value of type xs:anyType.
typedef xsd__anyType _wfs__Value;

/// @brief Top-level root element "http://www.opengis.net/wfs/2.0":DescribeFeatureType of type "http://www.opengis.net/wfs/2.0":DescribeFeatureTypeType.
typedef wfs__DescribeFeatureTypeType _wfs__DescribeFeatureType;

/// @brief Top-level root element "http://www.opengis.net/wfs/2.0":GetPropertyValue of type "http://www.opengis.net/wfs/2.0":GetPropertyValueType.
typedef wfs__GetPropertyValueType _wfs__GetPropertyValue;

/// @brief Top-level root element "http://www.opengis.net/wfs/2.0":ValueCollection of type "http://www.opengis.net/wfs/2.0":ValueCollectionType.
typedef wfs__ValueCollectionType _wfs__ValueCollection;

/// @brief Top-level root element "http://www.opengis.net/wfs/2.0":member of type "http://www.opengis.net/wfs/2.0":MemberPropertyType.
typedef wfs__MemberPropertyType _wfs__member;

/// @brief Top-level root element "http://www.opengis.net/wfs/2.0":Tuple of type "http://www.opengis.net/wfs/2.0":TupleType.
typedef wfs__TupleType _wfs__Tuple;

/// @brief Top-level root element "http://www.opengis.net/wfs/2.0":GetFeature of type "http://www.opengis.net/wfs/2.0":GetFeatureType.
typedef wfs__GetFeatureType _wfs__GetFeature;

/// @brief Top-level root element "http://www.opengis.net/wfs/2.0":GetFeatureWithLock of type "http://www.opengis.net/wfs/2.0":GetFeatureWithLockType.
typedef wfs__GetFeatureWithLockType _wfs__GetFeatureWithLock;

/// @brief Top-level root element "http://www.opengis.net/wfs/2.0":FeatureCollection of type "http://www.opengis.net/wfs/2.0":FeatureCollectionType.
typedef wfs__FeatureCollectionType _wfs__FeatureCollection;

/// @brief Top-level root element "http://www.opengis.net/wfs/2.0":SimpleFeatureCollection of type "http://www.opengis.net/wfs/2.0":SimpleFeatureCollectionType.
typedef wfs__SimpleFeatureCollectionType _wfs__SimpleFeatureCollection;

/// @brief Top-level root element "http://www.opengis.net/wfs/2.0":boundedBy of type "http://www.opengis.net/wfs/2.0":EnvelopePropertyType.
typedef wfs__EnvelopePropertyType _wfs__boundedBy;

/// @brief Top-level root element "http://www.opengis.net/wfs/2.0":ListStoredQueries of type "http://www.opengis.net/wfs/2.0":ListStoredQueriesType.
typedef wfs__ListStoredQueriesType _wfs__ListStoredQueries;

/// @brief Top-level root element "http://www.opengis.net/wfs/2.0":ListStoredQueriesResponse of type "http://www.opengis.net/wfs/2.0":ListStoredQueriesResponseType.
typedef wfs__ListStoredQueriesResponseType _wfs__ListStoredQueriesResponse;

/// @brief Top-level root element "http://www.opengis.net/wfs/2.0":DescribeStoredQueries of type "http://www.opengis.net/wfs/2.0":DescribeStoredQueriesType.
typedef wfs__DescribeStoredQueriesType _wfs__DescribeStoredQueries;

/// @brief Top-level root element "http://www.opengis.net/wfs/2.0":DescribeStoredQueriesResponse of type "http://www.opengis.net/wfs/2.0":DescribeStoredQueriesResponseType.
typedef wfs__DescribeStoredQueriesResponseType _wfs__DescribeStoredQueriesResponse;

/// @brief Top-level root element "http://www.opengis.net/wfs/2.0":CreateStoredQuery of type "http://www.opengis.net/wfs/2.0":CreateStoredQueryType.
typedef wfs__CreateStoredQueryType _wfs__CreateStoredQuery;

/// @brief Top-level root element "http://www.opengis.net/wfs/2.0":CreateStoredQueryResponse of type "http://www.opengis.net/wfs/2.0":CreateStoredQueryResponseType.
typedef wfs__CreateStoredQueryResponseType _wfs__CreateStoredQueryResponse;

/// @brief Top-level root element "http://www.opengis.net/wfs/2.0":DropStoredQueryResponse of type "http://www.opengis.net/wfs/2.0":ExecutionStatusType.
typedef wfs__ExecutionStatusType _wfs__DropStoredQueryResponse;

/// @brief Top-level root element "http://www.opengis.net/wfs/2.0":LockFeature of type "http://www.opengis.net/wfs/2.0":LockFeatureType.
typedef wfs__LockFeatureType _wfs__LockFeature;

/// @brief Top-level root element "http://www.opengis.net/wfs/2.0":LockFeatureResponse of type "http://www.opengis.net/wfs/2.0":LockFeatureResponseType.
typedef wfs__LockFeatureResponseType _wfs__LockFeatureResponse;

/// @brief Top-level root element "http://www.opengis.net/wfs/2.0":Transaction of type "http://www.opengis.net/wfs/2.0":TransactionType.
typedef wfs__TransactionType _wfs__Transaction;

/// @brief Top-level root element "http://www.opengis.net/wfs/2.0":Insert of type "http://www.opengis.net/wfs/2.0":InsertType.
typedef wfs__InsertType _wfs__Insert;

/// @brief Top-level root element "http://www.opengis.net/wfs/2.0":Update of type "http://www.opengis.net/wfs/2.0":UpdateType.
typedef wfs__UpdateType _wfs__Update;

/// @brief Top-level root element "http://www.opengis.net/wfs/2.0":Property of type "http://www.opengis.net/wfs/2.0":PropertyType.
typedef wfs__PropertyType _wfs__Property;

/// @brief Top-level root element "http://www.opengis.net/wfs/2.0":Replace of type "http://www.opengis.net/wfs/2.0":ReplaceType.
typedef wfs__ReplaceType _wfs__Replace;

/// @brief Top-level root element "http://www.opengis.net/wfs/2.0":Delete of type "http://www.opengis.net/wfs/2.0":DeleteType.
typedef wfs__DeleteType _wfs__Delete;

/// @brief Top-level root element "http://www.opengis.net/wfs/2.0":Native of type "http://www.opengis.net/wfs/2.0":NativeType.
typedef wfs__NativeType _wfs__Native;

/// @brief Top-level root element "http://www.opengis.net/wfs/2.0":TransactionResponse of type "http://www.opengis.net/wfs/2.0":TransactionResponseType.
typedef wfs__TransactionResponseType _wfs__TransactionResponse;


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://www.opengis.net/wfs/2.0                                           *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://www.opengis.net/wfs-util/2.0                                      *
 *                                                                            *
\******************************************************************************/

/// @brief Top-level root element "http://www.opengis.net/wfs-util/2.0":DescribeFeatureTypeResponse of type "http://www.opengis.net/wfs-util/2.0":DescribeFeatureTypeResponseType.
typedef util__DescribeFeatureTypeResponseType _util__DescribeFeatureTypeResponse;


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://www.opengis.net/wfs-util/2.0                                      *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://www.opengis.net/ows/1.1                                           *
 *                                                                            *
\******************************************************************************/

/// @brief Top-level root element "http://www.opengis.net/ows/1.1":Exception of type "http://www.opengis.net/ows/1.1":ExceptionType.
typedef ows__ExceptionType _ows__Exception;

/// @brief Top-level root element "http://www.opengis.net/ows/1.1":GetResourceByID of type "http://www.opengis.net/ows/1.1":GetResourceByIdType.
typedef ows__GetResourceByIdType _ows__GetResourceByID;

/// @brief Top-level root element "http://www.opengis.net/ows/1.1":Identifier of type "http://www.opengis.net/ows/1.1":CodeType.
/// <PRE><BLOCKQUOTE>
///   Unique identifier or name of this dataset.
/// </BLOCKQUOTE></PRE>
///
typedef ows__CodeType _ows__Identifier;

/// @brief Top-level root element "http://www.opengis.net/ows/1.1":OutputFormat of type "http://www.opengis.net/ows/1.1":MimeType.
/// <PRE><BLOCKQUOTE>
///   Reference to a format in which this data can be encoded and transferred. More specific parameter names should be used by specific OWS specifications wherever applicable. More than one such parameter can be included for different purposes.
/// </BLOCKQUOTE></PRE>
///
typedef ows__MimeType _ows__OutputFormat;

/// @brief Top-level root element "http://www.opengis.net/ows/1.1":AvailableCRS of type xs:anyURI.
typedef xsd__anyURI _ows__AvailableCRS;

/// @brief Top-level root element "http://www.opengis.net/ows/1.1":SupportedCRS of type xs:anyURI.
/// <PRE><BLOCKQUOTE>
///   Coordinate reference system in which data from this data(set) or resource is available or supported. More specific parameter names should be used by specific OWS specifications wherever applicable. More than one such parameter can be included for different purposes.
/// </BLOCKQUOTE></PRE>
///
typedef xsd__anyURI _ows__SupportedCRS;

/// @brief Top-level root element "http://www.opengis.net/ows/1.1":AccessConstraints of type xs:string.
/// <PRE><BLOCKQUOTE>
///   Access constraint applied to assure the protection of privacy or intellectual property, or any other restrictions on retrieving or using data from or otherwise using this server. The reserved value NONE (case insensitive) shall be used to mean no access constraints are imposed.
/// </BLOCKQUOTE></PRE>
///
typedef std::string _ows__AccessConstraints;

/// @brief Top-level root element "http://www.opengis.net/ows/1.1":Fees of type xs:string.
/// <PRE><BLOCKQUOTE>
///   Fees and terms for retrieving data from or otherwise using this server, including the monetary units as specified in ISO 4217. The reserved value NONE (case insensitive) shall be used to mean no fees or terms.
/// </BLOCKQUOTE></PRE>
///
typedef std::string _ows__Fees;

/// @brief Top-level root element "http://www.opengis.net/ows/1.1":Language of type xs:language.
/// <PRE><BLOCKQUOTE>
///   Identifier of a language used by the data(set) contents. This language identifier shall be as specified in IETF RFC 4646. When this element is omitted, the language used is not identified.
/// </BLOCKQUOTE></PRE>
///
typedef xsd__language _ows__Language;

/// @brief Top-level root element "http://www.opengis.net/ows/1.1":Metadata of type "http://www.opengis.net/ows/1.1":MetadataType.
typedef ows__MetadataType _ows__Metadata;

/// @brief Top-level root element "http://www.opengis.net/ows/1.1":BoundingBox of type "http://www.opengis.net/ows/1.1":BoundingBoxType.
typedef ows__BoundingBoxType _ows__BoundingBox;

/// @brief Top-level root element "http://www.opengis.net/ows/1.1":WGS84BoundingBox of type "http://www.opengis.net/ows/1.1":WGS84BoundingBoxType.
typedef ows__WGS84BoundingBoxType _ows__WGS84BoundingBox;

/// @brief Top-level root element "http://www.opengis.net/ows/1.1":Title of type "http://www.opengis.net/ows/1.1":LanguageStringType.
/// <PRE><BLOCKQUOTE>
///   Title of this resource, normally used for display to a human.
/// </BLOCKQUOTE></PRE>
///
typedef ows__LanguageStringType _ows__Title;

/// @brief Top-level root element "http://www.opengis.net/ows/1.1":Abstract of type "http://www.opengis.net/ows/1.1":LanguageStringType.
/// <PRE><BLOCKQUOTE>
///   Brief narrative description of this resource, normally used for display to a human.
/// </BLOCKQUOTE></PRE>
///
typedef ows__LanguageStringType _ows__Abstract;

/// @brief Top-level root element "http://www.opengis.net/ows/1.1":Keywords of type "http://www.opengis.net/ows/1.1":KeywordsType.
typedef ows__KeywordsType _ows__Keywords;

/// @brief Top-level root element "http://www.opengis.net/ows/1.1":PointOfContact of type "http://www.opengis.net/ows/1.1":ResponsiblePartyType.
/// <PRE><BLOCKQUOTE>
///   Identification of, and means of communication with, person(s) responsible for the resource(s).
/// </BLOCKQUOTE></PRE>
///
/// <PRE><BLOCKQUOTE>
///   For OWS use in the ServiceProvider section of a service metadata document, the optional organizationName element was removed, since this type is always used with the ProviderName element which provides that information. The optional individualName element was made mandatory, since either the organizationName or individualName element is mandatory. The mandatory "role" element was changed to optional, since no clear use of this information is known in the ServiceProvider section.
/// </BLOCKQUOTE></PRE>
///
typedef ows__ResponsiblePartyType _ows__PointOfContact;

/// @brief Top-level root element "http://www.opengis.net/ows/1.1":IndividualName of type xs:string.
/// <PRE><BLOCKQUOTE>
///   Name of the responsible person: surname, given name, title separated by a delimiter.
/// </BLOCKQUOTE></PRE>
///
typedef std::string _ows__IndividualName;

/// @brief Top-level root element "http://www.opengis.net/ows/1.1":OrganisationName of type xs:string.
/// <PRE><BLOCKQUOTE>
///   Name of the responsible organization.
/// </BLOCKQUOTE></PRE>
///
typedef std::string _ows__OrganisationName;

/// @brief Top-level root element "http://www.opengis.net/ows/1.1":PositionName of type xs:string.
/// <PRE><BLOCKQUOTE>
///   Role or position of the responsible person.
/// </BLOCKQUOTE></PRE>
///
typedef std::string _ows__PositionName;

/// @brief Top-level root element "http://www.opengis.net/ows/1.1":Role of type "http://www.opengis.net/ows/1.1":CodeType.
/// <PRE><BLOCKQUOTE>
///   Function performed by the responsible party. Possible values of this Role shall include the values and the meanings listed in Subclause B.5.5 of ISO 19115:2003.
/// </BLOCKQUOTE></PRE>
///
typedef ows__CodeType _ows__Role;

/// @brief Top-level root element "http://www.opengis.net/ows/1.1":ContactInfo of type "http://www.opengis.net/ows/1.1":ContactType.
/// <PRE><BLOCKQUOTE>
///   Address of the responsible party.
/// </BLOCKQUOTE></PRE>
///
typedef ows__ContactType _ows__ContactInfo;

/// @brief Top-level root element "http://www.opengis.net/ows/1.1":GetCapabilities of type "http://www.opengis.net/ows/1.1":GetCapabilitiesType.
typedef ows__GetCapabilitiesType _ows__GetCapabilities;

/// @brief Top-level root element "http://www.opengis.net/ows/1.1":ExtendedCapabilities of type xs:anyType.
/// <PRE><BLOCKQUOTE>
///   Individual software vendors and servers can use this element to provide metadata about any additional server abilities.
/// </BLOCKQUOTE></PRE>
///
typedef xsd__anyType _ows__ExtendedCapabilities;

/// @brief Top-level root element "http://www.opengis.net/ows/1.1":Value of type "http://www.opengis.net/ows/1.1":ValueType.
typedef ows__ValueType _ows__Value;

/// @brief Top-level root element "http://www.opengis.net/ows/1.1":DefaultValue of type "http://www.opengis.net/ows/1.1":ValueType.
/// <PRE><BLOCKQUOTE>
///   The default value for a quantity for which multiple values are allowed.
/// </BLOCKQUOTE></PRE>
///
typedef ows__ValueType _ows__DefaultValue;

/// @brief Top-level root element "http://www.opengis.net/ows/1.1":Range of type "http://www.opengis.net/ows/1.1":RangeType.
typedef ows__RangeType _ows__Range;

/// @brief Top-level root element "http://www.opengis.net/ows/1.1":MinimumValue of type "http://www.opengis.net/ows/1.1":ValueType.
/// <PRE><BLOCKQUOTE>
///   Minimum value of this numeric parameter.
/// </BLOCKQUOTE></PRE>
///
typedef ows__ValueType _ows__MinimumValue;

/// @brief Top-level root element "http://www.opengis.net/ows/1.1":MaximumValue of type "http://www.opengis.net/ows/1.1":ValueType.
/// <PRE><BLOCKQUOTE>
///   Maximum value of this numeric parameter.
/// </BLOCKQUOTE></PRE>
///
typedef ows__ValueType _ows__MaximumValue;

/// @brief Top-level root element "http://www.opengis.net/ows/1.1":Spacing of type "http://www.opengis.net/ows/1.1":ValueType.
/// <PRE><BLOCKQUOTE>
///   The regular distance or spacing between the allowed values in a range.
/// </BLOCKQUOTE></PRE>
///
typedef ows__ValueType _ows__Spacing;

/// @brief Top-level root element "http://www.opengis.net/ows/1.1":Meaning of type "http://www.opengis.net/ows/1.1":DomainMetadataType.
/// <PRE><BLOCKQUOTE>
///   Definition of the meaning or semantics of this set of values. This Meaning can provide more specific, complete, precise, machine accessible, and machine understandable semantics about this quantity, relative to other available semantic information. For example, other semantic information is often provided in "documentation" elements in XML Schemas or "description" elements in GML objects.
/// </BLOCKQUOTE></PRE>
///
typedef ows__DomainMetadataType _ows__Meaning;

/// @brief Top-level root element "http://www.opengis.net/ows/1.1":DataType of type "http://www.opengis.net/ows/1.1":DomainMetadataType.
/// <PRE><BLOCKQUOTE>
///   Definition of the data type of this set of values. In this case, the xlink:href attribute can reference a URN for a well-known data type. For example, such a URN could be a data type identification URN defined in the "ogc" URN namespace.
/// </BLOCKQUOTE></PRE>
///
typedef ows__DomainMetadataType _ows__DataType;

/// @brief Top-level root element "http://www.opengis.net/ows/1.1":ReferenceSystem of type "http://www.opengis.net/ows/1.1":DomainMetadataType.
/// <PRE><BLOCKQUOTE>
///   Definition of the reference system used by this set of values, including the unit of measure whenever applicable (as is normal). In this case, the xlink:href attribute can reference a URN for a well-known reference system, such as for a coordinate reference system (CRS). For example, such a URN could be a CRS identification URN defined in the "ogc" URN namespace.
/// </BLOCKQUOTE></PRE>
///
typedef ows__DomainMetadataType _ows__ReferenceSystem;

/// @brief Top-level root element "http://www.opengis.net/ows/1.1":UOM of type "http://www.opengis.net/ows/1.1":DomainMetadataType.
/// <PRE><BLOCKQUOTE>
///   Definition of the unit of measure of this set of values. In this case, the xlink:href attribute can reference a URN for a well-known unit of measure (uom). For example, such a URN could be a UOM identification URN defined in the "ogc" URN namespace.
/// </BLOCKQUOTE></PRE>
///
typedef ows__DomainMetadataType _ows__UOM;

/// @brief Top-level root element "http://www.opengis.net/ows/1.1":OtherSource of type "http://www.opengis.net/ows/1.1":MetadataType.
/// <PRE><BLOCKQUOTE>
///   Reference to a source of metadata describing coverage offerings available from this server. This parameter can reference a catalogue server from which dataset metadata is available. This ability is expected to be used by servers with thousands or millions of datasets, for which searching a catalogue is more feasible than fetching a long Capabilities XML document. When no DatasetDescriptionSummaries are included, and one or more catalogue servers are referenced, this set of catalogues shall contain current metadata summaries for all the datasets currently available from this OWS server, with the metadata for each such dataset referencing this OWS server.
/// </BLOCKQUOTE></PRE>
///
typedef ows__MetadataType _ows__OtherSource;

/// @brief Top-level root element "http://www.opengis.net/ows/1.1":DatasetDescriptionSummary of type "http://www.opengis.net/ows/1.1":DatasetDescriptionSummaryBaseType.
typedef ows__DatasetDescriptionSummaryBaseType _ows__DatasetDescriptionSummary;

/// @brief Top-level root element "http://www.opengis.net/ows/1.1":OperationResponse of type "http://www.opengis.net/ows/1.1":ManifestType.
/// <PRE><BLOCKQUOTE>
///   Response from an OWS operation, allowing including multiple output data items with each item either included or referenced. This OperationResponse element, or an element using the ManifestType with a more specific element name, shall be used whenever applicable for responses from OWS operations.
/// </BLOCKQUOTE></PRE>
///
/// <PRE><BLOCKQUOTE>
///   This element is specified for use where the ManifestType contents are needed for an operation response, but the Manifest element name is not fully applicable. This element or the ManifestType shall be used instead of using the ows:ReferenceType proposed in OGC 04-105.
/// </BLOCKQUOTE></PRE>
///
typedef ows__ManifestType _ows__OperationResponse;

/// @brief Top-level root element "http://www.opengis.net/ows/1.1":InputData of type "http://www.opengis.net/ows/1.1":ManifestType.
/// <PRE><BLOCKQUOTE>
///   Input data in a XML-encoded OWS operation request, allowing including multiple data items with each data item either included or referenced. This InputData element, or an element using the ManifestType with a more-specific element name (TBR), shall be used whenever applicable within XML-encoded OWS operation requests.
/// </BLOCKQUOTE></PRE>
///
typedef ows__ManifestType _ows__InputData;

/// @brief Top-level root element "http://www.opengis.net/ows/1.1":ServiceReference of type "http://www.opengis.net/ows/1.1":ServiceReferenceType.
typedef ows__ServiceReferenceType _ows__ServiceReference;

/// @brief Top-level root element "http://www.opengis.net/ows/1.1":Reference of type "http://www.opengis.net/ows/1.1":ReferenceType.
typedef ows__ReferenceType _ows__Reference;

/// @brief Top-level root element "http://www.opengis.net/ows/1.1":ReferenceGroup of type "http://www.opengis.net/ows/1.1":ReferenceGroupType.
typedef ows__ReferenceGroupType _ows__ReferenceGroup;

/// @brief Top-level root element "http://www.opengis.net/ows/1.1":Manifest of type "http://www.opengis.net/ows/1.1":ManifestType.
typedef ows__ManifestType _ows__Manifest;


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://www.opengis.net/ows/1.1                                           *
 *                                                                            *
\******************************************************************************/

/// @brief Top-level attribute "http://www.opengis.net/ows/1.1":reference of simpleType xs:anyURI.
/// <PRE><BLOCKQUOTE>
///   Reference to data or metadata recorded elsewhere, either external to this XML document or within it. Whenever practical, this attribute should be a URL from which this metadata can be electronically retrieved. Alternately, this attribute can reference a URN for well-known metadata. For example, such a URN could be a URN defined in the "ogc" URN namespace.
/// </BLOCKQUOTE></PRE>
///
typedef xsd__anyURI _ows__reference;


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://inspire.ec.europa.eu/schemas/inspire_dls/1.0                      *
 *                                                                            *
\******************************************************************************/

/// @brief Top-level root element "http://inspire.ec.europa.eu/schemas/inspire_dls/1.0":ExtendedCapabilities of type "http://inspire.ec.europa.eu/schemas/inspire_dls/1.0":ExtendedCapabilitiesType.
typedef idls__ExtendedCapabilitiesType _idls__ExtendedCapabilities;

/// @brief Top-level root element "http://inspire.ec.europa.eu/schemas/inspire_dls/1.0":spatial_dataset_identifier_code of type "http://inspire.ec.europa.eu/schemas/common/1.0":notEmptyString.
typedef icommon__notEmptyString _idls__spatial_x005fdataset_x005fidentifier_x005fcode;

/// @brief Top-level root element "http://inspire.ec.europa.eu/schemas/inspire_dls/1.0":spatial_dataset_identifier_namespace of type xs:anyURI.
typedef xsd__anyURI _idls__spatial_x005fdataset_x005fidentifier_x005fnamespace;


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://inspire.ec.europa.eu/schemas/inspire_dls/1.0                      *
 *                                                                            *
\******************************************************************************/

/// @brief Top-level attribute "http://inspire.ec.europa.eu/schemas/inspire_dls/1.0":spatial_dataset_identifier_code of simpleType xs:string.
// "_idls__spatial_x005fdataset_x005fidentifier_x005fcode" attribute definition intentionally left blank.
/// @brief Top-level attribute "http://inspire.ec.europa.eu/schemas/inspire_dls/1.0":spatial_dataset_identifier_namespace of simpleType xs:anyURI.
// "_idls__spatial_x005fdataset_x005fidentifier_x005fnamespace" attribute definition intentionally left blank.
/// @brief Top-level attribute "http://inspire.ec.europa.eu/schemas/inspire_dls/1.0":crs of simpleType xs:anyURI.
typedef xsd__anyURI _idls__crs;


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://www.w3.org/1999/xlink                                             *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://www.w3.org/1999/xlink                                             *
 *                                                                            *
\******************************************************************************/

/// @brief Top-level attribute "http://www.w3.org/1999/xlink":type of simpleType "http://www.w3.org/1999/xlink":typeType.
// "_xlink__type" attribute definition intentionally left blank.
/// @brief Top-level attribute "http://www.w3.org/1999/xlink":href of simpleType "http://www.w3.org/1999/xlink":hrefType.
// "_xlink__href" attribute definition intentionally left blank.
/// @brief Top-level attribute "http://www.w3.org/1999/xlink":role of simpleType "http://www.w3.org/1999/xlink":roleType.
// "_xlink__role" attribute definition intentionally left blank.
/// @brief Top-level attribute "http://www.w3.org/1999/xlink":arcrole of simpleType "http://www.w3.org/1999/xlink":arcroleType.
// "_xlink__arcrole" attribute definition intentionally left blank.
/// @brief Top-level attribute "http://www.w3.org/1999/xlink":title of simpleType "http://www.w3.org/1999/xlink":titleAttrType.
// "_xlink__title" attribute definition intentionally left blank.
/// @brief Top-level attribute "http://www.w3.org/1999/xlink":show of simpleType "http://www.w3.org/1999/xlink":showType.
// "_xlink__show" attribute definition intentionally left blank.
/// @brief Top-level attribute "http://www.w3.org/1999/xlink":actuate of simpleType "http://www.w3.org/1999/xlink":actuateType.
// "_xlink__actuate" attribute definition intentionally left blank.
/// @brief Top-level attribute "http://www.w3.org/1999/xlink":label of simpleType "http://www.w3.org/1999/xlink":labelType.
// "_xlink__label" attribute definition intentionally left blank.
/// @brief Top-level attribute "http://www.w3.org/1999/xlink":from of simpleType "http://www.w3.org/1999/xlink":fromType.
// "_xlink__from" attribute definition intentionally left blank.
/// @brief Top-level attribute "http://www.w3.org/1999/xlink":to of simpleType "http://www.w3.org/1999/xlink":toType.
// "_xlink__to" attribute definition intentionally left blank.

/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://www.opengis.net/fes/2.0                                           *
 *                                                                            *
\******************************************************************************/

/// @brief Top-level root element "http://www.opengis.net/fes/2.0":Filter of type "http://www.opengis.net/fes/2.0":FilterType.
typedef fes__FilterType _fes__Filter;

/// @brief Top-level root element "http://www.opengis.net/fes/2.0":PropertyIsEqualTo of type "http://www.opengis.net/fes/2.0":BinaryComparisonOpType.
typedef fes__BinaryComparisonOpType _fes__PropertyIsEqualTo;

/// @brief Top-level root element "http://www.opengis.net/fes/2.0":PropertyIsNotEqualTo of type "http://www.opengis.net/fes/2.0":BinaryComparisonOpType.
typedef fes__BinaryComparisonOpType _fes__PropertyIsNotEqualTo;

/// @brief Top-level root element "http://www.opengis.net/fes/2.0":PropertyIsLessThan of type "http://www.opengis.net/fes/2.0":BinaryComparisonOpType.
typedef fes__BinaryComparisonOpType _fes__PropertyIsLessThan;

/// @brief Top-level root element "http://www.opengis.net/fes/2.0":PropertyIsGreaterThan of type "http://www.opengis.net/fes/2.0":BinaryComparisonOpType.
typedef fes__BinaryComparisonOpType _fes__PropertyIsGreaterThan;

/// @brief Top-level root element "http://www.opengis.net/fes/2.0":PropertyIsLessThanOrEqualTo of type "http://www.opengis.net/fes/2.0":BinaryComparisonOpType.
typedef fes__BinaryComparisonOpType _fes__PropertyIsLessThanOrEqualTo;

/// @brief Top-level root element "http://www.opengis.net/fes/2.0":PropertyIsGreaterThanOrEqualTo of type "http://www.opengis.net/fes/2.0":BinaryComparisonOpType.
typedef fes__BinaryComparisonOpType _fes__PropertyIsGreaterThanOrEqualTo;

/// @brief Top-level root element "http://www.opengis.net/fes/2.0":PropertyIsLike of type "http://www.opengis.net/fes/2.0":PropertyIsLikeType.
typedef fes__PropertyIsLikeType _fes__PropertyIsLike;

/// @brief Top-level root element "http://www.opengis.net/fes/2.0":PropertyIsNull of type "http://www.opengis.net/fes/2.0":PropertyIsNullType.
typedef fes__PropertyIsNullType _fes__PropertyIsNull;

/// @brief Top-level root element "http://www.opengis.net/fes/2.0":PropertyIsNil of type "http://www.opengis.net/fes/2.0":PropertyIsNilType.
typedef fes__PropertyIsNilType _fes__PropertyIsNil;

/// @brief Top-level root element "http://www.opengis.net/fes/2.0":PropertyIsBetween of type "http://www.opengis.net/fes/2.0":PropertyIsBetweenType.
typedef fes__PropertyIsBetweenType _fes__PropertyIsBetween;

/// @brief Top-level root element "http://www.opengis.net/fes/2.0":Equals of type "http://www.opengis.net/fes/2.0":BinarySpatialOpType.
typedef fes__BinarySpatialOpType _fes__Equals;

/// @brief Top-level root element "http://www.opengis.net/fes/2.0":Disjoint of type "http://www.opengis.net/fes/2.0":BinarySpatialOpType.
typedef fes__BinarySpatialOpType _fes__Disjoint;

/// @brief Top-level root element "http://www.opengis.net/fes/2.0":Touches of type "http://www.opengis.net/fes/2.0":BinarySpatialOpType.
typedef fes__BinarySpatialOpType _fes__Touches;

/// @brief Top-level root element "http://www.opengis.net/fes/2.0":Within of type "http://www.opengis.net/fes/2.0":BinarySpatialOpType.
typedef fes__BinarySpatialOpType _fes__Within;

/// @brief Top-level root element "http://www.opengis.net/fes/2.0":Overlaps of type "http://www.opengis.net/fes/2.0":BinarySpatialOpType.
typedef fes__BinarySpatialOpType _fes__Overlaps;

/// @brief Top-level root element "http://www.opengis.net/fes/2.0":Crosses of type "http://www.opengis.net/fes/2.0":BinarySpatialOpType.
typedef fes__BinarySpatialOpType _fes__Crosses;

/// @brief Top-level root element "http://www.opengis.net/fes/2.0":Intersects of type "http://www.opengis.net/fes/2.0":BinarySpatialOpType.
typedef fes__BinarySpatialOpType _fes__Intersects;

/// @brief Top-level root element "http://www.opengis.net/fes/2.0":Contains of type "http://www.opengis.net/fes/2.0":BinarySpatialOpType.
typedef fes__BinarySpatialOpType _fes__Contains;

/// @brief Top-level root element "http://www.opengis.net/fes/2.0":DWithin of type "http://www.opengis.net/fes/2.0":DistanceBufferType.
typedef fes__DistanceBufferType _fes__DWithin;

/// @brief Top-level root element "http://www.opengis.net/fes/2.0":Beyond of type "http://www.opengis.net/fes/2.0":DistanceBufferType.
typedef fes__DistanceBufferType _fes__Beyond;

/// @brief Top-level root element "http://www.opengis.net/fes/2.0":BBOX of type "http://www.opengis.net/fes/2.0":BBOXType.
typedef fes__BBOXType _fes__BBOX;

/// @brief Top-level root element "http://www.opengis.net/fes/2.0":After of type "http://www.opengis.net/fes/2.0":BinaryTemporalOpType.
typedef fes__BinaryTemporalOpType _fes__After;

/// @brief Top-level root element "http://www.opengis.net/fes/2.0":Before of type "http://www.opengis.net/fes/2.0":BinaryTemporalOpType.
typedef fes__BinaryTemporalOpType _fes__Before;

/// @brief Top-level root element "http://www.opengis.net/fes/2.0":Begins of type "http://www.opengis.net/fes/2.0":BinaryTemporalOpType.
typedef fes__BinaryTemporalOpType _fes__Begins;

/// @brief Top-level root element "http://www.opengis.net/fes/2.0":BegunBy of type "http://www.opengis.net/fes/2.0":BinaryTemporalOpType.
typedef fes__BinaryTemporalOpType _fes__BegunBy;

/// @brief Top-level root element "http://www.opengis.net/fes/2.0":TContains of type "http://www.opengis.net/fes/2.0":BinaryTemporalOpType.
typedef fes__BinaryTemporalOpType _fes__TContains;

/// @brief Top-level root element "http://www.opengis.net/fes/2.0":During of type "http://www.opengis.net/fes/2.0":BinaryTemporalOpType.
typedef fes__BinaryTemporalOpType _fes__During;

/// @brief Top-level root element "http://www.opengis.net/fes/2.0":EndedBy of type "http://www.opengis.net/fes/2.0":BinaryTemporalOpType.
typedef fes__BinaryTemporalOpType _fes__EndedBy;

/// @brief Top-level root element "http://www.opengis.net/fes/2.0":Ends of type "http://www.opengis.net/fes/2.0":BinaryTemporalOpType.
typedef fes__BinaryTemporalOpType _fes__Ends;

/// @brief Top-level root element "http://www.opengis.net/fes/2.0":TEquals of type "http://www.opengis.net/fes/2.0":BinaryTemporalOpType.
typedef fes__BinaryTemporalOpType _fes__TEquals;

/// @brief Top-level root element "http://www.opengis.net/fes/2.0":Meets of type "http://www.opengis.net/fes/2.0":BinaryTemporalOpType.
typedef fes__BinaryTemporalOpType _fes__Meets;

/// @brief Top-level root element "http://www.opengis.net/fes/2.0":MetBy of type "http://www.opengis.net/fes/2.0":BinaryTemporalOpType.
typedef fes__BinaryTemporalOpType _fes__MetBy;

/// @brief Top-level root element "http://www.opengis.net/fes/2.0":TOverlaps of type "http://www.opengis.net/fes/2.0":BinaryTemporalOpType.
typedef fes__BinaryTemporalOpType _fes__TOverlaps;

/// @brief Top-level root element "http://www.opengis.net/fes/2.0":OverlappedBy of type "http://www.opengis.net/fes/2.0":BinaryTemporalOpType.
typedef fes__BinaryTemporalOpType _fes__OverlappedBy;

/// @brief Top-level root element "http://www.opengis.net/fes/2.0":AnyInteracts of type "http://www.opengis.net/fes/2.0":BinaryTemporalOpType.
typedef fes__BinaryTemporalOpType _fes__AnyInteracts;

/// @brief Top-level root element "http://www.opengis.net/fes/2.0":And of type "http://www.opengis.net/fes/2.0":BinaryLogicOpType.
typedef fes__BinaryLogicOpType _fes__And;

/// @brief Top-level root element "http://www.opengis.net/fes/2.0":Or of type "http://www.opengis.net/fes/2.0":BinaryLogicOpType.
typedef fes__BinaryLogicOpType _fes__Or;

/// @brief Top-level root element "http://www.opengis.net/fes/2.0":Not of type "http://www.opengis.net/fes/2.0":UnaryLogicOpType.
typedef fes__UnaryLogicOpType _fes__Not;

/// @brief Top-level root element "http://www.opengis.net/fes/2.0":ResourceId of type "http://www.opengis.net/fes/2.0":ResourceIdType.
typedef fes__ResourceIdType _fes__ResourceId;

/// @brief Top-level root element "http://www.opengis.net/fes/2.0":ValueReference of type xs:string.
typedef std::string _fes__ValueReference;

/// @brief Top-level root element "http://www.opengis.net/fes/2.0":Function of type "http://www.opengis.net/fes/2.0":FunctionType.
typedef fes__FunctionType _fes__Function;

/// @brief Top-level root element "http://www.opengis.net/fes/2.0":Literal of type "http://www.opengis.net/fes/2.0":LiteralType.
typedef fes__LiteralType _fes__Literal;

/// @brief Top-level root element "http://www.opengis.net/fes/2.0":SortBy of type "http://www.opengis.net/fes/2.0":SortByType.
typedef fes__SortByType _fes__SortBy;


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://www.opengis.net/fes/2.0                                           *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://inspire.ec.europa.eu/schemas/common/1.0                           *
 *                                                                            *
\******************************************************************************/

/// @brief Top-level root element "http://inspire.ec.europa.eu/schemas/common/1.0":SpatialDataService of type "http://inspire.ec.europa.eu/schemas/common/1.0":service.
typedef icommon__service _icommon__SpatialDataService;

/// @brief Top-level root element "http://inspire.ec.europa.eu/schemas/common/1.0":SpatialDataSet of type "http://inspire.ec.europa.eu/schemas/common/1.0":dataset.
typedef icommon__dataset _icommon__SpatialDataSet;

/// @brief Top-level root element "http://inspire.ec.europa.eu/schemas/common/1.0":SpatialDataSetSeries of type "http://inspire.ec.europa.eu/schemas/common/1.0":series.
typedef icommon__series _icommon__SpatialDataSetSeries;

/// @brief Top-level root element "http://inspire.ec.europa.eu/schemas/common/1.0":SpatialDataServiceType of type "http://inspire.ec.europa.eu/schemas/common/1.0":spatialDataServiceType.
typedef enum icommon__spatialDataServiceType _icommon__SpatialDataServiceType;

/// @brief Top-level root element "http://inspire.ec.europa.eu/schemas/common/1.0":IndividualDate of type "http://inspire.ec.europa.eu/schemas/common/1.0":iso8601Date.
typedef icommon__iso8601Date _icommon__IndividualDate;

/// @brief Top-level root element "http://inspire.ec.europa.eu/schemas/common/1.0":DiscoveryService of type "http://inspire.ec.europa.eu/schemas/common/1.0":discoveryService.
typedef icommon__discoveryService _icommon__DiscoveryService;

/// @brief Top-level root element "http://inspire.ec.europa.eu/schemas/common/1.0":ViewService of type "http://inspire.ec.europa.eu/schemas/common/1.0":viewService.
typedef icommon__viewService _icommon__ViewService;

/// @brief Top-level root element "http://inspire.ec.europa.eu/schemas/common/1.0":DownloadService of type "http://inspire.ec.europa.eu/schemas/common/1.0":downloadService.
typedef icommon__downloadService _icommon__DownloadService;

/// @brief Top-level root element "http://inspire.ec.europa.eu/schemas/common/1.0":TransformationService of type "http://inspire.ec.europa.eu/schemas/common/1.0":transformationService.
typedef icommon__transformationService _icommon__TransformationService;

/// @brief Top-level root element "http://inspire.ec.europa.eu/schemas/common/1.0":InvokeService of type "http://inspire.ec.europa.eu/schemas/common/1.0":invokeService.
typedef icommon__invokeService _icommon__InvokeService;

/// @brief Top-level root element "http://inspire.ec.europa.eu/schemas/common/1.0":OtherService of type "http://inspire.ec.europa.eu/schemas/common/1.0":otherService.
typedef icommon__otherService _icommon__OtherService;


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://inspire.ec.europa.eu/schemas/common/1.0                           *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Services                                                                   *
 *                                                                            *
\******************************************************************************/


//gsoap f2i-plu service name:	wfssoap 
//gsoap f2i-plu service type:	wfs 
//gsoap f2i-plu service namespace:	http://plu.fit2inspire.eu/plu3 
//gsoap f2i-plu service transport:	http://schemas.xmlsoap.org/soap/http 

/** @mainpage f2i_plu3 Definitions

@section f2i_plu3_documentation Documentation
This WSDL describes the service implemented by its Fit2Inspire server. Copyright
: OGC. Implementation : jeanloup.delaveau@gmail.com

@section f2i_plu3_types Schema Type Information

         Convenience schema that defines all common WFS message elements.
      

@section f2i_plu3_bindings Service Bindings

  - @ref wfssoap

@section f2i_plu3_more More Information

  - @ref page_notes "Notes"

  - @ref page_XMLDataBinding "XML Data Binding"

  - @ref SOAP_ENV__Header "SOAP Header Content" (when applicable)

  - @ref SOAP_ENV__Detail "SOAP Fault Detail Content" (when applicable)


*/

/** @page wfssoap Binding "wfssoap"

@section wfssoap_operations Operations of Binding "wfssoap"

  - @ref __f2i_plu__wfs_x002ecreateStoredQuery

  - @ref __f2i_plu__wfs_x002edescribeFeatureType

  - @ref __f2i_plu__wfs_x002egetFeature

  - @ref __f2i_plu__wfs_x002edescribeStoredQueries

  - @ref __f2i_plu__wfs_x002elistStoredQueries

  - @ref __f2i_plu__wfs_x002edropStoredQuery

  - @ref __f2i_plu__wfs_x002egetCapabilities

  - @ref __f2i_plu__wfs_x002egetFeatureWithLock

  - @ref __f2i_plu__wfs_x002egetPropertyValue

  - @ref __f2i_plu__wfs_x002elockFeature

  - @ref __f2i_plu__wfs_x002etransaction

@section wfssoap_ports Default endpoints of Binding "wfssoap"

@note Use wsdl2h option -Nname to change the service binding prefix name


*/

/******************************************************************************\
 *                                                                            *
 * SOAP Fault Detail                                                          *
 *                                                                            *
\******************************************************************************/

/**

The SOAP Fault is part of the gSOAP context and its content is accessed
through the soap.fault->detail variable (SOAP 1.1) or the
soap.fault->SOAP_ENV__Detail variable (SOAP 1.2).
Use wsdl2h option -j to omit these declarations.

*/
mutable struct SOAP_ENV__Detail
{
/// xsd:anyAttribute omitted: to parse attribute content of the Detail element into DOM anyAttribute, use wsdl2h option -d.
/// SOAP Fault message "ServiceExceptionReport" part "Body" element ""http://www.opengis.net/ows/1.1":ExceptionReport".
    _ows__ExceptionReport*               ows__ExceptionReport          ;
    int                                  __type                        ;	///< set to SOAP_TYPE_T for a serializable type T
    void                                *fault                         ;	///< points to serializable value of type T or NULL
    _XML                                 __any                         ;	///< Catch any other content in XML string.
};


/******************************************************************************\
 *                                                                            *
 * Service Binding                                                            *
 *   wfssoap                                                                  *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __f2i_plu__wfs_x002ecreateStoredQuery                                    *
 *                                                                            *
\******************************************************************************/


/** Operation "__f2i_plu__wfs_x002ecreateStoredQuery" of service binding "wfssoap".

  - SOAP document/literal style messaging

  - Addressing input action: "http://plu.fit2inspire.eu/plu3/wfs/wfs-req:CreateStoredQueryRequest"

  - Addressing output action: "http://plu.fit2inspire.eu/plu3/wfs/wfs-resp:CreateStoredQueryResponse"

  - Output Fault: "http://www.opengis.net/ows/1.1":ExceptionReport (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___f2i_plu__wfs_x002ecreateStoredQuery(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    wfs__CreateStoredQueryType*         wfs__CreateStoredQuery,
    // output parameters:
    wfs__CreateStoredQueryResponseType &wfs__CreateStoredQueryResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __f2i_plu__wfs_x002ecreateStoredQuery(
    struct soap *soap,
    // input parameters:
    wfs__CreateStoredQueryType*         wfs__CreateStoredQuery,
    // output parameters:
    wfs__CreateStoredQueryResponseType &wfs__CreateStoredQueryResponse
  );
@endcode

C++ proxy class (defined in soapwfssoapProxy.h generated with soapcpp2):
@code
  class wfssoapProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapwfssoapService.h generated with soapcpp2):
@code
  class wfssoapService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap f2i-plu service method-protocol:	wfs_x002ecreateStoredQuery SOAP
//gsoap f2i-plu service method-style:	wfs_x002ecreateStoredQuery document
//gsoap f2i-plu service method-encoding:	wfs_x002ecreateStoredQuery literal
//gsoap f2i-plu service method-input-action:	wfs_x002ecreateStoredQuery http://plu.fit2inspire.eu/plu3/wfs/wfs-req:CreateStoredQueryRequest
//gsoap f2i-plu service method-output-action:	wfs_x002ecreateStoredQuery http://plu.fit2inspire.eu/plu3/wfs/wfs-resp:CreateStoredQueryResponse
//gsoap f2i-plu service method-fault:	wfs_x002ecreateStoredQuery ows__ExceptionReport
int __f2i_plu__wfs_x002ecreateStoredQuery(
    wfs__CreateStoredQueryType*         wfs__CreateStoredQuery,	///< Input parameter
    wfs__CreateStoredQueryResponseType &wfs__CreateStoredQueryResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __f2i_plu__wfs_x002edescribeFeatureType                                  *
 *                                                                            *
\******************************************************************************/


/** Operation "__f2i_plu__wfs_x002edescribeFeatureType" of service binding "wfssoap".

  - SOAP document/literal style messaging

  - Addressing input action: "http://plu.fit2inspire.eu/plu3/wfs/wfs-req:DescribeFeatureTypeRequest"

  - Addressing output action: "http://plu.fit2inspire.eu/plu3/wfs/wfs-resp:DescribeFeatureTypeResponse"

  - Output Fault: "http://www.opengis.net/ows/1.1":ExceptionReport (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___f2i_plu__wfs_x002edescribeFeatureType(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    wfs__DescribeFeatureTypeType*       wfs__DescribeFeatureType,
    // output parameters:
    util__DescribeFeatureTypeResponseType&util__DescribeFeatureTypeResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __f2i_plu__wfs_x002edescribeFeatureType(
    struct soap *soap,
    // input parameters:
    wfs__DescribeFeatureTypeType*       wfs__DescribeFeatureType,
    // output parameters:
    util__DescribeFeatureTypeResponseType&util__DescribeFeatureTypeResponse
  );
@endcode

C++ proxy class (defined in soapwfssoapProxy.h generated with soapcpp2):
@code
  class wfssoapProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapwfssoapService.h generated with soapcpp2):
@code
  class wfssoapService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap f2i-plu service method-protocol:	wfs_x002edescribeFeatureType SOAP
//gsoap f2i-plu service method-style:	wfs_x002edescribeFeatureType document
//gsoap f2i-plu service method-encoding:	wfs_x002edescribeFeatureType literal
//gsoap f2i-plu service method-input-action:	wfs_x002edescribeFeatureType http://plu.fit2inspire.eu/plu3/wfs/wfs-req:DescribeFeatureTypeRequest
//gsoap f2i-plu service method-output-action:	wfs_x002edescribeFeatureType http://plu.fit2inspire.eu/plu3/wfs/wfs-resp:DescribeFeatureTypeResponse
//gsoap f2i-plu service method-fault:	wfs_x002edescribeFeatureType ows__ExceptionReport
int __f2i_plu__wfs_x002edescribeFeatureType(
    wfs__DescribeFeatureTypeType*       wfs__DescribeFeatureType,	///< Input parameter
    util__DescribeFeatureTypeResponseType&util__DescribeFeatureTypeResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __f2i_plu__wfs_x002egetFeature                                           *
 *                                                                            *
\******************************************************************************/


/** Operation "__f2i_plu__wfs_x002egetFeature" of service binding "wfssoap".

  - SOAP document/literal style messaging

  - Addressing input action: "http://plu.fit2inspire.eu/plu3/wfs/wfs-req:GetFeatureRequest"

  - Addressing output action: "http://plu.fit2inspire.eu/plu3/wfs/wfs-resp:GetFeatureResponse"

  - Output Fault: "http://www.opengis.net/ows/1.1":ExceptionReport (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___f2i_plu__wfs_x002egetFeature(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    wfs__GetFeatureType*                wfs__GetFeature,
    // output parameters:
    wfs__FeatureCollectionType         &wfs__FeatureCollection
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __f2i_plu__wfs_x002egetFeature(
    struct soap *soap,
    // input parameters:
    wfs__GetFeatureType*                wfs__GetFeature,
    // output parameters:
    wfs__FeatureCollectionType         &wfs__FeatureCollection
  );
@endcode

C++ proxy class (defined in soapwfssoapProxy.h generated with soapcpp2):
@code
  class wfssoapProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapwfssoapService.h generated with soapcpp2):
@code
  class wfssoapService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap f2i-plu service method-protocol:	wfs_x002egetFeature SOAP
//gsoap f2i-plu service method-style:	wfs_x002egetFeature document
//gsoap f2i-plu service method-encoding:	wfs_x002egetFeature literal
//gsoap f2i-plu service method-input-action:	wfs_x002egetFeature http://plu.fit2inspire.eu/plu3/wfs/wfs-req:GetFeatureRequest
//gsoap f2i-plu service method-output-action:	wfs_x002egetFeature http://plu.fit2inspire.eu/plu3/wfs/wfs-resp:GetFeatureResponse
//gsoap f2i-plu service method-fault:	wfs_x002egetFeature ows__ExceptionReport
int __f2i_plu__wfs_x002egetFeature(
    wfs__GetFeatureType*                wfs__GetFeature,	///< Input parameter
    wfs__FeatureCollectionType         &wfs__FeatureCollection	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __f2i_plu__wfs_x002edescribeStoredQueries                                *
 *                                                                            *
\******************************************************************************/


/** Operation "__f2i_plu__wfs_x002edescribeStoredQueries" of service binding "wfssoap".

  - SOAP document/literal style messaging

  - Addressing input action: "http://plu.fit2inspire.eu/plu3/wfs/wfs-req:DescribeStoredQueriesRequest"

  - Addressing output action: "http://plu.fit2inspire.eu/plu3/wfs/wfs-resp:DescribeStoredQueriesResponse"

  - Output Fault: "http://www.opengis.net/ows/1.1":ExceptionReport (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___f2i_plu__wfs_x002edescribeStoredQueries(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    wfs__DescribeStoredQueriesType*     wfs__DescribeStoredQueries,
    // output parameters:
    wfs__DescribeStoredQueriesResponseType&wfs__DescribeStoredQueriesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __f2i_plu__wfs_x002edescribeStoredQueries(
    struct soap *soap,
    // input parameters:
    wfs__DescribeStoredQueriesType*     wfs__DescribeStoredQueries,
    // output parameters:
    wfs__DescribeStoredQueriesResponseType&wfs__DescribeStoredQueriesResponse
  );
@endcode

C++ proxy class (defined in soapwfssoapProxy.h generated with soapcpp2):
@code
  class wfssoapProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapwfssoapService.h generated with soapcpp2):
@code
  class wfssoapService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap f2i-plu service method-protocol:	wfs_x002edescribeStoredQueries SOAP
//gsoap f2i-plu service method-style:	wfs_x002edescribeStoredQueries document
//gsoap f2i-plu service method-encoding:	wfs_x002edescribeStoredQueries literal
//gsoap f2i-plu service method-input-action:	wfs_x002edescribeStoredQueries http://plu.fit2inspire.eu/plu3/wfs/wfs-req:DescribeStoredQueriesRequest
//gsoap f2i-plu service method-output-action:	wfs_x002edescribeStoredQueries http://plu.fit2inspire.eu/plu3/wfs/wfs-resp:DescribeStoredQueriesResponse
//gsoap f2i-plu service method-fault:	wfs_x002edescribeStoredQueries ows__ExceptionReport
int __f2i_plu__wfs_x002edescribeStoredQueries(
    wfs__DescribeStoredQueriesType*     wfs__DescribeStoredQueries,	///< Input parameter
    wfs__DescribeStoredQueriesResponseType&wfs__DescribeStoredQueriesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __f2i_plu__wfs_x002elistStoredQueries                                    *
 *                                                                            *
\******************************************************************************/


/** Operation "__f2i_plu__wfs_x002elistStoredQueries" of service binding "wfssoap".

  - SOAP document/literal style messaging

  - Addressing input action: "http://plu.fit2inspire.eu/plu3/wfs/wfs-req:ListStoredQueriesRequest"

  - Addressing output action: "http://plu.fit2inspire.eu/plu3/wfs/wfs-resp:ListStoredQueriesResponse"

  - Output Fault: "http://www.opengis.net/ows/1.1":ExceptionReport (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___f2i_plu__wfs_x002elistStoredQueries(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    wfs__ListStoredQueriesType*         wfs__ListStoredQueries,
    // output parameters:
    wfs__ListStoredQueriesResponseType &wfs__ListStoredQueriesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __f2i_plu__wfs_x002elistStoredQueries(
    struct soap *soap,
    // input parameters:
    wfs__ListStoredQueriesType*         wfs__ListStoredQueries,
    // output parameters:
    wfs__ListStoredQueriesResponseType &wfs__ListStoredQueriesResponse
  );
@endcode

C++ proxy class (defined in soapwfssoapProxy.h generated with soapcpp2):
@code
  class wfssoapProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapwfssoapService.h generated with soapcpp2):
@code
  class wfssoapService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap f2i-plu service method-protocol:	wfs_x002elistStoredQueries SOAP
//gsoap f2i-plu service method-style:	wfs_x002elistStoredQueries document
//gsoap f2i-plu service method-encoding:	wfs_x002elistStoredQueries literal
//gsoap f2i-plu service method-input-action:	wfs_x002elistStoredQueries http://plu.fit2inspire.eu/plu3/wfs/wfs-req:ListStoredQueriesRequest
//gsoap f2i-plu service method-output-action:	wfs_x002elistStoredQueries http://plu.fit2inspire.eu/plu3/wfs/wfs-resp:ListStoredQueriesResponse
//gsoap f2i-plu service method-fault:	wfs_x002elistStoredQueries ows__ExceptionReport
int __f2i_plu__wfs_x002elistStoredQueries(
    wfs__ListStoredQueriesType*         wfs__ListStoredQueries,	///< Input parameter
    wfs__ListStoredQueriesResponseType &wfs__ListStoredQueriesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __f2i_plu__wfs_x002edropStoredQuery                                      *
 *                                                                            *
\******************************************************************************/


/** Operation "__f2i_plu__wfs_x002edropStoredQuery" of service binding "wfssoap".

  - SOAP document/literal style messaging

  - Addressing input action: "http://plu.fit2inspire.eu/plu3/wfs/wfs-req:DropStoredQueryRequest"

  - Addressing output action: "http://plu.fit2inspire.eu/plu3/wfs/wfs-resp:DropStoredQueryResponse"

  - Output Fault: "http://www.opengis.net/ows/1.1":ExceptionReport (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___f2i_plu__wfs_x002edropStoredQuery(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _wfs__DropStoredQuery*              wfs__DropStoredQuery,
    // output parameters:
    wfs__ExecutionStatusType           &wfs__DropStoredQueryResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __f2i_plu__wfs_x002edropStoredQuery(
    struct soap *soap,
    // input parameters:
    _wfs__DropStoredQuery*              wfs__DropStoredQuery,
    // output parameters:
    wfs__ExecutionStatusType           &wfs__DropStoredQueryResponse
  );
@endcode

C++ proxy class (defined in soapwfssoapProxy.h generated with soapcpp2):
@code
  class wfssoapProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapwfssoapService.h generated with soapcpp2):
@code
  class wfssoapService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap f2i-plu service method-protocol:	wfs_x002edropStoredQuery SOAP
//gsoap f2i-plu service method-style:	wfs_x002edropStoredQuery document
//gsoap f2i-plu service method-encoding:	wfs_x002edropStoredQuery literal
//gsoap f2i-plu service method-input-action:	wfs_x002edropStoredQuery http://plu.fit2inspire.eu/plu3/wfs/wfs-req:DropStoredQueryRequest
//gsoap f2i-plu service method-output-action:	wfs_x002edropStoredQuery http://plu.fit2inspire.eu/plu3/wfs/wfs-resp:DropStoredQueryResponse
//gsoap f2i-plu service method-fault:	wfs_x002edropStoredQuery ows__ExceptionReport
int __f2i_plu__wfs_x002edropStoredQuery(
    _wfs__DropStoredQuery*              wfs__DropStoredQuery,	///< Input parameter
    wfs__ExecutionStatusType           &wfs__DropStoredQueryResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __f2i_plu__wfs_x002egetCapabilities                                      *
 *                                                                            *
\******************************************************************************/


/** Operation "__f2i_plu__wfs_x002egetCapabilities" of service binding "wfssoap".

  - SOAP document/literal style messaging

  - Addressing input action: "http://plu.fit2inspire.eu/plu3/wfs/wfs-req:GetCapabilitiesRequest"

  - Addressing output action: "http://plu.fit2inspire.eu/plu3/wfs/wfs-resp:GetCapabilitiesResponse"

  - Output Fault: "http://www.opengis.net/ows/1.1":ExceptionReport (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___f2i_plu__wfs_x002egetCapabilities(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ows__GetCapabilitiesType*           ows__GetCapabilities,
    // output parameters:
    wfs__WFS_x005fCapabilitiesType     &wfs__WFS_x005fCapabilities
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __f2i_plu__wfs_x002egetCapabilities(
    struct soap *soap,
    // input parameters:
    ows__GetCapabilitiesType*           ows__GetCapabilities,
    // output parameters:
    wfs__WFS_x005fCapabilitiesType     &wfs__WFS_x005fCapabilities
  );
@endcode

C++ proxy class (defined in soapwfssoapProxy.h generated with soapcpp2):
@code
  class wfssoapProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapwfssoapService.h generated with soapcpp2):
@code
  class wfssoapService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap f2i-plu service method-protocol:	wfs_x002egetCapabilities SOAP
//gsoap f2i-plu service method-style:	wfs_x002egetCapabilities document
//gsoap f2i-plu service method-encoding:	wfs_x002egetCapabilities literal
//gsoap f2i-plu service method-input-action:	wfs_x002egetCapabilities http://plu.fit2inspire.eu/plu3/wfs/wfs-req:GetCapabilitiesRequest
//gsoap f2i-plu service method-output-action:	wfs_x002egetCapabilities http://plu.fit2inspire.eu/plu3/wfs/wfs-resp:GetCapabilitiesResponse
//gsoap f2i-plu service method-fault:	wfs_x002egetCapabilities ows__ExceptionReport
int __f2i_plu__wfs_x002egetCapabilities(
    ows__GetCapabilitiesType*           ows__GetCapabilities,	///< Input parameter
    wfs__WFS_x005fCapabilitiesType     &wfs__WFS_x005fCapabilities	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __f2i_plu__wfs_x002egetFeatureWithLock                                   *
 *                                                                            *
\******************************************************************************/


/** Operation "__f2i_plu__wfs_x002egetFeatureWithLock" of service binding "wfssoap".

  - SOAP document/literal style messaging

  - Addressing input action: "http://plu.fit2inspire.eu/plu3/wfs/wfs-req:GetFeatureWithLockRequest"

  - Addressing output action: "http://plu.fit2inspire.eu/plu3/wfs/wfs-resp:GetFeatureWithLockResponse"

  - Output Fault: "http://www.opengis.net/ows/1.1":ExceptionReport (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___f2i_plu__wfs_x002egetFeatureWithLock(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    wfs__GetFeatureWithLockType*        wfs__GetFeatureWithLock,
    // output parameters:
    wfs__FeatureCollectionType         &wfs__FeatureCollection
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __f2i_plu__wfs_x002egetFeatureWithLock(
    struct soap *soap,
    // input parameters:
    wfs__GetFeatureWithLockType*        wfs__GetFeatureWithLock,
    // output parameters:
    wfs__FeatureCollectionType         &wfs__FeatureCollection
  );
@endcode

C++ proxy class (defined in soapwfssoapProxy.h generated with soapcpp2):
@code
  class wfssoapProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapwfssoapService.h generated with soapcpp2):
@code
  class wfssoapService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap f2i-plu service method-protocol:	wfs_x002egetFeatureWithLock SOAP
//gsoap f2i-plu service method-style:	wfs_x002egetFeatureWithLock document
//gsoap f2i-plu service method-encoding:	wfs_x002egetFeatureWithLock literal
//gsoap f2i-plu service method-input-action:	wfs_x002egetFeatureWithLock http://plu.fit2inspire.eu/plu3/wfs/wfs-req:GetFeatureWithLockRequest
//gsoap f2i-plu service method-output-action:	wfs_x002egetFeatureWithLock http://plu.fit2inspire.eu/plu3/wfs/wfs-resp:GetFeatureWithLockResponse
//gsoap f2i-plu service method-fault:	wfs_x002egetFeatureWithLock ows__ExceptionReport
int __f2i_plu__wfs_x002egetFeatureWithLock(
    wfs__GetFeatureWithLockType*        wfs__GetFeatureWithLock,	///< Input parameter
    wfs__FeatureCollectionType         &wfs__FeatureCollection	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __f2i_plu__wfs_x002egetPropertyValue                                     *
 *                                                                            *
\******************************************************************************/


/** Operation "__f2i_plu__wfs_x002egetPropertyValue" of service binding "wfssoap".

  - SOAP document/literal style messaging

  - Addressing input action: "http://plu.fit2inspire.eu/plu3/wfs/wfs-req:GetPropertyValueRequest"

  - Addressing output action: "http://plu.fit2inspire.eu/plu3/wfs/wfs-resp:GetPropertyValueResponse"

  - Output Fault: "http://www.opengis.net/ows/1.1":ExceptionReport (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___f2i_plu__wfs_x002egetPropertyValue(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    wfs__GetPropertyValueType*          wfs__GetPropertyValue,
    // output parameters:
    wfs__ValueCollectionType           &wfs__ValueCollection
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __f2i_plu__wfs_x002egetPropertyValue(
    struct soap *soap,
    // input parameters:
    wfs__GetPropertyValueType*          wfs__GetPropertyValue,
    // output parameters:
    wfs__ValueCollectionType           &wfs__ValueCollection
  );
@endcode

C++ proxy class (defined in soapwfssoapProxy.h generated with soapcpp2):
@code
  class wfssoapProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapwfssoapService.h generated with soapcpp2):
@code
  class wfssoapService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap f2i-plu service method-protocol:	wfs_x002egetPropertyValue SOAP
//gsoap f2i-plu service method-style:	wfs_x002egetPropertyValue document
//gsoap f2i-plu service method-encoding:	wfs_x002egetPropertyValue literal
//gsoap f2i-plu service method-input-action:	wfs_x002egetPropertyValue http://plu.fit2inspire.eu/plu3/wfs/wfs-req:GetPropertyValueRequest
//gsoap f2i-plu service method-output-action:	wfs_x002egetPropertyValue http://plu.fit2inspire.eu/plu3/wfs/wfs-resp:GetPropertyValueResponse
//gsoap f2i-plu service method-fault:	wfs_x002egetPropertyValue ows__ExceptionReport
int __f2i_plu__wfs_x002egetPropertyValue(
    wfs__GetPropertyValueType*          wfs__GetPropertyValue,	///< Input parameter
    wfs__ValueCollectionType           &wfs__ValueCollection	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __f2i_plu__wfs_x002elockFeature                                          *
 *                                                                            *
\******************************************************************************/


/** Operation "__f2i_plu__wfs_x002elockFeature" of service binding "wfssoap".

  - SOAP document/literal style messaging

  - Addressing input action: "http://plu.fit2inspire.eu/plu3/wfs/wfs-req:LockFeatureRequest"

  - Addressing output action: "http://plu.fit2inspire.eu/plu3/wfs/wfs-resp:LockFeatureResponse"

  - Output Fault: "http://www.opengis.net/ows/1.1":ExceptionReport (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___f2i_plu__wfs_x002elockFeature(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    wfs__LockFeatureType*               wfs__LockFeature,
    // output parameters:
    wfs__LockFeatureResponseType       &wfs__LockFeatureResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __f2i_plu__wfs_x002elockFeature(
    struct soap *soap,
    // input parameters:
    wfs__LockFeatureType*               wfs__LockFeature,
    // output parameters:
    wfs__LockFeatureResponseType       &wfs__LockFeatureResponse
  );
@endcode

C++ proxy class (defined in soapwfssoapProxy.h generated with soapcpp2):
@code
  class wfssoapProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapwfssoapService.h generated with soapcpp2):
@code
  class wfssoapService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap f2i-plu service method-protocol:	wfs_x002elockFeature SOAP
//gsoap f2i-plu service method-style:	wfs_x002elockFeature document
//gsoap f2i-plu service method-encoding:	wfs_x002elockFeature literal
//gsoap f2i-plu service method-input-action:	wfs_x002elockFeature http://plu.fit2inspire.eu/plu3/wfs/wfs-req:LockFeatureRequest
//gsoap f2i-plu service method-output-action:	wfs_x002elockFeature http://plu.fit2inspire.eu/plu3/wfs/wfs-resp:LockFeatureResponse
//gsoap f2i-plu service method-fault:	wfs_x002elockFeature ows__ExceptionReport
int __f2i_plu__wfs_x002elockFeature(
    wfs__LockFeatureType*               wfs__LockFeature,	///< Input parameter
    wfs__LockFeatureResponseType       &wfs__LockFeatureResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __f2i_plu__wfs_x002etransaction                                          *
 *                                                                            *
\******************************************************************************/


/** Operation "__f2i_plu__wfs_x002etransaction" of service binding "wfssoap".

  - SOAP document/literal style messaging

  - Addressing input action: "http://plu.fit2inspire.eu/plu3/wfs/wfs-req:TransactionRequest"

  - Addressing output action: "http://plu.fit2inspire.eu/plu3/wfs/wfs-resp:TransactionResponse"

  - Output Fault: "http://www.opengis.net/ows/1.1":ExceptionReport (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___f2i_plu__wfs_x002etransaction(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    wfs__TransactionType*               wfs__Transaction,
    // output parameters:
    wfs__TransactionResponseType       &wfs__TransactionResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __f2i_plu__wfs_x002etransaction(
    struct soap *soap,
    // input parameters:
    wfs__TransactionType*               wfs__Transaction,
    // output parameters:
    wfs__TransactionResponseType       &wfs__TransactionResponse
  );
@endcode

C++ proxy class (defined in soapwfssoapProxy.h generated with soapcpp2):
@code
  class wfssoapProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapwfssoapService.h generated with soapcpp2):
@code
  class wfssoapService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap f2i-plu service method-protocol:	wfs_x002etransaction SOAP
//gsoap f2i-plu service method-style:	wfs_x002etransaction document
//gsoap f2i-plu service method-encoding:	wfs_x002etransaction literal
//gsoap f2i-plu service method-input-action:	wfs_x002etransaction http://plu.fit2inspire.eu/plu3/wfs/wfs-req:TransactionRequest
//gsoap f2i-plu service method-output-action:	wfs_x002etransaction http://plu.fit2inspire.eu/plu3/wfs/wfs-resp:TransactionResponse
//gsoap f2i-plu service method-fault:	wfs_x002etransaction ows__ExceptionReport
int __f2i_plu__wfs_x002etransaction(
    wfs__TransactionType*               wfs__Transaction,	///< Input parameter
    wfs__TransactionResponseType       &wfs__TransactionResponse	///< Output parameter
);

/** @page wfssoap Binding "wfssoap"

@section wfssoap_policy_enablers Policy Enablers of Binding "wfssoap"

None specified.

*/

/******************************************************************************\
 *                                                                            *
 * XML Data Binding                                                           *
 *                                                                            *
\******************************************************************************/


/** @page page_XMLDataBinding XML Data Binding

SOAP/XML services use data bindings that are contractually bound by WSDLs and
are auto-generated by wsdl2h and soapcpp2 (see Service Bindings). Plain data
bindings are adopted from XML schemas as part of the WSDL types section or when
running wsdl2h on a set of schemas to produce non-SOAP-based XML data bindings.

@note The following readers and writers are C/C++ data type (de)serializers
auto-generated by wsdl2h and soapcpp2. Run soapcpp2 on this file to generate the
(de)serialization code, which is stored in soapC.c[pp]. Include "soapH.h" in
your code to import these data type and function declarations. Only use the
soapcpp2-generated files in your project build. Do not include the wsdl2h-
generated .h file in your code.

@note Data can be read and deserialized from:
  - an int file descriptor, using soap->recvfd = fd
  - a socket, using soap->socket = (int)...
  - a C++ stream (istream, stringstream), using soap->is = (istream*)...
  - a C string, using soap->is = (const char*)...
  - any input, using the soap->frecv() callback

@note Data can be serialized and written to:
  - an int file descriptor, using soap->sendfd = (int)...
  - a socket, using soap->socket = (int)...
  - a C++ stream (ostream, stringstream), using soap->os = (ostream*)...
  - a C string, using soap->os = (const char**)...
  - any output, using the soap->fsend() callback

@note The following options are available for (de)serialization control:
  - soap->encodingStyle = NULL; to remove SOAP 1.1/1.2 encodingStyle
  - soap_set_mode(soap, SOAP_XML_TREE); XML without id-ref (no cycles!)
  - soap_set_mode(soap, SOAP_XML_GRAPH); XML with id-ref (including cycles)
  - soap_set_namespaces(soap, struct Namespace *nsmap); to set xmlns bindings


*/

/**

@section wfs Top-level root elements of schema "http://www.opengis.net/wfs/2.0"

  - <wfs:Title> @ref _wfs__Title
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wfs__Title(struct soap*, _wfs__Title*);
    // Writer (returns SOAP_OK on success):
    soap_write__wfs__Title(struct soap*, _wfs__Title*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__wfs__Title(struct soap*, const char *URL, _wfs__Title*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__wfs__Title(struct soap*, const char *URL, _wfs__Title*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__wfs__Title(struct soap*, const char *URL, _wfs__Title*);
    soap_POST_recv__wfs__Title(struct soap*, _wfs__Title*);
    @endcode

  - <wfs:Abstract> @ref _wfs__Abstract
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wfs__Abstract(struct soap*, _wfs__Abstract*);
    // Writer (returns SOAP_OK on success):
    soap_write__wfs__Abstract(struct soap*, _wfs__Abstract*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__wfs__Abstract(struct soap*, const char *URL, _wfs__Abstract*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__wfs__Abstract(struct soap*, const char *URL, _wfs__Abstract*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__wfs__Abstract(struct soap*, const char *URL, _wfs__Abstract*);
    soap_POST_recv__wfs__Abstract(struct soap*, _wfs__Abstract*);
    @endcode

  - <wfs:Query> @ref _wfs__Query
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wfs__Query(struct soap*, _wfs__Query*);
    // Writer (returns SOAP_OK on success):
    soap_write__wfs__Query(struct soap*, _wfs__Query*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__wfs__Query(struct soap*, const char *URL, _wfs__Query*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__wfs__Query(struct soap*, const char *URL, _wfs__Query*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__wfs__Query(struct soap*, const char *URL, _wfs__Query*);
    soap_POST_recv__wfs__Query(struct soap*, _wfs__Query*);
    @endcode

  - <wfs:StoredQuery> @ref _wfs__StoredQuery
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wfs__StoredQuery(struct soap*, _wfs__StoredQuery*);
    // Writer (returns SOAP_OK on success):
    soap_write__wfs__StoredQuery(struct soap*, _wfs__StoredQuery*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__wfs__StoredQuery(struct soap*, const char *URL, _wfs__StoredQuery*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__wfs__StoredQuery(struct soap*, const char *URL, _wfs__StoredQuery*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__wfs__StoredQuery(struct soap*, const char *URL, _wfs__StoredQuery*);
    soap_POST_recv__wfs__StoredQuery(struct soap*, _wfs__StoredQuery*);
    @endcode

  - <wfs:GetCapabilities> @ref _wfs__GetCapabilities
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wfs__GetCapabilities(struct soap*, _wfs__GetCapabilities*);
    // Writer (returns SOAP_OK on success):
    soap_write__wfs__GetCapabilities(struct soap*, _wfs__GetCapabilities*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__wfs__GetCapabilities(struct soap*, const char *URL, _wfs__GetCapabilities*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__wfs__GetCapabilities(struct soap*, const char *URL, _wfs__GetCapabilities*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__wfs__GetCapabilities(struct soap*, const char *URL, _wfs__GetCapabilities*);
    soap_POST_recv__wfs__GetCapabilities(struct soap*, _wfs__GetCapabilities*);
    @endcode

  - <wfs:WFS_Capabilities> @ref _wfs__WFS_x005fCapabilities
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wfs__WFS_x005fCapabilities(struct soap*, _wfs__WFS_x005fCapabilities*);
    // Writer (returns SOAP_OK on success):
    soap_write__wfs__WFS_x005fCapabilities(struct soap*, _wfs__WFS_x005fCapabilities*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__wfs__WFS_x005fCapabilities(struct soap*, const char *URL, _wfs__WFS_x005fCapabilities*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__wfs__WFS_x005fCapabilities(struct soap*, const char *URL, _wfs__WFS_x005fCapabilities*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__wfs__WFS_x005fCapabilities(struct soap*, const char *URL, _wfs__WFS_x005fCapabilities*);
    soap_POST_recv__wfs__WFS_x005fCapabilities(struct soap*, _wfs__WFS_x005fCapabilities*);
    @endcode

  - <wfs:FeatureTypeList> @ref _wfs__FeatureTypeList
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wfs__FeatureTypeList(struct soap*, _wfs__FeatureTypeList*);
    // Writer (returns SOAP_OK on success):
    soap_write__wfs__FeatureTypeList(struct soap*, _wfs__FeatureTypeList*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__wfs__FeatureTypeList(struct soap*, const char *URL, _wfs__FeatureTypeList*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__wfs__FeatureTypeList(struct soap*, const char *URL, _wfs__FeatureTypeList*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__wfs__FeatureTypeList(struct soap*, const char *URL, _wfs__FeatureTypeList*);
    soap_POST_recv__wfs__FeatureTypeList(struct soap*, _wfs__FeatureTypeList*);
    @endcode

  - <wfs:Element> @ref _wfs__Element
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wfs__Element(struct soap*, _wfs__Element*);
    // Writer (returns SOAP_OK on success):
    soap_write__wfs__Element(struct soap*, _wfs__Element*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__wfs__Element(struct soap*, const char *URL, _wfs__Element*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__wfs__Element(struct soap*, const char *URL, _wfs__Element*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__wfs__Element(struct soap*, const char *URL, _wfs__Element*);
    soap_POST_recv__wfs__Element(struct soap*, _wfs__Element*);
    @endcode

  - <wfs:ValueList> @ref _wfs__ValueList
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wfs__ValueList(struct soap*, _wfs__ValueList*);
    // Writer (returns SOAP_OK on success):
    soap_write__wfs__ValueList(struct soap*, _wfs__ValueList*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__wfs__ValueList(struct soap*, const char *URL, _wfs__ValueList*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__wfs__ValueList(struct soap*, const char *URL, _wfs__ValueList*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__wfs__ValueList(struct soap*, const char *URL, _wfs__ValueList*);
    soap_POST_recv__wfs__ValueList(struct soap*, _wfs__ValueList*);
    @endcode

  - <wfs:Value> @ref _wfs__Value
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wfs__Value(struct soap*, _wfs__Value*);
    // Writer (returns SOAP_OK on success):
    soap_write__wfs__Value(struct soap*, _wfs__Value*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__wfs__Value(struct soap*, const char *URL, _wfs__Value*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__wfs__Value(struct soap*, const char *URL, _wfs__Value*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__wfs__Value(struct soap*, const char *URL, _wfs__Value*);
    soap_POST_recv__wfs__Value(struct soap*, _wfs__Value*);
    @endcode

  - <wfs:DescribeFeatureType> @ref _wfs__DescribeFeatureType
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wfs__DescribeFeatureType(struct soap*, _wfs__DescribeFeatureType*);
    // Writer (returns SOAP_OK on success):
    soap_write__wfs__DescribeFeatureType(struct soap*, _wfs__DescribeFeatureType*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__wfs__DescribeFeatureType(struct soap*, const char *URL, _wfs__DescribeFeatureType*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__wfs__DescribeFeatureType(struct soap*, const char *URL, _wfs__DescribeFeatureType*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__wfs__DescribeFeatureType(struct soap*, const char *URL, _wfs__DescribeFeatureType*);
    soap_POST_recv__wfs__DescribeFeatureType(struct soap*, _wfs__DescribeFeatureType*);
    @endcode

  - <wfs:GetPropertyValue> @ref _wfs__GetPropertyValue
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wfs__GetPropertyValue(struct soap*, _wfs__GetPropertyValue*);
    // Writer (returns SOAP_OK on success):
    soap_write__wfs__GetPropertyValue(struct soap*, _wfs__GetPropertyValue*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__wfs__GetPropertyValue(struct soap*, const char *URL, _wfs__GetPropertyValue*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__wfs__GetPropertyValue(struct soap*, const char *URL, _wfs__GetPropertyValue*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__wfs__GetPropertyValue(struct soap*, const char *URL, _wfs__GetPropertyValue*);
    soap_POST_recv__wfs__GetPropertyValue(struct soap*, _wfs__GetPropertyValue*);
    @endcode

  - <wfs:ValueCollection> @ref _wfs__ValueCollection
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wfs__ValueCollection(struct soap*, _wfs__ValueCollection*);
    // Writer (returns SOAP_OK on success):
    soap_write__wfs__ValueCollection(struct soap*, _wfs__ValueCollection*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__wfs__ValueCollection(struct soap*, const char *URL, _wfs__ValueCollection*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__wfs__ValueCollection(struct soap*, const char *URL, _wfs__ValueCollection*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__wfs__ValueCollection(struct soap*, const char *URL, _wfs__ValueCollection*);
    soap_POST_recv__wfs__ValueCollection(struct soap*, _wfs__ValueCollection*);
    @endcode

  - <wfs:member> @ref _wfs__member
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wfs__member(struct soap*, _wfs__member*);
    // Writer (returns SOAP_OK on success):
    soap_write__wfs__member(struct soap*, _wfs__member*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__wfs__member(struct soap*, const char *URL, _wfs__member*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__wfs__member(struct soap*, const char *URL, _wfs__member*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__wfs__member(struct soap*, const char *URL, _wfs__member*);
    soap_POST_recv__wfs__member(struct soap*, _wfs__member*);
    @endcode

  - <wfs:Tuple> @ref _wfs__Tuple
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wfs__Tuple(struct soap*, _wfs__Tuple*);
    // Writer (returns SOAP_OK on success):
    soap_write__wfs__Tuple(struct soap*, _wfs__Tuple*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__wfs__Tuple(struct soap*, const char *URL, _wfs__Tuple*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__wfs__Tuple(struct soap*, const char *URL, _wfs__Tuple*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__wfs__Tuple(struct soap*, const char *URL, _wfs__Tuple*);
    soap_POST_recv__wfs__Tuple(struct soap*, _wfs__Tuple*);
    @endcode

  - <wfs:additionalValues> @ref _wfs__additionalValues
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wfs__additionalValues(struct soap*, _wfs__additionalValues*);
    // Writer (returns SOAP_OK on success):
    soap_write__wfs__additionalValues(struct soap*, _wfs__additionalValues*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__wfs__additionalValues(struct soap*, const char *URL, _wfs__additionalValues*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__wfs__additionalValues(struct soap*, const char *URL, _wfs__additionalValues*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__wfs__additionalValues(struct soap*, const char *URL, _wfs__additionalValues*);
    soap_POST_recv__wfs__additionalValues(struct soap*, _wfs__additionalValues*);
    @endcode

  - <wfs:truncatedResponse> @ref _wfs__truncatedResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wfs__truncatedResponse(struct soap*, _wfs__truncatedResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__wfs__truncatedResponse(struct soap*, _wfs__truncatedResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__wfs__truncatedResponse(struct soap*, const char *URL, _wfs__truncatedResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__wfs__truncatedResponse(struct soap*, const char *URL, _wfs__truncatedResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__wfs__truncatedResponse(struct soap*, const char *URL, _wfs__truncatedResponse*);
    soap_POST_recv__wfs__truncatedResponse(struct soap*, _wfs__truncatedResponse*);
    @endcode

  - <wfs:GetFeature> @ref _wfs__GetFeature
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wfs__GetFeature(struct soap*, _wfs__GetFeature*);
    // Writer (returns SOAP_OK on success):
    soap_write__wfs__GetFeature(struct soap*, _wfs__GetFeature*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__wfs__GetFeature(struct soap*, const char *URL, _wfs__GetFeature*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__wfs__GetFeature(struct soap*, const char *URL, _wfs__GetFeature*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__wfs__GetFeature(struct soap*, const char *URL, _wfs__GetFeature*);
    soap_POST_recv__wfs__GetFeature(struct soap*, _wfs__GetFeature*);
    @endcode

  - <wfs:GetFeatureWithLock> @ref _wfs__GetFeatureWithLock
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wfs__GetFeatureWithLock(struct soap*, _wfs__GetFeatureWithLock*);
    // Writer (returns SOAP_OK on success):
    soap_write__wfs__GetFeatureWithLock(struct soap*, _wfs__GetFeatureWithLock*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__wfs__GetFeatureWithLock(struct soap*, const char *URL, _wfs__GetFeatureWithLock*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__wfs__GetFeatureWithLock(struct soap*, const char *URL, _wfs__GetFeatureWithLock*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__wfs__GetFeatureWithLock(struct soap*, const char *URL, _wfs__GetFeatureWithLock*);
    soap_POST_recv__wfs__GetFeatureWithLock(struct soap*, _wfs__GetFeatureWithLock*);
    @endcode

  - <wfs:PropertyName> @ref _wfs__PropertyName
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wfs__PropertyName(struct soap*, _wfs__PropertyName*);
    // Writer (returns SOAP_OK on success):
    soap_write__wfs__PropertyName(struct soap*, _wfs__PropertyName*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__wfs__PropertyName(struct soap*, const char *URL, _wfs__PropertyName*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__wfs__PropertyName(struct soap*, const char *URL, _wfs__PropertyName*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__wfs__PropertyName(struct soap*, const char *URL, _wfs__PropertyName*);
    soap_POST_recv__wfs__PropertyName(struct soap*, _wfs__PropertyName*);
    @endcode

  - <wfs:FeatureCollection> @ref _wfs__FeatureCollection
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wfs__FeatureCollection(struct soap*, _wfs__FeatureCollection*);
    // Writer (returns SOAP_OK on success):
    soap_write__wfs__FeatureCollection(struct soap*, _wfs__FeatureCollection*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__wfs__FeatureCollection(struct soap*, const char *URL, _wfs__FeatureCollection*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__wfs__FeatureCollection(struct soap*, const char *URL, _wfs__FeatureCollection*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__wfs__FeatureCollection(struct soap*, const char *URL, _wfs__FeatureCollection*);
    soap_POST_recv__wfs__FeatureCollection(struct soap*, _wfs__FeatureCollection*);
    @endcode

  - <wfs:additionalObjects> @ref _wfs__additionalObjects
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wfs__additionalObjects(struct soap*, _wfs__additionalObjects*);
    // Writer (returns SOAP_OK on success):
    soap_write__wfs__additionalObjects(struct soap*, _wfs__additionalObjects*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__wfs__additionalObjects(struct soap*, const char *URL, _wfs__additionalObjects*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__wfs__additionalObjects(struct soap*, const char *URL, _wfs__additionalObjects*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__wfs__additionalObjects(struct soap*, const char *URL, _wfs__additionalObjects*);
    soap_POST_recv__wfs__additionalObjects(struct soap*, _wfs__additionalObjects*);
    @endcode

  - <wfs:SimpleFeatureCollection> @ref _wfs__SimpleFeatureCollection
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wfs__SimpleFeatureCollection(struct soap*, _wfs__SimpleFeatureCollection*);
    // Writer (returns SOAP_OK on success):
    soap_write__wfs__SimpleFeatureCollection(struct soap*, _wfs__SimpleFeatureCollection*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__wfs__SimpleFeatureCollection(struct soap*, const char *URL, _wfs__SimpleFeatureCollection*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__wfs__SimpleFeatureCollection(struct soap*, const char *URL, _wfs__SimpleFeatureCollection*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__wfs__SimpleFeatureCollection(struct soap*, const char *URL, _wfs__SimpleFeatureCollection*);
    soap_POST_recv__wfs__SimpleFeatureCollection(struct soap*, _wfs__SimpleFeatureCollection*);
    @endcode

  - <wfs:boundedBy> @ref _wfs__boundedBy
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wfs__boundedBy(struct soap*, _wfs__boundedBy*);
    // Writer (returns SOAP_OK on success):
    soap_write__wfs__boundedBy(struct soap*, _wfs__boundedBy*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__wfs__boundedBy(struct soap*, const char *URL, _wfs__boundedBy*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__wfs__boundedBy(struct soap*, const char *URL, _wfs__boundedBy*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__wfs__boundedBy(struct soap*, const char *URL, _wfs__boundedBy*);
    soap_POST_recv__wfs__boundedBy(struct soap*, _wfs__boundedBy*);
    @endcode

  - <wfs:ListStoredQueries> @ref _wfs__ListStoredQueries
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wfs__ListStoredQueries(struct soap*, _wfs__ListStoredQueries*);
    // Writer (returns SOAP_OK on success):
    soap_write__wfs__ListStoredQueries(struct soap*, _wfs__ListStoredQueries*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__wfs__ListStoredQueries(struct soap*, const char *URL, _wfs__ListStoredQueries*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__wfs__ListStoredQueries(struct soap*, const char *URL, _wfs__ListStoredQueries*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__wfs__ListStoredQueries(struct soap*, const char *URL, _wfs__ListStoredQueries*);
    soap_POST_recv__wfs__ListStoredQueries(struct soap*, _wfs__ListStoredQueries*);
    @endcode

  - <wfs:ListStoredQueriesResponse> @ref _wfs__ListStoredQueriesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wfs__ListStoredQueriesResponse(struct soap*, _wfs__ListStoredQueriesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__wfs__ListStoredQueriesResponse(struct soap*, _wfs__ListStoredQueriesResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__wfs__ListStoredQueriesResponse(struct soap*, const char *URL, _wfs__ListStoredQueriesResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__wfs__ListStoredQueriesResponse(struct soap*, const char *URL, _wfs__ListStoredQueriesResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__wfs__ListStoredQueriesResponse(struct soap*, const char *URL, _wfs__ListStoredQueriesResponse*);
    soap_POST_recv__wfs__ListStoredQueriesResponse(struct soap*, _wfs__ListStoredQueriesResponse*);
    @endcode

  - <wfs:DescribeStoredQueries> @ref _wfs__DescribeStoredQueries
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wfs__DescribeStoredQueries(struct soap*, _wfs__DescribeStoredQueries*);
    // Writer (returns SOAP_OK on success):
    soap_write__wfs__DescribeStoredQueries(struct soap*, _wfs__DescribeStoredQueries*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__wfs__DescribeStoredQueries(struct soap*, const char *URL, _wfs__DescribeStoredQueries*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__wfs__DescribeStoredQueries(struct soap*, const char *URL, _wfs__DescribeStoredQueries*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__wfs__DescribeStoredQueries(struct soap*, const char *URL, _wfs__DescribeStoredQueries*);
    soap_POST_recv__wfs__DescribeStoredQueries(struct soap*, _wfs__DescribeStoredQueries*);
    @endcode

  - <wfs:DescribeStoredQueriesResponse> @ref _wfs__DescribeStoredQueriesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wfs__DescribeStoredQueriesResponse(struct soap*, _wfs__DescribeStoredQueriesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__wfs__DescribeStoredQueriesResponse(struct soap*, _wfs__DescribeStoredQueriesResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__wfs__DescribeStoredQueriesResponse(struct soap*, const char *URL, _wfs__DescribeStoredQueriesResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__wfs__DescribeStoredQueriesResponse(struct soap*, const char *URL, _wfs__DescribeStoredQueriesResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__wfs__DescribeStoredQueriesResponse(struct soap*, const char *URL, _wfs__DescribeStoredQueriesResponse*);
    soap_POST_recv__wfs__DescribeStoredQueriesResponse(struct soap*, _wfs__DescribeStoredQueriesResponse*);
    @endcode

  - <wfs:CreateStoredQuery> @ref _wfs__CreateStoredQuery
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wfs__CreateStoredQuery(struct soap*, _wfs__CreateStoredQuery*);
    // Writer (returns SOAP_OK on success):
    soap_write__wfs__CreateStoredQuery(struct soap*, _wfs__CreateStoredQuery*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__wfs__CreateStoredQuery(struct soap*, const char *URL, _wfs__CreateStoredQuery*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__wfs__CreateStoredQuery(struct soap*, const char *URL, _wfs__CreateStoredQuery*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__wfs__CreateStoredQuery(struct soap*, const char *URL, _wfs__CreateStoredQuery*);
    soap_POST_recv__wfs__CreateStoredQuery(struct soap*, _wfs__CreateStoredQuery*);
    @endcode

  - <wfs:CreateStoredQueryResponse> @ref _wfs__CreateStoredQueryResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wfs__CreateStoredQueryResponse(struct soap*, _wfs__CreateStoredQueryResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__wfs__CreateStoredQueryResponse(struct soap*, _wfs__CreateStoredQueryResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__wfs__CreateStoredQueryResponse(struct soap*, const char *URL, _wfs__CreateStoredQueryResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__wfs__CreateStoredQueryResponse(struct soap*, const char *URL, _wfs__CreateStoredQueryResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__wfs__CreateStoredQueryResponse(struct soap*, const char *URL, _wfs__CreateStoredQueryResponse*);
    soap_POST_recv__wfs__CreateStoredQueryResponse(struct soap*, _wfs__CreateStoredQueryResponse*);
    @endcode

  - <wfs:DropStoredQuery> @ref _wfs__DropStoredQuery
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wfs__DropStoredQuery(struct soap*, _wfs__DropStoredQuery*);
    // Writer (returns SOAP_OK on success):
    soap_write__wfs__DropStoredQuery(struct soap*, _wfs__DropStoredQuery*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__wfs__DropStoredQuery(struct soap*, const char *URL, _wfs__DropStoredQuery*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__wfs__DropStoredQuery(struct soap*, const char *URL, _wfs__DropStoredQuery*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__wfs__DropStoredQuery(struct soap*, const char *URL, _wfs__DropStoredQuery*);
    soap_POST_recv__wfs__DropStoredQuery(struct soap*, _wfs__DropStoredQuery*);
    @endcode

  - <wfs:DropStoredQueryResponse> @ref _wfs__DropStoredQueryResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wfs__DropStoredQueryResponse(struct soap*, _wfs__DropStoredQueryResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__wfs__DropStoredQueryResponse(struct soap*, _wfs__DropStoredQueryResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__wfs__DropStoredQueryResponse(struct soap*, const char *URL, _wfs__DropStoredQueryResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__wfs__DropStoredQueryResponse(struct soap*, const char *URL, _wfs__DropStoredQueryResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__wfs__DropStoredQueryResponse(struct soap*, const char *URL, _wfs__DropStoredQueryResponse*);
    soap_POST_recv__wfs__DropStoredQueryResponse(struct soap*, _wfs__DropStoredQueryResponse*);
    @endcode

  - <wfs:LockFeature> @ref _wfs__LockFeature
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wfs__LockFeature(struct soap*, _wfs__LockFeature*);
    // Writer (returns SOAP_OK on success):
    soap_write__wfs__LockFeature(struct soap*, _wfs__LockFeature*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__wfs__LockFeature(struct soap*, const char *URL, _wfs__LockFeature*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__wfs__LockFeature(struct soap*, const char *URL, _wfs__LockFeature*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__wfs__LockFeature(struct soap*, const char *URL, _wfs__LockFeature*);
    soap_POST_recv__wfs__LockFeature(struct soap*, _wfs__LockFeature*);
    @endcode

  - <wfs:LockFeatureResponse> @ref _wfs__LockFeatureResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wfs__LockFeatureResponse(struct soap*, _wfs__LockFeatureResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__wfs__LockFeatureResponse(struct soap*, _wfs__LockFeatureResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__wfs__LockFeatureResponse(struct soap*, const char *URL, _wfs__LockFeatureResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__wfs__LockFeatureResponse(struct soap*, const char *URL, _wfs__LockFeatureResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__wfs__LockFeatureResponse(struct soap*, const char *URL, _wfs__LockFeatureResponse*);
    soap_POST_recv__wfs__LockFeatureResponse(struct soap*, _wfs__LockFeatureResponse*);
    @endcode

  - <wfs:Transaction> @ref _wfs__Transaction
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wfs__Transaction(struct soap*, _wfs__Transaction*);
    // Writer (returns SOAP_OK on success):
    soap_write__wfs__Transaction(struct soap*, _wfs__Transaction*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__wfs__Transaction(struct soap*, const char *URL, _wfs__Transaction*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__wfs__Transaction(struct soap*, const char *URL, _wfs__Transaction*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__wfs__Transaction(struct soap*, const char *URL, _wfs__Transaction*);
    soap_POST_recv__wfs__Transaction(struct soap*, _wfs__Transaction*);
    @endcode

  - <wfs:AbstractTransactionAction> (use wsdl2h option -g to auto-generate type _wfs__AbstractTransactionAction)

  - <wfs:Insert> @ref _wfs__Insert
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wfs__Insert(struct soap*, _wfs__Insert*);
    // Writer (returns SOAP_OK on success):
    soap_write__wfs__Insert(struct soap*, _wfs__Insert*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__wfs__Insert(struct soap*, const char *URL, _wfs__Insert*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__wfs__Insert(struct soap*, const char *URL, _wfs__Insert*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__wfs__Insert(struct soap*, const char *URL, _wfs__Insert*);
    soap_POST_recv__wfs__Insert(struct soap*, _wfs__Insert*);
    @endcode

  - <wfs:Update> @ref _wfs__Update
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wfs__Update(struct soap*, _wfs__Update*);
    // Writer (returns SOAP_OK on success):
    soap_write__wfs__Update(struct soap*, _wfs__Update*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__wfs__Update(struct soap*, const char *URL, _wfs__Update*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__wfs__Update(struct soap*, const char *URL, _wfs__Update*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__wfs__Update(struct soap*, const char *URL, _wfs__Update*);
    soap_POST_recv__wfs__Update(struct soap*, _wfs__Update*);
    @endcode

  - <wfs:Property> @ref _wfs__Property
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wfs__Property(struct soap*, _wfs__Property*);
    // Writer (returns SOAP_OK on success):
    soap_write__wfs__Property(struct soap*, _wfs__Property*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__wfs__Property(struct soap*, const char *URL, _wfs__Property*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__wfs__Property(struct soap*, const char *URL, _wfs__Property*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__wfs__Property(struct soap*, const char *URL, _wfs__Property*);
    soap_POST_recv__wfs__Property(struct soap*, _wfs__Property*);
    @endcode

  - <wfs:Replace> @ref _wfs__Replace
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wfs__Replace(struct soap*, _wfs__Replace*);
    // Writer (returns SOAP_OK on success):
    soap_write__wfs__Replace(struct soap*, _wfs__Replace*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__wfs__Replace(struct soap*, const char *URL, _wfs__Replace*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__wfs__Replace(struct soap*, const char *URL, _wfs__Replace*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__wfs__Replace(struct soap*, const char *URL, _wfs__Replace*);
    soap_POST_recv__wfs__Replace(struct soap*, _wfs__Replace*);
    @endcode

  - <wfs:Delete> @ref _wfs__Delete
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wfs__Delete(struct soap*, _wfs__Delete*);
    // Writer (returns SOAP_OK on success):
    soap_write__wfs__Delete(struct soap*, _wfs__Delete*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__wfs__Delete(struct soap*, const char *URL, _wfs__Delete*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__wfs__Delete(struct soap*, const char *URL, _wfs__Delete*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__wfs__Delete(struct soap*, const char *URL, _wfs__Delete*);
    soap_POST_recv__wfs__Delete(struct soap*, _wfs__Delete*);
    @endcode

  - <wfs:Native> @ref _wfs__Native
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wfs__Native(struct soap*, _wfs__Native*);
    // Writer (returns SOAP_OK on success):
    soap_write__wfs__Native(struct soap*, _wfs__Native*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__wfs__Native(struct soap*, const char *URL, _wfs__Native*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__wfs__Native(struct soap*, const char *URL, _wfs__Native*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__wfs__Native(struct soap*, const char *URL, _wfs__Native*);
    soap_POST_recv__wfs__Native(struct soap*, _wfs__Native*);
    @endcode

  - <wfs:TransactionResponse> @ref _wfs__TransactionResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wfs__TransactionResponse(struct soap*, _wfs__TransactionResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__wfs__TransactionResponse(struct soap*, _wfs__TransactionResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__wfs__TransactionResponse(struct soap*, const char *URL, _wfs__TransactionResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__wfs__TransactionResponse(struct soap*, const char *URL, _wfs__TransactionResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__wfs__TransactionResponse(struct soap*, const char *URL, _wfs__TransactionResponse*);
    soap_POST_recv__wfs__TransactionResponse(struct soap*, _wfs__TransactionResponse*);
    @endcode

*/

/**

@section util Top-level root elements of schema "http://www.opengis.net/wfs-util/2.0"

  - <util:DescribeFeatureTypeResponse> @ref _util__DescribeFeatureTypeResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__util__DescribeFeatureTypeResponse(struct soap*, _util__DescribeFeatureTypeResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__util__DescribeFeatureTypeResponse(struct soap*, _util__DescribeFeatureTypeResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__util__DescribeFeatureTypeResponse(struct soap*, const char *URL, _util__DescribeFeatureTypeResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__util__DescribeFeatureTypeResponse(struct soap*, const char *URL, _util__DescribeFeatureTypeResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__util__DescribeFeatureTypeResponse(struct soap*, const char *URL, _util__DescribeFeatureTypeResponse*);
    soap_POST_recv__util__DescribeFeatureTypeResponse(struct soap*, _util__DescribeFeatureTypeResponse*);
    @endcode

*/

/**

@section ows Top-level root elements of schema "http://www.opengis.net/ows/1.1"

  - <ows:ExceptionReport> @ref _ows__ExceptionReport
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ows__ExceptionReport(struct soap*, _ows__ExceptionReport*);
    // Writer (returns SOAP_OK on success):
    soap_write__ows__ExceptionReport(struct soap*, _ows__ExceptionReport*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__ows__ExceptionReport(struct soap*, const char *URL, _ows__ExceptionReport*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__ows__ExceptionReport(struct soap*, const char *URL, _ows__ExceptionReport*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__ows__ExceptionReport(struct soap*, const char *URL, _ows__ExceptionReport*);
    soap_POST_recv__ows__ExceptionReport(struct soap*, _ows__ExceptionReport*);
    @endcode

  - <ows:Exception> @ref _ows__Exception
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ows__Exception(struct soap*, _ows__Exception*);
    // Writer (returns SOAP_OK on success):
    soap_write__ows__Exception(struct soap*, _ows__Exception*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__ows__Exception(struct soap*, const char *URL, _ows__Exception*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__ows__Exception(struct soap*, const char *URL, _ows__Exception*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__ows__Exception(struct soap*, const char *URL, _ows__Exception*);
    soap_POST_recv__ows__Exception(struct soap*, _ows__Exception*);
    @endcode

  - <ows:Resource> @ref _ows__Resource
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ows__Resource(struct soap*, _XML);
    // Writer (returns SOAP_OK on success):
    soap_write__ows__Resource(struct soap*, _XML);
    // REST GET (returns SOAP_OK on success):
    soap_GET__ows__Resource(struct soap*, const char *URL, _XML);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__ows__Resource(struct soap*, const char *URL, _XML);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__ows__Resource(struct soap*, const char *URL, _XML);
    soap_POST_recv__ows__Resource(struct soap*, _XML);
    @endcode

  - <ows:GetResourceByID> @ref _ows__GetResourceByID
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ows__GetResourceByID(struct soap*, _ows__GetResourceByID*);
    // Writer (returns SOAP_OK on success):
    soap_write__ows__GetResourceByID(struct soap*, _ows__GetResourceByID*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__ows__GetResourceByID(struct soap*, const char *URL, _ows__GetResourceByID*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__ows__GetResourceByID(struct soap*, const char *URL, _ows__GetResourceByID*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__ows__GetResourceByID(struct soap*, const char *URL, _ows__GetResourceByID*);
    soap_POST_recv__ows__GetResourceByID(struct soap*, _ows__GetResourceByID*);
    @endcode

  - <ows:Identifier> @ref _ows__Identifier
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ows__Identifier(struct soap*, _ows__Identifier*);
    // Writer (returns SOAP_OK on success):
    soap_write__ows__Identifier(struct soap*, _ows__Identifier*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__ows__Identifier(struct soap*, const char *URL, _ows__Identifier*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__ows__Identifier(struct soap*, const char *URL, _ows__Identifier*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__ows__Identifier(struct soap*, const char *URL, _ows__Identifier*);
    soap_POST_recv__ows__Identifier(struct soap*, _ows__Identifier*);
    @endcode

  - <ows:OutputFormat> @ref _ows__OutputFormat
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ows__OutputFormat(struct soap*, _ows__OutputFormat*);
    // Writer (returns SOAP_OK on success):
    soap_write__ows__OutputFormat(struct soap*, _ows__OutputFormat*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__ows__OutputFormat(struct soap*, const char *URL, _ows__OutputFormat*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__ows__OutputFormat(struct soap*, const char *URL, _ows__OutputFormat*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__ows__OutputFormat(struct soap*, const char *URL, _ows__OutputFormat*);
    soap_POST_recv__ows__OutputFormat(struct soap*, _ows__OutputFormat*);
    @endcode

  - <ows:AvailableCRS> @ref _ows__AvailableCRS
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ows__AvailableCRS(struct soap*, _ows__AvailableCRS*);
    // Writer (returns SOAP_OK on success):
    soap_write__ows__AvailableCRS(struct soap*, _ows__AvailableCRS*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__ows__AvailableCRS(struct soap*, const char *URL, _ows__AvailableCRS*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__ows__AvailableCRS(struct soap*, const char *URL, _ows__AvailableCRS*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__ows__AvailableCRS(struct soap*, const char *URL, _ows__AvailableCRS*);
    soap_POST_recv__ows__AvailableCRS(struct soap*, _ows__AvailableCRS*);
    @endcode

  - <ows:SupportedCRS> @ref _ows__SupportedCRS
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ows__SupportedCRS(struct soap*, _ows__SupportedCRS*);
    // Writer (returns SOAP_OK on success):
    soap_write__ows__SupportedCRS(struct soap*, _ows__SupportedCRS*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__ows__SupportedCRS(struct soap*, const char *URL, _ows__SupportedCRS*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__ows__SupportedCRS(struct soap*, const char *URL, _ows__SupportedCRS*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__ows__SupportedCRS(struct soap*, const char *URL, _ows__SupportedCRS*);
    soap_POST_recv__ows__SupportedCRS(struct soap*, _ows__SupportedCRS*);
    @endcode

  - <ows:AccessConstraints> @ref _ows__AccessConstraints
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ows__AccessConstraints(struct soap*, _ows__AccessConstraints*);
    // Writer (returns SOAP_OK on success):
    soap_write__ows__AccessConstraints(struct soap*, _ows__AccessConstraints*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__ows__AccessConstraints(struct soap*, const char *URL, _ows__AccessConstraints*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__ows__AccessConstraints(struct soap*, const char *URL, _ows__AccessConstraints*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__ows__AccessConstraints(struct soap*, const char *URL, _ows__AccessConstraints*);
    soap_POST_recv__ows__AccessConstraints(struct soap*, _ows__AccessConstraints*);
    @endcode

  - <ows:Fees> @ref _ows__Fees
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ows__Fees(struct soap*, _ows__Fees*);
    // Writer (returns SOAP_OK on success):
    soap_write__ows__Fees(struct soap*, _ows__Fees*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__ows__Fees(struct soap*, const char *URL, _ows__Fees*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__ows__Fees(struct soap*, const char *URL, _ows__Fees*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__ows__Fees(struct soap*, const char *URL, _ows__Fees*);
    soap_POST_recv__ows__Fees(struct soap*, _ows__Fees*);
    @endcode

  - <ows:Language> @ref _ows__Language
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ows__Language(struct soap*, _ows__Language*);
    // Writer (returns SOAP_OK on success):
    soap_write__ows__Language(struct soap*, _ows__Language*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__ows__Language(struct soap*, const char *URL, _ows__Language*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__ows__Language(struct soap*, const char *URL, _ows__Language*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__ows__Language(struct soap*, const char *URL, _ows__Language*);
    soap_POST_recv__ows__Language(struct soap*, _ows__Language*);
    @endcode

  - <ows:Metadata> @ref _ows__Metadata
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ows__Metadata(struct soap*, _ows__Metadata*);
    // Writer (returns SOAP_OK on success):
    soap_write__ows__Metadata(struct soap*, _ows__Metadata*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__ows__Metadata(struct soap*, const char *URL, _ows__Metadata*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__ows__Metadata(struct soap*, const char *URL, _ows__Metadata*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__ows__Metadata(struct soap*, const char *URL, _ows__Metadata*);
    soap_POST_recv__ows__Metadata(struct soap*, _ows__Metadata*);
    @endcode

  - <ows:AbstractMetaData> (use wsdl2h option -g to auto-generate type _ows__AbstractMetaData)

  - <ows:BoundingBox> @ref _ows__BoundingBox
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ows__BoundingBox(struct soap*, _ows__BoundingBox*);
    // Writer (returns SOAP_OK on success):
    soap_write__ows__BoundingBox(struct soap*, _ows__BoundingBox*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__ows__BoundingBox(struct soap*, const char *URL, _ows__BoundingBox*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__ows__BoundingBox(struct soap*, const char *URL, _ows__BoundingBox*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__ows__BoundingBox(struct soap*, const char *URL, _ows__BoundingBox*);
    soap_POST_recv__ows__BoundingBox(struct soap*, _ows__BoundingBox*);
    @endcode

  - <ows:WGS84BoundingBox> @ref _ows__WGS84BoundingBox
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ows__WGS84BoundingBox(struct soap*, _ows__WGS84BoundingBox*);
    // Writer (returns SOAP_OK on success):
    soap_write__ows__WGS84BoundingBox(struct soap*, _ows__WGS84BoundingBox*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__ows__WGS84BoundingBox(struct soap*, const char *URL, _ows__WGS84BoundingBox*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__ows__WGS84BoundingBox(struct soap*, const char *URL, _ows__WGS84BoundingBox*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__ows__WGS84BoundingBox(struct soap*, const char *URL, _ows__WGS84BoundingBox*);
    soap_POST_recv__ows__WGS84BoundingBox(struct soap*, _ows__WGS84BoundingBox*);
    @endcode

  - <ows:Title> @ref _ows__Title
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ows__Title(struct soap*, _ows__Title*);
    // Writer (returns SOAP_OK on success):
    soap_write__ows__Title(struct soap*, _ows__Title*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__ows__Title(struct soap*, const char *URL, _ows__Title*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__ows__Title(struct soap*, const char *URL, _ows__Title*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__ows__Title(struct soap*, const char *URL, _ows__Title*);
    soap_POST_recv__ows__Title(struct soap*, _ows__Title*);
    @endcode

  - <ows:Abstract> @ref _ows__Abstract
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ows__Abstract(struct soap*, _ows__Abstract*);
    // Writer (returns SOAP_OK on success):
    soap_write__ows__Abstract(struct soap*, _ows__Abstract*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__ows__Abstract(struct soap*, const char *URL, _ows__Abstract*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__ows__Abstract(struct soap*, const char *URL, _ows__Abstract*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__ows__Abstract(struct soap*, const char *URL, _ows__Abstract*);
    soap_POST_recv__ows__Abstract(struct soap*, _ows__Abstract*);
    @endcode

  - <ows:Keywords> @ref _ows__Keywords
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ows__Keywords(struct soap*, _ows__Keywords*);
    // Writer (returns SOAP_OK on success):
    soap_write__ows__Keywords(struct soap*, _ows__Keywords*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__ows__Keywords(struct soap*, const char *URL, _ows__Keywords*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__ows__Keywords(struct soap*, const char *URL, _ows__Keywords*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__ows__Keywords(struct soap*, const char *URL, _ows__Keywords*);
    soap_POST_recv__ows__Keywords(struct soap*, _ows__Keywords*);
    @endcode

  - <ows:PointOfContact> @ref _ows__PointOfContact
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ows__PointOfContact(struct soap*, _ows__PointOfContact*);
    // Writer (returns SOAP_OK on success):
    soap_write__ows__PointOfContact(struct soap*, _ows__PointOfContact*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__ows__PointOfContact(struct soap*, const char *URL, _ows__PointOfContact*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__ows__PointOfContact(struct soap*, const char *URL, _ows__PointOfContact*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__ows__PointOfContact(struct soap*, const char *URL, _ows__PointOfContact*);
    soap_POST_recv__ows__PointOfContact(struct soap*, _ows__PointOfContact*);
    @endcode

  - <ows:IndividualName> @ref _ows__IndividualName
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ows__IndividualName(struct soap*, _ows__IndividualName*);
    // Writer (returns SOAP_OK on success):
    soap_write__ows__IndividualName(struct soap*, _ows__IndividualName*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__ows__IndividualName(struct soap*, const char *URL, _ows__IndividualName*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__ows__IndividualName(struct soap*, const char *URL, _ows__IndividualName*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__ows__IndividualName(struct soap*, const char *URL, _ows__IndividualName*);
    soap_POST_recv__ows__IndividualName(struct soap*, _ows__IndividualName*);
    @endcode

  - <ows:OrganisationName> @ref _ows__OrganisationName
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ows__OrganisationName(struct soap*, _ows__OrganisationName*);
    // Writer (returns SOAP_OK on success):
    soap_write__ows__OrganisationName(struct soap*, _ows__OrganisationName*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__ows__OrganisationName(struct soap*, const char *URL, _ows__OrganisationName*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__ows__OrganisationName(struct soap*, const char *URL, _ows__OrganisationName*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__ows__OrganisationName(struct soap*, const char *URL, _ows__OrganisationName*);
    soap_POST_recv__ows__OrganisationName(struct soap*, _ows__OrganisationName*);
    @endcode

  - <ows:PositionName> @ref _ows__PositionName
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ows__PositionName(struct soap*, _ows__PositionName*);
    // Writer (returns SOAP_OK on success):
    soap_write__ows__PositionName(struct soap*, _ows__PositionName*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__ows__PositionName(struct soap*, const char *URL, _ows__PositionName*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__ows__PositionName(struct soap*, const char *URL, _ows__PositionName*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__ows__PositionName(struct soap*, const char *URL, _ows__PositionName*);
    soap_POST_recv__ows__PositionName(struct soap*, _ows__PositionName*);
    @endcode

  - <ows:Role> @ref _ows__Role
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ows__Role(struct soap*, _ows__Role*);
    // Writer (returns SOAP_OK on success):
    soap_write__ows__Role(struct soap*, _ows__Role*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__ows__Role(struct soap*, const char *URL, _ows__Role*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__ows__Role(struct soap*, const char *URL, _ows__Role*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__ows__Role(struct soap*, const char *URL, _ows__Role*);
    soap_POST_recv__ows__Role(struct soap*, _ows__Role*);
    @endcode

  - <ows:ContactInfo> @ref _ows__ContactInfo
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ows__ContactInfo(struct soap*, _ows__ContactInfo*);
    // Writer (returns SOAP_OK on success):
    soap_write__ows__ContactInfo(struct soap*, _ows__ContactInfo*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__ows__ContactInfo(struct soap*, const char *URL, _ows__ContactInfo*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__ows__ContactInfo(struct soap*, const char *URL, _ows__ContactInfo*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__ows__ContactInfo(struct soap*, const char *URL, _ows__ContactInfo*);
    soap_POST_recv__ows__ContactInfo(struct soap*, _ows__ContactInfo*);
    @endcode

  - <ows:GetCapabilities> @ref _ows__GetCapabilities
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ows__GetCapabilities(struct soap*, _ows__GetCapabilities*);
    // Writer (returns SOAP_OK on success):
    soap_write__ows__GetCapabilities(struct soap*, _ows__GetCapabilities*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__ows__GetCapabilities(struct soap*, const char *URL, _ows__GetCapabilities*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__ows__GetCapabilities(struct soap*, const char *URL, _ows__GetCapabilities*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__ows__GetCapabilities(struct soap*, const char *URL, _ows__GetCapabilities*);
    soap_POST_recv__ows__GetCapabilities(struct soap*, _ows__GetCapabilities*);
    @endcode

  - <ows:ServiceIdentification> @ref _ows__ServiceIdentification
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ows__ServiceIdentification(struct soap*, _ows__ServiceIdentification*);
    // Writer (returns SOAP_OK on success):
    soap_write__ows__ServiceIdentification(struct soap*, _ows__ServiceIdentification*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__ows__ServiceIdentification(struct soap*, const char *URL, _ows__ServiceIdentification*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__ows__ServiceIdentification(struct soap*, const char *URL, _ows__ServiceIdentification*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__ows__ServiceIdentification(struct soap*, const char *URL, _ows__ServiceIdentification*);
    soap_POST_recv__ows__ServiceIdentification(struct soap*, _ows__ServiceIdentification*);
    @endcode

  - <ows:ServiceProvider> @ref _ows__ServiceProvider
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ows__ServiceProvider(struct soap*, _ows__ServiceProvider*);
    // Writer (returns SOAP_OK on success):
    soap_write__ows__ServiceProvider(struct soap*, _ows__ServiceProvider*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__ows__ServiceProvider(struct soap*, const char *URL, _ows__ServiceProvider*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__ows__ServiceProvider(struct soap*, const char *URL, _ows__ServiceProvider*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__ows__ServiceProvider(struct soap*, const char *URL, _ows__ServiceProvider*);
    soap_POST_recv__ows__ServiceProvider(struct soap*, _ows__ServiceProvider*);
    @endcode

  - <ows:OperationsMetadata> @ref _ows__OperationsMetadata
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ows__OperationsMetadata(struct soap*, _ows__OperationsMetadata*);
    // Writer (returns SOAP_OK on success):
    soap_write__ows__OperationsMetadata(struct soap*, _ows__OperationsMetadata*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__ows__OperationsMetadata(struct soap*, const char *URL, _ows__OperationsMetadata*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__ows__OperationsMetadata(struct soap*, const char *URL, _ows__OperationsMetadata*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__ows__OperationsMetadata(struct soap*, const char *URL, _ows__OperationsMetadata*);
    soap_POST_recv__ows__OperationsMetadata(struct soap*, _ows__OperationsMetadata*);
    @endcode

  - <ows:ExtendedCapabilities> @ref _ows__ExtendedCapabilities
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ows__ExtendedCapabilities(struct soap*, _ows__ExtendedCapabilities*);
    // Writer (returns SOAP_OK on success):
    soap_write__ows__ExtendedCapabilities(struct soap*, _ows__ExtendedCapabilities*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__ows__ExtendedCapabilities(struct soap*, const char *URL, _ows__ExtendedCapabilities*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__ows__ExtendedCapabilities(struct soap*, const char *URL, _ows__ExtendedCapabilities*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__ows__ExtendedCapabilities(struct soap*, const char *URL, _ows__ExtendedCapabilities*);
    soap_POST_recv__ows__ExtendedCapabilities(struct soap*, _ows__ExtendedCapabilities*);
    @endcode

  - <ows:Operation> @ref _ows__Operation
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ows__Operation(struct soap*, _ows__Operation*);
    // Writer (returns SOAP_OK on success):
    soap_write__ows__Operation(struct soap*, _ows__Operation*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__ows__Operation(struct soap*, const char *URL, _ows__Operation*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__ows__Operation(struct soap*, const char *URL, _ows__Operation*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__ows__Operation(struct soap*, const char *URL, _ows__Operation*);
    soap_POST_recv__ows__Operation(struct soap*, _ows__Operation*);
    @endcode

  - <ows:DCP> @ref _ows__DCP
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ows__DCP(struct soap*, _ows__DCP*);
    // Writer (returns SOAP_OK on success):
    soap_write__ows__DCP(struct soap*, _ows__DCP*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__ows__DCP(struct soap*, const char *URL, _ows__DCP*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__ows__DCP(struct soap*, const char *URL, _ows__DCP*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__ows__DCP(struct soap*, const char *URL, _ows__DCP*);
    soap_POST_recv__ows__DCP(struct soap*, _ows__DCP*);
    @endcode

  - <ows:HTTP> @ref _ows__HTTP
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ows__HTTP(struct soap*, _ows__HTTP*);
    // Writer (returns SOAP_OK on success):
    soap_write__ows__HTTP(struct soap*, _ows__HTTP*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__ows__HTTP(struct soap*, const char *URL, _ows__HTTP*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__ows__HTTP(struct soap*, const char *URL, _ows__HTTP*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__ows__HTTP(struct soap*, const char *URL, _ows__HTTP*);
    soap_POST_recv__ows__HTTP(struct soap*, _ows__HTTP*);
    @endcode

  - <ows:AnyValue> @ref _ows__AnyValue
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ows__AnyValue(struct soap*, _ows__AnyValue*);
    // Writer (returns SOAP_OK on success):
    soap_write__ows__AnyValue(struct soap*, _ows__AnyValue*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__ows__AnyValue(struct soap*, const char *URL, _ows__AnyValue*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__ows__AnyValue(struct soap*, const char *URL, _ows__AnyValue*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__ows__AnyValue(struct soap*, const char *URL, _ows__AnyValue*);
    soap_POST_recv__ows__AnyValue(struct soap*, _ows__AnyValue*);
    @endcode

  - <ows:NoValues> @ref _ows__NoValues
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ows__NoValues(struct soap*, _ows__NoValues*);
    // Writer (returns SOAP_OK on success):
    soap_write__ows__NoValues(struct soap*, _ows__NoValues*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__ows__NoValues(struct soap*, const char *URL, _ows__NoValues*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__ows__NoValues(struct soap*, const char *URL, _ows__NoValues*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__ows__NoValues(struct soap*, const char *URL, _ows__NoValues*);
    soap_POST_recv__ows__NoValues(struct soap*, _ows__NoValues*);
    @endcode

  - <ows:ValuesReference> @ref _ows__ValuesReference
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ows__ValuesReference(struct soap*, _ows__ValuesReference*);
    // Writer (returns SOAP_OK on success):
    soap_write__ows__ValuesReference(struct soap*, _ows__ValuesReference*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__ows__ValuesReference(struct soap*, const char *URL, _ows__ValuesReference*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__ows__ValuesReference(struct soap*, const char *URL, _ows__ValuesReference*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__ows__ValuesReference(struct soap*, const char *URL, _ows__ValuesReference*);
    soap_POST_recv__ows__ValuesReference(struct soap*, _ows__ValuesReference*);
    @endcode

  - <ows:AllowedValues> @ref _ows__AllowedValues
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ows__AllowedValues(struct soap*, _ows__AllowedValues*);
    // Writer (returns SOAP_OK on success):
    soap_write__ows__AllowedValues(struct soap*, _ows__AllowedValues*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__ows__AllowedValues(struct soap*, const char *URL, _ows__AllowedValues*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__ows__AllowedValues(struct soap*, const char *URL, _ows__AllowedValues*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__ows__AllowedValues(struct soap*, const char *URL, _ows__AllowedValues*);
    soap_POST_recv__ows__AllowedValues(struct soap*, _ows__AllowedValues*);
    @endcode

  - <ows:Value> @ref _ows__Value
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ows__Value(struct soap*, _ows__Value*);
    // Writer (returns SOAP_OK on success):
    soap_write__ows__Value(struct soap*, _ows__Value*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__ows__Value(struct soap*, const char *URL, _ows__Value*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__ows__Value(struct soap*, const char *URL, _ows__Value*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__ows__Value(struct soap*, const char *URL, _ows__Value*);
    soap_POST_recv__ows__Value(struct soap*, _ows__Value*);
    @endcode

  - <ows:DefaultValue> @ref _ows__DefaultValue
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ows__DefaultValue(struct soap*, _ows__DefaultValue*);
    // Writer (returns SOAP_OK on success):
    soap_write__ows__DefaultValue(struct soap*, _ows__DefaultValue*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__ows__DefaultValue(struct soap*, const char *URL, _ows__DefaultValue*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__ows__DefaultValue(struct soap*, const char *URL, _ows__DefaultValue*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__ows__DefaultValue(struct soap*, const char *URL, _ows__DefaultValue*);
    soap_POST_recv__ows__DefaultValue(struct soap*, _ows__DefaultValue*);
    @endcode

  - <ows:Range> @ref _ows__Range
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ows__Range(struct soap*, _ows__Range*);
    // Writer (returns SOAP_OK on success):
    soap_write__ows__Range(struct soap*, _ows__Range*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__ows__Range(struct soap*, const char *URL, _ows__Range*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__ows__Range(struct soap*, const char *URL, _ows__Range*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__ows__Range(struct soap*, const char *URL, _ows__Range*);
    soap_POST_recv__ows__Range(struct soap*, _ows__Range*);
    @endcode

  - <ows:MinimumValue> @ref _ows__MinimumValue
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ows__MinimumValue(struct soap*, _ows__MinimumValue*);
    // Writer (returns SOAP_OK on success):
    soap_write__ows__MinimumValue(struct soap*, _ows__MinimumValue*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__ows__MinimumValue(struct soap*, const char *URL, _ows__MinimumValue*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__ows__MinimumValue(struct soap*, const char *URL, _ows__MinimumValue*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__ows__MinimumValue(struct soap*, const char *URL, _ows__MinimumValue*);
    soap_POST_recv__ows__MinimumValue(struct soap*, _ows__MinimumValue*);
    @endcode

  - <ows:MaximumValue> @ref _ows__MaximumValue
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ows__MaximumValue(struct soap*, _ows__MaximumValue*);
    // Writer (returns SOAP_OK on success):
    soap_write__ows__MaximumValue(struct soap*, _ows__MaximumValue*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__ows__MaximumValue(struct soap*, const char *URL, _ows__MaximumValue*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__ows__MaximumValue(struct soap*, const char *URL, _ows__MaximumValue*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__ows__MaximumValue(struct soap*, const char *URL, _ows__MaximumValue*);
    soap_POST_recv__ows__MaximumValue(struct soap*, _ows__MaximumValue*);
    @endcode

  - <ows:Spacing> @ref _ows__Spacing
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ows__Spacing(struct soap*, _ows__Spacing*);
    // Writer (returns SOAP_OK on success):
    soap_write__ows__Spacing(struct soap*, _ows__Spacing*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__ows__Spacing(struct soap*, const char *URL, _ows__Spacing*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__ows__Spacing(struct soap*, const char *URL, _ows__Spacing*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__ows__Spacing(struct soap*, const char *URL, _ows__Spacing*);
    soap_POST_recv__ows__Spacing(struct soap*, _ows__Spacing*);
    @endcode

  - <ows:Meaning> @ref _ows__Meaning
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ows__Meaning(struct soap*, _ows__Meaning*);
    // Writer (returns SOAP_OK on success):
    soap_write__ows__Meaning(struct soap*, _ows__Meaning*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__ows__Meaning(struct soap*, const char *URL, _ows__Meaning*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__ows__Meaning(struct soap*, const char *URL, _ows__Meaning*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__ows__Meaning(struct soap*, const char *URL, _ows__Meaning*);
    soap_POST_recv__ows__Meaning(struct soap*, _ows__Meaning*);
    @endcode

  - <ows:DataType> @ref _ows__DataType
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ows__DataType(struct soap*, _ows__DataType*);
    // Writer (returns SOAP_OK on success):
    soap_write__ows__DataType(struct soap*, _ows__DataType*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__ows__DataType(struct soap*, const char *URL, _ows__DataType*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__ows__DataType(struct soap*, const char *URL, _ows__DataType*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__ows__DataType(struct soap*, const char *URL, _ows__DataType*);
    soap_POST_recv__ows__DataType(struct soap*, _ows__DataType*);
    @endcode

  - <ows:ReferenceSystem> @ref _ows__ReferenceSystem
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ows__ReferenceSystem(struct soap*, _ows__ReferenceSystem*);
    // Writer (returns SOAP_OK on success):
    soap_write__ows__ReferenceSystem(struct soap*, _ows__ReferenceSystem*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__ows__ReferenceSystem(struct soap*, const char *URL, _ows__ReferenceSystem*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__ows__ReferenceSystem(struct soap*, const char *URL, _ows__ReferenceSystem*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__ows__ReferenceSystem(struct soap*, const char *URL, _ows__ReferenceSystem*);
    soap_POST_recv__ows__ReferenceSystem(struct soap*, _ows__ReferenceSystem*);
    @endcode

  - <ows:UOM> @ref _ows__UOM
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ows__UOM(struct soap*, _ows__UOM*);
    // Writer (returns SOAP_OK on success):
    soap_write__ows__UOM(struct soap*, _ows__UOM*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__ows__UOM(struct soap*, const char *URL, _ows__UOM*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__ows__UOM(struct soap*, const char *URL, _ows__UOM*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__ows__UOM(struct soap*, const char *URL, _ows__UOM*);
    soap_POST_recv__ows__UOM(struct soap*, _ows__UOM*);
    @endcode

  - <ows:OtherSource> @ref _ows__OtherSource
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ows__OtherSource(struct soap*, _ows__OtherSource*);
    // Writer (returns SOAP_OK on success):
    soap_write__ows__OtherSource(struct soap*, _ows__OtherSource*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__ows__OtherSource(struct soap*, const char *URL, _ows__OtherSource*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__ows__OtherSource(struct soap*, const char *URL, _ows__OtherSource*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__ows__OtherSource(struct soap*, const char *URL, _ows__OtherSource*);
    soap_POST_recv__ows__OtherSource(struct soap*, _ows__OtherSource*);
    @endcode

  - <ows:DatasetDescriptionSummary> @ref _ows__DatasetDescriptionSummary
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ows__DatasetDescriptionSummary(struct soap*, _ows__DatasetDescriptionSummary*);
    // Writer (returns SOAP_OK on success):
    soap_write__ows__DatasetDescriptionSummary(struct soap*, _ows__DatasetDescriptionSummary*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__ows__DatasetDescriptionSummary(struct soap*, const char *URL, _ows__DatasetDescriptionSummary*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__ows__DatasetDescriptionSummary(struct soap*, const char *URL, _ows__DatasetDescriptionSummary*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__ows__DatasetDescriptionSummary(struct soap*, const char *URL, _ows__DatasetDescriptionSummary*);
    soap_POST_recv__ows__DatasetDescriptionSummary(struct soap*, _ows__DatasetDescriptionSummary*);
    @endcode

  - <ows:OperationResponse> @ref _ows__OperationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ows__OperationResponse(struct soap*, _ows__OperationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ows__OperationResponse(struct soap*, _ows__OperationResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__ows__OperationResponse(struct soap*, const char *URL, _ows__OperationResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__ows__OperationResponse(struct soap*, const char *URL, _ows__OperationResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__ows__OperationResponse(struct soap*, const char *URL, _ows__OperationResponse*);
    soap_POST_recv__ows__OperationResponse(struct soap*, _ows__OperationResponse*);
    @endcode

  - <ows:InputData> @ref _ows__InputData
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ows__InputData(struct soap*, _ows__InputData*);
    // Writer (returns SOAP_OK on success):
    soap_write__ows__InputData(struct soap*, _ows__InputData*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__ows__InputData(struct soap*, const char *URL, _ows__InputData*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__ows__InputData(struct soap*, const char *URL, _ows__InputData*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__ows__InputData(struct soap*, const char *URL, _ows__InputData*);
    soap_POST_recv__ows__InputData(struct soap*, _ows__InputData*);
    @endcode

  - <ows:ServiceReference> @ref _ows__ServiceReference
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ows__ServiceReference(struct soap*, _ows__ServiceReference*);
    // Writer (returns SOAP_OK on success):
    soap_write__ows__ServiceReference(struct soap*, _ows__ServiceReference*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__ows__ServiceReference(struct soap*, const char *URL, _ows__ServiceReference*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__ows__ServiceReference(struct soap*, const char *URL, _ows__ServiceReference*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__ows__ServiceReference(struct soap*, const char *URL, _ows__ServiceReference*);
    soap_POST_recv__ows__ServiceReference(struct soap*, _ows__ServiceReference*);
    @endcode

  - <ows:AbstractReferenceBase> (use wsdl2h option -g to auto-generate type _ows__AbstractReferenceBase)

  - <ows:Reference> @ref _ows__Reference
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ows__Reference(struct soap*, _ows__Reference*);
    // Writer (returns SOAP_OK on success):
    soap_write__ows__Reference(struct soap*, _ows__Reference*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__ows__Reference(struct soap*, const char *URL, _ows__Reference*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__ows__Reference(struct soap*, const char *URL, _ows__Reference*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__ows__Reference(struct soap*, const char *URL, _ows__Reference*);
    soap_POST_recv__ows__Reference(struct soap*, _ows__Reference*);
    @endcode

  - <ows:ReferenceGroup> @ref _ows__ReferenceGroup
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ows__ReferenceGroup(struct soap*, _ows__ReferenceGroup*);
    // Writer (returns SOAP_OK on success):
    soap_write__ows__ReferenceGroup(struct soap*, _ows__ReferenceGroup*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__ows__ReferenceGroup(struct soap*, const char *URL, _ows__ReferenceGroup*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__ows__ReferenceGroup(struct soap*, const char *URL, _ows__ReferenceGroup*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__ows__ReferenceGroup(struct soap*, const char *URL, _ows__ReferenceGroup*);
    soap_POST_recv__ows__ReferenceGroup(struct soap*, _ows__ReferenceGroup*);
    @endcode

  - <ows:Manifest> @ref _ows__Manifest
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ows__Manifest(struct soap*, _ows__Manifest*);
    // Writer (returns SOAP_OK on success):
    soap_write__ows__Manifest(struct soap*, _ows__Manifest*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__ows__Manifest(struct soap*, const char *URL, _ows__Manifest*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__ows__Manifest(struct soap*, const char *URL, _ows__Manifest*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__ows__Manifest(struct soap*, const char *URL, _ows__Manifest*);
    soap_POST_recv__ows__Manifest(struct soap*, _ows__Manifest*);
    @endcode

*/

/**

@section idls Top-level root elements of schema "http://inspire.ec.europa.eu/schemas/inspire_dls/1.0"

  - <idls:ExtendedCapabilities> @ref _idls__ExtendedCapabilities
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__idls__ExtendedCapabilities(struct soap*, _idls__ExtendedCapabilities*);
    // Writer (returns SOAP_OK on success):
    soap_write__idls__ExtendedCapabilities(struct soap*, _idls__ExtendedCapabilities*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__idls__ExtendedCapabilities(struct soap*, const char *URL, _idls__ExtendedCapabilities*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__idls__ExtendedCapabilities(struct soap*, const char *URL, _idls__ExtendedCapabilities*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__idls__ExtendedCapabilities(struct soap*, const char *URL, _idls__ExtendedCapabilities*);
    soap_POST_recv__idls__ExtendedCapabilities(struct soap*, _idls__ExtendedCapabilities*);
    @endcode

  - <idls:spatial_dataset_identifier_code> @ref _idls__spatial_x005fdataset_x005fidentifier_x005fcode
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__idls__spatial_x005fdataset_x005fidentifier_x005fcode(struct soap*, _idls__spatial_x005fdataset_x005fidentifier_x005fcode*);
    // Writer (returns SOAP_OK on success):
    soap_write__idls__spatial_x005fdataset_x005fidentifier_x005fcode(struct soap*, _idls__spatial_x005fdataset_x005fidentifier_x005fcode*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__idls__spatial_x005fdataset_x005fidentifier_x005fcode(struct soap*, const char *URL, _idls__spatial_x005fdataset_x005fidentifier_x005fcode*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__idls__spatial_x005fdataset_x005fidentifier_x005fcode(struct soap*, const char *URL, _idls__spatial_x005fdataset_x005fidentifier_x005fcode*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__idls__spatial_x005fdataset_x005fidentifier_x005fcode(struct soap*, const char *URL, _idls__spatial_x005fdataset_x005fidentifier_x005fcode*);
    soap_POST_recv__idls__spatial_x005fdataset_x005fidentifier_x005fcode(struct soap*, _idls__spatial_x005fdataset_x005fidentifier_x005fcode*);
    @endcode

  - <idls:spatial_dataset_identifier_namespace> @ref _idls__spatial_x005fdataset_x005fidentifier_x005fnamespace
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__idls__spatial_x005fdataset_x005fidentifier_x005fnamespace(struct soap*, _idls__spatial_x005fdataset_x005fidentifier_x005fnamespace*);
    // Writer (returns SOAP_OK on success):
    soap_write__idls__spatial_x005fdataset_x005fidentifier_x005fnamespace(struct soap*, _idls__spatial_x005fdataset_x005fidentifier_x005fnamespace*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__idls__spatial_x005fdataset_x005fidentifier_x005fnamespace(struct soap*, const char *URL, _idls__spatial_x005fdataset_x005fidentifier_x005fnamespace*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__idls__spatial_x005fdataset_x005fidentifier_x005fnamespace(struct soap*, const char *URL, _idls__spatial_x005fdataset_x005fidentifier_x005fnamespace*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__idls__spatial_x005fdataset_x005fidentifier_x005fnamespace(struct soap*, const char *URL, _idls__spatial_x005fdataset_x005fidentifier_x005fnamespace*);
    soap_POST_recv__idls__spatial_x005fdataset_x005fidentifier_x005fnamespace(struct soap*, _idls__spatial_x005fdataset_x005fidentifier_x005fnamespace*);
    @endcode

*/

/**

@section xlink Top-level root elements of schema "http://www.w3.org/1999/xlink"

  - <xlink:title> @ref _xlink__title
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__xlink__title(struct soap*, char*);
    // Writer (returns SOAP_OK on success):
    soap_write__xlink__title(struct soap*, char*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__xlink__title(struct soap*, const char *URL, char*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__xlink__title(struct soap*, const char *URL, char*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__xlink__title(struct soap*, const char *URL, char*);
    soap_POST_recv__xlink__title(struct soap*, char*);
    @endcode

  - <xlink:resource> (use wsdl2h option -g to auto-generate type _xlink__resource)

  - <xlink:locator> (use wsdl2h option -g to auto-generate type _xlink__locator)

  - <xlink:arc> (use wsdl2h option -g to auto-generate type _xlink__arc)

*/

/**

@section fes Top-level root elements of schema "http://www.opengis.net/fes/2.0"

  - <fes:AbstractQueryExpression> (use wsdl2h option -g to auto-generate type _fes__AbstractQueryExpression)

  - <fes:AbstractAdhocQueryExpression> (use wsdl2h option -g to auto-generate type _fes__AbstractAdhocQueryExpression)

  - <fes:AbstractProjectionClause> (use wsdl2h option -g to auto-generate type _fes__AbstractProjectionClause)

  - <fes:AbstractSelectionClause> (use wsdl2h option -g to auto-generate type _fes__AbstractSelectionClause)

  - <fes:AbstractSortingClause> (use wsdl2h option -g to auto-generate type _fes__AbstractSortingClause)

  - <fes:Filter> @ref _fes__Filter
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__fes__Filter(struct soap*, _fes__Filter*);
    // Writer (returns SOAP_OK on success):
    soap_write__fes__Filter(struct soap*, _fes__Filter*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__fes__Filter(struct soap*, const char *URL, _fes__Filter*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__fes__Filter(struct soap*, const char *URL, _fes__Filter*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__fes__Filter(struct soap*, const char *URL, _fes__Filter*);
    soap_POST_recv__fes__Filter(struct soap*, _fes__Filter*);
    @endcode

  - <fes:comparisonOps> (use wsdl2h option -g to auto-generate type _fes__comparisonOps)

  - <fes:PropertyIsEqualTo> @ref _fes__PropertyIsEqualTo
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__fes__PropertyIsEqualTo(struct soap*, _fes__PropertyIsEqualTo*);
    // Writer (returns SOAP_OK on success):
    soap_write__fes__PropertyIsEqualTo(struct soap*, _fes__PropertyIsEqualTo*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__fes__PropertyIsEqualTo(struct soap*, const char *URL, _fes__PropertyIsEqualTo*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__fes__PropertyIsEqualTo(struct soap*, const char *URL, _fes__PropertyIsEqualTo*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__fes__PropertyIsEqualTo(struct soap*, const char *URL, _fes__PropertyIsEqualTo*);
    soap_POST_recv__fes__PropertyIsEqualTo(struct soap*, _fes__PropertyIsEqualTo*);
    @endcode

  - <fes:PropertyIsNotEqualTo> @ref _fes__PropertyIsNotEqualTo
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__fes__PropertyIsNotEqualTo(struct soap*, _fes__PropertyIsNotEqualTo*);
    // Writer (returns SOAP_OK on success):
    soap_write__fes__PropertyIsNotEqualTo(struct soap*, _fes__PropertyIsNotEqualTo*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__fes__PropertyIsNotEqualTo(struct soap*, const char *URL, _fes__PropertyIsNotEqualTo*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__fes__PropertyIsNotEqualTo(struct soap*, const char *URL, _fes__PropertyIsNotEqualTo*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__fes__PropertyIsNotEqualTo(struct soap*, const char *URL, _fes__PropertyIsNotEqualTo*);
    soap_POST_recv__fes__PropertyIsNotEqualTo(struct soap*, _fes__PropertyIsNotEqualTo*);
    @endcode

  - <fes:PropertyIsLessThan> @ref _fes__PropertyIsLessThan
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__fes__PropertyIsLessThan(struct soap*, _fes__PropertyIsLessThan*);
    // Writer (returns SOAP_OK on success):
    soap_write__fes__PropertyIsLessThan(struct soap*, _fes__PropertyIsLessThan*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__fes__PropertyIsLessThan(struct soap*, const char *URL, _fes__PropertyIsLessThan*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__fes__PropertyIsLessThan(struct soap*, const char *URL, _fes__PropertyIsLessThan*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__fes__PropertyIsLessThan(struct soap*, const char *URL, _fes__PropertyIsLessThan*);
    soap_POST_recv__fes__PropertyIsLessThan(struct soap*, _fes__PropertyIsLessThan*);
    @endcode

  - <fes:PropertyIsGreaterThan> @ref _fes__PropertyIsGreaterThan
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__fes__PropertyIsGreaterThan(struct soap*, _fes__PropertyIsGreaterThan*);
    // Writer (returns SOAP_OK on success):
    soap_write__fes__PropertyIsGreaterThan(struct soap*, _fes__PropertyIsGreaterThan*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__fes__PropertyIsGreaterThan(struct soap*, const char *URL, _fes__PropertyIsGreaterThan*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__fes__PropertyIsGreaterThan(struct soap*, const char *URL, _fes__PropertyIsGreaterThan*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__fes__PropertyIsGreaterThan(struct soap*, const char *URL, _fes__PropertyIsGreaterThan*);
    soap_POST_recv__fes__PropertyIsGreaterThan(struct soap*, _fes__PropertyIsGreaterThan*);
    @endcode

  - <fes:PropertyIsLessThanOrEqualTo> @ref _fes__PropertyIsLessThanOrEqualTo
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__fes__PropertyIsLessThanOrEqualTo(struct soap*, _fes__PropertyIsLessThanOrEqualTo*);
    // Writer (returns SOAP_OK on success):
    soap_write__fes__PropertyIsLessThanOrEqualTo(struct soap*, _fes__PropertyIsLessThanOrEqualTo*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__fes__PropertyIsLessThanOrEqualTo(struct soap*, const char *URL, _fes__PropertyIsLessThanOrEqualTo*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__fes__PropertyIsLessThanOrEqualTo(struct soap*, const char *URL, _fes__PropertyIsLessThanOrEqualTo*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__fes__PropertyIsLessThanOrEqualTo(struct soap*, const char *URL, _fes__PropertyIsLessThanOrEqualTo*);
    soap_POST_recv__fes__PropertyIsLessThanOrEqualTo(struct soap*, _fes__PropertyIsLessThanOrEqualTo*);
    @endcode

  - <fes:PropertyIsGreaterThanOrEqualTo> @ref _fes__PropertyIsGreaterThanOrEqualTo
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__fes__PropertyIsGreaterThanOrEqualTo(struct soap*, _fes__PropertyIsGreaterThanOrEqualTo*);
    // Writer (returns SOAP_OK on success):
    soap_write__fes__PropertyIsGreaterThanOrEqualTo(struct soap*, _fes__PropertyIsGreaterThanOrEqualTo*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__fes__PropertyIsGreaterThanOrEqualTo(struct soap*, const char *URL, _fes__PropertyIsGreaterThanOrEqualTo*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__fes__PropertyIsGreaterThanOrEqualTo(struct soap*, const char *URL, _fes__PropertyIsGreaterThanOrEqualTo*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__fes__PropertyIsGreaterThanOrEqualTo(struct soap*, const char *URL, _fes__PropertyIsGreaterThanOrEqualTo*);
    soap_POST_recv__fes__PropertyIsGreaterThanOrEqualTo(struct soap*, _fes__PropertyIsGreaterThanOrEqualTo*);
    @endcode

  - <fes:PropertyIsLike> @ref _fes__PropertyIsLike
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__fes__PropertyIsLike(struct soap*, _fes__PropertyIsLike*);
    // Writer (returns SOAP_OK on success):
    soap_write__fes__PropertyIsLike(struct soap*, _fes__PropertyIsLike*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__fes__PropertyIsLike(struct soap*, const char *URL, _fes__PropertyIsLike*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__fes__PropertyIsLike(struct soap*, const char *URL, _fes__PropertyIsLike*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__fes__PropertyIsLike(struct soap*, const char *URL, _fes__PropertyIsLike*);
    soap_POST_recv__fes__PropertyIsLike(struct soap*, _fes__PropertyIsLike*);
    @endcode

  - <fes:PropertyIsNull> @ref _fes__PropertyIsNull
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__fes__PropertyIsNull(struct soap*, _fes__PropertyIsNull*);
    // Writer (returns SOAP_OK on success):
    soap_write__fes__PropertyIsNull(struct soap*, _fes__PropertyIsNull*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__fes__PropertyIsNull(struct soap*, const char *URL, _fes__PropertyIsNull*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__fes__PropertyIsNull(struct soap*, const char *URL, _fes__PropertyIsNull*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__fes__PropertyIsNull(struct soap*, const char *URL, _fes__PropertyIsNull*);
    soap_POST_recv__fes__PropertyIsNull(struct soap*, _fes__PropertyIsNull*);
    @endcode

  - <fes:PropertyIsNil> @ref _fes__PropertyIsNil
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__fes__PropertyIsNil(struct soap*, _fes__PropertyIsNil*);
    // Writer (returns SOAP_OK on success):
    soap_write__fes__PropertyIsNil(struct soap*, _fes__PropertyIsNil*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__fes__PropertyIsNil(struct soap*, const char *URL, _fes__PropertyIsNil*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__fes__PropertyIsNil(struct soap*, const char *URL, _fes__PropertyIsNil*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__fes__PropertyIsNil(struct soap*, const char *URL, _fes__PropertyIsNil*);
    soap_POST_recv__fes__PropertyIsNil(struct soap*, _fes__PropertyIsNil*);
    @endcode

  - <fes:PropertyIsBetween> @ref _fes__PropertyIsBetween
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__fes__PropertyIsBetween(struct soap*, _fes__PropertyIsBetween*);
    // Writer (returns SOAP_OK on success):
    soap_write__fes__PropertyIsBetween(struct soap*, _fes__PropertyIsBetween*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__fes__PropertyIsBetween(struct soap*, const char *URL, _fes__PropertyIsBetween*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__fes__PropertyIsBetween(struct soap*, const char *URL, _fes__PropertyIsBetween*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__fes__PropertyIsBetween(struct soap*, const char *URL, _fes__PropertyIsBetween*);
    soap_POST_recv__fes__PropertyIsBetween(struct soap*, _fes__PropertyIsBetween*);
    @endcode

  - <fes:spatialOps> (use wsdl2h option -g to auto-generate type _fes__spatialOps)

  - <fes:Equals> @ref _fes__Equals
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__fes__Equals(struct soap*, _fes__Equals*);
    // Writer (returns SOAP_OK on success):
    soap_write__fes__Equals(struct soap*, _fes__Equals*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__fes__Equals(struct soap*, const char *URL, _fes__Equals*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__fes__Equals(struct soap*, const char *URL, _fes__Equals*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__fes__Equals(struct soap*, const char *URL, _fes__Equals*);
    soap_POST_recv__fes__Equals(struct soap*, _fes__Equals*);
    @endcode

  - <fes:Disjoint> @ref _fes__Disjoint
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__fes__Disjoint(struct soap*, _fes__Disjoint*);
    // Writer (returns SOAP_OK on success):
    soap_write__fes__Disjoint(struct soap*, _fes__Disjoint*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__fes__Disjoint(struct soap*, const char *URL, _fes__Disjoint*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__fes__Disjoint(struct soap*, const char *URL, _fes__Disjoint*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__fes__Disjoint(struct soap*, const char *URL, _fes__Disjoint*);
    soap_POST_recv__fes__Disjoint(struct soap*, _fes__Disjoint*);
    @endcode

  - <fes:Touches> @ref _fes__Touches
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__fes__Touches(struct soap*, _fes__Touches*);
    // Writer (returns SOAP_OK on success):
    soap_write__fes__Touches(struct soap*, _fes__Touches*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__fes__Touches(struct soap*, const char *URL, _fes__Touches*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__fes__Touches(struct soap*, const char *URL, _fes__Touches*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__fes__Touches(struct soap*, const char *URL, _fes__Touches*);
    soap_POST_recv__fes__Touches(struct soap*, _fes__Touches*);
    @endcode

  - <fes:Within> @ref _fes__Within
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__fes__Within(struct soap*, _fes__Within*);
    // Writer (returns SOAP_OK on success):
    soap_write__fes__Within(struct soap*, _fes__Within*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__fes__Within(struct soap*, const char *URL, _fes__Within*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__fes__Within(struct soap*, const char *URL, _fes__Within*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__fes__Within(struct soap*, const char *URL, _fes__Within*);
    soap_POST_recv__fes__Within(struct soap*, _fes__Within*);
    @endcode

  - <fes:Overlaps> @ref _fes__Overlaps
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__fes__Overlaps(struct soap*, _fes__Overlaps*);
    // Writer (returns SOAP_OK on success):
    soap_write__fes__Overlaps(struct soap*, _fes__Overlaps*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__fes__Overlaps(struct soap*, const char *URL, _fes__Overlaps*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__fes__Overlaps(struct soap*, const char *URL, _fes__Overlaps*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__fes__Overlaps(struct soap*, const char *URL, _fes__Overlaps*);
    soap_POST_recv__fes__Overlaps(struct soap*, _fes__Overlaps*);
    @endcode

  - <fes:Crosses> @ref _fes__Crosses
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__fes__Crosses(struct soap*, _fes__Crosses*);
    // Writer (returns SOAP_OK on success):
    soap_write__fes__Crosses(struct soap*, _fes__Crosses*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__fes__Crosses(struct soap*, const char *URL, _fes__Crosses*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__fes__Crosses(struct soap*, const char *URL, _fes__Crosses*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__fes__Crosses(struct soap*, const char *URL, _fes__Crosses*);
    soap_POST_recv__fes__Crosses(struct soap*, _fes__Crosses*);
    @endcode

  - <fes:Intersects> @ref _fes__Intersects
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__fes__Intersects(struct soap*, _fes__Intersects*);
    // Writer (returns SOAP_OK on success):
    soap_write__fes__Intersects(struct soap*, _fes__Intersects*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__fes__Intersects(struct soap*, const char *URL, _fes__Intersects*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__fes__Intersects(struct soap*, const char *URL, _fes__Intersects*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__fes__Intersects(struct soap*, const char *URL, _fes__Intersects*);
    soap_POST_recv__fes__Intersects(struct soap*, _fes__Intersects*);
    @endcode

  - <fes:Contains> @ref _fes__Contains
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__fes__Contains(struct soap*, _fes__Contains*);
    // Writer (returns SOAP_OK on success):
    soap_write__fes__Contains(struct soap*, _fes__Contains*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__fes__Contains(struct soap*, const char *URL, _fes__Contains*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__fes__Contains(struct soap*, const char *URL, _fes__Contains*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__fes__Contains(struct soap*, const char *URL, _fes__Contains*);
    soap_POST_recv__fes__Contains(struct soap*, _fes__Contains*);
    @endcode

  - <fes:DWithin> @ref _fes__DWithin
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__fes__DWithin(struct soap*, _fes__DWithin*);
    // Writer (returns SOAP_OK on success):
    soap_write__fes__DWithin(struct soap*, _fes__DWithin*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__fes__DWithin(struct soap*, const char *URL, _fes__DWithin*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__fes__DWithin(struct soap*, const char *URL, _fes__DWithin*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__fes__DWithin(struct soap*, const char *URL, _fes__DWithin*);
    soap_POST_recv__fes__DWithin(struct soap*, _fes__DWithin*);
    @endcode

  - <fes:Beyond> @ref _fes__Beyond
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__fes__Beyond(struct soap*, _fes__Beyond*);
    // Writer (returns SOAP_OK on success):
    soap_write__fes__Beyond(struct soap*, _fes__Beyond*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__fes__Beyond(struct soap*, const char *URL, _fes__Beyond*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__fes__Beyond(struct soap*, const char *URL, _fes__Beyond*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__fes__Beyond(struct soap*, const char *URL, _fes__Beyond*);
    soap_POST_recv__fes__Beyond(struct soap*, _fes__Beyond*);
    @endcode

  - <fes:BBOX> @ref _fes__BBOX
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__fes__BBOX(struct soap*, _fes__BBOX*);
    // Writer (returns SOAP_OK on success):
    soap_write__fes__BBOX(struct soap*, _fes__BBOX*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__fes__BBOX(struct soap*, const char *URL, _fes__BBOX*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__fes__BBOX(struct soap*, const char *URL, _fes__BBOX*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__fes__BBOX(struct soap*, const char *URL, _fes__BBOX*);
    soap_POST_recv__fes__BBOX(struct soap*, _fes__BBOX*);
    @endcode

  - <fes:temporalOps> (use wsdl2h option -g to auto-generate type _fes__temporalOps)

  - <fes:After> @ref _fes__After
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__fes__After(struct soap*, _fes__After*);
    // Writer (returns SOAP_OK on success):
    soap_write__fes__After(struct soap*, _fes__After*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__fes__After(struct soap*, const char *URL, _fes__After*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__fes__After(struct soap*, const char *URL, _fes__After*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__fes__After(struct soap*, const char *URL, _fes__After*);
    soap_POST_recv__fes__After(struct soap*, _fes__After*);
    @endcode

  - <fes:Before> @ref _fes__Before
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__fes__Before(struct soap*, _fes__Before*);
    // Writer (returns SOAP_OK on success):
    soap_write__fes__Before(struct soap*, _fes__Before*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__fes__Before(struct soap*, const char *URL, _fes__Before*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__fes__Before(struct soap*, const char *URL, _fes__Before*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__fes__Before(struct soap*, const char *URL, _fes__Before*);
    soap_POST_recv__fes__Before(struct soap*, _fes__Before*);
    @endcode

  - <fes:Begins> @ref _fes__Begins
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__fes__Begins(struct soap*, _fes__Begins*);
    // Writer (returns SOAP_OK on success):
    soap_write__fes__Begins(struct soap*, _fes__Begins*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__fes__Begins(struct soap*, const char *URL, _fes__Begins*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__fes__Begins(struct soap*, const char *URL, _fes__Begins*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__fes__Begins(struct soap*, const char *URL, _fes__Begins*);
    soap_POST_recv__fes__Begins(struct soap*, _fes__Begins*);
    @endcode

  - <fes:BegunBy> @ref _fes__BegunBy
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__fes__BegunBy(struct soap*, _fes__BegunBy*);
    // Writer (returns SOAP_OK on success):
    soap_write__fes__BegunBy(struct soap*, _fes__BegunBy*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__fes__BegunBy(struct soap*, const char *URL, _fes__BegunBy*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__fes__BegunBy(struct soap*, const char *URL, _fes__BegunBy*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__fes__BegunBy(struct soap*, const char *URL, _fes__BegunBy*);
    soap_POST_recv__fes__BegunBy(struct soap*, _fes__BegunBy*);
    @endcode

  - <fes:TContains> @ref _fes__TContains
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__fes__TContains(struct soap*, _fes__TContains*);
    // Writer (returns SOAP_OK on success):
    soap_write__fes__TContains(struct soap*, _fes__TContains*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__fes__TContains(struct soap*, const char *URL, _fes__TContains*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__fes__TContains(struct soap*, const char *URL, _fes__TContains*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__fes__TContains(struct soap*, const char *URL, _fes__TContains*);
    soap_POST_recv__fes__TContains(struct soap*, _fes__TContains*);
    @endcode

  - <fes:During> @ref _fes__During
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__fes__During(struct soap*, _fes__During*);
    // Writer (returns SOAP_OK on success):
    soap_write__fes__During(struct soap*, _fes__During*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__fes__During(struct soap*, const char *URL, _fes__During*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__fes__During(struct soap*, const char *URL, _fes__During*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__fes__During(struct soap*, const char *URL, _fes__During*);
    soap_POST_recv__fes__During(struct soap*, _fes__During*);
    @endcode

  - <fes:EndedBy> @ref _fes__EndedBy
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__fes__EndedBy(struct soap*, _fes__EndedBy*);
    // Writer (returns SOAP_OK on success):
    soap_write__fes__EndedBy(struct soap*, _fes__EndedBy*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__fes__EndedBy(struct soap*, const char *URL, _fes__EndedBy*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__fes__EndedBy(struct soap*, const char *URL, _fes__EndedBy*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__fes__EndedBy(struct soap*, const char *URL, _fes__EndedBy*);
    soap_POST_recv__fes__EndedBy(struct soap*, _fes__EndedBy*);
    @endcode

  - <fes:Ends> @ref _fes__Ends
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__fes__Ends(struct soap*, _fes__Ends*);
    // Writer (returns SOAP_OK on success):
    soap_write__fes__Ends(struct soap*, _fes__Ends*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__fes__Ends(struct soap*, const char *URL, _fes__Ends*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__fes__Ends(struct soap*, const char *URL, _fes__Ends*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__fes__Ends(struct soap*, const char *URL, _fes__Ends*);
    soap_POST_recv__fes__Ends(struct soap*, _fes__Ends*);
    @endcode

  - <fes:TEquals> @ref _fes__TEquals
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__fes__TEquals(struct soap*, _fes__TEquals*);
    // Writer (returns SOAP_OK on success):
    soap_write__fes__TEquals(struct soap*, _fes__TEquals*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__fes__TEquals(struct soap*, const char *URL, _fes__TEquals*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__fes__TEquals(struct soap*, const char *URL, _fes__TEquals*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__fes__TEquals(struct soap*, const char *URL, _fes__TEquals*);
    soap_POST_recv__fes__TEquals(struct soap*, _fes__TEquals*);
    @endcode

  - <fes:Meets> @ref _fes__Meets
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__fes__Meets(struct soap*, _fes__Meets*);
    // Writer (returns SOAP_OK on success):
    soap_write__fes__Meets(struct soap*, _fes__Meets*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__fes__Meets(struct soap*, const char *URL, _fes__Meets*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__fes__Meets(struct soap*, const char *URL, _fes__Meets*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__fes__Meets(struct soap*, const char *URL, _fes__Meets*);
    soap_POST_recv__fes__Meets(struct soap*, _fes__Meets*);
    @endcode

  - <fes:MetBy> @ref _fes__MetBy
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__fes__MetBy(struct soap*, _fes__MetBy*);
    // Writer (returns SOAP_OK on success):
    soap_write__fes__MetBy(struct soap*, _fes__MetBy*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__fes__MetBy(struct soap*, const char *URL, _fes__MetBy*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__fes__MetBy(struct soap*, const char *URL, _fes__MetBy*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__fes__MetBy(struct soap*, const char *URL, _fes__MetBy*);
    soap_POST_recv__fes__MetBy(struct soap*, _fes__MetBy*);
    @endcode

  - <fes:TOverlaps> @ref _fes__TOverlaps
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__fes__TOverlaps(struct soap*, _fes__TOverlaps*);
    // Writer (returns SOAP_OK on success):
    soap_write__fes__TOverlaps(struct soap*, _fes__TOverlaps*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__fes__TOverlaps(struct soap*, const char *URL, _fes__TOverlaps*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__fes__TOverlaps(struct soap*, const char *URL, _fes__TOverlaps*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__fes__TOverlaps(struct soap*, const char *URL, _fes__TOverlaps*);
    soap_POST_recv__fes__TOverlaps(struct soap*, _fes__TOverlaps*);
    @endcode

  - <fes:OverlappedBy> @ref _fes__OverlappedBy
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__fes__OverlappedBy(struct soap*, _fes__OverlappedBy*);
    // Writer (returns SOAP_OK on success):
    soap_write__fes__OverlappedBy(struct soap*, _fes__OverlappedBy*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__fes__OverlappedBy(struct soap*, const char *URL, _fes__OverlappedBy*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__fes__OverlappedBy(struct soap*, const char *URL, _fes__OverlappedBy*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__fes__OverlappedBy(struct soap*, const char *URL, _fes__OverlappedBy*);
    soap_POST_recv__fes__OverlappedBy(struct soap*, _fes__OverlappedBy*);
    @endcode

  - <fes:AnyInteracts> @ref _fes__AnyInteracts
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__fes__AnyInteracts(struct soap*, _fes__AnyInteracts*);
    // Writer (returns SOAP_OK on success):
    soap_write__fes__AnyInteracts(struct soap*, _fes__AnyInteracts*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__fes__AnyInteracts(struct soap*, const char *URL, _fes__AnyInteracts*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__fes__AnyInteracts(struct soap*, const char *URL, _fes__AnyInteracts*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__fes__AnyInteracts(struct soap*, const char *URL, _fes__AnyInteracts*);
    soap_POST_recv__fes__AnyInteracts(struct soap*, _fes__AnyInteracts*);
    @endcode

  - <fes:logicOps> (use wsdl2h option -g to auto-generate type _fes__logicOps)

  - <fes:And> @ref _fes__And
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__fes__And(struct soap*, _fes__And*);
    // Writer (returns SOAP_OK on success):
    soap_write__fes__And(struct soap*, _fes__And*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__fes__And(struct soap*, const char *URL, _fes__And*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__fes__And(struct soap*, const char *URL, _fes__And*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__fes__And(struct soap*, const char *URL, _fes__And*);
    soap_POST_recv__fes__And(struct soap*, _fes__And*);
    @endcode

  - <fes:Or> @ref _fes__Or
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__fes__Or(struct soap*, _fes__Or*);
    // Writer (returns SOAP_OK on success):
    soap_write__fes__Or(struct soap*, _fes__Or*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__fes__Or(struct soap*, const char *URL, _fes__Or*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__fes__Or(struct soap*, const char *URL, _fes__Or*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__fes__Or(struct soap*, const char *URL, _fes__Or*);
    soap_POST_recv__fes__Or(struct soap*, _fes__Or*);
    @endcode

  - <fes:Not> @ref _fes__Not
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__fes__Not(struct soap*, _fes__Not*);
    // Writer (returns SOAP_OK on success):
    soap_write__fes__Not(struct soap*, _fes__Not*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__fes__Not(struct soap*, const char *URL, _fes__Not*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__fes__Not(struct soap*, const char *URL, _fes__Not*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__fes__Not(struct soap*, const char *URL, _fes__Not*);
    soap_POST_recv__fes__Not(struct soap*, _fes__Not*);
    @endcode

  - <fes:extensionOps> (use wsdl2h option -g to auto-generate type _fes__extensionOps)

  - <fes:_Id> (use wsdl2h option -g to auto-generate type _fes___x005fId)

  - <fes:ResourceId> @ref _fes__ResourceId
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__fes__ResourceId(struct soap*, _fes__ResourceId*);
    // Writer (returns SOAP_OK on success):
    soap_write__fes__ResourceId(struct soap*, _fes__ResourceId*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__fes__ResourceId(struct soap*, const char *URL, _fes__ResourceId*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__fes__ResourceId(struct soap*, const char *URL, _fes__ResourceId*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__fes__ResourceId(struct soap*, const char *URL, _fes__ResourceId*);
    soap_POST_recv__fes__ResourceId(struct soap*, _fes__ResourceId*);
    @endcode

  - <fes:expression> (use wsdl2h option -g to auto-generate type _fes__expression)

  - <fes:ValueReference> @ref _fes__ValueReference
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__fes__ValueReference(struct soap*, _fes__ValueReference*);
    // Writer (returns SOAP_OK on success):
    soap_write__fes__ValueReference(struct soap*, _fes__ValueReference*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__fes__ValueReference(struct soap*, const char *URL, _fes__ValueReference*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__fes__ValueReference(struct soap*, const char *URL, _fes__ValueReference*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__fes__ValueReference(struct soap*, const char *URL, _fes__ValueReference*);
    soap_POST_recv__fes__ValueReference(struct soap*, _fes__ValueReference*);
    @endcode

  - <fes:Function> @ref _fes__Function
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__fes__Function(struct soap*, _fes__Function*);
    // Writer (returns SOAP_OK on success):
    soap_write__fes__Function(struct soap*, _fes__Function*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__fes__Function(struct soap*, const char *URL, _fes__Function*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__fes__Function(struct soap*, const char *URL, _fes__Function*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__fes__Function(struct soap*, const char *URL, _fes__Function*);
    soap_POST_recv__fes__Function(struct soap*, _fes__Function*);
    @endcode

  - <fes:Literal> @ref _fes__Literal
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__fes__Literal(struct soap*, _fes__Literal*);
    // Writer (returns SOAP_OK on success):
    soap_write__fes__Literal(struct soap*, _fes__Literal*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__fes__Literal(struct soap*, const char *URL, _fes__Literal*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__fes__Literal(struct soap*, const char *URL, _fes__Literal*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__fes__Literal(struct soap*, const char *URL, _fes__Literal*);
    soap_POST_recv__fes__Literal(struct soap*, _fes__Literal*);
    @endcode

  - <fes:Filter_Capabilities> @ref _fes__Filter_x005fCapabilities
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__fes__Filter_x005fCapabilities(struct soap*, _fes__Filter_x005fCapabilities*);
    // Writer (returns SOAP_OK on success):
    soap_write__fes__Filter_x005fCapabilities(struct soap*, _fes__Filter_x005fCapabilities*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__fes__Filter_x005fCapabilities(struct soap*, const char *URL, _fes__Filter_x005fCapabilities*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__fes__Filter_x005fCapabilities(struct soap*, const char *URL, _fes__Filter_x005fCapabilities*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__fes__Filter_x005fCapabilities(struct soap*, const char *URL, _fes__Filter_x005fCapabilities*);
    soap_POST_recv__fes__Filter_x005fCapabilities(struct soap*, _fes__Filter_x005fCapabilities*);
    @endcode

  - <fes:LogicalOperators> @ref _fes__LogicalOperators
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__fes__LogicalOperators(struct soap*, _fes__LogicalOperators*);
    // Writer (returns SOAP_OK on success):
    soap_write__fes__LogicalOperators(struct soap*, _fes__LogicalOperators*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__fes__LogicalOperators(struct soap*, const char *URL, _fes__LogicalOperators*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__fes__LogicalOperators(struct soap*, const char *URL, _fes__LogicalOperators*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__fes__LogicalOperators(struct soap*, const char *URL, _fes__LogicalOperators*);
    soap_POST_recv__fes__LogicalOperators(struct soap*, _fes__LogicalOperators*);
    @endcode

  - <fes:SortBy> @ref _fes__SortBy
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__fes__SortBy(struct soap*, _fes__SortBy*);
    // Writer (returns SOAP_OK on success):
    soap_write__fes__SortBy(struct soap*, _fes__SortBy*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__fes__SortBy(struct soap*, const char *URL, _fes__SortBy*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__fes__SortBy(struct soap*, const char *URL, _fes__SortBy*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__fes__SortBy(struct soap*, const char *URL, _fes__SortBy*);
    soap_POST_recv__fes__SortBy(struct soap*, _fes__SortBy*);
    @endcode

*/

/**

@section icommon Top-level root elements of schema "http://inspire.ec.europa.eu/schemas/common/1.0"

  - <icommon:SpatialDataService> @ref _icommon__SpatialDataService
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__icommon__SpatialDataService(struct soap*, _icommon__SpatialDataService*);
    // Writer (returns SOAP_OK on success):
    soap_write__icommon__SpatialDataService(struct soap*, _icommon__SpatialDataService*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__icommon__SpatialDataService(struct soap*, const char *URL, _icommon__SpatialDataService*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__icommon__SpatialDataService(struct soap*, const char *URL, _icommon__SpatialDataService*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__icommon__SpatialDataService(struct soap*, const char *URL, _icommon__SpatialDataService*);
    soap_POST_recv__icommon__SpatialDataService(struct soap*, _icommon__SpatialDataService*);
    @endcode

  - <icommon:SpatialDataSet> @ref _icommon__SpatialDataSet
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__icommon__SpatialDataSet(struct soap*, _icommon__SpatialDataSet*);
    // Writer (returns SOAP_OK on success):
    soap_write__icommon__SpatialDataSet(struct soap*, _icommon__SpatialDataSet*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__icommon__SpatialDataSet(struct soap*, const char *URL, _icommon__SpatialDataSet*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__icommon__SpatialDataSet(struct soap*, const char *URL, _icommon__SpatialDataSet*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__icommon__SpatialDataSet(struct soap*, const char *URL, _icommon__SpatialDataSet*);
    soap_POST_recv__icommon__SpatialDataSet(struct soap*, _icommon__SpatialDataSet*);
    @endcode

  - <icommon:SpatialDataSetSeries> @ref _icommon__SpatialDataSetSeries
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__icommon__SpatialDataSetSeries(struct soap*, _icommon__SpatialDataSetSeries*);
    // Writer (returns SOAP_OK on success):
    soap_write__icommon__SpatialDataSetSeries(struct soap*, _icommon__SpatialDataSetSeries*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__icommon__SpatialDataSetSeries(struct soap*, const char *URL, _icommon__SpatialDataSetSeries*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__icommon__SpatialDataSetSeries(struct soap*, const char *URL, _icommon__SpatialDataSetSeries*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__icommon__SpatialDataSetSeries(struct soap*, const char *URL, _icommon__SpatialDataSetSeries*);
    soap_POST_recv__icommon__SpatialDataSetSeries(struct soap*, _icommon__SpatialDataSetSeries*);
    @endcode

  - <icommon:SpatialDataServiceType> @ref _icommon__SpatialDataServiceType
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__icommon__SpatialDataServiceType(struct soap*, _icommon__SpatialDataServiceType*);
    // Writer (returns SOAP_OK on success):
    soap_write__icommon__SpatialDataServiceType(struct soap*, _icommon__SpatialDataServiceType*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__icommon__SpatialDataServiceType(struct soap*, const char *URL, _icommon__SpatialDataServiceType*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__icommon__SpatialDataServiceType(struct soap*, const char *URL, _icommon__SpatialDataServiceType*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__icommon__SpatialDataServiceType(struct soap*, const char *URL, _icommon__SpatialDataServiceType*);
    soap_POST_recv__icommon__SpatialDataServiceType(struct soap*, _icommon__SpatialDataServiceType*);
    @endcode

  - <icommon:TemporalExtentElement> (use wsdl2h option -g to auto-generate type _icommon__TemporalExtentElement)

  - <icommon:IndividualDate> @ref _icommon__IndividualDate
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__icommon__IndividualDate(struct soap*, _icommon__IndividualDate*);
    // Writer (returns SOAP_OK on success):
    soap_write__icommon__IndividualDate(struct soap*, _icommon__IndividualDate*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__icommon__IndividualDate(struct soap*, const char *URL, _icommon__IndividualDate*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__icommon__IndividualDate(struct soap*, const char *URL, _icommon__IndividualDate*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__icommon__IndividualDate(struct soap*, const char *URL, _icommon__IndividualDate*);
    soap_POST_recv__icommon__IndividualDate(struct soap*, _icommon__IndividualDate*);
    @endcode

  - <icommon:IntervalOfDates> @ref _icommon__IntervalOfDates
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__icommon__IntervalOfDates(struct soap*, _icommon__IntervalOfDates*);
    // Writer (returns SOAP_OK on success):
    soap_write__icommon__IntervalOfDates(struct soap*, _icommon__IntervalOfDates*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__icommon__IntervalOfDates(struct soap*, const char *URL, _icommon__IntervalOfDates*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__icommon__IntervalOfDates(struct soap*, const char *URL, _icommon__IntervalOfDates*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__icommon__IntervalOfDates(struct soap*, const char *URL, _icommon__IntervalOfDates*);
    soap_POST_recv__icommon__IntervalOfDates(struct soap*, _icommon__IntervalOfDates*);
    @endcode

  - <icommon:DiscoveryService> @ref _icommon__DiscoveryService
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__icommon__DiscoveryService(struct soap*, _icommon__DiscoveryService*);
    // Writer (returns SOAP_OK on success):
    soap_write__icommon__DiscoveryService(struct soap*, _icommon__DiscoveryService*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__icommon__DiscoveryService(struct soap*, const char *URL, _icommon__DiscoveryService*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__icommon__DiscoveryService(struct soap*, const char *URL, _icommon__DiscoveryService*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__icommon__DiscoveryService(struct soap*, const char *URL, _icommon__DiscoveryService*);
    soap_POST_recv__icommon__DiscoveryService(struct soap*, _icommon__DiscoveryService*);
    @endcode

  - <icommon:ViewService> @ref _icommon__ViewService
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__icommon__ViewService(struct soap*, _icommon__ViewService*);
    // Writer (returns SOAP_OK on success):
    soap_write__icommon__ViewService(struct soap*, _icommon__ViewService*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__icommon__ViewService(struct soap*, const char *URL, _icommon__ViewService*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__icommon__ViewService(struct soap*, const char *URL, _icommon__ViewService*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__icommon__ViewService(struct soap*, const char *URL, _icommon__ViewService*);
    soap_POST_recv__icommon__ViewService(struct soap*, _icommon__ViewService*);
    @endcode

  - <icommon:DownloadService> @ref _icommon__DownloadService
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__icommon__DownloadService(struct soap*, _icommon__DownloadService*);
    // Writer (returns SOAP_OK on success):
    soap_write__icommon__DownloadService(struct soap*, _icommon__DownloadService*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__icommon__DownloadService(struct soap*, const char *URL, _icommon__DownloadService*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__icommon__DownloadService(struct soap*, const char *URL, _icommon__DownloadService*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__icommon__DownloadService(struct soap*, const char *URL, _icommon__DownloadService*);
    soap_POST_recv__icommon__DownloadService(struct soap*, _icommon__DownloadService*);
    @endcode

  - <icommon:TransformationService> @ref _icommon__TransformationService
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__icommon__TransformationService(struct soap*, _icommon__TransformationService*);
    // Writer (returns SOAP_OK on success):
    soap_write__icommon__TransformationService(struct soap*, _icommon__TransformationService*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__icommon__TransformationService(struct soap*, const char *URL, _icommon__TransformationService*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__icommon__TransformationService(struct soap*, const char *URL, _icommon__TransformationService*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__icommon__TransformationService(struct soap*, const char *URL, _icommon__TransformationService*);
    soap_POST_recv__icommon__TransformationService(struct soap*, _icommon__TransformationService*);
    @endcode

  - <icommon:InvokeService> @ref _icommon__InvokeService
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__icommon__InvokeService(struct soap*, _icommon__InvokeService*);
    // Writer (returns SOAP_OK on success):
    soap_write__icommon__InvokeService(struct soap*, _icommon__InvokeService*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__icommon__InvokeService(struct soap*, const char *URL, _icommon__InvokeService*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__icommon__InvokeService(struct soap*, const char *URL, _icommon__InvokeService*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__icommon__InvokeService(struct soap*, const char *URL, _icommon__InvokeService*);
    soap_POST_recv__icommon__InvokeService(struct soap*, _icommon__InvokeService*);
    @endcode

  - <icommon:OtherService> @ref _icommon__OtherService
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__icommon__OtherService(struct soap*, _icommon__OtherService*);
    // Writer (returns SOAP_OK on success):
    soap_write__icommon__OtherService(struct soap*, _icommon__OtherService*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__icommon__OtherService(struct soap*, const char *URL, _icommon__OtherService*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__icommon__OtherService(struct soap*, const char *URL, _icommon__OtherService*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__icommon__OtherService(struct soap*, const char *URL, _icommon__OtherService*);
    soap_POST_recv__icommon__OtherService(struct soap*, _icommon__OtherService*);
    @endcode

*/

/* End of ws-inspire-wfs2.h */
