namespace plu {
/* PlannedLandUse_v3.0.h
   Generated by wsdl2h 2.8.15 from PlannedLandUse_v3.0.xsd and ../typemap.dat
   2014-06-06 21:35:22 GMT

   DO NOT INCLUDE THIS FILE DIRECTLY INTO YOUR PROJECT BUILDS
   USE THE soapcpp2-GENERATED SOURCE CODE FILES FOR YOUR PROJECT BUILDS

   gSOAP XML Web services tools.
   Copyright (C) 2000-2013 Robert van Engelen, Genivia Inc. All Rights Reserved.
   Part of this software is released under one of the following licenses:
   GPL or Genivia's license for commercial use.
*/

/** @page page_notes Usage Notes

NOTE:

 - Run soapcpp2 on PlannedLandUse_v3.0.h to generate the SOAP/XML processing logic.
   Use soapcpp2 -I to specify paths for #import
   To build with STL, 'stlvector.h' is imported from 'import' dir in package.
   Use soapcpp2 -j to generate improved proxy and server classes.
 - Use wsdl2h -c and -s to generate pure C code or C++ code without STL.
 - Use 'typemap.dat' to control namespace bindings and type mappings.
   It is strongly recommended to customize the names of the namespace prefixes
   generated by wsdl2h. To do so, modify the prefix bindings in the Namespaces
   section below and add the modified lines to 'typemap.dat' to rerun wsdl2h.
 - Use Doxygen (www.doxygen.org) on this file to generate documentation.
 - Use wsdl2h -R to generate REST operations.
 - Use wsdl2h -nname to use name as the base namespace prefix instead of 'ns'.
 - Use wsdl2h -Nname for service prefix and produce multiple service bindings
 - Use wsdl2h -d to enable DOM support for xsd:anyType.
 - Use wsdl2h -g to auto-generate readers and writers for root elements.
 - Use wsdl2h -b to auto-generate bi-directional operations (duplex ops).
 - Struct/class members serialized as XML attributes are annotated with a '@'.
 - Struct/class members that have a special role are annotated with a '$'.

WARNING:

   DO NOT INCLUDE THIS ANNOTATED FILE DIRECTLY IN YOUR PROJECT SOURCE CODE.
   USE THE FILES GENERATED BY soapcpp2 FOR YOUR PROJECT'S SOURCE CODE:
   THE soapStub.h FILE CONTAINS THIS CONTENT WITHOUT ANNOTATIONS.

LICENSE:

@verbatim
--------------------------------------------------------------------------------
gSOAP XML Web services tools
Copyright (C) 2000-2013, Robert van Engelen, Genivia Inc. All Rights Reserved.

This software is released under one of the following two licenses:
GPL or Genivia's license for commercial use.
--------------------------------------------------------------------------------
GPL license.

This program is free software; you can redistribute it and/or modify it under
the terms of the GNU General Public License as published by the Free Software
Foundation; either version 2 of the License, or (at your option) any later
version.

This program is distributed in the hope that it will be useful, but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
PARTICULAR PURPOSE. See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with
this program; if not, write to the Free Software Foundation, Inc., 59 Temple
Place, Suite 330, Boston, MA 02111-1307 USA

Author contact information:
engelen@genivia.com / engelen@acm.org

This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial-use license is available from Genivia, Inc., contact@genivia.com
--------------------------------------------------------------------------------
@endverbatim

*/


//gsoapopt w

/******************************************************************************\
 *                                                                            *
 * Definitions                                                                *
 *   http://inspire.ec.europa.eu/schemas/plu/3.0                              *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Import                                                                     *
 *                                                                            *
\******************************************************************************/


// STL vector containers (use option -s to remove STL dependency)
#import "stlvector.h"
#import "xsd.h"	// import primitive XSD types.

/******************************************************************************\
 *                                                                            *
 * Schema Namespaces                                                          *
 *                                                                            *
\******************************************************************************/


/* NOTE:

It is strongly recommended to customize the names of the namespace prefixes
generated by wsdl2h. To do so, modify the prefix bindings below and add the
modified lines to typemap.dat to rerun wsdl2h:

plu = "http://inspire.ec.europa.eu/schemas/plu/3.0"
base = "http://inspire.ec.europa.eu/schemas/base/3.3"
base2 = "http://inspire.ec.europa.eu/schemas/base2/1.0"
lunom = "http://inspire.ec.europa.eu/schemas/lunom/3.0"
sc = "http://www.interactive-instruments.de/ShapeChange/AppInfo"
gml = "http://www.opengis.net/gml/3.2"
gmd = "http://www.isotc211.org/2005/gmd"
xlink = "http://www.w3.org/1999/xlink"
gco = "http://www.isotc211.org/2005/gco"
gss = "http://www.isotc211.org/2005/gss"
gts = "http://www.isotc211.org/2005/gts"
gsr = "http://www.isotc211.org/2005/gsr"

*/

/// @brief -- Name -- planned land use
#define SOAP_NAMESPACE_OF_plu	"http://inspire.ec.europa.eu/schemas/plu/3.0"
//gsoap plu   schema namespace:	http://inspire.ec.europa.eu/schemas/plu/3.0
//gsoap plu   schema elementForm:	qualified
//gsoap plu   schema attributeForm:	unqualified

/// @brief -- Definition -- schema for basic types used by multiple themes
#define SOAP_NAMESPACE_OF_base	"http://inspire.ec.europa.eu/schemas/base/3.3"
//gsoap base  schema namespace:	http://inspire.ec.europa.eu/schemas/base/3.3
//gsoap base  schema elementForm:	qualified
//gsoap base  schema attributeForm:	unqualified

/// @brief -- Definition -- schema for additional basic types used by multiple themes -- Description -- NOTE The additional types specified with Annex II/III data specifications are placed in a separate schema to maintain backwards compatibility.
#define SOAP_NAMESPACE_OF_base2	"http://inspire.ec.europa.eu/schemas/base2/1.0"
//gsoap base2 schema namespace:	http://inspire.ec.europa.eu/schemas/base2/1.0
//gsoap base2 schema elementForm:	qualified
//gsoap base2 schema attributeForm:	unqualified

/// @brief -- Name -- land use nomenclature
#define SOAP_NAMESPACE_OF_lunom	"http://inspire.ec.europa.eu/schemas/lunom/3.0"
//gsoap lunom schema namespace:	http://inspire.ec.europa.eu/schemas/lunom/3.0
//gsoap lunom schema elementForm:	qualified
//gsoap lunom schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_sc	"http://www.interactive-instruments.de/ShapeChange/AppInfo"
//gsoap sc    schema namespace:	http://www.interactive-instruments.de/ShapeChange/AppInfo
//gsoap sc    schema elementForm:	qualified
//gsoap sc    schema attributeForm:	unqualified

/// @brief GML is an OGC Standard. Copyright (c) 2007,2010 Open Geospatial Consortium. To obtain additional rights of use, visit http://www.opengeospatial.org/legal/ .
#define SOAP_NAMESPACE_OF_gml	"http://www.opengis.net/gml/3.2"
//gsoap gml   schema namespace:	http://www.opengis.net/gml/3.2
//gsoap gml   schema elementForm:	qualified
//gsoap gml   schema attributeForm:	unqualified

/// @brief Geographic MetaData (GMD) extensible markup language is a component of the XML Schema Implementation of Geographic Information Metadata documented in ISO/TS 19139:2007. GMD includes all the definitions of http://www.isotc211.org/2005/gmd namespace. The root document of this namespace is the file gmd.xsd.
#define SOAP_NAMESPACE_OF_gmd	"http://www.isotc211.org/2005/gmd"
//gsoap gmd   schema namespace:	http://www.isotc211.org/2005/gmd
//gsoap gmd   schema elementForm:	qualified
//gsoap gmd   schema attributeForm:	unqualified

/// @brief This schema document provides attribute declarations and attribute group, complex type and simple type definitions which can be used in the construction of user schemas to define the structure of particular linking constructs, e.g. <xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xl="http://www.w3.org/1999/xlink"> <xs:import namespace="http://www.w3.org/1999/xlink" location="http://www.w3.org/1999/xlink.xsd"> <xs:element name="mySimple"> <xs:complexType> ... <xs:attributeGroup ref="xl:simpleAttrs"/> ... </xs:complexType> </xs:element> ... </xs:schema>
#define SOAP_NAMESPACE_OF_xlink	"http://www.w3.org/1999/xlink"
//gsoap xlink schema namespace:	http://www.w3.org/1999/xlink
//gsoap xlink schema form:	unqualified

/// @brief Geographic COmmon (GCO) extensible markup language is a component of the XML Schema Implementation of Geographic Information Metadata documented in ISO/TS 19139:2007. GCO includes all the definitions of http://www.isotc211.org/2005/gco namespace. The root document of this namespace is the file gco.xsd.
#define SOAP_NAMESPACE_OF_gco	"http://www.isotc211.org/2005/gco"
//gsoap gco   schema namespace:	http://www.isotc211.org/2005/gco
//gsoap gco   schema elementForm:	qualified
//gsoap gco   schema attributeForm:	unqualified

/// @brief Geographic Spatial Schema (GSS) extensible markup language is a component of the XML Schema Implementation of Geographic Information Metadata documented in ISO/TS 19139:2007. GSS includes all the definitions of http://www.isotc211.org/2005/gss namespace. The root document of this namespace is the file gss.xsd.
#define SOAP_NAMESPACE_OF_gss	"http://www.isotc211.org/2005/gss"
//gsoap gss   schema namespace:	http://www.isotc211.org/2005/gss
//gsoap gss   schema elementForm:	qualified
//gsoap gss   schema attributeForm:	unqualified

/// @brief Geographic Temporal Schema (GTS) extensible markup language is a component of the XML Schema Implementation of Geographic Information Metadata documented in ISO/TS 19139:2007. GTS includes all the definitions of http://www.isotc211.org/2005/gts namespace. The root document of this namespace is the file gts.xsd.
#define SOAP_NAMESPACE_OF_gts	"http://www.isotc211.org/2005/gts"
//gsoap gts   schema namespace:	http://www.isotc211.org/2005/gts
//gsoap gts   schema elementForm:	qualified
//gsoap gts   schema attributeForm:	unqualified

/// @brief Geographic Spatial Referencing (GSR) extensible markup language is a component of the XML Schema Implementation of Geographic Information Metadata documented in ISO/TS 19139:2007. GSR includes all the definitions of http://www.isotc211.org/2005/gsr namespace. The root document of this namespace is the file gsr.xsd.
#define SOAP_NAMESPACE_OF_gsr	"http://www.isotc211.org/2005/gsr"
//gsoap gsr   schema namespace:	http://www.isotc211.org/2005/gsr
//gsoap gsr   schema elementForm:	qualified
//gsoap gsr   schema attributeForm:	unqualified
//  xsd.h: should define type xsd__anyType*

/******************************************************************************\
 *                                                                            *
 * Built-in Schema Types and Top-Level Elements and Attributes                *
 *                                                                            *
\******************************************************************************/


/// Built-in type "xs:QName".
//  (declaration of xsd__QName removed by option -m)

//  xsd.h: typemap override of type xsd__QName with xsd__QName

//  xsd.h: typemap override of type xsd__boolean with bool

//  xsd.h: typemap override of type xsd__dateTime with time_t

//  xsd.h: typemap override of type xsd__double with double

//  xsd.h: typemap override of type xsd__integer with long

//  xsd.h: typemap override of type xsd__string with std::string

//  xsd.h: should define type xsd__ID

//  xsd.h: should define type xsd__NCName

//  xsd.h: should define type xsd__Name

//  xsd.h: should define type xsd__anyURI

//  xsd.h: should define type xsd__date

//  xsd.h: should define type xsd__decimal

//  xsd.h: should define type xsd__duration

//  xsd.h: should define type xsd__nonNegativeInteger

//  xsd.h: should define type xsd__positiveInteger

//  xsd.h: should define type xsd__time

//  xsd.h: should define type xsd__token
//  xsd.h: should define attribute _xml__lang

/******************************************************************************\
 *                                                                            *
 * Forward Declarations                                                       *
 *                                                                            *
\******************************************************************************/



//  Forward declaration of class plu__ZoningElementType.
class plu__ZoningElementType;

//  Forward declaration of class plu__ZoningElementPropertyType.
class plu__ZoningElementPropertyType;

//  Forward declaration of class plu__OfficialDocumentationType.
class plu__OfficialDocumentationType;

//  Forward declaration of class plu__OfficialDocumentationPropertyType.
class plu__OfficialDocumentationPropertyType;

//  Forward declaration of class plu__DimensioningIndicationMeasureValueType.
class plu__DimensioningIndicationMeasureValueType;

//  Forward declaration of class plu__DimensioningIndicationMeasureValuePropertyType.
class plu__DimensioningIndicationMeasureValuePropertyType;

//  Forward declaration of class plu__DimensioningIndicationIntegerValueType.
class plu__DimensioningIndicationIntegerValueType;

//  Forward declaration of class plu__DimensioningIndicationIntegerValuePropertyType.
class plu__DimensioningIndicationIntegerValuePropertyType;

//  Forward declaration of class plu__DimensioningIndicationCharacterValueType.
class plu__DimensioningIndicationCharacterValueType;

//  Forward declaration of class plu__DimensioningIndicationCharacterValuePropertyType.
class plu__DimensioningIndicationCharacterValuePropertyType;

//  Forward declaration of class plu__SupplementaryRegulationType.
class plu__SupplementaryRegulationType;

//  Forward declaration of class plu__SupplementaryRegulationPropertyType.
class plu__SupplementaryRegulationPropertyType;

//  Forward declaration of class plu__DimensioningIndicationValueType.
class plu__DimensioningIndicationValueType;

//  Forward declaration of class plu__DimensioningIndicationValuePropertyType.
class plu__DimensioningIndicationValuePropertyType;

//  Forward declaration of class plu__SpatialPlanType.
class plu__SpatialPlanType;

//  Forward declaration of class plu__SpatialPlanPropertyType.
class plu__SpatialPlanPropertyType;

//  Forward declaration of class plu__DimensioningIndicationRealValueType.
class plu__DimensioningIndicationRealValueType;

//  Forward declaration of class plu__DimensioningIndicationRealValuePropertyType.
class plu__DimensioningIndicationRealValuePropertyType;

//  Forward declaration of class plu__OrdinanceValueType.
class plu__OrdinanceValueType;

//  Forward declaration of class plu__OrdinanceValuePropertyType.
class plu__OrdinanceValuePropertyType;

//  Forward declaration of class plu__BackgroundMapValueType.
class plu__BackgroundMapValueType;

//  Forward declaration of class plu__BackgroundMapValuePropertyType.
class plu__BackgroundMapValuePropertyType;

//  Forward declaration of class base__SpatialDataSetType.
class base__SpatialDataSetType;

//  Forward declaration of class base__SpatialDataSetPropertyType.
class base__SpatialDataSetPropertyType;

//  Forward declaration of class base__IdentifierType.
class base__IdentifierType;

//  Forward declaration of class base__IdentifierPropertyType.
class base__IdentifierPropertyType;

//  Forward declaration of class base2__OfficialJournalInformationType.
class base2__OfficialJournalInformationType;

//  Forward declaration of class base2__OfficialJournalInformationPropertyType.
class base2__OfficialJournalInformationPropertyType;

//  Forward declaration of class base2__LegislationCitationType.
class base2__LegislationCitationType;

//  Forward declaration of class base2__LegislationCitationPropertyType.
class base2__LegislationCitationPropertyType;

//  Forward declaration of class base2__ContactType.
class base2__ContactType;

//  Forward declaration of class base2__ContactPropertyType.
class base2__ContactPropertyType;

//  Forward declaration of class base2__RelatedPartyType.
class base2__RelatedPartyType;

//  Forward declaration of class base2__RelatedPartyPropertyType.
class base2__RelatedPartyPropertyType;

//  Forward declaration of class base2__DocumentCitationType.
class base2__DocumentCitationType;

//  Forward declaration of class base2__DocumentCitationPropertyType.
class base2__DocumentCitationPropertyType;

//  Forward declaration of class base2__ThematicIdentifierType.
class base2__ThematicIdentifierType;

//  Forward declaration of class base2__ThematicIdentifierPropertyType.
class base2__ThematicIdentifierPropertyType;

//  Forward declaration of class lunom__HILUCSPresenceType.
class lunom__HILUCSPresenceType;

//  Forward declaration of class lunom__HILUCSPresencePropertyType.
class lunom__HILUCSPresencePropertyType;

//  Forward declaration of class lunom__SpecificPercentageType.
class lunom__SpecificPercentageType;

//  Forward declaration of class lunom__SpecificPercentagePropertyType.
class lunom__SpecificPercentagePropertyType;

//  Forward declaration of class lunom__SpecificPresenceType.
class lunom__SpecificPresenceType;

//  Forward declaration of class lunom__SpecificPresencePropertyType.
class lunom__SpecificPresencePropertyType;

//  Forward declaration of class lunom__HILUCSPercentageType.
class lunom__HILUCSPercentageType;

//  Forward declaration of class lunom__HILUCSPercentagePropertyType.
class lunom__HILUCSPercentagePropertyType;

//  Forward declaration of class _sc__taggedValue.
class _sc__taggedValue;

//  Forward declaration of class gml__DynamicFeatureType.
class gml__DynamicFeatureType;

//  Forward declaration of class gml__DynamicFeatureCollectionType.
class gml__DynamicFeatureCollectionType;

//  Forward declaration of class gml__DynamicFeatureMemberType.
class gml__DynamicFeatureMemberType;

//  Forward declaration of class gml__AbstractTimeSliceType.
class gml__AbstractTimeSliceType;

//  Forward declaration of class gml__HistoryPropertyType.
class gml__HistoryPropertyType;

//  Forward declaration of class gml__AbstractTopologyType.
class gml__AbstractTopologyType;

//  Forward declaration of class gml__AbstractTopoPrimitiveType.
class gml__AbstractTopoPrimitiveType;

//  Forward declaration of class gml__NodeOrEdgePropertyType.
class gml__NodeOrEdgePropertyType;

//  Forward declaration of class gml__NodePropertyType.
class gml__NodePropertyType;

//  Forward declaration of class gml__FaceOrTopoSolidPropertyType.
class gml__FaceOrTopoSolidPropertyType;

//  Forward declaration of class gml__TopoSolidPropertyType.
class gml__TopoSolidPropertyType;

//  Forward declaration of class gml__NodeType.
class gml__NodeType;

//  Forward declaration of class gml__DirectedNodePropertyType.
class gml__DirectedNodePropertyType;

//  Forward declaration of class gml__EdgeType.
class gml__EdgeType;

//  Forward declaration of class gml__DirectedEdgePropertyType.
class gml__DirectedEdgePropertyType;

//  Forward declaration of class gml__FaceType.
class gml__FaceType;

//  Forward declaration of class gml__DirectedFacePropertyType.
class gml__DirectedFacePropertyType;

//  Forward declaration of class gml__TopoSolidType.
class gml__TopoSolidType;

//  Forward declaration of class gml__DirectedTopoSolidPropertyType.
class gml__DirectedTopoSolidPropertyType;

//  Forward declaration of class gml__TopoPointType.
class gml__TopoPointType;

//  Forward declaration of class gml__TopoPointPropertyType.
class gml__TopoPointPropertyType;

//  Forward declaration of class gml__TopoCurveType.
class gml__TopoCurveType;

//  Forward declaration of class gml__TopoCurvePropertyType.
class gml__TopoCurvePropertyType;

//  Forward declaration of class gml__TopoSurfaceType.
class gml__TopoSurfaceType;

//  Forward declaration of class gml__TopoSurfacePropertyType.
class gml__TopoSurfacePropertyType;

//  Forward declaration of class gml__TopoVolumeType.
class gml__TopoVolumeType;

//  Forward declaration of class gml__TopoVolumePropertyType.
class gml__TopoVolumePropertyType;

//  Forward declaration of class gml__TopoComplexType.
class gml__TopoComplexType;

//  Forward declaration of class gml__TopoPrimitiveMemberType.
class gml__TopoPrimitiveMemberType;

//  Forward declaration of class gml__TopoPrimitiveArrayAssociationType.
class gml__TopoPrimitiveArrayAssociationType;

//  Forward declaration of class gml__TopoComplexPropertyType.
class gml__TopoComplexPropertyType;

//  Forward declaration of class gml__GeometricComplexType.
class gml__GeometricComplexType;

//  Forward declaration of class gml__GeometricComplexPropertyType.
class gml__GeometricComplexPropertyType;

//  Forward declaration of class gml__CompositeCurveType.
class gml__CompositeCurveType;

//  Forward declaration of class gml__CompositeSurfaceType.
class gml__CompositeSurfaceType;

//  Forward declaration of class gml__CompositeSolidType.
class gml__CompositeSolidType;

//  Forward declaration of class gml__AbstractGeometricAggregateType.
class gml__AbstractGeometricAggregateType;

//  Forward declaration of class gml__MultiGeometryType.
class gml__MultiGeometryType;

//  Forward declaration of class gml__MultiGeometryPropertyType.
class gml__MultiGeometryPropertyType;

//  Forward declaration of class gml__MultiPointType.
class gml__MultiPointType;

//  Forward declaration of class gml__MultiPointPropertyType.
class gml__MultiPointPropertyType;

//  Forward declaration of class gml__MultiCurveType.
class gml__MultiCurveType;

//  Forward declaration of class gml__MultiCurvePropertyType.
class gml__MultiCurvePropertyType;

//  Forward declaration of class gml__MultiSurfaceType.
class gml__MultiSurfaceType;

//  Forward declaration of class gml__MultiSurfacePropertyType.
class gml__MultiSurfacePropertyType;

//  Forward declaration of class gml__MultiSolidType.
class gml__MultiSolidType;

//  Forward declaration of class gml__MultiSolidPropertyType.
class gml__MultiSolidPropertyType;

//  Forward declaration of class gml__CurveType.
class gml__CurveType;

//  Forward declaration of class gml__OrientableCurveType.
class gml__OrientableCurveType;

//  Forward declaration of class gml__AbstractCurveSegmentType.
class gml__AbstractCurveSegmentType;

//  Forward declaration of class gml__CurveSegmentArrayPropertyType.
class gml__CurveSegmentArrayPropertyType;

//  Forward declaration of class gml__LineStringSegmentType.
class gml__LineStringSegmentType;

//  Forward declaration of class gml__ArcStringType.
class gml__ArcStringType;

//  Forward declaration of class gml__ArcType.
class gml__ArcType;

//  Forward declaration of class gml__CircleType.
class gml__CircleType;

//  Forward declaration of class gml__ArcStringByBulgeType.
class gml__ArcStringByBulgeType;

//  Forward declaration of class gml__ArcByBulgeType.
class gml__ArcByBulgeType;

//  Forward declaration of class gml__ArcByCenterPointType.
class gml__ArcByCenterPointType;

//  Forward declaration of class gml__CircleByCenterPointType.
class gml__CircleByCenterPointType;

//  Forward declaration of class gml__CubicSplineType.
class gml__CubicSplineType;

//  Forward declaration of class gml__BSplineType.
class gml__BSplineType;

//  Forward declaration of class gml__KnotType.
class gml__KnotType;

//  Forward declaration of class gml__KnotPropertyType.
class gml__KnotPropertyType;

//  Forward declaration of class gml__BezierType.
class gml__BezierType;

//  Forward declaration of class gml__OffsetCurveType.
class gml__OffsetCurveType;

//  Forward declaration of class gml__AffinePlacementType.
class gml__AffinePlacementType;

//  Forward declaration of class gml__ClothoidType.
class gml__ClothoidType;

//  Forward declaration of class gml__GeodesicStringType.
class gml__GeodesicStringType;

//  Forward declaration of class gml__GeodesicType.
class gml__GeodesicType;

//  Forward declaration of class gml__SurfaceType.
class gml__SurfaceType;

//  Forward declaration of class gml__OrientableSurfaceType.
class gml__OrientableSurfaceType;

//  Forward declaration of class gml__AbstractSurfacePatchType.
class gml__AbstractSurfacePatchType;

//  Forward declaration of class gml__SurfacePatchArrayPropertyType.
class gml__SurfacePatchArrayPropertyType;

//  Forward declaration of class gml__PolygonPatchType.
class gml__PolygonPatchType;

//  Forward declaration of class gml__TriangleType.
class gml__TriangleType;

//  Forward declaration of class gml__RectangleType.
class gml__RectangleType;

//  Forward declaration of class gml__RingType.
class gml__RingType;

//  Forward declaration of class gml__RingPropertyType.
class gml__RingPropertyType;

//  Forward declaration of class gml__AbstractParametricCurveSurfaceType.
class gml__AbstractParametricCurveSurfaceType;

//  Forward declaration of class gml__AbstractGriddedSurfaceType.
class gml__AbstractGriddedSurfaceType;

//  Forward declaration of class gml__ConeType.
class gml__ConeType;

//  Forward declaration of class gml__CylinderType.
class gml__CylinderType;

//  Forward declaration of class gml__SphereType.
class gml__SphereType;

//  Forward declaration of class gml__TinType.
class gml__TinType;

//  Forward declaration of class gml__LineStringSegmentArrayPropertyType.
class gml__LineStringSegmentArrayPropertyType;

//  Forward declaration of class gml__AbstractSolidType.
class gml__AbstractSolidType;

//  Forward declaration of class gml__SolidPropertyType.
class gml__SolidPropertyType;

//  Forward declaration of class gml__SolidArrayPropertyType.
class gml__SolidArrayPropertyType;

//  Forward declaration of class gml__SolidType.
class gml__SolidType;

//  Forward declaration of class gml__ShellType.
class gml__ShellType;

//  Forward declaration of class gml__ShellPropertyType.
class gml__ShellPropertyType;

//  Forward declaration of class gml__AbstractSurfaceType.
class gml__AbstractSurfaceType;

//  Forward declaration of class gml__SurfacePropertyType.
class gml__SurfacePropertyType;

//  Forward declaration of class gml__SurfaceArrayPropertyType.
class gml__SurfaceArrayPropertyType;

//  Forward declaration of class gml__PolygonType.
class gml__PolygonType;

//  Forward declaration of class gml__AbstractRingType.
class gml__AbstractRingType;

//  Forward declaration of class gml__AbstractRingPropertyType.
class gml__AbstractRingPropertyType;

//  Forward declaration of class gml__LinearRingType.
class gml__LinearRingType;

//  Forward declaration of class gml__LinearRingPropertyType.
class gml__LinearRingPropertyType;

//  Forward declaration of class gml__AbstractGeometryType.
class gml__AbstractGeometryType;

//  Forward declaration of class gml__GeometryPropertyType.
class gml__GeometryPropertyType;

//  Forward declaration of class gml__GeometryArrayPropertyType.
class gml__GeometryArrayPropertyType;

//  Forward declaration of class gml__DirectPositionType.
class gml__DirectPositionType;

//  Forward declaration of class gml__DirectPositionListType.
class gml__DirectPositionListType;

//  Forward declaration of class gml__VectorType.
class gml__VectorType;

//  Forward declaration of class gml__EnvelopeType.
class gml__EnvelopeType;

//  Forward declaration of class gml__AbstractGeometricPrimitiveType.
class gml__AbstractGeometricPrimitiveType;

//  Forward declaration of class gml__GeometricPrimitivePropertyType.
class gml__GeometricPrimitivePropertyType;

//  Forward declaration of class gml__PointType.
class gml__PointType;

//  Forward declaration of class gml__PointPropertyType.
class gml__PointPropertyType;

//  Forward declaration of class gml__PointArrayPropertyType.
class gml__PointArrayPropertyType;

//  Forward declaration of class gml__AbstractCurveType.
class gml__AbstractCurveType;

//  Forward declaration of class gml__CurvePropertyType.
class gml__CurvePropertyType;

//  Forward declaration of class gml__CurveArrayPropertyType.
class gml__CurveArrayPropertyType;

//  Forward declaration of class gml__LineStringType.
class gml__LineStringType;

//  Forward declaration of class gml__LengthType.
class gml__LengthType;

//  Forward declaration of class gml__ScaleType.
class gml__ScaleType;

//  Forward declaration of class gml__TimeType.
class gml__TimeType;

//  Forward declaration of class gml__GridLengthType.
class gml__GridLengthType;

//  Forward declaration of class gml__AreaType.
class gml__AreaType;

//  Forward declaration of class gml__VolumeType.
class gml__VolumeType;

//  Forward declaration of class gml__SpeedType.
class gml__SpeedType;

//  Forward declaration of class gml__AngleType.
class gml__AngleType;

//  Forward declaration of class gml__UnitOfMeasureType.
class gml__UnitOfMeasureType;

//  Forward declaration of class gml__UnitDefinitionType.
class gml__UnitDefinitionType;

//  Forward declaration of class gml__BaseUnitType.
class gml__BaseUnitType;

//  Forward declaration of class gml__DerivedUnitType.
class gml__DerivedUnitType;

//  Forward declaration of class gml__DerivationUnitTermType.
class gml__DerivationUnitTermType;

//  Forward declaration of class gml__ConventionalUnitType.
class gml__ConventionalUnitType;

//  Forward declaration of class gml__ConversionToPreferredUnitType.
class gml__ConversionToPreferredUnitType;

//  Forward declaration of class gml__FormulaType.
class gml__FormulaType;

//  Forward declaration of class gml__DefinitionBaseType.
class gml__DefinitionBaseType;

//  Forward declaration of class gml__DefinitionType.
class gml__DefinitionType;

//  Forward declaration of class gml__DictionaryType.
class gml__DictionaryType;

//  Forward declaration of class gml__DictionaryEntryType.
class gml__DictionaryEntryType;

//  Forward declaration of class gml__AbstractGMLType.
class gml__AbstractGMLType;

//  Forward declaration of class gml__AssociationRoleType.
class gml__AssociationRoleType;

//  Forward declaration of class gml__ReferenceType.
class gml__ReferenceType;

//  Forward declaration of class gml__InlinePropertyType.
class gml__InlinePropertyType;

//  Forward declaration of class gml__AbstractMemberType.
class gml__AbstractMemberType;

//  Forward declaration of class gml__AbstractMetadataPropertyType.
class gml__AbstractMetadataPropertyType;

//  Forward declaration of class gml__CodeType.
class gml__CodeType;

//  Forward declaration of class gml__CodeWithAuthorityType.
class gml__CodeWithAuthorityType;

//  Forward declaration of class gml__MeasureType.
class gml__MeasureType;

//  Forward declaration of class gml__CoordinatesType.
class gml__CoordinatesType;

//  Forward declaration of class gml__CodeListType.
class gml__CodeListType;

//  Forward declaration of class gml__CodeOrNilReasonListType.
class gml__CodeOrNilReasonListType;

//  Forward declaration of class gml__MeasureListType.
class gml__MeasureListType;

//  Forward declaration of class gml__MeasureOrNilReasonListType.
class gml__MeasureOrNilReasonListType;

//  Forward declaration of class gml__AbstractCoverageType.
class gml__AbstractCoverageType;

//  Forward declaration of class gml__DiscreteCoverageType.
class gml__DiscreteCoverageType;

//  Forward declaration of class gml__AbstractContinuousCoverageType.
class gml__AbstractContinuousCoverageType;

//  Forward declaration of class gml__DomainSetType.
class gml__DomainSetType;

//  Forward declaration of class gml__RangeSetType.
class gml__RangeSetType;

//  Forward declaration of class gml__DataBlockType.
class gml__DataBlockType;

//  Forward declaration of class gml__FileType.
class gml__FileType;

//  Forward declaration of class gml__CoverageFunctionType.
class gml__CoverageFunctionType;

//  Forward declaration of class gml__MappingRuleType.
class gml__MappingRuleType;

//  Forward declaration of class gml__GridFunctionType.
class gml__GridFunctionType;

//  Forward declaration of class gml__SequenceRuleType.
class gml__SequenceRuleType;

//  Forward declaration of class gml__AbstractFeatureType.
class gml__AbstractFeatureType;

//  Forward declaration of class gml__FeaturePropertyType.
class gml__FeaturePropertyType;

//  Forward declaration of class gml__BoundingShapeType.
class gml__BoundingShapeType;

//  Forward declaration of class gml__EnvelopeWithTimePeriodType.
class gml__EnvelopeWithTimePeriodType;

//  Forward declaration of class gml__AbstractFeatureMemberType.
class gml__AbstractFeatureMemberType;

//  Forward declaration of class gml__AbstractTimeObjectType.
class gml__AbstractTimeObjectType;

//  Forward declaration of class gml__AbstractTimePrimitiveType.
class gml__AbstractTimePrimitiveType;

//  Forward declaration of class gml__TimePrimitivePropertyType.
class gml__TimePrimitivePropertyType;

//  Forward declaration of class gml__RelatedTimeType.
class gml__RelatedTimeType;

//  Forward declaration of class gml__AbstractTimeComplexType.
class gml__AbstractTimeComplexType;

//  Forward declaration of class gml__AbstractTimeGeometricPrimitiveType.
class gml__AbstractTimeGeometricPrimitiveType;

//  Forward declaration of class gml__TimeInstantType.
class gml__TimeInstantType;

//  Forward declaration of class gml__TimeInstantPropertyType.
class gml__TimeInstantPropertyType;

//  Forward declaration of class gml__TimePeriodType.
class gml__TimePeriodType;

//  Forward declaration of class gml__TimePeriodPropertyType.
class gml__TimePeriodPropertyType;

//  Forward declaration of class gml__TimePositionType.
class gml__TimePositionType;

//  Forward declaration of class gml__TimeIntervalLengthType.
class gml__TimeIntervalLengthType;

//  Forward declaration of class gml__ValuePropertyType.
class gml__ValuePropertyType;

//  Forward declaration of class gml__ValueArrayPropertyType.
class gml__ValueArrayPropertyType;

//  Forward declaration of class gml__CompositeValueType.
class gml__CompositeValueType;

//  Forward declaration of class gml__ValueArrayType.
class gml__ValueArrayType;

//  Forward declaration of class gml__CategoryExtentType.
class gml__CategoryExtentType;

//  Forward declaration of class gml__QuantityExtentType.
class gml__QuantityExtentType;

//  Forward declaration of class gml__BooleanPropertyType.
class gml__BooleanPropertyType;

//  Forward declaration of class gml__CategoryPropertyType.
class gml__CategoryPropertyType;

//  Forward declaration of class gml__QuantityPropertyType.
class gml__QuantityPropertyType;

//  Forward declaration of class gml__CountPropertyType.
class gml__CountPropertyType;

//  Forward declaration of class gml__GridType.
class gml__GridType;

//  Forward declaration of class gml__GridLimitsType.
class gml__GridLimitsType;

//  Forward declaration of class gml__GridEnvelopeType.
class gml__GridEnvelopeType;

//  Forward declaration of class gml__RectifiedGridType.
class gml__RectifiedGridType;

//  Forward declaration of class gml__SingleCRSPropertyType.
class gml__SingleCRSPropertyType;

//  Forward declaration of class gml__AbstractGeneralDerivedCRSType.
class gml__AbstractGeneralDerivedCRSType;

//  Forward declaration of class gml__CompoundCRSType.
class gml__CompoundCRSType;

//  Forward declaration of class gml__CompoundCRSPropertyType.
class gml__CompoundCRSPropertyType;

//  Forward declaration of class gml__GeodeticCRSType.
class gml__GeodeticCRSType;

//  Forward declaration of class gml__GeodeticCRSPropertyType.
class gml__GeodeticCRSPropertyType;

//  Forward declaration of class gml__VerticalCRSType.
class gml__VerticalCRSType;

//  Forward declaration of class gml__VerticalCRSPropertyType.
class gml__VerticalCRSPropertyType;

//  Forward declaration of class gml__ProjectedCRSType.
class gml__ProjectedCRSType;

//  Forward declaration of class gml__ProjectedCRSPropertyType.
class gml__ProjectedCRSPropertyType;

//  Forward declaration of class gml__DerivedCRSType.
class gml__DerivedCRSType;

//  Forward declaration of class gml__DerivedCRSPropertyType.
class gml__DerivedCRSPropertyType;

//  Forward declaration of class gml__EngineeringCRSType.
class gml__EngineeringCRSType;

//  Forward declaration of class gml__EngineeringCRSPropertyType.
class gml__EngineeringCRSPropertyType;

//  Forward declaration of class gml__ImageCRSType.
class gml__ImageCRSType;

//  Forward declaration of class gml__ImageCRSPropertyType.
class gml__ImageCRSPropertyType;

//  Forward declaration of class gml__TemporalCRSType.
class gml__TemporalCRSType;

//  Forward declaration of class gml__TemporalCRSPropertyType.
class gml__TemporalCRSPropertyType;

//  Forward declaration of class gml__CoordinateSystemAxisType.
class gml__CoordinateSystemAxisType;

//  Forward declaration of class gml__CoordinateSystemAxisPropertyType.
class gml__CoordinateSystemAxisPropertyType;

//  Forward declaration of class gml__AbstractCoordinateSystemType.
class gml__AbstractCoordinateSystemType;

//  Forward declaration of class gml__CoordinateSystemPropertyType.
class gml__CoordinateSystemPropertyType;

//  Forward declaration of class gml__EllipsoidalCSType.
class gml__EllipsoidalCSType;

//  Forward declaration of class gml__EllipsoidalCSPropertyType.
class gml__EllipsoidalCSPropertyType;

//  Forward declaration of class gml__CartesianCSType.
class gml__CartesianCSType;

//  Forward declaration of class gml__CartesianCSPropertyType.
class gml__CartesianCSPropertyType;

//  Forward declaration of class gml__VerticalCSType.
class gml__VerticalCSType;

//  Forward declaration of class gml__VerticalCSPropertyType.
class gml__VerticalCSPropertyType;

//  Forward declaration of class gml__TimeCSType.
class gml__TimeCSType;

//  Forward declaration of class gml__TimeCSPropertyType.
class gml__TimeCSPropertyType;

//  Forward declaration of class gml__LinearCSType.
class gml__LinearCSType;

//  Forward declaration of class gml__LinearCSPropertyType.
class gml__LinearCSPropertyType;

//  Forward declaration of class gml__UserDefinedCSType.
class gml__UserDefinedCSType;

//  Forward declaration of class gml__UserDefinedCSPropertyType.
class gml__UserDefinedCSPropertyType;

//  Forward declaration of class gml__SphericalCSType.
class gml__SphericalCSType;

//  Forward declaration of class gml__SphericalCSPropertyType.
class gml__SphericalCSPropertyType;

//  Forward declaration of class gml__PolarCSType.
class gml__PolarCSType;

//  Forward declaration of class gml__PolarCSPropertyType.
class gml__PolarCSPropertyType;

//  Forward declaration of class gml__CylindricalCSType.
class gml__CylindricalCSType;

//  Forward declaration of class gml__CylindricalCSPropertyType.
class gml__CylindricalCSPropertyType;

//  Forward declaration of class gml__AffineCSType.
class gml__AffineCSType;

//  Forward declaration of class gml__AffineCSPropertyType.
class gml__AffineCSPropertyType;

//  Forward declaration of class gml__IdentifiedObjectType.
class gml__IdentifiedObjectType;

//  Forward declaration of class gml__AbstractCRSType.
class gml__AbstractCRSType;

//  Forward declaration of class gml__CRSPropertyType.
class gml__CRSPropertyType;

//  Forward declaration of class gml__AbstractDatumType.
class gml__AbstractDatumType;

//  Forward declaration of class gml__DatumPropertyType.
class gml__DatumPropertyType;

//  Forward declaration of class gml__GeodeticDatumType.
class gml__GeodeticDatumType;

//  Forward declaration of class gml__GeodeticDatumPropertyType.
class gml__GeodeticDatumPropertyType;

//  Forward declaration of class gml__EllipsoidType.
class gml__EllipsoidType;

//  Forward declaration of class gml__EllipsoidPropertyType.
class gml__EllipsoidPropertyType;

//  Forward declaration of class gml__PrimeMeridianType.
class gml__PrimeMeridianType;

//  Forward declaration of class gml__PrimeMeridianPropertyType.
class gml__PrimeMeridianPropertyType;

//  Forward declaration of class gml__EngineeringDatumType.
class gml__EngineeringDatumType;

//  Forward declaration of class gml__EngineeringDatumPropertyType.
class gml__EngineeringDatumPropertyType;

//  Forward declaration of class gml__ImageDatumType.
class gml__ImageDatumType;

//  Forward declaration of class gml__ImageDatumPropertyType.
class gml__ImageDatumPropertyType;

//  Forward declaration of class gml__VerticalDatumType.
class gml__VerticalDatumType;

//  Forward declaration of class gml__VerticalDatumPropertyType.
class gml__VerticalDatumPropertyType;

//  Forward declaration of class gml__TemporalDatumType.
class gml__TemporalDatumType;

//  Forward declaration of class gml__TemporalDatumBaseType.
class gml__TemporalDatumBaseType;

//  Forward declaration of class gml__TemporalDatumPropertyType.
class gml__TemporalDatumPropertyType;

//  Forward declaration of class gml__AbstractCoordinateOperationType.
class gml__AbstractCoordinateOperationType;

//  Forward declaration of class gml__CoordinateOperationPropertyType.
class gml__CoordinateOperationPropertyType;

//  Forward declaration of class gml__SingleOperationPropertyType.
class gml__SingleOperationPropertyType;

//  Forward declaration of class gml__AbstractGeneralConversionType.
class gml__AbstractGeneralConversionType;

//  Forward declaration of class gml__GeneralConversionPropertyType.
class gml__GeneralConversionPropertyType;

//  Forward declaration of class gml__AbstractGeneralTransformationType.
class gml__AbstractGeneralTransformationType;

//  Forward declaration of class gml__GeneralTransformationPropertyType.
class gml__GeneralTransformationPropertyType;

//  Forward declaration of class gml__ConcatenatedOperationType.
class gml__ConcatenatedOperationType;

//  Forward declaration of class gml__ConcatenatedOperationPropertyType.
class gml__ConcatenatedOperationPropertyType;

//  Forward declaration of class gml__PassThroughOperationType.
class gml__PassThroughOperationType;

//  Forward declaration of class gml__PassThroughOperationPropertyType.
class gml__PassThroughOperationPropertyType;

//  Forward declaration of class gml__ConversionType.
class gml__ConversionType;

//  Forward declaration of class gml__ConversionPropertyType.
class gml__ConversionPropertyType;

//  Forward declaration of class gml__TransformationType.
class gml__TransformationType;

//  Forward declaration of class gml__TransformationPropertyType.
class gml__TransformationPropertyType;

//  Forward declaration of class gml__AbstractGeneralParameterValueType.
class gml__AbstractGeneralParameterValueType;

//  Forward declaration of class gml__AbstractGeneralParameterValuePropertyType.
class gml__AbstractGeneralParameterValuePropertyType;

//  Forward declaration of class gml__ParameterValueType.
class gml__ParameterValueType;

//  Forward declaration of class gml__ParameterValueGroupType.
class gml__ParameterValueGroupType;

//  Forward declaration of class gml__OperationMethodType.
class gml__OperationMethodType;

//  Forward declaration of class gml__OperationMethodPropertyType.
class gml__OperationMethodPropertyType;

//  Forward declaration of class gml__AbstractGeneralOperationParameterType.
class gml__AbstractGeneralOperationParameterType;

//  Forward declaration of class gml__AbstractGeneralOperationParameterPropertyType.
class gml__AbstractGeneralOperationParameterPropertyType;

//  Forward declaration of class gml__OperationParameterType.
class gml__OperationParameterType;

//  Forward declaration of class gml__OperationParameterPropertyType.
class gml__OperationParameterPropertyType;

//  Forward declaration of class gml__OperationParameterGroupType.
class gml__OperationParameterGroupType;

//  Forward declaration of class gml__OperationParameterGroupPropertyType.
class gml__OperationParameterGroupPropertyType;

//  Forward declaration of class gml__ObservationType.
class gml__ObservationType;

//  Forward declaration of class gml__ProcedurePropertyType.
class gml__ProcedurePropertyType;

//  Forward declaration of class gml__TargetPropertyType.
class gml__TargetPropertyType;

//  Forward declaration of class gml__ResultType.
class gml__ResultType;

//  Forward declaration of class gml__DirectedObservationType.
class gml__DirectedObservationType;

//  Forward declaration of class gml__DirectedObservationAtDistanceType.
class gml__DirectedObservationAtDistanceType;

//  Forward declaration of class gml__DirectionPropertyType.
class gml__DirectionPropertyType;

//  Forward declaration of class gml__DirectionVectorType.
class gml__DirectionVectorType;

//  Forward declaration of class gml__DirectionDescriptionType.
class gml__DirectionDescriptionType;

//  Forward declaration of class gml__TimeReferenceSystemType.
class gml__TimeReferenceSystemType;

//  Forward declaration of class gml__TimeCoordinateSystemType.
class gml__TimeCoordinateSystemType;

//  Forward declaration of class gml__TimeCalendarType.
class gml__TimeCalendarType;

//  Forward declaration of class gml__TimeCalendarEraType.
class gml__TimeCalendarEraType;

//  Forward declaration of class gml__TimeCalendarPropertyType.
class gml__TimeCalendarPropertyType;

//  Forward declaration of class gml__TimeCalendarEraPropertyType.
class gml__TimeCalendarEraPropertyType;

//  Forward declaration of class gml__TimeClockType.
class gml__TimeClockType;

//  Forward declaration of class gml__TimeClockPropertyType.
class gml__TimeClockPropertyType;

//  Forward declaration of class gml__TimeOrdinalReferenceSystemType.
class gml__TimeOrdinalReferenceSystemType;

//  Forward declaration of class gml__TimeOrdinalEraType.
class gml__TimeOrdinalEraType;

//  Forward declaration of class gml__TimeOrdinalEraPropertyType.
class gml__TimeOrdinalEraPropertyType;

//  Forward declaration of class gml__AbstractTimeTopologyPrimitiveType.
class gml__AbstractTimeTopologyPrimitiveType;

//  Forward declaration of class gml__TimeTopologyPrimitivePropertyType.
class gml__TimeTopologyPrimitivePropertyType;

//  Forward declaration of class gml__TimeTopologyComplexType.
class gml__TimeTopologyComplexType;

//  Forward declaration of class gml__TimeTopologyComplexPropertyType.
class gml__TimeTopologyComplexPropertyType;

//  Forward declaration of class gml__TimeNodeType.
class gml__TimeNodeType;

//  Forward declaration of class gml__TimeNodePropertyType.
class gml__TimeNodePropertyType;

//  Forward declaration of class gml__TimeEdgeType.
class gml__TimeEdgeType;

//  Forward declaration of class gml__TimeEdgePropertyType.
class gml__TimeEdgePropertyType;

//  Forward declaration of class gml__OperationPropertyType.
class gml__OperationPropertyType;

//  Forward declaration of class gml__TemporalCSType.
class gml__TemporalCSType;

//  Forward declaration of class gml__TemporalCSPropertyType.
class gml__TemporalCSPropertyType;

//  Forward declaration of class gml__ObliqueCartesianCSType.
class gml__ObliqueCartesianCSType;

//  Forward declaration of class gml__ObliqueCartesianCSPropertyType.
class gml__ObliqueCartesianCSPropertyType;

//  Forward declaration of class gml__GeographicCRSType.
class gml__GeographicCRSType;

//  Forward declaration of class gml__GeographicCRSPropertyType.
class gml__GeographicCRSPropertyType;

//  Forward declaration of class gml__GeocentricCRSType.
class gml__GeocentricCRSType;

//  Forward declaration of class gml__GeocentricCRSPropertyType.
class gml__GeocentricCRSPropertyType;

//  Forward declaration of class gml__DMSAngleType.
class gml__DMSAngleType;

//  Forward declaration of class gml__DegreesType.
class gml__DegreesType;

//  Forward declaration of class gml__AngleChoiceType.
class gml__AngleChoiceType;

//  Forward declaration of class gml__ArrayAssociationType.
class gml__ArrayAssociationType;

//  Forward declaration of class gml__StringOrRefType.
class gml__StringOrRefType;

//  Forward declaration of class gml__BagType.
class gml__BagType;

//  Forward declaration of class gml__ArrayType.
class gml__ArrayType;

//  Forward declaration of class gml__MetaDataPropertyType.
class gml__MetaDataPropertyType;

//  Forward declaration of class gml__AbstractMetaDataType.
class gml__AbstractMetaDataType;

//  Forward declaration of class gml__GenericMetaDataType.
class gml__GenericMetaDataType;

//  Forward declaration of class gml__LocationPropertyType.
class gml__LocationPropertyType;

//  Forward declaration of class gml__PriorityLocationPropertyType.
class gml__PriorityLocationPropertyType;

//  Forward declaration of class gml__FeatureArrayPropertyType.
class gml__FeatureArrayPropertyType;

//  Forward declaration of class gml__BoundedFeatureType.
class gml__BoundedFeatureType;

//  Forward declaration of class gml__AbstractFeatureCollectionType.
class gml__AbstractFeatureCollectionType;

//  Forward declaration of class gml__FeatureCollectionType.
class gml__FeatureCollectionType;

//  Forward declaration of class gml__IndirectEntryType.
class gml__IndirectEntryType;

//  Forward declaration of class gml__DefinitionProxyType.
class gml__DefinitionProxyType;

//  Forward declaration of class gml__MovingObjectStatusType.
class gml__MovingObjectStatusType;

//  Forward declaration of class _gml__Boolean.
class _gml__Boolean;

//  Forward declaration of class _gml__Category.
class _gml__Category;

//  Forward declaration of class _gml__Count.
class _gml__Count;

//  Forward declaration of class _gml__Quantity.
class _gml__Quantity;

//  Forward declaration of class _gml__domainOfValidity.
class _gml__domainOfValidity;

//  Forward declaration of class _gml__secondDefiningParameter.
class _gml__secondDefiningParameter;

//  Forward declaration of class _gml__SecondDefiningParameter.
class _gml__SecondDefiningParameter;

//  Forward declaration of class _gml__coordinateOperationAccuracy.
class _gml__coordinateOperationAccuracy;

//  Forward declaration of class _gml__formulaCitation.
class _gml__formulaCitation;

//  Forward declaration of class gmd__AbstractDS_x005fAggregate_x005fType.
class gmd__AbstractDS_x005fAggregate_x005fType;

//  Forward declaration of class gmd__DS_x005fAggregate_x005fPropertyType.
class gmd__DS_x005fAggregate_x005fPropertyType;

//  Forward declaration of class gmd__DS_x005fDataSet_x005fType.
class gmd__DS_x005fDataSet_x005fType;

//  Forward declaration of class gmd__DS_x005fDataSet_x005fPropertyType.
class gmd__DS_x005fDataSet_x005fPropertyType;

//  Forward declaration of class gmd__DS_x005fOtherAggregate_x005fType.
class gmd__DS_x005fOtherAggregate_x005fType;

//  Forward declaration of class gmd__DS_x005fOtherAggregate_x005fPropertyType.
class gmd__DS_x005fOtherAggregate_x005fPropertyType;

//  Forward declaration of class gmd__DS_x005fSeries_x005fType.
class gmd__DS_x005fSeries_x005fType;

//  Forward declaration of class gmd__DS_x005fSeries_x005fPropertyType.
class gmd__DS_x005fSeries_x005fPropertyType;

//  Forward declaration of class gmd__DS_x005fInitiative_x005fType.
class gmd__DS_x005fInitiative_x005fType;

//  Forward declaration of class gmd__DS_x005fInitiative_x005fPropertyType.
class gmd__DS_x005fInitiative_x005fPropertyType;

//  Forward declaration of class gmd__DS_x005fPlatform_x005fType.
class gmd__DS_x005fPlatform_x005fType;

//  Forward declaration of class gmd__DS_x005fPlatform_x005fPropertyType.
class gmd__DS_x005fPlatform_x005fPropertyType;

//  Forward declaration of class gmd__DS_x005fSensor_x005fType.
class gmd__DS_x005fSensor_x005fType;

//  Forward declaration of class gmd__DS_x005fSensor_x005fPropertyType.
class gmd__DS_x005fSensor_x005fPropertyType;

//  Forward declaration of class gmd__DS_x005fProductionSeries_x005fType.
class gmd__DS_x005fProductionSeries_x005fType;

//  Forward declaration of class gmd__DS_x005fProductionSeries_x005fPropertyType.
class gmd__DS_x005fProductionSeries_x005fPropertyType;

//  Forward declaration of class gmd__DS_x005fStereoMate_x005fType.
class gmd__DS_x005fStereoMate_x005fType;

//  Forward declaration of class gmd__DS_x005fStereoMate_x005fPropertyType.
class gmd__DS_x005fStereoMate_x005fPropertyType;

//  Forward declaration of class gmd__MD_x005fMetadata_x005fType.
class gmd__MD_x005fMetadata_x005fType;

//  Forward declaration of class gmd__MD_x005fMetadata_x005fPropertyType.
class gmd__MD_x005fMetadata_x005fPropertyType;

//  Forward declaration of class gmd__MD_x005fGridSpatialRepresentation_x005fType.
class gmd__MD_x005fGridSpatialRepresentation_x005fType;

//  Forward declaration of class gmd__MD_x005fGridSpatialRepresentation_x005fPropertyType.
class gmd__MD_x005fGridSpatialRepresentation_x005fPropertyType;

//  Forward declaration of class gmd__MD_x005fVectorSpatialRepresentation_x005fType.
class gmd__MD_x005fVectorSpatialRepresentation_x005fType;

//  Forward declaration of class gmd__MD_x005fVectorSpatialRepresentation_x005fPropertyType.
class gmd__MD_x005fVectorSpatialRepresentation_x005fPropertyType;

//  Forward declaration of class gmd__AbstractMD_x005fSpatialRepresentation_x005fType.
class gmd__AbstractMD_x005fSpatialRepresentation_x005fType;

//  Forward declaration of class gmd__MD_x005fSpatialRepresentation_x005fPropertyType.
class gmd__MD_x005fSpatialRepresentation_x005fPropertyType;

//  Forward declaration of class gmd__MD_x005fGeoreferenceable_x005fType.
class gmd__MD_x005fGeoreferenceable_x005fType;

//  Forward declaration of class gmd__MD_x005fGeoreferenceable_x005fPropertyType.
class gmd__MD_x005fGeoreferenceable_x005fPropertyType;

//  Forward declaration of class gmd__MD_x005fDimension_x005fType.
class gmd__MD_x005fDimension_x005fType;

//  Forward declaration of class gmd__MD_x005fDimension_x005fPropertyType.
class gmd__MD_x005fDimension_x005fPropertyType;

//  Forward declaration of class gmd__MD_x005fGeorectified_x005fType.
class gmd__MD_x005fGeorectified_x005fType;

//  Forward declaration of class gmd__MD_x005fGeorectified_x005fPropertyType.
class gmd__MD_x005fGeorectified_x005fPropertyType;

//  Forward declaration of class gmd__MD_x005fGeometricObjects_x005fType.
class gmd__MD_x005fGeometricObjects_x005fType;

//  Forward declaration of class gmd__MD_x005fGeometricObjects_x005fPropertyType.
class gmd__MD_x005fGeometricObjects_x005fPropertyType;

//  Forward declaration of class gmd__MD_x005fPixelOrientationCode_x005fPropertyType.
class gmd__MD_x005fPixelOrientationCode_x005fPropertyType;

//  Forward declaration of class gmd__MD_x005fTopologyLevelCode_x005fPropertyType.
class gmd__MD_x005fTopologyLevelCode_x005fPropertyType;

//  Forward declaration of class gmd__MD_x005fGeometricObjectTypeCode_x005fPropertyType.
class gmd__MD_x005fGeometricObjectTypeCode_x005fPropertyType;

//  Forward declaration of class gmd__MD_x005fCellGeometryCode_x005fPropertyType.
class gmd__MD_x005fCellGeometryCode_x005fPropertyType;

//  Forward declaration of class gmd__MD_x005fDimensionNameTypeCode_x005fPropertyType.
class gmd__MD_x005fDimensionNameTypeCode_x005fPropertyType;

//  Forward declaration of class gmd__CI_x005fResponsibleParty_x005fType.
class gmd__CI_x005fResponsibleParty_x005fType;

//  Forward declaration of class gmd__CI_x005fResponsibleParty_x005fPropertyType.
class gmd__CI_x005fResponsibleParty_x005fPropertyType;

//  Forward declaration of class gmd__CI_x005fCitation_x005fType.
class gmd__CI_x005fCitation_x005fType;

//  Forward declaration of class gmd__CI_x005fCitation_x005fPropertyType.
class gmd__CI_x005fCitation_x005fPropertyType;

//  Forward declaration of class gmd__CI_x005fAddress_x005fType.
class gmd__CI_x005fAddress_x005fType;

//  Forward declaration of class gmd__CI_x005fAddress_x005fPropertyType.
class gmd__CI_x005fAddress_x005fPropertyType;

//  Forward declaration of class gmd__CI_x005fOnlineResource_x005fType.
class gmd__CI_x005fOnlineResource_x005fType;

//  Forward declaration of class gmd__CI_x005fOnlineResource_x005fPropertyType.
class gmd__CI_x005fOnlineResource_x005fPropertyType;

//  Forward declaration of class gmd__CI_x005fContact_x005fType.
class gmd__CI_x005fContact_x005fType;

//  Forward declaration of class gmd__CI_x005fContact_x005fPropertyType.
class gmd__CI_x005fContact_x005fPropertyType;

//  Forward declaration of class gmd__CI_x005fTelephone_x005fType.
class gmd__CI_x005fTelephone_x005fType;

//  Forward declaration of class gmd__CI_x005fTelephone_x005fPropertyType.
class gmd__CI_x005fTelephone_x005fPropertyType;

//  Forward declaration of class gmd__CI_x005fDate_x005fType.
class gmd__CI_x005fDate_x005fType;

//  Forward declaration of class gmd__CI_x005fDate_x005fPropertyType.
class gmd__CI_x005fDate_x005fPropertyType;

//  Forward declaration of class gmd__CI_x005fSeries_x005fType.
class gmd__CI_x005fSeries_x005fType;

//  Forward declaration of class gmd__CI_x005fSeries_x005fPropertyType.
class gmd__CI_x005fSeries_x005fPropertyType;

//  Forward declaration of class gmd__URL_x005fPropertyType.
class gmd__URL_x005fPropertyType;

//  Forward declaration of class gmd__CI_x005fRoleCode_x005fPropertyType.
class gmd__CI_x005fRoleCode_x005fPropertyType;

//  Forward declaration of class gmd__CI_x005fPresentationFormCode_x005fPropertyType.
class gmd__CI_x005fPresentationFormCode_x005fPropertyType;

//  Forward declaration of class gmd__CI_x005fOnLineFunctionCode_x005fPropertyType.
class gmd__CI_x005fOnLineFunctionCode_x005fPropertyType;

//  Forward declaration of class gmd__CI_x005fDateTypeCode_x005fPropertyType.
class gmd__CI_x005fDateTypeCode_x005fPropertyType;

//  Forward declaration of class gmd__RS_x005fIdentifier_x005fType.
class gmd__RS_x005fIdentifier_x005fType;

//  Forward declaration of class gmd__RS_x005fIdentifier_x005fPropertyType.
class gmd__RS_x005fIdentifier_x005fPropertyType;

//  Forward declaration of class gmd__MD_x005fReferenceSystem_x005fType.
class gmd__MD_x005fReferenceSystem_x005fType;

//  Forward declaration of class gmd__MD_x005fReferenceSystem_x005fPropertyType.
class gmd__MD_x005fReferenceSystem_x005fPropertyType;

//  Forward declaration of class gmd__MD_x005fIdentifier_x005fType.
class gmd__MD_x005fIdentifier_x005fType;

//  Forward declaration of class gmd__MD_x005fIdentifier_x005fPropertyType.
class gmd__MD_x005fIdentifier_x005fPropertyType;

//  Forward declaration of class gmd__AbstractRS_x005fReferenceSystem_x005fType.
class gmd__AbstractRS_x005fReferenceSystem_x005fType;

//  Forward declaration of class gmd__RS_x005fReferenceSystem_x005fPropertyType.
class gmd__RS_x005fReferenceSystem_x005fPropertyType;

//  Forward declaration of class gmd__EX_x005fTemporalExtent_x005fType.
class gmd__EX_x005fTemporalExtent_x005fType;

//  Forward declaration of class gmd__EX_x005fTemporalExtent_x005fPropertyType.
class gmd__EX_x005fTemporalExtent_x005fPropertyType;

//  Forward declaration of class gmd__EX_x005fVerticalExtent_x005fType.
class gmd__EX_x005fVerticalExtent_x005fType;

//  Forward declaration of class gmd__EX_x005fVerticalExtent_x005fPropertyType.
class gmd__EX_x005fVerticalExtent_x005fPropertyType;

//  Forward declaration of class gmd__EX_x005fBoundingPolygon_x005fType.
class gmd__EX_x005fBoundingPolygon_x005fType;

//  Forward declaration of class gmd__EX_x005fBoundingPolygon_x005fPropertyType.
class gmd__EX_x005fBoundingPolygon_x005fPropertyType;

//  Forward declaration of class gmd__EX_x005fExtent_x005fType.
class gmd__EX_x005fExtent_x005fType;

//  Forward declaration of class gmd__EX_x005fExtent_x005fPropertyType.
class gmd__EX_x005fExtent_x005fPropertyType;

//  Forward declaration of class gmd__AbstractEX_x005fGeographicExtent_x005fType.
class gmd__AbstractEX_x005fGeographicExtent_x005fType;

//  Forward declaration of class gmd__EX_x005fGeographicExtent_x005fPropertyType.
class gmd__EX_x005fGeographicExtent_x005fPropertyType;

//  Forward declaration of class gmd__EX_x005fGeographicBoundingBox_x005fType.
class gmd__EX_x005fGeographicBoundingBox_x005fType;

//  Forward declaration of class gmd__EX_x005fGeographicBoundingBox_x005fPropertyType.
class gmd__EX_x005fGeographicBoundingBox_x005fPropertyType;

//  Forward declaration of class gmd__EX_x005fSpatialTemporalExtent_x005fType.
class gmd__EX_x005fSpatialTemporalExtent_x005fType;

//  Forward declaration of class gmd__EX_x005fSpatialTemporalExtent_x005fPropertyType.
class gmd__EX_x005fSpatialTemporalExtent_x005fPropertyType;

//  Forward declaration of class gmd__EX_x005fGeographicDescription_x005fType.
class gmd__EX_x005fGeographicDescription_x005fType;

//  Forward declaration of class gmd__EX_x005fGeographicDescription_x005fPropertyType.
class gmd__EX_x005fGeographicDescription_x005fPropertyType;

//  Forward declaration of class gmd__MD_x005fExtendedElementInformation_x005fType.
class gmd__MD_x005fExtendedElementInformation_x005fType;

//  Forward declaration of class gmd__MD_x005fExtendedElementInformation_x005fPropertyType.
class gmd__MD_x005fExtendedElementInformation_x005fPropertyType;

//  Forward declaration of class gmd__MD_x005fMetadataExtensionInformation_x005fType.
class gmd__MD_x005fMetadataExtensionInformation_x005fType;

//  Forward declaration of class gmd__MD_x005fMetadataExtensionInformation_x005fPropertyType.
class gmd__MD_x005fMetadataExtensionInformation_x005fPropertyType;

//  Forward declaration of class gmd__MD_x005fObligationCode_x005fPropertyType.
class gmd__MD_x005fObligationCode_x005fPropertyType;

//  Forward declaration of class gmd__MD_x005fDatatypeCode_x005fPropertyType.
class gmd__MD_x005fDatatypeCode_x005fPropertyType;

//  Forward declaration of class gmd__MD_x005fFeatureCatalogueDescription_x005fType.
class gmd__MD_x005fFeatureCatalogueDescription_x005fType;

//  Forward declaration of class gmd__MD_x005fFeatureCatalogueDescription_x005fPropertyType.
class gmd__MD_x005fFeatureCatalogueDescription_x005fPropertyType;

//  Forward declaration of class gmd__MD_x005fCoverageDescription_x005fType.
class gmd__MD_x005fCoverageDescription_x005fType;

//  Forward declaration of class gmd__MD_x005fCoverageDescription_x005fPropertyType.
class gmd__MD_x005fCoverageDescription_x005fPropertyType;

//  Forward declaration of class gmd__MD_x005fImageDescription_x005fType.
class gmd__MD_x005fImageDescription_x005fType;

//  Forward declaration of class gmd__MD_x005fImageDescription_x005fPropertyType.
class gmd__MD_x005fImageDescription_x005fPropertyType;

//  Forward declaration of class gmd__AbstractMD_x005fContentInformation_x005fType.
class gmd__AbstractMD_x005fContentInformation_x005fType;

//  Forward declaration of class gmd__MD_x005fContentInformation_x005fPropertyType.
class gmd__MD_x005fContentInformation_x005fPropertyType;

//  Forward declaration of class gmd__MD_x005fRangeDimension_x005fType.
class gmd__MD_x005fRangeDimension_x005fType;

//  Forward declaration of class gmd__MD_x005fRangeDimension_x005fPropertyType.
class gmd__MD_x005fRangeDimension_x005fPropertyType;

//  Forward declaration of class gmd__MD_x005fBand_x005fType.
class gmd__MD_x005fBand_x005fType;

//  Forward declaration of class gmd__MD_x005fBand_x005fPropertyType.
class gmd__MD_x005fBand_x005fPropertyType;

//  Forward declaration of class gmd__MD_x005fCoverageContentTypeCode_x005fPropertyType.
class gmd__MD_x005fCoverageContentTypeCode_x005fPropertyType;

//  Forward declaration of class gmd__MD_x005fImagingConditionCode_x005fPropertyType.
class gmd__MD_x005fImagingConditionCode_x005fPropertyType;

//  Forward declaration of class gmd__MD_x005fApplicationSchemaInformation_x005fType.
class gmd__MD_x005fApplicationSchemaInformation_x005fType;

//  Forward declaration of class gmd__MD_x005fApplicationSchemaInformation_x005fPropertyType.
class gmd__MD_x005fApplicationSchemaInformation_x005fPropertyType;

//  Forward declaration of class gmd__MD_x005fPortrayalCatalogueReference_x005fType.
class gmd__MD_x005fPortrayalCatalogueReference_x005fType;

//  Forward declaration of class gmd__MD_x005fPortrayalCatalogueReference_x005fPropertyType.
class gmd__MD_x005fPortrayalCatalogueReference_x005fPropertyType;

//  Forward declaration of class gmd__LI_x005fProcessStep_x005fType.
class gmd__LI_x005fProcessStep_x005fType;

//  Forward declaration of class gmd__LI_x005fProcessStep_x005fPropertyType.
class gmd__LI_x005fProcessStep_x005fPropertyType;

//  Forward declaration of class gmd__LI_x005fSource_x005fType.
class gmd__LI_x005fSource_x005fType;

//  Forward declaration of class gmd__LI_x005fSource_x005fPropertyType.
class gmd__LI_x005fSource_x005fPropertyType;

//  Forward declaration of class gmd__LI_x005fLineage_x005fType.
class gmd__LI_x005fLineage_x005fType;

//  Forward declaration of class gmd__LI_x005fLineage_x005fPropertyType.
class gmd__LI_x005fLineage_x005fPropertyType;

//  Forward declaration of class gmd__DQ_x005fConformanceResult_x005fType.
class gmd__DQ_x005fConformanceResult_x005fType;

//  Forward declaration of class gmd__DQ_x005fConformanceResult_x005fPropertyType.
class gmd__DQ_x005fConformanceResult_x005fPropertyType;

//  Forward declaration of class gmd__DQ_x005fQuantitativeResult_x005fType.
class gmd__DQ_x005fQuantitativeResult_x005fType;

//  Forward declaration of class gmd__DQ_x005fQuantitativeResult_x005fPropertyType.
class gmd__DQ_x005fQuantitativeResult_x005fPropertyType;

//  Forward declaration of class gmd__AbstractDQ_x005fResult_x005fType.
class gmd__AbstractDQ_x005fResult_x005fType;

//  Forward declaration of class gmd__DQ_x005fResult_x005fPropertyType.
class gmd__DQ_x005fResult_x005fPropertyType;

//  Forward declaration of class gmd__DQ_x005fTemporalValidity_x005fType.
class gmd__DQ_x005fTemporalValidity_x005fType;

//  Forward declaration of class gmd__DQ_x005fTemporalValidity_x005fPropertyType.
class gmd__DQ_x005fTemporalValidity_x005fPropertyType;

//  Forward declaration of class gmd__DQ_x005fTemporalConsistency_x005fType.
class gmd__DQ_x005fTemporalConsistency_x005fType;

//  Forward declaration of class gmd__DQ_x005fTemporalConsistency_x005fPropertyType.
class gmd__DQ_x005fTemporalConsistency_x005fPropertyType;

//  Forward declaration of class gmd__DQ_x005fAccuracyOfATimeMeasurement_x005fType.
class gmd__DQ_x005fAccuracyOfATimeMeasurement_x005fType;

//  Forward declaration of class gmd__DQ_x005fAccuracyOfATimeMeasurement_x005fPropertyType.
class gmd__DQ_x005fAccuracyOfATimeMeasurement_x005fPropertyType;

//  Forward declaration of class gmd__DQ_x005fQuantitativeAttributeAccuracy_x005fType.
class gmd__DQ_x005fQuantitativeAttributeAccuracy_x005fType;

//  Forward declaration of class gmd__DQ_x005fQuantitativeAttributeAccuracy_x005fPropertyType.
class gmd__DQ_x005fQuantitativeAttributeAccuracy_x005fPropertyType;

//  Forward declaration of class gmd__DQ_x005fNonQuantitativeAttributeAccuracy_x005fType.
class gmd__DQ_x005fNonQuantitativeAttributeAccuracy_x005fType;

//  Forward declaration of class gmd__DQ_x005fNonQuantitativeAttributeAccuracy_x005fPropertyType.
class gmd__DQ_x005fNonQuantitativeAttributeAccuracy_x005fPropertyType;

//  Forward declaration of class gmd__DQ_x005fThematicClassificationCorrectness_x005fType.
class gmd__DQ_x005fThematicClassificationCorrectness_x005fType;

//  Forward declaration of class gmd__DQ_x005fThematicClassificationCorrectness_x005fPropertyType.
class gmd__DQ_x005fThematicClassificationCorrectness_x005fPropertyType;

//  Forward declaration of class gmd__DQ_x005fRelativeInternalPositionalAccuracy_x005fType.
class gmd__DQ_x005fRelativeInternalPositionalAccuracy_x005fType;

//  Forward declaration of class gmd__DQ_x005fRelativeInternalPositionalAccuracy_x005fPropertyType.
class gmd__DQ_x005fRelativeInternalPositionalAccuracy_x005fPropertyType;

//  Forward declaration of class gmd__DQ_x005fGriddedDataPositionalAccuracy_x005fType.
class gmd__DQ_x005fGriddedDataPositionalAccuracy_x005fType;

//  Forward declaration of class gmd__DQ_x005fGriddedDataPositionalAccuracy_x005fPropertyType.
class gmd__DQ_x005fGriddedDataPositionalAccuracy_x005fPropertyType;

//  Forward declaration of class gmd__DQ_x005fAbsoluteExternalPositionalAccuracy_x005fType.
class gmd__DQ_x005fAbsoluteExternalPositionalAccuracy_x005fType;

//  Forward declaration of class gmd__DQ_x005fAbsoluteExternalPositionalAccuracy_x005fPropertyType.
class gmd__DQ_x005fAbsoluteExternalPositionalAccuracy_x005fPropertyType;

//  Forward declaration of class gmd__DQ_x005fTopologicalConsistency_x005fType.
class gmd__DQ_x005fTopologicalConsistency_x005fType;

//  Forward declaration of class gmd__DQ_x005fTopologicalConsistency_x005fPropertyType.
class gmd__DQ_x005fTopologicalConsistency_x005fPropertyType;

//  Forward declaration of class gmd__DQ_x005fFormatConsistency_x005fType.
class gmd__DQ_x005fFormatConsistency_x005fType;

//  Forward declaration of class gmd__DQ_x005fFormatConsistency_x005fPropertyType.
class gmd__DQ_x005fFormatConsistency_x005fPropertyType;

//  Forward declaration of class gmd__DQ_x005fDomainConsistency_x005fType.
class gmd__DQ_x005fDomainConsistency_x005fType;

//  Forward declaration of class gmd__DQ_x005fDomainConsistency_x005fPropertyType.
class gmd__DQ_x005fDomainConsistency_x005fPropertyType;

//  Forward declaration of class gmd__DQ_x005fConceptualConsistency_x005fType.
class gmd__DQ_x005fConceptualConsistency_x005fType;

//  Forward declaration of class gmd__DQ_x005fConceptualConsistency_x005fPropertyType.
class gmd__DQ_x005fConceptualConsistency_x005fPropertyType;

//  Forward declaration of class gmd__DQ_x005fCompletenessOmission_x005fType.
class gmd__DQ_x005fCompletenessOmission_x005fType;

//  Forward declaration of class gmd__DQ_x005fCompletenessOmission_x005fPropertyType.
class gmd__DQ_x005fCompletenessOmission_x005fPropertyType;

//  Forward declaration of class gmd__DQ_x005fCompletenessCommission_x005fType.
class gmd__DQ_x005fCompletenessCommission_x005fType;

//  Forward declaration of class gmd__DQ_x005fCompletenessCommission_x005fPropertyType.
class gmd__DQ_x005fCompletenessCommission_x005fPropertyType;

//  Forward declaration of class gmd__AbstractDQ_x005fTemporalAccuracy_x005fType.
class gmd__AbstractDQ_x005fTemporalAccuracy_x005fType;

//  Forward declaration of class gmd__DQ_x005fTemporalAccuracy_x005fPropertyType.
class gmd__DQ_x005fTemporalAccuracy_x005fPropertyType;

//  Forward declaration of class gmd__AbstractDQ_x005fThematicAccuracy_x005fType.
class gmd__AbstractDQ_x005fThematicAccuracy_x005fType;

//  Forward declaration of class gmd__DQ_x005fThematicAccuracy_x005fPropertyType.
class gmd__DQ_x005fThematicAccuracy_x005fPropertyType;

//  Forward declaration of class gmd__AbstractDQ_x005fPositionalAccuracy_x005fType.
class gmd__AbstractDQ_x005fPositionalAccuracy_x005fType;

//  Forward declaration of class gmd__DQ_x005fPositionalAccuracy_x005fPropertyType.
class gmd__DQ_x005fPositionalAccuracy_x005fPropertyType;

//  Forward declaration of class gmd__AbstractDQ_x005fLogicalConsistency_x005fType.
class gmd__AbstractDQ_x005fLogicalConsistency_x005fType;

//  Forward declaration of class gmd__DQ_x005fLogicalConsistency_x005fPropertyType.
class gmd__DQ_x005fLogicalConsistency_x005fPropertyType;

//  Forward declaration of class gmd__AbstractDQ_x005fCompleteness_x005fType.
class gmd__AbstractDQ_x005fCompleteness_x005fType;

//  Forward declaration of class gmd__DQ_x005fCompleteness_x005fPropertyType.
class gmd__DQ_x005fCompleteness_x005fPropertyType;

//  Forward declaration of class gmd__AbstractDQ_x005fElement_x005fType.
class gmd__AbstractDQ_x005fElement_x005fType;

//  Forward declaration of class gmd__DQ_x005fElement_x005fPropertyType.
class gmd__DQ_x005fElement_x005fPropertyType;

//  Forward declaration of class gmd__DQ_x005fDataQuality_x005fType.
class gmd__DQ_x005fDataQuality_x005fType;

//  Forward declaration of class gmd__DQ_x005fDataQuality_x005fPropertyType.
class gmd__DQ_x005fDataQuality_x005fPropertyType;

//  Forward declaration of class gmd__DQ_x005fScope_x005fType.
class gmd__DQ_x005fScope_x005fType;

//  Forward declaration of class gmd__DQ_x005fScope_x005fPropertyType.
class gmd__DQ_x005fScope_x005fPropertyType;

//  Forward declaration of class gmd__DQ_x005fEvaluationMethodTypeCode_x005fPropertyType.
class gmd__DQ_x005fEvaluationMethodTypeCode_x005fPropertyType;

//  Forward declaration of class gmd__AbstractMD_x005fIdentification_x005fType.
class gmd__AbstractMD_x005fIdentification_x005fType;

//  Forward declaration of class gmd__MD_x005fIdentification_x005fPropertyType.
class gmd__MD_x005fIdentification_x005fPropertyType;

//  Forward declaration of class gmd__MD_x005fBrowseGraphic_x005fType.
class gmd__MD_x005fBrowseGraphic_x005fType;

//  Forward declaration of class gmd__MD_x005fBrowseGraphic_x005fPropertyType.
class gmd__MD_x005fBrowseGraphic_x005fPropertyType;

//  Forward declaration of class gmd__MD_x005fDataIdentification_x005fType.
class gmd__MD_x005fDataIdentification_x005fType;

//  Forward declaration of class gmd__MD_x005fDataIdentification_x005fPropertyType.
class gmd__MD_x005fDataIdentification_x005fPropertyType;

//  Forward declaration of class gmd__MD_x005fServiceIdentification_x005fType.
class gmd__MD_x005fServiceIdentification_x005fType;

//  Forward declaration of class gmd__MD_x005fServiceIdentification_x005fPropertyType.
class gmd__MD_x005fServiceIdentification_x005fPropertyType;

//  Forward declaration of class gmd__MD_x005fRepresentativeFraction_x005fType.
class gmd__MD_x005fRepresentativeFraction_x005fType;

//  Forward declaration of class gmd__MD_x005fRepresentativeFraction_x005fPropertyType.
class gmd__MD_x005fRepresentativeFraction_x005fPropertyType;

//  Forward declaration of class gmd__MD_x005fUsage_x005fType.
class gmd__MD_x005fUsage_x005fType;

//  Forward declaration of class gmd__MD_x005fUsage_x005fPropertyType.
class gmd__MD_x005fUsage_x005fPropertyType;

//  Forward declaration of class gmd__MD_x005fKeywords_x005fType.
class gmd__MD_x005fKeywords_x005fType;

//  Forward declaration of class gmd__MD_x005fKeywords_x005fPropertyType.
class gmd__MD_x005fKeywords_x005fPropertyType;

//  Forward declaration of class gmd__DS_x005fAssociation_x005fType.
class gmd__DS_x005fAssociation_x005fType;

//  Forward declaration of class gmd__DS_x005fAssociation_x005fPropertyType.
class gmd__DS_x005fAssociation_x005fPropertyType;

//  Forward declaration of class gmd__MD_x005fAggregateInformation_x005fType.
class gmd__MD_x005fAggregateInformation_x005fType;

//  Forward declaration of class gmd__MD_x005fAggregateInformation_x005fPropertyType.
class gmd__MD_x005fAggregateInformation_x005fPropertyType;

//  Forward declaration of class gmd__MD_x005fResolution_x005fType.
class gmd__MD_x005fResolution_x005fType;

//  Forward declaration of class gmd__MD_x005fResolution_x005fPropertyType.
class gmd__MD_x005fResolution_x005fPropertyType;

//  Forward declaration of class gmd__MD_x005fTopicCategoryCode_x005fPropertyType.
class gmd__MD_x005fTopicCategoryCode_x005fPropertyType;

//  Forward declaration of class gmd__MD_x005fCharacterSetCode_x005fPropertyType.
class gmd__MD_x005fCharacterSetCode_x005fPropertyType;

//  Forward declaration of class gmd__MD_x005fSpatialRepresentationTypeCode_x005fPropertyType.
class gmd__MD_x005fSpatialRepresentationTypeCode_x005fPropertyType;

//  Forward declaration of class gmd__MD_x005fProgressCode_x005fPropertyType.
class gmd__MD_x005fProgressCode_x005fPropertyType;

//  Forward declaration of class gmd__MD_x005fKeywordTypeCode_x005fPropertyType.
class gmd__MD_x005fKeywordTypeCode_x005fPropertyType;

//  Forward declaration of class gmd__DS_x005fAssociationTypeCode_x005fPropertyType.
class gmd__DS_x005fAssociationTypeCode_x005fPropertyType;

//  Forward declaration of class gmd__DS_x005fInitiativeTypeCode_x005fPropertyType.
class gmd__DS_x005fInitiativeTypeCode_x005fPropertyType;

//  Forward declaration of class gmd__MD_x005fConstraints_x005fType.
class gmd__MD_x005fConstraints_x005fType;

//  Forward declaration of class gmd__MD_x005fConstraints_x005fPropertyType.
class gmd__MD_x005fConstraints_x005fPropertyType;

//  Forward declaration of class gmd__MD_x005fLegalConstraints_x005fType.
class gmd__MD_x005fLegalConstraints_x005fType;

//  Forward declaration of class gmd__MD_x005fLegalConstraints_x005fPropertyType.
class gmd__MD_x005fLegalConstraints_x005fPropertyType;

//  Forward declaration of class gmd__MD_x005fSecurityConstraints_x005fType.
class gmd__MD_x005fSecurityConstraints_x005fType;

//  Forward declaration of class gmd__MD_x005fSecurityConstraints_x005fPropertyType.
class gmd__MD_x005fSecurityConstraints_x005fPropertyType;

//  Forward declaration of class gmd__MD_x005fClassificationCode_x005fPropertyType.
class gmd__MD_x005fClassificationCode_x005fPropertyType;

//  Forward declaration of class gmd__MD_x005fRestrictionCode_x005fPropertyType.
class gmd__MD_x005fRestrictionCode_x005fPropertyType;

//  Forward declaration of class gmd__MD_x005fMedium_x005fType.
class gmd__MD_x005fMedium_x005fType;

//  Forward declaration of class gmd__MD_x005fMedium_x005fPropertyType.
class gmd__MD_x005fMedium_x005fPropertyType;

//  Forward declaration of class gmd__MD_x005fDigitalTransferOptions_x005fType.
class gmd__MD_x005fDigitalTransferOptions_x005fType;

//  Forward declaration of class gmd__MD_x005fDigitalTransferOptions_x005fPropertyType.
class gmd__MD_x005fDigitalTransferOptions_x005fPropertyType;

//  Forward declaration of class gmd__MD_x005fStandardOrderProcess_x005fType.
class gmd__MD_x005fStandardOrderProcess_x005fType;

//  Forward declaration of class gmd__MD_x005fStandardOrderProcess_x005fPropertyType.
class gmd__MD_x005fStandardOrderProcess_x005fPropertyType;

//  Forward declaration of class gmd__MD_x005fDistributor_x005fType.
class gmd__MD_x005fDistributor_x005fType;

//  Forward declaration of class gmd__MD_x005fDistributor_x005fPropertyType.
class gmd__MD_x005fDistributor_x005fPropertyType;

//  Forward declaration of class gmd__MD_x005fDistribution_x005fType.
class gmd__MD_x005fDistribution_x005fType;

//  Forward declaration of class gmd__MD_x005fDistribution_x005fPropertyType.
class gmd__MD_x005fDistribution_x005fPropertyType;

//  Forward declaration of class gmd__MD_x005fFormat_x005fType.
class gmd__MD_x005fFormat_x005fType;

//  Forward declaration of class gmd__MD_x005fFormat_x005fPropertyType.
class gmd__MD_x005fFormat_x005fPropertyType;

//  Forward declaration of class gmd__MD_x005fDistributionUnits_x005fPropertyType.
class gmd__MD_x005fDistributionUnits_x005fPropertyType;

//  Forward declaration of class gmd__MD_x005fMediumFormatCode_x005fPropertyType.
class gmd__MD_x005fMediumFormatCode_x005fPropertyType;

//  Forward declaration of class gmd__MD_x005fMediumNameCode_x005fPropertyType.
class gmd__MD_x005fMediumNameCode_x005fPropertyType;

//  Forward declaration of class gmd__MD_x005fMaintenanceInformation_x005fType.
class gmd__MD_x005fMaintenanceInformation_x005fType;

//  Forward declaration of class gmd__MD_x005fMaintenanceInformation_x005fPropertyType.
class gmd__MD_x005fMaintenanceInformation_x005fPropertyType;

//  Forward declaration of class gmd__MD_x005fScopeDescription_x005fType.
class gmd__MD_x005fScopeDescription_x005fType;

//  Forward declaration of class gmd__MD_x005fScopeDescription_x005fPropertyType.
class gmd__MD_x005fScopeDescription_x005fPropertyType;

//  Forward declaration of class gmd__MD_x005fMaintenanceFrequencyCode_x005fPropertyType.
class gmd__MD_x005fMaintenanceFrequencyCode_x005fPropertyType;

//  Forward declaration of class gmd__MD_x005fScopeCode_x005fPropertyType.
class gmd__MD_x005fScopeCode_x005fPropertyType;

//  Forward declaration of class gmd__PT_x005fFreeText_x005fType.
class gmd__PT_x005fFreeText_x005fType;

//  Forward declaration of class gmd__PT_x005fFreeText_x005fPropertyType.
class gmd__PT_x005fFreeText_x005fPropertyType;

//  Forward declaration of class gmd__PT_x005fLocale_x005fType.
class gmd__PT_x005fLocale_x005fType;

//  Forward declaration of class gmd__PT_x005fLocale_x005fPropertyType.
class gmd__PT_x005fLocale_x005fPropertyType;

//  Forward declaration of class gmd__LocalisedCharacterString_x005fType.
class gmd__LocalisedCharacterString_x005fType;

//  Forward declaration of class gmd__LocalisedCharacterString_x005fPropertyType.
class gmd__LocalisedCharacterString_x005fPropertyType;

//  Forward declaration of class gmd__PT_x005fLocaleContainer_x005fType.
class gmd__PT_x005fLocaleContainer_x005fType;

//  Forward declaration of class gmd__PT_x005fLocaleContainer_x005fPropertyType.
class gmd__PT_x005fLocaleContainer_x005fPropertyType;

//  Forward declaration of class gmd__LanguageCode_x005fPropertyType.
class gmd__LanguageCode_x005fPropertyType;

//  Forward declaration of class gmd__Country_x005fPropertyType.
class gmd__Country_x005fPropertyType;

//  Forward declaration of class xlink__simple.
class xlink__simple;

//  Forward declaration of class xlink__extended.
class xlink__extended;

//  Forward declaration of class xlink__titleEltType.
class xlink__titleEltType;

//  Forward declaration of class xlink__resourceType.
class xlink__resourceType;

//  Forward declaration of class xlink__locatorType.
class xlink__locatorType;

//  Forward declaration of class xlink__arcType.
class xlink__arcType;

//  Forward declaration of class gco__TypeName_x005fType.
class gco__TypeName_x005fType;

//  Forward declaration of class gco__TypeName_x005fPropertyType.
class gco__TypeName_x005fPropertyType;

//  Forward declaration of class gco__MemberName_x005fType.
class gco__MemberName_x005fType;

//  Forward declaration of class gco__MemberName_x005fPropertyType.
class gco__MemberName_x005fPropertyType;

//  Forward declaration of class gco__Multiplicity_x005fType.
class gco__Multiplicity_x005fType;

//  Forward declaration of class gco__Multiplicity_x005fPropertyType.
class gco__Multiplicity_x005fPropertyType;

//  Forward declaration of class gco__MultiplicityRange_x005fType.
class gco__MultiplicityRange_x005fType;

//  Forward declaration of class gco__MultiplicityRange_x005fPropertyType.
class gco__MultiplicityRange_x005fPropertyType;

//  Forward declaration of class gco__Measure_x005fPropertyType.
class gco__Measure_x005fPropertyType;

//  Forward declaration of class gco__Length_x005fPropertyType.
class gco__Length_x005fPropertyType;

//  Forward declaration of class gco__Angle_x005fPropertyType.
class gco__Angle_x005fPropertyType;

//  Forward declaration of class gco__Scale_x005fPropertyType.
class gco__Scale_x005fPropertyType;

//  Forward declaration of class gco__Distance_x005fPropertyType.
class gco__Distance_x005fPropertyType;

//  Forward declaration of class gco__CharacterString_x005fPropertyType.
class gco__CharacterString_x005fPropertyType;

//  Forward declaration of class gco__Boolean_x005fPropertyType.
class gco__Boolean_x005fPropertyType;

//  Forward declaration of class gco__GenericName_x005fPropertyType.
class gco__GenericName_x005fPropertyType;

//  Forward declaration of class gco__LocalName_x005fPropertyType.
class gco__LocalName_x005fPropertyType;

//  Forward declaration of class gco__ScopedName_x005fPropertyType.
class gco__ScopedName_x005fPropertyType;

//  Forward declaration of class gco__UomAngle_x005fPropertyType.
class gco__UomAngle_x005fPropertyType;

//  Forward declaration of class gco__UomLength_x005fPropertyType.
class gco__UomLength_x005fPropertyType;

//  Forward declaration of class gco__UomScale_x005fPropertyType.
class gco__UomScale_x005fPropertyType;

//  Forward declaration of class gco__UnitOfMeasure_x005fPropertyType.
class gco__UnitOfMeasure_x005fPropertyType;

//  Forward declaration of class gco__UomArea_x005fPropertyType.
class gco__UomArea_x005fPropertyType;

//  Forward declaration of class gco__UomVelocity_x005fPropertyType.
class gco__UomVelocity_x005fPropertyType;

//  Forward declaration of class gco__UomTime_x005fPropertyType.
class gco__UomTime_x005fPropertyType;

//  Forward declaration of class gco__UomVolume_x005fPropertyType.
class gco__UomVolume_x005fPropertyType;

//  Forward declaration of class gco__DateTime_x005fPropertyType.
class gco__DateTime_x005fPropertyType;

//  Forward declaration of class gco__Date_x005fPropertyType.
class gco__Date_x005fPropertyType;

//  Forward declaration of class gco__Number_x005fPropertyType.
class gco__Number_x005fPropertyType;

//  Forward declaration of class gco__Decimal_x005fPropertyType.
class gco__Decimal_x005fPropertyType;

//  Forward declaration of class gco__Real_x005fPropertyType.
class gco__Real_x005fPropertyType;

//  Forward declaration of class gco__Integer_x005fPropertyType.
class gco__Integer_x005fPropertyType;

//  Forward declaration of class gco__UnlimitedInteger_x005fType.
class gco__UnlimitedInteger_x005fType;

//  Forward declaration of class gco__UnlimitedInteger_x005fPropertyType.
class gco__UnlimitedInteger_x005fPropertyType;

//  Forward declaration of class gco__Record_x005fPropertyType.
class gco__Record_x005fPropertyType;

//  Forward declaration of class gco__RecordType_x005fType.
class gco__RecordType_x005fType;

//  Forward declaration of class gco__RecordType_x005fPropertyType.
class gco__RecordType_x005fPropertyType;

//  Forward declaration of class gco__Binary_x005fType.
class gco__Binary_x005fType;

//  Forward declaration of class gco__Binary_x005fPropertyType.
class gco__Binary_x005fPropertyType;

//  Forward declaration of class gco__AbstractObject_x005fType.
class gco__AbstractObject_x005fType;

//  Forward declaration of class gco__ObjectReference_x005fPropertyType.
class gco__ObjectReference_x005fPropertyType;

//  Forward declaration of class gco__CodeListValue_x005fType.
class gco__CodeListValue_x005fType;

/// Top-level root element "http://www.isotc211.org/2005/gco":Record.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

//  Forward declaration of class gss__GM_x005fPoint_x005fPropertyType.
class gss__GM_x005fPoint_x005fPropertyType;

//  Forward declaration of class gss__GM_x005fObject_x005fPropertyType.
class gss__GM_x005fObject_x005fPropertyType;

//  Forward declaration of class gts__TM_x005fPrimitive_x005fPropertyType.
class gts__TM_x005fPrimitive_x005fPropertyType;

//  Forward declaration of class gts__TM_x005fPeriodDuration_x005fPropertyType.
class gts__TM_x005fPeriodDuration_x005fPropertyType;

//  Forward declaration of class gsr__SC_x005fCRS_x005fPropertyType.
class gsr__SC_x005fCRS_x005fPropertyType;

/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://inspire.ec.europa.eu/schemas/plu/3.0                              *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://inspire.ec.europa.eu/schemas/base/3.3                             *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://inspire.ec.europa.eu/schemas/base2/1.0                            *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://inspire.ec.europa.eu/schemas/lunom/3.0                            *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.interactive-instruments.de/ShapeChange/AppInfo                *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.opengis.net/gml/3.2                                           *
 *                                                                            *
\******************************************************************************/


/// union of values "gml:NilReasonEnumeration anyURI"
typedef std::string gml__NilReasonType;

/// union of values from "xs:string"
/// union of values from "xs:string"
typedef std::string gml__NilReasonEnumeration;

/// union of values "gml:NilReasonEnumeration boolean anyURI"
typedef std::string gml__booleanOrNilReason;

/// union of values "gml:NilReasonEnumeration double anyURI"
typedef std::string gml__doubleOrNilReason;

/// union of values "gml:NilReasonEnumeration integer anyURI"
typedef std::string gml__integerOrNilReason;

/// union of values "gml:NilReasonEnumeration Name anyURI"
typedef std::string gml__NameOrNilReason;

/// union of values "gml:NilReasonEnumeration string anyURI"
typedef std::string gml__stringOrNilReason;

/// union of values "gml:UomSymbol gml:UomURI"
typedef std::string gml__UomIdentifier;

/// "http://www.opengis.net/gml/3.2":booleanList is a simpleType containing a whitespace separated list of xs:boolean.
/// @brief A type for a list of values of the respective simple type.
typedef std::string gml__booleanList;

/// "http://www.opengis.net/gml/3.2":doubleList is a simpleType containing a whitespace separated list of xs:double.
/// @brief A type for a list of values of the respective simple type.
typedef std::string gml__doubleList;

/// "http://www.opengis.net/gml/3.2":integerList is a simpleType containing a whitespace separated list of xs:integer.
/// @brief A type for a list of values of the respective simple type.
typedef std::string gml__integerList;

/// "http://www.opengis.net/gml/3.2":NameList is a simpleType containing a whitespace separated list of xs:Name.
/// @brief A type for a list of values of the respective simple type.
typedef std::string gml__NameList;

/// "http://www.opengis.net/gml/3.2":NCNameList is a simpleType containing a whitespace separated list of xs:NCName.
/// @brief A type for a list of values of the respective simple type.
typedef std::string gml__NCNameList;

/// "http://www.opengis.net/gml/3.2":QNameList is a simpleType containing a whitespace separated list of xs:QName.
/// @brief A type for a list of values of the respective simple type.
typedef xsd__QName gml__QNameList;

/// "http://www.opengis.net/gml/3.2":booleanOrNilReasonList is a simpleType containing a whitespace separated list of "http://www.opengis.net/gml/3.2":booleanOrNilReason.
/// @brief A type for a list of values of the respective simple type.
typedef std::string gml__booleanOrNilReasonList;

/// "http://www.opengis.net/gml/3.2":NameOrNilReasonList is a simpleType containing a whitespace separated list of "http://www.opengis.net/gml/3.2":NameOrNilReason.
/// @brief A type for a list of values of the respective simple type.
typedef std::string gml__NameOrNilReasonList;

/// "http://www.opengis.net/gml/3.2":doubleOrNilReasonList is a simpleType containing a whitespace separated list of "http://www.opengis.net/gml/3.2":doubleOrNilReason.
/// @brief A type for a list of values of the respective simple type.
typedef std::string gml__doubleOrNilReasonList;

/// "http://www.opengis.net/gml/3.2":integerOrNilReasonList is a simpleType containing a whitespace separated list of "http://www.opengis.net/gml/3.2":integerOrNilReason.
/// @brief A type for a list of values of the respective simple type.
typedef std::string gml__integerOrNilReasonList;

/// "http://www.opengis.net/gml/3.2":AxisDirectionList is a simpleType containing a whitespace separated list of "http://www.opengis.net/gml/3.2":AxisDirection.
/// @brief The different values in a gml:AxisDirectionList indicate the incrementation order to be used on all axes of the grid. Each axis shall be mentioned once and only once.
typedef std::string gml__AxisDirectionList;

/// union of values "gml:CalDate time dateTime anyURI decimal"
typedef std::string gml__TimePositionUnion;

/// union of values "date gYearMonth gYear"
typedef std::string gml__CalDate;

/// union of values from "xs:string"
/// union of values from "xs:string"
typedef std::string gml__TimeUnitType;

/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.isotc211.org/2005/gmd                                         *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.w3.org/1999/xlink                                             *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.isotc211.org/2005/gco                                         *
 *                                                                            *
\******************************************************************************/


/// union of values "xs:date xs:gYearMonth xs:gYear"
typedef std::string gco__Date_x005fType;

/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.isotc211.org/2005/gss                                         *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.isotc211.org/2005/gts                                         *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.isotc211.org/2005/gsr                                         *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://inspire.ec.europa.eu/schemas/base/3.3                             *
 *                                                                            *
\******************************************************************************/


/// "http://inspire.ec.europa.eu/schemas/base/3.3":VerticalPositionValueType is a simpleType restriction of xs:string.
/// @brief -- Definition -- The relative vertical position of a spatial object.
/// Note: enum values are prefixed with 'base__VerticalPositionValueType' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum base__VerticalPositionValueType
{
/// @brief -- Definition -- The spatial object is on ground level.
	base__VerticalPositionValueType__onGroundSurface,	///< xs:string value="onGroundSurface"
/// @brief -- Definition -- The spatial object is suspended or elevated.
	base__VerticalPositionValueType__suspendedOrElevated,	///< xs:string value="suspendedOrElevated"
/// @brief -- Definition -- The spatial object is underground.
	base__VerticalPositionValueType__underground,	///< xs:string value="underground"
};

/// Class wrapper
class base__VerticalPositionValueType_ : public xsd__anyType
{ public:
    enum base__VerticalPositionValueType  __item;                       
};

/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://inspire.ec.europa.eu/schemas/base2/1.0                            *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://inspire.ec.europa.eu/schemas/lunom/3.0                            *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.interactive-instruments.de/ShapeChange/AppInfo                *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.opengis.net/gml/3.2                                           *
 *                                                                            *
\******************************************************************************/


/// "http://www.opengis.net/gml/3.2":CurveInterpolationType is a simpleType restriction of xs:string.
/// @brief gml:CurveInterpolationType is a list of codes that may be used to identify the interpolation mechanisms specified by an application schema.
/// Note: enum values are prefixed with 'gml__CurveInterpolationType' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum gml__CurveInterpolationType
{
	gml__CurveInterpolationType__linear,	///< xs:string value="linear"
	gml__CurveInterpolationType__geodesic,	///< xs:string value="geodesic"
	gml__CurveInterpolationType__circularArc3Points,	///< xs:string value="circularArc3Points"
	gml__CurveInterpolationType__circularArc2PointWithBulge,	///< xs:string value="circularArc2PointWithBulge"
	gml__CurveInterpolationType__circularArcCenterPointWithRadius,	///< xs:string value="circularArcCenterPointWithRadius"
	gml__CurveInterpolationType__elliptical,	///< xs:string value="elliptical"
	gml__CurveInterpolationType__clothoid,	///< xs:string value="clothoid"
	gml__CurveInterpolationType__conic,	///< xs:string value="conic"
	gml__CurveInterpolationType__polynomialSpline,	///< xs:string value="polynomialSpline"
	gml__CurveInterpolationType__cubicSpline,	///< xs:string value="cubicSpline"
	gml__CurveInterpolationType__rationalSpline,	///< xs:string value="rationalSpline"
};

/// Class wrapper
class gml__CurveInterpolationType_ : public xsd__anyType
{ public:
    enum gml__CurveInterpolationType     __item;                       
};

/// "http://www.opengis.net/gml/3.2":KnotTypesType is a simpleType restriction of xs:string.
/// @brief This enumeration type specifies values for the knots' type (see ISO 19107:2003, 6.4.25).
/// Note: enum values are prefixed with 'gml__KnotTypesType' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum gml__KnotTypesType
{
	gml__KnotTypesType__uniform,	///< xs:string value="uniform"
	gml__KnotTypesType__quasiUniform,	///< xs:string value="quasiUniform"
	gml__KnotTypesType__piecewiseBezier,	///< xs:string value="piecewiseBezier"
};

/// Class wrapper
class gml__KnotTypesType_ : public xsd__anyType
{ public:
    enum gml__KnotTypesType              __item;                       
};

/// "http://www.opengis.net/gml/3.2":SurfaceInterpolationType is a simpleType restriction of xs:string.
/// @brief gml:SurfaceInterpolationType is a list of codes that may be used to identify the interpolation mechanisms specified by an application schema.
/// Note: enum values are prefixed with 'gml__SurfaceInterpolationType' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum gml__SurfaceInterpolationType
{
	gml__SurfaceInterpolationType__none,	///< xs:string value="none"
	gml__SurfaceInterpolationType__planar,	///< xs:string value="planar"
	gml__SurfaceInterpolationType__spherical,	///< xs:string value="spherical"
	gml__SurfaceInterpolationType__elliptical,	///< xs:string value="elliptical"
	gml__SurfaceInterpolationType__conic,	///< xs:string value="conic"
	gml__SurfaceInterpolationType__tin,	///< xs:string value="tin"
	gml__SurfaceInterpolationType__parametricCurve,	///< xs:string value="parametricCurve"
	gml__SurfaceInterpolationType__polynomialSpline,	///< xs:string value="polynomialSpline"
	gml__SurfaceInterpolationType__rationalSpline,	///< xs:string value="rationalSpline"
	gml__SurfaceInterpolationType__triangulatedSpline,	///< xs:string value="triangulatedSpline"
};

/// Class wrapper
class gml__SurfaceInterpolationType_ : public xsd__anyType
{ public:
    enum gml__SurfaceInterpolationType   __item;                       
};

/// "http://www.opengis.net/gml/3.2":AggregationType is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'gml__AggregationType' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum gml__AggregationType
{
	gml__AggregationType__set,	///< xs:string value="set"
	gml__AggregationType__bag,	///< xs:string value="bag"
	gml__AggregationType__sequence,	///< xs:string value="sequence"
	gml__AggregationType__array,	///< xs:string value="array"
	gml__AggregationType__record,	///< xs:string value="record"
	gml__AggregationType__table,	///< xs:string value="table"
};

/// Class wrapper
class gml__AggregationType_ : public xsd__anyType
{ public:
    enum gml__AggregationType            __item;                       
};

/// "http://www.opengis.net/gml/3.2":SignType is a simpleType restriction of xs:string.
/// @brief gml:SignType is a convenience type with values "+" (plus) and "-" (minus).
/// Note: enum values are prefixed with 'gml__SignType' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum gml__SignType
{
	gml__SignType___x002d,	///< xs:string value="-"
	gml__SignType___x002b,	///< xs:string value="+"
};

/// Class wrapper
class gml__SignType_ : public xsd__anyType
{ public:
    enum gml__SignType                   __item;                       
};

/// "http://www.opengis.net/gml/3.2":UomSymbol is a simpleType restriction of xs:string.
/// @brief This type specifies a character string of length at least one, and restricted such that it must not contain any of the following characters: ":" (colon), " " (space), (newline), (carriage return), (tab). This allows values corresponding to familiar abbreviations, such as "kg", "m/s", etc. It is recommended that the symbol be an identifier for a unit of measure as specified in the "Unified Code of Units of Measure" (UCUM) (http://aurora.regenstrief.org/UCUM). This provides a set of symbols and a grammar for constructing identifiers for units of measure that are unique, and may be easily entered with a keyboard supporting the limited character set known as 7-bit ASCII. ISO 2955 formerly provided a specification with this scope, but was withdrawn in 2001. UCUM largely follows ISO 2955 with modifications to remove ambiguities and other problems.
/// Content pattern is "[^: \\n\\r\\t]+" (note: not automatically enforced)
typedef std::string gml__UomSymbol "[^: \\n\\r\\t]+";

/// Class wrapper
class gml__UomSymbol__ : public xsd__anyType
{ public:
    gml__UomSymbol                       __item;                       
};

/// "http://www.opengis.net/gml/3.2":UomURI is a simpleType restriction of xs:anyURI.
/// @brief This type specifies a URI, restricted such that it must start with one of the following sequences: "#", "./", "../", or a string of characters followed by a ":". These patterns ensure that the most common URI forms are supported, including absolute and relative URIs and URIs that are simple fragment identifiers, but prohibits certain forms of relative URI that could be mistaken for unit of measure symbol . NOTE It is possible to re-write such a relative URI to conform to the restriction (e.g. "./m/s"). In an instance document, on elements of type gml:MeasureType the mandatory uom attribute shall carry a value corresponding to either - a conventional unit of measure symbol, - a link to a definition of a unit of measure that does not have a conventional symbol, or when it is desired to indicate a precise or variant definition.
/// Content pattern is "([a-zA-Z][a-zA-Z0-9\\-\\+\\.]*:|\\.\\./|\\./|#).*" (note: not automatically enforced)
typedef xsd__anyURI gml__UomURI "([a-zA-Z][a-zA-Z0-9\\-\\+\\.]*:|\\.\\./|\\./|#).*";

/// Class wrapper
class gml__UomURI__ : public xsd__anyType
{ public:
    gml__UomURI                          __item;                       
};

/// "http://www.opengis.net/gml/3.2":SequenceRuleEnumeration is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'gml__SequenceRuleEnumeration' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum gml__SequenceRuleEnumeration
{
	gml__SequenceRuleEnumeration__Linear,	///< xs:string value="Linear"
	gml__SequenceRuleEnumeration__Boustrophedonic,	///< xs:string value="Boustrophedonic"
	gml__SequenceRuleEnumeration__Cantor_diagonal,	///< xs:string value="Cantor-diagonal"
	gml__SequenceRuleEnumeration__Spiral,	///< xs:string value="Spiral"
	gml__SequenceRuleEnumeration__Morton,	///< xs:string value="Morton"
	gml__SequenceRuleEnumeration__Hilbert,	///< xs:string value="Hilbert"
};

/// Class wrapper
class gml__SequenceRuleEnumeration_ : public xsd__anyType
{ public:
    enum gml__SequenceRuleEnumeration    __item;                       
};

/// "http://www.opengis.net/gml/3.2":AxisDirection is a simpleType restriction of xs:string.
/// @brief The value of a gml:AxisDirection indicates the incrementation order to be used on an axis of the grid.
/// Content pattern is "[\\+\\-][1-9][0-9]*" (note: not automatically enforced)
typedef std::string gml__AxisDirection "[\\+\\-][1-9][0-9]*";

/// Class wrapper
class gml__AxisDirection__ : public xsd__anyType
{ public:
    gml__AxisDirection                   __item;                       
};

/// "http://www.opengis.net/gml/3.2":TimeIndeterminateValueType is a simpleType restriction of xs:string.
/// @brief These values are interpreted as follows: - "unknown" indicates that no specific value for temporal position is provided. - "now" indicates that the specified value shall be replaced with the current temporal position whenever the value is accessed. - "before" indicates that the actual temporal position is unknown, but it is known to be before the specified value. - "after" indicates that the actual temporal position is unknown, but it is known to be after the specified value. A value for indeterminatePosition may - be used either alone, or - qualify a specific value for temporal position.
/// Note: enum values are prefixed with 'gml__TimeIndeterminateValueType' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum gml__TimeIndeterminateValueType
{
	gml__TimeIndeterminateValueType__after,	///< xs:string value="after"
	gml__TimeIndeterminateValueType__before,	///< xs:string value="before"
	gml__TimeIndeterminateValueType__now,	///< xs:string value="now"
	gml__TimeIndeterminateValueType__unknown,	///< xs:string value="unknown"
};

/// Class wrapper
class gml__TimeIndeterminateValueType_ : public xsd__anyType
{ public:
    enum gml__TimeIndeterminateValueType  __item;                       
};

/// "http://www.opengis.net/gml/3.2":CountExtentType is a simpleType restriction of "http://www.opengis.net/gml/3.2":integerOrNilReasonList.
/// Length of this string is exactly 2 characters
typedef gml__integerOrNilReasonList gml__CountExtentType;

/// Class wrapper
class gml__CountExtentType__ : public xsd__anyType
{ public:
    gml__CountExtentType                 __item;                       
};

/// "http://www.opengis.net/gml/3.2":CompassPointEnumeration is a simpleType restriction of xs:string.
/// @brief These directions are necessarily approximate, giving direction with a precision of 22.5. It is thus generally unnecessary to specify the reference frame, though this may be detailed in the definition of a GML application language.
/// Note: enum values are prefixed with 'gml__CompassPointEnumeration' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum gml__CompassPointEnumeration
{
	gml__CompassPointEnumeration__N,	///< xs:string value="N"
	gml__CompassPointEnumeration__NNE,	///< xs:string value="NNE"
	gml__CompassPointEnumeration__NE,	///< xs:string value="NE"
	gml__CompassPointEnumeration__ENE,	///< xs:string value="ENE"
	gml__CompassPointEnumeration__E,	///< xs:string value="E"
	gml__CompassPointEnumeration__ESE,	///< xs:string value="ESE"
	gml__CompassPointEnumeration__SE,	///< xs:string value="SE"
	gml__CompassPointEnumeration__SSE,	///< xs:string value="SSE"
	gml__CompassPointEnumeration__S,	///< xs:string value="S"
	gml__CompassPointEnumeration__SSW,	///< xs:string value="SSW"
	gml__CompassPointEnumeration__SW,	///< xs:string value="SW"
	gml__CompassPointEnumeration__WSW,	///< xs:string value="WSW"
	gml__CompassPointEnumeration__W,	///< xs:string value="W"
	gml__CompassPointEnumeration__WNW,	///< xs:string value="WNW"
	gml__CompassPointEnumeration__NW,	///< xs:string value="NW"
	gml__CompassPointEnumeration__NNW,	///< xs:string value="NNW"
};

/// Class wrapper
class gml__CompassPointEnumeration_ : public xsd__anyType
{ public:
    enum gml__CompassPointEnumeration    __item;                       
};

/// "http://www.opengis.net/gml/3.2":SuccessionType is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'gml__SuccessionType' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum gml__SuccessionType
{
	gml__SuccessionType__substitution,	///< xs:string value="substitution"
	gml__SuccessionType__division,	///< xs:string value="division"
	gml__SuccessionType__fusion,	///< xs:string value="fusion"
	gml__SuccessionType__initiation,	///< xs:string value="initiation"
};

/// Class wrapper
class gml__SuccessionType_ : public xsd__anyType
{ public:
    enum gml__SuccessionType             __item;                       
};

/// "http://www.opengis.net/gml/3.2":DegreeValueType is a simpleType restriction of xs:nonNegativeInteger.
/// Value range is [..359]
typedef xsd__nonNegativeInteger gml__DegreeValueType;

/// Class wrapper
class gml__DegreeValueType__ : public xsd__anyType
{ public:
    gml__DegreeValueType                 __item;                       
};

/// "http://www.opengis.net/gml/3.2":DecimalMinutesType is a simpleType restriction of xs:decimal.
/// Value range is [0.00..60.00)
typedef xsd__decimal gml__DecimalMinutesType;

/// Class wrapper
class gml__DecimalMinutesType__ : public xsd__anyType
{ public:
    gml__DecimalMinutesType              __item;                       
};

/// "http://www.opengis.net/gml/3.2":ArcMinutesType is a simpleType restriction of xs:nonNegativeInteger.
/// Value range is [..59]
typedef xsd__nonNegativeInteger gml__ArcMinutesType;

/// Class wrapper
class gml__ArcMinutesType__ : public xsd__anyType
{ public:
    gml__ArcMinutesType                  __item;                       
};

/// "http://www.opengis.net/gml/3.2":ArcSecondsType is a simpleType restriction of xs:decimal.
/// Value range is [0.00..60.00)
typedef xsd__decimal gml__ArcSecondsType;

/// Class wrapper
class gml__ArcSecondsType__ : public xsd__anyType
{ public:
    gml__ArcSecondsType                  __item;                       
};

/// "http://www.opengis.net/gml/3.2":IncrementOrder is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'gml__IncrementOrder' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum gml__IncrementOrder
{
	gml__IncrementOrder___x002bx_x002by,	///< xs:string value="+x+y"
	gml__IncrementOrder___x002by_x002bx,	///< xs:string value="+y+x"
	gml__IncrementOrder___x002bx_y,	///< xs:string value="+x-y"
	gml__IncrementOrder___x002dx_y,	///< xs:string value="-x-y"
};

/// Class wrapper
class gml__IncrementOrder_ : public xsd__anyType
{ public:
    enum gml__IncrementOrder             __item;                       
};

/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.isotc211.org/2005/gmd                                         *
 *                                                                            *
\******************************************************************************/


/// "http://www.isotc211.org/2005/gmd":MD_PixelOrientationCode_Type is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'gmd__MD_x005fPixelOrientationCode_x005fType' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum gmd__MD_x005fPixelOrientationCode_x005fType
{
	gmd__MD_x005fPixelOrientationCode_x005fType__center,	///< xs:string value="center"
	gmd__MD_x005fPixelOrientationCode_x005fType__lowerLeft,	///< xs:string value="lowerLeft"
	gmd__MD_x005fPixelOrientationCode_x005fType__lowerRight,	///< xs:string value="lowerRight"
	gmd__MD_x005fPixelOrientationCode_x005fType__upperRight,	///< xs:string value="upperRight"
	gmd__MD_x005fPixelOrientationCode_x005fType__upperLeft,	///< xs:string value="upperLeft"
};

/// Class wrapper
class gmd__MD_x005fPixelOrientationCode_x005fType_ : public xsd__anyType
{ public:
    enum gmd__MD_x005fPixelOrientationCode_x005fType  __item;                       
};

/// "http://www.isotc211.org/2005/gmd":MD_ObligationCode_Type is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'gmd__MD_x005fObligationCode_x005fType' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum gmd__MD_x005fObligationCode_x005fType
{
	gmd__MD_x005fObligationCode_x005fType__mandatory,	///< xs:string value="mandatory"
	gmd__MD_x005fObligationCode_x005fType__optional,	///< xs:string value="optional"
	gmd__MD_x005fObligationCode_x005fType__conditional,	///< xs:string value="conditional"
};

/// Class wrapper
class gmd__MD_x005fObligationCode_x005fType_ : public xsd__anyType
{ public:
    enum gmd__MD_x005fObligationCode_x005fType  __item;                       
};

/// "http://www.isotc211.org/2005/gmd":MD_TopicCategoryCode_Type is a simpleType restriction of xs:string.
/// @brief High-level geospatial data thematic classification to assist in the grouping and search of available geospatial datasets
/// Note: enum values are prefixed with 'gmd__MD_x005fTopicCategoryCode_x005fType' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum gmd__MD_x005fTopicCategoryCode_x005fType
{
	gmd__MD_x005fTopicCategoryCode_x005fType__farming,	///< xs:string value="farming"
	gmd__MD_x005fTopicCategoryCode_x005fType__biota,	///< xs:string value="biota"
	gmd__MD_x005fTopicCategoryCode_x005fType__boundaries,	///< xs:string value="boundaries"
	gmd__MD_x005fTopicCategoryCode_x005fType__climatologyMeteorologyAtmosphere,	///< xs:string value="climatologyMeteorologyAtmosphere"
	gmd__MD_x005fTopicCategoryCode_x005fType__economy,	///< xs:string value="economy"
	gmd__MD_x005fTopicCategoryCode_x005fType__elevation,	///< xs:string value="elevation"
	gmd__MD_x005fTopicCategoryCode_x005fType__environment,	///< xs:string value="environment"
	gmd__MD_x005fTopicCategoryCode_x005fType__geoscientificInformation,	///< xs:string value="geoscientificInformation"
	gmd__MD_x005fTopicCategoryCode_x005fType__health,	///< xs:string value="health"
	gmd__MD_x005fTopicCategoryCode_x005fType__imageryBaseMapsEarthCover,	///< xs:string value="imageryBaseMapsEarthCover"
	gmd__MD_x005fTopicCategoryCode_x005fType__intelligenceMilitary,	///< xs:string value="intelligenceMilitary"
	gmd__MD_x005fTopicCategoryCode_x005fType__inlandWaters,	///< xs:string value="inlandWaters"
	gmd__MD_x005fTopicCategoryCode_x005fType__location,	///< xs:string value="location"
	gmd__MD_x005fTopicCategoryCode_x005fType__oceans,	///< xs:string value="oceans"
	gmd__MD_x005fTopicCategoryCode_x005fType__planningCadastre,	///< xs:string value="planningCadastre"
	gmd__MD_x005fTopicCategoryCode_x005fType__society,	///< xs:string value="society"
	gmd__MD_x005fTopicCategoryCode_x005fType__structure,	///< xs:string value="structure"
	gmd__MD_x005fTopicCategoryCode_x005fType__transportation,	///< xs:string value="transportation"
	gmd__MD_x005fTopicCategoryCode_x005fType__utilitiesCommunication,	///< xs:string value="utilitiesCommunication"
};

/// Class wrapper
class gmd__MD_x005fTopicCategoryCode_x005fType_ : public xsd__anyType
{ public:
    enum gmd__MD_x005fTopicCategoryCode_x005fType  __item;                       
};

/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.w3.org/1999/xlink                                             *
 *                                                                            *
\******************************************************************************/


/// "http://www.w3.org/1999/xlink":typeType is a simpleType restriction of xs:token.
/// Note: enum values are prefixed with 'xlink__typeType' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum xlink__typeType
{
	xlink__typeType__simple,	///< xs:token value="simple"
	xlink__typeType__extended,	///< xs:token value="extended"
	xlink__typeType__title,	///< xs:token value="title"
	xlink__typeType__resource,	///< xs:token value="resource"
	xlink__typeType__locator,	///< xs:token value="locator"
	xlink__typeType__arc,	///< xs:token value="arc"
};

/// Class wrapper
class xlink__typeType_ : public xsd__anyType
{ public:
    enum xlink__typeType                 __item;                       
};

/// "http://www.w3.org/1999/xlink":hrefType is a simpleType restriction of xs:anyURI.
typedef xsd__anyURI xlink__hrefType;

/// Class wrapper
class xlink__hrefType__ : public xsd__anyType
{ public:
    xlink__hrefType                      __item;                       
};

/// "http://www.w3.org/1999/xlink":roleType is a simpleType restriction of xs:anyURI.
/// Length of this string is within 1.. characters
typedef xsd__anyURI xlink__roleType 1;

/// Class wrapper
class xlink__roleType__ : public xsd__anyType
{ public:
    xlink__roleType                      __item;                       
};

/// "http://www.w3.org/1999/xlink":arcroleType is a simpleType restriction of xs:anyURI.
/// Length of this string is within 1.. characters
typedef xsd__anyURI xlink__arcroleType 1;

/// Class wrapper
class xlink__arcroleType__ : public xsd__anyType
{ public:
    xlink__arcroleType                   __item;                       
};

/// "http://www.w3.org/1999/xlink":titleAttrType is a simpleType restriction of xs:string.
typedef std::string xlink__titleAttrType;

/// Class wrapper
class xlink__titleAttrType__ : public xsd__anyType
{ public:
    xlink__titleAttrType                 __item;                       
};

/// "http://www.w3.org/1999/xlink":showType is a simpleType restriction of xs:token.
/// Note: enum values are prefixed with 'xlink__showType' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum xlink__showType
{
	xlink__showType__new_,	///< xs:token value="new"
	xlink__showType__replace,	///< xs:token value="replace"
	xlink__showType__embed,	///< xs:token value="embed"
	xlink__showType__other,	///< xs:token value="other"
	xlink__showType__none,	///< xs:token value="none"
};

/// Class wrapper
class xlink__showType_ : public xsd__anyType
{ public:
    enum xlink__showType                 __item;                       
};

/// "http://www.w3.org/1999/xlink":actuateType is a simpleType restriction of xs:token.
/// Note: enum values are prefixed with 'xlink__actuateType' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum xlink__actuateType
{
	xlink__actuateType__onLoad,	///< xs:token value="onLoad"
	xlink__actuateType__onRequest,	///< xs:token value="onRequest"
	xlink__actuateType__other,	///< xs:token value="other"
	xlink__actuateType__none,	///< xs:token value="none"
};

/// Class wrapper
class xlink__actuateType_ : public xsd__anyType
{ public:
    enum xlink__actuateType              __item;                       
};

/// "http://www.w3.org/1999/xlink":labelType is a simpleType restriction of xs:NCName.
typedef xsd__NCName xlink__labelType;

/// Class wrapper
class xlink__labelType__ : public xsd__anyType
{ public:
    xlink__labelType                     __item;                       
};

/// "http://www.w3.org/1999/xlink":fromType is a simpleType restriction of xs:NCName.
typedef xsd__NCName xlink__fromType;

/// Class wrapper
class xlink__fromType__ : public xsd__anyType
{ public:
    xlink__fromType                      __item;                       
};

/// "http://www.w3.org/1999/xlink":toType is a simpleType restriction of xs:NCName.
typedef xsd__NCName xlink__toType;

/// Class wrapper
class xlink__toType__ : public xsd__anyType
{ public:
    xlink__toType                        __item;                       
};

/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.isotc211.org/2005/gco                                         *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.isotc211.org/2005/gss                                         *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.isotc211.org/2005/gts                                         *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.isotc211.org/2005/gsr                                         *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://inspire.ec.europa.eu/schemas/base/3.3                             *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://inspire.ec.europa.eu/schemas/base2/1.0                            *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://inspire.ec.europa.eu/schemas/lunom/3.0                            *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.interactive-instruments.de/ShapeChange/AppInfo                *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.opengis.net/gml/3.2                                           *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.isotc211.org/2005/gmd                                         *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.w3.org/1999/xlink                                             *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.isotc211.org/2005/gco                                         *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.isotc211.org/2005/gss                                         *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.isotc211.org/2005/gts                                         *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.isotc211.org/2005/gsr                                         *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.isotc211.org/2005/gmd                                         *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.w3.org/1999/xlink                                             *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.isotc211.org/2005/gco                                         *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.isotc211.org/2005/gss                                         *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.isotc211.org/2005/gts                                         *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.isotc211.org/2005/gsr                                         *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.isotc211.org/2005/gmd                                         *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.w3.org/1999/xlink                                             *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.isotc211.org/2005/gco                                         *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.isotc211.org/2005/gss                                         *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.isotc211.org/2005/gts                                         *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.isotc211.org/2005/gsr                                         *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.isotc211.org/2005/gmd                                         *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.w3.org/1999/xlink                                             *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.isotc211.org/2005/gco                                         *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.isotc211.org/2005/gss                                         *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.isotc211.org/2005/gts                                         *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.isotc211.org/2005/gsr                                         *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.isotc211.org/2005/gmd                                         *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.w3.org/1999/xlink                                             *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.isotc211.org/2005/gco                                         *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.isotc211.org/2005/gss                                         *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.isotc211.org/2005/gts                                         *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.isotc211.org/2005/gsr                                         *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://inspire.ec.europa.eu/schemas/plu/3.0                              *
 *                                                                            *
\******************************************************************************/


/// "http://inspire.ec.europa.eu/schemas/plu/3.0":ZoningElementPropertyType is a complexType.
/// class plu__ZoningElementPropertyType operations:
/// - soap_new_plu__ZoningElementPropertyType(soap*) allocate
/// - soap_new_plu__ZoningElementPropertyType(soap*, int num) allocate array
/// - soap_new_req_plu__ZoningElementPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_plu__ZoningElementPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_plu__ZoningElementPropertyType(soap*, plu__ZoningElementPropertyType*) deserialize from a stream
/// - int soap_write_plu__ZoningElementPropertyType(soap, plu__ZoningElementPropertyType*) serialize to a stream
class plu__ZoningElementPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __plu__ZoningElementPropertyType_sequence
    {
/// @brief -- Name -- zoning element -- Definition -- A spatial object which is homogeneous regarding the permitted uses of land based on zoning which separate one set of land uses from another. -- Description -- Zoning elements refer to the regulation of the kinds of activities which will be acceptable on particular lots (such as open space, residential, agricultural, commercial or industrial). The intensity of use at which those activities can be performed (from low-density housing such as single family homes to high-density such as high-rise apartment buildings), the height of buildings, the amount of space that structures may occupy, the proportions of the types of space on a lot, such as how much landscaped space, impervious surface, traffic lanes, and parking may be provided.
/// Element reference "http://inspire.ec.europa.eu/schemas/plu/3.0":ZoningElement.
    plu__ZoningElementType*              ZoningElement                  1;	///< Required element.
    }>                                   __ZoningElementPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute nilReason of type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         gml__remoteSchema              0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
/// Attribute owns of type xs:boolean.
   @bool                                 owns                           0 = false;	///< Default value="false".
};

/// "http://inspire.ec.europa.eu/schemas/plu/3.0":OfficialDocumentationPropertyType is a complexType.
/// class plu__OfficialDocumentationPropertyType operations:
/// - soap_new_plu__OfficialDocumentationPropertyType(soap*) allocate
/// - soap_new_plu__OfficialDocumentationPropertyType(soap*, int num) allocate array
/// - soap_new_req_plu__OfficialDocumentationPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_plu__OfficialDocumentationPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_plu__OfficialDocumentationPropertyType(soap*, plu__OfficialDocumentationPropertyType*) deserialize from a stream
/// - int soap_write_plu__OfficialDocumentationPropertyType(soap, plu__OfficialDocumentationPropertyType*) serialize to a stream
class plu__OfficialDocumentationPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __plu__OfficialDocumentationPropertyType_sequence
    {
/// @brief -- Name -- official documentation -- Definition -- The official documentation that composes the spatial plan; it may be composed of, the applicable legislation, the regulations, cartographic elements, descriptive elements that may be associated with the complete spatial plan, a zoning element or a supplementary regulation . In some Member States the actual textual regulation will be part of the data set (and can be put in the regulationText attribute), in other Member States the text will not be part of the data set and will be referenced via a reference to a document or a legal act. At least one of the three voidable values shall be provided. -- Description -- NOTE: The LegislationCitation is the value type of the attribute regulation reference. An example of a regulation reference would be: http://www2.vlaanderen.be /ruimtelijk/grup/00350/00362_00001/data/ 212_00362_00001_d_0BVR.pdf.
/// Element reference "http://inspire.ec.europa.eu/schemas/plu/3.0":OfficialDocumentation.
    plu__OfficialDocumentationType*      OfficialDocumentation          1;	///< Required element.
    }>                                   __OfficialDocumentationPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute nilReason of type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         gml__remoteSchema              0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
/// Attribute owns of type xs:boolean.
   @bool                                 owns                           0 = false;	///< Default value="false".
};

/// "http://inspire.ec.europa.eu/schemas/plu/3.0":DimensioningIndicationMeasureValuePropertyType is a complexType.
/// class plu__DimensioningIndicationMeasureValuePropertyType operations:
/// - soap_new_plu__DimensioningIndicationMeasureValuePropertyType(soap*) allocate
/// - soap_new_plu__DimensioningIndicationMeasureValuePropertyType(soap*, int num) allocate array
/// - soap_new_req_plu__DimensioningIndicationMeasureValuePropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_plu__DimensioningIndicationMeasureValuePropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_plu__DimensioningIndicationMeasureValuePropertyType(soap*, plu__DimensioningIndicationMeasureValuePropertyType*) deserialize from a stream
/// - int soap_write_plu__DimensioningIndicationMeasureValuePropertyType(soap, plu__DimensioningIndicationMeasureValuePropertyType*) serialize to a stream
class plu__DimensioningIndicationMeasureValuePropertyType : public xsd__anyType
{ public:
/// @brief -- Name -- dimension indication measure value -- Definition -- Dimensioning indication whose value is a measure.
/// Element reference "http://inspire.ec.europa.eu/schemas/plu/3.0":DimensioningIndicationMeasureValue.
    plu__DimensioningIndicationMeasureValueType*  DimensioningIndicationMeasureValue 1;	///< Required element.
};

/// "http://inspire.ec.europa.eu/schemas/plu/3.0":DimensioningIndicationIntegerValuePropertyType is a complexType.
/// class plu__DimensioningIndicationIntegerValuePropertyType operations:
/// - soap_new_plu__DimensioningIndicationIntegerValuePropertyType(soap*) allocate
/// - soap_new_plu__DimensioningIndicationIntegerValuePropertyType(soap*, int num) allocate array
/// - soap_new_req_plu__DimensioningIndicationIntegerValuePropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_plu__DimensioningIndicationIntegerValuePropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_plu__DimensioningIndicationIntegerValuePropertyType(soap*, plu__DimensioningIndicationIntegerValuePropertyType*) deserialize from a stream
/// - int soap_write_plu__DimensioningIndicationIntegerValuePropertyType(soap, plu__DimensioningIndicationIntegerValuePropertyType*) serialize to a stream
class plu__DimensioningIndicationIntegerValuePropertyType : public xsd__anyType
{ public:
/// @brief -- Name -- dimension indication integer value -- Definition -- Dimensioning indication whose value is of type integer.
/// Element reference "http://inspire.ec.europa.eu/schemas/plu/3.0":DimensioningIndicationIntegerValue.
    plu__DimensioningIndicationIntegerValueType*  DimensioningIndicationIntegerValue 1;	///< Required element.
};

/// "http://inspire.ec.europa.eu/schemas/plu/3.0":DimensioningIndicationCharacterValuePropertyType is a complexType.
/// class plu__DimensioningIndicationCharacterValuePropertyType operations:
/// - soap_new_plu__DimensioningIndicationCharacterValuePropertyType(soap*) allocate
/// - soap_new_plu__DimensioningIndicationCharacterValuePropertyType(soap*, int num) allocate array
/// - soap_new_req_plu__DimensioningIndicationCharacterValuePropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_plu__DimensioningIndicationCharacterValuePropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_plu__DimensioningIndicationCharacterValuePropertyType(soap*, plu__DimensioningIndicationCharacterValuePropertyType*) deserialize from a stream
/// - int soap_write_plu__DimensioningIndicationCharacterValuePropertyType(soap, plu__DimensioningIndicationCharacterValuePropertyType*) serialize to a stream
class plu__DimensioningIndicationCharacterValuePropertyType : public xsd__anyType
{ public:
/// @brief -- Name -- dimension indication character value -- Definition -- Dimensioning indication whose value is of type CharacterString.
/// Element reference "http://inspire.ec.europa.eu/schemas/plu/3.0":DimensioningIndicationCharacterValue.
    plu__DimensioningIndicationCharacterValueType*  DimensioningIndicationCharacterValue 1;	///< Required element.
};

/// "http://inspire.ec.europa.eu/schemas/plu/3.0":SupplementaryRegulationPropertyType is a complexType.
/// class plu__SupplementaryRegulationPropertyType operations:
/// - soap_new_plu__SupplementaryRegulationPropertyType(soap*) allocate
/// - soap_new_plu__SupplementaryRegulationPropertyType(soap*, int num) allocate array
/// - soap_new_req_plu__SupplementaryRegulationPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_plu__SupplementaryRegulationPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_plu__SupplementaryRegulationPropertyType(soap*, plu__SupplementaryRegulationPropertyType*) deserialize from a stream
/// - int soap_write_plu__SupplementaryRegulationPropertyType(soap, plu__SupplementaryRegulationPropertyType*) serialize to a stream
class plu__SupplementaryRegulationPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __plu__SupplementaryRegulationPropertyType_sequence
    {
/// @brief -- Name -- supplementary regulation -- Definition -- A spatial object (point, line or polygon) of a spatial plan that provides supplementary information and/or limitation of the use of land/water necessary for spatial planning reasons or to formalise external rules defined in legal text. -- Description -- NOTE the supplementary regulations affects all land use that overlap with the geometry EXAMPLE an air field generates restriction in its surroundings regarding aircraft landing, radar and telecommunication devices. It is the buffer around these artefacts that generates the supplementary regulation on the Land Use.
/// Element reference "http://inspire.ec.europa.eu/schemas/plu/3.0":SupplementaryRegulation.
    plu__SupplementaryRegulationType*    SupplementaryRegulation        1;	///< Required element.
    }>                                   __SupplementaryRegulationPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute nilReason of type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         gml__remoteSchema              0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
/// Attribute owns of type xs:boolean.
   @bool                                 owns                           0 = false;	///< Default value="false".
};

/// "http://inspire.ec.europa.eu/schemas/plu/3.0":DimensioningIndicationValueType is a complexType.
/// class plu__DimensioningIndicationValueType operations:
/// - soap_new_plu__DimensioningIndicationValueType(soap*) allocate
/// - soap_new_plu__DimensioningIndicationValueType(soap*, int num) allocate array
/// - soap_new_req_plu__DimensioningIndicationValueType(soap*, ...) allocate, set required members
/// - soap_new_set_plu__DimensioningIndicationValueType(soap*, ...) allocate, set all public members
/// - int soap_read_plu__DimensioningIndicationValueType(soap*, plu__DimensioningIndicationValueType*) deserialize from a stream
/// - int soap_write_plu__DimensioningIndicationValueType(soap, plu__DimensioningIndicationValueType*) serialize to a stream
class plu__DimensioningIndicationValueType : public xsd__anyType
{ public:
/// @brief -- Definition -- Description of the dimension indication.
/// Element indicationReference of type xs:string.
    std::string                          indicationReference            1;	///< Required element.
};

/// "http://inspire.ec.europa.eu/schemas/plu/3.0":DimensioningIndicationValuePropertyType is a complexType.
/// class plu__DimensioningIndicationValuePropertyType operations:
/// - soap_new_plu__DimensioningIndicationValuePropertyType(soap*) allocate
/// - soap_new_plu__DimensioningIndicationValuePropertyType(soap*, int num) allocate array
/// - soap_new_req_plu__DimensioningIndicationValuePropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_plu__DimensioningIndicationValuePropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_plu__DimensioningIndicationValuePropertyType(soap*, plu__DimensioningIndicationValuePropertyType*) deserialize from a stream
/// - int soap_write_plu__DimensioningIndicationValuePropertyType(soap, plu__DimensioningIndicationValuePropertyType*) serialize to a stream
class plu__DimensioningIndicationValuePropertyType : public xsd__anyType
{ public:
/// @brief -- Name -- Dimension Indication -- Definition -- Specifications about the dimensioning of the urban developments.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="DimensioningIndicationValue"> with elements <DimensioningIndicationMeasureValue> <DimensioningIndicationIntegerValue> <DimensioningIndicationCharacterValue> <DimensioningIndicationRealValue>
   $int                                  __unionDimensioningIndicationValue 0;	///< Union _plu__union_DimensioningIndicationValuePropertyType selector: set to SOAP_UNION__plu__union_DimensioningIndicationValuePropertyType_<fieldname>
/// Union for substitutionGroup="DimensioningIndicationValue"
    union _plu__union_DimensioningIndicationValuePropertyType
    {
/// @brief -- Name -- Dimension Indication -- Definition -- Specifications about the dimensioning of the urban developments.
/// Element reference "http://inspire.ec.europa.eu/schemas/plu/3.0":DimensioningIndicationValue.
    plu__DimensioningIndicationValueType*  DimensioningIndicationValue    1;	///< Required element.
/// @brief -- Name -- dimension indication measure value -- Definition -- Dimensioning indication whose value is a measure.
/// Element DimensioningIndicationMeasureValue of type "http://inspire.ec.europa.eu/schemas/plu/3.0":DimensioningIndicationMeasureValueType.
    plu__DimensioningIndicationMeasureValueType*  DimensioningIndicationMeasureValue 1;	///< Required element.
/// @brief -- Name -- dimension indication integer value -- Definition -- Dimensioning indication whose value is of type integer.
/// Element DimensioningIndicationIntegerValue of type "http://inspire.ec.europa.eu/schemas/plu/3.0":DimensioningIndicationIntegerValueType.
    plu__DimensioningIndicationIntegerValueType*  DimensioningIndicationIntegerValue 1;	///< Required element.
/// @brief -- Name -- dimension indication character value -- Definition -- Dimensioning indication whose value is of type CharacterString.
/// Element DimensioningIndicationCharacterValue of type "http://inspire.ec.europa.eu/schemas/plu/3.0":DimensioningIndicationCharacterValueType.
    plu__DimensioningIndicationCharacterValueType*  DimensioningIndicationCharacterValue 1;	///< Required element.
/// @brief -- Name -- dimension indication real value -- Definition -- Dimensioning indication whose value is a floating point number.
/// Element DimensioningIndicationRealValue of type "http://inspire.ec.europa.eu/schemas/plu/3.0":DimensioningIndicationRealValueType.
    plu__DimensioningIndicationRealValueType*  DimensioningIndicationRealValue 1;	///< Required element.
    }                                    __union_DimensioningIndicationValuePropertyType;
//  END OF CHOICE OF SUBSTITUTIONS
};

/// "http://inspire.ec.europa.eu/schemas/plu/3.0":SpatialPlanPropertyType is a complexType.
/// class plu__SpatialPlanPropertyType operations:
/// - soap_new_plu__SpatialPlanPropertyType(soap*) allocate
/// - soap_new_plu__SpatialPlanPropertyType(soap*, int num) allocate array
/// - soap_new_req_plu__SpatialPlanPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_plu__SpatialPlanPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_plu__SpatialPlanPropertyType(soap*, plu__SpatialPlanPropertyType*) deserialize from a stream
/// - int soap_write_plu__SpatialPlanPropertyType(soap, plu__SpatialPlanPropertyType*) serialize to a stream
class plu__SpatialPlanPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __plu__SpatialPlanPropertyType_sequence
    {
/// @brief -- Name -- spatial plan -- Definition -- A set of documents that indicates a strategic direction for the development of a given geographic area, states the policies, priorities, programmes and land allocations that will implement the strategic direction and influences the distribution of people and activities in spaces of various scales. Spatial plans may be developed for urban planning, regional planning, environmental planning, landscape planning, national spatial plans, or spatial planning at the Union level.
/// Element reference "http://inspire.ec.europa.eu/schemas/plu/3.0":SpatialPlan.
    plu__SpatialPlanType*                SpatialPlan                    1;	///< Required element.
    }>                                   __SpatialPlanPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute nilReason of type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         gml__remoteSchema              0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
/// Attribute owns of type xs:boolean.
   @bool                                 owns                           0 = false;	///< Default value="false".
};

/// "http://inspire.ec.europa.eu/schemas/plu/3.0":DimensioningIndicationRealValuePropertyType is a complexType.
/// class plu__DimensioningIndicationRealValuePropertyType operations:
/// - soap_new_plu__DimensioningIndicationRealValuePropertyType(soap*) allocate
/// - soap_new_plu__DimensioningIndicationRealValuePropertyType(soap*, int num) allocate array
/// - soap_new_req_plu__DimensioningIndicationRealValuePropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_plu__DimensioningIndicationRealValuePropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_plu__DimensioningIndicationRealValuePropertyType(soap*, plu__DimensioningIndicationRealValuePropertyType*) deserialize from a stream
/// - int soap_write_plu__DimensioningIndicationRealValuePropertyType(soap, plu__DimensioningIndicationRealValuePropertyType*) serialize to a stream
class plu__DimensioningIndicationRealValuePropertyType : public xsd__anyType
{ public:
/// @brief -- Name -- dimension indication real value -- Definition -- Dimensioning indication whose value is a floating point number.
/// Element reference "http://inspire.ec.europa.eu/schemas/plu/3.0":DimensioningIndicationRealValue.
    plu__DimensioningIndicationRealValueType*  DimensioningIndicationRealValue 1;	///< Required element.
};

/// "http://inspire.ec.europa.eu/schemas/plu/3.0":OrdinanceValueType is a complexType.
/// class plu__OrdinanceValueType operations:
/// - soap_new_plu__OrdinanceValueType(soap*) allocate
/// - soap_new_plu__OrdinanceValueType(soap*, int num) allocate array
/// - soap_new_req_plu__OrdinanceValueType(soap*, ...) allocate, set required members
/// - soap_new_set_plu__OrdinanceValueType(soap*, ...) allocate, set all public members
/// - int soap_read_plu__OrdinanceValueType(soap*, plu__OrdinanceValueType*) deserialize from a stream
/// - int soap_write_plu__OrdinanceValueType(soap, plu__OrdinanceValueType*) serialize to a stream
class plu__OrdinanceValueType : public xsd__anyType
{ public:
/// @brief -- Definition -- Date of the relevant administrative ordinance. -- Description -- NOTE This attribute is multiple because, independently from the current legal status of the plan, there can be references to the dates of more than one ordinance, in relation to the different steps that the planning process has already undergone (e.g. ordinance for the preparation of a new plan, ordinance of adoption, ordinance of approval, etc.).
/// Element ordinanceDate of type xs:dateTime.
    time_t                               ordinanceDate                  1;	///< Required element.
/// @brief -- Definition -- Reference to relevant administrative ordinance. -- Description -- NOTE This attribute is multiple because, independently from the current legal status of the plan, there can be references to more than one ordinance, in relation to the different steps that the planning process has already undergone (e.g. ordinance for the preparation of a new plan, ordinance of adoption, ordinance of approval, etc.).
/// Element ordinanceReference of type xs:string.
    std::string                          ordinanceReference             1;	///< Required element.
};

/// "http://inspire.ec.europa.eu/schemas/plu/3.0":OrdinanceValuePropertyType is a complexType.
/// class plu__OrdinanceValuePropertyType operations:
/// - soap_new_plu__OrdinanceValuePropertyType(soap*) allocate
/// - soap_new_plu__OrdinanceValuePropertyType(soap*, int num) allocate array
/// - soap_new_req_plu__OrdinanceValuePropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_plu__OrdinanceValuePropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_plu__OrdinanceValuePropertyType(soap*, plu__OrdinanceValuePropertyType*) deserialize from a stream
/// - int soap_write_plu__OrdinanceValuePropertyType(soap, plu__OrdinanceValuePropertyType*) serialize to a stream
class plu__OrdinanceValuePropertyType : public xsd__anyType
{ public:
/// @brief -- Definition -- Reference to administrative ordinance. Ordinance is a regulation/rule that is adopted by an authority that is legally mandated to take such ordinance.
/// Element reference "http://inspire.ec.europa.eu/schemas/plu/3.0":OrdinanceValue.
    plu__OrdinanceValueType*             OrdinanceValue                 1;	///< Required element.
};

/// "http://inspire.ec.europa.eu/schemas/plu/3.0":BackgroundMapValueType is a complexType.
/// class plu__BackgroundMapValueType operations:
/// - soap_new_plu__BackgroundMapValueType(soap*) allocate
/// - soap_new_plu__BackgroundMapValueType(soap*, int num) allocate array
/// - soap_new_req_plu__BackgroundMapValueType(soap*, ...) allocate, set required members
/// - soap_new_set_plu__BackgroundMapValueType(soap*, ...) allocate, set all public members
/// - int soap_read_plu__BackgroundMapValueType(soap*, plu__BackgroundMapValueType*) deserialize from a stream
/// - int soap_write_plu__BackgroundMapValueType(soap, plu__BackgroundMapValueType*) serialize to a stream
class plu__BackgroundMapValueType : public xsd__anyType
{ public:
/// @brief -- Name -- background map date -- Definition -- Date of the background map used.
/// Element backgroundMapDate of type xs:dateTime.
    time_t                               backgroundMapDate              1;	///< Required element.
/// @brief -- Definition -- Reference to the background map that has been used.
/// Element backgroundMapReference of type xs:string.
    std::string                          backgroundMapReference         1;	///< Required element.
/// @brief -- Name -- background map URI -- Definition -- URI referring to service that provides background map.
/// class _plu__BackgroundMapValueType_backgroudMapURI operations:
/// - soap_new__plu__BackgroundMapValueType_backgroudMapURI(soap*) allocate
/// - soap_new__plu__BackgroundMapValueType_backgroudMapURI(soap*, int num) allocate array
/// - soap_new_req__plu__BackgroundMapValueType_backgroudMapURI(soap*, ...) allocate, set required members
/// - soap_new_set__plu__BackgroundMapValueType_backgroudMapURI(soap*, ...) allocate, set all public members
/// - int soap_read__plu__BackgroundMapValueType_backgroudMapURI(soap*, _plu__BackgroundMapValueType_backgroudMapURI*) deserialize from a stream
/// - int soap_write__plu__BackgroundMapValueType_backgroudMapURI(soap, _plu__BackgroundMapValueType_backgroudMapURI*) serialize to a stream
    class _plu__BackgroundMapValueType_backgroudMapURI
    {
/// __item wraps 'xs:anyURI' simpleContent.
    xsd__anyURI                          __item                        ;
/// Attribute nilReason of type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
    }                                   *backgroudMapURI               ;	///< Nillable pointer.
};

/// "http://inspire.ec.europa.eu/schemas/plu/3.0":BackgroundMapValuePropertyType is a complexType.
/// class plu__BackgroundMapValuePropertyType operations:
/// - soap_new_plu__BackgroundMapValuePropertyType(soap*) allocate
/// - soap_new_plu__BackgroundMapValuePropertyType(soap*, int num) allocate array
/// - soap_new_req_plu__BackgroundMapValuePropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_plu__BackgroundMapValuePropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_plu__BackgroundMapValuePropertyType(soap*, plu__BackgroundMapValuePropertyType*) deserialize from a stream
/// - int soap_write_plu__BackgroundMapValuePropertyType(soap, plu__BackgroundMapValuePropertyType*) serialize to a stream
class plu__BackgroundMapValuePropertyType : public xsd__anyType
{ public:
/// @brief -- Definition -- Information regarding the map that has been used as a background in the definition of a spatial plan, a zoning element or a supplementary regulation.
/// Element reference "http://inspire.ec.europa.eu/schemas/plu/3.0":BackgroundMapValue.
    plu__BackgroundMapValueType*         BackgroundMapValue             1;	///< Required element.
};

/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://inspire.ec.europa.eu/schemas/base/3.3                             *
 *                                                                            *
\******************************************************************************/


/// "http://inspire.ec.europa.eu/schemas/base/3.3":SpatialDataSetPropertyType is a complexType.
/// class base__SpatialDataSetPropertyType operations:
/// - soap_new_base__SpatialDataSetPropertyType(soap*) allocate
/// - soap_new_base__SpatialDataSetPropertyType(soap*, int num) allocate array
/// - soap_new_req_base__SpatialDataSetPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_base__SpatialDataSetPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_base__SpatialDataSetPropertyType(soap*, base__SpatialDataSetPropertyType*) deserialize from a stream
/// - int soap_write_base__SpatialDataSetPropertyType(soap, base__SpatialDataSetPropertyType*) serialize to a stream
class base__SpatialDataSetPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __base__SpatialDataSetPropertyType_sequence
    {
/// @brief -- Definition -- Identifiable collection of spatial data. -- Description -- NOTE The type SpatialDataSet is offered as a pre-defined type for spatial data sets. The scope of this type is packaging pre-defined data sets for the non-direct access download service. It may be reused in thematic application schemas, but if it does not fit an application-schema-specific data set object should be modelled. This type may have the same name and definition like this type, but may have a different set of properties. This type specifies three properties: an external object identifier, a container for metadata (may be void), and an association to zero or more spatial objects.
/// Element reference "http://inspire.ec.europa.eu/schemas/base/3.3":SpatialDataSet.
    base__SpatialDataSetType*            SpatialDataSet                 1;	///< Required element.
    }>                                   __SpatialDataSetPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute nilReason of type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         gml__remoteSchema              0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
/// Attribute owns of type xs:boolean.
   @bool                                 owns                           0 = false;	///< Default value="false".
};

/// "http://inspire.ec.europa.eu/schemas/base/3.3":IdentifierType is a complexType.
/// class base__IdentifierType operations:
/// - soap_new_base__IdentifierType(soap*) allocate
/// - soap_new_base__IdentifierType(soap*, int num) allocate array
/// - soap_new_req_base__IdentifierType(soap*, ...) allocate, set required members
/// - soap_new_set_base__IdentifierType(soap*, ...) allocate, set all public members
/// - int soap_read_base__IdentifierType(soap*, base__IdentifierType*) deserialize from a stream
/// - int soap_write_base__IdentifierType(soap, base__IdentifierType*) serialize to a stream
class base__IdentifierType : public xsd__anyType
{ public:
/// @brief -- Definition -- A local identifier, assigned by the data provider. The local identifier is unique within the namespace, that is no other spatial object carries the same unique identifier. -- Description -- NOTE It is the responsibility of the data provider to guarantee uniqueness of the local identifier within the namespace.
/// Element localId of type xs:string.
    std::string                          localId                        1;	///< Required element.
/// @brief -- Definition -- Namespace uniquely identifying the data source of the spatial object. -- Description -- NOTE The namespace value will be owned by the data provider of the spatial object and will be registered in the INSPIRE External Object Identifier Namespaces Register.
/// Element namespace of type xs:string.
    std::string                          namespace_                     1;	///< Required element.
/// @brief -- Definition -- The identifier of the particular version of the spatial object, with a maximum length of 25 characters. If the specification of a spatial object type with an external object identifier includes life-cycle information, the version identifier is used to distinguish between the different versions of a spatial object. Within the set of all versions of a spatial object, the version identifier is unique. -- Description -- NOTE The maximum length has been selected to allow for time stamps based on ISO 8601, for example, "2007-02-12T12:12:12+05:30" as the version identifier. NOTE 2 The property is void, if the spatial data set does not distinguish between different versions of the spatial object. It is missing, if the spatial object type does not support any life-cycle information.
/// class _base__IdentifierType_versionId operations:
/// - soap_new__base__IdentifierType_versionId(soap*) allocate
/// - soap_new__base__IdentifierType_versionId(soap*, int num) allocate array
/// - soap_new_req__base__IdentifierType_versionId(soap*, ...) allocate, set required members
/// - soap_new_set__base__IdentifierType_versionId(soap*, ...) allocate, set all public members
/// - int soap_read__base__IdentifierType_versionId(soap*, _base__IdentifierType_versionId*) deserialize from a stream
/// - int soap_write__base__IdentifierType_versionId(soap, _base__IdentifierType_versionId*) serialize to a stream
    class _base__IdentifierType_versionId
    {
/// __item wraps 'xs:string' simpleContent.
    std::string                          __item                        ;
/// Attribute nilReason of type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
    }                                   *versionId                      0;	///< Nillable pointer.
};

/// "http://inspire.ec.europa.eu/schemas/base/3.3":IdentifierPropertyType is a complexType.
/// class base__IdentifierPropertyType operations:
/// - soap_new_base__IdentifierPropertyType(soap*) allocate
/// - soap_new_base__IdentifierPropertyType(soap*, int num) allocate array
/// - soap_new_req_base__IdentifierPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_base__IdentifierPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_base__IdentifierPropertyType(soap*, base__IdentifierPropertyType*) deserialize from a stream
/// - int soap_write_base__IdentifierPropertyType(soap, base__IdentifierPropertyType*) serialize to a stream
class base__IdentifierPropertyType : public xsd__anyType
{ public:
/// @brief -- Definition -- External unique object identifier published by the responsible body, which may be used by external applications to reference the spatial object. -- Description -- NOTE1 External object identifiers are distinct from thematic object identifiers. NOTE 2 The voidable version identifier attribute is not part of the unique identifier of a spatial object and may be used to distinguish two versions of the same spatial object. NOTE 3 The unique identifier will not change during the life-time of a spatial object.
/// Element reference "http://inspire.ec.europa.eu/schemas/base/3.3":Identifier.
    base__IdentifierType*                Identifier                     1;	///< Required element.
};

/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://inspire.ec.europa.eu/schemas/base2/1.0                            *
 *                                                                            *
\******************************************************************************/


/// "http://inspire.ec.europa.eu/schemas/base2/1.0":OfficialJournalInformationType is a complexType.
/// class base2__OfficialJournalInformationType operations:
/// - soap_new_base2__OfficialJournalInformationType(soap*) allocate
/// - soap_new_base2__OfficialJournalInformationType(soap*, int num) allocate array
/// - soap_new_req_base2__OfficialJournalInformationType(soap*, ...) allocate, set required members
/// - soap_new_set_base2__OfficialJournalInformationType(soap*, ...) allocate, set all public members
/// - int soap_read_base2__OfficialJournalInformationType(soap*, base2__OfficialJournalInformationType*) deserialize from a stream
/// - int soap_write_base2__OfficialJournalInformationType(soap, base2__OfficialJournalInformationType*) serialize to a stream
class base2__OfficialJournalInformationType : public xsd__anyType
{ public:
/// @brief -- Name -- official journal identification -- Definition -- Reference to the location within the official journal within which the legislative instrument was published. This reference shall be comprised of three parts: - the title of the official journal; - the volume and/or series number; - Page number(s); -- Description -- EXAMPLE: Official Journal of European Union (OJEU), L108, Volume 50, 1-14
/// Element officialJournalIdentification of type xs:string.
    std::string                          officialJournalIdentification  1;	///< Required element.
/// @brief -- Name -- ISSN -- Definition -- The International Standard Serial Number (ISSN) is an eight-digit number that identifies the periodical publication in which the legislative instrument was published. -- Description -- NOTE: Periodical publilcations are issued in successive parts, usually having numerical or chronological designations and required that each serial publication can be uniquely identified. EXAMPLE: OJ Series in which INSPIRE Directive is published has been assigned the ISSN: 1725-2555
/// Element ISSN of type xs:string.
    std::string*                         ISSN                           0;	///< Optional element.
/// @brief -- Name -- ISBN -- Definition -- International Standard Book Number (ISBN) is an nine-digit number that uniquely identifies the book in which the legislative instrument was published.
/// Element ISBN of type xs:string.
    std::string*                         ISBN                           0;	///< Optional element.
/// @brief -- Name -- link to online version -- Definition -- Link to an online version of the official journal
/// Element linkToJournal of type xs:anyURI.
    xsd__anyURI*                         linkToJournal                  0;	///< Optional element.
};

/// "http://inspire.ec.europa.eu/schemas/base2/1.0":OfficialJournalInformationPropertyType is a complexType.
/// class base2__OfficialJournalInformationPropertyType operations:
/// - soap_new_base2__OfficialJournalInformationPropertyType(soap*) allocate
/// - soap_new_base2__OfficialJournalInformationPropertyType(soap*, int num) allocate array
/// - soap_new_req_base2__OfficialJournalInformationPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_base2__OfficialJournalInformationPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_base2__OfficialJournalInformationPropertyType(soap*, base2__OfficialJournalInformationPropertyType*) deserialize from a stream
/// - int soap_write_base2__OfficialJournalInformationPropertyType(soap, base2__OfficialJournalInformationPropertyType*) serialize to a stream
class base2__OfficialJournalInformationPropertyType : public xsd__anyType
{ public:
/// @brief -- Name -- official journal information -- Definition -- Full citation of the location of the legislative instrument within the official journal.
/// Element reference "http://inspire.ec.europa.eu/schemas/base2/1.0":OfficialJournalInformation.
    base2__OfficialJournalInformationType*  OfficialJournalInformation     1;	///< Required element.
};

/// "http://inspire.ec.europa.eu/schemas/base2/1.0":LegislationCitationPropertyType is a complexType.
/// class base2__LegislationCitationPropertyType operations:
/// - soap_new_base2__LegislationCitationPropertyType(soap*) allocate
/// - soap_new_base2__LegislationCitationPropertyType(soap*, int num) allocate array
/// - soap_new_req_base2__LegislationCitationPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_base2__LegislationCitationPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_base2__LegislationCitationPropertyType(soap*, base2__LegislationCitationPropertyType*) deserialize from a stream
/// - int soap_write_base2__LegislationCitationPropertyType(soap, base2__LegislationCitationPropertyType*) serialize to a stream
class base2__LegislationCitationPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __base2__LegislationCitationPropertyType_sequence
    {
/// @brief -- Name -- legislation citation -- Definition -- Citation for the purposes of unambiguously referencing a legal act or a specific part of a legal act.
/// Element reference "http://inspire.ec.europa.eu/schemas/base2/1.0":LegislationCitation.
    base2__LegislationCitationType*      LegislationCitation            1;	///< Required element.
    }>                                   __LegislationCitationPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute nilReason of type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         gml__remoteSchema              0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
/// Attribute owns of type xs:boolean.
   @bool                                 owns                           0 = false;	///< Default value="false".
};

/// "http://inspire.ec.europa.eu/schemas/base2/1.0":ContactType is a complexType.
/// class base2__ContactType operations:
/// - soap_new_base2__ContactType(soap*) allocate
/// - soap_new_base2__ContactType(soap*, int num) allocate array
/// - soap_new_req_base2__ContactType(soap*, ...) allocate, set required members
/// - soap_new_set_base2__ContactType(soap*, ...) allocate, set all public members
/// - int soap_read_base2__ContactType(soap*, base2__ContactType*) deserialize from a stream
/// - int soap_write_base2__ContactType(soap, base2__ContactType*) serialize to a stream
class base2__ContactType : public xsd__anyType
{ public:
/// @brief -- Definition -- An address provided as free text.
/// Element address of type "http://www.isotc211.org/2005/gmd":PT_FreeText_PropertyType.
    gmd__PT_x005fFreeText_x005fPropertyType*  address                        0;	///< Nillable pointer.
/// @brief -- Definition -- Supplementary instructions on how or when to contact an individual or organisation. -- Description --
/// Element contactInstructions of type "http://www.isotc211.org/2005/gmd":PT_FreeText_PropertyType.
    gmd__PT_x005fFreeText_x005fPropertyType*  contactInstructions            0;	///< Nillable pointer.
/// @brief -- Definition -- An address of the organisation's or individual's electronic mailbox. -- Description --
/// class _base2__ContactType_electronicMailAddress operations:
/// - soap_new__base2__ContactType_electronicMailAddress(soap*) allocate
/// - soap_new__base2__ContactType_electronicMailAddress(soap*, int num) allocate array
/// - soap_new_req__base2__ContactType_electronicMailAddress(soap*, ...) allocate, set required members
/// - soap_new_set__base2__ContactType_electronicMailAddress(soap*, ...) allocate, set all public members
/// - int soap_read__base2__ContactType_electronicMailAddress(soap*, _base2__ContactType_electronicMailAddress*) deserialize from a stream
/// - int soap_write__base2__ContactType_electronicMailAddress(soap, _base2__ContactType_electronicMailAddress*) serialize to a stream
    class _base2__ContactType_electronicMailAddress
    {
/// __item wraps 'xs:string' simpleContent.
    std::string                          __item                        ;
/// Attribute nilReason of type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
    }                                   *electronicMailAddress          0;	///< Nillable pointer.
/// @brief -- Definition -- Periods of time when the organisation or individual can be contacted. -- Description --
/// Element hoursOfService of type "http://www.isotc211.org/2005/gmd":PT_FreeText_PropertyType.
    gmd__PT_x005fFreeText_x005fPropertyType*  hoursOfService                 0;	///< Nillable pointer.
/// @brief -- Definition -- Number of a facsimile machine of the organisation or individual. -- Description --
/// Vector of telephoneFacsimile with length 0..unbounded
    std::vector<
/// class _base2__ContactType_telephoneFacsimile operations:
/// - soap_new__base2__ContactType_telephoneFacsimile(soap*) allocate
/// - soap_new__base2__ContactType_telephoneFacsimile(soap*, int num) allocate array
/// - soap_new_req__base2__ContactType_telephoneFacsimile(soap*, ...) allocate, set required members
/// - soap_new_set__base2__ContactType_telephoneFacsimile(soap*, ...) allocate, set all public members
/// - int soap_read__base2__ContactType_telephoneFacsimile(soap*, _base2__ContactType_telephoneFacsimile*) deserialize from a stream
/// - int soap_write__base2__ContactType_telephoneFacsimile(soap, _base2__ContactType_telephoneFacsimile*) serialize to a stream
    class _base2__ContactType_telephoneFacsimile
    {
/// __item wraps 'xs:string' simpleContent.
    std::string                          __item                        ;
/// Attribute nilReason of type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
    }>                                  *telephoneFacsimile             0;	///< Nillable pointer.
/// @brief -- Definition -- Telephone number of the organisation or individual. -- Description --
/// Vector of telephoneVoice with length 0..unbounded
    std::vector<
/// class _base2__ContactType_telephoneVoice operations:
/// - soap_new__base2__ContactType_telephoneVoice(soap*) allocate
/// - soap_new__base2__ContactType_telephoneVoice(soap*, int num) allocate array
/// - soap_new_req__base2__ContactType_telephoneVoice(soap*, ...) allocate, set required members
/// - soap_new_set__base2__ContactType_telephoneVoice(soap*, ...) allocate, set all public members
/// - int soap_read__base2__ContactType_telephoneVoice(soap*, _base2__ContactType_telephoneVoice*) deserialize from a stream
/// - int soap_write__base2__ContactType_telephoneVoice(soap, _base2__ContactType_telephoneVoice*) serialize to a stream
    class _base2__ContactType_telephoneVoice
    {
/// __item wraps 'xs:string' simpleContent.
    std::string                          __item                        ;
/// Attribute nilReason of type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
    }>                                  *telephoneVoice                 0;	///< Nillable pointer.
/// @brief -- Definition -- Pages provided on the World Wide Web by the organisation or individual. -- Description --
/// class _base2__ContactType_website operations:
/// - soap_new__base2__ContactType_website(soap*) allocate
/// - soap_new__base2__ContactType_website(soap*, int num) allocate array
/// - soap_new_req__base2__ContactType_website(soap*, ...) allocate, set required members
/// - soap_new_set__base2__ContactType_website(soap*, ...) allocate, set all public members
/// - int soap_read__base2__ContactType_website(soap*, _base2__ContactType_website*) deserialize from a stream
/// - int soap_write__base2__ContactType_website(soap, _base2__ContactType_website*) serialize to a stream
    class _base2__ContactType_website
    {
/// __item wraps 'xs:anyURI' simpleContent.
    xsd__anyURI                          __item                        ;
/// Attribute nilReason of type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
    }                                   *website                        0;	///< Nillable pointer.
};

/// "http://inspire.ec.europa.eu/schemas/base2/1.0":ContactPropertyType is a complexType.
/// class base2__ContactPropertyType operations:
/// - soap_new_base2__ContactPropertyType(soap*) allocate
/// - soap_new_base2__ContactPropertyType(soap*, int num) allocate array
/// - soap_new_req_base2__ContactPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_base2__ContactPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_base2__ContactPropertyType(soap*, base2__ContactPropertyType*) deserialize from a stream
/// - int soap_write_base2__ContactPropertyType(soap, base2__ContactPropertyType*) serialize to a stream
class base2__ContactPropertyType : public xsd__anyType
{ public:
/// @brief -- Name -- contact -- Definition -- Communication channels by which it is possible to gain access to someone or something. -- Description --
/// Element reference "http://inspire.ec.europa.eu/schemas/base2/1.0":Contact.
    base2__ContactType*                  Contact                        1;	///< Required element.
};

/// "http://inspire.ec.europa.eu/schemas/base2/1.0":RelatedPartyType is a complexType.
/// class base2__RelatedPartyType operations:
/// - soap_new_base2__RelatedPartyType(soap*) allocate
/// - soap_new_base2__RelatedPartyType(soap*, int num) allocate array
/// - soap_new_req_base2__RelatedPartyType(soap*, ...) allocate, set required members
/// - soap_new_set_base2__RelatedPartyType(soap*, ...) allocate, set all public members
/// - int soap_read_base2__RelatedPartyType(soap*, base2__RelatedPartyType*) deserialize from a stream
/// - int soap_write_base2__RelatedPartyType(soap, base2__RelatedPartyType*) serialize to a stream
class base2__RelatedPartyType : public xsd__anyType
{ public:
/// @brief -- Name -- individual name -- Definition -- Name of the related person.
/// Element individualName of type "http://www.isotc211.org/2005/gmd":PT_FreeText_PropertyType.
    gmd__PT_x005fFreeText_x005fPropertyType*  individualName                 0;	///< Nillable pointer.
/// @brief -- Name -- organisation name -- Definition -- Name of the related organisation.
/// Element organisationName of type "http://www.isotc211.org/2005/gmd":PT_FreeText_PropertyType.
    gmd__PT_x005fFreeText_x005fPropertyType*  organisationName               0;	///< Nillable pointer.
/// @brief -- Name -- position name -- Definition -- Position of the party in relation to a resource, such as head of department.
/// Element positionName of type "http://www.isotc211.org/2005/gmd":PT_FreeText_PropertyType.
    gmd__PT_x005fFreeText_x005fPropertyType*  positionName                   0;	///< Nillable pointer.
/// @brief -- Name -- contact -- Definition -- Contact information for the related party.
/// class _base2__RelatedPartyType_contact operations:
/// - soap_new__base2__RelatedPartyType_contact(soap*) allocate
/// - soap_new__base2__RelatedPartyType_contact(soap*, int num) allocate array
/// - soap_new_req__base2__RelatedPartyType_contact(soap*, ...) allocate, set required members
/// - soap_new_set__base2__RelatedPartyType_contact(soap*, ...) allocate, set all public members
/// - int soap_read__base2__RelatedPartyType_contact(soap*, _base2__RelatedPartyType_contact*) deserialize from a stream
/// - int soap_write__base2__RelatedPartyType_contact(soap, _base2__RelatedPartyType_contact*) serialize to a stream
    class _base2__RelatedPartyType_contact
    {
/// @brief -- Name -- contact -- Definition -- Communication channels by which it is possible to gain access to someone or something. -- Description --
/// Element reference "http://inspire.ec.europa.eu/schemas/base2/1.0":Contact.
    base2__ContactType*                  Contact                        1;	///< Required element.
/// Attribute nilReason of type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
    }                                   *contact                        0;	///< Nillable pointer.
/// @brief -- Definition -- Role(s) of the party in relation to a resource, such as owner.
/// Vector of gml__ReferenceType* with length 0..unbounded
    std::vector<gml__ReferenceType*    > role                           0;	///< Nillable pointer.
};

/// "http://inspire.ec.europa.eu/schemas/base2/1.0":RelatedPartyPropertyType is a complexType.
/// class base2__RelatedPartyPropertyType operations:
/// - soap_new_base2__RelatedPartyPropertyType(soap*) allocate
/// - soap_new_base2__RelatedPartyPropertyType(soap*, int num) allocate array
/// - soap_new_req_base2__RelatedPartyPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_base2__RelatedPartyPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_base2__RelatedPartyPropertyType(soap*, base2__RelatedPartyPropertyType*) deserialize from a stream
/// - int soap_write_base2__RelatedPartyPropertyType(soap, base2__RelatedPartyPropertyType*) serialize to a stream
class base2__RelatedPartyPropertyType : public xsd__anyType
{ public:
/// @brief -- Name -- related party -- Definition -- An organisation or a person with a role related to a resource. -- Description -- NOTE 1 A party, typically an individual person, acting as a general point of contact for a resource can be specified without providing any particular role.
/// Element reference "http://inspire.ec.europa.eu/schemas/base2/1.0":RelatedParty.
    base2__RelatedPartyType*             RelatedParty                   1;	///< Required element.
};

/// "http://inspire.ec.europa.eu/schemas/base2/1.0":DocumentCitationPropertyType is a complexType.
/// class base2__DocumentCitationPropertyType operations:
/// - soap_new_base2__DocumentCitationPropertyType(soap*) allocate
/// - soap_new_base2__DocumentCitationPropertyType(soap*, int num) allocate array
/// - soap_new_req_base2__DocumentCitationPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_base2__DocumentCitationPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_base2__DocumentCitationPropertyType(soap*, base2__DocumentCitationPropertyType*) deserialize from a stream
/// - int soap_write_base2__DocumentCitationPropertyType(soap, base2__DocumentCitationPropertyType*) serialize to a stream
class base2__DocumentCitationPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __base2__DocumentCitationPropertyType_sequence
    {
/// @brief -- Name -- document citation -- Definition -- Citation for the purposes of unambiguously referencing a document.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="DocumentCitation"> with elements <LegislationCitation>
   $int                                  __unionDocumentCitation        0;	///< Union _base2__union_DocumentCitationPropertyType selector: set to SOAP_UNION__base2__union_DocumentCitationPropertyType_<fieldname>
/// Union for substitutionGroup="DocumentCitation"
    union _base2__union_DocumentCitationPropertyType
    {
/// @brief -- Name -- document citation -- Definition -- Citation for the purposes of unambiguously referencing a document.
/// Element reference "http://inspire.ec.europa.eu/schemas/base2/1.0":DocumentCitation.
    base2__DocumentCitationType*         DocumentCitation               1;	///< Required element.
/// @brief -- Name -- legislation citation -- Definition -- Citation for the purposes of unambiguously referencing a legal act or a specific part of a legal act.
/// Element LegislationCitation of type "http://inspire.ec.europa.eu/schemas/base2/1.0":LegislationCitationType.
    base2__LegislationCitationType*      LegislationCitation            1;	///< Required element.
    }                                    __union_DocumentCitationPropertyType;
//  END OF CHOICE OF SUBSTITUTIONS
    }>                                   __DocumentCitationPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute nilReason of type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         gml__remoteSchema              0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
/// Attribute owns of type xs:boolean.
   @bool                                 owns                           0 = false;	///< Default value="false".
};

/// "http://inspire.ec.europa.eu/schemas/base2/1.0":ThematicIdentifierType is a complexType.
/// class base2__ThematicIdentifierType operations:
/// - soap_new_base2__ThematicIdentifierType(soap*) allocate
/// - soap_new_base2__ThematicIdentifierType(soap*, int num) allocate array
/// - soap_new_req_base2__ThematicIdentifierType(soap*, ...) allocate, set required members
/// - soap_new_set_base2__ThematicIdentifierType(soap*, ...) allocate, set all public members
/// - int soap_read_base2__ThematicIdentifierType(soap*, base2__ThematicIdentifierType*) deserialize from a stream
/// - int soap_write_base2__ThematicIdentifierType(soap, base2__ThematicIdentifierType*) serialize to a stream
class base2__ThematicIdentifierType : public xsd__anyType
{ public:
/// @brief -- Name -- identifier -- Definition -- Unique identifier used to identify the spatial object within the specified identification scheme.
/// Element identifier of type xs:string.
    std::string                          identifier                     1;	///< Required element.
/// @brief -- Name -- identifier scheme -- Definition -- Identifier defining the scheme used to assign the identifier. -- Description -- NOTE 1: Reporting requirements for different environmental legislation mandate that each spatial object is assigned an identifier conforming to specific lexical rules. NOTE 2: These rules are often inconsistent so a spatial object may be assigned multiple identifiers which are used for object referencing to link information to the spatial object.
/// Element identifierScheme of type xs:string.
    std::string                          identifierScheme               1;	///< Required element.
};

/// "http://inspire.ec.europa.eu/schemas/base2/1.0":ThematicIdentifierPropertyType is a complexType.
/// class base2__ThematicIdentifierPropertyType operations:
/// - soap_new_base2__ThematicIdentifierPropertyType(soap*) allocate
/// - soap_new_base2__ThematicIdentifierPropertyType(soap*, int num) allocate array
/// - soap_new_req_base2__ThematicIdentifierPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_base2__ThematicIdentifierPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_base2__ThematicIdentifierPropertyType(soap*, base2__ThematicIdentifierPropertyType*) deserialize from a stream
/// - int soap_write_base2__ThematicIdentifierPropertyType(soap, base2__ThematicIdentifierPropertyType*) serialize to a stream
class base2__ThematicIdentifierPropertyType : public xsd__anyType
{ public:
/// @brief -- Name -- thematic identifier -- Definition -- Thematic identifier to uniquely identify the spatial object. -- Description -- Some spatial objects may be assigned multiple unique identifiers. These may have been established to meet data exchange requirements of different reporting obligations at International, European or national levels and/or internal data maintenance requirements.
/// Element reference "http://inspire.ec.europa.eu/schemas/base2/1.0":ThematicIdentifier.
    base2__ThematicIdentifierType*       ThematicIdentifier             1;	///< Required element.
};

/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://inspire.ec.europa.eu/schemas/lunom/3.0                            *
 *                                                                            *
\******************************************************************************/


/// "http://inspire.ec.europa.eu/schemas/lunom/3.0":HILUCSPresenceType is a complexType.
/// class lunom__HILUCSPresenceType operations:
/// - soap_new_lunom__HILUCSPresenceType(soap*) allocate
/// - soap_new_lunom__HILUCSPresenceType(soap*, int num) allocate array
/// - soap_new_req_lunom__HILUCSPresenceType(soap*, ...) allocate, set required members
/// - soap_new_set_lunom__HILUCSPresenceType(soap*, ...) allocate, set all public members
/// - int soap_read_lunom__HILUCSPresenceType(soap*, lunom__HILUCSPresenceType*) deserialize from a stream
/// - int soap_write_lunom__HILUCSPresenceType(soap, lunom__HILUCSPresenceType*) serialize to a stream
class lunom__HILUCSPresenceType : public xsd__anyType
{ public:
/// CHOICE <xs:choice>
   $int                                  __union_HILUCSPresenceType    ;	///< Union _lunom__union_HILUCSPresenceType selector: set to SOAP_UNION__lunom__union_HILUCSPresenceType_<fieldname>
/// Union for choice in type lunom__HILUCSPresenceType
    union _lunom__union_HILUCSPresenceType
    {
/// Vector of gml__ReferenceType* with length 1..unbounded
    std::vector<gml__ReferenceType*   > *orderedList                    1;
/// Vector of lunom__HILUCSPercentagePropertyType* with length 1..unbounded
    std::vector<lunom__HILUCSPercentagePropertyType*> *percentageList                 1;
    }                                    union_HILUCSPresenceType      ;
//  END OF CHOICE
};

/// "http://inspire.ec.europa.eu/schemas/lunom/3.0":HILUCSPresencePropertyType is a complexType.
/// class lunom__HILUCSPresencePropertyType operations:
/// - soap_new_lunom__HILUCSPresencePropertyType(soap*) allocate
/// - soap_new_lunom__HILUCSPresencePropertyType(soap*, int num) allocate array
/// - soap_new_req_lunom__HILUCSPresencePropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_lunom__HILUCSPresencePropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_lunom__HILUCSPresencePropertyType(soap*, lunom__HILUCSPresencePropertyType*) deserialize from a stream
/// - int soap_write_lunom__HILUCSPresencePropertyType(soap, lunom__HILUCSPresencePropertyType*) serialize to a stream
class lunom__HILUCSPresencePropertyType : public xsd__anyType
{ public:
/// @brief -- Name -- HILUCS presence -- Definition -- Presence of one or several HILUCS values in an area, indicated either as the percentage covered for each value or as the values listed in their order of importance. -- Description -- The HILUCS presence data type enables the provision of information on land uses inside one land use object in order to collect more than one land use existence perfectly identifiable by importance order or percentages. NOTE 1: The order of land use value presence without percentages enable providing an order of dominance/importance of each land use present in the land use object NOTE 2: The sum of the percentages can be below 100%, or above. The order is provided according to the respective importance when the percentages are not known.
/// Element reference "http://inspire.ec.europa.eu/schemas/lunom/3.0":HILUCSPresence.
    lunom__HILUCSPresenceType*           HILUCSPresence                 1;	///< Required element.
};

/// "http://inspire.ec.europa.eu/schemas/lunom/3.0":SpecificPercentageType is a complexType.
/// class lunom__SpecificPercentageType operations:
/// - soap_new_lunom__SpecificPercentageType(soap*) allocate
/// - soap_new_lunom__SpecificPercentageType(soap*, int num) allocate array
/// - soap_new_req_lunom__SpecificPercentageType(soap*, ...) allocate, set required members
/// - soap_new_set_lunom__SpecificPercentageType(soap*, ...) allocate, set all public members
/// - int soap_read_lunom__SpecificPercentageType(soap*, lunom__SpecificPercentageType*) deserialize from a stream
/// - int soap_write_lunom__SpecificPercentageType(soap, lunom__SpecificPercentageType*) serialize to a stream
class lunom__SpecificPercentageType : public xsd__anyType
{ public:
/// @brief -- Definition -- specific value category for this specific percentage.
/// Element specificValue of type "http://www.opengis.net/gml/3.2":ReferenceType.
    gml__ReferenceType*                  specificValue                  1;	///< Required element.
/// @brief -- Definition -- Percentage of land use object that is covered by a specific presence. -- Description -- NOTE The percentage is according to the socio-economic importance of the use. In section 5.2.1.1.2. examples of the use of percentages are given.
/// Element percentage of type xs:integer.
    long                                 percentage                     1;	///< Required element.
};

/// "http://inspire.ec.europa.eu/schemas/lunom/3.0":SpecificPercentagePropertyType is a complexType.
/// class lunom__SpecificPercentagePropertyType operations:
/// - soap_new_lunom__SpecificPercentagePropertyType(soap*) allocate
/// - soap_new_lunom__SpecificPercentagePropertyType(soap*, int num) allocate array
/// - soap_new_req_lunom__SpecificPercentagePropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_lunom__SpecificPercentagePropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_lunom__SpecificPercentagePropertyType(soap*, lunom__SpecificPercentagePropertyType*) deserialize from a stream
/// - int soap_write_lunom__SpecificPercentagePropertyType(soap, lunom__SpecificPercentagePropertyType*) serialize to a stream
class lunom__SpecificPercentagePropertyType : public xsd__anyType
{ public:
/// @brief -- Name -- specific percentage -- Definition -- Percentage of land use object that is covered by this specific presence.
/// Element reference "http://inspire.ec.europa.eu/schemas/lunom/3.0":SpecificPercentage.
    lunom__SpecificPercentageType*       SpecificPercentage             1;	///< Required element.
};

/// "http://inspire.ec.europa.eu/schemas/lunom/3.0":SpecificPresenceType is a complexType.
/// class lunom__SpecificPresenceType operations:
/// - soap_new_lunom__SpecificPresenceType(soap*) allocate
/// - soap_new_lunom__SpecificPresenceType(soap*, int num) allocate array
/// - soap_new_req_lunom__SpecificPresenceType(soap*, ...) allocate, set required members
/// - soap_new_set_lunom__SpecificPresenceType(soap*, ...) allocate, set all public members
/// - int soap_read_lunom__SpecificPresenceType(soap*, lunom__SpecificPresenceType*) deserialize from a stream
/// - int soap_write_lunom__SpecificPresenceType(soap, lunom__SpecificPresenceType*) serialize to a stream
class lunom__SpecificPresenceType : public xsd__anyType
{ public:
/// CHOICE <xs:choice>
   $int                                  __union_SpecificPresenceType  ;	///< Union _lunom__union_SpecificPresenceType selector: set to SOAP_UNION__lunom__union_SpecificPresenceType_<fieldname>
/// Union for choice in type lunom__SpecificPresenceType
    union _lunom__union_SpecificPresenceType
    {
/// Vector of gml__ReferenceType* with length 1..unbounded
    std::vector<gml__ReferenceType*   > *orderedList                    1;
/// Vector of lunom__SpecificPercentagePropertyType* with length 1..unbounded
    std::vector<lunom__SpecificPercentagePropertyType*> *percentageList                 1;
    }                                    union_SpecificPresenceType    ;
//  END OF CHOICE
};

/// "http://inspire.ec.europa.eu/schemas/lunom/3.0":SpecificPresencePropertyType is a complexType.
/// class lunom__SpecificPresencePropertyType operations:
/// - soap_new_lunom__SpecificPresencePropertyType(soap*) allocate
/// - soap_new_lunom__SpecificPresencePropertyType(soap*, int num) allocate array
/// - soap_new_req_lunom__SpecificPresencePropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_lunom__SpecificPresencePropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_lunom__SpecificPresencePropertyType(soap*, lunom__SpecificPresencePropertyType*) deserialize from a stream
/// - int soap_write_lunom__SpecificPresencePropertyType(soap, lunom__SpecificPresencePropertyType*) serialize to a stream
class lunom__SpecificPresencePropertyType : public xsd__anyType
{ public:
/// @brief -- Name -- specific presence -- Definition -- Presence of one or several land use classification values in an area according to the code list provided by the data provider, indicated either as the percentage covered for each value or as the values listed in their order of importance. -- Description -- NOTE 1: The order of land use value presence without percentages enable providing an order of dominance/importance of each land use present in the land use object NOTE 2: The sum of the percentages can be below 100%, or above. The order is provided according to the respective importance when the percentages are not known.
/// Element reference "http://inspire.ec.europa.eu/schemas/lunom/3.0":SpecificPresence.
    lunom__SpecificPresenceType*         SpecificPresence               1;	///< Required element.
};

/// "http://inspire.ec.europa.eu/schemas/lunom/3.0":HILUCSPercentageType is a complexType.
/// class lunom__HILUCSPercentageType operations:
/// - soap_new_lunom__HILUCSPercentageType(soap*) allocate
/// - soap_new_lunom__HILUCSPercentageType(soap*, int num) allocate array
/// - soap_new_req_lunom__HILUCSPercentageType(soap*, ...) allocate, set required members
/// - soap_new_set_lunom__HILUCSPercentageType(soap*, ...) allocate, set all public members
/// - int soap_read_lunom__HILUCSPercentageType(soap*, lunom__HILUCSPercentageType*) deserialize from a stream
/// - int soap_write_lunom__HILUCSPercentageType(soap, lunom__HILUCSPercentageType*) serialize to a stream
class lunom__HILUCSPercentageType : public xsd__anyType
{ public:
/// @brief -- Definition -- HILUCS category for this HILUCS percentage.
/// Element hilucsValue of type "http://www.opengis.net/gml/3.2":ReferenceType.
    gml__ReferenceType*                  hilucsValue                    1;	///< Required element.
/// @brief -- Definition -- Percentage of land use object that is covered by this specific presence. -- Description -- NOTE The percentage is according to the socio-economic importance of the use. In section 5.2.1.1.2. examples of the use of percentages are given.
/// Element percentage of type xs:integer.
    long                                 percentage                     1;	///< Required element.
};

/// "http://inspire.ec.europa.eu/schemas/lunom/3.0":HILUCSPercentagePropertyType is a complexType.
/// class lunom__HILUCSPercentagePropertyType operations:
/// - soap_new_lunom__HILUCSPercentagePropertyType(soap*) allocate
/// - soap_new_lunom__HILUCSPercentagePropertyType(soap*, int num) allocate array
/// - soap_new_req_lunom__HILUCSPercentagePropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_lunom__HILUCSPercentagePropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_lunom__HILUCSPercentagePropertyType(soap*, lunom__HILUCSPercentagePropertyType*) deserialize from a stream
/// - int soap_write_lunom__HILUCSPercentagePropertyType(soap, lunom__HILUCSPercentagePropertyType*) serialize to a stream
class lunom__HILUCSPercentagePropertyType : public xsd__anyType
{ public:
/// @brief -- Name -- HILUCS percentage -- Definition -- Percentage of land use object that is covered by this HILUCS presence. -- Description -- NOTE1:The percentage is according to the socio-economic or functional importance of the use. NOTE2:examples are provided in the narrative description part of the data specification.
/// Element reference "http://inspire.ec.europa.eu/schemas/lunom/3.0":HILUCSPercentage.
    lunom__HILUCSPercentageType*         HILUCSPercentage               1;	///< Required element.
};

/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://www.interactive-instruments.de/ShapeChange/AppInfo                *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://www.opengis.net/gml/3.2                                           *
 *                                                                            *
\******************************************************************************/


/// "http://www.opengis.net/gml/3.2":HistoryPropertyType is a complexType.
/// class gml__HistoryPropertyType operations:
/// - soap_new_gml__HistoryPropertyType(soap*) allocate
/// - soap_new_gml__HistoryPropertyType(soap*, int num) allocate array
/// - soap_new_req_gml__HistoryPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__HistoryPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__HistoryPropertyType(soap*, gml__HistoryPropertyType*) deserialize from a stream
/// - int soap_write_gml__HistoryPropertyType(soap, gml__HistoryPropertyType*) serialize to a stream
class gml__HistoryPropertyType : public xsd__anyType
{ public:
/// @brief To describe an event an action that occurs at an instant or over an interval of time GML provides the gml:AbtractTimeSlice element. A timeslice encapsulates the time-varying properties of a dynamic feature -- it shall be extended to represent a time stamped projection of a specific feature. The gml:dataSource property describes how the temporal data was acquired. A gml:AbstractTimeSlice instance is a GML object that encapsulates updates of the dynamicor volatileproperties that reflect some change event; it thus includes only those feature properties that have actually changed due to some process. gml:AbstractTimeSlice basically provides a facility for attribute-level time stamping, in contrast to the object-level time stamping of dynamic feature instances. The time slice can thus be viewed as event or process-oriented, whereas a snapshot is more state or structure-oriented. A timeslice has richer causality, whereas a snapshot merely portrays the status of the whole.
/// Reference "http://www.opengis.net/gml/3.2":AbstractTimeSlice to abstract element.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractTimeSlice" maxOccurs="unbounded"> with elements <MovingObjectStatus>
   $int                                  __sizeAbstractTimeSlice        0;
    class __gml__union_HistoryPropertyType
    {
   $int                                  __unionAbstractTimeSlice       0;	///< Union _gml__union_HistoryPropertyType selector: set to SOAP_UNION__gml__union_HistoryPropertyType_<fieldname>
/// Union for substitutionGroup="AbstractTimeSlice"
    union _gml__union_HistoryPropertyType
    {
/// Element MovingObjectStatus of type "http://www.opengis.net/gml/3.2":MovingObjectStatusType.
    gml__MovingObjectStatusType*         MovingObjectStatus             1;	///< Required element.
    }                                    __union_HistoryPropertyType   ;
;
    }                                   *__union_HistoryPropertyType   ;
//  END OF CHOICE OF SUBSTITUTIONS
/// Attribute owns of type xs:boolean.
   @bool                                 owns                           0 = false;	///< Default value="false".
};

/// "http://www.opengis.net/gml/3.2":NodeOrEdgePropertyType is a complexType.
/// class gml__NodeOrEdgePropertyType operations:
/// - soap_new_gml__NodeOrEdgePropertyType(soap*) allocate
/// - soap_new_gml__NodeOrEdgePropertyType(soap*, int num) allocate array
/// - soap_new_req_gml__NodeOrEdgePropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__NodeOrEdgePropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__NodeOrEdgePropertyType(soap*, gml__NodeOrEdgePropertyType*) deserialize from a stream
/// - int soap_write_gml__NodeOrEdgePropertyType(soap, gml__NodeOrEdgePropertyType*) serialize to a stream
class gml__NodeOrEdgePropertyType : public xsd__anyType
{ public:
/// CHOICE <xs:choice minOccurs="0">
   $int                                  __union_NodeOrEdgePropertyType 0;	///< Union _gml__union_NodeOrEdgePropertyType selector: set to SOAP_UNION__gml__union_NodeOrEdgePropertyType_<fieldname> or 0
/// Union for choice in type gml__NodeOrEdgePropertyType
    union _gml__union_NodeOrEdgePropertyType
    {
/// @brief gml:Node represents the 0-dimensional primitive. The optional coboundary of a node (gml:directedEdge) is a sequence of directed edges which are incident on this node. Edges emanating from this node appear in the node coboundary with a negative orientation. If provided, the aggregationType attribute shall have the value "sequence". A node may optionally be realised by a 0-dimensional geometric primitive (gml:pointProperty).
/// Element reference "http://www.opengis.net/gml/3.2":Node.
    gml__NodeType*                       Node                           1;	///< Required element.
/// @brief gml:Edge represents the 1-dimensional primitive. The topological boundary of an Edge (gml:directedNode) consists of a negatively directed start Node and a positively directed end Node. The optional coboundary of an edge (gml:directedFace) is a circular sequence of directed faces which are incident on this edge in document order. In the 2D case, the orientation of the face on the left of the edge is "+"; the orientation of the face on the right on its right is "-". If provided, the aggregationType attribute shall have the value "sequence". An edge may optionally be realised by a 1-dimensional geometric primitive (gml:curveProperty).
/// Element reference "http://www.opengis.net/gml/3.2":Edge.
    gml__EdgeType*                       Edge                           1;	///< Required element.
    }                                    union_NodeOrEdgePropertyType  ;
//  END OF CHOICE
/// Attribute nilReason of type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         remoteSchema                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
/// Attribute owns of type xs:boolean.
   @bool                                 owns                           0 = false;	///< Default value="false".
};

/// "http://www.opengis.net/gml/3.2":NodePropertyType is a complexType.
/// class gml__NodePropertyType operations:
/// - soap_new_gml__NodePropertyType(soap*) allocate
/// - soap_new_gml__NodePropertyType(soap*, int num) allocate array
/// - soap_new_req_gml__NodePropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__NodePropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__NodePropertyType(soap*, gml__NodePropertyType*) deserialize from a stream
/// - int soap_write_gml__NodePropertyType(soap, gml__NodePropertyType*) serialize to a stream
class gml__NodePropertyType : public xsd__anyType
{ public:
/// CHOICE <xs:choice minOccurs="0">
   $int                                  __union_NodePropertyType       0;	///< Union _gml__union_NodePropertyType selector: set to SOAP_UNION__gml__union_NodePropertyType_<fieldname> or 0
/// Union for choice in type gml__NodePropertyType
    union _gml__union_NodePropertyType
    {
/// @brief gml:Node represents the 0-dimensional primitive. The optional coboundary of a node (gml:directedEdge) is a sequence of directed edges which are incident on this node. Edges emanating from this node appear in the node coboundary with a negative orientation. If provided, the aggregationType attribute shall have the value "sequence". A node may optionally be realised by a 0-dimensional geometric primitive (gml:pointProperty).
/// Element reference "http://www.opengis.net/gml/3.2":Node.
    gml__NodeType*                       Node                           1;	///< Required element.
    }                                    union_NodePropertyType        ;
//  END OF CHOICE
/// Attribute nilReason of type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         remoteSchema                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
/// Attribute owns of type xs:boolean.
   @bool                                 owns                           0 = false;	///< Default value="false".
};

/// "http://www.opengis.net/gml/3.2":FaceOrTopoSolidPropertyType is a complexType.
/// class gml__FaceOrTopoSolidPropertyType operations:
/// - soap_new_gml__FaceOrTopoSolidPropertyType(soap*) allocate
/// - soap_new_gml__FaceOrTopoSolidPropertyType(soap*, int num) allocate array
/// - soap_new_req_gml__FaceOrTopoSolidPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__FaceOrTopoSolidPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__FaceOrTopoSolidPropertyType(soap*, gml__FaceOrTopoSolidPropertyType*) deserialize from a stream
/// - int soap_write_gml__FaceOrTopoSolidPropertyType(soap, gml__FaceOrTopoSolidPropertyType*) serialize to a stream
class gml__FaceOrTopoSolidPropertyType : public xsd__anyType
{ public:
/// CHOICE <xs:choice minOccurs="0">
   $int                                  __union_FaceOrTopoSolidPropertyType 0;	///< Union _gml__union_FaceOrTopoSolidPropertyType selector: set to SOAP_UNION__gml__union_FaceOrTopoSolidPropertyType_<fieldname> or 0
/// Union for choice in type gml__FaceOrTopoSolidPropertyType
    union _gml__union_FaceOrTopoSolidPropertyType
    {
/// @brief gml:Face represents the 2-dimensional topology primitive. The topological boundary of a face (gml:directedEdge) consists of a sequence of directed edges. If provided, the aggregationType attribute shall have the value "sequence". The optional coboundary of a face (gml:directedTopoSolid) is a pair of directed solids which are bounded by this face. A positively directed solid corresponds to a solid which lies in the direction of the negatively directed normal to the face in any geometric realisation. A face may optionally be realised by a 2-dimensional geometric primitive (gml:surfaceProperty).
/// Element reference "http://www.opengis.net/gml/3.2":Face.
    gml__FaceType*                       Face                           1;	///< Required element.
/// @brief gml:TopoSolid represents the 3-dimensional topology primitive. The topological boundary of a solid (gml:directedFace) consists of a set of directed faces. A solid may optionally be realised by a 3-dimensional geometric primitive (gml:solidProperty).
/// Element reference "http://www.opengis.net/gml/3.2":TopoSolid.
    gml__TopoSolidType*                  TopoSolid                      1;	///< Required element.
    }                                    union_FaceOrTopoSolidPropertyType;
//  END OF CHOICE
/// Attribute nilReason of type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         remoteSchema                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
/// Attribute owns of type xs:boolean.
   @bool                                 owns                           0 = false;	///< Default value="false".
};

/// "http://www.opengis.net/gml/3.2":TopoSolidPropertyType is a complexType.
/// class gml__TopoSolidPropertyType operations:
/// - soap_new_gml__TopoSolidPropertyType(soap*) allocate
/// - soap_new_gml__TopoSolidPropertyType(soap*, int num) allocate array
/// - soap_new_req_gml__TopoSolidPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__TopoSolidPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__TopoSolidPropertyType(soap*, gml__TopoSolidPropertyType*) deserialize from a stream
/// - int soap_write_gml__TopoSolidPropertyType(soap, gml__TopoSolidPropertyType*) serialize to a stream
class gml__TopoSolidPropertyType : public xsd__anyType
{ public:
/// CHOICE <xs:choice minOccurs="0">
   $int                                  __union_TopoSolidPropertyType  0;	///< Union _gml__union_TopoSolidPropertyType selector: set to SOAP_UNION__gml__union_TopoSolidPropertyType_<fieldname> or 0
/// Union for choice in type gml__TopoSolidPropertyType
    union _gml__union_TopoSolidPropertyType
    {
/// @brief gml:TopoSolid represents the 3-dimensional topology primitive. The topological boundary of a solid (gml:directedFace) consists of a set of directed faces. A solid may optionally be realised by a 3-dimensional geometric primitive (gml:solidProperty).
/// Element reference "http://www.opengis.net/gml/3.2":TopoSolid.
    gml__TopoSolidType*                  TopoSolid                      1;	///< Required element.
    }                                    union_TopoSolidPropertyType   ;
//  END OF CHOICE
/// Attribute nilReason of type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         remoteSchema                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
/// Attribute owns of type xs:boolean.
   @bool                                 owns                           0 = false;	///< Default value="false".
};

/// "http://www.opengis.net/gml/3.2":DirectedNodePropertyType is a complexType.
/// class gml__DirectedNodePropertyType operations:
/// - soap_new_gml__DirectedNodePropertyType(soap*) allocate
/// - soap_new_gml__DirectedNodePropertyType(soap*, int num) allocate array
/// - soap_new_req_gml__DirectedNodePropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__DirectedNodePropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__DirectedNodePropertyType(soap*, gml__DirectedNodePropertyType*) deserialize from a stream
/// - int soap_write_gml__DirectedNodePropertyType(soap, gml__DirectedNodePropertyType*) serialize to a stream
class gml__DirectedNodePropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gml__DirectedNodePropertyType_sequence
    {
/// @brief gml:Node represents the 0-dimensional primitive. The optional coboundary of a node (gml:directedEdge) is a sequence of directed edges which are incident on this node. Edges emanating from this node appear in the node coboundary with a negative orientation. If provided, the aggregationType attribute shall have the value "sequence". A node may optionally be realised by a 0-dimensional geometric primitive (gml:pointProperty).
/// Element reference "http://www.opengis.net/gml/3.2":Node.
    gml__NodeType*                       Node                           1;	///< Required element.
    }>                                   __DirectedNodePropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute orientation of type "http://www.opengis.net/gml/3.2":SignType.
   @enum gml__SignType                   orientation                    0 = gml__SignType___x002b;	///< Default value="+".
/// Attribute nilReason of type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         remoteSchema                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
/// Attribute owns of type xs:boolean.
   @bool                                 owns                           0 = false;	///< Default value="false".
};

/// "http://www.opengis.net/gml/3.2":DirectedEdgePropertyType is a complexType.
/// class gml__DirectedEdgePropertyType operations:
/// - soap_new_gml__DirectedEdgePropertyType(soap*) allocate
/// - soap_new_gml__DirectedEdgePropertyType(soap*, int num) allocate array
/// - soap_new_req_gml__DirectedEdgePropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__DirectedEdgePropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__DirectedEdgePropertyType(soap*, gml__DirectedEdgePropertyType*) deserialize from a stream
/// - int soap_write_gml__DirectedEdgePropertyType(soap, gml__DirectedEdgePropertyType*) serialize to a stream
class gml__DirectedEdgePropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gml__DirectedEdgePropertyType_sequence
    {
/// @brief gml:Edge represents the 1-dimensional primitive. The topological boundary of an Edge (gml:directedNode) consists of a negatively directed start Node and a positively directed end Node. The optional coboundary of an edge (gml:directedFace) is a circular sequence of directed faces which are incident on this edge in document order. In the 2D case, the orientation of the face on the left of the edge is "+"; the orientation of the face on the right on its right is "-". If provided, the aggregationType attribute shall have the value "sequence". An edge may optionally be realised by a 1-dimensional geometric primitive (gml:curveProperty).
/// Element reference "http://www.opengis.net/gml/3.2":Edge.
    gml__EdgeType*                       Edge                           1;	///< Required element.
    }>                                   __DirectedEdgePropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute orientation of type "http://www.opengis.net/gml/3.2":SignType.
   @enum gml__SignType                   orientation                    0 = gml__SignType___x002b;	///< Default value="+".
/// Attribute nilReason of type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         remoteSchema                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
/// Attribute owns of type xs:boolean.
   @bool                                 owns                           0 = false;	///< Default value="false".
};

/// "http://www.opengis.net/gml/3.2":DirectedFacePropertyType is a complexType.
/// class gml__DirectedFacePropertyType operations:
/// - soap_new_gml__DirectedFacePropertyType(soap*) allocate
/// - soap_new_gml__DirectedFacePropertyType(soap*, int num) allocate array
/// - soap_new_req_gml__DirectedFacePropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__DirectedFacePropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__DirectedFacePropertyType(soap*, gml__DirectedFacePropertyType*) deserialize from a stream
/// - int soap_write_gml__DirectedFacePropertyType(soap, gml__DirectedFacePropertyType*) serialize to a stream
class gml__DirectedFacePropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gml__DirectedFacePropertyType_sequence
    {
/// @brief gml:Face represents the 2-dimensional topology primitive. The topological boundary of a face (gml:directedEdge) consists of a sequence of directed edges. If provided, the aggregationType attribute shall have the value "sequence". The optional coboundary of a face (gml:directedTopoSolid) is a pair of directed solids which are bounded by this face. A positively directed solid corresponds to a solid which lies in the direction of the negatively directed normal to the face in any geometric realisation. A face may optionally be realised by a 2-dimensional geometric primitive (gml:surfaceProperty).
/// Element reference "http://www.opengis.net/gml/3.2":Face.
    gml__FaceType*                       Face                           1;	///< Required element.
    }>                                   __DirectedFacePropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute orientation of type "http://www.opengis.net/gml/3.2":SignType.
   @enum gml__SignType                   orientation                    0 = gml__SignType___x002b;	///< Default value="+".
/// Attribute nilReason of type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         remoteSchema                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
/// Attribute owns of type xs:boolean.
   @bool                                 owns                           0 = false;	///< Default value="false".
};

/// "http://www.opengis.net/gml/3.2":DirectedTopoSolidPropertyType is a complexType.
/// class gml__DirectedTopoSolidPropertyType operations:
/// - soap_new_gml__DirectedTopoSolidPropertyType(soap*) allocate
/// - soap_new_gml__DirectedTopoSolidPropertyType(soap*, int num) allocate array
/// - soap_new_req_gml__DirectedTopoSolidPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__DirectedTopoSolidPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__DirectedTopoSolidPropertyType(soap*, gml__DirectedTopoSolidPropertyType*) deserialize from a stream
/// - int soap_write_gml__DirectedTopoSolidPropertyType(soap, gml__DirectedTopoSolidPropertyType*) serialize to a stream
class gml__DirectedTopoSolidPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gml__DirectedTopoSolidPropertyType_sequence
    {
/// @brief gml:TopoSolid represents the 3-dimensional topology primitive. The topological boundary of a solid (gml:directedFace) consists of a set of directed faces. A solid may optionally be realised by a 3-dimensional geometric primitive (gml:solidProperty).
/// Element reference "http://www.opengis.net/gml/3.2":TopoSolid.
    gml__TopoSolidType*                  TopoSolid                      1;	///< Required element.
    }>                                   __DirectedTopoSolidPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute orientation of type "http://www.opengis.net/gml/3.2":SignType.
   @enum gml__SignType                   orientation                    0 = gml__SignType___x002b;	///< Default value="+".
/// Attribute nilReason of type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         remoteSchema                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
/// Attribute owns of type xs:boolean.
   @bool                                 owns                           0 = false;	///< Default value="false".
};

/// "http://www.opengis.net/gml/3.2":TopoPointPropertyType is a complexType.
/// class gml__TopoPointPropertyType operations:
/// - soap_new_gml__TopoPointPropertyType(soap*) allocate
/// - soap_new_gml__TopoPointPropertyType(soap*, int num) allocate array
/// - soap_new_req_gml__TopoPointPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__TopoPointPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__TopoPointPropertyType(soap*, gml__TopoPointPropertyType*) deserialize from a stream
/// - int soap_write_gml__TopoPointPropertyType(soap, gml__TopoPointPropertyType*) serialize to a stream
class gml__TopoPointPropertyType : public xsd__anyType
{ public:
/// @brief The intended use of gml:TopoPoint is to appear within a point feature to express the structural and possibly geometric relationships of this feature to other features via shared node definitions.
/// Element reference "http://www.opengis.net/gml/3.2":TopoPoint.
    gml__TopoPointType*                  TopoPoint                      1;	///< Required element.
/// Attribute owns of type xs:boolean.
   @bool                                 owns                           0 = false;	///< Default value="false".
};

/// "http://www.opengis.net/gml/3.2":TopoCurvePropertyType is a complexType.
/// class gml__TopoCurvePropertyType operations:
/// - soap_new_gml__TopoCurvePropertyType(soap*) allocate
/// - soap_new_gml__TopoCurvePropertyType(soap*, int num) allocate array
/// - soap_new_req_gml__TopoCurvePropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__TopoCurvePropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__TopoCurvePropertyType(soap*, gml__TopoCurvePropertyType*) deserialize from a stream
/// - int soap_write_gml__TopoCurvePropertyType(soap, gml__TopoCurvePropertyType*) serialize to a stream
class gml__TopoCurvePropertyType : public xsd__anyType
{ public:
/// @brief gml:TopoCurve represents a homogeneous topological expression, a sequence of directed edges, which if realised are isomorphic to a geometric curve primitive. The intended use of gml:TopoCurve is to appear within a line feature to express the structural and geometric relationships of this feature to other features via the shared edge definitions. If provided, the aggregationType attribute shall have the value "sequence".
/// Element reference "http://www.opengis.net/gml/3.2":TopoCurve.
    gml__TopoCurveType*                  TopoCurve                      1;	///< Required element.
/// Attribute owns of type xs:boolean.
   @bool                                 owns                           0 = false;	///< Default value="false".
};

/// "http://www.opengis.net/gml/3.2":TopoSurfacePropertyType is a complexType.
/// class gml__TopoSurfacePropertyType operations:
/// - soap_new_gml__TopoSurfacePropertyType(soap*) allocate
/// - soap_new_gml__TopoSurfacePropertyType(soap*, int num) allocate array
/// - soap_new_req_gml__TopoSurfacePropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__TopoSurfacePropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__TopoSurfacePropertyType(soap*, gml__TopoSurfacePropertyType*) deserialize from a stream
/// - int soap_write_gml__TopoSurfacePropertyType(soap, gml__TopoSurfacePropertyType*) serialize to a stream
class gml__TopoSurfacePropertyType : public xsd__anyType
{ public:
/// @brief gml:TopoSurface represents a homogeneous topological expression, a set of directed faces, which if realised are isomorphic to a geometric surface primitive. The intended use of gml:TopoSurface is to appear within a surface feature to express the structural and possibly geometric relationships of this surface feature to other features via the shared face definitions.
/// Element reference "http://www.opengis.net/gml/3.2":TopoSurface.
    gml__TopoSurfaceType*                TopoSurface                    1;	///< Required element.
/// Attribute owns of type xs:boolean.
   @bool                                 owns                           0 = false;	///< Default value="false".
};

/// "http://www.opengis.net/gml/3.2":TopoVolumePropertyType is a complexType.
/// class gml__TopoVolumePropertyType operations:
/// - soap_new_gml__TopoVolumePropertyType(soap*) allocate
/// - soap_new_gml__TopoVolumePropertyType(soap*, int num) allocate array
/// - soap_new_req_gml__TopoVolumePropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__TopoVolumePropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__TopoVolumePropertyType(soap*, gml__TopoVolumePropertyType*) deserialize from a stream
/// - int soap_write_gml__TopoVolumePropertyType(soap, gml__TopoVolumePropertyType*) serialize to a stream
class gml__TopoVolumePropertyType : public xsd__anyType
{ public:
/// @brief gml:TopoVolume represents a homogeneous topological expression, a set of directed topologic solids, which if realised are isomorphic to a geometric solid primitive. The intended use of gml:TopoVolume is to appear within a solid feature to express the structural and geometric relationships of this solid feature to other features via the shared solid definitions.
/// Element reference "http://www.opengis.net/gml/3.2":TopoVolume.
    gml__TopoVolumeType*                 TopoVolume                     1;	///< Required element.
/// Attribute owns of type xs:boolean.
   @bool                                 owns                           0 = false;	///< Default value="false".
};

/// "http://www.opengis.net/gml/3.2":TopoPrimitiveMemberType is a complexType.
/// class gml__TopoPrimitiveMemberType operations:
/// - soap_new_gml__TopoPrimitiveMemberType(soap*) allocate
/// - soap_new_gml__TopoPrimitiveMemberType(soap*, int num) allocate array
/// - soap_new_req_gml__TopoPrimitiveMemberType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__TopoPrimitiveMemberType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__TopoPrimitiveMemberType(soap*, gml__TopoPrimitiveMemberType*) deserialize from a stream
/// - int soap_write_gml__TopoPrimitiveMemberType(soap, gml__TopoPrimitiveMemberType*) serialize to a stream
class gml__TopoPrimitiveMemberType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gml__TopoPrimitiveMemberType_sequence
    {
/// @brief gml:AbstractTopoPrimitive acts as the base type for all topological primitives. Topology primitives are the atomic (smallest possible) units of a topology complex. Each topology primitive may contain references to other topology primitives of codimension 2 or more (gml:isolated). Conversely, nodes may have faces as containers and nodes and edges may have solids as containers (gml:container).
/// Reference "http://www.opengis.net/gml/3.2":AbstractTopoPrimitive to abstract element.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractTopoPrimitive"> with elements <Node> <Edge> <Face> <TopoSolid>
   $int                                  __unionAbstractTopoPrimitive   0;	///< Union _gml__union_TopoPrimitiveMemberType selector: set to SOAP_UNION__gml__union_TopoPrimitiveMemberType_<fieldname>
/// Union for substitutionGroup="AbstractTopoPrimitive"
    union _gml__union_TopoPrimitiveMemberType
    {
/// @brief gml:Node represents the 0-dimensional primitive. The optional coboundary of a node (gml:directedEdge) is a sequence of directed edges which are incident on this node. Edges emanating from this node appear in the node coboundary with a negative orientation. If provided, the aggregationType attribute shall have the value "sequence". A node may optionally be realised by a 0-dimensional geometric primitive (gml:pointProperty).
/// Element Node of type "http://www.opengis.net/gml/3.2":NodeType.
    gml__NodeType*                       Node                           1;	///< Required element.
/// @brief gml:Edge represents the 1-dimensional primitive. The topological boundary of an Edge (gml:directedNode) consists of a negatively directed start Node and a positively directed end Node. The optional coboundary of an edge (gml:directedFace) is a circular sequence of directed faces which are incident on this edge in document order. In the 2D case, the orientation of the face on the left of the edge is "+"; the orientation of the face on the right on its right is "-". If provided, the aggregationType attribute shall have the value "sequence". An edge may optionally be realised by a 1-dimensional geometric primitive (gml:curveProperty).
/// Element Edge of type "http://www.opengis.net/gml/3.2":EdgeType.
    gml__EdgeType*                       Edge                           1;	///< Required element.
/// @brief gml:Face represents the 2-dimensional topology primitive. The topological boundary of a face (gml:directedEdge) consists of a sequence of directed edges. If provided, the aggregationType attribute shall have the value "sequence". The optional coboundary of a face (gml:directedTopoSolid) is a pair of directed solids which are bounded by this face. A positively directed solid corresponds to a solid which lies in the direction of the negatively directed normal to the face in any geometric realisation. A face may optionally be realised by a 2-dimensional geometric primitive (gml:surfaceProperty).
/// Element Face of type "http://www.opengis.net/gml/3.2":FaceType.
    gml__FaceType*                       Face                           1;	///< Required element.
/// @brief gml:TopoSolid represents the 3-dimensional topology primitive. The topological boundary of a solid (gml:directedFace) consists of a set of directed faces. A solid may optionally be realised by a 3-dimensional geometric primitive (gml:solidProperty).
/// Element TopoSolid of type "http://www.opengis.net/gml/3.2":TopoSolidType.
    gml__TopoSolidType*                  TopoSolid                      1;	///< Required element.
    }                                    __union_TopoPrimitiveMemberType;
//  END OF CHOICE OF SUBSTITUTIONS
    }>                                   __TopoPrimitiveMemberType_sequence 0;
//  END OF SEQUENCE
/// Attribute nilReason of type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         remoteSchema                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
/// Attribute owns of type xs:boolean.
   @bool                                 owns                           0 = false;	///< Default value="false".
};

/// "http://www.opengis.net/gml/3.2":TopoPrimitiveArrayAssociationType is a complexType.
/// class gml__TopoPrimitiveArrayAssociationType operations:
/// - soap_new_gml__TopoPrimitiveArrayAssociationType(soap*) allocate
/// - soap_new_gml__TopoPrimitiveArrayAssociationType(soap*, int num) allocate array
/// - soap_new_req_gml__TopoPrimitiveArrayAssociationType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__TopoPrimitiveArrayAssociationType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__TopoPrimitiveArrayAssociationType(soap*, gml__TopoPrimitiveArrayAssociationType*) deserialize from a stream
/// - int soap_write_gml__TopoPrimitiveArrayAssociationType(soap, gml__TopoPrimitiveArrayAssociationType*) serialize to a stream
class gml__TopoPrimitiveArrayAssociationType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0" maxOccurs="unbounded">
    std::vector<                                                       
    class __gml__TopoPrimitiveArrayAssociationType_sequence
    {
/// @brief gml:AbstractTopoPrimitive acts as the base type for all topological primitives. Topology primitives are the atomic (smallest possible) units of a topology complex. Each topology primitive may contain references to other topology primitives of codimension 2 or more (gml:isolated). Conversely, nodes may have faces as containers and nodes and edges may have solids as containers (gml:container).
/// Reference "http://www.opengis.net/gml/3.2":AbstractTopoPrimitive to abstract element.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractTopoPrimitive"> with elements <Node> <Edge> <Face> <TopoSolid>
   $int                                  __unionAbstractTopoPrimitive   0;	///< Union _gml__union_TopoPrimitiveArrayAssociationType selector: set to SOAP_UNION__gml__union_TopoPrimitiveArrayAssociationType_<fieldname>
/// Union for substitutionGroup="AbstractTopoPrimitive"
    union _gml__union_TopoPrimitiveArrayAssociationType
    {
/// @brief gml:Node represents the 0-dimensional primitive. The optional coboundary of a node (gml:directedEdge) is a sequence of directed edges which are incident on this node. Edges emanating from this node appear in the node coboundary with a negative orientation. If provided, the aggregationType attribute shall have the value "sequence". A node may optionally be realised by a 0-dimensional geometric primitive (gml:pointProperty).
/// Element Node of type "http://www.opengis.net/gml/3.2":NodeType.
    gml__NodeType*                       Node                           1;	///< Required element.
/// @brief gml:Edge represents the 1-dimensional primitive. The topological boundary of an Edge (gml:directedNode) consists of a negatively directed start Node and a positively directed end Node. The optional coboundary of an edge (gml:directedFace) is a circular sequence of directed faces which are incident on this edge in document order. In the 2D case, the orientation of the face on the left of the edge is "+"; the orientation of the face on the right on its right is "-". If provided, the aggregationType attribute shall have the value "sequence". An edge may optionally be realised by a 1-dimensional geometric primitive (gml:curveProperty).
/// Element Edge of type "http://www.opengis.net/gml/3.2":EdgeType.
    gml__EdgeType*                       Edge                           1;	///< Required element.
/// @brief gml:Face represents the 2-dimensional topology primitive. The topological boundary of a face (gml:directedEdge) consists of a sequence of directed edges. If provided, the aggregationType attribute shall have the value "sequence". The optional coboundary of a face (gml:directedTopoSolid) is a pair of directed solids which are bounded by this face. A positively directed solid corresponds to a solid which lies in the direction of the negatively directed normal to the face in any geometric realisation. A face may optionally be realised by a 2-dimensional geometric primitive (gml:surfaceProperty).
/// Element Face of type "http://www.opengis.net/gml/3.2":FaceType.
    gml__FaceType*                       Face                           1;	///< Required element.
/// @brief gml:TopoSolid represents the 3-dimensional topology primitive. The topological boundary of a solid (gml:directedFace) consists of a set of directed faces. A solid may optionally be realised by a 3-dimensional geometric primitive (gml:solidProperty).
/// Element TopoSolid of type "http://www.opengis.net/gml/3.2":TopoSolidType.
    gml__TopoSolidType*                  TopoSolid                      1;	///< Required element.
    }                                    __union_TopoPrimitiveArrayAssociationType;
//  END OF CHOICE OF SUBSTITUTIONS
    }>                                   __TopoPrimitiveArrayAssociationType_sequence 0;
//  END OF SEQUENCE
/// Attribute owns of type xs:boolean.
   @bool                                 owns                           0 = false;	///< Default value="false".
};

/// "http://www.opengis.net/gml/3.2":TopoComplexPropertyType is a complexType.
/// class gml__TopoComplexPropertyType operations:
/// - soap_new_gml__TopoComplexPropertyType(soap*) allocate
/// - soap_new_gml__TopoComplexPropertyType(soap*, int num) allocate array
/// - soap_new_req_gml__TopoComplexPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__TopoComplexPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__TopoComplexPropertyType(soap*, gml__TopoComplexPropertyType*) deserialize from a stream
/// - int soap_write_gml__TopoComplexPropertyType(soap, gml__TopoComplexPropertyType*) serialize to a stream
class gml__TopoComplexPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gml__TopoComplexPropertyType_sequence
    {
/// @brief gml:TopoComplex is a collection of topological primitives. Each complex holds a reference to its maximal complex (gml:maximalComplex) and optionally to sub- or super-complexes (gml:subComplex, gml:superComplex). A topology complex contains its primitive and sub-complex members.
/// Element reference "http://www.opengis.net/gml/3.2":TopoComplex.
    gml__TopoComplexType*                TopoComplex                    1;	///< Required element.
    }>                                   __TopoComplexPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute nilReason of type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         remoteSchema                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.opengis.net/gml/3.2":GeometricComplexPropertyType is a complexType.
/// @brief A property that has a geometric complex as its value domain may either be an appropriate geometry element encapsulated in an element of this type or an XLink reference to a remote geometry element (where remote includes geometry elements located elsewhere in the same document). Either the reference or the contained element shall be given, but neither both nor none.
/// class gml__GeometricComplexPropertyType operations:
/// - soap_new_gml__GeometricComplexPropertyType(soap*) allocate
/// - soap_new_gml__GeometricComplexPropertyType(soap*, int num) allocate array
/// - soap_new_req_gml__GeometricComplexPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__GeometricComplexPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__GeometricComplexPropertyType(soap*, gml__GeometricComplexPropertyType*) deserialize from a stream
/// - int soap_write_gml__GeometricComplexPropertyType(soap, gml__GeometricComplexPropertyType*) serialize to a stream
class gml__GeometricComplexPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gml__GeometricComplexPropertyType_sequence
    {
/// CHOICE <xs:choice>
   $int                                  __union_GeometricComplexPropertyType;	///< Union _gml__union_GeometricComplexPropertyType selector: set to SOAP_UNION__gml__union_GeometricComplexPropertyType_<fieldname>
    union _gml__union_GeometricComplexPropertyType
    {
/// Element reference "http://www.opengis.net/gml/3.2":GeometricComplex.
    gml__GeometricComplexType*           GeometricComplex               1;	///< Required element.
/// @brief A gml:CompositeCurve is represented by a sequence of (orientable) curves such that each curve in the sequence terminates at the start point of the subsequent curve in the list. curveMember references or contains inline one curve in the composite curve. The curves are contiguous, the collection of curves is ordered. Therefore, if provided, the aggregationType attribute shall have the value "sequence".
/// Element reference "http://www.opengis.net/gml/3.2":CompositeCurve.
    gml__CompositeCurveType*             CompositeCurve                 1;	///< Required element.
/// @brief A gml:CompositeSurface is represented by a set of orientable surfaces. It is geometry type with all the geometric properties of a (primitive) surface. Essentially, a composite surface is a collection of surfaces that join in pairs on common boundary curves and which, when considered as a whole, form a single surface. surfaceMember references or contains inline one surface in the composite surface. The surfaces are contiguous.
/// Element reference "http://www.opengis.net/gml/3.2":CompositeSurface.
    gml__CompositeSurfaceType*           CompositeSurface               1;	///< Required element.
/// @brief gml:CompositeSolid implements ISO 19107 GM_CompositeSolid (see ISO 19107:2003, 6.6.7) as specified in D.2.3.6. A gml:CompositeSolid is represented by a set of orientable surfaces. It is a geometry type with all the geometric properties of a (primitive) solid. Essentially, a composite solid is a collection of solids that join in pairs on common boundary surfaces and which, when considered as a whole, form a single solid. solidMember references or contains one solid in the composite solid. The solids are contiguous.
/// Element reference "http://www.opengis.net/gml/3.2":CompositeSolid.
    gml__CompositeSolidType*             CompositeSolid                 1;	///< Required element.
    }                                    union_GeometricComplexPropertyType;
//  END OF CHOICE
    }>                                   __GeometricComplexPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute owns of type xs:boolean.
   @bool                                 owns                           0 = false;	///< Default value="false".
/// Attribute nilReason of type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         remoteSchema                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.opengis.net/gml/3.2":MultiGeometryPropertyType is a complexType.
/// @brief A property that has a geometric aggregate as its value domain may either be an appropriate geometry element encapsulated in an element of this type or an XLink reference to a remote geometry element (where remote includes geometry elements located elsewhere in the same document). Either the reference or the contained element shall be given, but neither both nor none.
/// class gml__MultiGeometryPropertyType operations:
/// - soap_new_gml__MultiGeometryPropertyType(soap*) allocate
/// - soap_new_gml__MultiGeometryPropertyType(soap*, int num) allocate array
/// - soap_new_req_gml__MultiGeometryPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__MultiGeometryPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__MultiGeometryPropertyType(soap*, gml__MultiGeometryPropertyType*) deserialize from a stream
/// - int soap_write_gml__MultiGeometryPropertyType(soap, gml__MultiGeometryPropertyType*) serialize to a stream
class gml__MultiGeometryPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gml__MultiGeometryPropertyType_sequence
    {
/// @brief gml:AbstractGeometricAggregate is the abstract head of the substitution group for all geometric aggregates.
/// Reference "http://www.opengis.net/gml/3.2":AbstractGeometricAggregate to abstract element.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractGeometricAggregate"> with elements <MultiGeometry> <MultiPoint> <MultiCurve> <MultiSurface> <MultiSolid>
   $int                                  __unionAbstractGeometricAggregate 0;	///< Union _gml__union_MultiGeometryPropertyType selector: set to SOAP_UNION__gml__union_MultiGeometryPropertyType_<fieldname>
/// Union for substitutionGroup="AbstractGeometricAggregate"
    union _gml__union_MultiGeometryPropertyType
    {
/// @brief gml:MultiGeometry is a collection of one or more GML geometry objects of arbitrary type. The members of the geometric aggregate may be specified either using the "standard" property (gml:geometryMember) or the array property (gml:geometryMembers). It is also valid to use both the "standard" and the array properties in the same collection.
/// Element MultiGeometry of type "http://www.opengis.net/gml/3.2":MultiGeometryType.
    gml__MultiGeometryType*              MultiGeometry                  1;	///< Required element.
/// @brief A gml:MultiPoint consists of one or more gml:Points. The members of the geometric aggregate may be specified either using the "standard" property (gml:pointMember) or the array property (gml:pointMembers). It is also valid to use both the "standard" and the array properties in the same collection.
/// Element MultiPoint of type "http://www.opengis.net/gml/3.2":MultiPointType.
    gml__MultiPointType*                 MultiPoint                     1;	///< Required element.
/// @brief A gml:MultiCurve is defined by one or more gml:AbstractCurves. The members of the geometric aggregate may be specified either using the "standard" property (gml:curveMember) or the array property (gml:curveMembers). It is also valid to use both the "standard" and the array properties in the same collection.
/// Element MultiCurve of type "http://www.opengis.net/gml/3.2":MultiCurveType.
    gml__MultiCurveType*                 MultiCurve                     1;	///< Required element.
/// @brief A gml:MultiSurface is defined by one or more gml:AbstractSurfaces. The members of the geometric aggregate may be specified either using the "standard" property (gml:surfaceMember) or the array property (gml:surfaceMembers). It is also valid to use both the "standard" and the array properties in the same collection.
/// Element MultiSurface of type "http://www.opengis.net/gml/3.2":MultiSurfaceType.
    gml__MultiSurfaceType*               MultiSurface                   1;	///< Required element.
/// @brief A gml:MultiSolid is defined by one or more gml:AbstractSolids. The members of the geometric aggregate may be specified either using the "standard" property (gml:solidMember) or the array property (gml:solidMembers). It is also valid to use both the "standard" and the array properties in the same collection.
/// Element MultiSolid of type "http://www.opengis.net/gml/3.2":MultiSolidType.
    gml__MultiSolidType*                 MultiSolid                     1;	///< Required element.
    }                                    __union_MultiGeometryPropertyType;
//  END OF CHOICE OF SUBSTITUTIONS
    }>                                   __MultiGeometryPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute nilReason of type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         remoteSchema                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
/// Attribute owns of type xs:boolean.
   @bool                                 owns                           0 = false;	///< Default value="false".
};

/// "http://www.opengis.net/gml/3.2":MultiPointPropertyType is a complexType.
/// @brief A property that has a collection of points as its value domain may either be an appropriate geometry element encapsulated in an element of this type or an XLink reference to a remote geometry element (where remote includes geometry elements located elsewhere in the same document). Either the reference or the contained element shall be given, but neither both nor none.
/// class gml__MultiPointPropertyType operations:
/// - soap_new_gml__MultiPointPropertyType(soap*) allocate
/// - soap_new_gml__MultiPointPropertyType(soap*, int num) allocate array
/// - soap_new_req_gml__MultiPointPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__MultiPointPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__MultiPointPropertyType(soap*, gml__MultiPointPropertyType*) deserialize from a stream
/// - int soap_write_gml__MultiPointPropertyType(soap, gml__MultiPointPropertyType*) serialize to a stream
class gml__MultiPointPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gml__MultiPointPropertyType_sequence
    {
/// @brief A gml:MultiPoint consists of one or more gml:Points. The members of the geometric aggregate may be specified either using the "standard" property (gml:pointMember) or the array property (gml:pointMembers). It is also valid to use both the "standard" and the array properties in the same collection.
/// Element reference "http://www.opengis.net/gml/3.2":MultiPoint.
    gml__MultiPointType*                 MultiPoint                     1;	///< Required element.
    }>                                   __MultiPointPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute nilReason of type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         remoteSchema                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
/// Attribute owns of type xs:boolean.
   @bool                                 owns                           0 = false;	///< Default value="false".
};

/// "http://www.opengis.net/gml/3.2":MultiCurvePropertyType is a complexType.
/// @brief A property that has a collection of curves as its value domain may either be an appropriate geometry element encapsulated in an element of this type or an XLink reference to a remote geometry element (where remote includes geometry elements located elsewhere in the same document). Either the reference or the contained element shall be given, but neither both nor none.
/// class gml__MultiCurvePropertyType operations:
/// - soap_new_gml__MultiCurvePropertyType(soap*) allocate
/// - soap_new_gml__MultiCurvePropertyType(soap*, int num) allocate array
/// - soap_new_req_gml__MultiCurvePropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__MultiCurvePropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__MultiCurvePropertyType(soap*, gml__MultiCurvePropertyType*) deserialize from a stream
/// - int soap_write_gml__MultiCurvePropertyType(soap, gml__MultiCurvePropertyType*) serialize to a stream
class gml__MultiCurvePropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gml__MultiCurvePropertyType_sequence
    {
/// @brief A gml:MultiCurve is defined by one or more gml:AbstractCurves. The members of the geometric aggregate may be specified either using the "standard" property (gml:curveMember) or the array property (gml:curveMembers). It is also valid to use both the "standard" and the array properties in the same collection.
/// Element reference "http://www.opengis.net/gml/3.2":MultiCurve.
    gml__MultiCurveType*                 MultiCurve                     1;	///< Required element.
    }>                                   __MultiCurvePropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute nilReason of type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         remoteSchema                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
/// Attribute owns of type xs:boolean.
   @bool                                 owns                           0 = false;	///< Default value="false".
};

/// "http://www.opengis.net/gml/3.2":MultiSurfacePropertyType is a complexType.
/// @brief A property that has a collection of surfaces as its value domain may either be an appropriate geometry element encapsulated in an element of this type or an XLink reference to a remote geometry element (where remote includes geometry elements located elsewhere in the same document). Either the reference or the contained element shall be given, but neither both nor none.
/// class gml__MultiSurfacePropertyType operations:
/// - soap_new_gml__MultiSurfacePropertyType(soap*) allocate
/// - soap_new_gml__MultiSurfacePropertyType(soap*, int num) allocate array
/// - soap_new_req_gml__MultiSurfacePropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__MultiSurfacePropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__MultiSurfacePropertyType(soap*, gml__MultiSurfacePropertyType*) deserialize from a stream
/// - int soap_write_gml__MultiSurfacePropertyType(soap, gml__MultiSurfacePropertyType*) serialize to a stream
class gml__MultiSurfacePropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gml__MultiSurfacePropertyType_sequence
    {
/// @brief A gml:MultiSurface is defined by one or more gml:AbstractSurfaces. The members of the geometric aggregate may be specified either using the "standard" property (gml:surfaceMember) or the array property (gml:surfaceMembers). It is also valid to use both the "standard" and the array properties in the same collection.
/// Element reference "http://www.opengis.net/gml/3.2":MultiSurface.
    gml__MultiSurfaceType*               MultiSurface                   1;	///< Required element.
    }>                                   __MultiSurfacePropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute nilReason of type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         remoteSchema                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
/// Attribute owns of type xs:boolean.
   @bool                                 owns                           0 = false;	///< Default value="false".
};

/// "http://www.opengis.net/gml/3.2":MultiSolidPropertyType is a complexType.
/// @brief A property that has a collection of solids as its value domain may either be an appropriate geometry element encapsulated in an element of this type or an XLink reference to a remote geometry element (where remote includes geometry elements located elsewhere in the same document). Either the reference or the contained element shall be given, but neither both nor none.
/// class gml__MultiSolidPropertyType operations:
/// - soap_new_gml__MultiSolidPropertyType(soap*) allocate
/// - soap_new_gml__MultiSolidPropertyType(soap*, int num) allocate array
/// - soap_new_req_gml__MultiSolidPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__MultiSolidPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__MultiSolidPropertyType(soap*, gml__MultiSolidPropertyType*) deserialize from a stream
/// - int soap_write_gml__MultiSolidPropertyType(soap, gml__MultiSolidPropertyType*) serialize to a stream
class gml__MultiSolidPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gml__MultiSolidPropertyType_sequence
    {
/// @brief A gml:MultiSolid is defined by one or more gml:AbstractSolids. The members of the geometric aggregate may be specified either using the "standard" property (gml:solidMember) or the array property (gml:solidMembers). It is also valid to use both the "standard" and the array properties in the same collection.
/// Element reference "http://www.opengis.net/gml/3.2":MultiSolid.
    gml__MultiSolidType*                 MultiSolid                     1;	///< Required element.
    }>                                   __MultiSolidPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute nilReason of type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         remoteSchema                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
/// Attribute owns of type xs:boolean.
   @bool                                 owns                           0 = false;	///< Default value="false".
};

/// "http://www.opengis.net/gml/3.2":AbstractCurveSegmentType is an abstract complexType.
/// class gml__AbstractCurveSegmentType operations:
/// - soap_new_gml__AbstractCurveSegmentType(soap*) allocate
/// - soap_new_gml__AbstractCurveSegmentType(soap*, int num) allocate array
/// - soap_new_req_gml__AbstractCurveSegmentType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__AbstractCurveSegmentType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__AbstractCurveSegmentType(soap*, gml__AbstractCurveSegmentType*) deserialize from a stream
/// - int soap_write_gml__AbstractCurveSegmentType(soap, gml__AbstractCurveSegmentType*) serialize to a stream
class gml__AbstractCurveSegmentType : public xsd__anyType
{ public:
/// Attribute numDerivativesAtStart of type xs:integer.
   @long                                 numDerivativesAtStart          0 = 0;	///< Default value="0".
/// Attribute numDerivativesAtEnd of type xs:integer.
   @long                                 numDerivativesAtEnd            0 = 0;	///< Default value="0".
/// Attribute numDerivativeInterior of type xs:integer.
   @long                                 numDerivativeInterior          0 = 0;	///< Default value="0".
};

/// "http://www.opengis.net/gml/3.2":CurveSegmentArrayPropertyType is a complexType.
/// @brief gml:CurveSegmentArrayPropertyType is a container for an array of curve segments.
/// class gml__CurveSegmentArrayPropertyType operations:
/// - soap_new_gml__CurveSegmentArrayPropertyType(soap*) allocate
/// - soap_new_gml__CurveSegmentArrayPropertyType(soap*, int num) allocate array
/// - soap_new_req_gml__CurveSegmentArrayPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__CurveSegmentArrayPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__CurveSegmentArrayPropertyType(soap*, gml__CurveSegmentArrayPropertyType*) deserialize from a stream
/// - int soap_write_gml__CurveSegmentArrayPropertyType(soap, gml__CurveSegmentArrayPropertyType*) serialize to a stream
class gml__CurveSegmentArrayPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0" maxOccurs="unbounded">
    std::vector<                                                       
    class __gml__CurveSegmentArrayPropertyType_sequence
    {
/// @brief A curve segment defines a homogeneous segment of a curve. The attributes numDerivativesAtStart, numDerivativesAtEnd and numDerivativesInterior specify the type of continuity as specified in ISO 19107:2003, 6.4.9.3. The AbstractCurveSegment element is the abstract head of the substituition group for all curve segment elements, i.e. continuous segments of the same interpolation mechanism. All curve segments shall have an attribute interpolation with type gml:CurveInterpolationType specifying the curve interpolation mechanism used for this segment. This mechanism uses the control points and control parameters to determine the position of this curve segment.
/// Reference "http://www.opengis.net/gml/3.2":AbstractCurveSegment to abstract element.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractCurveSegment"> with elements <LineStringSegment> <ArcString> <ArcStringByBulge> <ArcByCenterPoint> <CubicSpline> <BSpline> <OffsetCurve> <Clothoid> <GeodesicString>
   $int                                  __unionAbstractCurveSegment    0;	///< Union _gml__union_CurveSegmentArrayPropertyType selector: set to SOAP_UNION__gml__union_CurveSegmentArrayPropertyType_<fieldname>
/// Union for substitutionGroup="AbstractCurveSegment"
    union _gml__union_CurveSegmentArrayPropertyType
    {
/// @brief A LineStringSegment is a curve segment that is defined by two or more control points including the start and end point, with linear interpolation between them. The content model follows the general pattern for the encoding of curve segments.
/// Element LineStringSegment of type "http://www.opengis.net/gml/3.2":LineStringSegmentType.
    gml__LineStringSegmentType*          LineStringSegment              1;	///< Required element.
/// @brief An ArcString is a curve segment that uses three-point circular arc interpolation ("circularArc3Points"). The number of arcs in the arc string may be explicitly stated in the attribute numArc. The number of control points in the arc string shall be 2 * numArc + 1. The content model follows the general pattern for the encoding of curve segments.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="ArcString"> with elements <Arc>
/// @brief An ArcString is a curve segment that uses three-point circular arc interpolation ("circularArc3Points"). The number of arcs in the arc string may be explicitly stated in the attribute numArc. The number of control points in the arc string shall be 2 * numArc + 1. The content model follows the general pattern for the encoding of curve segments.
/// Element ArcString of type "http://www.opengis.net/gml/3.2":ArcStringType.
    gml__ArcStringType*                  ArcString                      1;	///< Required element.
/// @brief An Arc is an arc string with only one arc unit, i.e. three control points including the start and end point. As arc is an arc string consisting of a single arc, the attribute "numArc" is fixed to "1".
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="Arc"> with elements <Circle>
/// @brief An Arc is an arc string with only one arc unit, i.e. three control points including the start and end point. As arc is an arc string consisting of a single arc, the attribute "numArc" is fixed to "1".
/// Element Arc of type "http://www.opengis.net/gml/3.2":ArcType.
    gml__ArcType*                        Arc                            1;	///< Required element.
/// @brief A Circle is an arc whose ends coincide to form a simple closed loop. The three control points shall be distinct non-co-linear points for the circle to be unambiguously defined. The arc is simply extended past the third control point until the first control point is encountered.
/// Element Circle of type "http://www.opengis.net/gml/3.2":CircleType.
    gml__CircleType*                     Circle                         1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
//  END OF CHOICE OF SUBSTITUTIONS
/// @brief This variant of the arc computes the mid points of the arcs instead of storing the coordinates directly. The control point sequence consists of the start and end points of each arc plus the bulge (see ISO 19107:2003, 6.4.17.2). The normal is a vector normal (perpendicular) to the chord of the arc (see ISO 19107:2003, 6.4.17.4). The interpolation is fixed as "circularArc2PointWithBulge". The number of arcs in the arc string may be explicitly stated in the attribute numArc. The number of control points in the arc string shall be numArc + 1. The content model follows the general pattern for the encoding of curve segments.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="ArcStringByBulge"> with elements <ArcByBulge>
/// @brief This variant of the arc computes the mid points of the arcs instead of storing the coordinates directly. The control point sequence consists of the start and end points of each arc plus the bulge (see ISO 19107:2003, 6.4.17.2). The normal is a vector normal (perpendicular) to the chord of the arc (see ISO 19107:2003, 6.4.17.4). The interpolation is fixed as "circularArc2PointWithBulge". The number of arcs in the arc string may be explicitly stated in the attribute numArc. The number of control points in the arc string shall be numArc + 1. The content model follows the general pattern for the encoding of curve segments.
/// Element ArcStringByBulge of type "http://www.opengis.net/gml/3.2":ArcStringByBulgeType.
    gml__ArcStringByBulgeType*           ArcStringByBulge               1;	///< Required element.
/// @brief An ArcByBulge is an arc string with only one arc unit, i.e. two control points, one bulge and one normal vector. As arc is an arc string consisting of a single arc, the attribute "numArc" is fixed to "1".
/// Element ArcByBulge of type "http://www.opengis.net/gml/3.2":ArcByBulgeType.
    gml__ArcByBulgeType*                 ArcByBulge                     1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
/// @brief This variant of the arc requires that the points on the arc shall be computed instead of storing the coordinates directly. The single control point is the center point of the arc plus the radius and the bearing at start and end. This representation can be used only in 2D. The element radius specifies the radius of the arc. The element startAngle specifies the bearing of the arc at the start. The element endAngle specifies the bearing of the arc at the end. The interpolation is fixed as "circularArcCenterPointWithRadius". Since this type describes always a single arc, the attribute "numArc" is fixed to "1". The content model follows the general pattern for the encoding of curve segments.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="ArcByCenterPoint"> with elements <CircleByCenterPoint>
/// @brief This variant of the arc requires that the points on the arc shall be computed instead of storing the coordinates directly. The single control point is the center point of the arc plus the radius and the bearing at start and end. This representation can be used only in 2D. The element radius specifies the radius of the arc. The element startAngle specifies the bearing of the arc at the start. The element endAngle specifies the bearing of the arc at the end. The interpolation is fixed as "circularArcCenterPointWithRadius". Since this type describes always a single arc, the attribute "numArc" is fixed to "1". The content model follows the general pattern for the encoding of curve segments.
/// Element ArcByCenterPoint of type "http://www.opengis.net/gml/3.2":ArcByCenterPointType.
    gml__ArcByCenterPointType*           ArcByCenterPoint               1;	///< Required element.
/// @brief A gml:CircleByCenterPoint is an gml:ArcByCenterPoint with identical start and end angle to form a full circle. Again, this representation can be used only in 2D.
/// Element CircleByCenterPoint of type "http://www.opengis.net/gml/3.2":CircleByCenterPointType.
    gml__CircleByCenterPointType*        CircleByCenterPoint            1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
/// @brief The number of control points shall be at least three. vectorAtStart is the unit tangent vector at the start point of the spline. vectorAtEnd is the unit tangent vector at the end point of the spline. Only the direction of the vectors shall be used to determine the shape of the cubic spline, not their length. interpolation is fixed as "cubicSpline". degree shall be the degree of the polynomial used for the interpolation in this spline. Therefore the degree for a cubic spline is fixed to "3". The content model follows the general pattern for the encoding of curve segments.
/// Element CubicSpline of type "http://www.opengis.net/gml/3.2":CubicSplineType.
    gml__CubicSplineType*                CubicSpline                    1;	///< Required element.
/// @brief A B-Spline is a piecewise parametric polynomial or rational curve described in terms of control points and basis functions as specified in ISO 19107:2003, 6.4.30. Therefore, interpolation may be either "polynomialSpline" or "rationalSpline" depending on the interpolation type; default is "polynomialSpline". degree shall be the degree of the polynomial used for interpolation in this spline. knot shall be the sequence of distinct knots used to define the spline basis functions (see ISO 19107:2003, 6.4.26.2). The attribute isPolynomial shall be set to "true" if this is a polynomial spline (see ISO 19107:2003, 6.4.30.5). The attribute knotType shall provide the type of knot distribution used in defining this spline (see ISO 19107:2003, 6.4.30.4). The content model follows the general pattern for the encoding of curve segments.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="BSpline"> with elements <Bezier>
/// @brief A B-Spline is a piecewise parametric polynomial or rational curve described in terms of control points and basis functions as specified in ISO 19107:2003, 6.4.30. Therefore, interpolation may be either "polynomialSpline" or "rationalSpline" depending on the interpolation type; default is "polynomialSpline". degree shall be the degree of the polynomial used for interpolation in this spline. knot shall be the sequence of distinct knots used to define the spline basis functions (see ISO 19107:2003, 6.4.26.2). The attribute isPolynomial shall be set to "true" if this is a polynomial spline (see ISO 19107:2003, 6.4.30.5). The attribute knotType shall provide the type of knot distribution used in defining this spline (see ISO 19107:2003, 6.4.30.4). The content model follows the general pattern for the encoding of curve segments.
/// Element BSpline of type "http://www.opengis.net/gml/3.2":BSplineType.
    gml__BSplineType*                    BSpline                        1;	///< Required element.
/// @brief Bezier curves are polynomial splines that use Bezier or Bernstein polynomials for interpolation purposes. It is a special case of the B-Spline curve with two knots. degree shall be the degree of the polynomial used for interpolation in this spline. knot shall be the sequence of distinct knots used to define the spline basis functions. interpolation is fixed as "polynomialSpline". isPolynomial is fixed as "true". knotType is not relevant for Bezier curve segments.
/// Element Bezier of type "http://www.opengis.net/gml/3.2":BezierType.
    gml__BezierType*                     Bezier                         1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
/// @brief An offset curve is a curve at a constant distance from the basis curve. offsetBase is the base curve from which this curve is defined as an offset. distance and refDirection have the same meaning as specified in ISO 19107:2003, 6.4.23. The content model follows the general pattern for the encoding of curve segments.
/// Element OffsetCurve of type "http://www.opengis.net/gml/3.2":OffsetCurveType.
    gml__OffsetCurveType*                OffsetCurve                    1;	///< Required element.
/// @brief A clothoid, or Cornu's spiral, is plane curve whose curvature is a fixed function of its length. refLocation, startParameter, endParameter and scaleFactor have the same meaning as specified in ISO 19107:2003, 6.4.22. interpolation is fixed as "clothoid". The content model follows the general pattern for the encoding of curve segments.
/// Element Clothoid of type "http://www.opengis.net/gml/3.2":ClothoidType.
    gml__ClothoidType*                   Clothoid                       1;	///< Required element.
/// @brief A sequence of geodesic segments. The number of control points shall be at least two. interpolation is fixed as "geodesic". The content model follows the general pattern for the encoding of curve segments.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="GeodesicString"> with elements <Geodesic>
/// @brief A sequence of geodesic segments. The number of control points shall be at least two. interpolation is fixed as "geodesic". The content model follows the general pattern for the encoding of curve segments.
/// Element GeodesicString of type "http://www.opengis.net/gml/3.2":GeodesicStringType.
    gml__GeodesicStringType*             GeodesicString                 1;	///< Required element.
/// Element Geodesic of type "http://www.opengis.net/gml/3.2":GeodesicType.
    gml__GeodesicType*                   Geodesic                       1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
    }                                    __union_CurveSegmentArrayPropertyType;
//  END OF CHOICE OF SUBSTITUTIONS
    }>                                   __CurveSegmentArrayPropertyType_sequence 0;
//  END OF SEQUENCE
};

/// "http://www.opengis.net/gml/3.2":KnotType is a complexType.
/// class gml__KnotType operations:
/// - soap_new_gml__KnotType(soap*) allocate
/// - soap_new_gml__KnotType(soap*, int num) allocate array
/// - soap_new_req_gml__KnotType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__KnotType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__KnotType(soap*, gml__KnotType*) deserialize from a stream
/// - int soap_write_gml__KnotType(soap, gml__KnotType*) serialize to a stream
class gml__KnotType : public xsd__anyType
{ public:
/// Element value of type xs:double.
    double                               value                          1;	///< Required element.
/// Element multiplicity of type xs:nonNegativeInteger.
    xsd__nonNegativeInteger              multiplicity                   1;	///< Required element.
/// Element weight of type xs:double.
    double                               weight                         1;	///< Required element.
};

/// "http://www.opengis.net/gml/3.2":KnotPropertyType is a complexType.
/// @brief gml:KnotPropertyType encapsulates a knot to use it in a geometric type.
/// class gml__KnotPropertyType operations:
/// - soap_new_gml__KnotPropertyType(soap*) allocate
/// - soap_new_gml__KnotPropertyType(soap*, int num) allocate array
/// - soap_new_req_gml__KnotPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__KnotPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__KnotPropertyType(soap*, gml__KnotPropertyType*) deserialize from a stream
/// - int soap_write_gml__KnotPropertyType(soap, gml__KnotPropertyType*) serialize to a stream
class gml__KnotPropertyType : public xsd__anyType
{ public:
/// @brief A knot is a breakpoint on a piecewise spline curve. value is the value of the parameter at the knot of the spline (see ISO 19107:2003, 6.4.24.2). multiplicity is the multiplicity of this knot used in the definition of the spline (with the same weight). weight is the value of the averaging weight used for this knot of the spline.
/// Element Knot of type "http://www.opengis.net/gml/3.2":KnotType.
    gml__KnotType*                       Knot                           1;	///< Required element.
};

/// "http://www.opengis.net/gml/3.2":AffinePlacementType is a complexType.
/// class gml__AffinePlacementType operations:
/// - soap_new_gml__AffinePlacementType(soap*) allocate
/// - soap_new_gml__AffinePlacementType(soap*, int num) allocate array
/// - soap_new_req_gml__AffinePlacementType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__AffinePlacementType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__AffinePlacementType(soap*, gml__AffinePlacementType*) deserialize from a stream
/// - int soap_write_gml__AffinePlacementType(soap, gml__AffinePlacementType*) serialize to a stream
class gml__AffinePlacementType : public xsd__anyType
{ public:
/// Element location of type "http://www.opengis.net/gml/3.2":DirectPositionType.
    gml__DirectPositionType*             location                       1;	///< Required element.
/// Vector of gml__VectorType* with length 1..unbounded
    std::vector<gml__VectorType*       > refDirection                   1;
/// Element inDimension of type xs:positiveInteger.
    xsd__positiveInteger                 inDimension                    1;	///< Required element.
/// Element outDimension of type xs:positiveInteger.
    xsd__positiveInteger                 outDimension                   1;	///< Required element.
};

/// "http://www.opengis.net/gml/3.2":AbstractSurfacePatchType is an abstract complexType.
/// class gml__AbstractSurfacePatchType operations:
/// - soap_new_gml__AbstractSurfacePatchType(soap*) allocate
/// - soap_new_gml__AbstractSurfacePatchType(soap*, int num) allocate array
/// - soap_new_req_gml__AbstractSurfacePatchType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__AbstractSurfacePatchType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__AbstractSurfacePatchType(soap*, gml__AbstractSurfacePatchType*) deserialize from a stream
/// - int soap_write_gml__AbstractSurfacePatchType(soap, gml__AbstractSurfacePatchType*) serialize to a stream
class gml__AbstractSurfacePatchType : public xsd__anyType
{ public:
};

/// "http://www.opengis.net/gml/3.2":SurfacePatchArrayPropertyType is a complexType.
/// @brief gml:SurfacePatchArrayPropertyType is a container for a sequence of surface patches.
/// class gml__SurfacePatchArrayPropertyType operations:
/// - soap_new_gml__SurfacePatchArrayPropertyType(soap*) allocate
/// - soap_new_gml__SurfacePatchArrayPropertyType(soap*, int num) allocate array
/// - soap_new_req_gml__SurfacePatchArrayPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__SurfacePatchArrayPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__SurfacePatchArrayPropertyType(soap*, gml__SurfacePatchArrayPropertyType*) deserialize from a stream
/// - int soap_write_gml__SurfacePatchArrayPropertyType(soap, gml__SurfacePatchArrayPropertyType*) serialize to a stream
class gml__SurfacePatchArrayPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0" maxOccurs="unbounded">
    std::vector<                                                       
    class __gml__SurfacePatchArrayPropertyType_sequence
    {
/// @brief A surface patch defines a homogenuous portion of a surface. The AbstractSurfacePatch element is the abstract head of the substituition group for all surface patch elements describing a continuous portion of a surface. All surface patches shall have an attribute interpolation (declared in the types derived from gml:AbstractSurfacePatchType) specifying the interpolation mechanism used for the patch using gml:SurfaceInterpolationType.
/// Reference "http://www.opengis.net/gml/3.2":AbstractSurfacePatch to abstract element.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractSurfacePatch"> with elements <PolygonPatch> <Triangle> <Rectangle> <AbstractParametricCurveSurface>
   $int                                  __unionAbstractSurfacePatch    0;	///< Union _gml__union_SurfacePatchArrayPropertyType selector: set to SOAP_UNION__gml__union_SurfacePatchArrayPropertyType_<fieldname>
/// Union for substitutionGroup="AbstractSurfacePatch"
    union _gml__union_SurfacePatchArrayPropertyType
    {
/// @brief A gml:PolygonPatch is a surface patch that is defined by a set of boundary curves and an underlying surface to which these curves adhere. The curves shall be coplanar and the polygon uses planar interpolation in its interior. interpolation is fixed to "planar", i.e. an interpolation shall return points on a single plane. The boundary of the patch shall be contained within that plane.
/// Element PolygonPatch of type "http://www.opengis.net/gml/3.2":PolygonPatchType.
    gml__PolygonPatchType*               PolygonPatch                   1;	///< Required element.
/// @brief gml:Triangle represents a triangle as a surface patch with an outer boundary consisting of a linear ring. Note that this is a polygon (subtype) with no inner boundaries. The number of points in the linear ring shall be four. The ring (element exterior) shall be a gml:LinearRing and shall form a triangle, the first and the last position shall be coincident. interpolation is fixed to "planar", i.e. an interpolation shall return points on a single plane. The boundary of the patch shall be contained within that plane.
/// Element Triangle of type "http://www.opengis.net/gml/3.2":TriangleType.
    gml__TriangleType*                   Triangle                       1;	///< Required element.
/// @brief gml:Rectangle represents a rectangle as a surface patch with an outer boundary consisting of a linear ring. Note that this is a polygon (subtype) with no inner boundaries. The number of points in the linear ring shall be five. The ring (element exterior) shall be a gml:LinearRing and shall form a rectangle; the first and the last position shall be coincident. interpolation is fixed to "planar", i.e. an interpolation shall return points on a single plane. The boundary of the patch shall be contained within that plane.
/// Element Rectangle of type "http://www.opengis.net/gml/3.2":RectangleType.
    gml__RectangleType*                  Rectangle                      1;	///< Required element.
/// @brief The element provides a substitution group head for the surface patches based on parametric curves. All properties are specified in the derived subtypes. All derived subtypes shall conform to the constraints specified in ISO 19107:2003, 6.4.40. If provided, the aggregationType attribute shall have the value "set".
/// Abstract element AbstractParametricCurveSurface of type "http://www.opengis.net/gml/3.2":AbstractParametricCurveSurfaceType.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractParametricCurveSurface"> with elements <AbstractGriddedSurface>
/// @brief if provided, rows gives the number of rows, columns the number of columns in the parameter grid. The parameter grid is represented by an instance of the gml:PointGrid group. The element provides a substitution group head for the surface patches based on a grid. All derived subtypes shall conform to the constraints specified in ISO 19107:2003, 6.4.41.
/// Abstract element AbstractGriddedSurface of type "http://www.opengis.net/gml/3.2":AbstractGriddedSurfaceType.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractGriddedSurface"> with elements <Cone> <Cylinder> <Sphere>
/// Element Cone of type "http://www.opengis.net/gml/3.2":ConeType.
    gml__ConeType*                       Cone                           1;	///< Required element.
/// Element Cylinder of type "http://www.opengis.net/gml/3.2":CylinderType.
    gml__CylinderType*                   Cylinder                       1;	///< Required element.
/// Element Sphere of type "http://www.opengis.net/gml/3.2":SphereType.
    gml__SphereType*                     Sphere                         1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
//  END OF CHOICE OF SUBSTITUTIONS
    }                                    __union_SurfacePatchArrayPropertyType;
//  END OF CHOICE OF SUBSTITUTIONS
    }>                                   __SurfacePatchArrayPropertyType_sequence 0;
//  END OF SEQUENCE
};

/// "http://www.opengis.net/gml/3.2":RingPropertyType is a complexType.
/// @brief A property with the content model of gml:RingPropertyType encapsulates a ring to represent a component of a surface boundary.
/// class gml__RingPropertyType operations:
/// - soap_new_gml__RingPropertyType(soap*) allocate
/// - soap_new_gml__RingPropertyType(soap*, int num) allocate array
/// - soap_new_req_gml__RingPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__RingPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__RingPropertyType(soap*, gml__RingPropertyType*) deserialize from a stream
/// - int soap_write_gml__RingPropertyType(soap, gml__RingPropertyType*) serialize to a stream
class gml__RingPropertyType : public xsd__anyType
{ public:
/// @brief A ring is used to represent a single connected component of a surface boundary as specified in ISO 19107:2003, 6.3.6. Every gml:curveMember references or contains one curve, i.e. any element which is substitutable for gml:AbstractCurve. In the context of a ring, the curves describe the boundary of the surface. The sequence of curves shall be contiguous and connected in a cycle. If provided, the aggregationType attribute shall have the value "sequence".
/// Element reference "http://www.opengis.net/gml/3.2":Ring.
    gml__RingType*                       Ring                           1;	///< Required element.
};

/// "http://www.opengis.net/gml/3.2":LineStringSegmentArrayPropertyType is a complexType.
/// @brief gml:LineStringSegmentArrayPropertyType provides a container for line strings.
/// class gml__LineStringSegmentArrayPropertyType operations:
/// - soap_new_gml__LineStringSegmentArrayPropertyType(soap*) allocate
/// - soap_new_gml__LineStringSegmentArrayPropertyType(soap*, int num) allocate array
/// - soap_new_req_gml__LineStringSegmentArrayPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__LineStringSegmentArrayPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__LineStringSegmentArrayPropertyType(soap*, gml__LineStringSegmentArrayPropertyType*) deserialize from a stream
/// - int soap_write_gml__LineStringSegmentArrayPropertyType(soap, gml__LineStringSegmentArrayPropertyType*) serialize to a stream
class gml__LineStringSegmentArrayPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0" maxOccurs="unbounded">
    std::vector<                                                       
    class __gml__LineStringSegmentArrayPropertyType_sequence
    {
/// @brief A LineStringSegment is a curve segment that is defined by two or more control points including the start and end point, with linear interpolation between them. The content model follows the general pattern for the encoding of curve segments.
/// Element reference "http://www.opengis.net/gml/3.2":LineStringSegment.
    gml__LineStringSegmentType*          LineStringSegment              1;	///< Required element.
    }>                                   __LineStringSegmentArrayPropertyType_sequence 0;
//  END OF SEQUENCE
};

/// "http://www.opengis.net/gml/3.2":SolidPropertyType is a complexType.
/// @brief A property that has a solid as its value domain may either be an appropriate geometry element encapsulated in an element of this type or an XLink reference to a remote geometry element (where remote includes geometry elements located elsewhere in the same document). Either the reference or the contained element shall be given, but neither both nor none.
/// class gml__SolidPropertyType operations:
/// - soap_new_gml__SolidPropertyType(soap*) allocate
/// - soap_new_gml__SolidPropertyType(soap*, int num) allocate array
/// - soap_new_req_gml__SolidPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__SolidPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__SolidPropertyType(soap*, gml__SolidPropertyType*) deserialize from a stream
/// - int soap_write_gml__SolidPropertyType(soap, gml__SolidPropertyType*) serialize to a stream
class gml__SolidPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gml__SolidPropertyType_sequence
    {
/// @brief The AbstractSolid element is the abstract head of the substituition group for all (continuous) solid elements.
/// Reference "http://www.opengis.net/gml/3.2":AbstractSolid to abstract element.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractSolid"> with elements <CompositeSolid> <Solid>
   $int                                  __unionAbstractSolid           0;	///< Union _gml__union_SolidPropertyType selector: set to SOAP_UNION__gml__union_SolidPropertyType_<fieldname>
/// Union for substitutionGroup="AbstractSolid"
    union _gml__union_SolidPropertyType
    {
/// @brief gml:CompositeSolid implements ISO 19107 GM_CompositeSolid (see ISO 19107:2003, 6.6.7) as specified in D.2.3.6. A gml:CompositeSolid is represented by a set of orientable surfaces. It is a geometry type with all the geometric properties of a (primitive) solid. Essentially, a composite solid is a collection of solids that join in pairs on common boundary surfaces and which, when considered as a whole, form a single solid. solidMember references or contains one solid in the composite solid. The solids are contiguous.
/// Element CompositeSolid of type "http://www.opengis.net/gml/3.2":CompositeSolidType.
    gml__CompositeSolidType*             CompositeSolid                 1;	///< Required element.
/// @brief A solid is the basis for 3-dimensional geometry. The extent of a solid is defined by the boundary surfaces as specified in ISO 19107:2003, 6.3.18. exterior specifies the outer boundary, interior the inner boundary of the solid.
/// Element Solid of type "http://www.opengis.net/gml/3.2":SolidType.
    gml__SolidType*                      Solid                          1;	///< Required element.
    }                                    __union_SolidPropertyType     ;
//  END OF CHOICE OF SUBSTITUTIONS
    }>                                   __SolidPropertyType_sequence   0;
//  END OF SEQUENCE
/// Attribute nilReason of type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         remoteSchema                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
/// Attribute owns of type xs:boolean.
   @bool                                 owns                           0 = false;	///< Default value="false".
};

/// "http://www.opengis.net/gml/3.2":SolidArrayPropertyType is a complexType.
/// @brief gml:SolidArrayPropertyType is a container for an array of solids. The elements are always contained in the array property, referencing geometry elements or arrays of geometry elements is not supported.
/// class gml__SolidArrayPropertyType operations:
/// - soap_new_gml__SolidArrayPropertyType(soap*) allocate
/// - soap_new_gml__SolidArrayPropertyType(soap*, int num) allocate array
/// - soap_new_req_gml__SolidArrayPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__SolidArrayPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__SolidArrayPropertyType(soap*, gml__SolidArrayPropertyType*) deserialize from a stream
/// - int soap_write_gml__SolidArrayPropertyType(soap, gml__SolidArrayPropertyType*) serialize to a stream
class gml__SolidArrayPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0" maxOccurs="unbounded">
    std::vector<                                                       
    class __gml__SolidArrayPropertyType_sequence
    {
/// @brief The AbstractSolid element is the abstract head of the substituition group for all (continuous) solid elements.
/// Reference "http://www.opengis.net/gml/3.2":AbstractSolid to abstract element.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractSolid"> with elements <CompositeSolid> <Solid>
   $int                                  __unionAbstractSolid           0;	///< Union _gml__union_SolidArrayPropertyType selector: set to SOAP_UNION__gml__union_SolidArrayPropertyType_<fieldname>
/// Union for substitutionGroup="AbstractSolid"
    union _gml__union_SolidArrayPropertyType
    {
/// @brief gml:CompositeSolid implements ISO 19107 GM_CompositeSolid (see ISO 19107:2003, 6.6.7) as specified in D.2.3.6. A gml:CompositeSolid is represented by a set of orientable surfaces. It is a geometry type with all the geometric properties of a (primitive) solid. Essentially, a composite solid is a collection of solids that join in pairs on common boundary surfaces and which, when considered as a whole, form a single solid. solidMember references or contains one solid in the composite solid. The solids are contiguous.
/// Element CompositeSolid of type "http://www.opengis.net/gml/3.2":CompositeSolidType.
    gml__CompositeSolidType*             CompositeSolid                 1;	///< Required element.
/// @brief A solid is the basis for 3-dimensional geometry. The extent of a solid is defined by the boundary surfaces as specified in ISO 19107:2003, 6.3.18. exterior specifies the outer boundary, interior the inner boundary of the solid.
/// Element Solid of type "http://www.opengis.net/gml/3.2":SolidType.
    gml__SolidType*                      Solid                          1;	///< Required element.
    }                                    __union_SolidArrayPropertyType;
//  END OF CHOICE OF SUBSTITUTIONS
    }>                                   __SolidArrayPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute owns of type xs:boolean.
   @bool                                 owns                           0 = false;	///< Default value="false".
};

/// "http://www.opengis.net/gml/3.2":ShellType is a complexType.
/// class gml__ShellType operations:
/// - soap_new_gml__ShellType(soap*) allocate
/// - soap_new_gml__ShellType(soap*, int num) allocate array
/// - soap_new_req_gml__ShellType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__ShellType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__ShellType(soap*, gml__ShellType*) deserialize from a stream
/// - int soap_write_gml__ShellType(soap, gml__ShellType*) serialize to a stream
class gml__ShellType : public xsd__anyType
{ public:
/// @brief This property element either references a surface via the XLink-attributes or contains the surface element. A surface element is any element, which is substitutable for gml:AbstractSurface.
/// Vector of gml__SurfacePropertyType* element refs with length 1..unbounded
    std::vector<gml__SurfacePropertyType*> surfaceMember                  1;
/// Attribute aggregationType of type "http://www.opengis.net/gml/3.2":AggregationType.
   @enum gml__AggregationType*           aggregationType                0;	///< Optional attribute.
};

/// "http://www.opengis.net/gml/3.2":ShellPropertyType is a complexType.
/// @brief A property with the content model of gml:ShellPropertyType encapsulates a shell to represent a component of a solid boundary.
/// class gml__ShellPropertyType operations:
/// - soap_new_gml__ShellPropertyType(soap*) allocate
/// - soap_new_gml__ShellPropertyType(soap*, int num) allocate array
/// - soap_new_req_gml__ShellPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__ShellPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__ShellPropertyType(soap*, gml__ShellPropertyType*) deserialize from a stream
/// - int soap_write_gml__ShellPropertyType(soap, gml__ShellPropertyType*) serialize to a stream
class gml__ShellPropertyType : public xsd__anyType
{ public:
/// @brief A shell is used to represent a single connected component of a solid boundary as specified in ISO 19107:2003, 6.3.8. Every gml:surfaceMember references or contains one surface, i.e. any element which is substitutable for gml:AbstractSurface. In the context of a shell, the surfaces describe the boundary of the solid. If provided, the aggregationType attribute shall have the value "set".
/// Element reference "http://www.opengis.net/gml/3.2":Shell.
    gml__ShellType*                      Shell                          1;	///< Required element.
};

/// "http://www.opengis.net/gml/3.2":SurfacePropertyType is a complexType.
/// @brief A property that has a surface as its value domain may either be an appropriate geometry element encapsulated in an element of this type or an XLink reference to a remote geometry element (where remote includes geometry elements located elsewhere in the same document). Either the reference or the contained element shall be given, but neither both nor none.
/// class gml__SurfacePropertyType operations:
/// - soap_new_gml__SurfacePropertyType(soap*) allocate
/// - soap_new_gml__SurfacePropertyType(soap*, int num) allocate array
/// - soap_new_req_gml__SurfacePropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__SurfacePropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__SurfacePropertyType(soap*, gml__SurfacePropertyType*) deserialize from a stream
/// - int soap_write_gml__SurfacePropertyType(soap, gml__SurfacePropertyType*) serialize to a stream
class gml__SurfacePropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gml__SurfacePropertyType_sequence
    {
/// @brief The AbstractSurface element is the abstract head of the substitution group for all (continuous) surface elements.
/// Reference "http://www.opengis.net/gml/3.2":AbstractSurface to abstract element.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractSurface"> with elements <CompositeSurface> <Surface> <OrientableSurface> <Polygon>
   $int                                  __unionAbstractSurface         0;	///< Union _gml__union_SurfacePropertyType selector: set to SOAP_UNION__gml__union_SurfacePropertyType_<fieldname>
/// Union for substitutionGroup="AbstractSurface"
    union _gml__union_SurfacePropertyType
    {
/// @brief A gml:CompositeSurface is represented by a set of orientable surfaces. It is geometry type with all the geometric properties of a (primitive) surface. Essentially, a composite surface is a collection of surfaces that join in pairs on common boundary curves and which, when considered as a whole, form a single surface. surfaceMember references or contains inline one surface in the composite surface. The surfaces are contiguous.
/// Element CompositeSurface of type "http://www.opengis.net/gml/3.2":CompositeSurfaceType.
    gml__CompositeSurfaceType*           CompositeSurface               1;	///< Required element.
/// @brief A Surface is a 2-dimensional primitive and is composed of one or more surface patches as specified in ISO 19107:2003, 6.3.17.1. The surface patches are connected to one another. patches encapsulates the patches of the surface.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="Surface"> with elements <PolyhedralSurface> <TriangulatedSurface>
/// @brief A Surface is a 2-dimensional primitive and is composed of one or more surface patches as specified in ISO 19107:2003, 6.3.17.1. The surface patches are connected to one another. patches encapsulates the patches of the surface.
/// Element Surface of type "http://www.opengis.net/gml/3.2":SurfaceType.
    gml__SurfaceType*                    Surface                        1;	///< Required element.
/// @brief A polyhedral surface is a surface composed of polygon patches connected along their common boundary curves. This differs from the surface type only in the restriction on the types of surface patches acceptable. polygonPatches encapsulates the polygon patches of the polyhedral surface.
/// Element PolyhedralSurface of type "http://www.opengis.net/gml/3.2":SurfaceType.
    gml__SurfaceType*                    PolyhedralSurface              1;	///< Required element.
/// @brief A triangulated surface is a polyhedral surface that is composed only of triangles. There is no restriction on how the triangulation is derived. trianglePatches encapsulates the triangles of the triangulated surface.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="TriangulatedSurface"> with elements <Tin>
/// @brief A triangulated surface is a polyhedral surface that is composed only of triangles. There is no restriction on how the triangulation is derived. trianglePatches encapsulates the triangles of the triangulated surface.
/// Element TriangulatedSurface of type "http://www.opengis.net/gml/3.2":SurfaceType.
    gml__SurfaceType*                    TriangulatedSurface            1;	///< Required element.
/// @brief A tin is a triangulated surface that uses the Delauny algorithm or a similar algorithm complemented with consideration of stoplines (stopLines), breaklines (breakLines), and maximum length of triangle sides (maxLength). controlPoint shall contain a set of the positions (three or more) used as posts for this TIN (corners of the triangles in the TIN). See ISO 19107:2003, 6.4.39 for details.
/// Element Tin of type "http://www.opengis.net/gml/3.2":TinType.
    gml__TinType*                        Tin                            1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
//  END OF CHOICE OF SUBSTITUTIONS
/// @brief OrientableSurface consists of a surface and an orientation. If the orientation is "+", then the OrientableSurface is identical to the baseSurface. If the orientation is "-", then the OrientableSurface is a reference to a gml:AbstractSurface with an up-normal that reverses the direction for this OrientableSurface, the sense of "the top of the surface".
/// Element OrientableSurface of type "http://www.opengis.net/gml/3.2":OrientableSurfaceType.
    gml__OrientableSurfaceType*          OrientableSurface              1;	///< Required element.
/// @brief A Polygon is a special surface that is defined by a single surface patch (see D.3.6). The boundary of this patch is coplanar and the polygon uses planar interpolation in its interior. The elements exterior and interior describe the surface boundary of the polygon.
/// Element Polygon of type "http://www.opengis.net/gml/3.2":PolygonType.
    gml__PolygonType*                    Polygon                        1;	///< Required element.
    }                                    __union_SurfacePropertyType   ;
//  END OF CHOICE OF SUBSTITUTIONS
    }>                                   __SurfacePropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute nilReason of type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         remoteSchema                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
/// Attribute owns of type xs:boolean.
   @bool                                 owns                           0 = false;	///< Default value="false".
};

/// "http://www.opengis.net/gml/3.2":SurfaceArrayPropertyType is a complexType.
/// @brief gml:SurfaceArrayPropertyType is a container for an array of surfaces. The elements are always contained in the array property, referencing geometry elements or arrays of geometry elements via XLinks is not supported.
/// class gml__SurfaceArrayPropertyType operations:
/// - soap_new_gml__SurfaceArrayPropertyType(soap*) allocate
/// - soap_new_gml__SurfaceArrayPropertyType(soap*, int num) allocate array
/// - soap_new_req_gml__SurfaceArrayPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__SurfaceArrayPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__SurfaceArrayPropertyType(soap*, gml__SurfaceArrayPropertyType*) deserialize from a stream
/// - int soap_write_gml__SurfaceArrayPropertyType(soap, gml__SurfaceArrayPropertyType*) serialize to a stream
class gml__SurfaceArrayPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0" maxOccurs="unbounded">
    std::vector<                                                       
    class __gml__SurfaceArrayPropertyType_sequence
    {
/// @brief The AbstractSurface element is the abstract head of the substitution group for all (continuous) surface elements.
/// Reference "http://www.opengis.net/gml/3.2":AbstractSurface to abstract element.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractSurface"> with elements <CompositeSurface> <Surface> <OrientableSurface> <Polygon>
   $int                                  __unionAbstractSurface         0;	///< Union _gml__union_SurfaceArrayPropertyType selector: set to SOAP_UNION__gml__union_SurfaceArrayPropertyType_<fieldname>
/// Union for substitutionGroup="AbstractSurface"
    union _gml__union_SurfaceArrayPropertyType
    {
/// @brief A gml:CompositeSurface is represented by a set of orientable surfaces. It is geometry type with all the geometric properties of a (primitive) surface. Essentially, a composite surface is a collection of surfaces that join in pairs on common boundary curves and which, when considered as a whole, form a single surface. surfaceMember references or contains inline one surface in the composite surface. The surfaces are contiguous.
/// Element CompositeSurface of type "http://www.opengis.net/gml/3.2":CompositeSurfaceType.
    gml__CompositeSurfaceType*           CompositeSurface               1;	///< Required element.
/// @brief A Surface is a 2-dimensional primitive and is composed of one or more surface patches as specified in ISO 19107:2003, 6.3.17.1. The surface patches are connected to one another. patches encapsulates the patches of the surface.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="Surface"> with elements <PolyhedralSurface> <TriangulatedSurface>
/// @brief A Surface is a 2-dimensional primitive and is composed of one or more surface patches as specified in ISO 19107:2003, 6.3.17.1. The surface patches are connected to one another. patches encapsulates the patches of the surface.
/// Element Surface of type "http://www.opengis.net/gml/3.2":SurfaceType.
    gml__SurfaceType*                    Surface                        1;	///< Required element.
/// @brief A polyhedral surface is a surface composed of polygon patches connected along their common boundary curves. This differs from the surface type only in the restriction on the types of surface patches acceptable. polygonPatches encapsulates the polygon patches of the polyhedral surface.
/// Element PolyhedralSurface of type "http://www.opengis.net/gml/3.2":SurfaceType.
    gml__SurfaceType*                    PolyhedralSurface              1;	///< Required element.
/// @brief A triangulated surface is a polyhedral surface that is composed only of triangles. There is no restriction on how the triangulation is derived. trianglePatches encapsulates the triangles of the triangulated surface.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="TriangulatedSurface"> with elements <Tin>
/// @brief A triangulated surface is a polyhedral surface that is composed only of triangles. There is no restriction on how the triangulation is derived. trianglePatches encapsulates the triangles of the triangulated surface.
/// Element TriangulatedSurface of type "http://www.opengis.net/gml/3.2":SurfaceType.
    gml__SurfaceType*                    TriangulatedSurface            1;	///< Required element.
/// @brief A tin is a triangulated surface that uses the Delauny algorithm or a similar algorithm complemented with consideration of stoplines (stopLines), breaklines (breakLines), and maximum length of triangle sides (maxLength). controlPoint shall contain a set of the positions (three or more) used as posts for this TIN (corners of the triangles in the TIN). See ISO 19107:2003, 6.4.39 for details.
/// Element Tin of type "http://www.opengis.net/gml/3.2":TinType.
    gml__TinType*                        Tin                            1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
//  END OF CHOICE OF SUBSTITUTIONS
/// @brief OrientableSurface consists of a surface and an orientation. If the orientation is "+", then the OrientableSurface is identical to the baseSurface. If the orientation is "-", then the OrientableSurface is a reference to a gml:AbstractSurface with an up-normal that reverses the direction for this OrientableSurface, the sense of "the top of the surface".
/// Element OrientableSurface of type "http://www.opengis.net/gml/3.2":OrientableSurfaceType.
    gml__OrientableSurfaceType*          OrientableSurface              1;	///< Required element.
/// @brief A Polygon is a special surface that is defined by a single surface patch (see D.3.6). The boundary of this patch is coplanar and the polygon uses planar interpolation in its interior. The elements exterior and interior describe the surface boundary of the polygon.
/// Element Polygon of type "http://www.opengis.net/gml/3.2":PolygonType.
    gml__PolygonType*                    Polygon                        1;	///< Required element.
    }                                    __union_SurfaceArrayPropertyType;
//  END OF CHOICE OF SUBSTITUTIONS
    }>                                   __SurfaceArrayPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute owns of type xs:boolean.
   @bool                                 owns                           0 = false;	///< Default value="false".
};

/// "http://www.opengis.net/gml/3.2":AbstractRingType is an abstract complexType.
/// class gml__AbstractRingType operations:
/// - soap_new_gml__AbstractRingType(soap*) allocate
/// - soap_new_gml__AbstractRingType(soap*, int num) allocate array
/// - soap_new_req_gml__AbstractRingType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__AbstractRingType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__AbstractRingType(soap*, gml__AbstractRingType*) deserialize from a stream
/// - int soap_write_gml__AbstractRingType(soap, gml__AbstractRingType*) serialize to a stream
class gml__AbstractRingType : public xsd__anyType
{ public:
};

/// "http://www.opengis.net/gml/3.2":AbstractRingPropertyType is a complexType.
/// @brief A property with the content model of gml:AbstractRingPropertyType encapsulates a ring to represent the surface boundary property of a surface.
/// class gml__AbstractRingPropertyType operations:
/// - soap_new_gml__AbstractRingPropertyType(soap*) allocate
/// - soap_new_gml__AbstractRingPropertyType(soap*, int num) allocate array
/// - soap_new_req_gml__AbstractRingPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__AbstractRingPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__AbstractRingPropertyType(soap*, gml__AbstractRingPropertyType*) deserialize from a stream
/// - int soap_write_gml__AbstractRingPropertyType(soap, gml__AbstractRingPropertyType*) serialize to a stream
class gml__AbstractRingPropertyType : public xsd__anyType
{ public:
/// @brief An abstraction of a ring to support surface boundaries of different complexity. The AbstractRing element is the abstract head of the substituition group for all closed boundaries of a surface patch.
/// Reference "http://www.opengis.net/gml/3.2":AbstractRing to abstract element.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractRing"> with elements <Ring> <LinearRing>
   $int                                  __unionAbstractRing            0;	///< Union _gml__union_AbstractRingPropertyType selector: set to SOAP_UNION__gml__union_AbstractRingPropertyType_<fieldname>
/// Union for substitutionGroup="AbstractRing"
    union _gml__union_AbstractRingPropertyType
    {
/// @brief A ring is used to represent a single connected component of a surface boundary as specified in ISO 19107:2003, 6.3.6. Every gml:curveMember references or contains one curve, i.e. any element which is substitutable for gml:AbstractCurve. In the context of a ring, the curves describe the boundary of the surface. The sequence of curves shall be contiguous and connected in a cycle. If provided, the aggregationType attribute shall have the value "sequence".
/// Element Ring of type "http://www.opengis.net/gml/3.2":RingType.
    gml__RingType*                       Ring                           1;	///< Required element.
/// @brief A LinearRing is defined by four or more coordinate tuples, with linear interpolation between them; the first and last coordinates shall be coincident. The number of direct positions in the list shall be at least four.
/// Element LinearRing of type "http://www.opengis.net/gml/3.2":LinearRingType.
    gml__LinearRingType*                 LinearRing                     1;	///< Required element.
    }                                    __union_AbstractRingPropertyType;
//  END OF CHOICE OF SUBSTITUTIONS
};

/// "http://www.opengis.net/gml/3.2":LinearRingPropertyType is a complexType.
/// @brief A property with the content model of gml:LinearRingPropertyType encapsulates a linear ring to represent a component of a surface boundary.
/// class gml__LinearRingPropertyType operations:
/// - soap_new_gml__LinearRingPropertyType(soap*) allocate
/// - soap_new_gml__LinearRingPropertyType(soap*, int num) allocate array
/// - soap_new_req_gml__LinearRingPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__LinearRingPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__LinearRingPropertyType(soap*, gml__LinearRingPropertyType*) deserialize from a stream
/// - int soap_write_gml__LinearRingPropertyType(soap, gml__LinearRingPropertyType*) serialize to a stream
class gml__LinearRingPropertyType : public xsd__anyType
{ public:
/// @brief A LinearRing is defined by four or more coordinate tuples, with linear interpolation between them; the first and last coordinates shall be coincident. The number of direct positions in the list shall be at least four.
/// Element reference "http://www.opengis.net/gml/3.2":LinearRing.
    gml__LinearRingType*                 LinearRing                     1;	///< Required element.
};

/// "http://www.opengis.net/gml/3.2":GeometryPropertyType is a complexType.
/// @brief A geometric property may either be any geometry element encapsulated in an element of this type or an XLink reference to a remote geometry element (where remote includes geometry elements located elsewhere in the same or another document). Note that either the reference or the contained element shall be given, but not both or none. If a feature has a property that takes a geometry element as its value, this is called a geometry property. A generic type for such a geometry property is GeometryPropertyType.
/// class gml__GeometryPropertyType operations:
/// - soap_new_gml__GeometryPropertyType(soap*) allocate
/// - soap_new_gml__GeometryPropertyType(soap*, int num) allocate array
/// - soap_new_req_gml__GeometryPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__GeometryPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__GeometryPropertyType(soap*, gml__GeometryPropertyType*) deserialize from a stream
/// - int soap_write_gml__GeometryPropertyType(soap, gml__GeometryPropertyType*) serialize to a stream
class gml__GeometryPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gml__GeometryPropertyType_sequence
    {
/// @brief The AbstractGeometry element is the abstract head of the substitution group for all geometry elements of GML. This includes pre-defined and user-defined geometry elements. Any geometry element shall be a direct or indirect extension/restriction of AbstractGeometryType and shall be directly or indirectly in the substitution group of AbstractGeometry.
/// Reference "http://www.opengis.net/gml/3.2":AbstractGeometry to abstract element.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractGeometry"> with elements <GeometricComplex> <AbstractGeometricAggregate> <AbstractGeometricPrimitive> <AbstractImplicitGeometry>
   $int                                  __unionAbstractGeometry        0;	///< Union _gml__union_GeometryPropertyType selector: set to SOAP_UNION__gml__union_GeometryPropertyType_<fieldname>
/// Union for substitutionGroup="AbstractGeometry"
    union _gml__union_GeometryPropertyType
    {
/// Element GeometricComplex of type "http://www.opengis.net/gml/3.2":GeometricComplexType.
    gml__GeometricComplexType*           GeometricComplex               1;	///< Required element.
/// @brief gml:AbstractGeometricAggregate is the abstract head of the substitution group for all geometric aggregates.
/// Abstract element AbstractGeometricAggregate of type "http://www.opengis.net/gml/3.2":AbstractGeometricAggregateType.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractGeometricAggregate"> with elements <MultiGeometry> <MultiPoint> <MultiCurve> <MultiSurface> <MultiSolid>
/// @brief gml:MultiGeometry is a collection of one or more GML geometry objects of arbitrary type. The members of the geometric aggregate may be specified either using the "standard" property (gml:geometryMember) or the array property (gml:geometryMembers). It is also valid to use both the "standard" and the array properties in the same collection.
/// Element MultiGeometry of type "http://www.opengis.net/gml/3.2":MultiGeometryType.
    gml__MultiGeometryType*              MultiGeometry                  1;	///< Required element.
/// @brief A gml:MultiPoint consists of one or more gml:Points. The members of the geometric aggregate may be specified either using the "standard" property (gml:pointMember) or the array property (gml:pointMembers). It is also valid to use both the "standard" and the array properties in the same collection.
/// Element MultiPoint of type "http://www.opengis.net/gml/3.2":MultiPointType.
    gml__MultiPointType*                 MultiPoint                     1;	///< Required element.
/// @brief A gml:MultiCurve is defined by one or more gml:AbstractCurves. The members of the geometric aggregate may be specified either using the "standard" property (gml:curveMember) or the array property (gml:curveMembers). It is also valid to use both the "standard" and the array properties in the same collection.
/// Element MultiCurve of type "http://www.opengis.net/gml/3.2":MultiCurveType.
    gml__MultiCurveType*                 MultiCurve                     1;	///< Required element.
/// @brief A gml:MultiSurface is defined by one or more gml:AbstractSurfaces. The members of the geometric aggregate may be specified either using the "standard" property (gml:surfaceMember) or the array property (gml:surfaceMembers). It is also valid to use both the "standard" and the array properties in the same collection.
/// Element MultiSurface of type "http://www.opengis.net/gml/3.2":MultiSurfaceType.
    gml__MultiSurfaceType*               MultiSurface                   1;	///< Required element.
/// @brief A gml:MultiSolid is defined by one or more gml:AbstractSolids. The members of the geometric aggregate may be specified either using the "standard" property (gml:solidMember) or the array property (gml:solidMembers). It is also valid to use both the "standard" and the array properties in the same collection.
/// Element MultiSolid of type "http://www.opengis.net/gml/3.2":MultiSolidType.
    gml__MultiSolidType*                 MultiSolid                     1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
/// @brief The AbstractGeometricPrimitive element is the abstract head of the substitution group for all (pre- and user-defined) geometric primitives.
/// Abstract element AbstractGeometricPrimitive of type "http://www.opengis.net/gml/3.2":AbstractGeometricPrimitiveType.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractGeometricPrimitive"> with elements <AbstractSolid> <AbstractSurface> <Point> <AbstractCurve>
/// @brief The AbstractSolid element is the abstract head of the substituition group for all (continuous) solid elements.
/// Abstract element AbstractSolid of type "http://www.opengis.net/gml/3.2":AbstractSolidType.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractSolid"> with elements <CompositeSolid> <Solid>
/// @brief gml:CompositeSolid implements ISO 19107 GM_CompositeSolid (see ISO 19107:2003, 6.6.7) as specified in D.2.3.6. A gml:CompositeSolid is represented by a set of orientable surfaces. It is a geometry type with all the geometric properties of a (primitive) solid. Essentially, a composite solid is a collection of solids that join in pairs on common boundary surfaces and which, when considered as a whole, form a single solid. solidMember references or contains one solid in the composite solid. The solids are contiguous.
/// Element CompositeSolid of type "http://www.opengis.net/gml/3.2":CompositeSolidType.
    gml__CompositeSolidType*             CompositeSolid                 1;	///< Required element.
/// @brief A solid is the basis for 3-dimensional geometry. The extent of a solid is defined by the boundary surfaces as specified in ISO 19107:2003, 6.3.18. exterior specifies the outer boundary, interior the inner boundary of the solid.
/// Element Solid of type "http://www.opengis.net/gml/3.2":SolidType.
    gml__SolidType*                      Solid                          1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
/// @brief The AbstractSurface element is the abstract head of the substitution group for all (continuous) surface elements.
/// Abstract element AbstractSurface of type "http://www.opengis.net/gml/3.2":AbstractSurfaceType.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractSurface"> with elements <CompositeSurface> <Surface> <OrientableSurface> <Polygon>
/// @brief A gml:CompositeSurface is represented by a set of orientable surfaces. It is geometry type with all the geometric properties of a (primitive) surface. Essentially, a composite surface is a collection of surfaces that join in pairs on common boundary curves and which, when considered as a whole, form a single surface. surfaceMember references or contains inline one surface in the composite surface. The surfaces are contiguous.
/// Element CompositeSurface of type "http://www.opengis.net/gml/3.2":CompositeSurfaceType.
    gml__CompositeSurfaceType*           CompositeSurface               1;	///< Required element.
/// @brief A Surface is a 2-dimensional primitive and is composed of one or more surface patches as specified in ISO 19107:2003, 6.3.17.1. The surface patches are connected to one another. patches encapsulates the patches of the surface.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="Surface"> with elements <PolyhedralSurface> <TriangulatedSurface>
/// @brief A Surface is a 2-dimensional primitive and is composed of one or more surface patches as specified in ISO 19107:2003, 6.3.17.1. The surface patches are connected to one another. patches encapsulates the patches of the surface.
/// Element Surface of type "http://www.opengis.net/gml/3.2":SurfaceType.
    gml__SurfaceType*                    Surface                        1;	///< Required element.
/// @brief A polyhedral surface is a surface composed of polygon patches connected along their common boundary curves. This differs from the surface type only in the restriction on the types of surface patches acceptable. polygonPatches encapsulates the polygon patches of the polyhedral surface.
/// Element PolyhedralSurface of type "http://www.opengis.net/gml/3.2":SurfaceType.
    gml__SurfaceType*                    PolyhedralSurface              1;	///< Required element.
/// @brief A triangulated surface is a polyhedral surface that is composed only of triangles. There is no restriction on how the triangulation is derived. trianglePatches encapsulates the triangles of the triangulated surface.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="TriangulatedSurface"> with elements <Tin>
/// @brief A triangulated surface is a polyhedral surface that is composed only of triangles. There is no restriction on how the triangulation is derived. trianglePatches encapsulates the triangles of the triangulated surface.
/// Element TriangulatedSurface of type "http://www.opengis.net/gml/3.2":SurfaceType.
    gml__SurfaceType*                    TriangulatedSurface            1;	///< Required element.
/// @brief A tin is a triangulated surface that uses the Delauny algorithm or a similar algorithm complemented with consideration of stoplines (stopLines), breaklines (breakLines), and maximum length of triangle sides (maxLength). controlPoint shall contain a set of the positions (three or more) used as posts for this TIN (corners of the triangles in the TIN). See ISO 19107:2003, 6.4.39 for details.
/// Element Tin of type "http://www.opengis.net/gml/3.2":TinType.
    gml__TinType*                        Tin                            1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
//  END OF CHOICE OF SUBSTITUTIONS
/// @brief OrientableSurface consists of a surface and an orientation. If the orientation is "+", then the OrientableSurface is identical to the baseSurface. If the orientation is "-", then the OrientableSurface is a reference to a gml:AbstractSurface with an up-normal that reverses the direction for this OrientableSurface, the sense of "the top of the surface".
/// Element OrientableSurface of type "http://www.opengis.net/gml/3.2":OrientableSurfaceType.
    gml__OrientableSurfaceType*          OrientableSurface              1;	///< Required element.
/// @brief A Polygon is a special surface that is defined by a single surface patch (see D.3.6). The boundary of this patch is coplanar and the polygon uses planar interpolation in its interior. The elements exterior and interior describe the surface boundary of the polygon.
/// Element Polygon of type "http://www.opengis.net/gml/3.2":PolygonType.
    gml__PolygonType*                    Polygon                        1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
/// @brief A Point is defined by a single coordinate tuple. The direct position of a point is specified by the pos element which is of type DirectPositionType.
/// Element Point of type "http://www.opengis.net/gml/3.2":PointType.
    gml__PointType*                      Point                          1;	///< Required element.
/// @brief The AbstractCurve element is the abstract head of the substitution group for all (continuous) curve elements.
/// Abstract element AbstractCurve of type "http://www.opengis.net/gml/3.2":AbstractCurveType.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractCurve"> with elements <CompositeCurve> <Curve> <OrientableCurve> <LineString>
/// @brief A gml:CompositeCurve is represented by a sequence of (orientable) curves such that each curve in the sequence terminates at the start point of the subsequent curve in the list. curveMember references or contains inline one curve in the composite curve. The curves are contiguous, the collection of curves is ordered. Therefore, if provided, the aggregationType attribute shall have the value "sequence".
/// Element CompositeCurve of type "http://www.opengis.net/gml/3.2":CompositeCurveType.
    gml__CompositeCurveType*             CompositeCurve                 1;	///< Required element.
/// @brief A curve is a 1-dimensional primitive. Curves are continuous, connected, and have a measurable length in terms of the coordinate system. A curve is composed of one or more curve segments. Each curve segment within a curve may be defined using a different interpolation method. The curve segments are connected to one another, with the end point of each segment except the last being the start point of the next segment in the segment list. The orientation of the curve is positive. The element segments encapsulates the segments of the curve.
/// Element Curve of type "http://www.opengis.net/gml/3.2":CurveType.
    gml__CurveType*                      Curve                          1;	///< Required element.
/// @brief OrientableCurve consists of a curve and an orientation. If the orientation is "+", then the OrientableCurve is identical to the baseCurve. If the orientation is "-", then the OrientableCurve is related to another AbstractCurve with a parameterization that reverses the sense of the curve traversal.
/// Element OrientableCurve of type "http://www.opengis.net/gml/3.2":OrientableCurveType.
    gml__OrientableCurveType*            OrientableCurve                1;	///< Required element.
/// @brief A LineString is a special curve that consists of a single segment with linear interpolation. It is defined by two or more coordinate tuples, with linear interpolation between them. The number of direct positions in the list shall be at least two.
/// Element LineString of type "http://www.opengis.net/gml/3.2":LineStringType.
    gml__LineStringType*                 LineString                     1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
//  END OF CHOICE OF SUBSTITUTIONS
/// Abstract element AbstractImplicitGeometry of type "http://www.opengis.net/gml/3.2":AbstractGeometryType.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractImplicitGeometry"> with elements <Grid>
/// @brief The gml:Grid implicitly defines an unrectified grid, which is a network composed of two or more sets of curves in which the members of each set intersect the members of the other sets in an algorithmic way. The region of interest within the grid is given in terms of its gml:limits, being the grid coordinates of diagonally opposed corners of a rectangular region. gml:axisLabels is provided with a list of labels of the axes of the grid (gml:axisName has been deprecated). gml:dimension specifies the dimension of the grid. The gml:limits element contains a single gml:GridEnvelope. The gml:low and gml:high property elements of the envelope are each integerLists, which are coordinate tuples, the coordinates being measured as offsets from the origin of the grid along each axis, of the diagonally opposing corners of a "rectangular" region of interest.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="Grid"> with elements <RectifiedGrid>
/// @brief The gml:Grid implicitly defines an unrectified grid, which is a network composed of two or more sets of curves in which the members of each set intersect the members of the other sets in an algorithmic way. The region of interest within the grid is given in terms of its gml:limits, being the grid coordinates of diagonally opposed corners of a rectangular region. gml:axisLabels is provided with a list of labels of the axes of the grid (gml:axisName has been deprecated). gml:dimension specifies the dimension of the grid. The gml:limits element contains a single gml:GridEnvelope. The gml:low and gml:high property elements of the envelope are each integerLists, which are coordinate tuples, the coordinates being measured as offsets from the origin of the grid along each axis, of the diagonally opposing corners of a "rectangular" region of interest.
/// Element Grid of type "http://www.opengis.net/gml/3.2":GridType.
    gml__GridType*                       Grid                           1;	///< Required element.
/// @brief A rectified grid is a grid for which there is an affine transformation between the grid coordinates and the coordinates of an external coordinate reference system. It is defined by specifying the position (in some geometric space) of the grid "origin" and of the vectors that specify the post locations. Note that the grid limits (post indexes) and axis name properties are inherited from gml:GridType and that gml:RectifiedGrid adds a gml:origin property (contains or references a gml:Point) and a set of gml:offsetVector properties.
/// Element RectifiedGrid of type "http://www.opengis.net/gml/3.2":RectifiedGridType.
    gml__RectifiedGridType*              RectifiedGrid                  1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
//  END OF CHOICE OF SUBSTITUTIONS
    }                                    __union_GeometryPropertyType  ;
//  END OF CHOICE OF SUBSTITUTIONS
    }>                                   __GeometryPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute nilReason of type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         remoteSchema                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
/// Attribute owns of type xs:boolean.
   @bool                                 owns                           0 = false;	///< Default value="false".
};

/// "http://www.opengis.net/gml/3.2":GeometryArrayPropertyType is a complexType.
/// @brief If a feature has a property which takes an array of geometry elements as its value, this is called a geometry array property. A generic type for such a geometry property is GeometryArrayPropertyType. The elements are always contained inline in the array property, referencing geometry elements or arrays of geometry elements via XLinks is not supported.
/// class gml__GeometryArrayPropertyType operations:
/// - soap_new_gml__GeometryArrayPropertyType(soap*) allocate
/// - soap_new_gml__GeometryArrayPropertyType(soap*, int num) allocate array
/// - soap_new_req_gml__GeometryArrayPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__GeometryArrayPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__GeometryArrayPropertyType(soap*, gml__GeometryArrayPropertyType*) deserialize from a stream
/// - int soap_write_gml__GeometryArrayPropertyType(soap, gml__GeometryArrayPropertyType*) serialize to a stream
class gml__GeometryArrayPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0" maxOccurs="unbounded">
    std::vector<                                                       
    class __gml__GeometryArrayPropertyType_sequence
    {
/// @brief The AbstractGeometry element is the abstract head of the substitution group for all geometry elements of GML. This includes pre-defined and user-defined geometry elements. Any geometry element shall be a direct or indirect extension/restriction of AbstractGeometryType and shall be directly or indirectly in the substitution group of AbstractGeometry.
/// Reference "http://www.opengis.net/gml/3.2":AbstractGeometry to abstract element.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractGeometry"> with elements <GeometricComplex> <AbstractGeometricAggregate> <AbstractGeometricPrimitive> <AbstractImplicitGeometry>
   $int                                  __unionAbstractGeometry        0;	///< Union _gml__union_GeometryArrayPropertyType selector: set to SOAP_UNION__gml__union_GeometryArrayPropertyType_<fieldname>
/// Union for substitutionGroup="AbstractGeometry"
    union _gml__union_GeometryArrayPropertyType
    {
/// Element GeometricComplex of type "http://www.opengis.net/gml/3.2":GeometricComplexType.
    gml__GeometricComplexType*           GeometricComplex               1;	///< Required element.
/// @brief gml:AbstractGeometricAggregate is the abstract head of the substitution group for all geometric aggregates.
/// Abstract element AbstractGeometricAggregate of type "http://www.opengis.net/gml/3.2":AbstractGeometricAggregateType.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractGeometricAggregate"> with elements <MultiGeometry> <MultiPoint> <MultiCurve> <MultiSurface> <MultiSolid>
/// @brief gml:MultiGeometry is a collection of one or more GML geometry objects of arbitrary type. The members of the geometric aggregate may be specified either using the "standard" property (gml:geometryMember) or the array property (gml:geometryMembers). It is also valid to use both the "standard" and the array properties in the same collection.
/// Element MultiGeometry of type "http://www.opengis.net/gml/3.2":MultiGeometryType.
    gml__MultiGeometryType*              MultiGeometry                  1;	///< Required element.
/// @brief A gml:MultiPoint consists of one or more gml:Points. The members of the geometric aggregate may be specified either using the "standard" property (gml:pointMember) or the array property (gml:pointMembers). It is also valid to use both the "standard" and the array properties in the same collection.
/// Element MultiPoint of type "http://www.opengis.net/gml/3.2":MultiPointType.
    gml__MultiPointType*                 MultiPoint                     1;	///< Required element.
/// @brief A gml:MultiCurve is defined by one or more gml:AbstractCurves. The members of the geometric aggregate may be specified either using the "standard" property (gml:curveMember) or the array property (gml:curveMembers). It is also valid to use both the "standard" and the array properties in the same collection.
/// Element MultiCurve of type "http://www.opengis.net/gml/3.2":MultiCurveType.
    gml__MultiCurveType*                 MultiCurve                     1;	///< Required element.
/// @brief A gml:MultiSurface is defined by one or more gml:AbstractSurfaces. The members of the geometric aggregate may be specified either using the "standard" property (gml:surfaceMember) or the array property (gml:surfaceMembers). It is also valid to use both the "standard" and the array properties in the same collection.
/// Element MultiSurface of type "http://www.opengis.net/gml/3.2":MultiSurfaceType.
    gml__MultiSurfaceType*               MultiSurface                   1;	///< Required element.
/// @brief A gml:MultiSolid is defined by one or more gml:AbstractSolids. The members of the geometric aggregate may be specified either using the "standard" property (gml:solidMember) or the array property (gml:solidMembers). It is also valid to use both the "standard" and the array properties in the same collection.
/// Element MultiSolid of type "http://www.opengis.net/gml/3.2":MultiSolidType.
    gml__MultiSolidType*                 MultiSolid                     1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
/// @brief The AbstractGeometricPrimitive element is the abstract head of the substitution group for all (pre- and user-defined) geometric primitives.
/// Abstract element AbstractGeometricPrimitive of type "http://www.opengis.net/gml/3.2":AbstractGeometricPrimitiveType.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractGeometricPrimitive"> with elements <AbstractSolid> <AbstractSurface> <Point> <AbstractCurve>
/// @brief The AbstractSolid element is the abstract head of the substituition group for all (continuous) solid elements.
/// Abstract element AbstractSolid of type "http://www.opengis.net/gml/3.2":AbstractSolidType.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractSolid"> with elements <CompositeSolid> <Solid>
/// @brief gml:CompositeSolid implements ISO 19107 GM_CompositeSolid (see ISO 19107:2003, 6.6.7) as specified in D.2.3.6. A gml:CompositeSolid is represented by a set of orientable surfaces. It is a geometry type with all the geometric properties of a (primitive) solid. Essentially, a composite solid is a collection of solids that join in pairs on common boundary surfaces and which, when considered as a whole, form a single solid. solidMember references or contains one solid in the composite solid. The solids are contiguous.
/// Element CompositeSolid of type "http://www.opengis.net/gml/3.2":CompositeSolidType.
    gml__CompositeSolidType*             CompositeSolid                 1;	///< Required element.
/// @brief A solid is the basis for 3-dimensional geometry. The extent of a solid is defined by the boundary surfaces as specified in ISO 19107:2003, 6.3.18. exterior specifies the outer boundary, interior the inner boundary of the solid.
/// Element Solid of type "http://www.opengis.net/gml/3.2":SolidType.
    gml__SolidType*                      Solid                          1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
/// @brief The AbstractSurface element is the abstract head of the substitution group for all (continuous) surface elements.
/// Abstract element AbstractSurface of type "http://www.opengis.net/gml/3.2":AbstractSurfaceType.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractSurface"> with elements <CompositeSurface> <Surface> <OrientableSurface> <Polygon>
/// @brief A gml:CompositeSurface is represented by a set of orientable surfaces. It is geometry type with all the geometric properties of a (primitive) surface. Essentially, a composite surface is a collection of surfaces that join in pairs on common boundary curves and which, when considered as a whole, form a single surface. surfaceMember references or contains inline one surface in the composite surface. The surfaces are contiguous.
/// Element CompositeSurface of type "http://www.opengis.net/gml/3.2":CompositeSurfaceType.
    gml__CompositeSurfaceType*           CompositeSurface               1;	///< Required element.
/// @brief A Surface is a 2-dimensional primitive and is composed of one or more surface patches as specified in ISO 19107:2003, 6.3.17.1. The surface patches are connected to one another. patches encapsulates the patches of the surface.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="Surface"> with elements <PolyhedralSurface> <TriangulatedSurface>
/// @brief A Surface is a 2-dimensional primitive and is composed of one or more surface patches as specified in ISO 19107:2003, 6.3.17.1. The surface patches are connected to one another. patches encapsulates the patches of the surface.
/// Element Surface of type "http://www.opengis.net/gml/3.2":SurfaceType.
    gml__SurfaceType*                    Surface                        1;	///< Required element.
/// @brief A polyhedral surface is a surface composed of polygon patches connected along their common boundary curves. This differs from the surface type only in the restriction on the types of surface patches acceptable. polygonPatches encapsulates the polygon patches of the polyhedral surface.
/// Element PolyhedralSurface of type "http://www.opengis.net/gml/3.2":SurfaceType.
    gml__SurfaceType*                    PolyhedralSurface              1;	///< Required element.
/// @brief A triangulated surface is a polyhedral surface that is composed only of triangles. There is no restriction on how the triangulation is derived. trianglePatches encapsulates the triangles of the triangulated surface.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="TriangulatedSurface"> with elements <Tin>
/// @brief A triangulated surface is a polyhedral surface that is composed only of triangles. There is no restriction on how the triangulation is derived. trianglePatches encapsulates the triangles of the triangulated surface.
/// Element TriangulatedSurface of type "http://www.opengis.net/gml/3.2":SurfaceType.
    gml__SurfaceType*                    TriangulatedSurface            1;	///< Required element.
/// @brief A tin is a triangulated surface that uses the Delauny algorithm or a similar algorithm complemented with consideration of stoplines (stopLines), breaklines (breakLines), and maximum length of triangle sides (maxLength). controlPoint shall contain a set of the positions (three or more) used as posts for this TIN (corners of the triangles in the TIN). See ISO 19107:2003, 6.4.39 for details.
/// Element Tin of type "http://www.opengis.net/gml/3.2":TinType.
    gml__TinType*                        Tin                            1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
//  END OF CHOICE OF SUBSTITUTIONS
/// @brief OrientableSurface consists of a surface and an orientation. If the orientation is "+", then the OrientableSurface is identical to the baseSurface. If the orientation is "-", then the OrientableSurface is a reference to a gml:AbstractSurface with an up-normal that reverses the direction for this OrientableSurface, the sense of "the top of the surface".
/// Element OrientableSurface of type "http://www.opengis.net/gml/3.2":OrientableSurfaceType.
    gml__OrientableSurfaceType*          OrientableSurface              1;	///< Required element.
/// @brief A Polygon is a special surface that is defined by a single surface patch (see D.3.6). The boundary of this patch is coplanar and the polygon uses planar interpolation in its interior. The elements exterior and interior describe the surface boundary of the polygon.
/// Element Polygon of type "http://www.opengis.net/gml/3.2":PolygonType.
    gml__PolygonType*                    Polygon                        1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
/// @brief A Point is defined by a single coordinate tuple. The direct position of a point is specified by the pos element which is of type DirectPositionType.
/// Element Point of type "http://www.opengis.net/gml/3.2":PointType.
    gml__PointType*                      Point                          1;	///< Required element.
/// @brief The AbstractCurve element is the abstract head of the substitution group for all (continuous) curve elements.
/// Abstract element AbstractCurve of type "http://www.opengis.net/gml/3.2":AbstractCurveType.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractCurve"> with elements <CompositeCurve> <Curve> <OrientableCurve> <LineString>
/// @brief A gml:CompositeCurve is represented by a sequence of (orientable) curves such that each curve in the sequence terminates at the start point of the subsequent curve in the list. curveMember references or contains inline one curve in the composite curve. The curves are contiguous, the collection of curves is ordered. Therefore, if provided, the aggregationType attribute shall have the value "sequence".
/// Element CompositeCurve of type "http://www.opengis.net/gml/3.2":CompositeCurveType.
    gml__CompositeCurveType*             CompositeCurve                 1;	///< Required element.
/// @brief A curve is a 1-dimensional primitive. Curves are continuous, connected, and have a measurable length in terms of the coordinate system. A curve is composed of one or more curve segments. Each curve segment within a curve may be defined using a different interpolation method. The curve segments are connected to one another, with the end point of each segment except the last being the start point of the next segment in the segment list. The orientation of the curve is positive. The element segments encapsulates the segments of the curve.
/// Element Curve of type "http://www.opengis.net/gml/3.2":CurveType.
    gml__CurveType*                      Curve                          1;	///< Required element.
/// @brief OrientableCurve consists of a curve and an orientation. If the orientation is "+", then the OrientableCurve is identical to the baseCurve. If the orientation is "-", then the OrientableCurve is related to another AbstractCurve with a parameterization that reverses the sense of the curve traversal.
/// Element OrientableCurve of type "http://www.opengis.net/gml/3.2":OrientableCurveType.
    gml__OrientableCurveType*            OrientableCurve                1;	///< Required element.
/// @brief A LineString is a special curve that consists of a single segment with linear interpolation. It is defined by two or more coordinate tuples, with linear interpolation between them. The number of direct positions in the list shall be at least two.
/// Element LineString of type "http://www.opengis.net/gml/3.2":LineStringType.
    gml__LineStringType*                 LineString                     1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
//  END OF CHOICE OF SUBSTITUTIONS
/// Abstract element AbstractImplicitGeometry of type "http://www.opengis.net/gml/3.2":AbstractGeometryType.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractImplicitGeometry"> with elements <Grid>
/// @brief The gml:Grid implicitly defines an unrectified grid, which is a network composed of two or more sets of curves in which the members of each set intersect the members of the other sets in an algorithmic way. The region of interest within the grid is given in terms of its gml:limits, being the grid coordinates of diagonally opposed corners of a rectangular region. gml:axisLabels is provided with a list of labels of the axes of the grid (gml:axisName has been deprecated). gml:dimension specifies the dimension of the grid. The gml:limits element contains a single gml:GridEnvelope. The gml:low and gml:high property elements of the envelope are each integerLists, which are coordinate tuples, the coordinates being measured as offsets from the origin of the grid along each axis, of the diagonally opposing corners of a "rectangular" region of interest.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="Grid"> with elements <RectifiedGrid>
/// @brief The gml:Grid implicitly defines an unrectified grid, which is a network composed of two or more sets of curves in which the members of each set intersect the members of the other sets in an algorithmic way. The region of interest within the grid is given in terms of its gml:limits, being the grid coordinates of diagonally opposed corners of a rectangular region. gml:axisLabels is provided with a list of labels of the axes of the grid (gml:axisName has been deprecated). gml:dimension specifies the dimension of the grid. The gml:limits element contains a single gml:GridEnvelope. The gml:low and gml:high property elements of the envelope are each integerLists, which are coordinate tuples, the coordinates being measured as offsets from the origin of the grid along each axis, of the diagonally opposing corners of a "rectangular" region of interest.
/// Element Grid of type "http://www.opengis.net/gml/3.2":GridType.
    gml__GridType*                       Grid                           1;	///< Required element.
/// @brief A rectified grid is a grid for which there is an affine transformation between the grid coordinates and the coordinates of an external coordinate reference system. It is defined by specifying the position (in some geometric space) of the grid "origin" and of the vectors that specify the post locations. Note that the grid limits (post indexes) and axis name properties are inherited from gml:GridType and that gml:RectifiedGrid adds a gml:origin property (contains or references a gml:Point) and a set of gml:offsetVector properties.
/// Element RectifiedGrid of type "http://www.opengis.net/gml/3.2":RectifiedGridType.
    gml__RectifiedGridType*              RectifiedGrid                  1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
//  END OF CHOICE OF SUBSTITUTIONS
    }                                    __union_GeometryArrayPropertyType;
//  END OF CHOICE OF SUBSTITUTIONS
    }>                                   __GeometryArrayPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute owns of type xs:boolean.
   @bool                                 owns                           0 = false;	///< Default value="false".
};

/// "http://www.opengis.net/gml/3.2":EnvelopeType is a complexType.
/// class gml__EnvelopeType operations:
/// - soap_new_gml__EnvelopeType(soap*) allocate
/// - soap_new_gml__EnvelopeType(soap*, int num) allocate array
/// - soap_new_req_gml__EnvelopeType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__EnvelopeType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__EnvelopeType(soap*, gml__EnvelopeType*) deserialize from a stream
/// - int soap_write_gml__EnvelopeType(soap, gml__EnvelopeType*) serialize to a stream
class gml__EnvelopeType : public xsd__anyType
{ public:
/// CHOICE <xs:choice>
/// Note: <xs:choice> with embedded <xs:sequence> or <xs:group> prevents the use of a union
/// SEQUENCE <xs:sequence>
/// Element lowerCorner of type "http://www.opengis.net/gml/3.2":DirectPositionType.
    gml__DirectPositionType*             lowerCorner                   ;
/// Element upperCorner of type "http://www.opengis.net/gml/3.2":DirectPositionType.
    gml__DirectPositionType*             upperCorner                   ;
//  END OF SEQUENCE
/// Vector of gml__DirectPositionType* element refs with length 2..2
    std::vector<gml__DirectPositionType*> pos                           :2;
/// Element reference "http://www.opengis.net/gml/3.2":coordinates.
    gml__CoordinatesType*                coordinates                   ;
;
//  END OF CHOICE
/// Attribute srsName of type xs:anyURI.
   @xsd__anyURI*                         srsName                        0;	///< Optional attribute.
/// Attribute srsDimension of type xs:positiveInteger.
   @xsd__positiveInteger*                srsDimension                   0;	///< Optional attribute.
/// Attribute axisLabels of type "http://www.opengis.net/gml/3.2":NCNameList.
   @gml__NCNameList*                     axisLabels                     0;	///< Optional attribute.
/// Attribute uomLabels of type "http://www.opengis.net/gml/3.2":NCNameList.
   @gml__NCNameList*                     uomLabels                      0;	///< Optional attribute.
};

/// "http://www.opengis.net/gml/3.2":GeometricPrimitivePropertyType is a complexType.
/// @brief A property that has a geometric primitive as its value domain may either be an appropriate geometry element encapsulated in an element of this type or an XLink reference to a remote geometry element (where remote includes geometry elements located elsewhere in the same document). Either the reference or the contained element shall be given, but neither both nor none.
/// class gml__GeometricPrimitivePropertyType operations:
/// - soap_new_gml__GeometricPrimitivePropertyType(soap*) allocate
/// - soap_new_gml__GeometricPrimitivePropertyType(soap*, int num) allocate array
/// - soap_new_req_gml__GeometricPrimitivePropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__GeometricPrimitivePropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__GeometricPrimitivePropertyType(soap*, gml__GeometricPrimitivePropertyType*) deserialize from a stream
/// - int soap_write_gml__GeometricPrimitivePropertyType(soap, gml__GeometricPrimitivePropertyType*) serialize to a stream
class gml__GeometricPrimitivePropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gml__GeometricPrimitivePropertyType_sequence
    {
/// @brief The AbstractGeometricPrimitive element is the abstract head of the substitution group for all (pre- and user-defined) geometric primitives.
/// Reference "http://www.opengis.net/gml/3.2":AbstractGeometricPrimitive to abstract element.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractGeometricPrimitive"> with elements <AbstractSolid> <AbstractSurface> <Point> <AbstractCurve>
   $int                                  __unionAbstractGeometricPrimitive 0;	///< Union _gml__union_GeometricPrimitivePropertyType selector: set to SOAP_UNION__gml__union_GeometricPrimitivePropertyType_<fieldname>
/// Union for substitutionGroup="AbstractGeometricPrimitive"
    union _gml__union_GeometricPrimitivePropertyType
    {
/// @brief The AbstractSolid element is the abstract head of the substituition group for all (continuous) solid elements.
/// Abstract element AbstractSolid of type "http://www.opengis.net/gml/3.2":AbstractSolidType.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractSolid"> with elements <CompositeSolid> <Solid>
/// @brief gml:CompositeSolid implements ISO 19107 GM_CompositeSolid (see ISO 19107:2003, 6.6.7) as specified in D.2.3.6. A gml:CompositeSolid is represented by a set of orientable surfaces. It is a geometry type with all the geometric properties of a (primitive) solid. Essentially, a composite solid is a collection of solids that join in pairs on common boundary surfaces and which, when considered as a whole, form a single solid. solidMember references or contains one solid in the composite solid. The solids are contiguous.
/// Element CompositeSolid of type "http://www.opengis.net/gml/3.2":CompositeSolidType.
    gml__CompositeSolidType*             CompositeSolid                 1;	///< Required element.
/// @brief A solid is the basis for 3-dimensional geometry. The extent of a solid is defined by the boundary surfaces as specified in ISO 19107:2003, 6.3.18. exterior specifies the outer boundary, interior the inner boundary of the solid.
/// Element Solid of type "http://www.opengis.net/gml/3.2":SolidType.
    gml__SolidType*                      Solid                          1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
/// @brief The AbstractSurface element is the abstract head of the substitution group for all (continuous) surface elements.
/// Abstract element AbstractSurface of type "http://www.opengis.net/gml/3.2":AbstractSurfaceType.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractSurface"> with elements <CompositeSurface> <Surface> <OrientableSurface> <Polygon>
/// @brief A gml:CompositeSurface is represented by a set of orientable surfaces. It is geometry type with all the geometric properties of a (primitive) surface. Essentially, a composite surface is a collection of surfaces that join in pairs on common boundary curves and which, when considered as a whole, form a single surface. surfaceMember references or contains inline one surface in the composite surface. The surfaces are contiguous.
/// Element CompositeSurface of type "http://www.opengis.net/gml/3.2":CompositeSurfaceType.
    gml__CompositeSurfaceType*           CompositeSurface               1;	///< Required element.
/// @brief A Surface is a 2-dimensional primitive and is composed of one or more surface patches as specified in ISO 19107:2003, 6.3.17.1. The surface patches are connected to one another. patches encapsulates the patches of the surface.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="Surface"> with elements <PolyhedralSurface> <TriangulatedSurface>
/// @brief A Surface is a 2-dimensional primitive and is composed of one or more surface patches as specified in ISO 19107:2003, 6.3.17.1. The surface patches are connected to one another. patches encapsulates the patches of the surface.
/// Element Surface of type "http://www.opengis.net/gml/3.2":SurfaceType.
    gml__SurfaceType*                    Surface                        1;	///< Required element.
/// @brief A polyhedral surface is a surface composed of polygon patches connected along their common boundary curves. This differs from the surface type only in the restriction on the types of surface patches acceptable. polygonPatches encapsulates the polygon patches of the polyhedral surface.
/// Element PolyhedralSurface of type "http://www.opengis.net/gml/3.2":SurfaceType.
    gml__SurfaceType*                    PolyhedralSurface              1;	///< Required element.
/// @brief A triangulated surface is a polyhedral surface that is composed only of triangles. There is no restriction on how the triangulation is derived. trianglePatches encapsulates the triangles of the triangulated surface.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="TriangulatedSurface"> with elements <Tin>
/// @brief A triangulated surface is a polyhedral surface that is composed only of triangles. There is no restriction on how the triangulation is derived. trianglePatches encapsulates the triangles of the triangulated surface.
/// Element TriangulatedSurface of type "http://www.opengis.net/gml/3.2":SurfaceType.
    gml__SurfaceType*                    TriangulatedSurface            1;	///< Required element.
/// @brief A tin is a triangulated surface that uses the Delauny algorithm or a similar algorithm complemented with consideration of stoplines (stopLines), breaklines (breakLines), and maximum length of triangle sides (maxLength). controlPoint shall contain a set of the positions (three or more) used as posts for this TIN (corners of the triangles in the TIN). See ISO 19107:2003, 6.4.39 for details.
/// Element Tin of type "http://www.opengis.net/gml/3.2":TinType.
    gml__TinType*                        Tin                            1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
//  END OF CHOICE OF SUBSTITUTIONS
/// @brief OrientableSurface consists of a surface and an orientation. If the orientation is "+", then the OrientableSurface is identical to the baseSurface. If the orientation is "-", then the OrientableSurface is a reference to a gml:AbstractSurface with an up-normal that reverses the direction for this OrientableSurface, the sense of "the top of the surface".
/// Element OrientableSurface of type "http://www.opengis.net/gml/3.2":OrientableSurfaceType.
    gml__OrientableSurfaceType*          OrientableSurface              1;	///< Required element.
/// @brief A Polygon is a special surface that is defined by a single surface patch (see D.3.6). The boundary of this patch is coplanar and the polygon uses planar interpolation in its interior. The elements exterior and interior describe the surface boundary of the polygon.
/// Element Polygon of type "http://www.opengis.net/gml/3.2":PolygonType.
    gml__PolygonType*                    Polygon                        1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
/// @brief A Point is defined by a single coordinate tuple. The direct position of a point is specified by the pos element which is of type DirectPositionType.
/// Element Point of type "http://www.opengis.net/gml/3.2":PointType.
    gml__PointType*                      Point                          1;	///< Required element.
/// @brief The AbstractCurve element is the abstract head of the substitution group for all (continuous) curve elements.
/// Abstract element AbstractCurve of type "http://www.opengis.net/gml/3.2":AbstractCurveType.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractCurve"> with elements <CompositeCurve> <Curve> <OrientableCurve> <LineString>
/// @brief A gml:CompositeCurve is represented by a sequence of (orientable) curves such that each curve in the sequence terminates at the start point of the subsequent curve in the list. curveMember references or contains inline one curve in the composite curve. The curves are contiguous, the collection of curves is ordered. Therefore, if provided, the aggregationType attribute shall have the value "sequence".
/// Element CompositeCurve of type "http://www.opengis.net/gml/3.2":CompositeCurveType.
    gml__CompositeCurveType*             CompositeCurve                 1;	///< Required element.
/// @brief A curve is a 1-dimensional primitive. Curves are continuous, connected, and have a measurable length in terms of the coordinate system. A curve is composed of one or more curve segments. Each curve segment within a curve may be defined using a different interpolation method. The curve segments are connected to one another, with the end point of each segment except the last being the start point of the next segment in the segment list. The orientation of the curve is positive. The element segments encapsulates the segments of the curve.
/// Element Curve of type "http://www.opengis.net/gml/3.2":CurveType.
    gml__CurveType*                      Curve                          1;	///< Required element.
/// @brief OrientableCurve consists of a curve and an orientation. If the orientation is "+", then the OrientableCurve is identical to the baseCurve. If the orientation is "-", then the OrientableCurve is related to another AbstractCurve with a parameterization that reverses the sense of the curve traversal.
/// Element OrientableCurve of type "http://www.opengis.net/gml/3.2":OrientableCurveType.
    gml__OrientableCurveType*            OrientableCurve                1;	///< Required element.
/// @brief A LineString is a special curve that consists of a single segment with linear interpolation. It is defined by two or more coordinate tuples, with linear interpolation between them. The number of direct positions in the list shall be at least two.
/// Element LineString of type "http://www.opengis.net/gml/3.2":LineStringType.
    gml__LineStringType*                 LineString                     1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
    }                                    __union_GeometricPrimitivePropertyType;
//  END OF CHOICE OF SUBSTITUTIONS
    }>                                   __GeometricPrimitivePropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute owns of type xs:boolean.
   @bool                                 owns                           0 = false;	///< Default value="false".
/// Attribute nilReason of type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         remoteSchema                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.opengis.net/gml/3.2":PointPropertyType is a complexType.
/// @brief A property that has a point as its value domain may either be an appropriate geometry element encapsulated in an element of this type or an XLink reference to a remote geometry element (where remote includes geometry elements located elsewhere in the same document). Either the reference or the contained element shall be given, but neither both nor none.
/// class gml__PointPropertyType operations:
/// - soap_new_gml__PointPropertyType(soap*) allocate
/// - soap_new_gml__PointPropertyType(soap*, int num) allocate array
/// - soap_new_req_gml__PointPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__PointPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__PointPropertyType(soap*, gml__PointPropertyType*) deserialize from a stream
/// - int soap_write_gml__PointPropertyType(soap, gml__PointPropertyType*) serialize to a stream
class gml__PointPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gml__PointPropertyType_sequence
    {
/// @brief A Point is defined by a single coordinate tuple. The direct position of a point is specified by the pos element which is of type DirectPositionType.
/// Element reference "http://www.opengis.net/gml/3.2":Point.
    gml__PointType*                      Point                          1;	///< Required element.
    }>                                   __PointPropertyType_sequence   0;
//  END OF SEQUENCE
/// Attribute nilReason of type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         remoteSchema                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
/// Attribute owns of type xs:boolean.
   @bool                                 owns                           0 = false;	///< Default value="false".
};

/// "http://www.opengis.net/gml/3.2":PointArrayPropertyType is a complexType.
/// @brief gml:PointArrayPropertyType is a container for an array of points. The elements are always contained inline in the array property, referencing geometry elements or arrays of geometry elements via XLinks is not supported.
/// class gml__PointArrayPropertyType operations:
/// - soap_new_gml__PointArrayPropertyType(soap*) allocate
/// - soap_new_gml__PointArrayPropertyType(soap*, int num) allocate array
/// - soap_new_req_gml__PointArrayPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__PointArrayPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__PointArrayPropertyType(soap*, gml__PointArrayPropertyType*) deserialize from a stream
/// - int soap_write_gml__PointArrayPropertyType(soap, gml__PointArrayPropertyType*) serialize to a stream
class gml__PointArrayPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0" maxOccurs="unbounded">
    std::vector<                                                       
    class __gml__PointArrayPropertyType_sequence
    {
/// @brief A Point is defined by a single coordinate tuple. The direct position of a point is specified by the pos element which is of type DirectPositionType.
/// Element reference "http://www.opengis.net/gml/3.2":Point.
    gml__PointType*                      Point                          1;	///< Required element.
    }>                                   __PointArrayPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute owns of type xs:boolean.
   @bool                                 owns                           0 = false;	///< Default value="false".
};

/// "http://www.opengis.net/gml/3.2":CurvePropertyType is a complexType.
/// @brief A property that has a curve as its value domain may either be an appropriate geometry element encapsulated in an element of this type or an XLink reference to a remote geometry element (where remote includes geometry elements located elsewhere in the same document). Either the reference or the contained element shall be given, but neither both nor none.
/// class gml__CurvePropertyType operations:
/// - soap_new_gml__CurvePropertyType(soap*) allocate
/// - soap_new_gml__CurvePropertyType(soap*, int num) allocate array
/// - soap_new_req_gml__CurvePropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__CurvePropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__CurvePropertyType(soap*, gml__CurvePropertyType*) deserialize from a stream
/// - int soap_write_gml__CurvePropertyType(soap, gml__CurvePropertyType*) serialize to a stream
class gml__CurvePropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gml__CurvePropertyType_sequence
    {
/// @brief The AbstractCurve element is the abstract head of the substitution group for all (continuous) curve elements.
/// Reference "http://www.opengis.net/gml/3.2":AbstractCurve to abstract element.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractCurve"> with elements <CompositeCurve> <Curve> <OrientableCurve> <LineString>
   $int                                  __unionAbstractCurve           0;	///< Union _gml__union_CurvePropertyType selector: set to SOAP_UNION__gml__union_CurvePropertyType_<fieldname>
/// Union for substitutionGroup="AbstractCurve"
    union _gml__union_CurvePropertyType
    {
/// @brief A gml:CompositeCurve is represented by a sequence of (orientable) curves such that each curve in the sequence terminates at the start point of the subsequent curve in the list. curveMember references or contains inline one curve in the composite curve. The curves are contiguous, the collection of curves is ordered. Therefore, if provided, the aggregationType attribute shall have the value "sequence".
/// Element CompositeCurve of type "http://www.opengis.net/gml/3.2":CompositeCurveType.
    gml__CompositeCurveType*             CompositeCurve                 1;	///< Required element.
/// @brief A curve is a 1-dimensional primitive. Curves are continuous, connected, and have a measurable length in terms of the coordinate system. A curve is composed of one or more curve segments. Each curve segment within a curve may be defined using a different interpolation method. The curve segments are connected to one another, with the end point of each segment except the last being the start point of the next segment in the segment list. The orientation of the curve is positive. The element segments encapsulates the segments of the curve.
/// Element Curve of type "http://www.opengis.net/gml/3.2":CurveType.
    gml__CurveType*                      Curve                          1;	///< Required element.
/// @brief OrientableCurve consists of a curve and an orientation. If the orientation is "+", then the OrientableCurve is identical to the baseCurve. If the orientation is "-", then the OrientableCurve is related to another AbstractCurve with a parameterization that reverses the sense of the curve traversal.
/// Element OrientableCurve of type "http://www.opengis.net/gml/3.2":OrientableCurveType.
    gml__OrientableCurveType*            OrientableCurve                1;	///< Required element.
/// @brief A LineString is a special curve that consists of a single segment with linear interpolation. It is defined by two or more coordinate tuples, with linear interpolation between them. The number of direct positions in the list shall be at least two.
/// Element LineString of type "http://www.opengis.net/gml/3.2":LineStringType.
    gml__LineStringType*                 LineString                     1;	///< Required element.
    }                                    __union_CurvePropertyType     ;
//  END OF CHOICE OF SUBSTITUTIONS
    }>                                   __CurvePropertyType_sequence   0;
//  END OF SEQUENCE
/// Attribute nilReason of type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         remoteSchema                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
/// Attribute owns of type xs:boolean.
   @bool                                 owns                           0 = false;	///< Default value="false".
};

/// "http://www.opengis.net/gml/3.2":CurveArrayPropertyType is a complexType.
/// @brief A container for an array of curves. The elements are always contained in the array property, referencing geometry elements or arrays of geometry elements via XLinks is not supported.
/// class gml__CurveArrayPropertyType operations:
/// - soap_new_gml__CurveArrayPropertyType(soap*) allocate
/// - soap_new_gml__CurveArrayPropertyType(soap*, int num) allocate array
/// - soap_new_req_gml__CurveArrayPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__CurveArrayPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__CurveArrayPropertyType(soap*, gml__CurveArrayPropertyType*) deserialize from a stream
/// - int soap_write_gml__CurveArrayPropertyType(soap, gml__CurveArrayPropertyType*) serialize to a stream
class gml__CurveArrayPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0" maxOccurs="unbounded">
    std::vector<                                                       
    class __gml__CurveArrayPropertyType_sequence
    {
/// @brief The AbstractCurve element is the abstract head of the substitution group for all (continuous) curve elements.
/// Reference "http://www.opengis.net/gml/3.2":AbstractCurve to abstract element.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractCurve"> with elements <CompositeCurve> <Curve> <OrientableCurve> <LineString>
   $int                                  __unionAbstractCurve           0;	///< Union _gml__union_CurveArrayPropertyType selector: set to SOAP_UNION__gml__union_CurveArrayPropertyType_<fieldname>
/// Union for substitutionGroup="AbstractCurve"
    union _gml__union_CurveArrayPropertyType
    {
/// @brief A gml:CompositeCurve is represented by a sequence of (orientable) curves such that each curve in the sequence terminates at the start point of the subsequent curve in the list. curveMember references or contains inline one curve in the composite curve. The curves are contiguous, the collection of curves is ordered. Therefore, if provided, the aggregationType attribute shall have the value "sequence".
/// Element CompositeCurve of type "http://www.opengis.net/gml/3.2":CompositeCurveType.
    gml__CompositeCurveType*             CompositeCurve                 1;	///< Required element.
/// @brief A curve is a 1-dimensional primitive. Curves are continuous, connected, and have a measurable length in terms of the coordinate system. A curve is composed of one or more curve segments. Each curve segment within a curve may be defined using a different interpolation method. The curve segments are connected to one another, with the end point of each segment except the last being the start point of the next segment in the segment list. The orientation of the curve is positive. The element segments encapsulates the segments of the curve.
/// Element Curve of type "http://www.opengis.net/gml/3.2":CurveType.
    gml__CurveType*                      Curve                          1;	///< Required element.
/// @brief OrientableCurve consists of a curve and an orientation. If the orientation is "+", then the OrientableCurve is identical to the baseCurve. If the orientation is "-", then the OrientableCurve is related to another AbstractCurve with a parameterization that reverses the sense of the curve traversal.
/// Element OrientableCurve of type "http://www.opengis.net/gml/3.2":OrientableCurveType.
    gml__OrientableCurveType*            OrientableCurve                1;	///< Required element.
/// @brief A LineString is a special curve that consists of a single segment with linear interpolation. It is defined by two or more coordinate tuples, with linear interpolation between them. The number of direct positions in the list shall be at least two.
/// Element LineString of type "http://www.opengis.net/gml/3.2":LineStringType.
    gml__LineStringType*                 LineString                     1;	///< Required element.
    }                                    __union_CurveArrayPropertyType;
//  END OF CHOICE OF SUBSTITUTIONS
    }>                                   __CurveArrayPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute owns of type xs:boolean.
   @bool                                 owns                           0 = false;	///< Default value="false".
};

/// "http://www.opengis.net/gml/3.2":UnitOfMeasureType is a complexType.
/// class gml__UnitOfMeasureType operations:
/// - soap_new_gml__UnitOfMeasureType(soap*) allocate
/// - soap_new_gml__UnitOfMeasureType(soap*, int num) allocate array
/// - soap_new_req_gml__UnitOfMeasureType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__UnitOfMeasureType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__UnitOfMeasureType(soap*, gml__UnitOfMeasureType*) deserialize from a stream
/// - int soap_write_gml__UnitOfMeasureType(soap, gml__UnitOfMeasureType*) serialize to a stream
class gml__UnitOfMeasureType : public xsd__anyType
{ public:
/// Attribute uom of type "http://www.opengis.net/gml/3.2":UomIdentifier.
   @gml__UomIdentifier                   uom                            1;	///< Required attribute.
};

/// "http://www.opengis.net/gml/3.2":FormulaType is a complexType.
/// class gml__FormulaType operations:
/// - soap_new_gml__FormulaType(soap*) allocate
/// - soap_new_gml__FormulaType(soap*, int num) allocate array
/// - soap_new_req_gml__FormulaType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__FormulaType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__FormulaType(soap*, gml__FormulaType*) deserialize from a stream
/// - int soap_write_gml__FormulaType(soap, gml__FormulaType*) serialize to a stream
class gml__FormulaType : public xsd__anyType
{ public:
/// Element a of type xs:double.
    double*                              a                              0;	///< Optional element.
/// Element b of type xs:double.
    double                               b                              1;	///< Required element.
/// Element c of type xs:double.
    double                               c                              1;	///< Required element.
/// Element d of type xs:double.
    double*                              d                              0;	///< Optional element.
};

/// "http://www.opengis.net/gml/3.2":AbstractGMLType is an abstract complexType.
/// class gml__AbstractGMLType operations:
/// - soap_new_gml__AbstractGMLType(soap*) allocate
/// - soap_new_gml__AbstractGMLType(soap*, int num) allocate array
/// - soap_new_req_gml__AbstractGMLType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__AbstractGMLType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__AbstractGMLType(soap*, gml__AbstractGMLType*) deserialize from a stream
/// - int soap_write_gml__AbstractGMLType(soap, gml__AbstractGMLType*) serialize to a stream
class gml__AbstractGMLType : public xsd__anyType
{ public:
/// GROUP <xs:group name="StandardObjectProperties">
/// Vector of gml__MetaDataPropertyType* element refs with length 0..unbounded
    std::vector<gml__MetaDataPropertyType*> metaDataProperty               0;
/// @brief The value of this property is a text description of the object. gml:description uses gml:StringOrRefType as its content model, so it may contain a simple text string content, or carry a reference to an external description. The use of gml:description to reference an external description has been deprecated and replaced by the gml:descriptionReference property.
/// Element reference "http://www.opengis.net/gml/3.2":description.
    gml__StringOrRefType*                description                    0;	///< Optional element.
/// @brief The value of this property is a remote text description of the object. The xlink:href attribute of the gml:descriptionReference property references the external description.
/// Element reference "http://www.opengis.net/gml/3.2":descriptionReference.
    gml__ReferenceType*                  descriptionReference           0;	///< Optional element.
/// @brief Often, a special identifier is assigned to an object by the maintaining authority with the intention that it is used in references to the object For such cases, the codeSpace shall be provided. That identifier is usually unique either globally or within an application domain. gml:identifier is a pre-defined property for such identifiers.
/// Element reference "http://www.opengis.net/gml/3.2":identifier.
    gml__CodeWithAuthorityType*          identifier                     0;	///< Optional element.
/// @brief The gml:name property provides a label or identifier for the object, commonly a descriptive name. An object may have several names, typically assigned by different authorities. gml:name uses the gml:CodeType content model. The authority for a name is indicated by the value of its (optional) codeSpace attribute. The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace. In common usage there will be one name per authority, so a processing application may select the name from its preferred codeSpace.
/// Vector of gml__CodeType* element refs with length 0..unbounded
    std::vector<gml__CodeType*         > name                           0;
//  END OF GROUP
/// Attribute reference "http://www.opengis.net/gml/3.2":id.
/// @brief The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.
   @xsd__ID                              id                             1;	///< Required attribute.
};

/// "http://www.opengis.net/gml/3.2":AssociationRoleType is a complexType.
/// class gml__AssociationRoleType operations:
/// - soap_new_gml__AssociationRoleType(soap*) allocate
/// - soap_new_gml__AssociationRoleType(soap*, int num) allocate array
/// - soap_new_req_gml__AssociationRoleType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__AssociationRoleType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__AssociationRoleType(soap*, gml__AssociationRoleType*) deserialize from a stream
/// - int soap_write_gml__AssociationRoleType(soap, gml__AssociationRoleType*) serialize to a stream
class gml__AssociationRoleType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gml__AssociationRoleType_sequence
    {
/// TODO: <any namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __any                         0;	///< Catch any element content in XML string.
    }>                                   __AssociationRoleType_sequence 0;
//  END OF SEQUENCE
/// Attribute owns of type xs:boolean.
   @bool                                 owns                           0 = false;	///< Default value="false".
/// Attribute nilReason of type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         remoteSchema                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.opengis.net/gml/3.2":ReferenceType is a complexType.
/// @brief gml:ReferenceType is intended to be used in application schemas directly, if a property element shall use a "by-reference only" encoding.
/// class gml__ReferenceType operations:
/// - soap_new_gml__ReferenceType(soap*) allocate
/// - soap_new_gml__ReferenceType(soap*, int num) allocate array
/// - soap_new_req_gml__ReferenceType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__ReferenceType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__ReferenceType(soap*, gml__ReferenceType*) deserialize from a stream
/// - int soap_write_gml__ReferenceType(soap, gml__ReferenceType*) serialize to a stream
class gml__ReferenceType : public xsd__anyType
{ public:
/// Attribute owns of type xs:boolean.
   @bool                                 owns                           0 = false;	///< Default value="false".
/// Attribute nilReason of type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         remoteSchema                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.opengis.net/gml/3.2":InlinePropertyType is a complexType.
/// class gml__InlinePropertyType operations:
/// - soap_new_gml__InlinePropertyType(soap*) allocate
/// - soap_new_gml__InlinePropertyType(soap*, int num) allocate array
/// - soap_new_req_gml__InlinePropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__InlinePropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__InlinePropertyType(soap*, gml__InlinePropertyType*) deserialize from a stream
/// - int soap_write_gml__InlinePropertyType(soap, gml__InlinePropertyType*) serialize to a stream
class gml__InlinePropertyType : public xsd__anyType
{ public:
/// TODO: <any namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// Attribute owns of type xs:boolean.
   @bool                                 owns                           0 = false;	///< Default value="false".
};

/// "http://www.opengis.net/gml/3.2":AbstractMemberType is an abstract complexType.
/// @brief To create a collection of GML Objects that are not all features, a property type shall be derived by extension from gml:AbstractMemberType. This abstract property type is intended to be used only in object types where software shall be able to identify that an instance of such an object type is to be interpreted as a collection of objects. By default, this abstract property type does not imply any ownership of the objects in the collection. The owns attribute of gml:OwnershipAttributeGroup may be used on a property element instance to assert ownership of an object in the collection. A collection shall not own an object already owned by another object.
/// class gml__AbstractMemberType operations:
/// - soap_new_gml__AbstractMemberType(soap*) allocate
/// - soap_new_gml__AbstractMemberType(soap*, int num) allocate array
/// - soap_new_req_gml__AbstractMemberType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__AbstractMemberType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__AbstractMemberType(soap*, gml__AbstractMemberType*) deserialize from a stream
/// - int soap_write_gml__AbstractMemberType(soap, gml__AbstractMemberType*) serialize to a stream
class gml__AbstractMemberType : public xsd__anyType
{ public:
/// Attribute owns of type xs:boolean.
   @bool                                 owns                           0 = false;	///< Default value="false".
};

/// "http://www.opengis.net/gml/3.2":AbstractMetadataPropertyType is an abstract complexType.
/// @brief To associate metadata described by any XML Schema with a GML object, a property element shall be defined whose content model is derived by extension from gml:AbstractMetadataPropertyType. The value of such a property shall be metadata. The content model of such a property type, i.e. the metadata application schema shall be specified by the GML Application Schema. By default, this abstract property type does not imply any ownership of the metadata. The owns attribute of gml:OwnershipAttributeGroup may be used on a metadata property element instance to assert ownership of the metadata. If metadata following the conceptual model of ISO 19115 is to be encoded in a GML document, the corresponding Implementation Specification specified in ISO/TS 19139 shall be used to encode the metadata information.
/// class gml__AbstractMetadataPropertyType operations:
/// - soap_new_gml__AbstractMetadataPropertyType(soap*) allocate
/// - soap_new_gml__AbstractMetadataPropertyType(soap*, int num) allocate array
/// - soap_new_req_gml__AbstractMetadataPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__AbstractMetadataPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__AbstractMetadataPropertyType(soap*, gml__AbstractMetadataPropertyType*) deserialize from a stream
/// - int soap_write_gml__AbstractMetadataPropertyType(soap, gml__AbstractMetadataPropertyType*) serialize to a stream
class gml__AbstractMetadataPropertyType : public xsd__anyType
{ public:
/// Attribute owns of type xs:boolean.
   @bool                                 owns                           0 = false;	///< Default value="false".
};

/// "http://www.opengis.net/gml/3.2":DomainSetType is a complexType.
/// class gml__DomainSetType operations:
/// - soap_new_gml__DomainSetType(soap*) allocate
/// - soap_new_gml__DomainSetType(soap*, int num) allocate array
/// - soap_new_req_gml__DomainSetType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__DomainSetType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__DomainSetType(soap*, gml__DomainSetType*) deserialize from a stream
/// - int soap_write_gml__DomainSetType(soap, gml__DomainSetType*) serialize to a stream
class gml__DomainSetType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gml__DomainSetType_sequence
    {
/// CHOICE <xs:choice>
   $int                                  __union_DomainSetType         ;	///< Union _gml__union_DomainSetType selector: set to SOAP_UNION__gml__union_DomainSetType_<fieldname>
    union _gml__union_DomainSetType
    {
/// @brief The AbstractGeometry element is the abstract head of the substitution group for all geometry elements of GML. This includes pre-defined and user-defined geometry elements. Any geometry element shall be a direct or indirect extension/restriction of AbstractGeometryType and shall be directly or indirectly in the substitution group of AbstractGeometry.
/// Reference "http://www.opengis.net/gml/3.2":AbstractGeometry to abstract element.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractGeometry"> with elements <GeometricComplex> <AbstractGeometricAggregate> <AbstractGeometricPrimitive> <AbstractImplicitGeometry>
/// Element GeometricComplex of type "http://www.opengis.net/gml/3.2":GeometricComplexType.
    gml__GeometricComplexType*           GeometricComplex               1;	///< Required element.
/// @brief gml:AbstractGeometricAggregate is the abstract head of the substitution group for all geometric aggregates.
/// Abstract element AbstractGeometricAggregate of type "http://www.opengis.net/gml/3.2":AbstractGeometricAggregateType.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractGeometricAggregate"> with elements <MultiGeometry> <MultiPoint> <MultiCurve> <MultiSurface> <MultiSolid>
/// @brief gml:MultiGeometry is a collection of one or more GML geometry objects of arbitrary type. The members of the geometric aggregate may be specified either using the "standard" property (gml:geometryMember) or the array property (gml:geometryMembers). It is also valid to use both the "standard" and the array properties in the same collection.
/// Element MultiGeometry of type "http://www.opengis.net/gml/3.2":MultiGeometryType.
    gml__MultiGeometryType*              MultiGeometry                  1;	///< Required element.
/// @brief A gml:MultiPoint consists of one or more gml:Points. The members of the geometric aggregate may be specified either using the "standard" property (gml:pointMember) or the array property (gml:pointMembers). It is also valid to use both the "standard" and the array properties in the same collection.
/// Element MultiPoint of type "http://www.opengis.net/gml/3.2":MultiPointType.
    gml__MultiPointType*                 MultiPoint                     1;	///< Required element.
/// @brief A gml:MultiCurve is defined by one or more gml:AbstractCurves. The members of the geometric aggregate may be specified either using the "standard" property (gml:curveMember) or the array property (gml:curveMembers). It is also valid to use both the "standard" and the array properties in the same collection.
/// Element MultiCurve of type "http://www.opengis.net/gml/3.2":MultiCurveType.
    gml__MultiCurveType*                 MultiCurve                     1;	///< Required element.
/// @brief A gml:MultiSurface is defined by one or more gml:AbstractSurfaces. The members of the geometric aggregate may be specified either using the "standard" property (gml:surfaceMember) or the array property (gml:surfaceMembers). It is also valid to use both the "standard" and the array properties in the same collection.
/// Element MultiSurface of type "http://www.opengis.net/gml/3.2":MultiSurfaceType.
    gml__MultiSurfaceType*               MultiSurface                   1;	///< Required element.
/// @brief A gml:MultiSolid is defined by one or more gml:AbstractSolids. The members of the geometric aggregate may be specified either using the "standard" property (gml:solidMember) or the array property (gml:solidMembers). It is also valid to use both the "standard" and the array properties in the same collection.
/// Element MultiSolid of type "http://www.opengis.net/gml/3.2":MultiSolidType.
    gml__MultiSolidType*                 MultiSolid                     1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
/// @brief The AbstractGeometricPrimitive element is the abstract head of the substitution group for all (pre- and user-defined) geometric primitives.
/// Abstract element AbstractGeometricPrimitive of type "http://www.opengis.net/gml/3.2":AbstractGeometricPrimitiveType.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractGeometricPrimitive"> with elements <AbstractSolid> <AbstractSurface> <Point> <AbstractCurve>
/// @brief The AbstractSolid element is the abstract head of the substituition group for all (continuous) solid elements.
/// Abstract element AbstractSolid of type "http://www.opengis.net/gml/3.2":AbstractSolidType.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractSolid"> with elements <CompositeSolid> <Solid>
/// @brief gml:CompositeSolid implements ISO 19107 GM_CompositeSolid (see ISO 19107:2003, 6.6.7) as specified in D.2.3.6. A gml:CompositeSolid is represented by a set of orientable surfaces. It is a geometry type with all the geometric properties of a (primitive) solid. Essentially, a composite solid is a collection of solids that join in pairs on common boundary surfaces and which, when considered as a whole, form a single solid. solidMember references or contains one solid in the composite solid. The solids are contiguous.
/// Element CompositeSolid of type "http://www.opengis.net/gml/3.2":CompositeSolidType.
    gml__CompositeSolidType*             CompositeSolid                 1;	///< Required element.
/// @brief A solid is the basis for 3-dimensional geometry. The extent of a solid is defined by the boundary surfaces as specified in ISO 19107:2003, 6.3.18. exterior specifies the outer boundary, interior the inner boundary of the solid.
/// Element Solid of type "http://www.opengis.net/gml/3.2":SolidType.
    gml__SolidType*                      Solid                          1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
/// @brief The AbstractSurface element is the abstract head of the substitution group for all (continuous) surface elements.
/// Abstract element AbstractSurface of type "http://www.opengis.net/gml/3.2":AbstractSurfaceType.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractSurface"> with elements <CompositeSurface> <Surface> <OrientableSurface> <Polygon>
/// @brief A gml:CompositeSurface is represented by a set of orientable surfaces. It is geometry type with all the geometric properties of a (primitive) surface. Essentially, a composite surface is a collection of surfaces that join in pairs on common boundary curves and which, when considered as a whole, form a single surface. surfaceMember references or contains inline one surface in the composite surface. The surfaces are contiguous.
/// Element CompositeSurface of type "http://www.opengis.net/gml/3.2":CompositeSurfaceType.
    gml__CompositeSurfaceType*           CompositeSurface               1;	///< Required element.
/// @brief A Surface is a 2-dimensional primitive and is composed of one or more surface patches as specified in ISO 19107:2003, 6.3.17.1. The surface patches are connected to one another. patches encapsulates the patches of the surface.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="Surface"> with elements <PolyhedralSurface> <TriangulatedSurface>
/// @brief A Surface is a 2-dimensional primitive and is composed of one or more surface patches as specified in ISO 19107:2003, 6.3.17.1. The surface patches are connected to one another. patches encapsulates the patches of the surface.
/// Element Surface of type "http://www.opengis.net/gml/3.2":SurfaceType.
    gml__SurfaceType*                    Surface                        1;	///< Required element.
/// @brief A polyhedral surface is a surface composed of polygon patches connected along their common boundary curves. This differs from the surface type only in the restriction on the types of surface patches acceptable. polygonPatches encapsulates the polygon patches of the polyhedral surface.
/// Element PolyhedralSurface of type "http://www.opengis.net/gml/3.2":SurfaceType.
    gml__SurfaceType*                    PolyhedralSurface              1;	///< Required element.
/// @brief A triangulated surface is a polyhedral surface that is composed only of triangles. There is no restriction on how the triangulation is derived. trianglePatches encapsulates the triangles of the triangulated surface.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="TriangulatedSurface"> with elements <Tin>
/// @brief A triangulated surface is a polyhedral surface that is composed only of triangles. There is no restriction on how the triangulation is derived. trianglePatches encapsulates the triangles of the triangulated surface.
/// Element TriangulatedSurface of type "http://www.opengis.net/gml/3.2":SurfaceType.
    gml__SurfaceType*                    TriangulatedSurface            1;	///< Required element.
/// @brief A tin is a triangulated surface that uses the Delauny algorithm or a similar algorithm complemented with consideration of stoplines (stopLines), breaklines (breakLines), and maximum length of triangle sides (maxLength). controlPoint shall contain a set of the positions (three or more) used as posts for this TIN (corners of the triangles in the TIN). See ISO 19107:2003, 6.4.39 for details.
/// Element Tin of type "http://www.opengis.net/gml/3.2":TinType.
    gml__TinType*                        Tin                            1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
//  END OF CHOICE OF SUBSTITUTIONS
/// @brief OrientableSurface consists of a surface and an orientation. If the orientation is "+", then the OrientableSurface is identical to the baseSurface. If the orientation is "-", then the OrientableSurface is a reference to a gml:AbstractSurface with an up-normal that reverses the direction for this OrientableSurface, the sense of "the top of the surface".
/// Element OrientableSurface of type "http://www.opengis.net/gml/3.2":OrientableSurfaceType.
    gml__OrientableSurfaceType*          OrientableSurface              1;	///< Required element.
/// @brief A Polygon is a special surface that is defined by a single surface patch (see D.3.6). The boundary of this patch is coplanar and the polygon uses planar interpolation in its interior. The elements exterior and interior describe the surface boundary of the polygon.
/// Element Polygon of type "http://www.opengis.net/gml/3.2":PolygonType.
    gml__PolygonType*                    Polygon                        1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
/// @brief A Point is defined by a single coordinate tuple. The direct position of a point is specified by the pos element which is of type DirectPositionType.
/// Element Point of type "http://www.opengis.net/gml/3.2":PointType.
    gml__PointType*                      Point                          1;	///< Required element.
/// @brief The AbstractCurve element is the abstract head of the substitution group for all (continuous) curve elements.
/// Abstract element AbstractCurve of type "http://www.opengis.net/gml/3.2":AbstractCurveType.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractCurve"> with elements <CompositeCurve> <Curve> <OrientableCurve> <LineString>
/// @brief A gml:CompositeCurve is represented by a sequence of (orientable) curves such that each curve in the sequence terminates at the start point of the subsequent curve in the list. curveMember references or contains inline one curve in the composite curve. The curves are contiguous, the collection of curves is ordered. Therefore, if provided, the aggregationType attribute shall have the value "sequence".
/// Element CompositeCurve of type "http://www.opengis.net/gml/3.2":CompositeCurveType.
    gml__CompositeCurveType*             CompositeCurve                 1;	///< Required element.
/// @brief A curve is a 1-dimensional primitive. Curves are continuous, connected, and have a measurable length in terms of the coordinate system. A curve is composed of one or more curve segments. Each curve segment within a curve may be defined using a different interpolation method. The curve segments are connected to one another, with the end point of each segment except the last being the start point of the next segment in the segment list. The orientation of the curve is positive. The element segments encapsulates the segments of the curve.
/// Element Curve of type "http://www.opengis.net/gml/3.2":CurveType.
    gml__CurveType*                      Curve                          1;	///< Required element.
/// @brief OrientableCurve consists of a curve and an orientation. If the orientation is "+", then the OrientableCurve is identical to the baseCurve. If the orientation is "-", then the OrientableCurve is related to another AbstractCurve with a parameterization that reverses the sense of the curve traversal.
/// Element OrientableCurve of type "http://www.opengis.net/gml/3.2":OrientableCurveType.
    gml__OrientableCurveType*            OrientableCurve                1;	///< Required element.
/// @brief A LineString is a special curve that consists of a single segment with linear interpolation. It is defined by two or more coordinate tuples, with linear interpolation between them. The number of direct positions in the list shall be at least two.
/// Element LineString of type "http://www.opengis.net/gml/3.2":LineStringType.
    gml__LineStringType*                 LineString                     1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
//  END OF CHOICE OF SUBSTITUTIONS
/// Abstract element AbstractImplicitGeometry of type "http://www.opengis.net/gml/3.2":AbstractGeometryType.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractImplicitGeometry"> with elements <Grid>
/// @brief The gml:Grid implicitly defines an unrectified grid, which is a network composed of two or more sets of curves in which the members of each set intersect the members of the other sets in an algorithmic way. The region of interest within the grid is given in terms of its gml:limits, being the grid coordinates of diagonally opposed corners of a rectangular region. gml:axisLabels is provided with a list of labels of the axes of the grid (gml:axisName has been deprecated). gml:dimension specifies the dimension of the grid. The gml:limits element contains a single gml:GridEnvelope. The gml:low and gml:high property elements of the envelope are each integerLists, which are coordinate tuples, the coordinates being measured as offsets from the origin of the grid along each axis, of the diagonally opposing corners of a "rectangular" region of interest.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="Grid"> with elements <RectifiedGrid>
/// @brief The gml:Grid implicitly defines an unrectified grid, which is a network composed of two or more sets of curves in which the members of each set intersect the members of the other sets in an algorithmic way. The region of interest within the grid is given in terms of its gml:limits, being the grid coordinates of diagonally opposed corners of a rectangular region. gml:axisLabels is provided with a list of labels of the axes of the grid (gml:axisName has been deprecated). gml:dimension specifies the dimension of the grid. The gml:limits element contains a single gml:GridEnvelope. The gml:low and gml:high property elements of the envelope are each integerLists, which are coordinate tuples, the coordinates being measured as offsets from the origin of the grid along each axis, of the diagonally opposing corners of a "rectangular" region of interest.
/// Element Grid of type "http://www.opengis.net/gml/3.2":GridType.
    gml__GridType*                       Grid                           1;	///< Required element.
/// @brief A rectified grid is a grid for which there is an affine transformation between the grid coordinates and the coordinates of an external coordinate reference system. It is defined by specifying the position (in some geometric space) of the grid "origin" and of the vectors that specify the post locations. Note that the grid limits (post indexes) and axis name properties are inherited from gml:GridType and that gml:RectifiedGrid adds a gml:origin property (contains or references a gml:Point) and a set of gml:offsetVector properties.
/// Element RectifiedGrid of type "http://www.opengis.net/gml/3.2":RectifiedGridType.
    gml__RectifiedGridType*              RectifiedGrid                  1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
//  END OF CHOICE OF SUBSTITUTIONS
//  END OF CHOICE OF SUBSTITUTIONS
/// @brief gml:AbstractTimeObject acts as the head of a substitution group for all temporal primitives and complexes.
/// Reference "http://www.opengis.net/gml/3.2":AbstractTimeObject to abstract element.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractTimeObject"> with elements <AbstractTimePrimitive> <AbstractTimeComplex>
/// @brief gml:AbstractTimePrimitive acts as the head of a substitution group for geometric and topological temporal primitives.
/// Abstract element AbstractTimePrimitive of type "http://www.opengis.net/gml/3.2":AbstractTimePrimitiveType.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractTimePrimitive"> with elements <AbstractTimeGeometricPrimitive> <AbstractTimeTopologyPrimitive>
/// @brief gml:TimeGeometricPrimitive acts as the head of a substitution group for geometric temporal primitives. A temporal geometry shall be associated with a temporal reference system through the frame attribute that provides a URI reference that identifies a description of the reference system. Following ISO 19108, the Gregorian calendar with UTC is the default reference system, but others may also be used. The GPS calendar is an alternative reference systems in common use. The two geometric primitives in the temporal dimension are the instant and the period. GML components are defined to support these as follows.
/// Abstract element AbstractTimeGeometricPrimitive of type "http://www.opengis.net/gml/3.2":AbstractTimeGeometricPrimitiveType.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractTimeGeometricPrimitive"> with elements <TimeInstant> <TimePeriod>
/// @brief gml:TimeInstant acts as a zero-dimensional geometric primitive that represents an identifiable position in time.
/// Element TimeInstant of type "http://www.opengis.net/gml/3.2":TimeInstantType.
    gml__TimeInstantType*                TimeInstant                    1;	///< Required element.
/// @brief gml:TimePeriod acts as a one-dimensional geometric primitive that represents an identifiable extent in time. The location in of a gml:TimePeriod is described by the temporal positions of the instants at which it begins and ends. The length of the period is equal to the temporal distance between the two bounding temporal positions. Both beginning and end may be described in terms of their direct position using gml:TimePositionType which is an XML Schema simple content type, or by reference to an indentifiable time instant using gml:TimeInstantPropertyType. Alternatively a limit of a gml:TimePeriod may use the conventional GML property model to make a reference to a time instant described elsewhere, or a limit may be indicated as a direct position.
/// Element TimePeriod of type "http://www.opengis.net/gml/3.2":TimePeriodType.
    gml__TimePeriodType*                 TimePeriod                     1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
/// @brief gml:TimeTopologyPrimitive acts as the head of a substitution group for topological temporal primitives. Temporal topology primitives shall imply the ordering information between features or feature properties. The temporal connection of features can be examined if they have temporal topology primitives as values of their properties. Usually, an instantaneous feature associates with a time node, and a static feature associates with a time edge. A feature with both modes associates with the temporal topology primitive: a supertype of time nodes and time edges. A topological primitive is always connected to one or more other topological primitives, and is, therefore, always a member of a topological complex. In a GML instance, this will often be indicated by the primitives being described by elements that are descendents of an element describing a complex. However, in order to support the case where a temporal topological primitive is described in another context, the optional complex property is provided, which carries a reference to the parent temporal topological complex.
/// Abstract element AbstractTimeTopologyPrimitive of type "http://www.opengis.net/gml/3.2":AbstractTimeTopologyPrimitiveType.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractTimeTopologyPrimitive"> with elements <TimeNode> <TimeEdge>
/// @brief A time node is a zero-dimensional topological primitive that represents an identifiable node in time (it is equivalent to a point in space). A node may act as the termination or initiation of any number of time edges. A time node may be realised as a geometry, its position, whose value is a time instant.
/// Element TimeNode of type "http://www.opengis.net/gml/3.2":TimeNodeType.
    gml__TimeNodeType*                   TimeNode                       1;	///< Required element.
/// @brief A time edge is a one-dimensional topological primitive. It is an open interval that starts and ends at a node. The edge may be realised as a geometry whose value is a time period.
/// Element TimeEdge of type "http://www.opengis.net/gml/3.2":TimeEdgeType.
    gml__TimeEdgeType*                   TimeEdge                       1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
//  END OF CHOICE OF SUBSTITUTIONS
/// @brief gml:AbstractTimeComplex is an aggregation of temporal primitives and acts as the head of a substitution group for temporal complexes.
/// Abstract element AbstractTimeComplex of type "http://www.opengis.net/gml/3.2":AbstractTimeComplexType.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractTimeComplex"> with elements <TimeTopologyComplex>
/// @brief A temporal topology complex shall be the connected acyclic directed graph composed of temporal topological primitives, i.e. time nodes and time edges. Because a time edge may not exist without two time nodes on its boundaries, static features have time edges from a temporal topology complex as the values of their temporal properties, regardless of explicit declarations. A temporal topology complex expresses a linear or a non-linear graph. A temporal linear graph, composed of a sequence of time edges, provides a lineage described only by "substitution" of feature instances or feature element values. A time node as the start or the end of the graph connects with at least one time edge. A time node other than the start and the end shall connect to at least two time edges: one of starting from the node, and another ending at the node. A temporal topological complex is a set of connected temporal topological primitives. The member primtives are indicated, either by reference or by value, using the primitive property.
/// Element TimeTopologyComplex of type "http://www.opengis.net/gml/3.2":TimeTopologyComplexType.
    gml__TimeTopologyComplexType*        TimeTopologyComplex            1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
//  END OF CHOICE OF SUBSTITUTIONS
    }                                    union_DomainSetType           ;
//  END OF CHOICE
    }>                                   __DomainSetType_sequence       0;
//  END OF SEQUENCE
/// Attribute owns of type xs:boolean.
   @bool                                 owns                           0 = false;	///< Default value="false".
/// Attribute nilReason of type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         remoteSchema                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.opengis.net/gml/3.2":RangeSetType is a complexType.
/// class gml__RangeSetType operations:
/// - soap_new_gml__RangeSetType(soap*) allocate
/// - soap_new_gml__RangeSetType(soap*, int num) allocate array
/// - soap_new_req_gml__RangeSetType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__RangeSetType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__RangeSetType(soap*, gml__RangeSetType*) deserialize from a stream
/// - int soap_write_gml__RangeSetType(soap, gml__RangeSetType*) serialize to a stream
class gml__RangeSetType : public xsd__anyType
{ public:
/// CHOICE <xs:choice>
   $int                                  __union_RangeSetType          ;	///< Union _gml__union_RangeSetType selector: set to SOAP_UNION__gml__union_RangeSetType_<fieldname>
/// Union for choice in type gml__RangeSetType
    union _gml__union_RangeSetType
    {
/// @brief A Value Array is used for homogeneous arrays of primitive and aggregate values. The member values may be scalars, composites, arrays or lists. ValueArray has the same content model as CompositeValue, but the member values shall be homogeneous. The element declaration contains a Schematron constraint which expresses this restriction precisely. Since the members are homogeneous, the gml:referenceSystem (uom, codeSpace) may be specified on the gml:ValueArray itself and inherited by all the members if desired.
/// Vector of gml__ValueArrayType* element refs with length 1..unbounded
    std::vector<gml__ValueArrayType*  > *ValueArray                     1;
/// @brief gml:AbstractScalarValueList is an abstract element which acts as the head of a substitution group which contains gml:BooleanList, gml:CategoryList, gml:CountList and gml:QuantityList, and (transitively) the elements in their substitution groups.
/// Reference "http://www.opengis.net/gml/3.2":AbstractScalarValueList to abstract element.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractScalarValueList" maxOccurs="unbounded"> with elements <BooleanList> <CategoryList> <CountList> <QuantityList>
    struct ___gml__union_RangeSetType_
    {
   $int                                  __sizeAbstractScalarValueList  0;
    class __gml__union_RangeSetType_
    {
   $int                                  __unionAbstractScalarValueList 0;	///< Union _gml__union_RangeSetType_ selector: set to SOAP_UNION__gml__union_RangeSetType__<fieldname>
/// Union for substitutionGroup="AbstractScalarValueList"
    union _gml__union_RangeSetType_
    {
/// Element BooleanList of type "http://www.opengis.net/gml/3.2":booleanOrNilReasonList.
    gml__booleanOrNilReasonList*         BooleanList                    1;	///< Required element.
/// Element CategoryList of type "http://www.opengis.net/gml/3.2":CodeOrNilReasonListType.
    gml__CodeOrNilReasonListType*        CategoryList                   1;	///< Required element.
/// Element CountList of type "http://www.opengis.net/gml/3.2":integerOrNilReasonList.
    gml__integerOrNilReasonList*         CountList                      1;	///< Required element.
/// Element QuantityList of type "http://www.opengis.net/gml/3.2":MeasureOrNilReasonListType.
    gml__MeasureOrNilReasonListType*     QuantityList                   1;	///< Required element.
    }                                    __union_RangeSetType_         ;
;
    }                                   *__union_RangeSetType_         ;
    }                                    __union_RangeSetType_         ;
//  END OF CHOICE OF SUBSTITUTIONS
/// @brief gml:DataBlock describes the Range as a block of text encoded values similar to a Common Separated Value (CSV) representation. The range set parameterization is described by the property gml:rangeParameters.
/// Element reference "http://www.opengis.net/gml/3.2":DataBlock.
    gml__DataBlockType*                  DataBlock                      1;	///< Required element.
/// @brief for efficiency reasons, GML also provides a means of encoding the range set in an arbitrary external encoding, such as a binary file. This encoding may be "well-known" but this is not required. This mode uses the gml:File element. The values of the coverage (attribute values in the range set) are transmitted in a external file that is referenced from the XML structure described by gml:FileType. The external file is referenced by the gml:fileReference property that is an anyURI (the gml:fileName property has been deprecated). This means that the external file may be located remotely from the referencing GML instance. The gml:compression property points to a definition of a compression algorithm through an anyURI. This may be a retrievable, computable definition or simply a reference to an unambiguous name for the compression method. The gml:mimeType property points to a definition of the file mime type. The gml:fileStructure property is defined by a codelist. Note further that all values shall be enclosed in a single file. Multi-file structures for values are not supported in GML. The semantics of the range set is described as above using the gml:rangeParameters property. Note that if any compression algorithm is applied, the structure above applies only to the pre-compression or post-decompression structure of the file. Note that the fields within a record match the gml:valueComponents of the gml:CompositeValue in document order.
/// Element reference "http://www.opengis.net/gml/3.2":File.
    gml__FileType*                       File                           1;	///< Required element.
    }                                    union_RangeSetType            ;
//  END OF CHOICE
};

/// "http://www.opengis.net/gml/3.2":DataBlockType is a complexType.
/// class gml__DataBlockType operations:
/// - soap_new_gml__DataBlockType(soap*) allocate
/// - soap_new_gml__DataBlockType(soap*, int num) allocate array
/// - soap_new_req_gml__DataBlockType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__DataBlockType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__DataBlockType(soap*, gml__DataBlockType*) deserialize from a stream
/// - int soap_write_gml__DataBlockType(soap, gml__DataBlockType*) serialize to a stream
class gml__DataBlockType : public xsd__anyType
{ public:
/// Element reference "http://www.opengis.net/gml/3.2":rangeParameters.
    gml__AssociationRoleType*            rangeParameters                1;	///< Required element.
/// CHOICE <xs:choice>
   $int                                  __union_DataBlockType         ;	///< Union _gml__union_DataBlockType selector: set to SOAP_UNION__gml__union_DataBlockType_<fieldname>
    union _gml__union_DataBlockType
    {
/// @brief gml:CoordinatesType consists of a list of coordinate tuples, with each coordinate tuple separated by the ts or tuple separator (whitespace), and each coordinate in the tuple by the cs or coordinate separator (comma). The gml:tupleList encoding is effectively "band-interleaved".
/// Element reference "http://www.opengis.net/gml/3.2":tupleList.
    gml__CoordinatesType*                tupleList                      1;	///< Required element.
/// @brief gml:doubleOrNilReasonList consists of a list of gml:doubleOrNilReason values, each separated by a whitespace. The gml:doubleOrNilReason values are grouped into tuples where the dimension of each tuple in the list is equal to the number of range parameters.
/// Element reference "http://www.opengis.net/gml/3.2":doubleOrNilReasonTupleList.
    gml__doubleOrNilReasonList*          doubleOrNilReasonTupleList     1;	///< Required element.
    }                                    union_DataBlockType           ;
//  END OF CHOICE
};

/// "http://www.opengis.net/gml/3.2":FileType is a complexType.
/// class gml__FileType operations:
/// - soap_new_gml__FileType(soap*) allocate
/// - soap_new_gml__FileType(soap*, int num) allocate array
/// - soap_new_req_gml__FileType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__FileType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__FileType(soap*, gml__FileType*) deserialize from a stream
/// - int soap_write_gml__FileType(soap, gml__FileType*) serialize to a stream
class gml__FileType : public xsd__anyType
{ public:
/// Element reference "http://www.opengis.net/gml/3.2":rangeParameters.
    gml__AssociationRoleType*            rangeParameters                1;	///< Required element.
/// CHOICE <xs:choice>
   $int                                  __union_FileType              ;	///< Union _gml__union_FileType selector: set to SOAP_UNION__gml__union_FileType_<fieldname>
    union _gml__union_FileType
    {
/// Element fileName of type xs:anyURI.
    xsd__anyURI*                         fileName                       1;	///< Required element.
/// Element fileReference of type xs:anyURI.
    xsd__anyURI*                         fileReference                  1;	///< Required element.
    }                                    union_FileType                ;
//  END OF CHOICE
/// Element fileStructure of type "http://www.opengis.net/gml/3.2":CodeType.
    gml__CodeType*                       fileStructure                  1;	///< Required element.
/// Element mimeType of type xs:anyURI.
    xsd__anyURI*                         mimeType                       0;	///< Optional element.
/// Element compression of type xs:anyURI.
    xsd__anyURI*                         compression                    0;	///< Optional element.
};

/// "http://www.opengis.net/gml/3.2":CoverageFunctionType is a complexType.
/// class gml__CoverageFunctionType operations:
/// - soap_new_gml__CoverageFunctionType(soap*) allocate
/// - soap_new_gml__CoverageFunctionType(soap*, int num) allocate array
/// - soap_new_req_gml__CoverageFunctionType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__CoverageFunctionType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__CoverageFunctionType(soap*, gml__CoverageFunctionType*) deserialize from a stream
/// - int soap_write_gml__CoverageFunctionType(soap, gml__CoverageFunctionType*) serialize to a stream
class gml__CoverageFunctionType : public xsd__anyType
{ public:
/// CHOICE <xs:choice>
   $int                                  __union_CoverageFunctionType  ;	///< Union _gml__union_CoverageFunctionType selector: set to SOAP_UNION__gml__union_CoverageFunctionType_<fieldname>
/// Union for choice in type gml__CoverageFunctionType
    union _gml__union_CoverageFunctionType
    {
/// Element reference "http://www.opengis.net/gml/3.2":MappingRule.
    gml__StringOrRefType*                MappingRule                    1;	///< Required element.
/// @brief gml:CoverageMappingRule provides a formal or informal description of the coverage function. The mapping rule may be defined as an in-line string (gml:ruleDefinition) or via a remote reference through xlink:href (gml:ruleReference). If no rule name is specified, the default is 'Linear' with respect to members of the domain in document order.
/// Element reference "http://www.opengis.net/gml/3.2":CoverageMappingRule.
    gml__MappingRuleType*                CoverageMappingRule            1;	///< Required element.
/// @brief gml:GridFunction provides an explicit mapping rule for grid geometries, i.e. the domain shall be a geometry of type grid. It describes the mapping of grid posts (discrete point grid coverage) or grid cells (discrete surface coverage) to the values in the range set. The gml:startPoint is the index position of a point in the grid that is mapped to the first point in the range set (this is also the index position of the first grid post). If the gml:startPoint property is omitted the gml:startPoint is assumed to be equal to the value of gml:low in the gml:Grid geometry. Subsequent points in the mapping are determined by the value of the gml:sequenceRule.
/// Element reference "http://www.opengis.net/gml/3.2":GridFunction.
    gml__GridFunctionType*               GridFunction                   1;	///< Required element.
    }                                    union_CoverageFunctionType    ;
//  END OF CHOICE
};

/// "http://www.opengis.net/gml/3.2":MappingRuleType is a complexType.
/// class gml__MappingRuleType operations:
/// - soap_new_gml__MappingRuleType(soap*) allocate
/// - soap_new_gml__MappingRuleType(soap*, int num) allocate array
/// - soap_new_req_gml__MappingRuleType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__MappingRuleType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__MappingRuleType(soap*, gml__MappingRuleType*) deserialize from a stream
/// - int soap_write_gml__MappingRuleType(soap, gml__MappingRuleType*) serialize to a stream
class gml__MappingRuleType : public xsd__anyType
{ public:
/// CHOICE <xs:choice>
   $int                                  __union_MappingRuleType       ;	///< Union _gml__union_MappingRuleType selector: set to SOAP_UNION__gml__union_MappingRuleType_<fieldname>
/// Union for choice in type gml__MappingRuleType
    union _gml__union_MappingRuleType
    {
/// Element ruleDefinition of type xs:string.
    std::string*                         ruleDefinition                 1;	///< Required element.
/// Element ruleReference of type "http://www.opengis.net/gml/3.2":ReferenceType.
    gml__ReferenceType*                  ruleReference                  1;	///< Required element.
    }                                    union_MappingRuleType         ;
//  END OF CHOICE
};

/// "http://www.opengis.net/gml/3.2":GridFunctionType is a complexType.
/// class gml__GridFunctionType operations:
/// - soap_new_gml__GridFunctionType(soap*) allocate
/// - soap_new_gml__GridFunctionType(soap*, int num) allocate array
/// - soap_new_req_gml__GridFunctionType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__GridFunctionType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__GridFunctionType(soap*, gml__GridFunctionType*) deserialize from a stream
/// - int soap_write_gml__GridFunctionType(soap, gml__GridFunctionType*) serialize to a stream
class gml__GridFunctionType : public xsd__anyType
{ public:
/// Element sequenceRule of type "http://www.opengis.net/gml/3.2":SequenceRuleType.
    gml__SequenceRuleType*               sequenceRule                   0;	///< Optional element.
/// Element startPoint of type "http://www.opengis.net/gml/3.2":integerList.
    gml__integerList*                    startPoint                     0;	///< Optional element.
};

/// "http://www.opengis.net/gml/3.2":FeaturePropertyType is a complexType.
/// class gml__FeaturePropertyType operations:
/// - soap_new_gml__FeaturePropertyType(soap*) allocate
/// - soap_new_gml__FeaturePropertyType(soap*, int num) allocate array
/// - soap_new_req_gml__FeaturePropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__FeaturePropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__FeaturePropertyType(soap*, gml__FeaturePropertyType*) deserialize from a stream
/// - int soap_write_gml__FeaturePropertyType(soap, gml__FeaturePropertyType*) serialize to a stream
class gml__FeaturePropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gml__FeaturePropertyType_sequence
    {
/// @brief This abstract element serves as the head of a substitution group which may contain any elements whose content model is derived from gml:AbstractFeatureType. This may be used as a variable in the construction of content models. gml:AbstractFeature may be thought of as "anything that is a GML feature" and may be used to define variables or templates in which the value of a GML property is "any feature". This occurs in particular in a GML feature collection where the feature member properties contain one or multiple copies of gml:AbstractFeature respectively.
/// Reference "http://www.opengis.net/gml/3.2":AbstractFeature to abstract element.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractFeature"> with elements <DynamicFeature> <AbstractCoverage> <AbstractContinuousCoverage> <Observation> <AbstractFeatureCollection> <FeatureCollection> <SpatialDataSet> <SpatialDataSet> <ZoningElement> <ZoningElement> <OfficialDocumentation> <OfficialDocumentation> <SupplementaryRegulation> <SupplementaryRegulation> <SpatialPlan> <SpatialPlan>
   $int                                  __unionAbstractFeature         0;	///< Union _gml__union_FeaturePropertyType selector: set to SOAP_UNION__gml__union_FeaturePropertyType_<fieldname>
/// Union for substitutionGroup="AbstractFeature"
    union _gml__union_FeaturePropertyType
    {
/// @brief States are captured by time-stamped instances of a feature. The content model extends the standard gml:AbstractFeatureType with the gml:dynamicProperties model group. Each time-stamped instance represents a 'snapshot' of a feature. The dynamic feature classes will normally be extended to suit particular applications. A dynamic feature bears either a time stamp or a history.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="DynamicFeature"> with elements <DynamicFeatureCollection>
/// @brief States are captured by time-stamped instances of a feature. The content model extends the standard gml:AbstractFeatureType with the gml:dynamicProperties model group. Each time-stamped instance represents a 'snapshot' of a feature. The dynamic feature classes will normally be extended to suit particular applications. A dynamic feature bears either a time stamp or a history.
/// Element DynamicFeature of type "http://www.opengis.net/gml/3.2":DynamicFeatureType.
    gml__DynamicFeatureType*             DynamicFeature                 1;	///< Required element.
/// @brief A gml:DynamicFeatureCollection is a feature collection that has a gml:validTime property (i.e. is a snapshot of the feature collection) or which has a gml:history property that contains one or more gml:AbstractTimeSlices each of which contain values of the time varying properties of the feature collection. Note that the gml:DynamicFeatureCollection may be one of the following: 1. A feature collection which consists of static feature members (members do not change in time) but which has properties of the collection object as a whole that do change in time . 2. A feature collection which consists of dynamic feature members (the members are gml:DynamicFeatures) but which also has properties of the collection as a whole that vary in time.
/// Element DynamicFeatureCollection of type "http://www.opengis.net/gml/3.2":DynamicFeatureCollectionType.
    gml__DynamicFeatureCollectionType*   DynamicFeatureCollection       1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
/// @brief This element serves as the head of a substitution group which may contain any coverage whose type is derived from gml:AbstractCoverageType. It may act as a variable in the definition of content models where it is required to permit any coverage to be valid.
/// Abstract element AbstractCoverage of type "http://www.opengis.net/gml/3.2":AbstractCoverageType.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractCoverage"> with elements <AbstractDiscreteCoverage>
/// @brief A discrete coverage consists of a domain set, range set and optionally a coverage function. The domain set consists of either spatial or temporal geometry objects, finite in number. The range set is comprised of a finite number of attribute values each of which is associated to every direct position within any single spatiotemporal object in the domain. In other words, the range values are constant on each spatiotemporal object in the domain. This coverage function maps each element from the coverage domain to an element in its range. The coverageFunction element describes the mapping function. This element serves as the head of a substitution group which may contain any discrete coverage whose type is derived from gml:DiscreteCoverageType.
/// Abstract element AbstractDiscreteCoverage of type "http://www.opengis.net/gml/3.2":DiscreteCoverageType.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractDiscreteCoverage"> with elements <MultiPointCoverage> <MultiCurveCoverage> <MultiSurfaceCoverage> <MultiSolidCoverage> <GridCoverage> <RectifiedGridCoverage>
/// @brief In a gml:MultiPointCoverage the domain set is a gml:MultiPoint, that is a collection of arbitrarily distributed geometric points. The content model is identical with gml:DiscreteCoverageType, but that gml:domainSet shall have values gml:MultiPoint. In a gml:MultiPointCoverage the mapping from the domain to the range is straightforward. - For gml:DataBlock encodings the points of the gml:MultiPoint are mapped in document order to the tuples of the data block. - For gml:CompositeValue encodings the points of the gml:MultiPoint are mapped to the members of the composite value in document order. - For gml:File encodings the points of the gml:MultiPoint are mapped to the records of the file in sequential order.
/// Element MultiPointCoverage of type "http://www.opengis.net/gml/3.2":DiscreteCoverageType.
    gml__DiscreteCoverageType*           MultiPointCoverage             1;	///< Required element.
/// @brief In a gml:MultiCurveCoverage the domain is partioned into a collection of curves comprising a gml:MultiCurve. The coverage function then maps each curve in the collection to a value in the range set. The content model is identical with gml:DiscreteCoverageType, but that gml:domainSet shall have values gml:MultiCurve. In a gml:MultiCurveCoverage the mapping from the domain to the range is straightforward. - For gml:DataBlock encodings the curves of the gml:MultiCurve are mapped in document order to the tuples of the data block. - For gml:CompositeValue encodings the curves of the gml:MultiCurve are mapped to the members of the composite value in document order. - For gml:File encodings the curves of the gml:MultiCurve are mapped to the records of the file in sequential order.
/// Element MultiCurveCoverage of type "http://www.opengis.net/gml/3.2":DiscreteCoverageType.
    gml__DiscreteCoverageType*           MultiCurveCoverage             1;	///< Required element.
/// @brief In a gml:MultiSurfaceCoverage the domain is partioned into a collection of surfaces comprising a gml:MultiSurface. The coverage function than maps each surface in the collection to a value in the range set. The content model is identical with gml:DiscreteCoverageType, but that gml:domainSet shall have values gml:MultiSurface. In a gml:MultiSurfaceCoverage the mapping from the domain to the range is straightforward. - For gml:DataBlock encodings the surfaces of the gml:MultiSurface are mapped in document order to the tuples of the data block. - For gml:CompositeValue encodings the surfaces of the gml:MultiSurface are mapped to the members of the composite value in document order. - For gml:File encodings the surfaces of the gml:MultiSurface are mapped to the records of the file in sequential order.
/// Element MultiSurfaceCoverage of type "http://www.opengis.net/gml/3.2":DiscreteCoverageType.
    gml__DiscreteCoverageType*           MultiSurfaceCoverage           1;	///< Required element.
/// @brief In a gml:MultiSolidCoverage the domain is partioned into a collection of solids comprising a gml:MultiSolid. The coverage function than maps each solid in the collection to a value in the range set. The content model is identical with gml:DiscreteCoverageType, but that gml:domainSet shall have values gml:MultiSolid. In a gml:MultiSolidCoverage the mapping from the domain to the range is straightforward. - For gml:DataBlock encodings the solids of the gml:MultiSolid are mapped in document order to the tuples of the data block. - For gml:CompositeValue encodings the solids of the gml:MultiSolid are mapped to the members of the composite value in document order. - For gml:File encodings the solids of the gml:MultiSolid are mapped to the records of the file in sequential order.
/// Element MultiSolidCoverage of type "http://www.opengis.net/gml/3.2":DiscreteCoverageType.
    gml__DiscreteCoverageType*           MultiSolidCoverage             1;	///< Required element.
/// @brief A gml:GriddedCoverage is a discrete point coverage in which the domain set is a geometric grid of points. Note that this is the same as the gml:MultiPointCoverage except that we have a gml:Grid to describe the domain. The simple gridded coverage is not geometrically referenced and hence no geometric positions are assignable to the points in the grid. Such geometric positioning is introduced in the gml:RectifiedGridCoverage.
/// Element GridCoverage of type "http://www.opengis.net/gml/3.2":DiscreteCoverageType.
    gml__DiscreteCoverageType*           GridCoverage                   1;	///< Required element.
/// @brief The gml:RectifiedGridCoverage is a discrete point coverage based on a rectified grid. It is similar to the grid coverage except that the points of the grid are geometrically referenced. The rectified grid coverage has a domain that is a gml:RectifiedGrid geometry.
/// Element RectifiedGridCoverage of type "http://www.opengis.net/gml/3.2":DiscreteCoverageType.
    gml__DiscreteCoverageType*           RectifiedGridCoverage          1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
//  END OF CHOICE OF SUBSTITUTIONS
/// @brief A continuous coverage as defined in ISO 19123 is a coverage that can return different values for the same feature attribute at different direct positions within a single spatiotemporal object in its spatiotemporal domain. The base type for continuous coverages is AbstractContinuousCoverageType. The coverageFunction element describes the mapping function. The abstract element gml:AbstractContinuousCoverage serves as the head of a substitution group which may contain any continuous coverage whose type is derived from gml:AbstractContinuousCoverageType.
/// Abstract element AbstractContinuousCoverage of type "http://www.opengis.net/gml/3.2":AbstractContinuousCoverageType.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractContinuousCoverage"> with elements
//  END OF CHOICE OF SUBSTITUTIONS
;	///< Required element.
/// @brief The content model is a straightforward extension of gml:AbstractFeatureType; it automatically has the gml:identifier, gml:description, gml:descriptionReference, gml:name, and gml:boundedBy properties. The gml:validTime element describes the time of the observation. Note that this may be a time instant or a time period. The gml:using property contains or references a description of a sensor, instrument or procedure used for the observation. The gml:target property contains or references the specimen, region or station which is the object of the observation. This property is particularly useful for remote observations, such as photographs, where a generic location property might apply to the location of the camera or the location of the field of view, and thus may be ambiguous. The gml:subject element is provided as a convenient synonym for gml:target. This is the term commonly used in phtotography. The gml:resultOf property indicates the result of the observation. The value may be inline, or a reference to a value elsewhere.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="Observation"> with elements <DirectedObservation>
/// @brief The content model is a straightforward extension of gml:AbstractFeatureType; it automatically has the gml:identifier, gml:description, gml:descriptionReference, gml:name, and gml:boundedBy properties. The gml:validTime element describes the time of the observation. Note that this may be a time instant or a time period. The gml:using property contains or references a description of a sensor, instrument or procedure used for the observation. The gml:target property contains or references the specimen, region or station which is the object of the observation. This property is particularly useful for remote observations, such as photographs, where a generic location property might apply to the location of the camera or the location of the field of view, and thus may be ambiguous. The gml:subject element is provided as a convenient synonym for gml:target. This is the term commonly used in phtotography. The gml:resultOf property indicates the result of the observation. The value may be inline, or a reference to a value elsewhere.
/// Element Observation of type "http://www.opengis.net/gml/3.2":ObservationType.
    gml__ObservationType*                Observation                    1;	///< Required element.
/// @brief A gml:DirectedObservation is the same as an observation except that it adds an additional gml:direction property. This is the direction in which the observation was acquired. Clearly this applies only to certain types of observations such as visual observations by people, or observations obtained from terrestrial cameras.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="DirectedObservation"> with elements <DirectedObservationAtDistance>
/// @brief A gml:DirectedObservation is the same as an observation except that it adds an additional gml:direction property. This is the direction in which the observation was acquired. Clearly this applies only to certain types of observations such as visual observations by people, or observations obtained from terrestrial cameras.
/// Element DirectedObservation of type "http://www.opengis.net/gml/3.2":DirectedObservationType.
    gml__DirectedObservationType*        DirectedObservation            1;	///< Required element.
/// @brief gml:DirectedObservationAtDistance adds an additional distance property. This is the distance from the observer to the subject of the observation. Clearly this applies only to certain types of observations such as visual observations by people, or observations obtained from terrestrial cameras.
/// Element DirectedObservationAtDistance of type "http://www.opengis.net/gml/3.2":DirectedObservationAtDistanceType.
    gml__DirectedObservationAtDistanceType*  DirectedObservationAtDistance  1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
//  END OF CHOICE OF SUBSTITUTIONS
/// Abstract element AbstractFeatureCollection of type "http://www.opengis.net/gml/3.2":AbstractFeatureCollectionType.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractFeatureCollection"> with elements
//  END OF CHOICE OF SUBSTITUTIONS
;	///< Required element.
/// Element FeatureCollection of type "http://www.opengis.net/gml/3.2":FeatureCollectionType.
    gml__FeatureCollectionType*          FeatureCollection              1;	///< Required element.
/// @brief -- Definition -- Identifiable collection of spatial data. -- Description -- NOTE The type SpatialDataSet is offered as a pre-defined type for spatial data sets. The scope of this type is packaging pre-defined data sets for the non-direct access download service. It may be reused in thematic application schemas, but if it does not fit an application-schema-specific data set object should be modelled. This type may have the same name and definition like this type, but may have a different set of properties. This type specifies three properties: an external object identifier, a container for metadata (may be void), and an association to zero or more spatial objects.
/// Element SpatialDataSet of type "http://inspire.ec.europa.eu/schemas/base/3.3":SpatialDataSetType.
    base__SpatialDataSetType*            SpatialDataSet                 1;	///< Required element.
/// @brief -- Definition -- Identifiable collection of spatial data. -- Description -- NOTE The type SpatialDataSet is offered as a pre-defined type for spatial data sets. The scope of this type is packaging pre-defined data sets for the non-direct access download service. It may be reused in thematic application schemas, but if it does not fit an application-schema-specific data set object should be modelled. This type may have the same name and definition like this type, but may have a different set of properties. This type specifies three properties: an external object identifier, a container for metadata (may be void), and an association to zero or more spatial objects.
/// Element SpatialDataSet of type "http://inspire.ec.europa.eu/schemas/base/3.3":SpatialDataSetType.
    //jld base__SpatialDataSetType*            SpatialDataSet                 1;	///< Required element.
/// @brief -- Name -- zoning element -- Definition -- A spatial object which is homogeneous regarding the permitted uses of land based on zoning which separate one set of land uses from another. -- Description -- Zoning elements refer to the regulation of the kinds of activities which will be acceptable on particular lots (such as open space, residential, agricultural, commercial or industrial). The intensity of use at which those activities can be performed (from low-density housing such as single family homes to high-density such as high-rise apartment buildings), the height of buildings, the amount of space that structures may occupy, the proportions of the types of space on a lot, such as how much landscaped space, impervious surface, traffic lanes, and parking may be provided.
/// Element ZoningElement of type "http://inspire.ec.europa.eu/schemas/plu/3.0":ZoningElementType.
    plu__ZoningElementType*              ZoningElement                  1;	///< Required element.
/// @brief -- Name -- zoning element -- Definition -- A spatial object which is homogeneous regarding the permitted uses of land based on zoning which separate one set of land uses from another. -- Description -- Zoning elements refer to the regulation of the kinds of activities which will be acceptable on particular lots (such as open space, residential, agricultural, commercial or industrial). The intensity of use at which those activities can be performed (from low-density housing such as single family homes to high-density such as high-rise apartment buildings), the height of buildings, the amount of space that structures may occupy, the proportions of the types of space on a lot, such as how much landscaped space, impervious surface, traffic lanes, and parking may be provided.
/// Element ZoningElement of type "http://inspire.ec.europa.eu/schemas/plu/3.0":ZoningElementType.
    //jld plu__ZoningElementType*              ZoningElement                  1;	///< Required element.
/// @brief -- Name -- official documentation -- Definition -- The official documentation that composes the spatial plan; it may be composed of, the applicable legislation, the regulations, cartographic elements, descriptive elements that may be associated with the complete spatial plan, a zoning element or a supplementary regulation . In some Member States the actual textual regulation will be part of the data set (and can be put in the regulationText attribute), in other Member States the text will not be part of the data set and will be referenced via a reference to a document or a legal act. At least one of the three voidable values shall be provided. -- Description -- NOTE: The LegislationCitation is the value type of the attribute regulation reference. An example of a regulation reference would be: http://www2.vlaanderen.be /ruimtelijk/grup/00350/00362_00001/data/ 212_00362_00001_d_0BVR.pdf.
/// Element OfficialDocumentation of type "http://inspire.ec.europa.eu/schemas/plu/3.0":OfficialDocumentationType.
    plu__OfficialDocumentationType*      OfficialDocumentation          1;	///< Required element.
/// @brief -- Name -- official documentation -- Definition -- The official documentation that composes the spatial plan; it may be composed of, the applicable legislation, the regulations, cartographic elements, descriptive elements that may be associated with the complete spatial plan, a zoning element or a supplementary regulation . In some Member States the actual textual regulation will be part of the data set (and can be put in the regulationText attribute), in other Member States the text will not be part of the data set and will be referenced via a reference to a document or a legal act. At least one of the three voidable values shall be provided. -- Description -- NOTE: The LegislationCitation is the value type of the attribute regulation reference. An example of a regulation reference would be: http://www2.vlaanderen.be /ruimtelijk/grup/00350/00362_00001/data/ 212_00362_00001_d_0BVR.pdf.
/// Element OfficialDocumentation of type "http://inspire.ec.europa.eu/schemas/plu/3.0":OfficialDocumentationType.
    //jld plu__OfficialDocumentationType*      OfficialDocumentation          1;	///< Required element.
/// @brief -- Name -- supplementary regulation -- Definition -- A spatial object (point, line or polygon) of a spatial plan that provides supplementary information and/or limitation of the use of land/water necessary for spatial planning reasons or to formalise external rules defined in legal text. -- Description -- NOTE the supplementary regulations affects all land use that overlap with the geometry EXAMPLE an air field generates restriction in its surroundings regarding aircraft landing, radar and telecommunication devices. It is the buffer around these artefacts that generates the supplementary regulation on the Land Use.
/// Element SupplementaryRegulation of type "http://inspire.ec.europa.eu/schemas/plu/3.0":SupplementaryRegulationType.
    plu__SupplementaryRegulationType*    SupplementaryRegulation        1;	///< Required element.
/// @brief -- Name -- supplementary regulation -- Definition -- A spatial object (point, line or polygon) of a spatial plan that provides supplementary information and/or limitation of the use of land/water necessary for spatial planning reasons or to formalise external rules defined in legal text. -- Description -- NOTE the supplementary regulations affects all land use that overlap with the geometry EXAMPLE an air field generates restriction in its surroundings regarding aircraft landing, radar and telecommunication devices. It is the buffer around these artefacts that generates the supplementary regulation on the Land Use.
/// Element SupplementaryRegulation of type "http://inspire.ec.europa.eu/schemas/plu/3.0":SupplementaryRegulationType.
    //jld plu__SupplementaryRegulationType*    SupplementaryRegulation        1;	///< Required element.
/// @brief -- Name -- spatial plan -- Definition -- A set of documents that indicates a strategic direction for the development of a given geographic area, states the policies, priorities, programmes and land allocations that will implement the strategic direction and influences the distribution of people and activities in spaces of various scales. Spatial plans may be developed for urban planning, regional planning, environmental planning, landscape planning, national spatial plans, or spatial planning at the Union level.
/// Element SpatialPlan of type "http://inspire.ec.europa.eu/schemas/plu/3.0":SpatialPlanType.
    plu__SpatialPlanType*                SpatialPlan                    1;	///< Required element.
/// @brief -- Name -- spatial plan -- Definition -- A set of documents that indicates a strategic direction for the development of a given geographic area, states the policies, priorities, programmes and land allocations that will implement the strategic direction and influences the distribution of people and activities in spaces of various scales. Spatial plans may be developed for urban planning, regional planning, environmental planning, landscape planning, national spatial plans, or spatial planning at the Union level.
/// Element SpatialPlan of type "http://inspire.ec.europa.eu/schemas/plu/3.0":SpatialPlanType.
    //jld plu__SpatialPlanType*                SpatialPlan                    1;	///< Required element.
    }                                    __union_FeaturePropertyType   ;
//  END OF CHOICE OF SUBSTITUTIONS
    }>                                   __FeaturePropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute owns of type xs:boolean.
   @bool                                 owns                           0 = false;	///< Default value="false".
/// Attribute nilReason of type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         remoteSchema                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.opengis.net/gml/3.2":BoundingShapeType is a complexType.
/// class gml__BoundingShapeType operations:
/// - soap_new_gml__BoundingShapeType(soap*) allocate
/// - soap_new_gml__BoundingShapeType(soap*, int num) allocate array
/// - soap_new_req_gml__BoundingShapeType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__BoundingShapeType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__BoundingShapeType(soap*, gml__BoundingShapeType*) deserialize from a stream
/// - int soap_write_gml__BoundingShapeType(soap, gml__BoundingShapeType*) serialize to a stream
class gml__BoundingShapeType : public xsd__anyType
{ public:
/// CHOICE <xs:choice>
   $int                                  __union_BoundingShapeType     ;	///< Union _gml__union_BoundingShapeType selector: set to SOAP_UNION__gml__union_BoundingShapeType_<fieldname>
    union _gml__union_BoundingShapeType
    {
/// @brief Envelope defines an extent using a pair of positions defining opposite corners in arbitrary dimensions. The first direct position is the "lower corner" (a coordinate position consisting of all the minimal ordinates for each dimension for all points within the envelope), the second one the "upper corner" (a coordinate position consisting of all the maximal ordinates for each dimension for all points within the envelope). The use of the properties "coordinates" and "pos" has been deprecated. The explicitly named properties "lowerCorner" and "upperCorner" shall be used instead.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="Envelope"> with elements <EnvelopeWithTimePeriod>
/// @brief Envelope defines an extent using a pair of positions defining opposite corners in arbitrary dimensions. The first direct position is the "lower corner" (a coordinate position consisting of all the minimal ordinates for each dimension for all points within the envelope), the second one the "upper corner" (a coordinate position consisting of all the maximal ordinates for each dimension for all points within the envelope). The use of the properties "coordinates" and "pos" has been deprecated. The explicitly named properties "lowerCorner" and "upperCorner" shall be used instead.
/// Element reference "http://www.opengis.net/gml/3.2":Envelope.
    gml__EnvelopeType*                   Envelope                       1;	///< Required element.
/// @brief gml:EnvelopeWithTimePeriod is provided for envelopes that include a temporal extent. It adds two time position properties, gml:beginPosition and gml:endPosition, which describe the extent of a time-envelope. Since gml:EnvelopeWithTimePeriod is assigned to the substitution group headed by gml:Envelope, it may be used whenever gml:Envelope is valid.
/// Element EnvelopeWithTimePeriod of type "http://www.opengis.net/gml/3.2":EnvelopeWithTimePeriodType.
    gml__EnvelopeWithTimePeriodType*     EnvelopeWithTimePeriod         1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
/// Element reference "http://www.opengis.net/gml/3.2":Null.
    gml__NilReasonType*                  Null                           1;	///< Required element.
    }                                    union_BoundingShapeType       ;
//  END OF CHOICE
/// Attribute nilReason of type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
};

/// "http://www.opengis.net/gml/3.2":AbstractFeatureMemberType is an abstract complexType.
/// @brief To create a collection of GML features, a property type shall be derived by extension from gml:AbstractFeatureMemberType. By default, this abstract property type does not imply any ownership of the features in the collection. The owns attribute of gml:OwnershipAttributeGroup may be used on a property element instance to assert ownership of a feature in the collection. A collection shall not own a feature already owned by another object.
/// class gml__AbstractFeatureMemberType operations:
/// - soap_new_gml__AbstractFeatureMemberType(soap*) allocate
/// - soap_new_gml__AbstractFeatureMemberType(soap*, int num) allocate array
/// - soap_new_req_gml__AbstractFeatureMemberType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__AbstractFeatureMemberType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__AbstractFeatureMemberType(soap*, gml__AbstractFeatureMemberType*) deserialize from a stream
/// - int soap_write_gml__AbstractFeatureMemberType(soap, gml__AbstractFeatureMemberType*) serialize to a stream
class gml__AbstractFeatureMemberType : public xsd__anyType
{ public:
/// Attribute owns of type xs:boolean.
   @bool                                 owns                           0 = false;	///< Default value="false".
};

/// "http://www.opengis.net/gml/3.2":TimePrimitivePropertyType is a complexType.
/// @brief gml:TimePrimitivePropertyType provides a standard content model for associations between an arbitrary member of the substitution group whose head is gml:AbstractTimePrimitive and another object.
/// class gml__TimePrimitivePropertyType operations:
/// - soap_new_gml__TimePrimitivePropertyType(soap*) allocate
/// - soap_new_gml__TimePrimitivePropertyType(soap*, int num) allocate array
/// - soap_new_req_gml__TimePrimitivePropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__TimePrimitivePropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__TimePrimitivePropertyType(soap*, gml__TimePrimitivePropertyType*) deserialize from a stream
/// - int soap_write_gml__TimePrimitivePropertyType(soap, gml__TimePrimitivePropertyType*) serialize to a stream
class gml__TimePrimitivePropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gml__TimePrimitivePropertyType_sequence
    {
/// @brief gml:AbstractTimePrimitive acts as the head of a substitution group for geometric and topological temporal primitives.
/// Reference "http://www.opengis.net/gml/3.2":AbstractTimePrimitive to abstract element.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractTimePrimitive"> with elements <AbstractTimeGeometricPrimitive> <AbstractTimeTopologyPrimitive>
   $int                                  __unionAbstractTimePrimitive   0;	///< Union _gml__union_TimePrimitivePropertyType selector: set to SOAP_UNION__gml__union_TimePrimitivePropertyType_<fieldname>
/// Union for substitutionGroup="AbstractTimePrimitive"
    union _gml__union_TimePrimitivePropertyType
    {
/// @brief gml:TimeGeometricPrimitive acts as the head of a substitution group for geometric temporal primitives. A temporal geometry shall be associated with a temporal reference system through the frame attribute that provides a URI reference that identifies a description of the reference system. Following ISO 19108, the Gregorian calendar with UTC is the default reference system, but others may also be used. The GPS calendar is an alternative reference systems in common use. The two geometric primitives in the temporal dimension are the instant and the period. GML components are defined to support these as follows.
/// Abstract element AbstractTimeGeometricPrimitive of type "http://www.opengis.net/gml/3.2":AbstractTimeGeometricPrimitiveType.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractTimeGeometricPrimitive"> with elements <TimeInstant> <TimePeriod>
/// @brief gml:TimeInstant acts as a zero-dimensional geometric primitive that represents an identifiable position in time.
/// Element TimeInstant of type "http://www.opengis.net/gml/3.2":TimeInstantType.
    gml__TimeInstantType*                TimeInstant                    1;	///< Required element.
/// @brief gml:TimePeriod acts as a one-dimensional geometric primitive that represents an identifiable extent in time. The location in of a gml:TimePeriod is described by the temporal positions of the instants at which it begins and ends. The length of the period is equal to the temporal distance between the two bounding temporal positions. Both beginning and end may be described in terms of their direct position using gml:TimePositionType which is an XML Schema simple content type, or by reference to an indentifiable time instant using gml:TimeInstantPropertyType. Alternatively a limit of a gml:TimePeriod may use the conventional GML property model to make a reference to a time instant described elsewhere, or a limit may be indicated as a direct position.
/// Element TimePeriod of type "http://www.opengis.net/gml/3.2":TimePeriodType.
    gml__TimePeriodType*                 TimePeriod                     1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
/// @brief gml:TimeTopologyPrimitive acts as the head of a substitution group for topological temporal primitives. Temporal topology primitives shall imply the ordering information between features or feature properties. The temporal connection of features can be examined if they have temporal topology primitives as values of their properties. Usually, an instantaneous feature associates with a time node, and a static feature associates with a time edge. A feature with both modes associates with the temporal topology primitive: a supertype of time nodes and time edges. A topological primitive is always connected to one or more other topological primitives, and is, therefore, always a member of a topological complex. In a GML instance, this will often be indicated by the primitives being described by elements that are descendents of an element describing a complex. However, in order to support the case where a temporal topological primitive is described in another context, the optional complex property is provided, which carries a reference to the parent temporal topological complex.
/// Abstract element AbstractTimeTopologyPrimitive of type "http://www.opengis.net/gml/3.2":AbstractTimeTopologyPrimitiveType.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractTimeTopologyPrimitive"> with elements <TimeNode> <TimeEdge>
/// @brief A time node is a zero-dimensional topological primitive that represents an identifiable node in time (it is equivalent to a point in space). A node may act as the termination or initiation of any number of time edges. A time node may be realised as a geometry, its position, whose value is a time instant.
/// Element TimeNode of type "http://www.opengis.net/gml/3.2":TimeNodeType.
    gml__TimeNodeType*                   TimeNode                       1;	///< Required element.
/// @brief A time edge is a one-dimensional topological primitive. It is an open interval that starts and ends at a node. The edge may be realised as a geometry whose value is a time period.
/// Element TimeEdge of type "http://www.opengis.net/gml/3.2":TimeEdgeType.
    gml__TimeEdgeType*                   TimeEdge                       1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
    }                                    __union_TimePrimitivePropertyType;
//  END OF CHOICE OF SUBSTITUTIONS
    }>                                   __TimePrimitivePropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute nilReason of type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         remoteSchema                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
/// Attribute owns of type xs:boolean.
   @bool                                 owns                           0 = false;	///< Default value="false".
};

/// "http://www.opengis.net/gml/3.2":TimeInstantPropertyType is a complexType.
/// @brief gml:TimeInstantPropertyType provides for associating a gml:TimeInstant with an object.
/// class gml__TimeInstantPropertyType operations:
/// - soap_new_gml__TimeInstantPropertyType(soap*) allocate
/// - soap_new_gml__TimeInstantPropertyType(soap*, int num) allocate array
/// - soap_new_req_gml__TimeInstantPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__TimeInstantPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__TimeInstantPropertyType(soap*, gml__TimeInstantPropertyType*) deserialize from a stream
/// - int soap_write_gml__TimeInstantPropertyType(soap, gml__TimeInstantPropertyType*) serialize to a stream
class gml__TimeInstantPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gml__TimeInstantPropertyType_sequence
    {
/// @brief gml:TimeInstant acts as a zero-dimensional geometric primitive that represents an identifiable position in time.
/// Element reference "http://www.opengis.net/gml/3.2":TimeInstant.
    gml__TimeInstantType*                TimeInstant                    1;	///< Required element.
    }>                                   __TimeInstantPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute nilReason of type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         remoteSchema                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
/// Attribute owns of type xs:boolean.
   @bool                                 owns                           0 = false;	///< Default value="false".
};

/// "http://www.opengis.net/gml/3.2":TimePeriodPropertyType is a complexType.
/// @brief gml:TimePeriodPropertyType provides for associating a gml:TimePeriod with an object.
/// class gml__TimePeriodPropertyType operations:
/// - soap_new_gml__TimePeriodPropertyType(soap*) allocate
/// - soap_new_gml__TimePeriodPropertyType(soap*, int num) allocate array
/// - soap_new_req_gml__TimePeriodPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__TimePeriodPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__TimePeriodPropertyType(soap*, gml__TimePeriodPropertyType*) deserialize from a stream
/// - int soap_write_gml__TimePeriodPropertyType(soap, gml__TimePeriodPropertyType*) serialize to a stream
class gml__TimePeriodPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gml__TimePeriodPropertyType_sequence
    {
/// @brief gml:TimePeriod acts as a one-dimensional geometric primitive that represents an identifiable extent in time. The location in of a gml:TimePeriod is described by the temporal positions of the instants at which it begins and ends. The length of the period is equal to the temporal distance between the two bounding temporal positions. Both beginning and end may be described in terms of their direct position using gml:TimePositionType which is an XML Schema simple content type, or by reference to an indentifiable time instant using gml:TimeInstantPropertyType. Alternatively a limit of a gml:TimePeriod may use the conventional GML property model to make a reference to a time instant described elsewhere, or a limit may be indicated as a direct position.
/// Element reference "http://www.opengis.net/gml/3.2":TimePeriod.
    gml__TimePeriodType*                 TimePeriod                     1;	///< Required element.
    }>                                   __TimePeriodPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute nilReason of type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         remoteSchema                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
/// Attribute owns of type xs:boolean.
   @bool                                 owns                           0 = false;	///< Default value="false".
};

/// "http://www.opengis.net/gml/3.2":ValuePropertyType is a complexType.
/// class gml__ValuePropertyType operations:
/// - soap_new_gml__ValuePropertyType(soap*) allocate
/// - soap_new_gml__ValuePropertyType(soap*, int num) allocate array
/// - soap_new_req_gml__ValuePropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__ValuePropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__ValuePropertyType(soap*, gml__ValuePropertyType*) deserialize from a stream
/// - int soap_write_gml__ValuePropertyType(soap, gml__ValuePropertyType*) serialize to a stream
class gml__ValuePropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gml__ValuePropertyType_sequence
    {
/// GROUP <xs:group name="Value">
/// @brief This is a convenience choice group which unifies generic values defined in this Clause with spatial and temporal objects and the measures described above, so that any of these may be used within aggregate values.
/// CHOICE <xs:choice>
   $int                                  __union_ValuePropertyType     ;	///< Union _gml__union_ValuePropertyType selector: set to SOAP_UNION__gml__union_ValuePropertyType_<fieldname>
    union _gml__union_ValuePropertyType
    {
/// @brief gml:AbstractValue is an abstract element which acts as the head of a substitution group which contains gml:AbstractScalarValue, gml:AbstractScalarValueList, gml:CompositeValue and gml:ValueExtent, and (transitively) the elements in their substitution groups. These elements may be used in an application schema as variables, so that in an XML instance document any member of its substitution group may occur.
/// Reference "http://www.opengis.net/gml/3.2":AbstractValue to abstract element.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractValue"> with elements <AbstractScalarValue> <AbstractScalarValueList> <CompositeValue> <CategoryExtent> <CountExtent> <QuantityExtent>
/// @brief gml:AbstractScalarValue is an abstract element which acts as the head of a substitution group which contains gml:Boolean, gml:Category, gml:Count and gml:Quantity, and (transitively) the elements in their substitution groups.
/// Abstract element AbstractScalarValue of type xs:anyType.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractScalarValue"> with elements <Boolean> <Category> <Count> <Quantity>
/// class _gml__ValuePropertyType_Boolean operations:
/// - soap_new__gml__ValuePropertyType_Boolean(soap*) allocate
/// - soap_new__gml__ValuePropertyType_Boolean(soap*, int num) allocate array
/// - soap_new_req__gml__ValuePropertyType_Boolean(soap*, ...) allocate, set required members
/// - soap_new_set__gml__ValuePropertyType_Boolean(soap*, ...) allocate, set all public members
/// - int soap_read__gml__ValuePropertyType_Boolean(soap*, _gml__ValuePropertyType_Boolean*) deserialize from a stream
/// - int soap_write__gml__ValuePropertyType_Boolean(soap, _gml__ValuePropertyType_Boolean*) serialize to a stream
    class _gml__ValuePropertyType_Boolean
    {
/// __item wraps 'xs:boolean' simpleContent.
    bool                                 __item                        ;
/// Attribute nilReason of type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
    }                                   *Boolean                       ;	///< Nillable pointer.
/// @brief A gml:Category has an optional XML attribute codeSpace, whose value is a URI which identifies a dictionary, codelist or authority for the term.
/// class _gml__ValuePropertyType_Category operations:
/// - soap_new__gml__ValuePropertyType_Category(soap*) allocate
/// - soap_new__gml__ValuePropertyType_Category(soap*, int num) allocate array
/// - soap_new_req__gml__ValuePropertyType_Category(soap*, ...) allocate, set required members
/// - soap_new_set__gml__ValuePropertyType_Category(soap*, ...) allocate, set all public members
/// - int soap_read__gml__ValuePropertyType_Category(soap*, _gml__ValuePropertyType_Category*) deserialize from a stream
/// - int soap_write__gml__ValuePropertyType_Category(soap, _gml__ValuePropertyType_Category*) serialize to a stream
    class _gml__ValuePropertyType_Category
    {
/// __item wraps 'xs:string' simpleContent.
    std::string                          __item                        ;
/// Attribute nilReason of type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute codeSpace of type xs:anyURI.
   @xsd__anyURI*                         codeSpace                      0;	///< Optional attribute.
    }                                   *Category                      ;	///< Nillable pointer.
/// class _gml__ValuePropertyType_Count operations:
/// - soap_new__gml__ValuePropertyType_Count(soap*) allocate
/// - soap_new__gml__ValuePropertyType_Count(soap*, int num) allocate array
/// - soap_new_req__gml__ValuePropertyType_Count(soap*, ...) allocate, set required members
/// - soap_new_set__gml__ValuePropertyType_Count(soap*, ...) allocate, set all public members
/// - int soap_read__gml__ValuePropertyType_Count(soap*, _gml__ValuePropertyType_Count*) deserialize from a stream
/// - int soap_write__gml__ValuePropertyType_Count(soap, _gml__ValuePropertyType_Count*) serialize to a stream
    class _gml__ValuePropertyType_Count
    {
/// __item wraps 'xs:integer' simpleContent.
    long                                 __item                        ;
/// Attribute nilReason of type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
    }                                   *Count                         ;	///< Nillable pointer.
/// @brief An XML attribute uom ("unit of measure") is required, whose value is a URI which identifies the definition of a ratio scale or units by which the numeric value shall be multiplied, or an interval or position scale on which the value occurs.
/// class _gml__ValuePropertyType_Quantity operations:
/// - soap_new__gml__ValuePropertyType_Quantity(soap*) allocate
/// - soap_new__gml__ValuePropertyType_Quantity(soap*, int num) allocate array
/// - soap_new_req__gml__ValuePropertyType_Quantity(soap*, ...) allocate, set required members
/// - soap_new_set__gml__ValuePropertyType_Quantity(soap*, ...) allocate, set all public members
/// - int soap_read__gml__ValuePropertyType_Quantity(soap*, _gml__ValuePropertyType_Quantity*) deserialize from a stream
/// - int soap_write__gml__ValuePropertyType_Quantity(soap, _gml__ValuePropertyType_Quantity*) serialize to a stream
    class _gml__ValuePropertyType_Quantity
    {
/// __item wraps 'xs:double' simpleContent.
    double                               __item                        ;
/// Attribute nilReason of type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute uom of type "http://www.opengis.net/gml/3.2":UomIdentifier.
   @gml__UomIdentifier                   uom                            1;	///< Required attribute.
    }                                   *Quantity                      ;	///< Nillable pointer.
//  END OF CHOICE OF SUBSTITUTIONS
/// @brief gml:AbstractScalarValueList is an abstract element which acts as the head of a substitution group which contains gml:BooleanList, gml:CategoryList, gml:CountList and gml:QuantityList, and (transitively) the elements in their substitution groups.
/// Abstract element AbstractScalarValueList of type xs:anyType.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractScalarValueList"> with elements <BooleanList> <CategoryList> <CountList> <QuantityList>
/// Element BooleanList of type "http://www.opengis.net/gml/3.2":booleanOrNilReasonList.
    gml__booleanOrNilReasonList*         BooleanList                    1;	///< Required element.
/// Element CategoryList of type "http://www.opengis.net/gml/3.2":CodeOrNilReasonListType.
    gml__CodeOrNilReasonListType*        CategoryList                   1;	///< Required element.
/// Element CountList of type "http://www.opengis.net/gml/3.2":integerOrNilReasonList.
    gml__integerOrNilReasonList*         CountList                      1;	///< Required element.
/// Element QuantityList of type "http://www.opengis.net/gml/3.2":MeasureOrNilReasonListType.
    gml__MeasureOrNilReasonListType*     QuantityList                   1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
/// @brief gml:CompositeValue is an aggregate value built from other values . It contains zero or an arbitrary number of gml:valueComponent elements, and zero or one gml:valueComponents property elements. It may be used for strongly coupled aggregates (vectors, tensors) or for arbitrary collections of values.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="CompositeValue"> with elements <ValueArray>
/// @brief gml:CompositeValue is an aggregate value built from other values . It contains zero or an arbitrary number of gml:valueComponent elements, and zero or one gml:valueComponents property elements. It may be used for strongly coupled aggregates (vectors, tensors) or for arbitrary collections of values.
/// Element CompositeValue of type "http://www.opengis.net/gml/3.2":CompositeValueType.
    gml__CompositeValueType*             CompositeValue                 1;	///< Required element.
/// @brief A Value Array is used for homogeneous arrays of primitive and aggregate values. The member values may be scalars, composites, arrays or lists. ValueArray has the same content model as CompositeValue, but the member values shall be homogeneous. The element declaration contains a Schematron constraint which expresses this restriction precisely. Since the members are homogeneous, the gml:referenceSystem (uom, codeSpace) may be specified on the gml:ValueArray itself and inherited by all the members if desired.
/// Element ValueArray of type "http://www.opengis.net/gml/3.2":ValueArrayType.
    gml__ValueArrayType*                 ValueArray                     1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
/// Element CategoryExtent of type "http://www.opengis.net/gml/3.2":CategoryExtentType.
    gml__CategoryExtentType*             CategoryExtent                 1;	///< Required element.
/// Element CountExtent of type "http://www.opengis.net/gml/3.2":CountExtentType.
    gml__CountExtentType*                CountExtent                    1;	///< Required element.
/// Element QuantityExtent of type "http://www.opengis.net/gml/3.2":QuantityExtentType.
    gml__QuantityExtentType*             QuantityExtent                 1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
/// @brief The AbstractGeometry element is the abstract head of the substitution group for all geometry elements of GML. This includes pre-defined and user-defined geometry elements. Any geometry element shall be a direct or indirect extension/restriction of AbstractGeometryType and shall be directly or indirectly in the substitution group of AbstractGeometry.
/// Reference "http://www.opengis.net/gml/3.2":AbstractGeometry to abstract element.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractGeometry"> with elements <GeometricComplex> <AbstractGeometricAggregate> <AbstractGeometricPrimitive> <AbstractImplicitGeometry>
/// Element GeometricComplex of type "http://www.opengis.net/gml/3.2":GeometricComplexType.
    gml__GeometricComplexType*           GeometricComplex               1;	///< Required element.
/// @brief gml:AbstractGeometricAggregate is the abstract head of the substitution group for all geometric aggregates.
/// Abstract element AbstractGeometricAggregate of type "http://www.opengis.net/gml/3.2":AbstractGeometricAggregateType.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractGeometricAggregate"> with elements <MultiGeometry> <MultiPoint> <MultiCurve> <MultiSurface> <MultiSolid>
/// @brief gml:MultiGeometry is a collection of one or more GML geometry objects of arbitrary type. The members of the geometric aggregate may be specified either using the "standard" property (gml:geometryMember) or the array property (gml:geometryMembers). It is also valid to use both the "standard" and the array properties in the same collection.
/// Element MultiGeometry of type "http://www.opengis.net/gml/3.2":MultiGeometryType.
    gml__MultiGeometryType*              MultiGeometry                  1;	///< Required element.
/// @brief A gml:MultiPoint consists of one or more gml:Points. The members of the geometric aggregate may be specified either using the "standard" property (gml:pointMember) or the array property (gml:pointMembers). It is also valid to use both the "standard" and the array properties in the same collection.
/// Element MultiPoint of type "http://www.opengis.net/gml/3.2":MultiPointType.
    gml__MultiPointType*                 MultiPoint                     1;	///< Required element.
/// @brief A gml:MultiCurve is defined by one or more gml:AbstractCurves. The members of the geometric aggregate may be specified either using the "standard" property (gml:curveMember) or the array property (gml:curveMembers). It is also valid to use both the "standard" and the array properties in the same collection.
/// Element MultiCurve of type "http://www.opengis.net/gml/3.2":MultiCurveType.
    gml__MultiCurveType*                 MultiCurve                     1;	///< Required element.
/// @brief A gml:MultiSurface is defined by one or more gml:AbstractSurfaces. The members of the geometric aggregate may be specified either using the "standard" property (gml:surfaceMember) or the array property (gml:surfaceMembers). It is also valid to use both the "standard" and the array properties in the same collection.
/// Element MultiSurface of type "http://www.opengis.net/gml/3.2":MultiSurfaceType.
    gml__MultiSurfaceType*               MultiSurface                   1;	///< Required element.
/// @brief A gml:MultiSolid is defined by one or more gml:AbstractSolids. The members of the geometric aggregate may be specified either using the "standard" property (gml:solidMember) or the array property (gml:solidMembers). It is also valid to use both the "standard" and the array properties in the same collection.
/// Element MultiSolid of type "http://www.opengis.net/gml/3.2":MultiSolidType.
    gml__MultiSolidType*                 MultiSolid                     1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
/// @brief The AbstractGeometricPrimitive element is the abstract head of the substitution group for all (pre- and user-defined) geometric primitives.
/// Abstract element AbstractGeometricPrimitive of type "http://www.opengis.net/gml/3.2":AbstractGeometricPrimitiveType.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractGeometricPrimitive"> with elements <AbstractSolid> <AbstractSurface> <Point> <AbstractCurve>
/// @brief The AbstractSolid element is the abstract head of the substituition group for all (continuous) solid elements.
/// Abstract element AbstractSolid of type "http://www.opengis.net/gml/3.2":AbstractSolidType.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractSolid"> with elements <CompositeSolid> <Solid>
/// @brief gml:CompositeSolid implements ISO 19107 GM_CompositeSolid (see ISO 19107:2003, 6.6.7) as specified in D.2.3.6. A gml:CompositeSolid is represented by a set of orientable surfaces. It is a geometry type with all the geometric properties of a (primitive) solid. Essentially, a composite solid is a collection of solids that join in pairs on common boundary surfaces and which, when considered as a whole, form a single solid. solidMember references or contains one solid in the composite solid. The solids are contiguous.
/// Element CompositeSolid of type "http://www.opengis.net/gml/3.2":CompositeSolidType.
    gml__CompositeSolidType*             CompositeSolid                 1;	///< Required element.
/// @brief A solid is the basis for 3-dimensional geometry. The extent of a solid is defined by the boundary surfaces as specified in ISO 19107:2003, 6.3.18. exterior specifies the outer boundary, interior the inner boundary of the solid.
/// Element Solid of type "http://www.opengis.net/gml/3.2":SolidType.
    gml__SolidType*                      Solid                          1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
/// @brief The AbstractSurface element is the abstract head of the substitution group for all (continuous) surface elements.
/// Abstract element AbstractSurface of type "http://www.opengis.net/gml/3.2":AbstractSurfaceType.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractSurface"> with elements <CompositeSurface> <Surface> <OrientableSurface> <Polygon>
/// @brief A gml:CompositeSurface is represented by a set of orientable surfaces. It is geometry type with all the geometric properties of a (primitive) surface. Essentially, a composite surface is a collection of surfaces that join in pairs on common boundary curves and which, when considered as a whole, form a single surface. surfaceMember references or contains inline one surface in the composite surface. The surfaces are contiguous.
/// Element CompositeSurface of type "http://www.opengis.net/gml/3.2":CompositeSurfaceType.
    gml__CompositeSurfaceType*           CompositeSurface               1;	///< Required element.
/// @brief A Surface is a 2-dimensional primitive and is composed of one or more surface patches as specified in ISO 19107:2003, 6.3.17.1. The surface patches are connected to one another. patches encapsulates the patches of the surface.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="Surface"> with elements <PolyhedralSurface> <TriangulatedSurface>
/// @brief A Surface is a 2-dimensional primitive and is composed of one or more surface patches as specified in ISO 19107:2003, 6.3.17.1. The surface patches are connected to one another. patches encapsulates the patches of the surface.
/// Element Surface of type "http://www.opengis.net/gml/3.2":SurfaceType.
    gml__SurfaceType*                    Surface                        1;	///< Required element.
/// @brief A polyhedral surface is a surface composed of polygon patches connected along their common boundary curves. This differs from the surface type only in the restriction on the types of surface patches acceptable. polygonPatches encapsulates the polygon patches of the polyhedral surface.
/// Element PolyhedralSurface of type "http://www.opengis.net/gml/3.2":SurfaceType.
    gml__SurfaceType*                    PolyhedralSurface              1;	///< Required element.
/// @brief A triangulated surface is a polyhedral surface that is composed only of triangles. There is no restriction on how the triangulation is derived. trianglePatches encapsulates the triangles of the triangulated surface.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="TriangulatedSurface"> with elements <Tin>
/// @brief A triangulated surface is a polyhedral surface that is composed only of triangles. There is no restriction on how the triangulation is derived. trianglePatches encapsulates the triangles of the triangulated surface.
/// Element TriangulatedSurface of type "http://www.opengis.net/gml/3.2":SurfaceType.
    gml__SurfaceType*                    TriangulatedSurface            1;	///< Required element.
/// @brief A tin is a triangulated surface that uses the Delauny algorithm or a similar algorithm complemented with consideration of stoplines (stopLines), breaklines (breakLines), and maximum length of triangle sides (maxLength). controlPoint shall contain a set of the positions (three or more) used as posts for this TIN (corners of the triangles in the TIN). See ISO 19107:2003, 6.4.39 for details.
/// Element Tin of type "http://www.opengis.net/gml/3.2":TinType.
    gml__TinType*                        Tin                            1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
//  END OF CHOICE OF SUBSTITUTIONS
/// @brief OrientableSurface consists of a surface and an orientation. If the orientation is "+", then the OrientableSurface is identical to the baseSurface. If the orientation is "-", then the OrientableSurface is a reference to a gml:AbstractSurface with an up-normal that reverses the direction for this OrientableSurface, the sense of "the top of the surface".
/// Element OrientableSurface of type "http://www.opengis.net/gml/3.2":OrientableSurfaceType.
    gml__OrientableSurfaceType*          OrientableSurface              1;	///< Required element.
/// @brief A Polygon is a special surface that is defined by a single surface patch (see D.3.6). The boundary of this patch is coplanar and the polygon uses planar interpolation in its interior. The elements exterior and interior describe the surface boundary of the polygon.
/// Element Polygon of type "http://www.opengis.net/gml/3.2":PolygonType.
    gml__PolygonType*                    Polygon                        1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
/// @brief A Point is defined by a single coordinate tuple. The direct position of a point is specified by the pos element which is of type DirectPositionType.
/// Element Point of type "http://www.opengis.net/gml/3.2":PointType.
    gml__PointType*                      Point                          1;	///< Required element.
/// @brief The AbstractCurve element is the abstract head of the substitution group for all (continuous) curve elements.
/// Abstract element AbstractCurve of type "http://www.opengis.net/gml/3.2":AbstractCurveType.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractCurve"> with elements <CompositeCurve> <Curve> <OrientableCurve> <LineString>
/// @brief A gml:CompositeCurve is represented by a sequence of (orientable) curves such that each curve in the sequence terminates at the start point of the subsequent curve in the list. curveMember references or contains inline one curve in the composite curve. The curves are contiguous, the collection of curves is ordered. Therefore, if provided, the aggregationType attribute shall have the value "sequence".
/// Element CompositeCurve of type "http://www.opengis.net/gml/3.2":CompositeCurveType.
    gml__CompositeCurveType*             CompositeCurve                 1;	///< Required element.
/// @brief A curve is a 1-dimensional primitive. Curves are continuous, connected, and have a measurable length in terms of the coordinate system. A curve is composed of one or more curve segments. Each curve segment within a curve may be defined using a different interpolation method. The curve segments are connected to one another, with the end point of each segment except the last being the start point of the next segment in the segment list. The orientation of the curve is positive. The element segments encapsulates the segments of the curve.
/// Element Curve of type "http://www.opengis.net/gml/3.2":CurveType.
    gml__CurveType*                      Curve                          1;	///< Required element.
/// @brief OrientableCurve consists of a curve and an orientation. If the orientation is "+", then the OrientableCurve is identical to the baseCurve. If the orientation is "-", then the OrientableCurve is related to another AbstractCurve with a parameterization that reverses the sense of the curve traversal.
/// Element OrientableCurve of type "http://www.opengis.net/gml/3.2":OrientableCurveType.
    gml__OrientableCurveType*            OrientableCurve                1;	///< Required element.
/// @brief A LineString is a special curve that consists of a single segment with linear interpolation. It is defined by two or more coordinate tuples, with linear interpolation between them. The number of direct positions in the list shall be at least two.
/// Element LineString of type "http://www.opengis.net/gml/3.2":LineStringType.
    gml__LineStringType*                 LineString                     1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
//  END OF CHOICE OF SUBSTITUTIONS
/// Abstract element AbstractImplicitGeometry of type "http://www.opengis.net/gml/3.2":AbstractGeometryType.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractImplicitGeometry"> with elements <Grid>
/// @brief The gml:Grid implicitly defines an unrectified grid, which is a network composed of two or more sets of curves in which the members of each set intersect the members of the other sets in an algorithmic way. The region of interest within the grid is given in terms of its gml:limits, being the grid coordinates of diagonally opposed corners of a rectangular region. gml:axisLabels is provided with a list of labels of the axes of the grid (gml:axisName has been deprecated). gml:dimension specifies the dimension of the grid. The gml:limits element contains a single gml:GridEnvelope. The gml:low and gml:high property elements of the envelope are each integerLists, which are coordinate tuples, the coordinates being measured as offsets from the origin of the grid along each axis, of the diagonally opposing corners of a "rectangular" region of interest.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="Grid"> with elements <RectifiedGrid>
/// @brief The gml:Grid implicitly defines an unrectified grid, which is a network composed of two or more sets of curves in which the members of each set intersect the members of the other sets in an algorithmic way. The region of interest within the grid is given in terms of its gml:limits, being the grid coordinates of diagonally opposed corners of a rectangular region. gml:axisLabels is provided with a list of labels of the axes of the grid (gml:axisName has been deprecated). gml:dimension specifies the dimension of the grid. The gml:limits element contains a single gml:GridEnvelope. The gml:low and gml:high property elements of the envelope are each integerLists, which are coordinate tuples, the coordinates being measured as offsets from the origin of the grid along each axis, of the diagonally opposing corners of a "rectangular" region of interest.
/// Element Grid of type "http://www.opengis.net/gml/3.2":GridType.
    gml__GridType*                       Grid                           1;	///< Required element.
/// @brief A rectified grid is a grid for which there is an affine transformation between the grid coordinates and the coordinates of an external coordinate reference system. It is defined by specifying the position (in some geometric space) of the grid "origin" and of the vectors that specify the post locations. Note that the grid limits (post indexes) and axis name properties are inherited from gml:GridType and that gml:RectifiedGrid adds a gml:origin property (contains or references a gml:Point) and a set of gml:offsetVector properties.
/// Element RectifiedGrid of type "http://www.opengis.net/gml/3.2":RectifiedGridType.
    gml__RectifiedGridType*              RectifiedGrid                  1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
//  END OF CHOICE OF SUBSTITUTIONS
//  END OF CHOICE OF SUBSTITUTIONS
/// @brief gml:AbstractTimeObject acts as the head of a substitution group for all temporal primitives and complexes.
/// Reference "http://www.opengis.net/gml/3.2":AbstractTimeObject to abstract element.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractTimeObject"> with elements <AbstractTimePrimitive> <AbstractTimeComplex>
/// @brief gml:AbstractTimePrimitive acts as the head of a substitution group for geometric and topological temporal primitives.
/// Abstract element AbstractTimePrimitive of type "http://www.opengis.net/gml/3.2":AbstractTimePrimitiveType.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractTimePrimitive"> with elements <AbstractTimeGeometricPrimitive> <AbstractTimeTopologyPrimitive>
/// @brief gml:TimeGeometricPrimitive acts as the head of a substitution group for geometric temporal primitives. A temporal geometry shall be associated with a temporal reference system through the frame attribute that provides a URI reference that identifies a description of the reference system. Following ISO 19108, the Gregorian calendar with UTC is the default reference system, but others may also be used. The GPS calendar is an alternative reference systems in common use. The two geometric primitives in the temporal dimension are the instant and the period. GML components are defined to support these as follows.
/// Abstract element AbstractTimeGeometricPrimitive of type "http://www.opengis.net/gml/3.2":AbstractTimeGeometricPrimitiveType.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractTimeGeometricPrimitive"> with elements <TimeInstant> <TimePeriod>
/// @brief gml:TimeInstant acts as a zero-dimensional geometric primitive that represents an identifiable position in time.
/// Element TimeInstant of type "http://www.opengis.net/gml/3.2":TimeInstantType.
    gml__TimeInstantType*                TimeInstant                    1;	///< Required element.
/// @brief gml:TimePeriod acts as a one-dimensional geometric primitive that represents an identifiable extent in time. The location in of a gml:TimePeriod is described by the temporal positions of the instants at which it begins and ends. The length of the period is equal to the temporal distance between the two bounding temporal positions. Both beginning and end may be described in terms of their direct position using gml:TimePositionType which is an XML Schema simple content type, or by reference to an indentifiable time instant using gml:TimeInstantPropertyType. Alternatively a limit of a gml:TimePeriod may use the conventional GML property model to make a reference to a time instant described elsewhere, or a limit may be indicated as a direct position.
/// Element TimePeriod of type "http://www.opengis.net/gml/3.2":TimePeriodType.
    gml__TimePeriodType*                 TimePeriod                     1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
/// @brief gml:TimeTopologyPrimitive acts as the head of a substitution group for topological temporal primitives. Temporal topology primitives shall imply the ordering information between features or feature properties. The temporal connection of features can be examined if they have temporal topology primitives as values of their properties. Usually, an instantaneous feature associates with a time node, and a static feature associates with a time edge. A feature with both modes associates with the temporal topology primitive: a supertype of time nodes and time edges. A topological primitive is always connected to one or more other topological primitives, and is, therefore, always a member of a topological complex. In a GML instance, this will often be indicated by the primitives being described by elements that are descendents of an element describing a complex. However, in order to support the case where a temporal topological primitive is described in another context, the optional complex property is provided, which carries a reference to the parent temporal topological complex.
/// Abstract element AbstractTimeTopologyPrimitive of type "http://www.opengis.net/gml/3.2":AbstractTimeTopologyPrimitiveType.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractTimeTopologyPrimitive"> with elements <TimeNode> <TimeEdge>
/// @brief A time node is a zero-dimensional topological primitive that represents an identifiable node in time (it is equivalent to a point in space). A node may act as the termination or initiation of any number of time edges. A time node may be realised as a geometry, its position, whose value is a time instant.
/// Element TimeNode of type "http://www.opengis.net/gml/3.2":TimeNodeType.
    gml__TimeNodeType*                   TimeNode                       1;	///< Required element.
/// @brief A time edge is a one-dimensional topological primitive. It is an open interval that starts and ends at a node. The edge may be realised as a geometry whose value is a time period.
/// Element TimeEdge of type "http://www.opengis.net/gml/3.2":TimeEdgeType.
    gml__TimeEdgeType*                   TimeEdge                       1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
//  END OF CHOICE OF SUBSTITUTIONS
/// @brief gml:AbstractTimeComplex is an aggregation of temporal primitives and acts as the head of a substitution group for temporal complexes.
/// Abstract element AbstractTimeComplex of type "http://www.opengis.net/gml/3.2":AbstractTimeComplexType.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractTimeComplex"> with elements <TimeTopologyComplex>
/// @brief A temporal topology complex shall be the connected acyclic directed graph composed of temporal topological primitives, i.e. time nodes and time edges. Because a time edge may not exist without two time nodes on its boundaries, static features have time edges from a temporal topology complex as the values of their temporal properties, regardless of explicit declarations. A temporal topology complex expresses a linear or a non-linear graph. A temporal linear graph, composed of a sequence of time edges, provides a lineage described only by "substitution" of feature instances or feature element values. A time node as the start or the end of the graph connects with at least one time edge. A time node other than the start and the end shall connect to at least two time edges: one of starting from the node, and another ending at the node. A temporal topological complex is a set of connected temporal topological primitives. The member primtives are indicated, either by reference or by value, using the primitive property.
/// Element TimeTopologyComplex of type "http://www.opengis.net/gml/3.2":TimeTopologyComplexType.
    gml__TimeTopologyComplexType*        TimeTopologyComplex            1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
//  END OF CHOICE OF SUBSTITUTIONS
/// Element reference "http://www.opengis.net/gml/3.2":Null.
    gml__NilReasonType*                  Null                           1;	///< Required element.
    }                                    union_ValuePropertyType       ;
//  END OF CHOICE
//  END OF GROUP
    }>                                   __ValuePropertyType_sequence   0;
//  END OF SEQUENCE
/// Attribute nilReason of type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         remoteSchema                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
/// Attribute owns of type xs:boolean.
   @bool                                 owns                           0 = false;	///< Default value="false".
};

/// "http://www.opengis.net/gml/3.2":ValueArrayPropertyType is a complexType.
/// class gml__ValueArrayPropertyType operations:
/// - soap_new_gml__ValueArrayPropertyType(soap*) allocate
/// - soap_new_gml__ValueArrayPropertyType(soap*, int num) allocate array
/// - soap_new_req_gml__ValueArrayPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__ValueArrayPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__ValueArrayPropertyType(soap*, gml__ValueArrayPropertyType*) deserialize from a stream
/// - int soap_write_gml__ValueArrayPropertyType(soap, gml__ValueArrayPropertyType*) serialize to a stream
class gml__ValueArrayPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence maxOccurs="unbounded">
    std::vector<                                                       
    class __gml__ValueArrayPropertyType_sequence
    {
/// GROUP <xs:group name="Value">
/// @brief This is a convenience choice group which unifies generic values defined in this Clause with spatial and temporal objects and the measures described above, so that any of these may be used within aggregate values.
/// CHOICE <xs:choice>
   $int                                  __union_ValueArrayPropertyType;	///< Union _gml__union_ValueArrayPropertyType selector: set to SOAP_UNION__gml__union_ValueArrayPropertyType_<fieldname>
    union _gml__union_ValueArrayPropertyType
    {
/// @brief gml:AbstractValue is an abstract element which acts as the head of a substitution group which contains gml:AbstractScalarValue, gml:AbstractScalarValueList, gml:CompositeValue and gml:ValueExtent, and (transitively) the elements in their substitution groups. These elements may be used in an application schema as variables, so that in an XML instance document any member of its substitution group may occur.
/// Reference "http://www.opengis.net/gml/3.2":AbstractValue to abstract element.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractValue"> with elements <AbstractScalarValue> <AbstractScalarValueList> <CompositeValue> <CategoryExtent> <CountExtent> <QuantityExtent>
/// @brief gml:AbstractScalarValue is an abstract element which acts as the head of a substitution group which contains gml:Boolean, gml:Category, gml:Count and gml:Quantity, and (transitively) the elements in their substitution groups.
/// Abstract element AbstractScalarValue of type xs:anyType.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractScalarValue"> with elements <Boolean> <Category> <Count> <Quantity>
/// class _gml__ValueArrayPropertyType_Boolean operations:
/// - soap_new__gml__ValueArrayPropertyType_Boolean(soap*) allocate
/// - soap_new__gml__ValueArrayPropertyType_Boolean(soap*, int num) allocate array
/// - soap_new_req__gml__ValueArrayPropertyType_Boolean(soap*, ...) allocate, set required members
/// - soap_new_set__gml__ValueArrayPropertyType_Boolean(soap*, ...) allocate, set all public members
/// - int soap_read__gml__ValueArrayPropertyType_Boolean(soap*, _gml__ValueArrayPropertyType_Boolean*) deserialize from a stream
/// - int soap_write__gml__ValueArrayPropertyType_Boolean(soap, _gml__ValueArrayPropertyType_Boolean*) serialize to a stream
    class _gml__ValueArrayPropertyType_Boolean
    {
/// __item wraps 'xs:boolean' simpleContent.
    bool                                 __item                        ;
/// Attribute nilReason of type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
    }                                   *Boolean                       ;	///< Nillable pointer.
/// @brief A gml:Category has an optional XML attribute codeSpace, whose value is a URI which identifies a dictionary, codelist or authority for the term.
/// class _gml__ValueArrayPropertyType_Category operations:
/// - soap_new__gml__ValueArrayPropertyType_Category(soap*) allocate
/// - soap_new__gml__ValueArrayPropertyType_Category(soap*, int num) allocate array
/// - soap_new_req__gml__ValueArrayPropertyType_Category(soap*, ...) allocate, set required members
/// - soap_new_set__gml__ValueArrayPropertyType_Category(soap*, ...) allocate, set all public members
/// - int soap_read__gml__ValueArrayPropertyType_Category(soap*, _gml__ValueArrayPropertyType_Category*) deserialize from a stream
/// - int soap_write__gml__ValueArrayPropertyType_Category(soap, _gml__ValueArrayPropertyType_Category*) serialize to a stream
    class _gml__ValueArrayPropertyType_Category
    {
/// __item wraps 'xs:string' simpleContent.
    std::string                          __item                        ;
/// Attribute nilReason of type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute codeSpace of type xs:anyURI.
   @xsd__anyURI*                         codeSpace                      0;	///< Optional attribute.
    }                                   *Category                      ;	///< Nillable pointer.
/// class _gml__ValueArrayPropertyType_Count operations:
/// - soap_new__gml__ValueArrayPropertyType_Count(soap*) allocate
/// - soap_new__gml__ValueArrayPropertyType_Count(soap*, int num) allocate array
/// - soap_new_req__gml__ValueArrayPropertyType_Count(soap*, ...) allocate, set required members
/// - soap_new_set__gml__ValueArrayPropertyType_Count(soap*, ...) allocate, set all public members
/// - int soap_read__gml__ValueArrayPropertyType_Count(soap*, _gml__ValueArrayPropertyType_Count*) deserialize from a stream
/// - int soap_write__gml__ValueArrayPropertyType_Count(soap, _gml__ValueArrayPropertyType_Count*) serialize to a stream
    class _gml__ValueArrayPropertyType_Count
    {
/// __item wraps 'xs:integer' simpleContent.
    long                                 __item                        ;
/// Attribute nilReason of type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
    }                                   *Count                         ;	///< Nillable pointer.
/// @brief An XML attribute uom ("unit of measure") is required, whose value is a URI which identifies the definition of a ratio scale or units by which the numeric value shall be multiplied, or an interval or position scale on which the value occurs.
/// class _gml__ValueArrayPropertyType_Quantity operations:
/// - soap_new__gml__ValueArrayPropertyType_Quantity(soap*) allocate
/// - soap_new__gml__ValueArrayPropertyType_Quantity(soap*, int num) allocate array
/// - soap_new_req__gml__ValueArrayPropertyType_Quantity(soap*, ...) allocate, set required members
/// - soap_new_set__gml__ValueArrayPropertyType_Quantity(soap*, ...) allocate, set all public members
/// - int soap_read__gml__ValueArrayPropertyType_Quantity(soap*, _gml__ValueArrayPropertyType_Quantity*) deserialize from a stream
/// - int soap_write__gml__ValueArrayPropertyType_Quantity(soap, _gml__ValueArrayPropertyType_Quantity*) serialize to a stream
    class _gml__ValueArrayPropertyType_Quantity
    {
/// __item wraps 'xs:double' simpleContent.
    double                               __item                        ;
/// Attribute nilReason of type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute uom of type "http://www.opengis.net/gml/3.2":UomIdentifier.
   @gml__UomIdentifier                   uom                            1;	///< Required attribute.
    }                                   *Quantity                      ;	///< Nillable pointer.
//  END OF CHOICE OF SUBSTITUTIONS
/// @brief gml:AbstractScalarValueList is an abstract element which acts as the head of a substitution group which contains gml:BooleanList, gml:CategoryList, gml:CountList and gml:QuantityList, and (transitively) the elements in their substitution groups.
/// Abstract element AbstractScalarValueList of type xs:anyType.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractScalarValueList"> with elements <BooleanList> <CategoryList> <CountList> <QuantityList>
/// Element BooleanList of type "http://www.opengis.net/gml/3.2":booleanOrNilReasonList.
    gml__booleanOrNilReasonList*         BooleanList                    1;	///< Required element.
/// Element CategoryList of type "http://www.opengis.net/gml/3.2":CodeOrNilReasonListType.
    gml__CodeOrNilReasonListType*        CategoryList                   1;	///< Required element.
/// Element CountList of type "http://www.opengis.net/gml/3.2":integerOrNilReasonList.
    gml__integerOrNilReasonList*         CountList                      1;	///< Required element.
/// Element QuantityList of type "http://www.opengis.net/gml/3.2":MeasureOrNilReasonListType.
    gml__MeasureOrNilReasonListType*     QuantityList                   1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
/// @brief gml:CompositeValue is an aggregate value built from other values . It contains zero or an arbitrary number of gml:valueComponent elements, and zero or one gml:valueComponents property elements. It may be used for strongly coupled aggregates (vectors, tensors) or for arbitrary collections of values.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="CompositeValue"> with elements <ValueArray>
/// @brief gml:CompositeValue is an aggregate value built from other values . It contains zero or an arbitrary number of gml:valueComponent elements, and zero or one gml:valueComponents property elements. It may be used for strongly coupled aggregates (vectors, tensors) or for arbitrary collections of values.
/// Element CompositeValue of type "http://www.opengis.net/gml/3.2":CompositeValueType.
    gml__CompositeValueType*             CompositeValue                 1;	///< Required element.
/// @brief A Value Array is used for homogeneous arrays of primitive and aggregate values. The member values may be scalars, composites, arrays or lists. ValueArray has the same content model as CompositeValue, but the member values shall be homogeneous. The element declaration contains a Schematron constraint which expresses this restriction precisely. Since the members are homogeneous, the gml:referenceSystem (uom, codeSpace) may be specified on the gml:ValueArray itself and inherited by all the members if desired.
/// Element ValueArray of type "http://www.opengis.net/gml/3.2":ValueArrayType.
    gml__ValueArrayType*                 ValueArray                     1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
/// Element CategoryExtent of type "http://www.opengis.net/gml/3.2":CategoryExtentType.
    gml__CategoryExtentType*             CategoryExtent                 1;	///< Required element.
/// Element CountExtent of type "http://www.opengis.net/gml/3.2":CountExtentType.
    gml__CountExtentType*                CountExtent                    1;	///< Required element.
/// Element QuantityExtent of type "http://www.opengis.net/gml/3.2":QuantityExtentType.
    gml__QuantityExtentType*             QuantityExtent                 1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
/// @brief The AbstractGeometry element is the abstract head of the substitution group for all geometry elements of GML. This includes pre-defined and user-defined geometry elements. Any geometry element shall be a direct or indirect extension/restriction of AbstractGeometryType and shall be directly or indirectly in the substitution group of AbstractGeometry.
/// Reference "http://www.opengis.net/gml/3.2":AbstractGeometry to abstract element.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractGeometry"> with elements <GeometricComplex> <AbstractGeometricAggregate> <AbstractGeometricPrimitive> <AbstractImplicitGeometry>
/// Element GeometricComplex of type "http://www.opengis.net/gml/3.2":GeometricComplexType.
    gml__GeometricComplexType*           GeometricComplex               1;	///< Required element.
/// @brief gml:AbstractGeometricAggregate is the abstract head of the substitution group for all geometric aggregates.
/// Abstract element AbstractGeometricAggregate of type "http://www.opengis.net/gml/3.2":AbstractGeometricAggregateType.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractGeometricAggregate"> with elements <MultiGeometry> <MultiPoint> <MultiCurve> <MultiSurface> <MultiSolid>
/// @brief gml:MultiGeometry is a collection of one or more GML geometry objects of arbitrary type. The members of the geometric aggregate may be specified either using the "standard" property (gml:geometryMember) or the array property (gml:geometryMembers). It is also valid to use both the "standard" and the array properties in the same collection.
/// Element MultiGeometry of type "http://www.opengis.net/gml/3.2":MultiGeometryType.
    gml__MultiGeometryType*              MultiGeometry                  1;	///< Required element.
/// @brief A gml:MultiPoint consists of one or more gml:Points. The members of the geometric aggregate may be specified either using the "standard" property (gml:pointMember) or the array property (gml:pointMembers). It is also valid to use both the "standard" and the array properties in the same collection.
/// Element MultiPoint of type "http://www.opengis.net/gml/3.2":MultiPointType.
    gml__MultiPointType*                 MultiPoint                     1;	///< Required element.
/// @brief A gml:MultiCurve is defined by one or more gml:AbstractCurves. The members of the geometric aggregate may be specified either using the "standard" property (gml:curveMember) or the array property (gml:curveMembers). It is also valid to use both the "standard" and the array properties in the same collection.
/// Element MultiCurve of type "http://www.opengis.net/gml/3.2":MultiCurveType.
    gml__MultiCurveType*                 MultiCurve                     1;	///< Required element.
/// @brief A gml:MultiSurface is defined by one or more gml:AbstractSurfaces. The members of the geometric aggregate may be specified either using the "standard" property (gml:surfaceMember) or the array property (gml:surfaceMembers). It is also valid to use both the "standard" and the array properties in the same collection.
/// Element MultiSurface of type "http://www.opengis.net/gml/3.2":MultiSurfaceType.
    gml__MultiSurfaceType*               MultiSurface                   1;	///< Required element.
/// @brief A gml:MultiSolid is defined by one or more gml:AbstractSolids. The members of the geometric aggregate may be specified either using the "standard" property (gml:solidMember) or the array property (gml:solidMembers). It is also valid to use both the "standard" and the array properties in the same collection.
/// Element MultiSolid of type "http://www.opengis.net/gml/3.2":MultiSolidType.
    gml__MultiSolidType*                 MultiSolid                     1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
/// @brief The AbstractGeometricPrimitive element is the abstract head of the substitution group for all (pre- and user-defined) geometric primitives.
/// Abstract element AbstractGeometricPrimitive of type "http://www.opengis.net/gml/3.2":AbstractGeometricPrimitiveType.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractGeometricPrimitive"> with elements <AbstractSolid> <AbstractSurface> <Point> <AbstractCurve>
/// @brief The AbstractSolid element is the abstract head of the substituition group for all (continuous) solid elements.
/// Abstract element AbstractSolid of type "http://www.opengis.net/gml/3.2":AbstractSolidType.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractSolid"> with elements <CompositeSolid> <Solid>
/// @brief gml:CompositeSolid implements ISO 19107 GM_CompositeSolid (see ISO 19107:2003, 6.6.7) as specified in D.2.3.6. A gml:CompositeSolid is represented by a set of orientable surfaces. It is a geometry type with all the geometric properties of a (primitive) solid. Essentially, a composite solid is a collection of solids that join in pairs on common boundary surfaces and which, when considered as a whole, form a single solid. solidMember references or contains one solid in the composite solid. The solids are contiguous.
/// Element CompositeSolid of type "http://www.opengis.net/gml/3.2":CompositeSolidType.
    gml__CompositeSolidType*             CompositeSolid                 1;	///< Required element.
/// @brief A solid is the basis for 3-dimensional geometry. The extent of a solid is defined by the boundary surfaces as specified in ISO 19107:2003, 6.3.18. exterior specifies the outer boundary, interior the inner boundary of the solid.
/// Element Solid of type "http://www.opengis.net/gml/3.2":SolidType.
    gml__SolidType*                      Solid                          1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
/// @brief The AbstractSurface element is the abstract head of the substitution group for all (continuous) surface elements.
/// Abstract element AbstractSurface of type "http://www.opengis.net/gml/3.2":AbstractSurfaceType.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractSurface"> with elements <CompositeSurface> <Surface> <OrientableSurface> <Polygon>
/// @brief A gml:CompositeSurface is represented by a set of orientable surfaces. It is geometry type with all the geometric properties of a (primitive) surface. Essentially, a composite surface is a collection of surfaces that join in pairs on common boundary curves and which, when considered as a whole, form a single surface. surfaceMember references or contains inline one surface in the composite surface. The surfaces are contiguous.
/// Element CompositeSurface of type "http://www.opengis.net/gml/3.2":CompositeSurfaceType.
    gml__CompositeSurfaceType*           CompositeSurface               1;	///< Required element.
/// @brief A Surface is a 2-dimensional primitive and is composed of one or more surface patches as specified in ISO 19107:2003, 6.3.17.1. The surface patches are connected to one another. patches encapsulates the patches of the surface.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="Surface"> with elements <PolyhedralSurface> <TriangulatedSurface>
/// @brief A Surface is a 2-dimensional primitive and is composed of one or more surface patches as specified in ISO 19107:2003, 6.3.17.1. The surface patches are connected to one another. patches encapsulates the patches of the surface.
/// Element Surface of type "http://www.opengis.net/gml/3.2":SurfaceType.
    gml__SurfaceType*                    Surface                        1;	///< Required element.
/// @brief A polyhedral surface is a surface composed of polygon patches connected along their common boundary curves. This differs from the surface type only in the restriction on the types of surface patches acceptable. polygonPatches encapsulates the polygon patches of the polyhedral surface.
/// Element PolyhedralSurface of type "http://www.opengis.net/gml/3.2":SurfaceType.
    gml__SurfaceType*                    PolyhedralSurface              1;	///< Required element.
/// @brief A triangulated surface is a polyhedral surface that is composed only of triangles. There is no restriction on how the triangulation is derived. trianglePatches encapsulates the triangles of the triangulated surface.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="TriangulatedSurface"> with elements <Tin>
/// @brief A triangulated surface is a polyhedral surface that is composed only of triangles. There is no restriction on how the triangulation is derived. trianglePatches encapsulates the triangles of the triangulated surface.
/// Element TriangulatedSurface of type "http://www.opengis.net/gml/3.2":SurfaceType.
    gml__SurfaceType*                    TriangulatedSurface            1;	///< Required element.
/// @brief A tin is a triangulated surface that uses the Delauny algorithm or a similar algorithm complemented with consideration of stoplines (stopLines), breaklines (breakLines), and maximum length of triangle sides (maxLength). controlPoint shall contain a set of the positions (three or more) used as posts for this TIN (corners of the triangles in the TIN). See ISO 19107:2003, 6.4.39 for details.
/// Element Tin of type "http://www.opengis.net/gml/3.2":TinType.
    gml__TinType*                        Tin                            1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
//  END OF CHOICE OF SUBSTITUTIONS
/// @brief OrientableSurface consists of a surface and an orientation. If the orientation is "+", then the OrientableSurface is identical to the baseSurface. If the orientation is "-", then the OrientableSurface is a reference to a gml:AbstractSurface with an up-normal that reverses the direction for this OrientableSurface, the sense of "the top of the surface".
/// Element OrientableSurface of type "http://www.opengis.net/gml/3.2":OrientableSurfaceType.
    gml__OrientableSurfaceType*          OrientableSurface              1;	///< Required element.
/// @brief A Polygon is a special surface that is defined by a single surface patch (see D.3.6). The boundary of this patch is coplanar and the polygon uses planar interpolation in its interior. The elements exterior and interior describe the surface boundary of the polygon.
/// Element Polygon of type "http://www.opengis.net/gml/3.2":PolygonType.
    gml__PolygonType*                    Polygon                        1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
/// @brief A Point is defined by a single coordinate tuple. The direct position of a point is specified by the pos element which is of type DirectPositionType.
/// Element Point of type "http://www.opengis.net/gml/3.2":PointType.
    gml__PointType*                      Point                          1;	///< Required element.
/// @brief The AbstractCurve element is the abstract head of the substitution group for all (continuous) curve elements.
/// Abstract element AbstractCurve of type "http://www.opengis.net/gml/3.2":AbstractCurveType.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractCurve"> with elements <CompositeCurve> <Curve> <OrientableCurve> <LineString>
/// @brief A gml:CompositeCurve is represented by a sequence of (orientable) curves such that each curve in the sequence terminates at the start point of the subsequent curve in the list. curveMember references or contains inline one curve in the composite curve. The curves are contiguous, the collection of curves is ordered. Therefore, if provided, the aggregationType attribute shall have the value "sequence".
/// Element CompositeCurve of type "http://www.opengis.net/gml/3.2":CompositeCurveType.
    gml__CompositeCurveType*             CompositeCurve                 1;	///< Required element.
/// @brief A curve is a 1-dimensional primitive. Curves are continuous, connected, and have a measurable length in terms of the coordinate system. A curve is composed of one or more curve segments. Each curve segment within a curve may be defined using a different interpolation method. The curve segments are connected to one another, with the end point of each segment except the last being the start point of the next segment in the segment list. The orientation of the curve is positive. The element segments encapsulates the segments of the curve.
/// Element Curve of type "http://www.opengis.net/gml/3.2":CurveType.
    gml__CurveType*                      Curve                          1;	///< Required element.
/// @brief OrientableCurve consists of a curve and an orientation. If the orientation is "+", then the OrientableCurve is identical to the baseCurve. If the orientation is "-", then the OrientableCurve is related to another AbstractCurve with a parameterization that reverses the sense of the curve traversal.
/// Element OrientableCurve of type "http://www.opengis.net/gml/3.2":OrientableCurveType.
    gml__OrientableCurveType*            OrientableCurve                1;	///< Required element.
/// @brief A LineString is a special curve that consists of a single segment with linear interpolation. It is defined by two or more coordinate tuples, with linear interpolation between them. The number of direct positions in the list shall be at least two.
/// Element LineString of type "http://www.opengis.net/gml/3.2":LineStringType.
    gml__LineStringType*                 LineString                     1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
//  END OF CHOICE OF SUBSTITUTIONS
/// Abstract element AbstractImplicitGeometry of type "http://www.opengis.net/gml/3.2":AbstractGeometryType.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractImplicitGeometry"> with elements <Grid>
/// @brief The gml:Grid implicitly defines an unrectified grid, which is a network composed of two or more sets of curves in which the members of each set intersect the members of the other sets in an algorithmic way. The region of interest within the grid is given in terms of its gml:limits, being the grid coordinates of diagonally opposed corners of a rectangular region. gml:axisLabels is provided with a list of labels of the axes of the grid (gml:axisName has been deprecated). gml:dimension specifies the dimension of the grid. The gml:limits element contains a single gml:GridEnvelope. The gml:low and gml:high property elements of the envelope are each integerLists, which are coordinate tuples, the coordinates being measured as offsets from the origin of the grid along each axis, of the diagonally opposing corners of a "rectangular" region of interest.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="Grid"> with elements <RectifiedGrid>
/// @brief The gml:Grid implicitly defines an unrectified grid, which is a network composed of two or more sets of curves in which the members of each set intersect the members of the other sets in an algorithmic way. The region of interest within the grid is given in terms of its gml:limits, being the grid coordinates of diagonally opposed corners of a rectangular region. gml:axisLabels is provided with a list of labels of the axes of the grid (gml:axisName has been deprecated). gml:dimension specifies the dimension of the grid. The gml:limits element contains a single gml:GridEnvelope. The gml:low and gml:high property elements of the envelope are each integerLists, which are coordinate tuples, the coordinates being measured as offsets from the origin of the grid along each axis, of the diagonally opposing corners of a "rectangular" region of interest.
/// Element Grid of type "http://www.opengis.net/gml/3.2":GridType.
    gml__GridType*                       Grid                           1;	///< Required element.
/// @brief A rectified grid is a grid for which there is an affine transformation between the grid coordinates and the coordinates of an external coordinate reference system. It is defined by specifying the position (in some geometric space) of the grid "origin" and of the vectors that specify the post locations. Note that the grid limits (post indexes) and axis name properties are inherited from gml:GridType and that gml:RectifiedGrid adds a gml:origin property (contains or references a gml:Point) and a set of gml:offsetVector properties.
/// Element RectifiedGrid of type "http://www.opengis.net/gml/3.2":RectifiedGridType.
    gml__RectifiedGridType*              RectifiedGrid                  1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
//  END OF CHOICE OF SUBSTITUTIONS
//  END OF CHOICE OF SUBSTITUTIONS
/// @brief gml:AbstractTimeObject acts as the head of a substitution group for all temporal primitives and complexes.
/// Reference "http://www.opengis.net/gml/3.2":AbstractTimeObject to abstract element.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractTimeObject"> with elements <AbstractTimePrimitive> <AbstractTimeComplex>
/// @brief gml:AbstractTimePrimitive acts as the head of a substitution group for geometric and topological temporal primitives.
/// Abstract element AbstractTimePrimitive of type "http://www.opengis.net/gml/3.2":AbstractTimePrimitiveType.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractTimePrimitive"> with elements <AbstractTimeGeometricPrimitive> <AbstractTimeTopologyPrimitive>
/// @brief gml:TimeGeometricPrimitive acts as the head of a substitution group for geometric temporal primitives. A temporal geometry shall be associated with a temporal reference system through the frame attribute that provides a URI reference that identifies a description of the reference system. Following ISO 19108, the Gregorian calendar with UTC is the default reference system, but others may also be used. The GPS calendar is an alternative reference systems in common use. The two geometric primitives in the temporal dimension are the instant and the period. GML components are defined to support these as follows.
/// Abstract element AbstractTimeGeometricPrimitive of type "http://www.opengis.net/gml/3.2":AbstractTimeGeometricPrimitiveType.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractTimeGeometricPrimitive"> with elements <TimeInstant> <TimePeriod>
/// @brief gml:TimeInstant acts as a zero-dimensional geometric primitive that represents an identifiable position in time.
/// Element TimeInstant of type "http://www.opengis.net/gml/3.2":TimeInstantType.
    gml__TimeInstantType*                TimeInstant                    1;	///< Required element.
/// @brief gml:TimePeriod acts as a one-dimensional geometric primitive that represents an identifiable extent in time. The location in of a gml:TimePeriod is described by the temporal positions of the instants at which it begins and ends. The length of the period is equal to the temporal distance between the two bounding temporal positions. Both beginning and end may be described in terms of their direct position using gml:TimePositionType which is an XML Schema simple content type, or by reference to an indentifiable time instant using gml:TimeInstantPropertyType. Alternatively a limit of a gml:TimePeriod may use the conventional GML property model to make a reference to a time instant described elsewhere, or a limit may be indicated as a direct position.
/// Element TimePeriod of type "http://www.opengis.net/gml/3.2":TimePeriodType.
    gml__TimePeriodType*                 TimePeriod                     1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
/// @brief gml:TimeTopologyPrimitive acts as the head of a substitution group for topological temporal primitives. Temporal topology primitives shall imply the ordering information between features or feature properties. The temporal connection of features can be examined if they have temporal topology primitives as values of their properties. Usually, an instantaneous feature associates with a time node, and a static feature associates with a time edge. A feature with both modes associates with the temporal topology primitive: a supertype of time nodes and time edges. A topological primitive is always connected to one or more other topological primitives, and is, therefore, always a member of a topological complex. In a GML instance, this will often be indicated by the primitives being described by elements that are descendents of an element describing a complex. However, in order to support the case where a temporal topological primitive is described in another context, the optional complex property is provided, which carries a reference to the parent temporal topological complex.
/// Abstract element AbstractTimeTopologyPrimitive of type "http://www.opengis.net/gml/3.2":AbstractTimeTopologyPrimitiveType.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractTimeTopologyPrimitive"> with elements <TimeNode> <TimeEdge>
/// @brief A time node is a zero-dimensional topological primitive that represents an identifiable node in time (it is equivalent to a point in space). A node may act as the termination or initiation of any number of time edges. A time node may be realised as a geometry, its position, whose value is a time instant.
/// Element TimeNode of type "http://www.opengis.net/gml/3.2":TimeNodeType.
    gml__TimeNodeType*                   TimeNode                       1;	///< Required element.
/// @brief A time edge is a one-dimensional topological primitive. It is an open interval that starts and ends at a node. The edge may be realised as a geometry whose value is a time period.
/// Element TimeEdge of type "http://www.opengis.net/gml/3.2":TimeEdgeType.
    gml__TimeEdgeType*                   TimeEdge                       1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
//  END OF CHOICE OF SUBSTITUTIONS
/// @brief gml:AbstractTimeComplex is an aggregation of temporal primitives and acts as the head of a substitution group for temporal complexes.
/// Abstract element AbstractTimeComplex of type "http://www.opengis.net/gml/3.2":AbstractTimeComplexType.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractTimeComplex"> with elements <TimeTopologyComplex>
/// @brief A temporal topology complex shall be the connected acyclic directed graph composed of temporal topological primitives, i.e. time nodes and time edges. Because a time edge may not exist without two time nodes on its boundaries, static features have time edges from a temporal topology complex as the values of their temporal properties, regardless of explicit declarations. A temporal topology complex expresses a linear or a non-linear graph. A temporal linear graph, composed of a sequence of time edges, provides a lineage described only by "substitution" of feature instances or feature element values. A time node as the start or the end of the graph connects with at least one time edge. A time node other than the start and the end shall connect to at least two time edges: one of starting from the node, and another ending at the node. A temporal topological complex is a set of connected temporal topological primitives. The member primtives are indicated, either by reference or by value, using the primitive property.
/// Element TimeTopologyComplex of type "http://www.opengis.net/gml/3.2":TimeTopologyComplexType.
    gml__TimeTopologyComplexType*        TimeTopologyComplex            1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
//  END OF CHOICE OF SUBSTITUTIONS
/// Element reference "http://www.opengis.net/gml/3.2":Null.
    gml__NilReasonType*                  Null                           1;	///< Required element.
    }                                    union_ValueArrayPropertyType  ;
//  END OF CHOICE
//  END OF GROUP
    }>                                   __ValueArrayPropertyType_sequence;
//  END OF SEQUENCE
/// Attribute owns of type xs:boolean.
   @bool                                 owns                           0 = false;	///< Default value="false".
};

/// "http://www.opengis.net/gml/3.2":BooleanPropertyType is a complexType.
/// class gml__BooleanPropertyType operations:
/// - soap_new_gml__BooleanPropertyType(soap*) allocate
/// - soap_new_gml__BooleanPropertyType(soap*, int num) allocate array
/// - soap_new_req_gml__BooleanPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__BooleanPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__BooleanPropertyType(soap*, gml__BooleanPropertyType*) deserialize from a stream
/// - int soap_write_gml__BooleanPropertyType(soap, gml__BooleanPropertyType*) serialize to a stream
class gml__BooleanPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gml__BooleanPropertyType_sequence
    {
/// Element reference "http://www.opengis.net/gml/3.2":Boolean.
    _gml__Boolean*                       Boolean                        1;	///< Required element.
    }>                                   __BooleanPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute nilReason of type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         remoteSchema                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.opengis.net/gml/3.2":CategoryPropertyType is a complexType.
/// class gml__CategoryPropertyType operations:
/// - soap_new_gml__CategoryPropertyType(soap*) allocate
/// - soap_new_gml__CategoryPropertyType(soap*, int num) allocate array
/// - soap_new_req_gml__CategoryPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__CategoryPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__CategoryPropertyType(soap*, gml__CategoryPropertyType*) deserialize from a stream
/// - int soap_write_gml__CategoryPropertyType(soap, gml__CategoryPropertyType*) serialize to a stream
class gml__CategoryPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gml__CategoryPropertyType_sequence
    {
/// @brief A gml:Category has an optional XML attribute codeSpace, whose value is a URI which identifies a dictionary, codelist or authority for the term.
/// Element reference "http://www.opengis.net/gml/3.2":Category.
    _gml__Category*                      Category                       1;	///< Required element.
    }>                                   __CategoryPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute nilReason of type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         remoteSchema                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.opengis.net/gml/3.2":QuantityPropertyType is a complexType.
/// class gml__QuantityPropertyType operations:
/// - soap_new_gml__QuantityPropertyType(soap*) allocate
/// - soap_new_gml__QuantityPropertyType(soap*, int num) allocate array
/// - soap_new_req_gml__QuantityPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__QuantityPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__QuantityPropertyType(soap*, gml__QuantityPropertyType*) deserialize from a stream
/// - int soap_write_gml__QuantityPropertyType(soap, gml__QuantityPropertyType*) serialize to a stream
class gml__QuantityPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gml__QuantityPropertyType_sequence
    {
/// @brief An XML attribute uom ("unit of measure") is required, whose value is a URI which identifies the definition of a ratio scale or units by which the numeric value shall be multiplied, or an interval or position scale on which the value occurs.
/// Element reference "http://www.opengis.net/gml/3.2":Quantity.
    _gml__Quantity*                      Quantity                       1;	///< Required element.
    }>                                   __QuantityPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute nilReason of type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         remoteSchema                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.opengis.net/gml/3.2":CountPropertyType is a complexType.
/// class gml__CountPropertyType operations:
/// - soap_new_gml__CountPropertyType(soap*) allocate
/// - soap_new_gml__CountPropertyType(soap*, int num) allocate array
/// - soap_new_req_gml__CountPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__CountPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__CountPropertyType(soap*, gml__CountPropertyType*) deserialize from a stream
/// - int soap_write_gml__CountPropertyType(soap, gml__CountPropertyType*) serialize to a stream
class gml__CountPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gml__CountPropertyType_sequence
    {
/// Element reference "http://www.opengis.net/gml/3.2":Count.
    _gml__Count*                         Count                          1;	///< Required element.
    }>                                   __CountPropertyType_sequence   0;
//  END OF SEQUENCE
/// Attribute nilReason of type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         remoteSchema                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.opengis.net/gml/3.2":GridLimitsType is a complexType.
/// class gml__GridLimitsType operations:
/// - soap_new_gml__GridLimitsType(soap*) allocate
/// - soap_new_gml__GridLimitsType(soap*, int num) allocate array
/// - soap_new_req_gml__GridLimitsType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__GridLimitsType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__GridLimitsType(soap*, gml__GridLimitsType*) deserialize from a stream
/// - int soap_write_gml__GridLimitsType(soap, gml__GridLimitsType*) serialize to a stream
class gml__GridLimitsType : public xsd__anyType
{ public:
/// Element GridEnvelope of type "http://www.opengis.net/gml/3.2":GridEnvelopeType.
    gml__GridEnvelopeType*               GridEnvelope                   1;	///< Required element.
};

/// "http://www.opengis.net/gml/3.2":GridEnvelopeType is a complexType.
/// class gml__GridEnvelopeType operations:
/// - soap_new_gml__GridEnvelopeType(soap*) allocate
/// - soap_new_gml__GridEnvelopeType(soap*, int num) allocate array
/// - soap_new_req_gml__GridEnvelopeType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__GridEnvelopeType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__GridEnvelopeType(soap*, gml__GridEnvelopeType*) deserialize from a stream
/// - int soap_write_gml__GridEnvelopeType(soap, gml__GridEnvelopeType*) serialize to a stream
class gml__GridEnvelopeType : public xsd__anyType
{ public:
/// Element low of type "http://www.opengis.net/gml/3.2":integerList.
    gml__integerList                     low                            1;	///< Required element.
/// Element high of type "http://www.opengis.net/gml/3.2":integerList.
    gml__integerList                     high                           1;	///< Required element.
};

/// "http://www.opengis.net/gml/3.2":SingleCRSPropertyType is a complexType.
/// @brief gml:SingleCRSPropertyType is a property type for association roles to a single coordinate reference system, either referencing or containing the definition of that coordinate reference system.
/// class gml__SingleCRSPropertyType operations:
/// - soap_new_gml__SingleCRSPropertyType(soap*) allocate
/// - soap_new_gml__SingleCRSPropertyType(soap*, int num) allocate array
/// - soap_new_req_gml__SingleCRSPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__SingleCRSPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__SingleCRSPropertyType(soap*, gml__SingleCRSPropertyType*) deserialize from a stream
/// - int soap_write_gml__SingleCRSPropertyType(soap, gml__SingleCRSPropertyType*) serialize to a stream
class gml__SingleCRSPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gml__SingleCRSPropertyType_sequence
    {
/// @brief gml:AbstractSingleCRS implements a coordinate reference system consisting of one coordinate system and one datum (as opposed to a Compound CRS).
/// Reference "http://www.opengis.net/gml/3.2":AbstractSingleCRS to abstract element.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractSingleCRS"> with elements <AbstractGeneralDerivedCRS> <GeodeticCRS> <VerticalCRS> <EngineeringCRS> <ImageCRS> <TemporalCRS> <GeographicCRS> <GeocentricCRS>
   $int                                  __unionAbstractSingleCRS       0;	///< Union _gml__union_SingleCRSPropertyType selector: set to SOAP_UNION__gml__union_SingleCRSPropertyType_<fieldname>
/// Union for substitutionGroup="AbstractSingleCRS"
    union _gml__union_SingleCRSPropertyType
    {
/// @brief gml:AbstractGeneralDerivedCRS is a coordinate reference system that is defined by its coordinate conversion from another coordinate reference system. This abstract complex type shall not be used, extended, or restricted, in a GML Application Schema, to define a concrete subtype with a meaning equivalent to a concrete subtype specified in this document.
/// Abstract element AbstractGeneralDerivedCRS of type "http://www.opengis.net/gml/3.2":AbstractGeneralDerivedCRSType.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractGeneralDerivedCRS"> with elements <ProjectedCRS> <DerivedCRS>
/// @brief gml:ProjectedCRS is a 2D coordinate reference system used to approximate the shape of the earth on a planar surface, but in such a way that the distortion that is inherent to the approximation is carefully controlled and known. Distortion correction is commonly applied to calculated bearings and distances to produce values that are a close match to actual field values.
/// Element ProjectedCRS of type "http://www.opengis.net/gml/3.2":ProjectedCRSType.
    gml__ProjectedCRSType*               ProjectedCRS                   1;	///< Required element.
/// @brief gml:DerivedCRS is a single coordinate reference system that is defined by its coordinate conversion from another single coordinate reference system known as the base CRS. The base CRS can be a projected coordinate reference system, if this DerivedCRS is used for a georectified grid coverage as described in ISO 19123, Clause 8.
/// Element DerivedCRS of type "http://www.opengis.net/gml/3.2":DerivedCRSType.
    gml__DerivedCRSType*                 DerivedCRS                     1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
/// Element GeodeticCRS of type "http://www.opengis.net/gml/3.2":GeodeticCRSType.
    gml__GeodeticCRSType*                GeodeticCRS                    1;	///< Required element.
/// @brief gml:VerticalCRS is a 1D coordinate reference system used for recording heights or depths. Vertical CRSs make use of the direction of gravity to define the concept of height or depth, but the relationship with gravity may not be straightforward. By implication, ellipsoidal heights (h) cannot be captured in a vertical coordinate reference system. Ellipsoidal heights cannot exist independently, but only as an inseparable part of a 3D coordinate tuple defined in a geographic 3D coordinate reference system.
/// Element VerticalCRS of type "http://www.opengis.net/gml/3.2":VerticalCRSType.
    gml__VerticalCRSType*                VerticalCRS                    1;	///< Required element.
/// @brief gml:EngineeringCRS is a contextually local coordinate reference system which can be divided into two broad categories: - earth-fixed systems applied to engineering activities on or near the surface of the earth; - CRSs on moving platforms such as road vehicles, vessels, aircraft, or spacecraft, see ISO 19111 8.3.
/// Element EngineeringCRS of type "http://www.opengis.net/gml/3.2":EngineeringCRSType.
    gml__EngineeringCRSType*             EngineeringCRS                 1;	///< Required element.
/// @brief gml:ImageCRS is an engineering coordinate reference system applied to locations in images. Image coordinate reference systems are treated as a separate sub-type because the definition of the associated image datum contains two attributes not relevant to other engineering datums.
/// Element ImageCRS of type "http://www.opengis.net/gml/3.2":ImageCRSType.
    gml__ImageCRSType*                   ImageCRS                       1;	///< Required element.
/// @brief gml:TemporalCRS is a 1D coordinate reference system used for the recording of time.
/// Element TemporalCRS of type "http://www.opengis.net/gml/3.2":TemporalCRSType.
    gml__TemporalCRSType*                TemporalCRS                    1;	///< Required element.
/// Element GeographicCRS of type "http://www.opengis.net/gml/3.2":GeographicCRSType.
    gml__GeographicCRSType*              GeographicCRS                  1;	///< Required element.
/// Element GeocentricCRS of type "http://www.opengis.net/gml/3.2":GeocentricCRSType.
    gml__GeocentricCRSType*              GeocentricCRS                  1;	///< Required element.
    }                                    __union_SingleCRSPropertyType ;
//  END OF CHOICE OF SUBSTITUTIONS
    }>                                   __SingleCRSPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute nilReason of type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         remoteSchema                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.opengis.net/gml/3.2":CompoundCRSPropertyType is a complexType.
/// @brief gml:CompoundCRSPropertyType is a property type for association roles to a compound coordinate reference system, either referencing or containing the definition of that reference system.
/// class gml__CompoundCRSPropertyType operations:
/// - soap_new_gml__CompoundCRSPropertyType(soap*) allocate
/// - soap_new_gml__CompoundCRSPropertyType(soap*, int num) allocate array
/// - soap_new_req_gml__CompoundCRSPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__CompoundCRSPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__CompoundCRSPropertyType(soap*, gml__CompoundCRSPropertyType*) deserialize from a stream
/// - int soap_write_gml__CompoundCRSPropertyType(soap, gml__CompoundCRSPropertyType*) serialize to a stream
class gml__CompoundCRSPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gml__CompoundCRSPropertyType_sequence
    {
/// @brief gml:CompundCRS is a coordinate reference system describing the position of points through two or more independent coordinate reference systems. It is associated with a non-repeating sequence of two or more instances of SingleCRS.
/// Element reference "http://www.opengis.net/gml/3.2":CompoundCRS.
    gml__CompoundCRSType*                CompoundCRS                    1;	///< Required element.
    }>                                   __CompoundCRSPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute nilReason of type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         remoteSchema                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.opengis.net/gml/3.2":GeodeticCRSPropertyType is a complexType.
/// @brief gml:GeodeticCRSPropertyType is a property type for association roles to a geodetic coordinate reference system, either referencing or containing the definition of that reference system.
/// class gml__GeodeticCRSPropertyType operations:
/// - soap_new_gml__GeodeticCRSPropertyType(soap*) allocate
/// - soap_new_gml__GeodeticCRSPropertyType(soap*, int num) allocate array
/// - soap_new_req_gml__GeodeticCRSPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__GeodeticCRSPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__GeodeticCRSPropertyType(soap*, gml__GeodeticCRSPropertyType*) deserialize from a stream
/// - int soap_write_gml__GeodeticCRSPropertyType(soap, gml__GeodeticCRSPropertyType*) serialize to a stream
class gml__GeodeticCRSPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gml__GeodeticCRSPropertyType_sequence
    {
/// Element reference "http://www.opengis.net/gml/3.2":GeodeticCRS.
    gml__GeodeticCRSType*                GeodeticCRS                    1;	///< Required element.
    }>                                   __GeodeticCRSPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute nilReason of type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         remoteSchema                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.opengis.net/gml/3.2":VerticalCRSPropertyType is a complexType.
/// @brief gml:VerticalCRSPropertyType is a property type for association roles to a vertical coordinate reference system, either referencing or containing the definition of that reference system.
/// class gml__VerticalCRSPropertyType operations:
/// - soap_new_gml__VerticalCRSPropertyType(soap*) allocate
/// - soap_new_gml__VerticalCRSPropertyType(soap*, int num) allocate array
/// - soap_new_req_gml__VerticalCRSPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__VerticalCRSPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__VerticalCRSPropertyType(soap*, gml__VerticalCRSPropertyType*) deserialize from a stream
/// - int soap_write_gml__VerticalCRSPropertyType(soap, gml__VerticalCRSPropertyType*) serialize to a stream
class gml__VerticalCRSPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gml__VerticalCRSPropertyType_sequence
    {
/// @brief gml:VerticalCRS is a 1D coordinate reference system used for recording heights or depths. Vertical CRSs make use of the direction of gravity to define the concept of height or depth, but the relationship with gravity may not be straightforward. By implication, ellipsoidal heights (h) cannot be captured in a vertical coordinate reference system. Ellipsoidal heights cannot exist independently, but only as an inseparable part of a 3D coordinate tuple defined in a geographic 3D coordinate reference system.
/// Element reference "http://www.opengis.net/gml/3.2":VerticalCRS.
    gml__VerticalCRSType*                VerticalCRS                    1;	///< Required element.
    }>                                   __VerticalCRSPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute nilReason of type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         remoteSchema                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.opengis.net/gml/3.2":ProjectedCRSPropertyType is a complexType.
/// @brief gml:ProjectedCRSPropertyType is a property type for association roles to a projected coordinate reference system, either referencing or containing the definition of that reference system.
/// class gml__ProjectedCRSPropertyType operations:
/// - soap_new_gml__ProjectedCRSPropertyType(soap*) allocate
/// - soap_new_gml__ProjectedCRSPropertyType(soap*, int num) allocate array
/// - soap_new_req_gml__ProjectedCRSPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__ProjectedCRSPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__ProjectedCRSPropertyType(soap*, gml__ProjectedCRSPropertyType*) deserialize from a stream
/// - int soap_write_gml__ProjectedCRSPropertyType(soap, gml__ProjectedCRSPropertyType*) serialize to a stream
class gml__ProjectedCRSPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gml__ProjectedCRSPropertyType_sequence
    {
/// @brief gml:ProjectedCRS is a 2D coordinate reference system used to approximate the shape of the earth on a planar surface, but in such a way that the distortion that is inherent to the approximation is carefully controlled and known. Distortion correction is commonly applied to calculated bearings and distances to produce values that are a close match to actual field values.
/// Element reference "http://www.opengis.net/gml/3.2":ProjectedCRS.
    gml__ProjectedCRSType*               ProjectedCRS                   1;	///< Required element.
    }>                                   __ProjectedCRSPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute nilReason of type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         remoteSchema                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.opengis.net/gml/3.2":DerivedCRSPropertyType is a complexType.
/// @brief gml:DerivedCRSPropertyType is a property type for association roles to a non-projected derived coordinate reference system, either referencing or containing the definition of that reference system.
/// class gml__DerivedCRSPropertyType operations:
/// - soap_new_gml__DerivedCRSPropertyType(soap*) allocate
/// - soap_new_gml__DerivedCRSPropertyType(soap*, int num) allocate array
/// - soap_new_req_gml__DerivedCRSPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__DerivedCRSPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__DerivedCRSPropertyType(soap*, gml__DerivedCRSPropertyType*) deserialize from a stream
/// - int soap_write_gml__DerivedCRSPropertyType(soap, gml__DerivedCRSPropertyType*) serialize to a stream
class gml__DerivedCRSPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gml__DerivedCRSPropertyType_sequence
    {
/// @brief gml:DerivedCRS is a single coordinate reference system that is defined by its coordinate conversion from another single coordinate reference system known as the base CRS. The base CRS can be a projected coordinate reference system, if this DerivedCRS is used for a georectified grid coverage as described in ISO 19123, Clause 8.
/// Element reference "http://www.opengis.net/gml/3.2":DerivedCRS.
    gml__DerivedCRSType*                 DerivedCRS                     1;	///< Required element.
    }>                                   __DerivedCRSPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute nilReason of type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         remoteSchema                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.opengis.net/gml/3.2":EngineeringCRSPropertyType is a complexType.
/// @brief gml:EngineeringCRSPropertyType is a property type for association roles to an engineering coordinate reference system, either referencing or containing the definition of that reference system.
/// class gml__EngineeringCRSPropertyType operations:
/// - soap_new_gml__EngineeringCRSPropertyType(soap*) allocate
/// - soap_new_gml__EngineeringCRSPropertyType(soap*, int num) allocate array
/// - soap_new_req_gml__EngineeringCRSPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__EngineeringCRSPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__EngineeringCRSPropertyType(soap*, gml__EngineeringCRSPropertyType*) deserialize from a stream
/// - int soap_write_gml__EngineeringCRSPropertyType(soap, gml__EngineeringCRSPropertyType*) serialize to a stream
class gml__EngineeringCRSPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gml__EngineeringCRSPropertyType_sequence
    {
/// @brief gml:EngineeringCRS is a contextually local coordinate reference system which can be divided into two broad categories: - earth-fixed systems applied to engineering activities on or near the surface of the earth; - CRSs on moving platforms such as road vehicles, vessels, aircraft, or spacecraft, see ISO 19111 8.3.
/// Element reference "http://www.opengis.net/gml/3.2":EngineeringCRS.
    gml__EngineeringCRSType*             EngineeringCRS                 1;	///< Required element.
    }>                                   __EngineeringCRSPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute nilReason of type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         remoteSchema                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.opengis.net/gml/3.2":ImageCRSPropertyType is a complexType.
/// @brief gml:ImageCRSPropertyType is a property type for association roles to an image coordinate reference system, either referencing or containing the definition of that reference system.
/// class gml__ImageCRSPropertyType operations:
/// - soap_new_gml__ImageCRSPropertyType(soap*) allocate
/// - soap_new_gml__ImageCRSPropertyType(soap*, int num) allocate array
/// - soap_new_req_gml__ImageCRSPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__ImageCRSPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__ImageCRSPropertyType(soap*, gml__ImageCRSPropertyType*) deserialize from a stream
/// - int soap_write_gml__ImageCRSPropertyType(soap, gml__ImageCRSPropertyType*) serialize to a stream
class gml__ImageCRSPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gml__ImageCRSPropertyType_sequence
    {
/// @brief gml:ImageCRS is an engineering coordinate reference system applied to locations in images. Image coordinate reference systems are treated as a separate sub-type because the definition of the associated image datum contains two attributes not relevant to other engineering datums.
/// Element reference "http://www.opengis.net/gml/3.2":ImageCRS.
    gml__ImageCRSType*                   ImageCRS                       1;	///< Required element.
    }>                                   __ImageCRSPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute nilReason of type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         remoteSchema                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.opengis.net/gml/3.2":TemporalCRSPropertyType is a complexType.
/// @brief gml:TemporalCRSPropertyType is a property type for association roles to a temporal coordinate reference system, either referencing or containing the definition of that reference system.
/// class gml__TemporalCRSPropertyType operations:
/// - soap_new_gml__TemporalCRSPropertyType(soap*) allocate
/// - soap_new_gml__TemporalCRSPropertyType(soap*, int num) allocate array
/// - soap_new_req_gml__TemporalCRSPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__TemporalCRSPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__TemporalCRSPropertyType(soap*, gml__TemporalCRSPropertyType*) deserialize from a stream
/// - int soap_write_gml__TemporalCRSPropertyType(soap, gml__TemporalCRSPropertyType*) serialize to a stream
class gml__TemporalCRSPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gml__TemporalCRSPropertyType_sequence
    {
/// @brief gml:TemporalCRS is a 1D coordinate reference system used for the recording of time.
/// Element reference "http://www.opengis.net/gml/3.2":TemporalCRS.
    gml__TemporalCRSType*                TemporalCRS                    1;	///< Required element.
    }>                                   __TemporalCRSPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute nilReason of type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         remoteSchema                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.opengis.net/gml/3.2":CoordinateSystemAxisPropertyType is a complexType.
/// @brief gml:CoordinateSystemAxisPropertyType is a property type for association roles to a coordinate system axis, either referencing or containing the definition of that axis.
/// class gml__CoordinateSystemAxisPropertyType operations:
/// - soap_new_gml__CoordinateSystemAxisPropertyType(soap*) allocate
/// - soap_new_gml__CoordinateSystemAxisPropertyType(soap*, int num) allocate array
/// - soap_new_req_gml__CoordinateSystemAxisPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__CoordinateSystemAxisPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__CoordinateSystemAxisPropertyType(soap*, gml__CoordinateSystemAxisPropertyType*) deserialize from a stream
/// - int soap_write_gml__CoordinateSystemAxisPropertyType(soap, gml__CoordinateSystemAxisPropertyType*) serialize to a stream
class gml__CoordinateSystemAxisPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gml__CoordinateSystemAxisPropertyType_sequence
    {
/// @brief gml:CoordinateSystemAxis is a definition of a coordinate system axis.
/// Element reference "http://www.opengis.net/gml/3.2":CoordinateSystemAxis.
    gml__CoordinateSystemAxisType*       CoordinateSystemAxis           1;	///< Required element.
    }>                                   __CoordinateSystemAxisPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute nilReason of type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         remoteSchema                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.opengis.net/gml/3.2":CoordinateSystemPropertyType is a complexType.
/// @brief gml:CoordinateSystemPropertyType is a property type for association roles to a coordinate system, either referencing or containing the definition of that coordinate system.
/// class gml__CoordinateSystemPropertyType operations:
/// - soap_new_gml__CoordinateSystemPropertyType(soap*) allocate
/// - soap_new_gml__CoordinateSystemPropertyType(soap*, int num) allocate array
/// - soap_new_req_gml__CoordinateSystemPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__CoordinateSystemPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__CoordinateSystemPropertyType(soap*, gml__CoordinateSystemPropertyType*) deserialize from a stream
/// - int soap_write_gml__CoordinateSystemPropertyType(soap, gml__CoordinateSystemPropertyType*) serialize to a stream
class gml__CoordinateSystemPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gml__CoordinateSystemPropertyType_sequence
    {
/// @brief gml:AbstractCoordinateSystem is a coordinate system (CS) is the non-repeating sequence of coordinate system axes that spans a given coordinate space. A CS is derived from a set of mathematical rules for specifying how coordinates in a given space are to be assigned to points. The coordinate values in a coordinate tuple shall be recorded in the order in which the coordinate system axes associations are recorded. This abstract complex type shall not be used, extended, or restricted, in an Application Schema, to define a concrete subtype with a meaning equivalent to a concrete subtype specified in this document.
/// Reference "http://www.opengis.net/gml/3.2":AbstractCoordinateSystem to abstract element.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractCoordinateSystem"> with elements <EllipsoidalCS> <CartesianCS> <VerticalCS> <TimeCS> <LinearCS> <UserDefinedCS> <SphericalCS> <PolarCS> <CylindricalCS> <AffineCS> <TemporalCS> <ObliqueCartesianCS>
   $int                                  __unionAbstractCoordinateSystem 0;	///< Union _gml__union_CoordinateSystemPropertyType selector: set to SOAP_UNION__gml__union_CoordinateSystemPropertyType_<fieldname>
/// Union for substitutionGroup="AbstractCoordinateSystem"
    union _gml__union_CoordinateSystemPropertyType
    {
/// @brief gml:EllipsoidalCS is a two- or three-dimensional coordinate system in which position is specified by geodetic latitude, geodetic longitude, and (in the three-dimensional case) ellipsoidal height. An EllipsoidalCS shall have two or three gml:axis property elements; the number of associations shall equal the dimension of the CS.
/// Element EllipsoidalCS of type "http://www.opengis.net/gml/3.2":EllipsoidalCSType.
    gml__EllipsoidalCSType*              EllipsoidalCS                  1;	///< Required element.
/// @brief gml:CartesianCS is a 1-, 2-, or 3-dimensional coordinate system. In the 1-dimensional case, it contains a single straight coordinate axis. In the 2- and 3-dimensional cases gives the position of points relative to orthogonal straight axes. In the multi-dimensional case, all axes shall have the same length unit of measure. A CartesianCS shall have one, two, or three gml:axis property elements.
/// Element CartesianCS of type "http://www.opengis.net/gml/3.2":CartesianCSType.
    gml__CartesianCSType*                CartesianCS                    1;	///< Required element.
/// @brief gml:VerticalCS is a one-dimensional coordinate system used to record the heights or depths of points. Such a coordinate system is usually dependent on the Earth's gravity field, perhaps loosely as when atmospheric pressure is the basis for the vertical coordinate system axis. A VerticalCS shall have one gml:axis property element.
/// Element VerticalCS of type "http://www.opengis.net/gml/3.2":VerticalCSType.
    gml__VerticalCSType*                 VerticalCS                     1;	///< Required element.
/// @brief gml:TimeCS is a one-dimensional coordinate system containing a time axis, used to describe the temporal position of a point in the specified time units from a specified time origin. A TimeCS shall have one gml:axis property element.
/// Element TimeCS of type "http://www.opengis.net/gml/3.2":TimeCSType.
    gml__TimeCSType*                     TimeCS                         1;	///< Required element.
/// @brief gml:LinearCS is a one-dimensional coordinate system that consists of the points that lie on the single axis described. The associated coordinate is the distance with or without offset from the specified datum to the point along the axis. A LinearCS shall have one gml:axis property element.
/// Element LinearCS of type "http://www.opengis.net/gml/3.2":LinearCSType.
    gml__LinearCSType*                   LinearCS                       1;	///< Required element.
/// @brief gml:UserDefinedCS is a two- or three-dimensional coordinate system that consists of any combination of coordinate axes not covered by any other coordinate system type. A UserDefinedCS shall have two or three gml:axis property elements; the number of property elements shall equal the dimension of the CS.
/// Element UserDefinedCS of type "http://www.opengis.net/gml/3.2":UserDefinedCSType.
    gml__UserDefinedCSType*              UserDefinedCS                  1;	///< Required element.
/// @brief gml:SphericalCS is a three-dimensional coordinate system with one distance measured from the origin and two angular coordinates. A SphericalCS shall have three gml:axis property elements.
/// Element SphericalCS of type "http://www.opengis.net/gml/3.2":SphericalCSType.
    gml__SphericalCSType*                SphericalCS                    1;	///< Required element.
/// @brief gml:PolarCS ia s two-dimensional coordinate system in which position is specified by the distance from the origin and the angle between the line from the origin to a point and a reference direction. A PolarCS shall have two gml:axis property elements.
/// Element PolarCS of type "http://www.opengis.net/gml/3.2":PolarCSType.
    gml__PolarCSType*                    PolarCS                        1;	///< Required element.
/// @brief gml:CylindricalCS is a three-dimensional coordinate system consisting of a polar coordinate system extended by a straight coordinate axis perpendicular to the plane spanned by the polar coordinate system. A CylindricalCS shall have three gml:axis property elements.
/// Element CylindricalCS of type "http://www.opengis.net/gml/3.2":CylindricalCSType.
    gml__CylindricalCSType*              CylindricalCS                  1;	///< Required element.
/// @brief gml:AffineCS is a two- or three-dimensional coordinate system with straight axes that are not necessarily orthogonal. An AffineCS shall have two or three gml:axis property elements; the number of property elements shall equal the dimension of the CS.
/// Element AffineCS of type "http://www.opengis.net/gml/3.2":AffineCSType.
    gml__AffineCSType*                   AffineCS                       1;	///< Required element.
/// Element TemporalCS of type "http://www.opengis.net/gml/3.2":TemporalCSType.
    gml__TemporalCSType*                 TemporalCS                     1;	///< Required element.
/// Element ObliqueCartesianCS of type "http://www.opengis.net/gml/3.2":ObliqueCartesianCSType.
    gml__ObliqueCartesianCSType*         ObliqueCartesianCS             1;	///< Required element.
    }                                    __union_CoordinateSystemPropertyType;
//  END OF CHOICE OF SUBSTITUTIONS
    }>                                   __CoordinateSystemPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute nilReason of type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         remoteSchema                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.opengis.net/gml/3.2":EllipsoidalCSPropertyType is a complexType.
/// @brief gml:EllipsoidalCSPropertyType is a property type for association roles to an ellipsoidal coordinate system, either referencing or containing the definition of that coordinate system.
/// class gml__EllipsoidalCSPropertyType operations:
/// - soap_new_gml__EllipsoidalCSPropertyType(soap*) allocate
/// - soap_new_gml__EllipsoidalCSPropertyType(soap*, int num) allocate array
/// - soap_new_req_gml__EllipsoidalCSPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__EllipsoidalCSPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__EllipsoidalCSPropertyType(soap*, gml__EllipsoidalCSPropertyType*) deserialize from a stream
/// - int soap_write_gml__EllipsoidalCSPropertyType(soap, gml__EllipsoidalCSPropertyType*) serialize to a stream
class gml__EllipsoidalCSPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gml__EllipsoidalCSPropertyType_sequence
    {
/// @brief gml:EllipsoidalCS is a two- or three-dimensional coordinate system in which position is specified by geodetic latitude, geodetic longitude, and (in the three-dimensional case) ellipsoidal height. An EllipsoidalCS shall have two or three gml:axis property elements; the number of associations shall equal the dimension of the CS.
/// Element reference "http://www.opengis.net/gml/3.2":EllipsoidalCS.
    gml__EllipsoidalCSType*              EllipsoidalCS                  1;	///< Required element.
    }>                                   __EllipsoidalCSPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute nilReason of type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         remoteSchema                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.opengis.net/gml/3.2":CartesianCSPropertyType is a complexType.
/// @brief gml:CartesianCSPropertyType is a property type for association roles to a Cartesian coordinate system, either referencing or containing the definition of that coordinate system.
/// class gml__CartesianCSPropertyType operations:
/// - soap_new_gml__CartesianCSPropertyType(soap*) allocate
/// - soap_new_gml__CartesianCSPropertyType(soap*, int num) allocate array
/// - soap_new_req_gml__CartesianCSPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__CartesianCSPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__CartesianCSPropertyType(soap*, gml__CartesianCSPropertyType*) deserialize from a stream
/// - int soap_write_gml__CartesianCSPropertyType(soap, gml__CartesianCSPropertyType*) serialize to a stream
class gml__CartesianCSPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gml__CartesianCSPropertyType_sequence
    {
/// @brief gml:CartesianCS is a 1-, 2-, or 3-dimensional coordinate system. In the 1-dimensional case, it contains a single straight coordinate axis. In the 2- and 3-dimensional cases gives the position of points relative to orthogonal straight axes. In the multi-dimensional case, all axes shall have the same length unit of measure. A CartesianCS shall have one, two, or three gml:axis property elements.
/// Element reference "http://www.opengis.net/gml/3.2":CartesianCS.
    gml__CartesianCSType*                CartesianCS                    1;	///< Required element.
    }>                                   __CartesianCSPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute nilReason of type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         remoteSchema                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.opengis.net/gml/3.2":VerticalCSPropertyType is a complexType.
/// @brief gml:VerticalCSPropertyType is a property type for association roles to a vertical coordinate system, either referencing or containing the definition of that coordinate system.
/// class gml__VerticalCSPropertyType operations:
/// - soap_new_gml__VerticalCSPropertyType(soap*) allocate
/// - soap_new_gml__VerticalCSPropertyType(soap*, int num) allocate array
/// - soap_new_req_gml__VerticalCSPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__VerticalCSPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__VerticalCSPropertyType(soap*, gml__VerticalCSPropertyType*) deserialize from a stream
/// - int soap_write_gml__VerticalCSPropertyType(soap, gml__VerticalCSPropertyType*) serialize to a stream
class gml__VerticalCSPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gml__VerticalCSPropertyType_sequence
    {
/// @brief gml:VerticalCS is a one-dimensional coordinate system used to record the heights or depths of points. Such a coordinate system is usually dependent on the Earth's gravity field, perhaps loosely as when atmospheric pressure is the basis for the vertical coordinate system axis. A VerticalCS shall have one gml:axis property element.
/// Element reference "http://www.opengis.net/gml/3.2":VerticalCS.
    gml__VerticalCSType*                 VerticalCS                     1;	///< Required element.
    }>                                   __VerticalCSPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute nilReason of type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         remoteSchema                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.opengis.net/gml/3.2":TimeCSPropertyType is a complexType.
/// @brief gml:TimeCSPropertyType is a property type for association roles to a time coordinate system, either referencing or containing the definition of that coordinate system.
/// class gml__TimeCSPropertyType operations:
/// - soap_new_gml__TimeCSPropertyType(soap*) allocate
/// - soap_new_gml__TimeCSPropertyType(soap*, int num) allocate array
/// - soap_new_req_gml__TimeCSPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__TimeCSPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__TimeCSPropertyType(soap*, gml__TimeCSPropertyType*) deserialize from a stream
/// - int soap_write_gml__TimeCSPropertyType(soap, gml__TimeCSPropertyType*) serialize to a stream
class gml__TimeCSPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gml__TimeCSPropertyType_sequence
    {
/// @brief gml:TimeCS is a one-dimensional coordinate system containing a time axis, used to describe the temporal position of a point in the specified time units from a specified time origin. A TimeCS shall have one gml:axis property element.
/// Element reference "http://www.opengis.net/gml/3.2":TimeCS.
    gml__TimeCSType*                     TimeCS                         1;	///< Required element.
    }>                                   __TimeCSPropertyType_sequence  0;
//  END OF SEQUENCE
/// Attribute nilReason of type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         remoteSchema                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.opengis.net/gml/3.2":LinearCSPropertyType is a complexType.
/// @brief gml:LinearCSPropertyType is a property type for association roles to a linear coordinate system, either referencing or containing the definition of that coordinate system.
/// class gml__LinearCSPropertyType operations:
/// - soap_new_gml__LinearCSPropertyType(soap*) allocate
/// - soap_new_gml__LinearCSPropertyType(soap*, int num) allocate array
/// - soap_new_req_gml__LinearCSPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__LinearCSPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__LinearCSPropertyType(soap*, gml__LinearCSPropertyType*) deserialize from a stream
/// - int soap_write_gml__LinearCSPropertyType(soap, gml__LinearCSPropertyType*) serialize to a stream
class gml__LinearCSPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gml__LinearCSPropertyType_sequence
    {
/// @brief gml:LinearCS is a one-dimensional coordinate system that consists of the points that lie on the single axis described. The associated coordinate is the distance with or without offset from the specified datum to the point along the axis. A LinearCS shall have one gml:axis property element.
/// Element reference "http://www.opengis.net/gml/3.2":LinearCS.
    gml__LinearCSType*                   LinearCS                       1;	///< Required element.
    }>                                   __LinearCSPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute nilReason of type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         remoteSchema                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.opengis.net/gml/3.2":UserDefinedCSPropertyType is a complexType.
/// @brief gml:UserDefinedCSPropertyType is a property type for association roles to a user-defined coordinate system, either referencing or containing the definition of that coordinate system.
/// class gml__UserDefinedCSPropertyType operations:
/// - soap_new_gml__UserDefinedCSPropertyType(soap*) allocate
/// - soap_new_gml__UserDefinedCSPropertyType(soap*, int num) allocate array
/// - soap_new_req_gml__UserDefinedCSPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__UserDefinedCSPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__UserDefinedCSPropertyType(soap*, gml__UserDefinedCSPropertyType*) deserialize from a stream
/// - int soap_write_gml__UserDefinedCSPropertyType(soap, gml__UserDefinedCSPropertyType*) serialize to a stream
class gml__UserDefinedCSPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gml__UserDefinedCSPropertyType_sequence
    {
/// @brief gml:UserDefinedCS is a two- or three-dimensional coordinate system that consists of any combination of coordinate axes not covered by any other coordinate system type. A UserDefinedCS shall have two or three gml:axis property elements; the number of property elements shall equal the dimension of the CS.
/// Element reference "http://www.opengis.net/gml/3.2":UserDefinedCS.
    gml__UserDefinedCSType*              UserDefinedCS                  1;	///< Required element.
    }>                                   __UserDefinedCSPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute nilReason of type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         remoteSchema                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.opengis.net/gml/3.2":SphericalCSPropertyType is a complexType.
/// @brief gml:SphericalCSPropertyType is property type for association roles to a spherical coordinate system, either referencing or containing the definition of that coordinate system.
/// class gml__SphericalCSPropertyType operations:
/// - soap_new_gml__SphericalCSPropertyType(soap*) allocate
/// - soap_new_gml__SphericalCSPropertyType(soap*, int num) allocate array
/// - soap_new_req_gml__SphericalCSPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__SphericalCSPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__SphericalCSPropertyType(soap*, gml__SphericalCSPropertyType*) deserialize from a stream
/// - int soap_write_gml__SphericalCSPropertyType(soap, gml__SphericalCSPropertyType*) serialize to a stream
class gml__SphericalCSPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gml__SphericalCSPropertyType_sequence
    {
/// @brief gml:SphericalCS is a three-dimensional coordinate system with one distance measured from the origin and two angular coordinates. A SphericalCS shall have three gml:axis property elements.
/// Element reference "http://www.opengis.net/gml/3.2":SphericalCS.
    gml__SphericalCSType*                SphericalCS                    1;	///< Required element.
    }>                                   __SphericalCSPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute nilReason of type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         remoteSchema                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.opengis.net/gml/3.2":PolarCSPropertyType is a complexType.
/// @brief gml:PolarCSPropertyType is a property type for association roles to a polar coordinate system, either referencing or containing the definition of that coordinate system.
/// class gml__PolarCSPropertyType operations:
/// - soap_new_gml__PolarCSPropertyType(soap*) allocate
/// - soap_new_gml__PolarCSPropertyType(soap*, int num) allocate array
/// - soap_new_req_gml__PolarCSPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__PolarCSPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__PolarCSPropertyType(soap*, gml__PolarCSPropertyType*) deserialize from a stream
/// - int soap_write_gml__PolarCSPropertyType(soap, gml__PolarCSPropertyType*) serialize to a stream
class gml__PolarCSPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gml__PolarCSPropertyType_sequence
    {
/// @brief gml:PolarCS ia s two-dimensional coordinate system in which position is specified by the distance from the origin and the angle between the line from the origin to a point and a reference direction. A PolarCS shall have two gml:axis property elements.
/// Element reference "http://www.opengis.net/gml/3.2":PolarCS.
    gml__PolarCSType*                    PolarCS                        1;	///< Required element.
    }>                                   __PolarCSPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute nilReason of type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         remoteSchema                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.opengis.net/gml/3.2":CylindricalCSPropertyType is a complexType.
/// @brief gml:CylindricalCSPropertyType is a property type for association roles to a cylindrical coordinate system, either referencing or containing the definition of that coordinate system.
/// class gml__CylindricalCSPropertyType operations:
/// - soap_new_gml__CylindricalCSPropertyType(soap*) allocate
/// - soap_new_gml__CylindricalCSPropertyType(soap*, int num) allocate array
/// - soap_new_req_gml__CylindricalCSPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__CylindricalCSPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__CylindricalCSPropertyType(soap*, gml__CylindricalCSPropertyType*) deserialize from a stream
/// - int soap_write_gml__CylindricalCSPropertyType(soap, gml__CylindricalCSPropertyType*) serialize to a stream
class gml__CylindricalCSPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gml__CylindricalCSPropertyType_sequence
    {
/// @brief gml:CylindricalCS is a three-dimensional coordinate system consisting of a polar coordinate system extended by a straight coordinate axis perpendicular to the plane spanned by the polar coordinate system. A CylindricalCS shall have three gml:axis property elements.
/// Element reference "http://www.opengis.net/gml/3.2":CylindricalCS.
    gml__CylindricalCSType*              CylindricalCS                  1;	///< Required element.
    }>                                   __CylindricalCSPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute nilReason of type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         remoteSchema                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.opengis.net/gml/3.2":AffineCSPropertyType is a complexType.
/// @brief gml:AffineCSPropertyType is a property type for association roles to an affine coordinate system, either referencing or containing the definition of that coordinate system.
/// class gml__AffineCSPropertyType operations:
/// - soap_new_gml__AffineCSPropertyType(soap*) allocate
/// - soap_new_gml__AffineCSPropertyType(soap*, int num) allocate array
/// - soap_new_req_gml__AffineCSPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__AffineCSPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__AffineCSPropertyType(soap*, gml__AffineCSPropertyType*) deserialize from a stream
/// - int soap_write_gml__AffineCSPropertyType(soap, gml__AffineCSPropertyType*) serialize to a stream
class gml__AffineCSPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gml__AffineCSPropertyType_sequence
    {
/// @brief gml:AffineCS is a two- or three-dimensional coordinate system with straight axes that are not necessarily orthogonal. An AffineCS shall have two or three gml:axis property elements; the number of property elements shall equal the dimension of the CS.
/// Element reference "http://www.opengis.net/gml/3.2":AffineCS.
    gml__AffineCSType*                   AffineCS                       1;	///< Required element.
    }>                                   __AffineCSPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute nilReason of type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         remoteSchema                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.opengis.net/gml/3.2":CRSPropertyType is a complexType.
/// @brief gml:CRSPropertyType is a property type for association roles to a CRS abstract coordinate reference system, either referencing or containing the definition of that CRS.
/// class gml__CRSPropertyType operations:
/// - soap_new_gml__CRSPropertyType(soap*) allocate
/// - soap_new_gml__CRSPropertyType(soap*, int num) allocate array
/// - soap_new_req_gml__CRSPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__CRSPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__CRSPropertyType(soap*, gml__CRSPropertyType*) deserialize from a stream
/// - int soap_write_gml__CRSPropertyType(soap, gml__CRSPropertyType*) serialize to a stream
class gml__CRSPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gml__CRSPropertyType_sequence
    {
/// @brief gml:AbstractCRS specifies a coordinate reference system which is usually single but may be compound. This abstract complex type shall not be used, extended, or restricted, in a GML Application Schema, to define a concrete subtype with a meaning equivalent to a concrete subtype specified in this document.
/// Reference "http://www.opengis.net/gml/3.2":AbstractCRS to abstract element.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractCRS"> with elements <AbstractSingleCRS> <CompoundCRS>
   $int                                  __unionAbstractCRS             0;	///< Union _gml__union_CRSPropertyType selector: set to SOAP_UNION__gml__union_CRSPropertyType_<fieldname>
/// Union for substitutionGroup="AbstractCRS"
    union _gml__union_CRSPropertyType
    {
/// @brief gml:AbstractSingleCRS implements a coordinate reference system consisting of one coordinate system and one datum (as opposed to a Compound CRS).
/// Abstract element AbstractSingleCRS of type "http://www.opengis.net/gml/3.2":AbstractCRSType.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractSingleCRS"> with elements <AbstractGeneralDerivedCRS> <GeodeticCRS> <VerticalCRS> <EngineeringCRS> <ImageCRS> <TemporalCRS> <GeographicCRS> <GeocentricCRS>
/// @brief gml:AbstractGeneralDerivedCRS is a coordinate reference system that is defined by its coordinate conversion from another coordinate reference system. This abstract complex type shall not be used, extended, or restricted, in a GML Application Schema, to define a concrete subtype with a meaning equivalent to a concrete subtype specified in this document.
/// Abstract element AbstractGeneralDerivedCRS of type "http://www.opengis.net/gml/3.2":AbstractGeneralDerivedCRSType.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractGeneralDerivedCRS"> with elements <ProjectedCRS> <DerivedCRS>
/// @brief gml:ProjectedCRS is a 2D coordinate reference system used to approximate the shape of the earth on a planar surface, but in such a way that the distortion that is inherent to the approximation is carefully controlled and known. Distortion correction is commonly applied to calculated bearings and distances to produce values that are a close match to actual field values.
/// Element ProjectedCRS of type "http://www.opengis.net/gml/3.2":ProjectedCRSType.
    gml__ProjectedCRSType*               ProjectedCRS                   1;	///< Required element.
/// @brief gml:DerivedCRS is a single coordinate reference system that is defined by its coordinate conversion from another single coordinate reference system known as the base CRS. The base CRS can be a projected coordinate reference system, if this DerivedCRS is used for a georectified grid coverage as described in ISO 19123, Clause 8.
/// Element DerivedCRS of type "http://www.opengis.net/gml/3.2":DerivedCRSType.
    gml__DerivedCRSType*                 DerivedCRS                     1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
/// Element GeodeticCRS of type "http://www.opengis.net/gml/3.2":GeodeticCRSType.
    gml__GeodeticCRSType*                GeodeticCRS                    1;	///< Required element.
/// @brief gml:VerticalCRS is a 1D coordinate reference system used for recording heights or depths. Vertical CRSs make use of the direction of gravity to define the concept of height or depth, but the relationship with gravity may not be straightforward. By implication, ellipsoidal heights (h) cannot be captured in a vertical coordinate reference system. Ellipsoidal heights cannot exist independently, but only as an inseparable part of a 3D coordinate tuple defined in a geographic 3D coordinate reference system.
/// Element VerticalCRS of type "http://www.opengis.net/gml/3.2":VerticalCRSType.
    gml__VerticalCRSType*                VerticalCRS                    1;	///< Required element.
/// @brief gml:EngineeringCRS is a contextually local coordinate reference system which can be divided into two broad categories: - earth-fixed systems applied to engineering activities on or near the surface of the earth; - CRSs on moving platforms such as road vehicles, vessels, aircraft, or spacecraft, see ISO 19111 8.3.
/// Element EngineeringCRS of type "http://www.opengis.net/gml/3.2":EngineeringCRSType.
    gml__EngineeringCRSType*             EngineeringCRS                 1;	///< Required element.
/// @brief gml:ImageCRS is an engineering coordinate reference system applied to locations in images. Image coordinate reference systems are treated as a separate sub-type because the definition of the associated image datum contains two attributes not relevant to other engineering datums.
/// Element ImageCRS of type "http://www.opengis.net/gml/3.2":ImageCRSType.
    gml__ImageCRSType*                   ImageCRS                       1;	///< Required element.
/// @brief gml:TemporalCRS is a 1D coordinate reference system used for the recording of time.
/// Element TemporalCRS of type "http://www.opengis.net/gml/3.2":TemporalCRSType.
    gml__TemporalCRSType*                TemporalCRS                    1;	///< Required element.
/// Element GeographicCRS of type "http://www.opengis.net/gml/3.2":GeographicCRSType.
    gml__GeographicCRSType*              GeographicCRS                  1;	///< Required element.
/// Element GeocentricCRS of type "http://www.opengis.net/gml/3.2":GeocentricCRSType.
    gml__GeocentricCRSType*              GeocentricCRS                  1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
/// @brief gml:CompundCRS is a coordinate reference system describing the position of points through two or more independent coordinate reference systems. It is associated with a non-repeating sequence of two or more instances of SingleCRS.
/// Element CompoundCRS of type "http://www.opengis.net/gml/3.2":CompoundCRSType.
    gml__CompoundCRSType*                CompoundCRS                    1;	///< Required element.
    }                                    __union_CRSPropertyType       ;
//  END OF CHOICE OF SUBSTITUTIONS
    }>                                   __CRSPropertyType_sequence     0;
//  END OF SEQUENCE
/// Attribute nilReason of type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         remoteSchema                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.opengis.net/gml/3.2":DatumPropertyType is a complexType.
/// @brief gml:DatumPropertyType is a property type for association roles to a datum, either referencing or containing the definition of that datum.
/// class gml__DatumPropertyType operations:
/// - soap_new_gml__DatumPropertyType(soap*) allocate
/// - soap_new_gml__DatumPropertyType(soap*, int num) allocate array
/// - soap_new_req_gml__DatumPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__DatumPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__DatumPropertyType(soap*, gml__DatumPropertyType*) deserialize from a stream
/// - int soap_write_gml__DatumPropertyType(soap, gml__DatumPropertyType*) serialize to a stream
class gml__DatumPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gml__DatumPropertyType_sequence
    {
/// @brief A gml:AbstractDatum specifies the relationship of a coordinate system to the earth, thus creating a coordinate reference system. A datum uses a parameter or set of parameters that determine the location of the origin of the coordinate reference system. Each datum subtype may be associated with only specific types of coordinate systems. This abstract complex type shall not be used, extended, or restricted, in a GML Application Schema, to define a concrete subtype with a meaning equivalent to a concrete subtype specified in this document.
/// Reference "http://www.opengis.net/gml/3.2":AbstractDatum to abstract element.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractDatum"> with elements <GeodeticDatum> <EngineeringDatum> <ImageDatum> <VerticalDatum> <TemporalDatum>
   $int                                  __unionAbstractDatum           0;	///< Union _gml__union_DatumPropertyType selector: set to SOAP_UNION__gml__union_DatumPropertyType_<fieldname>
/// Union for substitutionGroup="AbstractDatum"
    union _gml__union_DatumPropertyType
    {
/// @brief gml:GeodeticDatum is a geodetic datum defines the precise location and orientation in 3-dimensional space of a defined ellipsoid (or sphere), or of a Cartesian coordinate system centered in this ellipsoid (or sphere).
/// Element GeodeticDatum of type "http://www.opengis.net/gml/3.2":GeodeticDatumType.
    gml__GeodeticDatumType*              GeodeticDatum                  1;	///< Required element.
/// @brief gml:EngineeringDatum defines the origin of an engineering coordinate reference system, and is used in a region around that origin. This origin may be fixed with respect to the earth (such as a defined point at a construction site), or be a defined point on a moving vehicle (such as on a ship or satellite).
/// Element EngineeringDatum of type "http://www.opengis.net/gml/3.2":EngineeringDatumType.
    gml__EngineeringDatumType*           EngineeringDatum               1;	///< Required element.
/// @brief gml:ImageDatum defines the origin of an image coordinate reference system, and is used in a local context only. For an image datum, the anchor definition is usually either the centre of the image or the corner of the image. For more information, see ISO 19111 B.3.5.
/// Element ImageDatum of type "http://www.opengis.net/gml/3.2":ImageDatumType.
    gml__ImageDatumType*                 ImageDatum                     1;	///< Required element.
/// @brief gml:VerticalDatum is a textual description and/or a set of parameters identifying a particular reference level surface used as a zero-height surface, including its position with respect to the Earth for any of the height types recognized by this International Standard.
/// Element VerticalDatum of type "http://www.opengis.net/gml/3.2":VerticalDatumType.
    gml__VerticalDatumType*              VerticalDatum                  1;	///< Required element.
/// @brief A gml:TemporalDatum defines the origin of a Temporal Reference System. This type omits the "anchorDefinition" and "realizationEpoch" elements and adds the "origin" element with the dateTime type.
/// Element TemporalDatum of type "http://www.opengis.net/gml/3.2":TemporalDatumType.
    gml__TemporalDatumType*              TemporalDatum                  1;	///< Required element.
    }                                    __union_DatumPropertyType     ;
//  END OF CHOICE OF SUBSTITUTIONS
    }>                                   __DatumPropertyType_sequence   0;
//  END OF SEQUENCE
/// Attribute nilReason of type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         remoteSchema                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.opengis.net/gml/3.2":GeodeticDatumPropertyType is a complexType.
/// @brief gml:GeodeticDatumPropertyType is a property type for association roles to a geodetic datum, either referencing or containing the definition of that datum.
/// class gml__GeodeticDatumPropertyType operations:
/// - soap_new_gml__GeodeticDatumPropertyType(soap*) allocate
/// - soap_new_gml__GeodeticDatumPropertyType(soap*, int num) allocate array
/// - soap_new_req_gml__GeodeticDatumPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__GeodeticDatumPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__GeodeticDatumPropertyType(soap*, gml__GeodeticDatumPropertyType*) deserialize from a stream
/// - int soap_write_gml__GeodeticDatumPropertyType(soap, gml__GeodeticDatumPropertyType*) serialize to a stream
class gml__GeodeticDatumPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gml__GeodeticDatumPropertyType_sequence
    {
/// @brief gml:GeodeticDatum is a geodetic datum defines the precise location and orientation in 3-dimensional space of a defined ellipsoid (or sphere), or of a Cartesian coordinate system centered in this ellipsoid (or sphere).
/// Element reference "http://www.opengis.net/gml/3.2":GeodeticDatum.
    gml__GeodeticDatumType*              GeodeticDatum                  1;	///< Required element.
    }>                                   __GeodeticDatumPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute nilReason of type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         remoteSchema                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.opengis.net/gml/3.2":EllipsoidPropertyType is a complexType.
/// @brief gml:EllipsoidPropertyType is a property type for association roles to an ellipsoid, either referencing or containing the definition of that ellipsoid.
/// class gml__EllipsoidPropertyType operations:
/// - soap_new_gml__EllipsoidPropertyType(soap*) allocate
/// - soap_new_gml__EllipsoidPropertyType(soap*, int num) allocate array
/// - soap_new_req_gml__EllipsoidPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__EllipsoidPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__EllipsoidPropertyType(soap*, gml__EllipsoidPropertyType*) deserialize from a stream
/// - int soap_write_gml__EllipsoidPropertyType(soap, gml__EllipsoidPropertyType*) serialize to a stream
class gml__EllipsoidPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gml__EllipsoidPropertyType_sequence
    {
/// @brief A gml:Ellipsoid is a geometric figure that may be used to describe the approximate shape of the earth. In mathematical terms, it is a surface formed by the rotation of an ellipse about its minor axis.
/// Element reference "http://www.opengis.net/gml/3.2":Ellipsoid.
    gml__EllipsoidType*                  Ellipsoid                      1;	///< Required element.
    }>                                   __EllipsoidPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute nilReason of type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         remoteSchema                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.opengis.net/gml/3.2":PrimeMeridianPropertyType is a complexType.
/// @brief gml:PrimeMeridianPropertyType is a property type for association roles to a prime meridian, either referencing or containing the definition of that meridian.
/// class gml__PrimeMeridianPropertyType operations:
/// - soap_new_gml__PrimeMeridianPropertyType(soap*) allocate
/// - soap_new_gml__PrimeMeridianPropertyType(soap*, int num) allocate array
/// - soap_new_req_gml__PrimeMeridianPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__PrimeMeridianPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__PrimeMeridianPropertyType(soap*, gml__PrimeMeridianPropertyType*) deserialize from a stream
/// - int soap_write_gml__PrimeMeridianPropertyType(soap, gml__PrimeMeridianPropertyType*) serialize to a stream
class gml__PrimeMeridianPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gml__PrimeMeridianPropertyType_sequence
    {
/// @brief A gml:PrimeMeridian defines the origin from which longitude values are determined. The default value for the prime meridian gml:identifier value is "Greenwich".
/// Element reference "http://www.opengis.net/gml/3.2":PrimeMeridian.
    gml__PrimeMeridianType*              PrimeMeridian                  1;	///< Required element.
    }>                                   __PrimeMeridianPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute nilReason of type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         remoteSchema                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.opengis.net/gml/3.2":EngineeringDatumPropertyType is a complexType.
/// @brief gml:EngineeringDatumPropertyType is a property type for association roles to an engineering datum, either referencing or containing the definition of that datum.
/// class gml__EngineeringDatumPropertyType operations:
/// - soap_new_gml__EngineeringDatumPropertyType(soap*) allocate
/// - soap_new_gml__EngineeringDatumPropertyType(soap*, int num) allocate array
/// - soap_new_req_gml__EngineeringDatumPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__EngineeringDatumPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__EngineeringDatumPropertyType(soap*, gml__EngineeringDatumPropertyType*) deserialize from a stream
/// - int soap_write_gml__EngineeringDatumPropertyType(soap, gml__EngineeringDatumPropertyType*) serialize to a stream
class gml__EngineeringDatumPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gml__EngineeringDatumPropertyType_sequence
    {
/// @brief gml:EngineeringDatum defines the origin of an engineering coordinate reference system, and is used in a region around that origin. This origin may be fixed with respect to the earth (such as a defined point at a construction site), or be a defined point on a moving vehicle (such as on a ship or satellite).
/// Element reference "http://www.opengis.net/gml/3.2":EngineeringDatum.
    gml__EngineeringDatumType*           EngineeringDatum               1;	///< Required element.
    }>                                   __EngineeringDatumPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute nilReason of type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         remoteSchema                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.opengis.net/gml/3.2":ImageDatumPropertyType is a complexType.
/// @brief gml:ImageDatumPropertyType is a property type for association roles to an image datum, either referencing or containing the definition of that datum.
/// class gml__ImageDatumPropertyType operations:
/// - soap_new_gml__ImageDatumPropertyType(soap*) allocate
/// - soap_new_gml__ImageDatumPropertyType(soap*, int num) allocate array
/// - soap_new_req_gml__ImageDatumPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__ImageDatumPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__ImageDatumPropertyType(soap*, gml__ImageDatumPropertyType*) deserialize from a stream
/// - int soap_write_gml__ImageDatumPropertyType(soap, gml__ImageDatumPropertyType*) serialize to a stream
class gml__ImageDatumPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gml__ImageDatumPropertyType_sequence
    {
/// @brief gml:ImageDatum defines the origin of an image coordinate reference system, and is used in a local context only. For an image datum, the anchor definition is usually either the centre of the image or the corner of the image. For more information, see ISO 19111 B.3.5.
/// Element reference "http://www.opengis.net/gml/3.2":ImageDatum.
    gml__ImageDatumType*                 ImageDatum                     1;	///< Required element.
    }>                                   __ImageDatumPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute nilReason of type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         remoteSchema                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.opengis.net/gml/3.2":VerticalDatumPropertyType is a complexType.
/// @brief gml:VerticalDatumPropertyType is property type for association roles to a vertical datum, either referencing or containing the definition of that datum.
/// class gml__VerticalDatumPropertyType operations:
/// - soap_new_gml__VerticalDatumPropertyType(soap*) allocate
/// - soap_new_gml__VerticalDatumPropertyType(soap*, int num) allocate array
/// - soap_new_req_gml__VerticalDatumPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__VerticalDatumPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__VerticalDatumPropertyType(soap*, gml__VerticalDatumPropertyType*) deserialize from a stream
/// - int soap_write_gml__VerticalDatumPropertyType(soap, gml__VerticalDatumPropertyType*) serialize to a stream
class gml__VerticalDatumPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gml__VerticalDatumPropertyType_sequence
    {
/// @brief gml:VerticalDatum is a textual description and/or a set of parameters identifying a particular reference level surface used as a zero-height surface, including its position with respect to the Earth for any of the height types recognized by this International Standard.
/// Element reference "http://www.opengis.net/gml/3.2":VerticalDatum.
    gml__VerticalDatumType*              VerticalDatum                  1;	///< Required element.
    }>                                   __VerticalDatumPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute nilReason of type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         remoteSchema                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.opengis.net/gml/3.2":TemporalDatumPropertyType is a complexType.
/// @brief gml:TemporalDatumPropertyType is a property type for association roles to a temporal datum, either referencing or containing the definition of that datum.
/// class gml__TemporalDatumPropertyType operations:
/// - soap_new_gml__TemporalDatumPropertyType(soap*) allocate
/// - soap_new_gml__TemporalDatumPropertyType(soap*, int num) allocate array
/// - soap_new_req_gml__TemporalDatumPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__TemporalDatumPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__TemporalDatumPropertyType(soap*, gml__TemporalDatumPropertyType*) deserialize from a stream
/// - int soap_write_gml__TemporalDatumPropertyType(soap, gml__TemporalDatumPropertyType*) serialize to a stream
class gml__TemporalDatumPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gml__TemporalDatumPropertyType_sequence
    {
/// @brief A gml:TemporalDatum defines the origin of a Temporal Reference System. This type omits the "anchorDefinition" and "realizationEpoch" elements and adds the "origin" element with the dateTime type.
/// Element reference "http://www.opengis.net/gml/3.2":TemporalDatum.
    gml__TemporalDatumType*              TemporalDatum                  1;	///< Required element.
    }>                                   __TemporalDatumPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute nilReason of type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         remoteSchema                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.opengis.net/gml/3.2":CoordinateOperationPropertyType is a complexType.
/// @brief gml:CoordinateOperationPropertyType is a property type for association roles to a coordinate operation, either referencing or containing the definition of that coordinate operation.
/// class gml__CoordinateOperationPropertyType operations:
/// - soap_new_gml__CoordinateOperationPropertyType(soap*) allocate
/// - soap_new_gml__CoordinateOperationPropertyType(soap*, int num) allocate array
/// - soap_new_req_gml__CoordinateOperationPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__CoordinateOperationPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__CoordinateOperationPropertyType(soap*, gml__CoordinateOperationPropertyType*) deserialize from a stream
/// - int soap_write_gml__CoordinateOperationPropertyType(soap, gml__CoordinateOperationPropertyType*) serialize to a stream
class gml__CoordinateOperationPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gml__CoordinateOperationPropertyType_sequence
    {
/// @brief gml:AbstractCoordinateOperation is a mathematical operation on coordinates that transforms or converts coordinates to another coordinate reference system. Many but not all coordinate operations (from CRS A to CRS B) also uniquely define the inverse operation (from CRS B to CRS A). In some cases, the operation method algorithm for the inverse operation is the same as for the forward algorithm, but the signs of some operation parameter values shall be reversed. In other cases, different algorithms are required for the forward and inverse operations, but the same operation parameter values are used. If (some) entirely different parameter values are needed, a different coordinate operation shall be defined. The optional coordinateOperationAccuracy property elements provide estimates of the impact of this coordinate operation on point position accuracy.
/// Reference "http://www.opengis.net/gml/3.2":AbstractCoordinateOperation to abstract element.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractCoordinateOperation"> with elements <AbstractSingleOperation> <ConcatenatedOperation>
   $int                                  __unionAbstractCoordinateOperation 0;	///< Union _gml__union_CoordinateOperationPropertyType selector: set to SOAP_UNION__gml__union_CoordinateOperationPropertyType_<fieldname>
/// Union for substitutionGroup="AbstractCoordinateOperation"
    union _gml__union_CoordinateOperationPropertyType
    {
/// @brief gml:AbstractSingleOperation is a single (not concatenated) coordinate operation.
/// Abstract element AbstractSingleOperation of type "http://www.opengis.net/gml/3.2":AbstractCoordinateOperationType.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractSingleOperation"> with elements <PassThroughOperation> <AbstractOperation>
/// @brief gml:PassThroughOperation is a pass-through operation specifies that a subset of a coordinate tuple is subject to a specific coordinate operation. The modifiedCoordinate property elements are an ordered sequence of positive integers defining the positions in a coordinate tuple of the coordinates affected by this pass-through operation. The AggregationAttributeGroup should be used to specify that the modifiedCoordinate elements are ordered.
/// Element PassThroughOperation of type "http://www.opengis.net/gml/3.2":PassThroughOperationType.
    gml__PassThroughOperationType*       PassThroughOperation           1;	///< Required element.
/// Abstract element AbstractOperation of type "http://www.opengis.net/gml/3.2":AbstractCoordinateOperationType.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractOperation"> with elements <AbstractGeneralConversion> <AbstractGeneralTransformation>
/// @brief gm:AbstractGeneralConversion is an abstract operation on coordinates that does not include any change of datum. The best-known example of a coordinate conversion is a map projection. The parameters describing coordinate conversions are defined rather than empirically derived. Note that some conversions have no parameters. The operationVersion, sourceCRS, and targetCRS elements are omitted in a coordinate conversion. This abstract complex type is expected to be extended for well-known operation methods with many Conversion instances, in GML Application Schemas that define operation-method-specialized element names and contents. This conversion uses an operation method, usually with associated parameter values. However, operation methods and parameter values are directly associated with concrete subtypes, not with this abstract type. All concrete types derived from this type shall extend this type to include a "usesMethod" element that references the "OperationMethod" element. Similarly, all concrete types derived from this type shall extend this type to include zero or more elements each named "uses...Value" that each use the type of an element substitutable for the "AbstractGeneralParameterValue" element.
/// Abstract element AbstractGeneralConversion of type "http://www.opengis.net/gml/3.2":AbstractGeneralConversionType.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractGeneralConversion"> with elements <Conversion>
/// @brief gml:Conversion is a concrete operation on coordinates that does not include any change of Datum. The best-known example of a coordinate conversion is a map projection. The parameters describing coordinate conversions are defined rather than empirically derived. Note that some conversions have no parameters. This concrete complex type can be used without using a GML Application Schema that defines operation-method-specialized element names and contents, especially for methods with only one Conversion instance. The usesValue property elements are an unordered list of composition associations to the set of parameter values used by this conversion operation.
/// Element Conversion of type "http://www.opengis.net/gml/3.2":ConversionType.
    gml__ConversionType*                 Conversion                     1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
/// @brief gml:AbstractGeneralTransformation is an abstract operation on coordinates that usually includes a change of Datum. The parameters of a coordinate transformation are empirically derived from data containing the coordinates of a series of points in both coordinate reference systems. This computational process is usually "over-determined", allowing derivation of error (or accuracy) estimates for the transformation. Also, the stochastic nature of the parameters may result in multiple (different) versions of the same coordinate transformation. The operationVersion, sourceCRS, and targetCRS proeprty elements are mandatory in a coordinate transformation. This abstract complex type is expected to be extended for well-known operation methods with many Transformation instances, in Application Schemas that define operation-method-specialized value element names and contents. This transformation uses an operation method with associated parameter values. However, operation methods and parameter values are directly associated with concrete subtypes, not with this abstract type. All concrete types derived from this type shall extend this type to include a "usesMethod" element that references one "OperationMethod" element. Similarly, all concrete types derived from this type shall extend this type to include one or more elements each named "uses...Value" that each use the type of an element substitutable for the "AbstractGeneralParameterValue" element.
/// Abstract element AbstractGeneralTransformation of type "http://www.opengis.net/gml/3.2":AbstractGeneralTransformationType.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractGeneralTransformation"> with elements <Transformation>
/// @brief gml:Transformation is a concrete object element derived from gml:GeneralTransformation (13.6.2.13). This concrete object can be used for all operation methods, without using a GML Application Schema that defines operation-method-specialized element names and contents, especially for methods with only one Transformation instance. The parameterValue elements are an unordered list of composition associations to the set of parameter values used by this conversion operation.
/// Element Transformation of type "http://www.opengis.net/gml/3.2":TransformationType.
    gml__TransformationType*             Transformation                 1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
//  END OF CHOICE OF SUBSTITUTIONS
//  END OF CHOICE OF SUBSTITUTIONS
/// Element ConcatenatedOperation of type "http://www.opengis.net/gml/3.2":ConcatenatedOperationType.
    gml__ConcatenatedOperationType*      ConcatenatedOperation          1;	///< Required element.
    }                                    __union_CoordinateOperationPropertyType;
//  END OF CHOICE OF SUBSTITUTIONS
    }>                                   __CoordinateOperationPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute nilReason of type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         remoteSchema                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.opengis.net/gml/3.2":SingleOperationPropertyType is a complexType.
/// @brief gml:SingleOperationPropertyType is a property type for association roles to a single operation, either referencing or containing the definition of that single operation.
/// class gml__SingleOperationPropertyType operations:
/// - soap_new_gml__SingleOperationPropertyType(soap*) allocate
/// - soap_new_gml__SingleOperationPropertyType(soap*, int num) allocate array
/// - soap_new_req_gml__SingleOperationPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__SingleOperationPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__SingleOperationPropertyType(soap*, gml__SingleOperationPropertyType*) deserialize from a stream
/// - int soap_write_gml__SingleOperationPropertyType(soap, gml__SingleOperationPropertyType*) serialize to a stream
class gml__SingleOperationPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gml__SingleOperationPropertyType_sequence
    {
/// @brief gml:AbstractSingleOperation is a single (not concatenated) coordinate operation.
/// Reference "http://www.opengis.net/gml/3.2":AbstractSingleOperation to abstract element.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractSingleOperation"> with elements <PassThroughOperation> <AbstractOperation>
   $int                                  __unionAbstractSingleOperation 0;	///< Union _gml__union_SingleOperationPropertyType selector: set to SOAP_UNION__gml__union_SingleOperationPropertyType_<fieldname>
/// Union for substitutionGroup="AbstractSingleOperation"
    union _gml__union_SingleOperationPropertyType
    {
/// @brief gml:PassThroughOperation is a pass-through operation specifies that a subset of a coordinate tuple is subject to a specific coordinate operation. The modifiedCoordinate property elements are an ordered sequence of positive integers defining the positions in a coordinate tuple of the coordinates affected by this pass-through operation. The AggregationAttributeGroup should be used to specify that the modifiedCoordinate elements are ordered.
/// Element PassThroughOperation of type "http://www.opengis.net/gml/3.2":PassThroughOperationType.
    gml__PassThroughOperationType*       PassThroughOperation           1;	///< Required element.
/// Abstract element AbstractOperation of type "http://www.opengis.net/gml/3.2":AbstractCoordinateOperationType.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractOperation"> with elements <AbstractGeneralConversion> <AbstractGeneralTransformation>
/// @brief gm:AbstractGeneralConversion is an abstract operation on coordinates that does not include any change of datum. The best-known example of a coordinate conversion is a map projection. The parameters describing coordinate conversions are defined rather than empirically derived. Note that some conversions have no parameters. The operationVersion, sourceCRS, and targetCRS elements are omitted in a coordinate conversion. This abstract complex type is expected to be extended for well-known operation methods with many Conversion instances, in GML Application Schemas that define operation-method-specialized element names and contents. This conversion uses an operation method, usually with associated parameter values. However, operation methods and parameter values are directly associated with concrete subtypes, not with this abstract type. All concrete types derived from this type shall extend this type to include a "usesMethod" element that references the "OperationMethod" element. Similarly, all concrete types derived from this type shall extend this type to include zero or more elements each named "uses...Value" that each use the type of an element substitutable for the "AbstractGeneralParameterValue" element.
/// Abstract element AbstractGeneralConversion of type "http://www.opengis.net/gml/3.2":AbstractGeneralConversionType.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractGeneralConversion"> with elements <Conversion>
/// @brief gml:Conversion is a concrete operation on coordinates that does not include any change of Datum. The best-known example of a coordinate conversion is a map projection. The parameters describing coordinate conversions are defined rather than empirically derived. Note that some conversions have no parameters. This concrete complex type can be used without using a GML Application Schema that defines operation-method-specialized element names and contents, especially for methods with only one Conversion instance. The usesValue property elements are an unordered list of composition associations to the set of parameter values used by this conversion operation.
/// Element Conversion of type "http://www.opengis.net/gml/3.2":ConversionType.
    gml__ConversionType*                 Conversion                     1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
/// @brief gml:AbstractGeneralTransformation is an abstract operation on coordinates that usually includes a change of Datum. The parameters of a coordinate transformation are empirically derived from data containing the coordinates of a series of points in both coordinate reference systems. This computational process is usually "over-determined", allowing derivation of error (or accuracy) estimates for the transformation. Also, the stochastic nature of the parameters may result in multiple (different) versions of the same coordinate transformation. The operationVersion, sourceCRS, and targetCRS proeprty elements are mandatory in a coordinate transformation. This abstract complex type is expected to be extended for well-known operation methods with many Transformation instances, in Application Schemas that define operation-method-specialized value element names and contents. This transformation uses an operation method with associated parameter values. However, operation methods and parameter values are directly associated with concrete subtypes, not with this abstract type. All concrete types derived from this type shall extend this type to include a "usesMethod" element that references one "OperationMethod" element. Similarly, all concrete types derived from this type shall extend this type to include one or more elements each named "uses...Value" that each use the type of an element substitutable for the "AbstractGeneralParameterValue" element.
/// Abstract element AbstractGeneralTransformation of type "http://www.opengis.net/gml/3.2":AbstractGeneralTransformationType.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractGeneralTransformation"> with elements <Transformation>
/// @brief gml:Transformation is a concrete object element derived from gml:GeneralTransformation (13.6.2.13). This concrete object can be used for all operation methods, without using a GML Application Schema that defines operation-method-specialized element names and contents, especially for methods with only one Transformation instance. The parameterValue elements are an unordered list of composition associations to the set of parameter values used by this conversion operation.
/// Element Transformation of type "http://www.opengis.net/gml/3.2":TransformationType.
    gml__TransformationType*             Transformation                 1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
//  END OF CHOICE OF SUBSTITUTIONS
    }                                    __union_SingleOperationPropertyType;
//  END OF CHOICE OF SUBSTITUTIONS
    }>                                   __SingleOperationPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute nilReason of type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         remoteSchema                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.opengis.net/gml/3.2":GeneralConversionPropertyType is a complexType.
/// @brief gml:GeneralConversionPropertyType is a property type for association roles to a general conversion, either referencing or containing the definition of that conversion.
/// class gml__GeneralConversionPropertyType operations:
/// - soap_new_gml__GeneralConversionPropertyType(soap*) allocate
/// - soap_new_gml__GeneralConversionPropertyType(soap*, int num) allocate array
/// - soap_new_req_gml__GeneralConversionPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__GeneralConversionPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__GeneralConversionPropertyType(soap*, gml__GeneralConversionPropertyType*) deserialize from a stream
/// - int soap_write_gml__GeneralConversionPropertyType(soap, gml__GeneralConversionPropertyType*) serialize to a stream
class gml__GeneralConversionPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gml__GeneralConversionPropertyType_sequence
    {
/// @brief gm:AbstractGeneralConversion is an abstract operation on coordinates that does not include any change of datum. The best-known example of a coordinate conversion is a map projection. The parameters describing coordinate conversions are defined rather than empirically derived. Note that some conversions have no parameters. The operationVersion, sourceCRS, and targetCRS elements are omitted in a coordinate conversion. This abstract complex type is expected to be extended for well-known operation methods with many Conversion instances, in GML Application Schemas that define operation-method-specialized element names and contents. This conversion uses an operation method, usually with associated parameter values. However, operation methods and parameter values are directly associated with concrete subtypes, not with this abstract type. All concrete types derived from this type shall extend this type to include a "usesMethod" element that references the "OperationMethod" element. Similarly, all concrete types derived from this type shall extend this type to include zero or more elements each named "uses...Value" that each use the type of an element substitutable for the "AbstractGeneralParameterValue" element.
/// Reference "http://www.opengis.net/gml/3.2":AbstractGeneralConversion to abstract element.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractGeneralConversion"> with elements <Conversion>
   $int                                  __unionAbstractGeneralConversion 0;	///< Union _gml__union_GeneralConversionPropertyType selector: set to SOAP_UNION__gml__union_GeneralConversionPropertyType_<fieldname>
/// Union for substitutionGroup="AbstractGeneralConversion"
    union _gml__union_GeneralConversionPropertyType
    {
/// @brief gml:Conversion is a concrete operation on coordinates that does not include any change of Datum. The best-known example of a coordinate conversion is a map projection. The parameters describing coordinate conversions are defined rather than empirically derived. Note that some conversions have no parameters. This concrete complex type can be used without using a GML Application Schema that defines operation-method-specialized element names and contents, especially for methods with only one Conversion instance. The usesValue property elements are an unordered list of composition associations to the set of parameter values used by this conversion operation.
/// Element Conversion of type "http://www.opengis.net/gml/3.2":ConversionType.
    gml__ConversionType*                 Conversion                     1;	///< Required element.
    }                                    __union_GeneralConversionPropertyType;
//  END OF CHOICE OF SUBSTITUTIONS
    }>                                   __GeneralConversionPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute nilReason of type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         remoteSchema                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.opengis.net/gml/3.2":GeneralTransformationPropertyType is a complexType.
/// @brief gml:GeneralTransformationPropertyType is a property type for association roles to a general transformation, either referencing or containing the definition of that transformation.
/// class gml__GeneralTransformationPropertyType operations:
/// - soap_new_gml__GeneralTransformationPropertyType(soap*) allocate
/// - soap_new_gml__GeneralTransformationPropertyType(soap*, int num) allocate array
/// - soap_new_req_gml__GeneralTransformationPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__GeneralTransformationPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__GeneralTransformationPropertyType(soap*, gml__GeneralTransformationPropertyType*) deserialize from a stream
/// - int soap_write_gml__GeneralTransformationPropertyType(soap, gml__GeneralTransformationPropertyType*) serialize to a stream
class gml__GeneralTransformationPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gml__GeneralTransformationPropertyType_sequence
    {
/// @brief gml:AbstractGeneralTransformation is an abstract operation on coordinates that usually includes a change of Datum. The parameters of a coordinate transformation are empirically derived from data containing the coordinates of a series of points in both coordinate reference systems. This computational process is usually "over-determined", allowing derivation of error (or accuracy) estimates for the transformation. Also, the stochastic nature of the parameters may result in multiple (different) versions of the same coordinate transformation. The operationVersion, sourceCRS, and targetCRS proeprty elements are mandatory in a coordinate transformation. This abstract complex type is expected to be extended for well-known operation methods with many Transformation instances, in Application Schemas that define operation-method-specialized value element names and contents. This transformation uses an operation method with associated parameter values. However, operation methods and parameter values are directly associated with concrete subtypes, not with this abstract type. All concrete types derived from this type shall extend this type to include a "usesMethod" element that references one "OperationMethod" element. Similarly, all concrete types derived from this type shall extend this type to include one or more elements each named "uses...Value" that each use the type of an element substitutable for the "AbstractGeneralParameterValue" element.
/// Reference "http://www.opengis.net/gml/3.2":AbstractGeneralTransformation to abstract element.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractGeneralTransformation"> with elements <Transformation>
   $int                                  __unionAbstractGeneralTransformation 0;	///< Union _gml__union_GeneralTransformationPropertyType selector: set to SOAP_UNION__gml__union_GeneralTransformationPropertyType_<fieldname>
/// Union for substitutionGroup="AbstractGeneralTransformation"
    union _gml__union_GeneralTransformationPropertyType
    {
/// @brief gml:Transformation is a concrete object element derived from gml:GeneralTransformation (13.6.2.13). This concrete object can be used for all operation methods, without using a GML Application Schema that defines operation-method-specialized element names and contents, especially for methods with only one Transformation instance. The parameterValue elements are an unordered list of composition associations to the set of parameter values used by this conversion operation.
/// Element Transformation of type "http://www.opengis.net/gml/3.2":TransformationType.
    gml__TransformationType*             Transformation                 1;	///< Required element.
    }                                    __union_GeneralTransformationPropertyType;
//  END OF CHOICE OF SUBSTITUTIONS
    }>                                   __GeneralTransformationPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute nilReason of type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         remoteSchema                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.opengis.net/gml/3.2":ConcatenatedOperationPropertyType is a complexType.
/// @brief gml:ConcatenatedOperationPropertyType is a property type for association roles to a concatenated operation, either referencing or containing the definition of that concatenated operation.
/// class gml__ConcatenatedOperationPropertyType operations:
/// - soap_new_gml__ConcatenatedOperationPropertyType(soap*) allocate
/// - soap_new_gml__ConcatenatedOperationPropertyType(soap*, int num) allocate array
/// - soap_new_req_gml__ConcatenatedOperationPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__ConcatenatedOperationPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__ConcatenatedOperationPropertyType(soap*, gml__ConcatenatedOperationPropertyType*) deserialize from a stream
/// - int soap_write_gml__ConcatenatedOperationPropertyType(soap, gml__ConcatenatedOperationPropertyType*) serialize to a stream
class gml__ConcatenatedOperationPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gml__ConcatenatedOperationPropertyType_sequence
    {
/// Element reference "http://www.opengis.net/gml/3.2":ConcatenatedOperation.
    gml__ConcatenatedOperationType*      ConcatenatedOperation          1;	///< Required element.
    }>                                   __ConcatenatedOperationPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute nilReason of type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         remoteSchema                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.opengis.net/gml/3.2":PassThroughOperationPropertyType is a complexType.
/// @brief gml:PassThroughOperationPropertyType is a property type for association roles to a pass through operation, either referencing or containing the definition of that pass through operation.
/// class gml__PassThroughOperationPropertyType operations:
/// - soap_new_gml__PassThroughOperationPropertyType(soap*) allocate
/// - soap_new_gml__PassThroughOperationPropertyType(soap*, int num) allocate array
/// - soap_new_req_gml__PassThroughOperationPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__PassThroughOperationPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__PassThroughOperationPropertyType(soap*, gml__PassThroughOperationPropertyType*) deserialize from a stream
/// - int soap_write_gml__PassThroughOperationPropertyType(soap, gml__PassThroughOperationPropertyType*) serialize to a stream
class gml__PassThroughOperationPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gml__PassThroughOperationPropertyType_sequence
    {
/// @brief gml:PassThroughOperation is a pass-through operation specifies that a subset of a coordinate tuple is subject to a specific coordinate operation. The modifiedCoordinate property elements are an ordered sequence of positive integers defining the positions in a coordinate tuple of the coordinates affected by this pass-through operation. The AggregationAttributeGroup should be used to specify that the modifiedCoordinate elements are ordered.
/// Element reference "http://www.opengis.net/gml/3.2":PassThroughOperation.
    gml__PassThroughOperationType*       PassThroughOperation           1;	///< Required element.
    }>                                   __PassThroughOperationPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute nilReason of type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         remoteSchema                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.opengis.net/gml/3.2":ConversionPropertyType is a complexType.
/// @brief gml:ConversionPropertyType is a property type for association roles to a concrete general-purpose conversion, either referencing or containing the definition of that conversion.
/// class gml__ConversionPropertyType operations:
/// - soap_new_gml__ConversionPropertyType(soap*) allocate
/// - soap_new_gml__ConversionPropertyType(soap*, int num) allocate array
/// - soap_new_req_gml__ConversionPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__ConversionPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__ConversionPropertyType(soap*, gml__ConversionPropertyType*) deserialize from a stream
/// - int soap_write_gml__ConversionPropertyType(soap, gml__ConversionPropertyType*) serialize to a stream
class gml__ConversionPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gml__ConversionPropertyType_sequence
    {
/// @brief gml:Conversion is a concrete operation on coordinates that does not include any change of Datum. The best-known example of a coordinate conversion is a map projection. The parameters describing coordinate conversions are defined rather than empirically derived. Note that some conversions have no parameters. This concrete complex type can be used without using a GML Application Schema that defines operation-method-specialized element names and contents, especially for methods with only one Conversion instance. The usesValue property elements are an unordered list of composition associations to the set of parameter values used by this conversion operation.
/// Element reference "http://www.opengis.net/gml/3.2":Conversion.
    gml__ConversionType*                 Conversion                     1;	///< Required element.
    }>                                   __ConversionPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute nilReason of type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         remoteSchema                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.opengis.net/gml/3.2":TransformationPropertyType is a complexType.
/// @brief gml:TransformationPropertyType is a property type for association roles to a transformation, either referencing or containing the definition of that transformation.
/// class gml__TransformationPropertyType operations:
/// - soap_new_gml__TransformationPropertyType(soap*) allocate
/// - soap_new_gml__TransformationPropertyType(soap*, int num) allocate array
/// - soap_new_req_gml__TransformationPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__TransformationPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__TransformationPropertyType(soap*, gml__TransformationPropertyType*) deserialize from a stream
/// - int soap_write_gml__TransformationPropertyType(soap, gml__TransformationPropertyType*) serialize to a stream
class gml__TransformationPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gml__TransformationPropertyType_sequence
    {
/// @brief gml:Transformation is a concrete object element derived from gml:GeneralTransformation (13.6.2.13). This concrete object can be used for all operation methods, without using a GML Application Schema that defines operation-method-specialized element names and contents, especially for methods with only one Transformation instance. The parameterValue elements are an unordered list of composition associations to the set of parameter values used by this conversion operation.
/// Element reference "http://www.opengis.net/gml/3.2":Transformation.
    gml__TransformationType*             Transformation                 1;	///< Required element.
    }>                                   __TransformationPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute nilReason of type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         remoteSchema                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.opengis.net/gml/3.2":AbstractGeneralParameterValueType is an abstract complexType.
/// class gml__AbstractGeneralParameterValueType operations:
/// - soap_new_gml__AbstractGeneralParameterValueType(soap*) allocate
/// - soap_new_gml__AbstractGeneralParameterValueType(soap*, int num) allocate array
/// - soap_new_req_gml__AbstractGeneralParameterValueType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__AbstractGeneralParameterValueType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__AbstractGeneralParameterValueType(soap*, gml__AbstractGeneralParameterValueType*) deserialize from a stream
/// - int soap_write_gml__AbstractGeneralParameterValueType(soap, gml__AbstractGeneralParameterValueType*) serialize to a stream
class gml__AbstractGeneralParameterValueType : public xsd__anyType
{ public:
};

/// "http://www.opengis.net/gml/3.2":AbstractGeneralParameterValuePropertyType is a complexType.
/// @brief gml:AbstractGeneralParameterValuePropertyType is a property type for inline association roles to a parameter value or group of parameter values, always containing the values.
/// class gml__AbstractGeneralParameterValuePropertyType operations:
/// - soap_new_gml__AbstractGeneralParameterValuePropertyType(soap*) allocate
/// - soap_new_gml__AbstractGeneralParameterValuePropertyType(soap*, int num) allocate array
/// - soap_new_req_gml__AbstractGeneralParameterValuePropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__AbstractGeneralParameterValuePropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__AbstractGeneralParameterValuePropertyType(soap*, gml__AbstractGeneralParameterValuePropertyType*) deserialize from a stream
/// - int soap_write_gml__AbstractGeneralParameterValuePropertyType(soap, gml__AbstractGeneralParameterValuePropertyType*) serialize to a stream
class gml__AbstractGeneralParameterValuePropertyType : public xsd__anyType
{ public:
/// @brief gml:AbstractGeneralParameterValue is an abstract parameter value or group of parameter values. This abstract complexType is expected to be extended and restricted for well-known operation methods with many instances, in Application Schemas that define operation-method-specialized element names and contents. Specific parameter value elements are directly contained in concrete subtypes, not in this abstract type. All concrete types derived from this type shall extend this type to include one "...Value" element with an appropriate type, which should be one of the element types allowed in the ParameterValueType. In addition, all derived concrete types shall extend this type to include a "operationParameter" property element that references one element substitutable for the "OperationParameter" object element.
/// Reference "http://www.opengis.net/gml/3.2":AbstractGeneralParameterValue to abstract element.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractGeneralParameterValue"> with elements <ParameterValue> <ParameterValueGroup>
   $int                                  __unionAbstractGeneralParameterValue 0;	///< Union _gml__union_AbstractGeneralParameterValuePropertyType selector: set to SOAP_UNION__gml__union_AbstractGeneralParameterValuePropertyType_<fieldname>
/// Union for substitutionGroup="AbstractGeneralParameterValue"
    union _gml__union_AbstractGeneralParameterValuePropertyType
    {
/// @brief gml:ParameterValue is a parameter value, an ordered sequence of values, or a reference to a file of parameter values. This concrete complex type may be used for operation methods without using an Application Schema that defines operation-method-specialized element names and contents, especially for methods with only one instance. This complex type may be used, extended, or restricted for well-known operation methods, especially for methods with many instances.
/// Element ParameterValue of type "http://www.opengis.net/gml/3.2":ParameterValueType.
    gml__ParameterValueType*             ParameterValue                 1;	///< Required element.
/// @brief gml:ParameterValueGroup is a group of related parameter values. The same group can be repeated more than once in a Conversion, Transformation, or higher level ParameterValueGroup, if those instances contain different values of one or more parameterValues which suitably distinquish among those groups. This concrete complex type can be used for operation methods without using an Application Schema that defines operation-method-specialized element names and contents. This complex type may be used, extended, or restricted for well-known operation methods, especially for methods with only one instance. The parameterValue elements are an unordered set of composition association roles to the parameter values and groups of values included in this group.
/// Element ParameterValueGroup of type "http://www.opengis.net/gml/3.2":ParameterValueGroupType.
    gml__ParameterValueGroupType*        ParameterValueGroup            1;	///< Required element.
    }                                    __union_AbstractGeneralParameterValuePropertyType;
//  END OF CHOICE OF SUBSTITUTIONS
};

/// "http://www.opengis.net/gml/3.2":OperationMethodPropertyType is a complexType.
/// @brief gml:OperationMethodPropertyType is a property type for association roles to a concrete general-purpose operation method, either referencing or containing the definition of that method.
/// class gml__OperationMethodPropertyType operations:
/// - soap_new_gml__OperationMethodPropertyType(soap*) allocate
/// - soap_new_gml__OperationMethodPropertyType(soap*, int num) allocate array
/// - soap_new_req_gml__OperationMethodPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__OperationMethodPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__OperationMethodPropertyType(soap*, gml__OperationMethodPropertyType*) deserialize from a stream
/// - int soap_write_gml__OperationMethodPropertyType(soap, gml__OperationMethodPropertyType*) serialize to a stream
class gml__OperationMethodPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gml__OperationMethodPropertyType_sequence
    {
/// @brief gml:OperationMethod is a method (algorithm or procedure) used to perform a coordinate operation. Most operation methods use a number of operation parameters, although some coordinate conversions use none. Each coordinate operation using the method assigns values to these parameters. The parameter elements are an unordered list of associations to the set of operation parameters and parameter groups used by this operation method.
/// Element reference "http://www.opengis.net/gml/3.2":OperationMethod.
    gml__OperationMethodType*            OperationMethod                1;	///< Required element.
    }>                                   __OperationMethodPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute nilReason of type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         remoteSchema                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.opengis.net/gml/3.2":AbstractGeneralOperationParameterPropertyType is a complexType.
/// @brief gml:AbstractGeneralOperationParameterPropertyType is a property type for association roles to an operation parameter or group, either referencing or containing the definition of that parameter or group.
/// class gml__AbstractGeneralOperationParameterPropertyType operations:
/// - soap_new_gml__AbstractGeneralOperationParameterPropertyType(soap*) allocate
/// - soap_new_gml__AbstractGeneralOperationParameterPropertyType(soap*, int num) allocate array
/// - soap_new_req_gml__AbstractGeneralOperationParameterPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__AbstractGeneralOperationParameterPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__AbstractGeneralOperationParameterPropertyType(soap*, gml__AbstractGeneralOperationParameterPropertyType*) deserialize from a stream
/// - int soap_write_gml__AbstractGeneralOperationParameterPropertyType(soap, gml__AbstractGeneralOperationParameterPropertyType*) serialize to a stream
class gml__AbstractGeneralOperationParameterPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gml__AbstractGeneralOperationParameterPropertyType_sequence
    {
/// @brief gml:GeneralOperationParameter is the abstract definition of a parameter or group of parameters used by an operation method.
/// Reference "http://www.opengis.net/gml/3.2":AbstractGeneralOperationParameter to abstract element.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractGeneralOperationParameter"> with elements <OperationParameter> <OperationParameterGroup>
   $int                                  __unionAbstractGeneralOperationParameter 0;	///< Union _gml__union_AbstractGeneralOperationParameterPropertyType selector: set to SOAP_UNION__gml__union_AbstractGeneralOperationParameterPropertyType_<fieldname>
/// Union for substitutionGroup="AbstractGeneralOperationParameter"
    union _gml__union_AbstractGeneralOperationParameterPropertyType
    {
/// @brief gml:OperationParameter is the definition of a parameter used by an operation method. Most parameter values are numeric, but other types of parameter values are possible. This complex type is expected to be used or extended for all operation methods, without defining operation-method-specialized element names.
/// Element OperationParameter of type "http://www.opengis.net/gml/3.2":OperationParameterType.
    gml__OperationParameterType*         OperationParameter             1;	///< Required element.
/// @brief gml:OperationParameterGroup is the definition of a group of parameters used by an operation method. This complex type is expected to be used or extended for all applicable operation methods, without defining operation-method-specialized element names. The generalOperationParameter elements are an unordered list of associations to the set of operation parameters that are members of this group.
/// Element OperationParameterGroup of type "http://www.opengis.net/gml/3.2":OperationParameterGroupType.
    gml__OperationParameterGroupType*    OperationParameterGroup        1;	///< Required element.
    }                                    __union_AbstractGeneralOperationParameterPropertyType;
//  END OF CHOICE OF SUBSTITUTIONS
    }>                                   __AbstractGeneralOperationParameterPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute nilReason of type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         remoteSchema                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.opengis.net/gml/3.2":OperationParameterPropertyType is a complexType.
/// @brief gml:OperationParameterPropertyType is a property type for association roles to an operation parameter, either referencing or containing the definition of that parameter.
/// class gml__OperationParameterPropertyType operations:
/// - soap_new_gml__OperationParameterPropertyType(soap*) allocate
/// - soap_new_gml__OperationParameterPropertyType(soap*, int num) allocate array
/// - soap_new_req_gml__OperationParameterPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__OperationParameterPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__OperationParameterPropertyType(soap*, gml__OperationParameterPropertyType*) deserialize from a stream
/// - int soap_write_gml__OperationParameterPropertyType(soap, gml__OperationParameterPropertyType*) serialize to a stream
class gml__OperationParameterPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gml__OperationParameterPropertyType_sequence
    {
/// @brief gml:OperationParameter is the definition of a parameter used by an operation method. Most parameter values are numeric, but other types of parameter values are possible. This complex type is expected to be used or extended for all operation methods, without defining operation-method-specialized element names.
/// Element reference "http://www.opengis.net/gml/3.2":OperationParameter.
    gml__OperationParameterType*         OperationParameter             1;	///< Required element.
    }>                                   __OperationParameterPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute nilReason of type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         remoteSchema                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.opengis.net/gml/3.2":OperationParameterGroupPropertyType is a complexType.
/// @brief gml:OperationParameterPropertyType is a property type for association roles to an operation parameter group, either referencing or containing the definition of that parameter group.
/// class gml__OperationParameterGroupPropertyType operations:
/// - soap_new_gml__OperationParameterGroupPropertyType(soap*) allocate
/// - soap_new_gml__OperationParameterGroupPropertyType(soap*, int num) allocate array
/// - soap_new_req_gml__OperationParameterGroupPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__OperationParameterGroupPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__OperationParameterGroupPropertyType(soap*, gml__OperationParameterGroupPropertyType*) deserialize from a stream
/// - int soap_write_gml__OperationParameterGroupPropertyType(soap, gml__OperationParameterGroupPropertyType*) serialize to a stream
class gml__OperationParameterGroupPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gml__OperationParameterGroupPropertyType_sequence
    {
/// @brief gml:OperationParameterGroup is the definition of a group of parameters used by an operation method. This complex type is expected to be used or extended for all applicable operation methods, without defining operation-method-specialized element names. The generalOperationParameter elements are an unordered list of associations to the set of operation parameters that are members of this group.
/// Element reference "http://www.opengis.net/gml/3.2":OperationParameterGroup.
    gml__OperationParameterGroupType*    OperationParameterGroup        1;	///< Required element.
    }>                                   __OperationParameterGroupPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute nilReason of type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         remoteSchema                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.opengis.net/gml/3.2":ProcedurePropertyType is a complexType.
/// class gml__ProcedurePropertyType operations:
/// - soap_new_gml__ProcedurePropertyType(soap*) allocate
/// - soap_new_gml__ProcedurePropertyType(soap*, int num) allocate array
/// - soap_new_req_gml__ProcedurePropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__ProcedurePropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__ProcedurePropertyType(soap*, gml__ProcedurePropertyType*) deserialize from a stream
/// - int soap_write_gml__ProcedurePropertyType(soap, gml__ProcedurePropertyType*) serialize to a stream
class gml__ProcedurePropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gml__ProcedurePropertyType_sequence
    {
/// @brief This abstract element serves as the head of a substitution group which may contain any elements whose content model is derived from gml:AbstractFeatureType. This may be used as a variable in the construction of content models. gml:AbstractFeature may be thought of as "anything that is a GML feature" and may be used to define variables or templates in which the value of a GML property is "any feature". This occurs in particular in a GML feature collection where the feature member properties contain one or multiple copies of gml:AbstractFeature respectively.
/// Reference "http://www.opengis.net/gml/3.2":AbstractFeature to abstract element.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractFeature"> with elements <DynamicFeature> <AbstractCoverage> <AbstractContinuousCoverage> <Observation> <AbstractFeatureCollection> <FeatureCollection> <SpatialDataSet> <SpatialDataSet> <ZoningElement> <ZoningElement> <OfficialDocumentation> <OfficialDocumentation> <SupplementaryRegulation> <SupplementaryRegulation> <SpatialPlan> <SpatialPlan>
   $int                                  __unionAbstractFeature         0;	///< Union _gml__union_ProcedurePropertyType selector: set to SOAP_UNION__gml__union_ProcedurePropertyType_<fieldname>
/// Union for substitutionGroup="AbstractFeature"
    union _gml__union_ProcedurePropertyType
    {
/// @brief States are captured by time-stamped instances of a feature. The content model extends the standard gml:AbstractFeatureType with the gml:dynamicProperties model group. Each time-stamped instance represents a 'snapshot' of a feature. The dynamic feature classes will normally be extended to suit particular applications. A dynamic feature bears either a time stamp or a history.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="DynamicFeature"> with elements <DynamicFeatureCollection>
/// @brief States are captured by time-stamped instances of a feature. The content model extends the standard gml:AbstractFeatureType with the gml:dynamicProperties model group. Each time-stamped instance represents a 'snapshot' of a feature. The dynamic feature classes will normally be extended to suit particular applications. A dynamic feature bears either a time stamp or a history.
/// Element DynamicFeature of type "http://www.opengis.net/gml/3.2":DynamicFeatureType.
    gml__DynamicFeatureType*             DynamicFeature                 1;	///< Required element.
/// @brief A gml:DynamicFeatureCollection is a feature collection that has a gml:validTime property (i.e. is a snapshot of the feature collection) or which has a gml:history property that contains one or more gml:AbstractTimeSlices each of which contain values of the time varying properties of the feature collection. Note that the gml:DynamicFeatureCollection may be one of the following: 1. A feature collection which consists of static feature members (members do not change in time) but which has properties of the collection object as a whole that do change in time . 2. A feature collection which consists of dynamic feature members (the members are gml:DynamicFeatures) but which also has properties of the collection as a whole that vary in time.
/// Element DynamicFeatureCollection of type "http://www.opengis.net/gml/3.2":DynamicFeatureCollectionType.
    gml__DynamicFeatureCollectionType*   DynamicFeatureCollection       1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
/// @brief This element serves as the head of a substitution group which may contain any coverage whose type is derived from gml:AbstractCoverageType. It may act as a variable in the definition of content models where it is required to permit any coverage to be valid.
/// Abstract element AbstractCoverage of type "http://www.opengis.net/gml/3.2":AbstractCoverageType.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractCoverage"> with elements <AbstractDiscreteCoverage>
/// @brief A discrete coverage consists of a domain set, range set and optionally a coverage function. The domain set consists of either spatial or temporal geometry objects, finite in number. The range set is comprised of a finite number of attribute values each of which is associated to every direct position within any single spatiotemporal object in the domain. In other words, the range values are constant on each spatiotemporal object in the domain. This coverage function maps each element from the coverage domain to an element in its range. The coverageFunction element describes the mapping function. This element serves as the head of a substitution group which may contain any discrete coverage whose type is derived from gml:DiscreteCoverageType.
/// Abstract element AbstractDiscreteCoverage of type "http://www.opengis.net/gml/3.2":DiscreteCoverageType.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractDiscreteCoverage"> with elements <MultiPointCoverage> <MultiCurveCoverage> <MultiSurfaceCoverage> <MultiSolidCoverage> <GridCoverage> <RectifiedGridCoverage>
/// @brief In a gml:MultiPointCoverage the domain set is a gml:MultiPoint, that is a collection of arbitrarily distributed geometric points. The content model is identical with gml:DiscreteCoverageType, but that gml:domainSet shall have values gml:MultiPoint. In a gml:MultiPointCoverage the mapping from the domain to the range is straightforward. - For gml:DataBlock encodings the points of the gml:MultiPoint are mapped in document order to the tuples of the data block. - For gml:CompositeValue encodings the points of the gml:MultiPoint are mapped to the members of the composite value in document order. - For gml:File encodings the points of the gml:MultiPoint are mapped to the records of the file in sequential order.
/// Element MultiPointCoverage of type "http://www.opengis.net/gml/3.2":DiscreteCoverageType.
    gml__DiscreteCoverageType*           MultiPointCoverage             1;	///< Required element.
/// @brief In a gml:MultiCurveCoverage the domain is partioned into a collection of curves comprising a gml:MultiCurve. The coverage function then maps each curve in the collection to a value in the range set. The content model is identical with gml:DiscreteCoverageType, but that gml:domainSet shall have values gml:MultiCurve. In a gml:MultiCurveCoverage the mapping from the domain to the range is straightforward. - For gml:DataBlock encodings the curves of the gml:MultiCurve are mapped in document order to the tuples of the data block. - For gml:CompositeValue encodings the curves of the gml:MultiCurve are mapped to the members of the composite value in document order. - For gml:File encodings the curves of the gml:MultiCurve are mapped to the records of the file in sequential order.
/// Element MultiCurveCoverage of type "http://www.opengis.net/gml/3.2":DiscreteCoverageType.
    gml__DiscreteCoverageType*           MultiCurveCoverage             1;	///< Required element.
/// @brief In a gml:MultiSurfaceCoverage the domain is partioned into a collection of surfaces comprising a gml:MultiSurface. The coverage function than maps each surface in the collection to a value in the range set. The content model is identical with gml:DiscreteCoverageType, but that gml:domainSet shall have values gml:MultiSurface. In a gml:MultiSurfaceCoverage the mapping from the domain to the range is straightforward. - For gml:DataBlock encodings the surfaces of the gml:MultiSurface are mapped in document order to the tuples of the data block. - For gml:CompositeValue encodings the surfaces of the gml:MultiSurface are mapped to the members of the composite value in document order. - For gml:File encodings the surfaces of the gml:MultiSurface are mapped to the records of the file in sequential order.
/// Element MultiSurfaceCoverage of type "http://www.opengis.net/gml/3.2":DiscreteCoverageType.
    gml__DiscreteCoverageType*           MultiSurfaceCoverage           1;	///< Required element.
/// @brief In a gml:MultiSolidCoverage the domain is partioned into a collection of solids comprising a gml:MultiSolid. The coverage function than maps each solid in the collection to a value in the range set. The content model is identical with gml:DiscreteCoverageType, but that gml:domainSet shall have values gml:MultiSolid. In a gml:MultiSolidCoverage the mapping from the domain to the range is straightforward. - For gml:DataBlock encodings the solids of the gml:MultiSolid are mapped in document order to the tuples of the data block. - For gml:CompositeValue encodings the solids of the gml:MultiSolid are mapped to the members of the composite value in document order. - For gml:File encodings the solids of the gml:MultiSolid are mapped to the records of the file in sequential order.
/// Element MultiSolidCoverage of type "http://www.opengis.net/gml/3.2":DiscreteCoverageType.
    gml__DiscreteCoverageType*           MultiSolidCoverage             1;	///< Required element.
/// @brief A gml:GriddedCoverage is a discrete point coverage in which the domain set is a geometric grid of points. Note that this is the same as the gml:MultiPointCoverage except that we have a gml:Grid to describe the domain. The simple gridded coverage is not geometrically referenced and hence no geometric positions are assignable to the points in the grid. Such geometric positioning is introduced in the gml:RectifiedGridCoverage.
/// Element GridCoverage of type "http://www.opengis.net/gml/3.2":DiscreteCoverageType.
    gml__DiscreteCoverageType*           GridCoverage                   1;	///< Required element.
/// @brief The gml:RectifiedGridCoverage is a discrete point coverage based on a rectified grid. It is similar to the grid coverage except that the points of the grid are geometrically referenced. The rectified grid coverage has a domain that is a gml:RectifiedGrid geometry.
/// Element RectifiedGridCoverage of type "http://www.opengis.net/gml/3.2":DiscreteCoverageType.
    gml__DiscreteCoverageType*           RectifiedGridCoverage          1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
//  END OF CHOICE OF SUBSTITUTIONS
/// @brief A continuous coverage as defined in ISO 19123 is a coverage that can return different values for the same feature attribute at different direct positions within a single spatiotemporal object in its spatiotemporal domain. The base type for continuous coverages is AbstractContinuousCoverageType. The coverageFunction element describes the mapping function. The abstract element gml:AbstractContinuousCoverage serves as the head of a substitution group which may contain any continuous coverage whose type is derived from gml:AbstractContinuousCoverageType.
/// Abstract element AbstractContinuousCoverage of type "http://www.opengis.net/gml/3.2":AbstractContinuousCoverageType.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractContinuousCoverage"> with elements
//  END OF CHOICE OF SUBSTITUTIONS
;	///< Required element.
/// @brief The content model is a straightforward extension of gml:AbstractFeatureType; it automatically has the gml:identifier, gml:description, gml:descriptionReference, gml:name, and gml:boundedBy properties. The gml:validTime element describes the time of the observation. Note that this may be a time instant or a time period. The gml:using property contains or references a description of a sensor, instrument or procedure used for the observation. The gml:target property contains or references the specimen, region or station which is the object of the observation. This property is particularly useful for remote observations, such as photographs, where a generic location property might apply to the location of the camera or the location of the field of view, and thus may be ambiguous. The gml:subject element is provided as a convenient synonym for gml:target. This is the term commonly used in phtotography. The gml:resultOf property indicates the result of the observation. The value may be inline, or a reference to a value elsewhere.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="Observation"> with elements <DirectedObservation>
/// @brief The content model is a straightforward extension of gml:AbstractFeatureType; it automatically has the gml:identifier, gml:description, gml:descriptionReference, gml:name, and gml:boundedBy properties. The gml:validTime element describes the time of the observation. Note that this may be a time instant or a time period. The gml:using property contains or references a description of a sensor, instrument or procedure used for the observation. The gml:target property contains or references the specimen, region or station which is the object of the observation. This property is particularly useful for remote observations, such as photographs, where a generic location property might apply to the location of the camera or the location of the field of view, and thus may be ambiguous. The gml:subject element is provided as a convenient synonym for gml:target. This is the term commonly used in phtotography. The gml:resultOf property indicates the result of the observation. The value may be inline, or a reference to a value elsewhere.
/// Element Observation of type "http://www.opengis.net/gml/3.2":ObservationType.
    gml__ObservationType*                Observation                    1;	///< Required element.
/// @brief A gml:DirectedObservation is the same as an observation except that it adds an additional gml:direction property. This is the direction in which the observation was acquired. Clearly this applies only to certain types of observations such as visual observations by people, or observations obtained from terrestrial cameras.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="DirectedObservation"> with elements <DirectedObservationAtDistance>
/// @brief A gml:DirectedObservation is the same as an observation except that it adds an additional gml:direction property. This is the direction in which the observation was acquired. Clearly this applies only to certain types of observations such as visual observations by people, or observations obtained from terrestrial cameras.
/// Element DirectedObservation of type "http://www.opengis.net/gml/3.2":DirectedObservationType.
    gml__DirectedObservationType*        DirectedObservation            1;	///< Required element.
/// @brief gml:DirectedObservationAtDistance adds an additional distance property. This is the distance from the observer to the subject of the observation. Clearly this applies only to certain types of observations such as visual observations by people, or observations obtained from terrestrial cameras.
/// Element DirectedObservationAtDistance of type "http://www.opengis.net/gml/3.2":DirectedObservationAtDistanceType.
    gml__DirectedObservationAtDistanceType*  DirectedObservationAtDistance  1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
//  END OF CHOICE OF SUBSTITUTIONS
/// Abstract element AbstractFeatureCollection of type "http://www.opengis.net/gml/3.2":AbstractFeatureCollectionType.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractFeatureCollection"> with elements
//  END OF CHOICE OF SUBSTITUTIONS
;	///< Required element.
/// Element FeatureCollection of type "http://www.opengis.net/gml/3.2":FeatureCollectionType.
    gml__FeatureCollectionType*          FeatureCollection              1;	///< Required element.
/// @brief -- Definition -- Identifiable collection of spatial data. -- Description -- NOTE The type SpatialDataSet is offered as a pre-defined type for spatial data sets. The scope of this type is packaging pre-defined data sets for the non-direct access download service. It may be reused in thematic application schemas, but if it does not fit an application-schema-specific data set object should be modelled. This type may have the same name and definition like this type, but may have a different set of properties. This type specifies three properties: an external object identifier, a container for metadata (may be void), and an association to zero or more spatial objects.
/// Element SpatialDataSet of type "http://inspire.ec.europa.eu/schemas/base/3.3":SpatialDataSetType.
    base__SpatialDataSetType*            SpatialDataSet                 1;	///< Required element.
/// @brief -- Definition -- Identifiable collection of spatial data. -- Description -- NOTE The type SpatialDataSet is offered as a pre-defined type for spatial data sets. The scope of this type is packaging pre-defined data sets for the non-direct access download service. It may be reused in thematic application schemas, but if it does not fit an application-schema-specific data set object should be modelled. This type may have the same name and definition like this type, but may have a different set of properties. This type specifies three properties: an external object identifier, a container for metadata (may be void), and an association to zero or more spatial objects.
/// Element SpatialDataSet of type "http://inspire.ec.europa.eu/schemas/base/3.3":SpatialDataSetType.
    //jld base__SpatialDataSetType*            SpatialDataSet                 1;	///< Required element.
/// @brief -- Name -- zoning element -- Definition -- A spatial object which is homogeneous regarding the permitted uses of land based on zoning which separate one set of land uses from another. -- Description -- Zoning elements refer to the regulation of the kinds of activities which will be acceptable on particular lots (such as open space, residential, agricultural, commercial or industrial). The intensity of use at which those activities can be performed (from low-density housing such as single family homes to high-density such as high-rise apartment buildings), the height of buildings, the amount of space that structures may occupy, the proportions of the types of space on a lot, such as how much landscaped space, impervious surface, traffic lanes, and parking may be provided.
/// Element ZoningElement of type "http://inspire.ec.europa.eu/schemas/plu/3.0":ZoningElementType.
    plu__ZoningElementType*              ZoningElement                  1;	///< Required element.
/// @brief -- Name -- zoning element -- Definition -- A spatial object which is homogeneous regarding the permitted uses of land based on zoning which separate one set of land uses from another. -- Description -- Zoning elements refer to the regulation of the kinds of activities which will be acceptable on particular lots (such as open space, residential, agricultural, commercial or industrial). The intensity of use at which those activities can be performed (from low-density housing such as single family homes to high-density such as high-rise apartment buildings), the height of buildings, the amount of space that structures may occupy, the proportions of the types of space on a lot, such as how much landscaped space, impervious surface, traffic lanes, and parking may be provided.
/// Element ZoningElement of type "http://inspire.ec.europa.eu/schemas/plu/3.0":ZoningElementType.
    //jld plu__ZoningElementType*              ZoningElement                  1;	///< Required element.
/// @brief -- Name -- official documentation -- Definition -- The official documentation that composes the spatial plan; it may be composed of, the applicable legislation, the regulations, cartographic elements, descriptive elements that may be associated with the complete spatial plan, a zoning element or a supplementary regulation . In some Member States the actual textual regulation will be part of the data set (and can be put in the regulationText attribute), in other Member States the text will not be part of the data set and will be referenced via a reference to a document or a legal act. At least one of the three voidable values shall be provided. -- Description -- NOTE: The LegislationCitation is the value type of the attribute regulation reference. An example of a regulation reference would be: http://www2.vlaanderen.be /ruimtelijk/grup/00350/00362_00001/data/ 212_00362_00001_d_0BVR.pdf.
/// Element OfficialDocumentation of type "http://inspire.ec.europa.eu/schemas/plu/3.0":OfficialDocumentationType.
    plu__OfficialDocumentationType*      OfficialDocumentation          1;	///< Required element.
/// @brief -- Name -- official documentation -- Definition -- The official documentation that composes the spatial plan; it may be composed of, the applicable legislation, the regulations, cartographic elements, descriptive elements that may be associated with the complete spatial plan, a zoning element or a supplementary regulation . In some Member States the actual textual regulation will be part of the data set (and can be put in the regulationText attribute), in other Member States the text will not be part of the data set and will be referenced via a reference to a document or a legal act. At least one of the three voidable values shall be provided. -- Description -- NOTE: The LegislationCitation is the value type of the attribute regulation reference. An example of a regulation reference would be: http://www2.vlaanderen.be /ruimtelijk/grup/00350/00362_00001/data/ 212_00362_00001_d_0BVR.pdf.
/// Element OfficialDocumentation of type "http://inspire.ec.europa.eu/schemas/plu/3.0":OfficialDocumentationType.
    //jld plu__OfficialDocumentationType*      OfficialDocumentation          1;	///< Required element.
/// @brief -- Name -- supplementary regulation -- Definition -- A spatial object (point, line or polygon) of a spatial plan that provides supplementary information and/or limitation of the use of land/water necessary for spatial planning reasons or to formalise external rules defined in legal text. -- Description -- NOTE the supplementary regulations affects all land use that overlap with the geometry EXAMPLE an air field generates restriction in its surroundings regarding aircraft landing, radar and telecommunication devices. It is the buffer around these artefacts that generates the supplementary regulation on the Land Use.
/// Element SupplementaryRegulation of type "http://inspire.ec.europa.eu/schemas/plu/3.0":SupplementaryRegulationType.
    plu__SupplementaryRegulationType*    SupplementaryRegulation        1;	///< Required element.
/// @brief -- Name -- supplementary regulation -- Definition -- A spatial object (point, line or polygon) of a spatial plan that provides supplementary information and/or limitation of the use of land/water necessary for spatial planning reasons or to formalise external rules defined in legal text. -- Description -- NOTE the supplementary regulations affects all land use that overlap with the geometry EXAMPLE an air field generates restriction in its surroundings regarding aircraft landing, radar and telecommunication devices. It is the buffer around these artefacts that generates the supplementary regulation on the Land Use.
/// Element SupplementaryRegulation of type "http://inspire.ec.europa.eu/schemas/plu/3.0":SupplementaryRegulationType.
    //jld plu__SupplementaryRegulationType*    SupplementaryRegulation        1;	///< Required element.
/// @brief -- Name -- spatial plan -- Definition -- A set of documents that indicates a strategic direction for the development of a given geographic area, states the policies, priorities, programmes and land allocations that will implement the strategic direction and influences the distribution of people and activities in spaces of various scales. Spatial plans may be developed for urban planning, regional planning, environmental planning, landscape planning, national spatial plans, or spatial planning at the Union level.
/// Element SpatialPlan of type "http://inspire.ec.europa.eu/schemas/plu/3.0":SpatialPlanType.
    plu__SpatialPlanType*                SpatialPlan                    1;	///< Required element.
/// @brief -- Name -- spatial plan -- Definition -- A set of documents that indicates a strategic direction for the development of a given geographic area, states the policies, priorities, programmes and land allocations that will implement the strategic direction and influences the distribution of people and activities in spaces of various scales. Spatial plans may be developed for urban planning, regional planning, environmental planning, landscape planning, national spatial plans, or spatial planning at the Union level.
/// Element SpatialPlan of type "http://inspire.ec.europa.eu/schemas/plu/3.0":SpatialPlanType.
    //jld plu__SpatialPlanType*                SpatialPlan                    1;	///< Required element.
    }                                    __union_ProcedurePropertyType ;
//  END OF CHOICE OF SUBSTITUTIONS
    }>                                   __ProcedurePropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute owns of type xs:boolean.
   @bool                                 owns                           0 = false;	///< Default value="false".
/// Attribute nilReason of type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         remoteSchema                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.opengis.net/gml/3.2":TargetPropertyType is a complexType.
/// class gml__TargetPropertyType operations:
/// - soap_new_gml__TargetPropertyType(soap*) allocate
/// - soap_new_gml__TargetPropertyType(soap*, int num) allocate array
/// - soap_new_req_gml__TargetPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__TargetPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__TargetPropertyType(soap*, gml__TargetPropertyType*) deserialize from a stream
/// - int soap_write_gml__TargetPropertyType(soap, gml__TargetPropertyType*) serialize to a stream
class gml__TargetPropertyType : public xsd__anyType
{ public:
/// CHOICE <xs:choice minOccurs="0">
   $int                                  __union_TargetPropertyType     0;	///< Union _gml__union_TargetPropertyType selector: set to SOAP_UNION__gml__union_TargetPropertyType_<fieldname> or 0
/// Union for choice in type gml__TargetPropertyType
    union _gml__union_TargetPropertyType
    {
/// @brief This abstract element serves as the head of a substitution group which may contain any elements whose content model is derived from gml:AbstractFeatureType. This may be used as a variable in the construction of content models. gml:AbstractFeature may be thought of as "anything that is a GML feature" and may be used to define variables or templates in which the value of a GML property is "any feature". This occurs in particular in a GML feature collection where the feature member properties contain one or multiple copies of gml:AbstractFeature respectively.
/// Reference "http://www.opengis.net/gml/3.2":AbstractFeature to abstract element.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractFeature"> with elements <DynamicFeature> <AbstractCoverage> <AbstractContinuousCoverage> <Observation> <AbstractFeatureCollection> <FeatureCollection> <SpatialDataSet> <SpatialDataSet> <ZoningElement> <ZoningElement> <OfficialDocumentation> <OfficialDocumentation> <SupplementaryRegulation> <SupplementaryRegulation> <SpatialPlan> <SpatialPlan>
/// @brief States are captured by time-stamped instances of a feature. The content model extends the standard gml:AbstractFeatureType with the gml:dynamicProperties model group. Each time-stamped instance represents a 'snapshot' of a feature. The dynamic feature classes will normally be extended to suit particular applications. A dynamic feature bears either a time stamp or a history.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="DynamicFeature"> with elements <DynamicFeatureCollection>
/// @brief States are captured by time-stamped instances of a feature. The content model extends the standard gml:AbstractFeatureType with the gml:dynamicProperties model group. Each time-stamped instance represents a 'snapshot' of a feature. The dynamic feature classes will normally be extended to suit particular applications. A dynamic feature bears either a time stamp or a history.
/// Element DynamicFeature of type "http://www.opengis.net/gml/3.2":DynamicFeatureType.
    gml__DynamicFeatureType*             DynamicFeature                 1;	///< Required element.
/// @brief A gml:DynamicFeatureCollection is a feature collection that has a gml:validTime property (i.e. is a snapshot of the feature collection) or which has a gml:history property that contains one or more gml:AbstractTimeSlices each of which contain values of the time varying properties of the feature collection. Note that the gml:DynamicFeatureCollection may be one of the following: 1. A feature collection which consists of static feature members (members do not change in time) but which has properties of the collection object as a whole that do change in time . 2. A feature collection which consists of dynamic feature members (the members are gml:DynamicFeatures) but which also has properties of the collection as a whole that vary in time.
/// Element DynamicFeatureCollection of type "http://www.opengis.net/gml/3.2":DynamicFeatureCollectionType.
    gml__DynamicFeatureCollectionType*   DynamicFeatureCollection       1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
/// @brief This element serves as the head of a substitution group which may contain any coverage whose type is derived from gml:AbstractCoverageType. It may act as a variable in the definition of content models where it is required to permit any coverage to be valid.
/// Abstract element AbstractCoverage of type "http://www.opengis.net/gml/3.2":AbstractCoverageType.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractCoverage"> with elements <AbstractDiscreteCoverage>
/// @brief A discrete coverage consists of a domain set, range set and optionally a coverage function. The domain set consists of either spatial or temporal geometry objects, finite in number. The range set is comprised of a finite number of attribute values each of which is associated to every direct position within any single spatiotemporal object in the domain. In other words, the range values are constant on each spatiotemporal object in the domain. This coverage function maps each element from the coverage domain to an element in its range. The coverageFunction element describes the mapping function. This element serves as the head of a substitution group which may contain any discrete coverage whose type is derived from gml:DiscreteCoverageType.
/// Abstract element AbstractDiscreteCoverage of type "http://www.opengis.net/gml/3.2":DiscreteCoverageType.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractDiscreteCoverage"> with elements <MultiPointCoverage> <MultiCurveCoverage> <MultiSurfaceCoverage> <MultiSolidCoverage> <GridCoverage> <RectifiedGridCoverage>
/// @brief In a gml:MultiPointCoverage the domain set is a gml:MultiPoint, that is a collection of arbitrarily distributed geometric points. The content model is identical with gml:DiscreteCoverageType, but that gml:domainSet shall have values gml:MultiPoint. In a gml:MultiPointCoverage the mapping from the domain to the range is straightforward. - For gml:DataBlock encodings the points of the gml:MultiPoint are mapped in document order to the tuples of the data block. - For gml:CompositeValue encodings the points of the gml:MultiPoint are mapped to the members of the composite value in document order. - For gml:File encodings the points of the gml:MultiPoint are mapped to the records of the file in sequential order.
/// Element MultiPointCoverage of type "http://www.opengis.net/gml/3.2":DiscreteCoverageType.
    gml__DiscreteCoverageType*           MultiPointCoverage             1;	///< Required element.
/// @brief In a gml:MultiCurveCoverage the domain is partioned into a collection of curves comprising a gml:MultiCurve. The coverage function then maps each curve in the collection to a value in the range set. The content model is identical with gml:DiscreteCoverageType, but that gml:domainSet shall have values gml:MultiCurve. In a gml:MultiCurveCoverage the mapping from the domain to the range is straightforward. - For gml:DataBlock encodings the curves of the gml:MultiCurve are mapped in document order to the tuples of the data block. - For gml:CompositeValue encodings the curves of the gml:MultiCurve are mapped to the members of the composite value in document order. - For gml:File encodings the curves of the gml:MultiCurve are mapped to the records of the file in sequential order.
/// Element MultiCurveCoverage of type "http://www.opengis.net/gml/3.2":DiscreteCoverageType.
    gml__DiscreteCoverageType*           MultiCurveCoverage             1;	///< Required element.
/// @brief In a gml:MultiSurfaceCoverage the domain is partioned into a collection of surfaces comprising a gml:MultiSurface. The coverage function than maps each surface in the collection to a value in the range set. The content model is identical with gml:DiscreteCoverageType, but that gml:domainSet shall have values gml:MultiSurface. In a gml:MultiSurfaceCoverage the mapping from the domain to the range is straightforward. - For gml:DataBlock encodings the surfaces of the gml:MultiSurface are mapped in document order to the tuples of the data block. - For gml:CompositeValue encodings the surfaces of the gml:MultiSurface are mapped to the members of the composite value in document order. - For gml:File encodings the surfaces of the gml:MultiSurface are mapped to the records of the file in sequential order.
/// Element MultiSurfaceCoverage of type "http://www.opengis.net/gml/3.2":DiscreteCoverageType.
    gml__DiscreteCoverageType*           MultiSurfaceCoverage           1;	///< Required element.
/// @brief In a gml:MultiSolidCoverage the domain is partioned into a collection of solids comprising a gml:MultiSolid. The coverage function than maps each solid in the collection to a value in the range set. The content model is identical with gml:DiscreteCoverageType, but that gml:domainSet shall have values gml:MultiSolid. In a gml:MultiSolidCoverage the mapping from the domain to the range is straightforward. - For gml:DataBlock encodings the solids of the gml:MultiSolid are mapped in document order to the tuples of the data block. - For gml:CompositeValue encodings the solids of the gml:MultiSolid are mapped to the members of the composite value in document order. - For gml:File encodings the solids of the gml:MultiSolid are mapped to the records of the file in sequential order.
/// Element MultiSolidCoverage of type "http://www.opengis.net/gml/3.2":DiscreteCoverageType.
    gml__DiscreteCoverageType*           MultiSolidCoverage             1;	///< Required element.
/// @brief A gml:GriddedCoverage is a discrete point coverage in which the domain set is a geometric grid of points. Note that this is the same as the gml:MultiPointCoverage except that we have a gml:Grid to describe the domain. The simple gridded coverage is not geometrically referenced and hence no geometric positions are assignable to the points in the grid. Such geometric positioning is introduced in the gml:RectifiedGridCoverage.
/// Element GridCoverage of type "http://www.opengis.net/gml/3.2":DiscreteCoverageType.
    gml__DiscreteCoverageType*           GridCoverage                   1;	///< Required element.
/// @brief The gml:RectifiedGridCoverage is a discrete point coverage based on a rectified grid. It is similar to the grid coverage except that the points of the grid are geometrically referenced. The rectified grid coverage has a domain that is a gml:RectifiedGrid geometry.
/// Element RectifiedGridCoverage of type "http://www.opengis.net/gml/3.2":DiscreteCoverageType.
    gml__DiscreteCoverageType*           RectifiedGridCoverage          1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
//  END OF CHOICE OF SUBSTITUTIONS
/// @brief A continuous coverage as defined in ISO 19123 is a coverage that can return different values for the same feature attribute at different direct positions within a single spatiotemporal object in its spatiotemporal domain. The base type for continuous coverages is AbstractContinuousCoverageType. The coverageFunction element describes the mapping function. The abstract element gml:AbstractContinuousCoverage serves as the head of a substitution group which may contain any continuous coverage whose type is derived from gml:AbstractContinuousCoverageType.
/// Abstract element AbstractContinuousCoverage of type "http://www.opengis.net/gml/3.2":AbstractContinuousCoverageType.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractContinuousCoverage"> with elements
//  END OF CHOICE OF SUBSTITUTIONS
;	///< Required element.
/// @brief The content model is a straightforward extension of gml:AbstractFeatureType; it automatically has the gml:identifier, gml:description, gml:descriptionReference, gml:name, and gml:boundedBy properties. The gml:validTime element describes the time of the observation. Note that this may be a time instant or a time period. The gml:using property contains or references a description of a sensor, instrument or procedure used for the observation. The gml:target property contains or references the specimen, region or station which is the object of the observation. This property is particularly useful for remote observations, such as photographs, where a generic location property might apply to the location of the camera or the location of the field of view, and thus may be ambiguous. The gml:subject element is provided as a convenient synonym for gml:target. This is the term commonly used in phtotography. The gml:resultOf property indicates the result of the observation. The value may be inline, or a reference to a value elsewhere.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="Observation"> with elements <DirectedObservation>
/// @brief The content model is a straightforward extension of gml:AbstractFeatureType; it automatically has the gml:identifier, gml:description, gml:descriptionReference, gml:name, and gml:boundedBy properties. The gml:validTime element describes the time of the observation. Note that this may be a time instant or a time period. The gml:using property contains or references a description of a sensor, instrument or procedure used for the observation. The gml:target property contains or references the specimen, region or station which is the object of the observation. This property is particularly useful for remote observations, such as photographs, where a generic location property might apply to the location of the camera or the location of the field of view, and thus may be ambiguous. The gml:subject element is provided as a convenient synonym for gml:target. This is the term commonly used in phtotography. The gml:resultOf property indicates the result of the observation. The value may be inline, or a reference to a value elsewhere.
/// Element Observation of type "http://www.opengis.net/gml/3.2":ObservationType.
    gml__ObservationType*                Observation                    1;	///< Required element.
/// @brief A gml:DirectedObservation is the same as an observation except that it adds an additional gml:direction property. This is the direction in which the observation was acquired. Clearly this applies only to certain types of observations such as visual observations by people, or observations obtained from terrestrial cameras.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="DirectedObservation"> with elements <DirectedObservationAtDistance>
/// @brief A gml:DirectedObservation is the same as an observation except that it adds an additional gml:direction property. This is the direction in which the observation was acquired. Clearly this applies only to certain types of observations such as visual observations by people, or observations obtained from terrestrial cameras.
/// Element DirectedObservation of type "http://www.opengis.net/gml/3.2":DirectedObservationType.
    gml__DirectedObservationType*        DirectedObservation            1;	///< Required element.
/// @brief gml:DirectedObservationAtDistance adds an additional distance property. This is the distance from the observer to the subject of the observation. Clearly this applies only to certain types of observations such as visual observations by people, or observations obtained from terrestrial cameras.
/// Element DirectedObservationAtDistance of type "http://www.opengis.net/gml/3.2":DirectedObservationAtDistanceType.
    gml__DirectedObservationAtDistanceType*  DirectedObservationAtDistance  1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
//  END OF CHOICE OF SUBSTITUTIONS
/// Abstract element AbstractFeatureCollection of type "http://www.opengis.net/gml/3.2":AbstractFeatureCollectionType.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractFeatureCollection"> with elements
//  END OF CHOICE OF SUBSTITUTIONS
;	///< Required element.
/// Element FeatureCollection of type "http://www.opengis.net/gml/3.2":FeatureCollectionType.
    gml__FeatureCollectionType*          FeatureCollection              1;	///< Required element.
/// @brief -- Definition -- Identifiable collection of spatial data. -- Description -- NOTE The type SpatialDataSet is offered as a pre-defined type for spatial data sets. The scope of this type is packaging pre-defined data sets for the non-direct access download service. It may be reused in thematic application schemas, but if it does not fit an application-schema-specific data set object should be modelled. This type may have the same name and definition like this type, but may have a different set of properties. This type specifies three properties: an external object identifier, a container for metadata (may be void), and an association to zero or more spatial objects.
/// Element SpatialDataSet of type "http://inspire.ec.europa.eu/schemas/base/3.3":SpatialDataSetType.
    base__SpatialDataSetType*            SpatialDataSet                 1;	///< Required element.
/// @brief -- Definition -- Identifiable collection of spatial data. -- Description -- NOTE The type SpatialDataSet is offered as a pre-defined type for spatial data sets. The scope of this type is packaging pre-defined data sets for the non-direct access download service. It may be reused in thematic application schemas, but if it does not fit an application-schema-specific data set object should be modelled. This type may have the same name and definition like this type, but may have a different set of properties. This type specifies three properties: an external object identifier, a container for metadata (may be void), and an association to zero or more spatial objects.
/// Element SpatialDataSet of type "http://inspire.ec.europa.eu/schemas/base/3.3":SpatialDataSetType.
    //jld base__SpatialDataSetType*            SpatialDataSet                 1;	///< Required element.
/// @brief -- Name -- zoning element -- Definition -- A spatial object which is homogeneous regarding the permitted uses of land based on zoning which separate one set of land uses from another. -- Description -- Zoning elements refer to the regulation of the kinds of activities which will be acceptable on particular lots (such as open space, residential, agricultural, commercial or industrial). The intensity of use at which those activities can be performed (from low-density housing such as single family homes to high-density such as high-rise apartment buildings), the height of buildings, the amount of space that structures may occupy, the proportions of the types of space on a lot, such as how much landscaped space, impervious surface, traffic lanes, and parking may be provided.
/// Element ZoningElement of type "http://inspire.ec.europa.eu/schemas/plu/3.0":ZoningElementType.
    plu__ZoningElementType*              ZoningElement                  1;	///< Required element.
/// @brief -- Name -- zoning element -- Definition -- A spatial object which is homogeneous regarding the permitted uses of land based on zoning which separate one set of land uses from another. -- Description -- Zoning elements refer to the regulation of the kinds of activities which will be acceptable on particular lots (such as open space, residential, agricultural, commercial or industrial). The intensity of use at which those activities can be performed (from low-density housing such as single family homes to high-density such as high-rise apartment buildings), the height of buildings, the amount of space that structures may occupy, the proportions of the types of space on a lot, such as how much landscaped space, impervious surface, traffic lanes, and parking may be provided.
/// Element ZoningElement of type "http://inspire.ec.europa.eu/schemas/plu/3.0":ZoningElementType.
    //jld plu__ZoningElementType*              ZoningElement                  1;	///< Required element.
/// @brief -- Name -- official documentation -- Definition -- The official documentation that composes the spatial plan; it may be composed of, the applicable legislation, the regulations, cartographic elements, descriptive elements that may be associated with the complete spatial plan, a zoning element or a supplementary regulation . In some Member States the actual textual regulation will be part of the data set (and can be put in the regulationText attribute), in other Member States the text will not be part of the data set and will be referenced via a reference to a document or a legal act. At least one of the three voidable values shall be provided. -- Description -- NOTE: The LegislationCitation is the value type of the attribute regulation reference. An example of a regulation reference would be: http://www2.vlaanderen.be /ruimtelijk/grup/00350/00362_00001/data/ 212_00362_00001_d_0BVR.pdf.
/// Element OfficialDocumentation of type "http://inspire.ec.europa.eu/schemas/plu/3.0":OfficialDocumentationType.
    plu__OfficialDocumentationType*      OfficialDocumentation          1;	///< Required element.
/// @brief -- Name -- official documentation -- Definition -- The official documentation that composes the spatial plan; it may be composed of, the applicable legislation, the regulations, cartographic elements, descriptive elements that may be associated with the complete spatial plan, a zoning element or a supplementary regulation . In some Member States the actual textual regulation will be part of the data set (and can be put in the regulationText attribute), in other Member States the text will not be part of the data set and will be referenced via a reference to a document or a legal act. At least one of the three voidable values shall be provided. -- Description -- NOTE: The LegislationCitation is the value type of the attribute regulation reference. An example of a regulation reference would be: http://www2.vlaanderen.be /ruimtelijk/grup/00350/00362_00001/data/ 212_00362_00001_d_0BVR.pdf.
/// Element OfficialDocumentation of type "http://inspire.ec.europa.eu/schemas/plu/3.0":OfficialDocumentationType.
    //jld plu__OfficialDocumentationType*      OfficialDocumentation          1;	///< Required element.
/// @brief -- Name -- supplementary regulation -- Definition -- A spatial object (point, line or polygon) of a spatial plan that provides supplementary information and/or limitation of the use of land/water necessary for spatial planning reasons or to formalise external rules defined in legal text. -- Description -- NOTE the supplementary regulations affects all land use that overlap with the geometry EXAMPLE an air field generates restriction in its surroundings regarding aircraft landing, radar and telecommunication devices. It is the buffer around these artefacts that generates the supplementary regulation on the Land Use.
/// Element SupplementaryRegulation of type "http://inspire.ec.europa.eu/schemas/plu/3.0":SupplementaryRegulationType.
    plu__SupplementaryRegulationType*    SupplementaryRegulation        1;	///< Required element.
/// @brief -- Name -- supplementary regulation -- Definition -- A spatial object (point, line or polygon) of a spatial plan that provides supplementary information and/or limitation of the use of land/water necessary for spatial planning reasons or to formalise external rules defined in legal text. -- Description -- NOTE the supplementary regulations affects all land use that overlap with the geometry EXAMPLE an air field generates restriction in its surroundings regarding aircraft landing, radar and telecommunication devices. It is the buffer around these artefacts that generates the supplementary regulation on the Land Use.
/// Element SupplementaryRegulation of type "http://inspire.ec.europa.eu/schemas/plu/3.0":SupplementaryRegulationType.
    //jld plu__SupplementaryRegulationType*    SupplementaryRegulation        1;	///< Required element.
/// @brief -- Name -- spatial plan -- Definition -- A set of documents that indicates a strategic direction for the development of a given geographic area, states the policies, priorities, programmes and land allocations that will implement the strategic direction and influences the distribution of people and activities in spaces of various scales. Spatial plans may be developed for urban planning, regional planning, environmental planning, landscape planning, national spatial plans, or spatial planning at the Union level.
/// Element SpatialPlan of type "http://inspire.ec.europa.eu/schemas/plu/3.0":SpatialPlanType.
    plu__SpatialPlanType*                SpatialPlan                    1;	///< Required element.
/// @brief -- Name -- spatial plan -- Definition -- A set of documents that indicates a strategic direction for the development of a given geographic area, states the policies, priorities, programmes and land allocations that will implement the strategic direction and influences the distribution of people and activities in spaces of various scales. Spatial plans may be developed for urban planning, regional planning, environmental planning, landscape planning, national spatial plans, or spatial planning at the Union level.
/// Element SpatialPlan of type "http://inspire.ec.europa.eu/schemas/plu/3.0":SpatialPlanType.
    //jld plu__SpatialPlanType*                SpatialPlan                    1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
/// @brief The AbstractGeometry element is the abstract head of the substitution group for all geometry elements of GML. This includes pre-defined and user-defined geometry elements. Any geometry element shall be a direct or indirect extension/restriction of AbstractGeometryType and shall be directly or indirectly in the substitution group of AbstractGeometry.
/// Reference "http://www.opengis.net/gml/3.2":AbstractGeometry to abstract element.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractGeometry"> with elements <GeometricComplex> <AbstractGeometricAggregate> <AbstractGeometricPrimitive> <AbstractImplicitGeometry>
/// Element GeometricComplex of type "http://www.opengis.net/gml/3.2":GeometricComplexType.
    gml__GeometricComplexType*           GeometricComplex               1;	///< Required element.
/// @brief gml:AbstractGeometricAggregate is the abstract head of the substitution group for all geometric aggregates.
/// Abstract element AbstractGeometricAggregate of type "http://www.opengis.net/gml/3.2":AbstractGeometricAggregateType.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractGeometricAggregate"> with elements <MultiGeometry> <MultiPoint> <MultiCurve> <MultiSurface> <MultiSolid>
/// @brief gml:MultiGeometry is a collection of one or more GML geometry objects of arbitrary type. The members of the geometric aggregate may be specified either using the "standard" property (gml:geometryMember) or the array property (gml:geometryMembers). It is also valid to use both the "standard" and the array properties in the same collection.
/// Element MultiGeometry of type "http://www.opengis.net/gml/3.2":MultiGeometryType.
    gml__MultiGeometryType*              MultiGeometry                  1;	///< Required element.
/// @brief A gml:MultiPoint consists of one or more gml:Points. The members of the geometric aggregate may be specified either using the "standard" property (gml:pointMember) or the array property (gml:pointMembers). It is also valid to use both the "standard" and the array properties in the same collection.
/// Element MultiPoint of type "http://www.opengis.net/gml/3.2":MultiPointType.
    gml__MultiPointType*                 MultiPoint                     1;	///< Required element.
/// @brief A gml:MultiCurve is defined by one or more gml:AbstractCurves. The members of the geometric aggregate may be specified either using the "standard" property (gml:curveMember) or the array property (gml:curveMembers). It is also valid to use both the "standard" and the array properties in the same collection.
/// Element MultiCurve of type "http://www.opengis.net/gml/3.2":MultiCurveType.
    gml__MultiCurveType*                 MultiCurve                     1;	///< Required element.
/// @brief A gml:MultiSurface is defined by one or more gml:AbstractSurfaces. The members of the geometric aggregate may be specified either using the "standard" property (gml:surfaceMember) or the array property (gml:surfaceMembers). It is also valid to use both the "standard" and the array properties in the same collection.
/// Element MultiSurface of type "http://www.opengis.net/gml/3.2":MultiSurfaceType.
    gml__MultiSurfaceType*               MultiSurface                   1;	///< Required element.
/// @brief A gml:MultiSolid is defined by one or more gml:AbstractSolids. The members of the geometric aggregate may be specified either using the "standard" property (gml:solidMember) or the array property (gml:solidMembers). It is also valid to use both the "standard" and the array properties in the same collection.
/// Element MultiSolid of type "http://www.opengis.net/gml/3.2":MultiSolidType.
    gml__MultiSolidType*                 MultiSolid                     1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
/// @brief The AbstractGeometricPrimitive element is the abstract head of the substitution group for all (pre- and user-defined) geometric primitives.
/// Abstract element AbstractGeometricPrimitive of type "http://www.opengis.net/gml/3.2":AbstractGeometricPrimitiveType.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractGeometricPrimitive"> with elements <AbstractSolid> <AbstractSurface> <Point> <AbstractCurve>
/// @brief The AbstractSolid element is the abstract head of the substituition group for all (continuous) solid elements.
/// Abstract element AbstractSolid of type "http://www.opengis.net/gml/3.2":AbstractSolidType.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractSolid"> with elements <CompositeSolid> <Solid>
/// @brief gml:CompositeSolid implements ISO 19107 GM_CompositeSolid (see ISO 19107:2003, 6.6.7) as specified in D.2.3.6. A gml:CompositeSolid is represented by a set of orientable surfaces. It is a geometry type with all the geometric properties of a (primitive) solid. Essentially, a composite solid is a collection of solids that join in pairs on common boundary surfaces and which, when considered as a whole, form a single solid. solidMember references or contains one solid in the composite solid. The solids are contiguous.
/// Element CompositeSolid of type "http://www.opengis.net/gml/3.2":CompositeSolidType.
    gml__CompositeSolidType*             CompositeSolid                 1;	///< Required element.
/// @brief A solid is the basis for 3-dimensional geometry. The extent of a solid is defined by the boundary surfaces as specified in ISO 19107:2003, 6.3.18. exterior specifies the outer boundary, interior the inner boundary of the solid.
/// Element Solid of type "http://www.opengis.net/gml/3.2":SolidType.
    gml__SolidType*                      Solid                          1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
/// @brief The AbstractSurface element is the abstract head of the substitution group for all (continuous) surface elements.
/// Abstract element AbstractSurface of type "http://www.opengis.net/gml/3.2":AbstractSurfaceType.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractSurface"> with elements <CompositeSurface> <Surface> <OrientableSurface> <Polygon>
/// @brief A gml:CompositeSurface is represented by a set of orientable surfaces. It is geometry type with all the geometric properties of a (primitive) surface. Essentially, a composite surface is a collection of surfaces that join in pairs on common boundary curves and which, when considered as a whole, form a single surface. surfaceMember references or contains inline one surface in the composite surface. The surfaces are contiguous.
/// Element CompositeSurface of type "http://www.opengis.net/gml/3.2":CompositeSurfaceType.
    gml__CompositeSurfaceType*           CompositeSurface               1;	///< Required element.
/// @brief A Surface is a 2-dimensional primitive and is composed of one or more surface patches as specified in ISO 19107:2003, 6.3.17.1. The surface patches are connected to one another. patches encapsulates the patches of the surface.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="Surface"> with elements <PolyhedralSurface> <TriangulatedSurface>
/// @brief A Surface is a 2-dimensional primitive and is composed of one or more surface patches as specified in ISO 19107:2003, 6.3.17.1. The surface patches are connected to one another. patches encapsulates the patches of the surface.
/// Element Surface of type "http://www.opengis.net/gml/3.2":SurfaceType.
    gml__SurfaceType*                    Surface                        1;	///< Required element.
/// @brief A polyhedral surface is a surface composed of polygon patches connected along their common boundary curves. This differs from the surface type only in the restriction on the types of surface patches acceptable. polygonPatches encapsulates the polygon patches of the polyhedral surface.
/// Element PolyhedralSurface of type "http://www.opengis.net/gml/3.2":SurfaceType.
    gml__SurfaceType*                    PolyhedralSurface              1;	///< Required element.
/// @brief A triangulated surface is a polyhedral surface that is composed only of triangles. There is no restriction on how the triangulation is derived. trianglePatches encapsulates the triangles of the triangulated surface.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="TriangulatedSurface"> with elements <Tin>
/// @brief A triangulated surface is a polyhedral surface that is composed only of triangles. There is no restriction on how the triangulation is derived. trianglePatches encapsulates the triangles of the triangulated surface.
/// Element TriangulatedSurface of type "http://www.opengis.net/gml/3.2":SurfaceType.
    gml__SurfaceType*                    TriangulatedSurface            1;	///< Required element.
/// @brief A tin is a triangulated surface that uses the Delauny algorithm or a similar algorithm complemented with consideration of stoplines (stopLines), breaklines (breakLines), and maximum length of triangle sides (maxLength). controlPoint shall contain a set of the positions (three or more) used as posts for this TIN (corners of the triangles in the TIN). See ISO 19107:2003, 6.4.39 for details.
/// Element Tin of type "http://www.opengis.net/gml/3.2":TinType.
    gml__TinType*                        Tin                            1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
//  END OF CHOICE OF SUBSTITUTIONS
/// @brief OrientableSurface consists of a surface and an orientation. If the orientation is "+", then the OrientableSurface is identical to the baseSurface. If the orientation is "-", then the OrientableSurface is a reference to a gml:AbstractSurface with an up-normal that reverses the direction for this OrientableSurface, the sense of "the top of the surface".
/// Element OrientableSurface of type "http://www.opengis.net/gml/3.2":OrientableSurfaceType.
    gml__OrientableSurfaceType*          OrientableSurface              1;	///< Required element.
/// @brief A Polygon is a special surface that is defined by a single surface patch (see D.3.6). The boundary of this patch is coplanar and the polygon uses planar interpolation in its interior. The elements exterior and interior describe the surface boundary of the polygon.
/// Element Polygon of type "http://www.opengis.net/gml/3.2":PolygonType.
    gml__PolygonType*                    Polygon                        1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
/// @brief A Point is defined by a single coordinate tuple. The direct position of a point is specified by the pos element which is of type DirectPositionType.
/// Element Point of type "http://www.opengis.net/gml/3.2":PointType.
    gml__PointType*                      Point                          1;	///< Required element.
/// @brief The AbstractCurve element is the abstract head of the substitution group for all (continuous) curve elements.
/// Abstract element AbstractCurve of type "http://www.opengis.net/gml/3.2":AbstractCurveType.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractCurve"> with elements <CompositeCurve> <Curve> <OrientableCurve> <LineString>
/// @brief A gml:CompositeCurve is represented by a sequence of (orientable) curves such that each curve in the sequence terminates at the start point of the subsequent curve in the list. curveMember references or contains inline one curve in the composite curve. The curves are contiguous, the collection of curves is ordered. Therefore, if provided, the aggregationType attribute shall have the value "sequence".
/// Element CompositeCurve of type "http://www.opengis.net/gml/3.2":CompositeCurveType.
    gml__CompositeCurveType*             CompositeCurve                 1;	///< Required element.
/// @brief A curve is a 1-dimensional primitive. Curves are continuous, connected, and have a measurable length in terms of the coordinate system. A curve is composed of one or more curve segments. Each curve segment within a curve may be defined using a different interpolation method. The curve segments are connected to one another, with the end point of each segment except the last being the start point of the next segment in the segment list. The orientation of the curve is positive. The element segments encapsulates the segments of the curve.
/// Element Curve of type "http://www.opengis.net/gml/3.2":CurveType.
    gml__CurveType*                      Curve                          1;	///< Required element.
/// @brief OrientableCurve consists of a curve and an orientation. If the orientation is "+", then the OrientableCurve is identical to the baseCurve. If the orientation is "-", then the OrientableCurve is related to another AbstractCurve with a parameterization that reverses the sense of the curve traversal.
/// Element OrientableCurve of type "http://www.opengis.net/gml/3.2":OrientableCurveType.
    gml__OrientableCurveType*            OrientableCurve                1;	///< Required element.
/// @brief A LineString is a special curve that consists of a single segment with linear interpolation. It is defined by two or more coordinate tuples, with linear interpolation between them. The number of direct positions in the list shall be at least two.
/// Element LineString of type "http://www.opengis.net/gml/3.2":LineStringType.
    gml__LineStringType*                 LineString                     1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
//  END OF CHOICE OF SUBSTITUTIONS
/// Abstract element AbstractImplicitGeometry of type "http://www.opengis.net/gml/3.2":AbstractGeometryType.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractImplicitGeometry"> with elements <Grid>
/// @brief The gml:Grid implicitly defines an unrectified grid, which is a network composed of two or more sets of curves in which the members of each set intersect the members of the other sets in an algorithmic way. The region of interest within the grid is given in terms of its gml:limits, being the grid coordinates of diagonally opposed corners of a rectangular region. gml:axisLabels is provided with a list of labels of the axes of the grid (gml:axisName has been deprecated). gml:dimension specifies the dimension of the grid. The gml:limits element contains a single gml:GridEnvelope. The gml:low and gml:high property elements of the envelope are each integerLists, which are coordinate tuples, the coordinates being measured as offsets from the origin of the grid along each axis, of the diagonally opposing corners of a "rectangular" region of interest.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="Grid"> with elements <RectifiedGrid>
/// @brief The gml:Grid implicitly defines an unrectified grid, which is a network composed of two or more sets of curves in which the members of each set intersect the members of the other sets in an algorithmic way. The region of interest within the grid is given in terms of its gml:limits, being the grid coordinates of diagonally opposed corners of a rectangular region. gml:axisLabels is provided with a list of labels of the axes of the grid (gml:axisName has been deprecated). gml:dimension specifies the dimension of the grid. The gml:limits element contains a single gml:GridEnvelope. The gml:low and gml:high property elements of the envelope are each integerLists, which are coordinate tuples, the coordinates being measured as offsets from the origin of the grid along each axis, of the diagonally opposing corners of a "rectangular" region of interest.
/// Element Grid of type "http://www.opengis.net/gml/3.2":GridType.
    gml__GridType*                       Grid                           1;	///< Required element.
/// @brief A rectified grid is a grid for which there is an affine transformation between the grid coordinates and the coordinates of an external coordinate reference system. It is defined by specifying the position (in some geometric space) of the grid "origin" and of the vectors that specify the post locations. Note that the grid limits (post indexes) and axis name properties are inherited from gml:GridType and that gml:RectifiedGrid adds a gml:origin property (contains or references a gml:Point) and a set of gml:offsetVector properties.
/// Element RectifiedGrid of type "http://www.opengis.net/gml/3.2":RectifiedGridType.
    gml__RectifiedGridType*              RectifiedGrid                  1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
//  END OF CHOICE OF SUBSTITUTIONS
//  END OF CHOICE OF SUBSTITUTIONS
    }                                    union_TargetPropertyType      ;
//  END OF CHOICE
/// Attribute owns of type xs:boolean.
   @bool                                 owns                           0 = false;	///< Default value="false".
/// Attribute nilReason of type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         remoteSchema                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.opengis.net/gml/3.2":ResultType is a complexType.
/// class gml__ResultType operations:
/// - soap_new_gml__ResultType(soap*) allocate
/// - soap_new_gml__ResultType(soap*, int num) allocate array
/// - soap_new_req_gml__ResultType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__ResultType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__ResultType(soap*, gml__ResultType*) deserialize from a stream
/// - int soap_write_gml__ResultType(soap, gml__ResultType*) serialize to a stream
class gml__ResultType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gml__ResultType_sequence
    {
/// TODO: <any namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __any                         0;	///< Catch any element content in XML string.
    }>                                   __ResultType_sequence          0;
//  END OF SEQUENCE
/// Attribute owns of type xs:boolean.
   @bool                                 owns                           0 = false;	///< Default value="false".
/// Attribute nilReason of type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         remoteSchema                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.opengis.net/gml/3.2":DirectionPropertyType is a complexType.
/// class gml__DirectionPropertyType operations:
/// - soap_new_gml__DirectionPropertyType(soap*) allocate
/// - soap_new_gml__DirectionPropertyType(soap*, int num) allocate array
/// - soap_new_req_gml__DirectionPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__DirectionPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__DirectionPropertyType(soap*, gml__DirectionPropertyType*) deserialize from a stream
/// - int soap_write_gml__DirectionPropertyType(soap, gml__DirectionPropertyType*) serialize to a stream
class gml__DirectionPropertyType : public xsd__anyType
{ public:
/// CHOICE <xs:choice minOccurs="0">
   $int                                  __union_DirectionPropertyType  0;	///< Union _gml__union_DirectionPropertyType selector: set to SOAP_UNION__gml__union_DirectionPropertyType_<fieldname> or 0
/// Union for choice in type gml__DirectionPropertyType
    union _gml__union_DirectionPropertyType
    {
/// Element DirectionVector of type "http://www.opengis.net/gml/3.2":DirectionVectorType.
    gml__DirectionVectorType*            DirectionVector                1;	///< Required element.
/// Element DirectionDescription of type "http://www.opengis.net/gml/3.2":DirectionDescriptionType.
    gml__DirectionDescriptionType*       DirectionDescription           1;	///< Required element.
/// Element CompassPoint of type "http://www.opengis.net/gml/3.2":CompassPointEnumeration.
    enum gml__CompassPointEnumeration    CompassPoint                   1;	///< Required element.
/// Element DirectionKeyword of type "http://www.opengis.net/gml/3.2":CodeType.
    gml__CodeType*                       DirectionKeyword               1;	///< Required element.
/// Element DirectionString of type "http://www.opengis.net/gml/3.2":StringOrRefType.
    gml__StringOrRefType*                DirectionString                1;	///< Required element.
    }                                    union_DirectionPropertyType   ;
//  END OF CHOICE
/// Attribute owns of type xs:boolean.
   @bool                                 owns                           0 = false;	///< Default value="false".
/// Attribute nilReason of type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         remoteSchema                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.opengis.net/gml/3.2":DirectionVectorType is a complexType.
/// @brief Direction vectors are specified by providing components of a vector.
/// class gml__DirectionVectorType operations:
/// - soap_new_gml__DirectionVectorType(soap*) allocate
/// - soap_new_gml__DirectionVectorType(soap*, int num) allocate array
/// - soap_new_req_gml__DirectionVectorType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__DirectionVectorType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__DirectionVectorType(soap*, gml__DirectionVectorType*) deserialize from a stream
/// - int soap_write_gml__DirectionVectorType(soap, gml__DirectionVectorType*) serialize to a stream
class gml__DirectionVectorType : public xsd__anyType
{ public:
/// CHOICE <xs:choice>
/// Note: <xs:choice> with embedded <xs:sequence> or <xs:group> prevents the use of a union
/// Element reference "http://www.opengis.net/gml/3.2":vector.
    gml__VectorType*                     vector                        ;
/// SEQUENCE <xs:sequence>
/// Element horizontalAngle of type "http://www.opengis.net/gml/3.2":AngleType.
    gml__AngleType*                      horizontalAngle               ;
/// Element verticalAngle of type "http://www.opengis.net/gml/3.2":AngleType.
    gml__AngleType*                      verticalAngle                 ;
//  END OF SEQUENCE
;
//  END OF CHOICE
};

/// "http://www.opengis.net/gml/3.2":DirectionDescriptionType is a complexType.
/// @brief direction descriptions are specified by a compass point code, a keyword, a textual description or a reference to a description. A gml:compassPoint is specified by a simple enumeration. In addition, thre elements to contain text-based descriptions of direction are provided. If the direction is specified using a term from a list, gml:keyword should be used, and the list indicated using the value of the codeSpace attribute. if the direction is decribed in prose, gml:direction or gml:reference should be used, allowing the value to be included inline or by reference.
/// class gml__DirectionDescriptionType operations:
/// - soap_new_gml__DirectionDescriptionType(soap*) allocate
/// - soap_new_gml__DirectionDescriptionType(soap*, int num) allocate array
/// - soap_new_req_gml__DirectionDescriptionType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__DirectionDescriptionType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__DirectionDescriptionType(soap*, gml__DirectionDescriptionType*) deserialize from a stream
/// - int soap_write_gml__DirectionDescriptionType(soap, gml__DirectionDescriptionType*) serialize to a stream
class gml__DirectionDescriptionType : public xsd__anyType
{ public:
/// CHOICE <xs:choice>
   $int                                  __union_DirectionDescriptionType;	///< Union _gml__union_DirectionDescriptionType selector: set to SOAP_UNION__gml__union_DirectionDescriptionType_<fieldname>
/// Union for choice in type gml__DirectionDescriptionType
    union _gml__union_DirectionDescriptionType
    {
/// Element compassPoint of type "http://www.opengis.net/gml/3.2":CompassPointEnumeration.
    enum gml__CompassPointEnumeration    compassPoint                   1;	///< Required element.
/// Element keyword of type "http://www.opengis.net/gml/3.2":CodeType.
    gml__CodeType*                       keyword                        1;	///< Required element.
/// Element description of type xs:string.
    std::string*                         description                    1;	///< Required element.
/// Element reference of type "http://www.opengis.net/gml/3.2":ReferenceType.
    gml__ReferenceType*                  reference                      1;	///< Required element.
    }                                    union_DirectionDescriptionType;
//  END OF CHOICE
};

/// "http://www.opengis.net/gml/3.2":TimeCalendarPropertyType is a complexType.
/// @brief gml:TimeCalendarPropertyType provides for associating a gml:TimeCalendar with an object.
/// class gml__TimeCalendarPropertyType operations:
/// - soap_new_gml__TimeCalendarPropertyType(soap*) allocate
/// - soap_new_gml__TimeCalendarPropertyType(soap*, int num) allocate array
/// - soap_new_req_gml__TimeCalendarPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__TimeCalendarPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__TimeCalendarPropertyType(soap*, gml__TimeCalendarPropertyType*) deserialize from a stream
/// - int soap_write_gml__TimeCalendarPropertyType(soap, gml__TimeCalendarPropertyType*) serialize to a stream
class gml__TimeCalendarPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gml__TimeCalendarPropertyType_sequence
    {
/// @brief A calendar is a discrete temporal reference system that provides a basis for defining temporal position to a resolution of one day. gml:TimeCalendar adds one property to those inherited from gml:TimeReferenceSystem. A gml:referenceFrame provides a link to a gml:TimeCalendarEra that it uses. A gml:TimeCalendar may reference more than one calendar era. The referenceFrame element follows the standard GML property model, allowing the association to be instantiated either using an inline description using the gml:TimeCalendarEra element, or a link to a gml:TimeCalendarEra which is explicit elsewhere.
/// Element reference "http://www.opengis.net/gml/3.2":TimeCalendar.
    gml__TimeCalendarType*               TimeCalendar                   1;	///< Required element.
    }>                                   __TimeCalendarPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute owns of type xs:boolean.
   @bool                                 owns                           0 = false;	///< Default value="false".
/// Attribute nilReason of type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         remoteSchema                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.opengis.net/gml/3.2":TimeCalendarEraPropertyType is a complexType.
/// @brief gml:TimeCalendarEraPropertyType provides for associating a gml:TimeCalendarEra with an object.
/// class gml__TimeCalendarEraPropertyType operations:
/// - soap_new_gml__TimeCalendarEraPropertyType(soap*) allocate
/// - soap_new_gml__TimeCalendarEraPropertyType(soap*, int num) allocate array
/// - soap_new_req_gml__TimeCalendarEraPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__TimeCalendarEraPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__TimeCalendarEraPropertyType(soap*, gml__TimeCalendarEraPropertyType*) deserialize from a stream
/// - int soap_write_gml__TimeCalendarEraPropertyType(soap, gml__TimeCalendarEraPropertyType*) serialize to a stream
class gml__TimeCalendarEraPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gml__TimeCalendarEraPropertyType_sequence
    {
/// @brief gml:TimeCalendarEra inherits basic properties from gml:DefinitionType and has the following additional properties: - gml:referenceEvent is the name or description of a mythical or historic event which fixes the position of the base scale of the calendar era. This is given as text or using a link to description held elsewhere. - gml:referenceDate specifies the date of the referenceEvent expressed as a date in the given calendar. In most calendars, this date is the origin (i.e., the first day) of the scale, but this is not always true. - gml:julianReference specifies the Julian date that corresponds to the reference date. The Julian day number is an integer value; the Julian date is a decimal value that allows greater resolution. Transforming calendar dates to and from Julian dates provides a relatively simple basis for transforming dates from one calendar to another. - gml:epochOfUse is the period for which the calendar era was used as a basis for dating.
/// Element reference "http://www.opengis.net/gml/3.2":TimeCalendarEra.
    gml__TimeCalendarEraType*            TimeCalendarEra                1;	///< Required element.
    }>                                   __TimeCalendarEraPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute owns of type xs:boolean.
   @bool                                 owns                           0 = false;	///< Default value="false".
/// Attribute nilReason of type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         remoteSchema                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.opengis.net/gml/3.2":TimeClockPropertyType is a complexType.
/// @brief gml:TimeClockPropertyType provides for associating a gml:TimeClock with an object.
/// class gml__TimeClockPropertyType operations:
/// - soap_new_gml__TimeClockPropertyType(soap*) allocate
/// - soap_new_gml__TimeClockPropertyType(soap*, int num) allocate array
/// - soap_new_req_gml__TimeClockPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__TimeClockPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__TimeClockPropertyType(soap*, gml__TimeClockPropertyType*) deserialize from a stream
/// - int soap_write_gml__TimeClockPropertyType(soap, gml__TimeClockPropertyType*) serialize to a stream
class gml__TimeClockPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gml__TimeClockPropertyType_sequence
    {
/// @brief A clock provides a basis for defining temporal position within a day. A clock shall be used with a calendar in order to provide a complete description of a temporal position within a specific day. gml:TimeClock adds the following properties to those inherited from gml:TimeReferenceSystemType: - gml:referenceEvent is the name or description of an event, such as solar noon or sunrise, which fixes the position of the base scale of the clock. - gml:referenceTime specifies the time of day associated with the reference event expressed as a time of day in the given clock. The reference time is usually the origin of the clock scale. - gml:utcReference specifies the 24 hour local or UTC time that corresponds to the reference time. - gml:dateBasis contains or references the calendars that use this clock.
/// Element reference "http://www.opengis.net/gml/3.2":TimeClock.
    gml__TimeClockType*                  TimeClock                      1;	///< Required element.
    }>                                   __TimeClockPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute owns of type xs:boolean.
   @bool                                 owns                           0 = false;	///< Default value="false".
/// Attribute nilReason of type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         remoteSchema                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.opengis.net/gml/3.2":TimeOrdinalEraPropertyType is a complexType.
/// @brief gml:TimeOrdinalEraPropertyType provides for associating a gml:TimeOrdinalEra with an object.
/// class gml__TimeOrdinalEraPropertyType operations:
/// - soap_new_gml__TimeOrdinalEraPropertyType(soap*) allocate
/// - soap_new_gml__TimeOrdinalEraPropertyType(soap*, int num) allocate array
/// - soap_new_req_gml__TimeOrdinalEraPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__TimeOrdinalEraPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__TimeOrdinalEraPropertyType(soap*, gml__TimeOrdinalEraPropertyType*) deserialize from a stream
/// - int soap_write_gml__TimeOrdinalEraPropertyType(soap, gml__TimeOrdinalEraPropertyType*) serialize to a stream
class gml__TimeOrdinalEraPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gml__TimeOrdinalEraPropertyType_sequence
    {
/// @brief Its content model follows the pattern of gml:TimeEdge, inheriting standard properties from gml:DefinitionType, and adding gml:start, gml:end and gml:extent properties, a set of gml:member properties which indicate ordered gml:TimeOrdinalEra elements, and a gml:group property which points to the parent era. The recursive inclusion of gml:TimeOrdinalEra elements allow the construction of an arbitrary depth hierarchical ordinal reference schema, such that an ordinal era at a given level of the hierarchy includes a sequence of shorter, coterminous ordinal eras.
/// Element reference "http://www.opengis.net/gml/3.2":TimeOrdinalEra.
    gml__TimeOrdinalEraType*             TimeOrdinalEra                 1;	///< Required element.
    }>                                   __TimeOrdinalEraPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute owns of type xs:boolean.
   @bool                                 owns                           0 = false;	///< Default value="false".
/// Attribute nilReason of type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         remoteSchema                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.opengis.net/gml/3.2":TimeTopologyPrimitivePropertyType is a complexType.
/// @brief gml:TimeTopologyPrimitivePropertyType provides for associating a gml:AbstractTimeTopologyPrimitive with an object.
/// class gml__TimeTopologyPrimitivePropertyType operations:
/// - soap_new_gml__TimeTopologyPrimitivePropertyType(soap*) allocate
/// - soap_new_gml__TimeTopologyPrimitivePropertyType(soap*, int num) allocate array
/// - soap_new_req_gml__TimeTopologyPrimitivePropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__TimeTopologyPrimitivePropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__TimeTopologyPrimitivePropertyType(soap*, gml__TimeTopologyPrimitivePropertyType*) deserialize from a stream
/// - int soap_write_gml__TimeTopologyPrimitivePropertyType(soap, gml__TimeTopologyPrimitivePropertyType*) serialize to a stream
class gml__TimeTopologyPrimitivePropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gml__TimeTopologyPrimitivePropertyType_sequence
    {
/// @brief gml:TimeTopologyPrimitive acts as the head of a substitution group for topological temporal primitives. Temporal topology primitives shall imply the ordering information between features or feature properties. The temporal connection of features can be examined if they have temporal topology primitives as values of their properties. Usually, an instantaneous feature associates with a time node, and a static feature associates with a time edge. A feature with both modes associates with the temporal topology primitive: a supertype of time nodes and time edges. A topological primitive is always connected to one or more other topological primitives, and is, therefore, always a member of a topological complex. In a GML instance, this will often be indicated by the primitives being described by elements that are descendents of an element describing a complex. However, in order to support the case where a temporal topological primitive is described in another context, the optional complex property is provided, which carries a reference to the parent temporal topological complex.
/// Reference "http://www.opengis.net/gml/3.2":AbstractTimeTopologyPrimitive to abstract element.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractTimeTopologyPrimitive"> with elements <TimeNode> <TimeEdge>
   $int                                  __unionAbstractTimeTopologyPrimitive 0;	///< Union _gml__union_TimeTopologyPrimitivePropertyType selector: set to SOAP_UNION__gml__union_TimeTopologyPrimitivePropertyType_<fieldname>
/// Union for substitutionGroup="AbstractTimeTopologyPrimitive"
    union _gml__union_TimeTopologyPrimitivePropertyType
    {
/// @brief A time node is a zero-dimensional topological primitive that represents an identifiable node in time (it is equivalent to a point in space). A node may act as the termination or initiation of any number of time edges. A time node may be realised as a geometry, its position, whose value is a time instant.
/// Element TimeNode of type "http://www.opengis.net/gml/3.2":TimeNodeType.
    gml__TimeNodeType*                   TimeNode                       1;	///< Required element.
/// @brief A time edge is a one-dimensional topological primitive. It is an open interval that starts and ends at a node. The edge may be realised as a geometry whose value is a time period.
/// Element TimeEdge of type "http://www.opengis.net/gml/3.2":TimeEdgeType.
    gml__TimeEdgeType*                   TimeEdge                       1;	///< Required element.
    }                                    __union_TimeTopologyPrimitivePropertyType;
//  END OF CHOICE OF SUBSTITUTIONS
    }>                                   __TimeTopologyPrimitivePropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute nilReason of type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         remoteSchema                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
/// Attribute owns of type xs:boolean.
   @bool                                 owns                           0 = false;	///< Default value="false".
};

/// "http://www.opengis.net/gml/3.2":TimeTopologyComplexPropertyType is a complexType.
/// @brief gml:TimeTopologyComplexPropertyType provides for associating a gml:TimeTopologyComplex with an object.
/// class gml__TimeTopologyComplexPropertyType operations:
/// - soap_new_gml__TimeTopologyComplexPropertyType(soap*) allocate
/// - soap_new_gml__TimeTopologyComplexPropertyType(soap*, int num) allocate array
/// - soap_new_req_gml__TimeTopologyComplexPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__TimeTopologyComplexPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__TimeTopologyComplexPropertyType(soap*, gml__TimeTopologyComplexPropertyType*) deserialize from a stream
/// - int soap_write_gml__TimeTopologyComplexPropertyType(soap, gml__TimeTopologyComplexPropertyType*) serialize to a stream
class gml__TimeTopologyComplexPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gml__TimeTopologyComplexPropertyType_sequence
    {
/// @brief A temporal topology complex shall be the connected acyclic directed graph composed of temporal topological primitives, i.e. time nodes and time edges. Because a time edge may not exist without two time nodes on its boundaries, static features have time edges from a temporal topology complex as the values of their temporal properties, regardless of explicit declarations. A temporal topology complex expresses a linear or a non-linear graph. A temporal linear graph, composed of a sequence of time edges, provides a lineage described only by "substitution" of feature instances or feature element values. A time node as the start or the end of the graph connects with at least one time edge. A time node other than the start and the end shall connect to at least two time edges: one of starting from the node, and another ending at the node. A temporal topological complex is a set of connected temporal topological primitives. The member primtives are indicated, either by reference or by value, using the primitive property.
/// Element reference "http://www.opengis.net/gml/3.2":TimeTopologyComplex.
    gml__TimeTopologyComplexType*        TimeTopologyComplex            1;	///< Required element.
    }>                                   __TimeTopologyComplexPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute nilReason of type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         remoteSchema                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
/// Attribute owns of type xs:boolean.
   @bool                                 owns                           0 = false;	///< Default value="false".
};

/// "http://www.opengis.net/gml/3.2":TimeNodePropertyType is a complexType.
/// @brief gml:TimeNodePropertyType provides for associating a gml:TimeNode with an object
/// class gml__TimeNodePropertyType operations:
/// - soap_new_gml__TimeNodePropertyType(soap*) allocate
/// - soap_new_gml__TimeNodePropertyType(soap*, int num) allocate array
/// - soap_new_req_gml__TimeNodePropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__TimeNodePropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__TimeNodePropertyType(soap*, gml__TimeNodePropertyType*) deserialize from a stream
/// - int soap_write_gml__TimeNodePropertyType(soap, gml__TimeNodePropertyType*) serialize to a stream
class gml__TimeNodePropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gml__TimeNodePropertyType_sequence
    {
/// @brief A time node is a zero-dimensional topological primitive that represents an identifiable node in time (it is equivalent to a point in space). A node may act as the termination or initiation of any number of time edges. A time node may be realised as a geometry, its position, whose value is a time instant.
/// Element reference "http://www.opengis.net/gml/3.2":TimeNode.
    gml__TimeNodeType*                   TimeNode                       1;	///< Required element.
    }>                                   __TimeNodePropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute nilReason of type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         remoteSchema                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
/// Attribute owns of type xs:boolean.
   @bool                                 owns                           0 = false;	///< Default value="false".
};

/// "http://www.opengis.net/gml/3.2":TimeEdgePropertyType is a complexType.
/// @brief gml:TimeEdgePropertyType provides for associating a gml:TimeEdge with an object.
/// class gml__TimeEdgePropertyType operations:
/// - soap_new_gml__TimeEdgePropertyType(soap*) allocate
/// - soap_new_gml__TimeEdgePropertyType(soap*, int num) allocate array
/// - soap_new_req_gml__TimeEdgePropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__TimeEdgePropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__TimeEdgePropertyType(soap*, gml__TimeEdgePropertyType*) deserialize from a stream
/// - int soap_write_gml__TimeEdgePropertyType(soap, gml__TimeEdgePropertyType*) serialize to a stream
class gml__TimeEdgePropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gml__TimeEdgePropertyType_sequence
    {
/// @brief A time edge is a one-dimensional topological primitive. It is an open interval that starts and ends at a node. The edge may be realised as a geometry whose value is a time period.
/// Element reference "http://www.opengis.net/gml/3.2":TimeEdge.
    gml__TimeEdgeType*                   TimeEdge                       1;	///< Required element.
    }>                                   __TimeEdgePropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute nilReason of type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         remoteSchema                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
/// Attribute owns of type xs:boolean.
   @bool                                 owns                           0 = false;	///< Default value="false".
};

/// "http://www.opengis.net/gml/3.2":OperationPropertyType is a complexType.
/// class gml__OperationPropertyType operations:
/// - soap_new_gml__OperationPropertyType(soap*) allocate
/// - soap_new_gml__OperationPropertyType(soap*, int num) allocate array
/// - soap_new_req_gml__OperationPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__OperationPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__OperationPropertyType(soap*, gml__OperationPropertyType*) deserialize from a stream
/// - int soap_write_gml__OperationPropertyType(soap, gml__OperationPropertyType*) serialize to a stream
class gml__OperationPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gml__OperationPropertyType_sequence
    {
/// Reference "http://www.opengis.net/gml/3.2":AbstractOperation to abstract element.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractOperation"> with elements <AbstractGeneralConversion> <AbstractGeneralTransformation>
   $int                                  __unionAbstractOperation       0;	///< Union _gml__union_OperationPropertyType selector: set to SOAP_UNION__gml__union_OperationPropertyType_<fieldname>
/// Union for substitutionGroup="AbstractOperation"
    union _gml__union_OperationPropertyType
    {
/// @brief gm:AbstractGeneralConversion is an abstract operation on coordinates that does not include any change of datum. The best-known example of a coordinate conversion is a map projection. The parameters describing coordinate conversions are defined rather than empirically derived. Note that some conversions have no parameters. The operationVersion, sourceCRS, and targetCRS elements are omitted in a coordinate conversion. This abstract complex type is expected to be extended for well-known operation methods with many Conversion instances, in GML Application Schemas that define operation-method-specialized element names and contents. This conversion uses an operation method, usually with associated parameter values. However, operation methods and parameter values are directly associated with concrete subtypes, not with this abstract type. All concrete types derived from this type shall extend this type to include a "usesMethod" element that references the "OperationMethod" element. Similarly, all concrete types derived from this type shall extend this type to include zero or more elements each named "uses...Value" that each use the type of an element substitutable for the "AbstractGeneralParameterValue" element.
/// Abstract element AbstractGeneralConversion of type "http://www.opengis.net/gml/3.2":AbstractGeneralConversionType.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractGeneralConversion"> with elements <Conversion>
/// @brief gml:Conversion is a concrete operation on coordinates that does not include any change of Datum. The best-known example of a coordinate conversion is a map projection. The parameters describing coordinate conversions are defined rather than empirically derived. Note that some conversions have no parameters. This concrete complex type can be used without using a GML Application Schema that defines operation-method-specialized element names and contents, especially for methods with only one Conversion instance. The usesValue property elements are an unordered list of composition associations to the set of parameter values used by this conversion operation.
/// Element Conversion of type "http://www.opengis.net/gml/3.2":ConversionType.
    gml__ConversionType*                 Conversion                     1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
/// @brief gml:AbstractGeneralTransformation is an abstract operation on coordinates that usually includes a change of Datum. The parameters of a coordinate transformation are empirically derived from data containing the coordinates of a series of points in both coordinate reference systems. This computational process is usually "over-determined", allowing derivation of error (or accuracy) estimates for the transformation. Also, the stochastic nature of the parameters may result in multiple (different) versions of the same coordinate transformation. The operationVersion, sourceCRS, and targetCRS proeprty elements are mandatory in a coordinate transformation. This abstract complex type is expected to be extended for well-known operation methods with many Transformation instances, in Application Schemas that define operation-method-specialized value element names and contents. This transformation uses an operation method with associated parameter values. However, operation methods and parameter values are directly associated with concrete subtypes, not with this abstract type. All concrete types derived from this type shall extend this type to include a "usesMethod" element that references one "OperationMethod" element. Similarly, all concrete types derived from this type shall extend this type to include one or more elements each named "uses...Value" that each use the type of an element substitutable for the "AbstractGeneralParameterValue" element.
/// Abstract element AbstractGeneralTransformation of type "http://www.opengis.net/gml/3.2":AbstractGeneralTransformationType.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractGeneralTransformation"> with elements <Transformation>
/// @brief gml:Transformation is a concrete object element derived from gml:GeneralTransformation (13.6.2.13). This concrete object can be used for all operation methods, without using a GML Application Schema that defines operation-method-specialized element names and contents, especially for methods with only one Transformation instance. The parameterValue elements are an unordered list of composition associations to the set of parameter values used by this conversion operation.
/// Element Transformation of type "http://www.opengis.net/gml/3.2":TransformationType.
    gml__TransformationType*             Transformation                 1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
    }                                    __union_OperationPropertyType ;
//  END OF CHOICE OF SUBSTITUTIONS
    }>                                   __OperationPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute nilReason of type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         remoteSchema                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.opengis.net/gml/3.2":TemporalCSPropertyType is a complexType.
/// class gml__TemporalCSPropertyType operations:
/// - soap_new_gml__TemporalCSPropertyType(soap*) allocate
/// - soap_new_gml__TemporalCSPropertyType(soap*, int num) allocate array
/// - soap_new_req_gml__TemporalCSPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__TemporalCSPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__TemporalCSPropertyType(soap*, gml__TemporalCSPropertyType*) deserialize from a stream
/// - int soap_write_gml__TemporalCSPropertyType(soap, gml__TemporalCSPropertyType*) serialize to a stream
class gml__TemporalCSPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gml__TemporalCSPropertyType_sequence
    {
/// Element reference "http://www.opengis.net/gml/3.2":TemporalCS.
    gml__TemporalCSType*                 TemporalCS                     1;	///< Required element.
    }>                                   __TemporalCSPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute nilReason of type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         remoteSchema                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.opengis.net/gml/3.2":ObliqueCartesianCSPropertyType is a complexType.
/// class gml__ObliqueCartesianCSPropertyType operations:
/// - soap_new_gml__ObliqueCartesianCSPropertyType(soap*) allocate
/// - soap_new_gml__ObliqueCartesianCSPropertyType(soap*, int num) allocate array
/// - soap_new_req_gml__ObliqueCartesianCSPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__ObliqueCartesianCSPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__ObliqueCartesianCSPropertyType(soap*, gml__ObliqueCartesianCSPropertyType*) deserialize from a stream
/// - int soap_write_gml__ObliqueCartesianCSPropertyType(soap, gml__ObliqueCartesianCSPropertyType*) serialize to a stream
class gml__ObliqueCartesianCSPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gml__ObliqueCartesianCSPropertyType_sequence
    {
/// Element reference "http://www.opengis.net/gml/3.2":ObliqueCartesianCS.
    gml__ObliqueCartesianCSType*         ObliqueCartesianCS             1;	///< Required element.
    }>                                   __ObliqueCartesianCSPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute nilReason of type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         remoteSchema                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.opengis.net/gml/3.2":GeographicCRSPropertyType is a complexType.
/// class gml__GeographicCRSPropertyType operations:
/// - soap_new_gml__GeographicCRSPropertyType(soap*) allocate
/// - soap_new_gml__GeographicCRSPropertyType(soap*, int num) allocate array
/// - soap_new_req_gml__GeographicCRSPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__GeographicCRSPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__GeographicCRSPropertyType(soap*, gml__GeographicCRSPropertyType*) deserialize from a stream
/// - int soap_write_gml__GeographicCRSPropertyType(soap, gml__GeographicCRSPropertyType*) serialize to a stream
class gml__GeographicCRSPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gml__GeographicCRSPropertyType_sequence
    {
/// Element reference "http://www.opengis.net/gml/3.2":GeographicCRS.
    gml__GeographicCRSType*              GeographicCRS                  1;	///< Required element.
    }>                                   __GeographicCRSPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute nilReason of type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         remoteSchema                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.opengis.net/gml/3.2":GeocentricCRSPropertyType is a complexType.
/// class gml__GeocentricCRSPropertyType operations:
/// - soap_new_gml__GeocentricCRSPropertyType(soap*) allocate
/// - soap_new_gml__GeocentricCRSPropertyType(soap*, int num) allocate array
/// - soap_new_req_gml__GeocentricCRSPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__GeocentricCRSPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__GeocentricCRSPropertyType(soap*, gml__GeocentricCRSPropertyType*) deserialize from a stream
/// - int soap_write_gml__GeocentricCRSPropertyType(soap, gml__GeocentricCRSPropertyType*) serialize to a stream
class gml__GeocentricCRSPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gml__GeocentricCRSPropertyType_sequence
    {
/// Element reference "http://www.opengis.net/gml/3.2":GeocentricCRS.
    gml__GeocentricCRSType*              GeocentricCRS                  1;	///< Required element.
    }>                                   __GeocentricCRSPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute nilReason of type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         remoteSchema                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.opengis.net/gml/3.2":DMSAngleType is a complexType.
/// class gml__DMSAngleType operations:
/// - soap_new_gml__DMSAngleType(soap*) allocate
/// - soap_new_gml__DMSAngleType(soap*, int num) allocate array
/// - soap_new_req_gml__DMSAngleType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__DMSAngleType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__DMSAngleType(soap*, gml__DMSAngleType*) deserialize from a stream
/// - int soap_write_gml__DMSAngleType(soap, gml__DMSAngleType*) serialize to a stream
class gml__DMSAngleType : public xsd__anyType
{ public:
/// Element reference "http://www.opengis.net/gml/3.2":degrees.
    gml__DegreesType*                    degrees                        1;	///< Required element.
/// CHOICE <xs:choice minOccurs="0">
/// Note: <xs:choice> with embedded <xs:sequence> or <xs:group> prevents the use of a union
/// Element reference "http://www.opengis.net/gml/3.2":decimalMinutes.
    gml__DecimalMinutesType*             decimalMinutes                ;
/// SEQUENCE <xs:sequence>
/// Element reference "http://www.opengis.net/gml/3.2":minutes.
    gml__ArcMinutesType*                 minutes                       ;
/// Element reference "http://www.opengis.net/gml/3.2":seconds.
    gml__ArcSecondsType*                 seconds                       ;
//  END OF SEQUENCE
;
//  END OF CHOICE
};

/// "http://www.opengis.net/gml/3.2":AngleChoiceType is a complexType.
/// class gml__AngleChoiceType operations:
/// - soap_new_gml__AngleChoiceType(soap*) allocate
/// - soap_new_gml__AngleChoiceType(soap*, int num) allocate array
/// - soap_new_req_gml__AngleChoiceType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__AngleChoiceType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__AngleChoiceType(soap*, gml__AngleChoiceType*) deserialize from a stream
/// - int soap_write_gml__AngleChoiceType(soap, gml__AngleChoiceType*) serialize to a stream
class gml__AngleChoiceType : public xsd__anyType
{ public:
/// CHOICE <xs:choice>
   $int                                  __union_AngleChoiceType       ;	///< Union _gml__union_AngleChoiceType selector: set to SOAP_UNION__gml__union_AngleChoiceType_<fieldname>
/// Union for choice in type gml__AngleChoiceType
    union _gml__union_AngleChoiceType
    {
/// @brief The gml:angle property element is used to record the value of an angle quantity as a single number, with its units.
/// Element reference "http://www.opengis.net/gml/3.2":angle.
    gml__AngleType*                      angle                          1;	///< Required element.
/// Element reference "http://www.opengis.net/gml/3.2":dmsAngle.
    gml__DMSAngleType*                   dmsAngle                       1;	///< Required element.
    }                                    union_AngleChoiceType         ;
//  END OF CHOICE
};

/// "http://www.opengis.net/gml/3.2":ArrayAssociationType is a complexType.
/// class gml__ArrayAssociationType operations:
/// - soap_new_gml__ArrayAssociationType(soap*) allocate
/// - soap_new_gml__ArrayAssociationType(soap*, int num) allocate array
/// - soap_new_req_gml__ArrayAssociationType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__ArrayAssociationType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__ArrayAssociationType(soap*, gml__ArrayAssociationType*) deserialize from a stream
/// - int soap_write_gml__ArrayAssociationType(soap, gml__ArrayAssociationType*) serialize to a stream
class gml__ArrayAssociationType : public xsd__anyType
{ public:
/// @brief This element has no type defined, and is therefore implicitly (according to the rules of W3C XML Schema) an XML Schema anyType. It is used as the head of an XML Schema substitution group which unifies complex content and certain simple content elements used for datatypes in GML, including the gml:AbstractGML substitution group.
/// Reference "http://www.opengis.net/gml/3.2":AbstractObject to abstract element.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractObject" minOccurs="0" maxOccurs="unbounded"> with elements <HILUCSPresence> <SpecificPercentage> <SpecificPresence> <HILUCSPercentage> <OfficialJournalInformation> <Contact> <RelatedParty> <ThematicIdentifier> <AbstractCurveSegment> <AffinePlacement> <Shell> <AbstractRing> <Envelope> <AbstractGML> <DataBlock> <File> <coverageFunction> <CoverageMappingRule> <GridFunction> <AbstractValue> <AbstractGeneralParameterValue> <AbstractMetaData> <Identifier> <Identifier> <DimensioningIndicationValue> <DimensioningIndicationValue> <OrdinanceValue> <OrdinanceValue> <BackgroundMapValue> <BackgroundMapValue>
   $int                                  __sizeAbstractObject           0;
    class __gml__union_ArrayAssociationType
    {
   $int                                  __unionAbstractObject          0;	///< Union _gml__union_ArrayAssociationType selector: set to SOAP_UNION__gml__union_ArrayAssociationType_<fieldname> or 0
/// Union for substitutionGroup="AbstractObject"
    union _gml__union_ArrayAssociationType
    {
/// @brief -- Name -- HILUCS presence -- Definition -- Presence of one or several HILUCS values in an area, indicated either as the percentage covered for each value or as the values listed in their order of importance. -- Description -- The HILUCS presence data type enables the provision of information on land uses inside one land use object in order to collect more than one land use existence perfectly identifiable by importance order or percentages. NOTE 1: The order of land use value presence without percentages enable providing an order of dominance/importance of each land use present in the land use object NOTE 2: The sum of the percentages can be below 100%, or above. The order is provided according to the respective importance when the percentages are not known.
/// Element HILUCSPresence of type "http://inspire.ec.europa.eu/schemas/lunom/3.0":HILUCSPresenceType.
    lunom__HILUCSPresenceType*           HILUCSPresence                 1;	///< Required element.
/// @brief -- Name -- specific percentage -- Definition -- Percentage of land use object that is covered by this specific presence.
/// Element SpecificPercentage of type "http://inspire.ec.europa.eu/schemas/lunom/3.0":SpecificPercentageType.
    lunom__SpecificPercentageType*       SpecificPercentage             1;	///< Required element.
/// @brief -- Name -- specific presence -- Definition -- Presence of one or several land use classification values in an area according to the code list provided by the data provider, indicated either as the percentage covered for each value or as the values listed in their order of importance. -- Description -- NOTE 1: The order of land use value presence without percentages enable providing an order of dominance/importance of each land use present in the land use object NOTE 2: The sum of the percentages can be below 100%, or above. The order is provided according to the respective importance when the percentages are not known.
/// Element SpecificPresence of type "http://inspire.ec.europa.eu/schemas/lunom/3.0":SpecificPresenceType.
    lunom__SpecificPresenceType*         SpecificPresence               1;	///< Required element.
/// @brief -- Name -- HILUCS percentage -- Definition -- Percentage of land use object that is covered by this HILUCS presence. -- Description -- NOTE1:The percentage is according to the socio-economic or functional importance of the use. NOTE2:examples are provided in the narrative description part of the data specification.
/// Element HILUCSPercentage of type "http://inspire.ec.europa.eu/schemas/lunom/3.0":HILUCSPercentageType.
    lunom__HILUCSPercentageType*         HILUCSPercentage               1;	///< Required element.
/// @brief -- Name -- official journal information -- Definition -- Full citation of the location of the legislative instrument within the official journal.
/// Element OfficialJournalInformation of type "http://inspire.ec.europa.eu/schemas/base2/1.0":OfficialJournalInformationType.
    base2__OfficialJournalInformationType*  OfficialJournalInformation     1;	///< Required element.
/// @brief -- Name -- contact -- Definition -- Communication channels by which it is possible to gain access to someone or something. -- Description --
/// Element Contact of type "http://inspire.ec.europa.eu/schemas/base2/1.0":ContactType.
    base2__ContactType*                  Contact                        1;	///< Required element.
/// @brief -- Name -- related party -- Definition -- An organisation or a person with a role related to a resource. -- Description -- NOTE 1 A party, typically an individual person, acting as a general point of contact for a resource can be specified without providing any particular role.
/// Element RelatedParty of type "http://inspire.ec.europa.eu/schemas/base2/1.0":RelatedPartyType.
    base2__RelatedPartyType*             RelatedParty                   1;	///< Required element.
/// @brief -- Name -- thematic identifier -- Definition -- Thematic identifier to uniquely identify the spatial object. -- Description -- Some spatial objects may be assigned multiple unique identifiers. These may have been established to meet data exchange requirements of different reporting obligations at International, European or national levels and/or internal data maintenance requirements.
/// Element ThematicIdentifier of type "http://inspire.ec.europa.eu/schemas/base2/1.0":ThematicIdentifierType.
    base2__ThematicIdentifierType*       ThematicIdentifier             1;	///< Required element.
/// @brief A curve segment defines a homogeneous segment of a curve. The attributes numDerivativesAtStart, numDerivativesAtEnd and numDerivativesInterior specify the type of continuity as specified in ISO 19107:2003, 6.4.9.3. The AbstractCurveSegment element is the abstract head of the substituition group for all curve segment elements, i.e. continuous segments of the same interpolation mechanism. All curve segments shall have an attribute interpolation with type gml:CurveInterpolationType specifying the curve interpolation mechanism used for this segment. This mechanism uses the control points and control parameters to determine the position of this curve segment.
/// Abstract element AbstractCurveSegment of type "http://www.opengis.net/gml/3.2":AbstractCurveSegmentType.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractCurveSegment"> with elements <LineStringSegment> <ArcString> <ArcStringByBulge> <ArcByCenterPoint> <CubicSpline> <BSpline> <OffsetCurve> <Clothoid> <GeodesicString>
/// @brief A LineStringSegment is a curve segment that is defined by two or more control points including the start and end point, with linear interpolation between them. The content model follows the general pattern for the encoding of curve segments.
/// Element LineStringSegment of type "http://www.opengis.net/gml/3.2":LineStringSegmentType.
    gml__LineStringSegmentType*          LineStringSegment              1;	///< Required element.
/// @brief An ArcString is a curve segment that uses three-point circular arc interpolation ("circularArc3Points"). The number of arcs in the arc string may be explicitly stated in the attribute numArc. The number of control points in the arc string shall be 2 * numArc + 1. The content model follows the general pattern for the encoding of curve segments.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="ArcString"> with elements <Arc>
/// @brief An ArcString is a curve segment that uses three-point circular arc interpolation ("circularArc3Points"). The number of arcs in the arc string may be explicitly stated in the attribute numArc. The number of control points in the arc string shall be 2 * numArc + 1. The content model follows the general pattern for the encoding of curve segments.
/// Element ArcString of type "http://www.opengis.net/gml/3.2":ArcStringType.
    gml__ArcStringType*                  ArcString                      1;	///< Required element.
/// @brief An Arc is an arc string with only one arc unit, i.e. three control points including the start and end point. As arc is an arc string consisting of a single arc, the attribute "numArc" is fixed to "1".
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="Arc"> with elements <Circle>
/// @brief An Arc is an arc string with only one arc unit, i.e. three control points including the start and end point. As arc is an arc string consisting of a single arc, the attribute "numArc" is fixed to "1".
/// Element Arc of type "http://www.opengis.net/gml/3.2":ArcType.
    gml__ArcType*                        Arc                            1;	///< Required element.
/// @brief A Circle is an arc whose ends coincide to form a simple closed loop. The three control points shall be distinct non-co-linear points for the circle to be unambiguously defined. The arc is simply extended past the third control point until the first control point is encountered.
/// Element Circle of type "http://www.opengis.net/gml/3.2":CircleType.
    gml__CircleType*                     Circle                         1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
//  END OF CHOICE OF SUBSTITUTIONS
/// @brief This variant of the arc computes the mid points of the arcs instead of storing the coordinates directly. The control point sequence consists of the start and end points of each arc plus the bulge (see ISO 19107:2003, 6.4.17.2). The normal is a vector normal (perpendicular) to the chord of the arc (see ISO 19107:2003, 6.4.17.4). The interpolation is fixed as "circularArc2PointWithBulge". The number of arcs in the arc string may be explicitly stated in the attribute numArc. The number of control points in the arc string shall be numArc + 1. The content model follows the general pattern for the encoding of curve segments.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="ArcStringByBulge"> with elements <ArcByBulge>
/// @brief This variant of the arc computes the mid points of the arcs instead of storing the coordinates directly. The control point sequence consists of the start and end points of each arc plus the bulge (see ISO 19107:2003, 6.4.17.2). The normal is a vector normal (perpendicular) to the chord of the arc (see ISO 19107:2003, 6.4.17.4). The interpolation is fixed as "circularArc2PointWithBulge". The number of arcs in the arc string may be explicitly stated in the attribute numArc. The number of control points in the arc string shall be numArc + 1. The content model follows the general pattern for the encoding of curve segments.
/// Element ArcStringByBulge of type "http://www.opengis.net/gml/3.2":ArcStringByBulgeType.
    gml__ArcStringByBulgeType*           ArcStringByBulge               1;	///< Required element.
/// @brief An ArcByBulge is an arc string with only one arc unit, i.e. two control points, one bulge and one normal vector. As arc is an arc string consisting of a single arc, the attribute "numArc" is fixed to "1".
/// Element ArcByBulge of type "http://www.opengis.net/gml/3.2":ArcByBulgeType.
    gml__ArcByBulgeType*                 ArcByBulge                     1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
/// @brief This variant of the arc requires that the points on the arc shall be computed instead of storing the coordinates directly. The single control point is the center point of the arc plus the radius and the bearing at start and end. This representation can be used only in 2D. The element radius specifies the radius of the arc. The element startAngle specifies the bearing of the arc at the start. The element endAngle specifies the bearing of the arc at the end. The interpolation is fixed as "circularArcCenterPointWithRadius". Since this type describes always a single arc, the attribute "numArc" is fixed to "1". The content model follows the general pattern for the encoding of curve segments.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="ArcByCenterPoint"> with elements <CircleByCenterPoint>
/// @brief This variant of the arc requires that the points on the arc shall be computed instead of storing the coordinates directly. The single control point is the center point of the arc plus the radius and the bearing at start and end. This representation can be used only in 2D. The element radius specifies the radius of the arc. The element startAngle specifies the bearing of the arc at the start. The element endAngle specifies the bearing of the arc at the end. The interpolation is fixed as "circularArcCenterPointWithRadius". Since this type describes always a single arc, the attribute "numArc" is fixed to "1". The content model follows the general pattern for the encoding of curve segments.
/// Element ArcByCenterPoint of type "http://www.opengis.net/gml/3.2":ArcByCenterPointType.
    gml__ArcByCenterPointType*           ArcByCenterPoint               1;	///< Required element.
/// @brief A gml:CircleByCenterPoint is an gml:ArcByCenterPoint with identical start and end angle to form a full circle. Again, this representation can be used only in 2D.
/// Element CircleByCenterPoint of type "http://www.opengis.net/gml/3.2":CircleByCenterPointType.
    gml__CircleByCenterPointType*        CircleByCenterPoint            1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
/// @brief The number of control points shall be at least three. vectorAtStart is the unit tangent vector at the start point of the spline. vectorAtEnd is the unit tangent vector at the end point of the spline. Only the direction of the vectors shall be used to determine the shape of the cubic spline, not their length. interpolation is fixed as "cubicSpline". degree shall be the degree of the polynomial used for the interpolation in this spline. Therefore the degree for a cubic spline is fixed to "3". The content model follows the general pattern for the encoding of curve segments.
/// Element CubicSpline of type "http://www.opengis.net/gml/3.2":CubicSplineType.
    gml__CubicSplineType*                CubicSpline                    1;	///< Required element.
/// @brief A B-Spline is a piecewise parametric polynomial or rational curve described in terms of control points and basis functions as specified in ISO 19107:2003, 6.4.30. Therefore, interpolation may be either "polynomialSpline" or "rationalSpline" depending on the interpolation type; default is "polynomialSpline". degree shall be the degree of the polynomial used for interpolation in this spline. knot shall be the sequence of distinct knots used to define the spline basis functions (see ISO 19107:2003, 6.4.26.2). The attribute isPolynomial shall be set to "true" if this is a polynomial spline (see ISO 19107:2003, 6.4.30.5). The attribute knotType shall provide the type of knot distribution used in defining this spline (see ISO 19107:2003, 6.4.30.4). The content model follows the general pattern for the encoding of curve segments.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="BSpline"> with elements <Bezier>
/// @brief A B-Spline is a piecewise parametric polynomial or rational curve described in terms of control points and basis functions as specified in ISO 19107:2003, 6.4.30. Therefore, interpolation may be either "polynomialSpline" or "rationalSpline" depending on the interpolation type; default is "polynomialSpline". degree shall be the degree of the polynomial used for interpolation in this spline. knot shall be the sequence of distinct knots used to define the spline basis functions (see ISO 19107:2003, 6.4.26.2). The attribute isPolynomial shall be set to "true" if this is a polynomial spline (see ISO 19107:2003, 6.4.30.5). The attribute knotType shall provide the type of knot distribution used in defining this spline (see ISO 19107:2003, 6.4.30.4). The content model follows the general pattern for the encoding of curve segments.
/// Element BSpline of type "http://www.opengis.net/gml/3.2":BSplineType.
    gml__BSplineType*                    BSpline                        1;	///< Required element.
/// @brief Bezier curves are polynomial splines that use Bezier or Bernstein polynomials for interpolation purposes. It is a special case of the B-Spline curve with two knots. degree shall be the degree of the polynomial used for interpolation in this spline. knot shall be the sequence of distinct knots used to define the spline basis functions. interpolation is fixed as "polynomialSpline". isPolynomial is fixed as "true". knotType is not relevant for Bezier curve segments.
/// Element Bezier of type "http://www.opengis.net/gml/3.2":BezierType.
    gml__BezierType*                     Bezier                         1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
/// @brief An offset curve is a curve at a constant distance from the basis curve. offsetBase is the base curve from which this curve is defined as an offset. distance and refDirection have the same meaning as specified in ISO 19107:2003, 6.4.23. The content model follows the general pattern for the encoding of curve segments.
/// Element OffsetCurve of type "http://www.opengis.net/gml/3.2":OffsetCurveType.
    gml__OffsetCurveType*                OffsetCurve                    1;	///< Required element.
/// @brief A clothoid, or Cornu's spiral, is plane curve whose curvature is a fixed function of its length. refLocation, startParameter, endParameter and scaleFactor have the same meaning as specified in ISO 19107:2003, 6.4.22. interpolation is fixed as "clothoid". The content model follows the general pattern for the encoding of curve segments.
/// Element Clothoid of type "http://www.opengis.net/gml/3.2":ClothoidType.
    gml__ClothoidType*                   Clothoid                       1;	///< Required element.
/// @brief A sequence of geodesic segments. The number of control points shall be at least two. interpolation is fixed as "geodesic". The content model follows the general pattern for the encoding of curve segments.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="GeodesicString"> with elements <Geodesic>
/// @brief A sequence of geodesic segments. The number of control points shall be at least two. interpolation is fixed as "geodesic". The content model follows the general pattern for the encoding of curve segments.
/// Element GeodesicString of type "http://www.opengis.net/gml/3.2":GeodesicStringType.
    gml__GeodesicStringType*             GeodesicString                 1;	///< Required element.
/// Element Geodesic of type "http://www.opengis.net/gml/3.2":GeodesicType.
    gml__GeodesicType*                   Geodesic                       1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
//  END OF CHOICE OF SUBSTITUTIONS
/// @brief location, refDirection, inDimension and outDimension have the same meaning as specified in ISO 19107:2003, 6.4.21.
/// Element AffinePlacement of type "http://www.opengis.net/gml/3.2":AffinePlacementType.
    gml__AffinePlacementType*            AffinePlacement                1;	///< Required element.
/// @brief A shell is used to represent a single connected component of a solid boundary as specified in ISO 19107:2003, 6.3.8. Every gml:surfaceMember references or contains one surface, i.e. any element which is substitutable for gml:AbstractSurface. In the context of a shell, the surfaces describe the boundary of the solid. If provided, the aggregationType attribute shall have the value "set".
/// Element Shell of type "http://www.opengis.net/gml/3.2":ShellType.
    gml__ShellType*                      Shell                          1;	///< Required element.
/// @brief An abstraction of a ring to support surface boundaries of different complexity. The AbstractRing element is the abstract head of the substituition group for all closed boundaries of a surface patch.
/// Abstract element AbstractRing of type "http://www.opengis.net/gml/3.2":AbstractRingType.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractRing"> with elements <Ring> <LinearRing>
/// @brief A ring is used to represent a single connected component of a surface boundary as specified in ISO 19107:2003, 6.3.6. Every gml:curveMember references or contains one curve, i.e. any element which is substitutable for gml:AbstractCurve. In the context of a ring, the curves describe the boundary of the surface. The sequence of curves shall be contiguous and connected in a cycle. If provided, the aggregationType attribute shall have the value "sequence".
/// Element Ring of type "http://www.opengis.net/gml/3.2":RingType.
    gml__RingType*                       Ring                           1;	///< Required element.
/// @brief A LinearRing is defined by four or more coordinate tuples, with linear interpolation between them; the first and last coordinates shall be coincident. The number of direct positions in the list shall be at least four.
/// Element LinearRing of type "http://www.opengis.net/gml/3.2":LinearRingType.
    gml__LinearRingType*                 LinearRing                     1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
/// @brief Envelope defines an extent using a pair of positions defining opposite corners in arbitrary dimensions. The first direct position is the "lower corner" (a coordinate position consisting of all the minimal ordinates for each dimension for all points within the envelope), the second one the "upper corner" (a coordinate position consisting of all the maximal ordinates for each dimension for all points within the envelope). The use of the properties "coordinates" and "pos" has been deprecated. The explicitly named properties "lowerCorner" and "upperCorner" shall be used instead.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="Envelope"> with elements <EnvelopeWithTimePeriod>
/// @brief Envelope defines an extent using a pair of positions defining opposite corners in arbitrary dimensions. The first direct position is the "lower corner" (a coordinate position consisting of all the minimal ordinates for each dimension for all points within the envelope), the second one the "upper corner" (a coordinate position consisting of all the maximal ordinates for each dimension for all points within the envelope). The use of the properties "coordinates" and "pos" has been deprecated. The explicitly named properties "lowerCorner" and "upperCorner" shall be used instead.
/// Element Envelope of type "http://www.opengis.net/gml/3.2":EnvelopeType.
    gml__EnvelopeType*                   Envelope                       1;	///< Required element.
/// @brief gml:EnvelopeWithTimePeriod is provided for envelopes that include a temporal extent. It adds two time position properties, gml:beginPosition and gml:endPosition, which describe the extent of a time-envelope. Since gml:EnvelopeWithTimePeriod is assigned to the substitution group headed by gml:Envelope, it may be used whenever gml:Envelope is valid.
/// Element EnvelopeWithTimePeriod of type "http://www.opengis.net/gml/3.2":EnvelopeWithTimePeriodType.
    gml__EnvelopeWithTimePeriodType*     EnvelopeWithTimePeriod         1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
/// @brief The abstract element gml:AbstractGML is "any GML object having identity". It acts as the head of an XML Schema substitution group, which may include any element which is a GML feature, or other object, with identity. This is used as a variable in content models in GML core and application schemas. It is effectively an abstract superclass for all GML objects.
/// Abstract element AbstractGML of type "http://www.opengis.net/gml/3.2":AbstractGMLType.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractGML"> with elements <DocumentCitation> <AbstractTimeSlice> <AbstractTopology> <AbstractGeometry> <Definition> <AbstractFeature> <AbstractTimeObject> <Bag> <Array>
/// @brief -- Name -- document citation -- Definition -- Citation for the purposes of unambiguously referencing a document.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="DocumentCitation"> with elements <LegislationCitation>
/// @brief -- Name -- document citation -- Definition -- Citation for the purposes of unambiguously referencing a document.
/// Element DocumentCitation of type "http://inspire.ec.europa.eu/schemas/base2/1.0":DocumentCitationType.
    base2__DocumentCitationType*         DocumentCitation               1;	///< Required element.
/// @brief -- Name -- legislation citation -- Definition -- Citation for the purposes of unambiguously referencing a legal act or a specific part of a legal act.
/// Element LegislationCitation of type "http://inspire.ec.europa.eu/schemas/base2/1.0":LegislationCitationType.
    base2__LegislationCitationType*      LegislationCitation            1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
/// @brief To describe an event an action that occurs at an instant or over an interval of time GML provides the gml:AbtractTimeSlice element. A timeslice encapsulates the time-varying properties of a dynamic feature -- it shall be extended to represent a time stamped projection of a specific feature. The gml:dataSource property describes how the temporal data was acquired. A gml:AbstractTimeSlice instance is a GML object that encapsulates updates of the dynamicor volatileproperties that reflect some change event; it thus includes only those feature properties that have actually changed due to some process. gml:AbstractTimeSlice basically provides a facility for attribute-level time stamping, in contrast to the object-level time stamping of dynamic feature instances. The time slice can thus be viewed as event or process-oriented, whereas a snapshot is more state or structure-oriented. A timeslice has richer causality, whereas a snapshot merely portrays the status of the whole.
/// Abstract element AbstractTimeSlice of type "http://www.opengis.net/gml/3.2":AbstractTimeSliceType.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractTimeSlice"> with elements <MovingObjectStatus>
/// Element MovingObjectStatus of type "http://www.opengis.net/gml/3.2":MovingObjectStatusType.
    gml__MovingObjectStatusType*         MovingObjectStatus             1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
/// Abstract element AbstractTopology of type "http://www.opengis.net/gml/3.2":AbstractTopologyType.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractTopology"> with elements <AbstractTopoPrimitive> <TopoComplex>
/// @brief gml:AbstractTopoPrimitive acts as the base type for all topological primitives. Topology primitives are the atomic (smallest possible) units of a topology complex. Each topology primitive may contain references to other topology primitives of codimension 2 or more (gml:isolated). Conversely, nodes may have faces as containers and nodes and edges may have solids as containers (gml:container).
/// Abstract element AbstractTopoPrimitive of type "http://www.opengis.net/gml/3.2":AbstractTopoPrimitiveType.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractTopoPrimitive"> with elements <Node> <Edge> <Face> <TopoSolid>
/// @brief gml:Node represents the 0-dimensional primitive. The optional coboundary of a node (gml:directedEdge) is a sequence of directed edges which are incident on this node. Edges emanating from this node appear in the node coboundary with a negative orientation. If provided, the aggregationType attribute shall have the value "sequence". A node may optionally be realised by a 0-dimensional geometric primitive (gml:pointProperty).
/// Element Node of type "http://www.opengis.net/gml/3.2":NodeType.
    gml__NodeType*                       Node                           1;	///< Required element.
/// @brief gml:Edge represents the 1-dimensional primitive. The topological boundary of an Edge (gml:directedNode) consists of a negatively directed start Node and a positively directed end Node. The optional coboundary of an edge (gml:directedFace) is a circular sequence of directed faces which are incident on this edge in document order. In the 2D case, the orientation of the face on the left of the edge is "+"; the orientation of the face on the right on its right is "-". If provided, the aggregationType attribute shall have the value "sequence". An edge may optionally be realised by a 1-dimensional geometric primitive (gml:curveProperty).
/// Element Edge of type "http://www.opengis.net/gml/3.2":EdgeType.
    gml__EdgeType*                       Edge                           1;	///< Required element.
/// @brief gml:Face represents the 2-dimensional topology primitive. The topological boundary of a face (gml:directedEdge) consists of a sequence of directed edges. If provided, the aggregationType attribute shall have the value "sequence". The optional coboundary of a face (gml:directedTopoSolid) is a pair of directed solids which are bounded by this face. A positively directed solid corresponds to a solid which lies in the direction of the negatively directed normal to the face in any geometric realisation. A face may optionally be realised by a 2-dimensional geometric primitive (gml:surfaceProperty).
/// Element Face of type "http://www.opengis.net/gml/3.2":FaceType.
    gml__FaceType*                       Face                           1;	///< Required element.
/// @brief gml:TopoSolid represents the 3-dimensional topology primitive. The topological boundary of a solid (gml:directedFace) consists of a set of directed faces. A solid may optionally be realised by a 3-dimensional geometric primitive (gml:solidProperty).
/// Element TopoSolid of type "http://www.opengis.net/gml/3.2":TopoSolidType.
    gml__TopoSolidType*                  TopoSolid                      1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
/// @brief gml:TopoComplex is a collection of topological primitives. Each complex holds a reference to its maximal complex (gml:maximalComplex) and optionally to sub- or super-complexes (gml:subComplex, gml:superComplex). A topology complex contains its primitive and sub-complex members.
/// Element TopoComplex of type "http://www.opengis.net/gml/3.2":TopoComplexType.
    gml__TopoComplexType*                TopoComplex                    1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
/// @brief The AbstractGeometry element is the abstract head of the substitution group for all geometry elements of GML. This includes pre-defined and user-defined geometry elements. Any geometry element shall be a direct or indirect extension/restriction of AbstractGeometryType and shall be directly or indirectly in the substitution group of AbstractGeometry.
/// Abstract element AbstractGeometry of type "http://www.opengis.net/gml/3.2":AbstractGeometryType.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractGeometry"> with elements <GeometricComplex> <AbstractGeometricAggregate> <AbstractGeometricPrimitive> <AbstractImplicitGeometry>
/// Element GeometricComplex of type "http://www.opengis.net/gml/3.2":GeometricComplexType.
    gml__GeometricComplexType*           GeometricComplex               1;	///< Required element.
/// @brief gml:AbstractGeometricAggregate is the abstract head of the substitution group for all geometric aggregates.
/// Abstract element AbstractGeometricAggregate of type "http://www.opengis.net/gml/3.2":AbstractGeometricAggregateType.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractGeometricAggregate"> with elements <MultiGeometry> <MultiPoint> <MultiCurve> <MultiSurface> <MultiSolid>
/// @brief gml:MultiGeometry is a collection of one or more GML geometry objects of arbitrary type. The members of the geometric aggregate may be specified either using the "standard" property (gml:geometryMember) or the array property (gml:geometryMembers). It is also valid to use both the "standard" and the array properties in the same collection.
/// Element MultiGeometry of type "http://www.opengis.net/gml/3.2":MultiGeometryType.
    gml__MultiGeometryType*              MultiGeometry                  1;	///< Required element.
/// @brief A gml:MultiPoint consists of one or more gml:Points. The members of the geometric aggregate may be specified either using the "standard" property (gml:pointMember) or the array property (gml:pointMembers). It is also valid to use both the "standard" and the array properties in the same collection.
/// Element MultiPoint of type "http://www.opengis.net/gml/3.2":MultiPointType.
    gml__MultiPointType*                 MultiPoint                     1;	///< Required element.
/// @brief A gml:MultiCurve is defined by one or more gml:AbstractCurves. The members of the geometric aggregate may be specified either using the "standard" property (gml:curveMember) or the array property (gml:curveMembers). It is also valid to use both the "standard" and the array properties in the same collection.
/// Element MultiCurve of type "http://www.opengis.net/gml/3.2":MultiCurveType.
    gml__MultiCurveType*                 MultiCurve                     1;	///< Required element.
/// @brief A gml:MultiSurface is defined by one or more gml:AbstractSurfaces. The members of the geometric aggregate may be specified either using the "standard" property (gml:surfaceMember) or the array property (gml:surfaceMembers). It is also valid to use both the "standard" and the array properties in the same collection.
/// Element MultiSurface of type "http://www.opengis.net/gml/3.2":MultiSurfaceType.
    gml__MultiSurfaceType*               MultiSurface                   1;	///< Required element.
/// @brief A gml:MultiSolid is defined by one or more gml:AbstractSolids. The members of the geometric aggregate may be specified either using the "standard" property (gml:solidMember) or the array property (gml:solidMembers). It is also valid to use both the "standard" and the array properties in the same collection.
/// Element MultiSolid of type "http://www.opengis.net/gml/3.2":MultiSolidType.
    gml__MultiSolidType*                 MultiSolid                     1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
/// @brief The AbstractGeometricPrimitive element is the abstract head of the substitution group for all (pre- and user-defined) geometric primitives.
/// Abstract element AbstractGeometricPrimitive of type "http://www.opengis.net/gml/3.2":AbstractGeometricPrimitiveType.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractGeometricPrimitive"> with elements <AbstractSolid> <AbstractSurface> <Point> <AbstractCurve>
/// @brief The AbstractSolid element is the abstract head of the substituition group for all (continuous) solid elements.
/// Abstract element AbstractSolid of type "http://www.opengis.net/gml/3.2":AbstractSolidType.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractSolid"> with elements <CompositeSolid> <Solid>
/// @brief gml:CompositeSolid implements ISO 19107 GM_CompositeSolid (see ISO 19107:2003, 6.6.7) as specified in D.2.3.6. A gml:CompositeSolid is represented by a set of orientable surfaces. It is a geometry type with all the geometric properties of a (primitive) solid. Essentially, a composite solid is a collection of solids that join in pairs on common boundary surfaces and which, when considered as a whole, form a single solid. solidMember references or contains one solid in the composite solid. The solids are contiguous.
/// Element CompositeSolid of type "http://www.opengis.net/gml/3.2":CompositeSolidType.
    gml__CompositeSolidType*             CompositeSolid                 1;	///< Required element.
/// @brief A solid is the basis for 3-dimensional geometry. The extent of a solid is defined by the boundary surfaces as specified in ISO 19107:2003, 6.3.18. exterior specifies the outer boundary, interior the inner boundary of the solid.
/// Element Solid of type "http://www.opengis.net/gml/3.2":SolidType.
    gml__SolidType*                      Solid                          1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
/// @brief The AbstractSurface element is the abstract head of the substitution group for all (continuous) surface elements.
/// Abstract element AbstractSurface of type "http://www.opengis.net/gml/3.2":AbstractSurfaceType.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractSurface"> with elements <CompositeSurface> <Surface> <OrientableSurface> <Polygon>
/// @brief A gml:CompositeSurface is represented by a set of orientable surfaces. It is geometry type with all the geometric properties of a (primitive) surface. Essentially, a composite surface is a collection of surfaces that join in pairs on common boundary curves and which, when considered as a whole, form a single surface. surfaceMember references or contains inline one surface in the composite surface. The surfaces are contiguous.
/// Element CompositeSurface of type "http://www.opengis.net/gml/3.2":CompositeSurfaceType.
    gml__CompositeSurfaceType*           CompositeSurface               1;	///< Required element.
/// @brief A Surface is a 2-dimensional primitive and is composed of one or more surface patches as specified in ISO 19107:2003, 6.3.17.1. The surface patches are connected to one another. patches encapsulates the patches of the surface.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="Surface"> with elements <PolyhedralSurface> <TriangulatedSurface>
/// @brief A Surface is a 2-dimensional primitive and is composed of one or more surface patches as specified in ISO 19107:2003, 6.3.17.1. The surface patches are connected to one another. patches encapsulates the patches of the surface.
/// Element Surface of type "http://www.opengis.net/gml/3.2":SurfaceType.
    gml__SurfaceType*                    Surface                        1;	///< Required element.
/// @brief A polyhedral surface is a surface composed of polygon patches connected along their common boundary curves. This differs from the surface type only in the restriction on the types of surface patches acceptable. polygonPatches encapsulates the polygon patches of the polyhedral surface.
/// Element PolyhedralSurface of type "http://www.opengis.net/gml/3.2":SurfaceType.
    gml__SurfaceType*                    PolyhedralSurface              1;	///< Required element.
/// @brief A triangulated surface is a polyhedral surface that is composed only of triangles. There is no restriction on how the triangulation is derived. trianglePatches encapsulates the triangles of the triangulated surface.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="TriangulatedSurface"> with elements <Tin>
/// @brief A triangulated surface is a polyhedral surface that is composed only of triangles. There is no restriction on how the triangulation is derived. trianglePatches encapsulates the triangles of the triangulated surface.
/// Element TriangulatedSurface of type "http://www.opengis.net/gml/3.2":SurfaceType.
    gml__SurfaceType*                    TriangulatedSurface            1;	///< Required element.
/// @brief A tin is a triangulated surface that uses the Delauny algorithm or a similar algorithm complemented with consideration of stoplines (stopLines), breaklines (breakLines), and maximum length of triangle sides (maxLength). controlPoint shall contain a set of the positions (three or more) used as posts for this TIN (corners of the triangles in the TIN). See ISO 19107:2003, 6.4.39 for details.
/// Element Tin of type "http://www.opengis.net/gml/3.2":TinType.
    gml__TinType*                        Tin                            1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
//  END OF CHOICE OF SUBSTITUTIONS
/// @brief OrientableSurface consists of a surface and an orientation. If the orientation is "+", then the OrientableSurface is identical to the baseSurface. If the orientation is "-", then the OrientableSurface is a reference to a gml:AbstractSurface with an up-normal that reverses the direction for this OrientableSurface, the sense of "the top of the surface".
/// Element OrientableSurface of type "http://www.opengis.net/gml/3.2":OrientableSurfaceType.
    gml__OrientableSurfaceType*          OrientableSurface              1;	///< Required element.
/// @brief A Polygon is a special surface that is defined by a single surface patch (see D.3.6). The boundary of this patch is coplanar and the polygon uses planar interpolation in its interior. The elements exterior and interior describe the surface boundary of the polygon.
/// Element Polygon of type "http://www.opengis.net/gml/3.2":PolygonType.
    gml__PolygonType*                    Polygon                        1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
/// @brief A Point is defined by a single coordinate tuple. The direct position of a point is specified by the pos element which is of type DirectPositionType.
/// Element Point of type "http://www.opengis.net/gml/3.2":PointType.
    gml__PointType*                      Point                          1;	///< Required element.
/// @brief The AbstractCurve element is the abstract head of the substitution group for all (continuous) curve elements.
/// Abstract element AbstractCurve of type "http://www.opengis.net/gml/3.2":AbstractCurveType.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractCurve"> with elements <CompositeCurve> <Curve> <OrientableCurve> <LineString>
/// @brief A gml:CompositeCurve is represented by a sequence of (orientable) curves such that each curve in the sequence terminates at the start point of the subsequent curve in the list. curveMember references or contains inline one curve in the composite curve. The curves are contiguous, the collection of curves is ordered. Therefore, if provided, the aggregationType attribute shall have the value "sequence".
/// Element CompositeCurve of type "http://www.opengis.net/gml/3.2":CompositeCurveType.
    gml__CompositeCurveType*             CompositeCurve                 1;	///< Required element.
/// @brief A curve is a 1-dimensional primitive. Curves are continuous, connected, and have a measurable length in terms of the coordinate system. A curve is composed of one or more curve segments. Each curve segment within a curve may be defined using a different interpolation method. The curve segments are connected to one another, with the end point of each segment except the last being the start point of the next segment in the segment list. The orientation of the curve is positive. The element segments encapsulates the segments of the curve.
/// Element Curve of type "http://www.opengis.net/gml/3.2":CurveType.
    gml__CurveType*                      Curve                          1;	///< Required element.
/// @brief OrientableCurve consists of a curve and an orientation. If the orientation is "+", then the OrientableCurve is identical to the baseCurve. If the orientation is "-", then the OrientableCurve is related to another AbstractCurve with a parameterization that reverses the sense of the curve traversal.
/// Element OrientableCurve of type "http://www.opengis.net/gml/3.2":OrientableCurveType.
    gml__OrientableCurveType*            OrientableCurve                1;	///< Required element.
/// @brief A LineString is a special curve that consists of a single segment with linear interpolation. It is defined by two or more coordinate tuples, with linear interpolation between them. The number of direct positions in the list shall be at least two.
/// Element LineString of type "http://www.opengis.net/gml/3.2":LineStringType.
    gml__LineStringType*                 LineString                     1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
//  END OF CHOICE OF SUBSTITUTIONS
/// Abstract element AbstractImplicitGeometry of type "http://www.opengis.net/gml/3.2":AbstractGeometryType.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractImplicitGeometry"> with elements <Grid>
/// @brief The gml:Grid implicitly defines an unrectified grid, which is a network composed of two or more sets of curves in which the members of each set intersect the members of the other sets in an algorithmic way. The region of interest within the grid is given in terms of its gml:limits, being the grid coordinates of diagonally opposed corners of a rectangular region. gml:axisLabels is provided with a list of labels of the axes of the grid (gml:axisName has been deprecated). gml:dimension specifies the dimension of the grid. The gml:limits element contains a single gml:GridEnvelope. The gml:low and gml:high property elements of the envelope are each integerLists, which are coordinate tuples, the coordinates being measured as offsets from the origin of the grid along each axis, of the diagonally opposing corners of a "rectangular" region of interest.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="Grid"> with elements <RectifiedGrid>
/// @brief The gml:Grid implicitly defines an unrectified grid, which is a network composed of two or more sets of curves in which the members of each set intersect the members of the other sets in an algorithmic way. The region of interest within the grid is given in terms of its gml:limits, being the grid coordinates of diagonally opposed corners of a rectangular region. gml:axisLabels is provided with a list of labels of the axes of the grid (gml:axisName has been deprecated). gml:dimension specifies the dimension of the grid. The gml:limits element contains a single gml:GridEnvelope. The gml:low and gml:high property elements of the envelope are each integerLists, which are coordinate tuples, the coordinates being measured as offsets from the origin of the grid along each axis, of the diagonally opposing corners of a "rectangular" region of interest.
/// Element Grid of type "http://www.opengis.net/gml/3.2":GridType.
    gml__GridType*                       Grid                           1;	///< Required element.
/// @brief A rectified grid is a grid for which there is an affine transformation between the grid coordinates and the coordinates of an external coordinate reference system. It is defined by specifying the position (in some geometric space) of the grid "origin" and of the vectors that specify the post locations. Note that the grid limits (post indexes) and axis name properties are inherited from gml:GridType and that gml:RectifiedGrid adds a gml:origin property (contains or references a gml:Point) and a set of gml:offsetVector properties.
/// Element RectifiedGrid of type "http://www.opengis.net/gml/3.2":RectifiedGridType.
    gml__RectifiedGridType*              RectifiedGrid                  1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
//  END OF CHOICE OF SUBSTITUTIONS
//  END OF CHOICE OF SUBSTITUTIONS
/// @brief The basic gml:Definition element specifies a definition, which can be included in or referenced by a dictionary. The content model for a generic definition is a derivation from gml:AbstractGMLType. The gml:description property element shall hold the definition if this can be captured in a simple text string, or the gml:descriptionReference property element may carry a link to a description elsewhere. The gml:identifier element shall provide one identifier identifying this definition. The identifier shall be unique within the dictionaries using this definition. The gml:name elements shall provide zero or more terms and synonyms for which this is the definition. The gml:remarks element shall be used to hold additional textual information that is not conceptually part of the definition but is useful in understanding the definition.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="Definition"> with elements <UnitDefinition> <Dictionary> <CoordinateSystemAxis> <AbstractCoordinateSystem> <AbstractCRS> <AbstractDatum> <Ellipsoid> <PrimeMeridian> <AbstractCoordinateOperation> <OperationMethod> <AbstractGeneralOperationParameter> <TimeReferenceSystem> <DefinitionCollection> <DefinitionProxy>
/// @brief The basic gml:Definition element specifies a definition, which can be included in or referenced by a dictionary. The content model for a generic definition is a derivation from gml:AbstractGMLType. The gml:description property element shall hold the definition if this can be captured in a simple text string, or the gml:descriptionReference property element may carry a link to a description elsewhere. The gml:identifier element shall provide one identifier identifying this definition. The identifier shall be unique within the dictionaries using this definition. The gml:name elements shall provide zero or more terms and synonyms for which this is the definition. The gml:remarks element shall be used to hold additional textual information that is not conceptually part of the definition but is useful in understanding the definition.
/// Element Definition of type "http://www.opengis.net/gml/3.2":DefinitionType.
    gml__DefinitionType*                 Definition                     1;	///< Required element.
/// @brief A gml:UnitDefinition is a general definition of a unit of measure. This generic element is used only for units for which no relationship with other units or units systems is known. The content model of gml:UnitDefinition adds three additional properties to gml:Definition, gml:quantityType, gml:quantityTypeReference and gml:catalogSymbol. The gml:catalogSymbol property optionally gives the short symbol used for this unit. This element is usually used when the relationship of this unit to other units or units systems is unknown.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="UnitDefinition"> with elements <BaseUnit> <DerivedUnit> <ConventionalUnit>
/// @brief A gml:UnitDefinition is a general definition of a unit of measure. This generic element is used only for units for which no relationship with other units or units systems is known. The content model of gml:UnitDefinition adds three additional properties to gml:Definition, gml:quantityType, gml:quantityTypeReference and gml:catalogSymbol. The gml:catalogSymbol property optionally gives the short symbol used for this unit. This element is usually used when the relationship of this unit to other units or units systems is unknown.
/// Element UnitDefinition of type "http://www.opengis.net/gml/3.2":UnitDefinitionType.
    gml__UnitDefinitionType*             UnitDefinition                 1;	///< Required element.
/// @brief A base unit is a unit of measure that cannot be derived by combination of other base units within a particular system of units. For example, in the SI system of units, the base units are metre, kilogram, second, Ampere, Kelvin, mole, and candela, for the physical quantity types length, mass, time interval, electric current, thermodynamic temperature, amount of substance and luminous intensity, respectively. gml:BaseUnit extends generic gml:UnitDefinition with the property gml:unitsSystem, which carries a reference to the units system to which this base unit is asserted to belong.
/// Element BaseUnit of type "http://www.opengis.net/gml/3.2":BaseUnitType.
    gml__BaseUnitType*                   BaseUnit                       1;	///< Required element.
/// @brief Derived units are defined by combination of other units. Derived units are used for quantities other than those corresponding to the base units, such as hertz (s-1) for frequency, Newton (kg.m/s2) for force. Derived units based directly on base units are usually preferred for quantities other than the fundamental quantities within a system. If a derived unit is not the preferred unit, the gml:ConventionalUnit element should be used instead. The gml:DerivedUnit extends gml:UnitDefinition with the property gml:derivationUnitTerms.
/// Element DerivedUnit of type "http://www.opengis.net/gml/3.2":DerivedUnitType.
    gml__DerivedUnitType*                DerivedUnit                    1;	///< Required element.
/// @brief Conventional units that are neither base units nor defined by direct combination of base units are used in many application domains. For example electronVolt for energy, feet and nautical miles for length. In most cases there is a known, usually linear, conversion to a preferred unit which is either a base unit or derived by direct combination of base units. The gml:ConventionalUnit extends gml:UnitDefinition with a property that describes a conversion to a preferred unit for this physical quantity. When the conversion is exact, the element gml:conversionToPreferredUnit should be used, or when the conversion is not exact the element gml:roughConversionToPreferredUnit is available. Both of these elements have the same content model. The gml:derivationUnitTerm property defined above is included to allow a user to optionally record how this unit may be derived from other ("more primitive") units.
/// Element ConventionalUnit of type "http://www.opengis.net/gml/3.2":ConventionalUnitType.
    gml__ConventionalUnitType*           ConventionalUnit               1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
/// @brief Sets of definitions may be collected into dictionaries or collections. A gml:Dictionary is a non-abstract collection of definitions. The gml:Dictionary content model adds a list of gml:dictionaryEntry properties that contain or reference gml:Definition objects. A database handle (gml:id attribute) is required, in order that this collection may be referred to. The standard gml:identifier, gml:description, gml:descriptionReference and gml:name properties are available to reference or contain more information about this dictionary. The gml:description and gml:descriptionReference property elements may be used for a description of this dictionary. The derived gml:name element may be used for the name(s) of this dictionary. for remote definiton references gml:dictionaryEntry shall be used. If a Definition object contained within a Dictionary uses the descriptionReference property to refer to a remote definition, then this enables the inclusion of a remote definition in a local dictionary, giving a handle and identifier in the context of the local dictionary.
/// Element Dictionary of type "http://www.opengis.net/gml/3.2":DictionaryType.
    gml__DictionaryType*                 Dictionary                     1;	///< Required element.
/// @brief gml:CoordinateSystemAxis is a definition of a coordinate system axis.
/// Element CoordinateSystemAxis of type "http://www.opengis.net/gml/3.2":CoordinateSystemAxisType.
    gml__CoordinateSystemAxisType*       CoordinateSystemAxis           1;	///< Required element.
/// @brief gml:AbstractCoordinateSystem is a coordinate system (CS) is the non-repeating sequence of coordinate system axes that spans a given coordinate space. A CS is derived from a set of mathematical rules for specifying how coordinates in a given space are to be assigned to points. The coordinate values in a coordinate tuple shall be recorded in the order in which the coordinate system axes associations are recorded. This abstract complex type shall not be used, extended, or restricted, in an Application Schema, to define a concrete subtype with a meaning equivalent to a concrete subtype specified in this document.
/// Abstract element AbstractCoordinateSystem of type "http://www.opengis.net/gml/3.2":AbstractCoordinateSystemType.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractCoordinateSystem"> with elements <EllipsoidalCS> <CartesianCS> <VerticalCS> <TimeCS> <LinearCS> <UserDefinedCS> <SphericalCS> <PolarCS> <CylindricalCS> <AffineCS> <TemporalCS> <ObliqueCartesianCS>
/// @brief gml:EllipsoidalCS is a two- or three-dimensional coordinate system in which position is specified by geodetic latitude, geodetic longitude, and (in the three-dimensional case) ellipsoidal height. An EllipsoidalCS shall have two or three gml:axis property elements; the number of associations shall equal the dimension of the CS.
/// Element EllipsoidalCS of type "http://www.opengis.net/gml/3.2":EllipsoidalCSType.
    gml__EllipsoidalCSType*              EllipsoidalCS                  1;	///< Required element.
/// @brief gml:CartesianCS is a 1-, 2-, or 3-dimensional coordinate system. In the 1-dimensional case, it contains a single straight coordinate axis. In the 2- and 3-dimensional cases gives the position of points relative to orthogonal straight axes. In the multi-dimensional case, all axes shall have the same length unit of measure. A CartesianCS shall have one, two, or three gml:axis property elements.
/// Element CartesianCS of type "http://www.opengis.net/gml/3.2":CartesianCSType.
    gml__CartesianCSType*                CartesianCS                    1;	///< Required element.
/// @brief gml:VerticalCS is a one-dimensional coordinate system used to record the heights or depths of points. Such a coordinate system is usually dependent on the Earth's gravity field, perhaps loosely as when atmospheric pressure is the basis for the vertical coordinate system axis. A VerticalCS shall have one gml:axis property element.
/// Element VerticalCS of type "http://www.opengis.net/gml/3.2":VerticalCSType.
    gml__VerticalCSType*                 VerticalCS                     1;	///< Required element.
/// @brief gml:TimeCS is a one-dimensional coordinate system containing a time axis, used to describe the temporal position of a point in the specified time units from a specified time origin. A TimeCS shall have one gml:axis property element.
/// Element TimeCS of type "http://www.opengis.net/gml/3.2":TimeCSType.
    gml__TimeCSType*                     TimeCS                         1;	///< Required element.
/// @brief gml:LinearCS is a one-dimensional coordinate system that consists of the points that lie on the single axis described. The associated coordinate is the distance with or without offset from the specified datum to the point along the axis. A LinearCS shall have one gml:axis property element.
/// Element LinearCS of type "http://www.opengis.net/gml/3.2":LinearCSType.
    gml__LinearCSType*                   LinearCS                       1;	///< Required element.
/// @brief gml:UserDefinedCS is a two- or three-dimensional coordinate system that consists of any combination of coordinate axes not covered by any other coordinate system type. A UserDefinedCS shall have two or three gml:axis property elements; the number of property elements shall equal the dimension of the CS.
/// Element UserDefinedCS of type "http://www.opengis.net/gml/3.2":UserDefinedCSType.
    gml__UserDefinedCSType*              UserDefinedCS                  1;	///< Required element.
/// @brief gml:SphericalCS is a three-dimensional coordinate system with one distance measured from the origin and two angular coordinates. A SphericalCS shall have three gml:axis property elements.
/// Element SphericalCS of type "http://www.opengis.net/gml/3.2":SphericalCSType.
    gml__SphericalCSType*                SphericalCS                    1;	///< Required element.
/// @brief gml:PolarCS ia s two-dimensional coordinate system in which position is specified by the distance from the origin and the angle between the line from the origin to a point and a reference direction. A PolarCS shall have two gml:axis property elements.
/// Element PolarCS of type "http://www.opengis.net/gml/3.2":PolarCSType.
    gml__PolarCSType*                    PolarCS                        1;	///< Required element.
/// @brief gml:CylindricalCS is a three-dimensional coordinate system consisting of a polar coordinate system extended by a straight coordinate axis perpendicular to the plane spanned by the polar coordinate system. A CylindricalCS shall have three gml:axis property elements.
/// Element CylindricalCS of type "http://www.opengis.net/gml/3.2":CylindricalCSType.
    gml__CylindricalCSType*              CylindricalCS                  1;	///< Required element.
/// @brief gml:AffineCS is a two- or three-dimensional coordinate system with straight axes that are not necessarily orthogonal. An AffineCS shall have two or three gml:axis property elements; the number of property elements shall equal the dimension of the CS.
/// Element AffineCS of type "http://www.opengis.net/gml/3.2":AffineCSType.
    gml__AffineCSType*                   AffineCS                       1;	///< Required element.
/// Element TemporalCS of type "http://www.opengis.net/gml/3.2":TemporalCSType.
    gml__TemporalCSType*                 TemporalCS                     1;	///< Required element.
/// Element ObliqueCartesianCS of type "http://www.opengis.net/gml/3.2":ObliqueCartesianCSType.
    gml__ObliqueCartesianCSType*         ObliqueCartesianCS             1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
/// @brief gml:AbstractCRS specifies a coordinate reference system which is usually single but may be compound. This abstract complex type shall not be used, extended, or restricted, in a GML Application Schema, to define a concrete subtype with a meaning equivalent to a concrete subtype specified in this document.
/// Abstract element AbstractCRS of type "http://www.opengis.net/gml/3.2":AbstractCRSType.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractCRS"> with elements <AbstractSingleCRS> <CompoundCRS>
/// @brief gml:AbstractSingleCRS implements a coordinate reference system consisting of one coordinate system and one datum (as opposed to a Compound CRS).
/// Abstract element AbstractSingleCRS of type "http://www.opengis.net/gml/3.2":AbstractCRSType.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractSingleCRS"> with elements <AbstractGeneralDerivedCRS> <GeodeticCRS> <VerticalCRS> <EngineeringCRS> <ImageCRS> <TemporalCRS> <GeographicCRS> <GeocentricCRS>
/// @brief gml:AbstractGeneralDerivedCRS is a coordinate reference system that is defined by its coordinate conversion from another coordinate reference system. This abstract complex type shall not be used, extended, or restricted, in a GML Application Schema, to define a concrete subtype with a meaning equivalent to a concrete subtype specified in this document.
/// Abstract element AbstractGeneralDerivedCRS of type "http://www.opengis.net/gml/3.2":AbstractGeneralDerivedCRSType.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractGeneralDerivedCRS"> with elements <ProjectedCRS> <DerivedCRS>
/// @brief gml:ProjectedCRS is a 2D coordinate reference system used to approximate the shape of the earth on a planar surface, but in such a way that the distortion that is inherent to the approximation is carefully controlled and known. Distortion correction is commonly applied to calculated bearings and distances to produce values that are a close match to actual field values.
/// Element ProjectedCRS of type "http://www.opengis.net/gml/3.2":ProjectedCRSType.
    gml__ProjectedCRSType*               ProjectedCRS                   1;	///< Required element.
/// @brief gml:DerivedCRS is a single coordinate reference system that is defined by its coordinate conversion from another single coordinate reference system known as the base CRS. The base CRS can be a projected coordinate reference system, if this DerivedCRS is used for a georectified grid coverage as described in ISO 19123, Clause 8.
/// Element DerivedCRS of type "http://www.opengis.net/gml/3.2":DerivedCRSType.
    gml__DerivedCRSType*                 DerivedCRS                     1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
/// Element GeodeticCRS of type "http://www.opengis.net/gml/3.2":GeodeticCRSType.
    gml__GeodeticCRSType*                GeodeticCRS                    1;	///< Required element.
/// @brief gml:VerticalCRS is a 1D coordinate reference system used for recording heights or depths. Vertical CRSs make use of the direction of gravity to define the concept of height or depth, but the relationship with gravity may not be straightforward. By implication, ellipsoidal heights (h) cannot be captured in a vertical coordinate reference system. Ellipsoidal heights cannot exist independently, but only as an inseparable part of a 3D coordinate tuple defined in a geographic 3D coordinate reference system.
/// Element VerticalCRS of type "http://www.opengis.net/gml/3.2":VerticalCRSType.
    gml__VerticalCRSType*                VerticalCRS                    1;	///< Required element.
/// @brief gml:EngineeringCRS is a contextually local coordinate reference system which can be divided into two broad categories: - earth-fixed systems applied to engineering activities on or near the surface of the earth; - CRSs on moving platforms such as road vehicles, vessels, aircraft, or spacecraft, see ISO 19111 8.3.
/// Element EngineeringCRS of type "http://www.opengis.net/gml/3.2":EngineeringCRSType.
    gml__EngineeringCRSType*             EngineeringCRS                 1;	///< Required element.
/// @brief gml:ImageCRS is an engineering coordinate reference system applied to locations in images. Image coordinate reference systems are treated as a separate sub-type because the definition of the associated image datum contains two attributes not relevant to other engineering datums.
/// Element ImageCRS of type "http://www.opengis.net/gml/3.2":ImageCRSType.
    gml__ImageCRSType*                   ImageCRS                       1;	///< Required element.
/// @brief gml:TemporalCRS is a 1D coordinate reference system used for the recording of time.
/// Element TemporalCRS of type "http://www.opengis.net/gml/3.2":TemporalCRSType.
    gml__TemporalCRSType*                TemporalCRS                    1;	///< Required element.
/// Element GeographicCRS of type "http://www.opengis.net/gml/3.2":GeographicCRSType.
    gml__GeographicCRSType*              GeographicCRS                  1;	///< Required element.
/// Element GeocentricCRS of type "http://www.opengis.net/gml/3.2":GeocentricCRSType.
    gml__GeocentricCRSType*              GeocentricCRS                  1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
/// @brief gml:CompundCRS is a coordinate reference system describing the position of points through two or more independent coordinate reference systems. It is associated with a non-repeating sequence of two or more instances of SingleCRS.
/// Element CompoundCRS of type "http://www.opengis.net/gml/3.2":CompoundCRSType.
    gml__CompoundCRSType*                CompoundCRS                    1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
/// @brief A gml:AbstractDatum specifies the relationship of a coordinate system to the earth, thus creating a coordinate reference system. A datum uses a parameter or set of parameters that determine the location of the origin of the coordinate reference system. Each datum subtype may be associated with only specific types of coordinate systems. This abstract complex type shall not be used, extended, or restricted, in a GML Application Schema, to define a concrete subtype with a meaning equivalent to a concrete subtype specified in this document.
/// Abstract element AbstractDatum of type "http://www.opengis.net/gml/3.2":AbstractDatumType.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractDatum"> with elements <GeodeticDatum> <EngineeringDatum> <ImageDatum> <VerticalDatum> <TemporalDatum>
/// @brief gml:GeodeticDatum is a geodetic datum defines the precise location and orientation in 3-dimensional space of a defined ellipsoid (or sphere), or of a Cartesian coordinate system centered in this ellipsoid (or sphere).
/// Element GeodeticDatum of type "http://www.opengis.net/gml/3.2":GeodeticDatumType.
    gml__GeodeticDatumType*              GeodeticDatum                  1;	///< Required element.
/// @brief gml:EngineeringDatum defines the origin of an engineering coordinate reference system, and is used in a region around that origin. This origin may be fixed with respect to the earth (such as a defined point at a construction site), or be a defined point on a moving vehicle (such as on a ship or satellite).
/// Element EngineeringDatum of type "http://www.opengis.net/gml/3.2":EngineeringDatumType.
    gml__EngineeringDatumType*           EngineeringDatum               1;	///< Required element.
/// @brief gml:ImageDatum defines the origin of an image coordinate reference system, and is used in a local context only. For an image datum, the anchor definition is usually either the centre of the image or the corner of the image. For more information, see ISO 19111 B.3.5.
/// Element ImageDatum of type "http://www.opengis.net/gml/3.2":ImageDatumType.
    gml__ImageDatumType*                 ImageDatum                     1;	///< Required element.
/// @brief gml:VerticalDatum is a textual description and/or a set of parameters identifying a particular reference level surface used as a zero-height surface, including its position with respect to the Earth for any of the height types recognized by this International Standard.
/// Element VerticalDatum of type "http://www.opengis.net/gml/3.2":VerticalDatumType.
    gml__VerticalDatumType*              VerticalDatum                  1;	///< Required element.
/// @brief A gml:TemporalDatum defines the origin of a Temporal Reference System. This type omits the "anchorDefinition" and "realizationEpoch" elements and adds the "origin" element with the dateTime type.
/// Element TemporalDatum of type "http://www.opengis.net/gml/3.2":TemporalDatumType.
    gml__TemporalDatumType*              TemporalDatum                  1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
/// @brief A gml:Ellipsoid is a geometric figure that may be used to describe the approximate shape of the earth. In mathematical terms, it is a surface formed by the rotation of an ellipse about its minor axis.
/// Element Ellipsoid of type "http://www.opengis.net/gml/3.2":EllipsoidType.
    gml__EllipsoidType*                  Ellipsoid                      1;	///< Required element.
/// @brief A gml:PrimeMeridian defines the origin from which longitude values are determined. The default value for the prime meridian gml:identifier value is "Greenwich".
/// Element PrimeMeridian of type "http://www.opengis.net/gml/3.2":PrimeMeridianType.
    gml__PrimeMeridianType*              PrimeMeridian                  1;	///< Required element.
/// @brief gml:AbstractCoordinateOperation is a mathematical operation on coordinates that transforms or converts coordinates to another coordinate reference system. Many but not all coordinate operations (from CRS A to CRS B) also uniquely define the inverse operation (from CRS B to CRS A). In some cases, the operation method algorithm for the inverse operation is the same as for the forward algorithm, but the signs of some operation parameter values shall be reversed. In other cases, different algorithms are required for the forward and inverse operations, but the same operation parameter values are used. If (some) entirely different parameter values are needed, a different coordinate operation shall be defined. The optional coordinateOperationAccuracy property elements provide estimates of the impact of this coordinate operation on point position accuracy.
/// Abstract element AbstractCoordinateOperation of type "http://www.opengis.net/gml/3.2":AbstractCoordinateOperationType.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractCoordinateOperation"> with elements <AbstractSingleOperation> <ConcatenatedOperation>
/// @brief gml:AbstractSingleOperation is a single (not concatenated) coordinate operation.
/// Abstract element AbstractSingleOperation of type "http://www.opengis.net/gml/3.2":AbstractCoordinateOperationType.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractSingleOperation"> with elements <PassThroughOperation> <AbstractOperation>
/// @brief gml:PassThroughOperation is a pass-through operation specifies that a subset of a coordinate tuple is subject to a specific coordinate operation. The modifiedCoordinate property elements are an ordered sequence of positive integers defining the positions in a coordinate tuple of the coordinates affected by this pass-through operation. The AggregationAttributeGroup should be used to specify that the modifiedCoordinate elements are ordered.
/// Element PassThroughOperation of type "http://www.opengis.net/gml/3.2":PassThroughOperationType.
    gml__PassThroughOperationType*       PassThroughOperation           1;	///< Required element.
/// Abstract element AbstractOperation of type "http://www.opengis.net/gml/3.2":AbstractCoordinateOperationType.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractOperation"> with elements <AbstractGeneralConversion> <AbstractGeneralTransformation>
/// @brief gm:AbstractGeneralConversion is an abstract operation on coordinates that does not include any change of datum. The best-known example of a coordinate conversion is a map projection. The parameters describing coordinate conversions are defined rather than empirically derived. Note that some conversions have no parameters. The operationVersion, sourceCRS, and targetCRS elements are omitted in a coordinate conversion. This abstract complex type is expected to be extended for well-known operation methods with many Conversion instances, in GML Application Schemas that define operation-method-specialized element names and contents. This conversion uses an operation method, usually with associated parameter values. However, operation methods and parameter values are directly associated with concrete subtypes, not with this abstract type. All concrete types derived from this type shall extend this type to include a "usesMethod" element that references the "OperationMethod" element. Similarly, all concrete types derived from this type shall extend this type to include zero or more elements each named "uses...Value" that each use the type of an element substitutable for the "AbstractGeneralParameterValue" element.
/// Abstract element AbstractGeneralConversion of type "http://www.opengis.net/gml/3.2":AbstractGeneralConversionType.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractGeneralConversion"> with elements <Conversion>
/// @brief gml:Conversion is a concrete operation on coordinates that does not include any change of Datum. The best-known example of a coordinate conversion is a map projection. The parameters describing coordinate conversions are defined rather than empirically derived. Note that some conversions have no parameters. This concrete complex type can be used without using a GML Application Schema that defines operation-method-specialized element names and contents, especially for methods with only one Conversion instance. The usesValue property elements are an unordered list of composition associations to the set of parameter values used by this conversion operation.
/// Element Conversion of type "http://www.opengis.net/gml/3.2":ConversionType.
    gml__ConversionType*                 Conversion                     1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
/// @brief gml:AbstractGeneralTransformation is an abstract operation on coordinates that usually includes a change of Datum. The parameters of a coordinate transformation are empirically derived from data containing the coordinates of a series of points in both coordinate reference systems. This computational process is usually "over-determined", allowing derivation of error (or accuracy) estimates for the transformation. Also, the stochastic nature of the parameters may result in multiple (different) versions of the same coordinate transformation. The operationVersion, sourceCRS, and targetCRS proeprty elements are mandatory in a coordinate transformation. This abstract complex type is expected to be extended for well-known operation methods with many Transformation instances, in Application Schemas that define operation-method-specialized value element names and contents. This transformation uses an operation method with associated parameter values. However, operation methods and parameter values are directly associated with concrete subtypes, not with this abstract type. All concrete types derived from this type shall extend this type to include a "usesMethod" element that references one "OperationMethod" element. Similarly, all concrete types derived from this type shall extend this type to include one or more elements each named "uses...Value" that each use the type of an element substitutable for the "AbstractGeneralParameterValue" element.
/// Abstract element AbstractGeneralTransformation of type "http://www.opengis.net/gml/3.2":AbstractGeneralTransformationType.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractGeneralTransformation"> with elements <Transformation>
/// @brief gml:Transformation is a concrete object element derived from gml:GeneralTransformation (13.6.2.13). This concrete object can be used for all operation methods, without using a GML Application Schema that defines operation-method-specialized element names and contents, especially for methods with only one Transformation instance. The parameterValue elements are an unordered list of composition associations to the set of parameter values used by this conversion operation.
/// Element Transformation of type "http://www.opengis.net/gml/3.2":TransformationType.
    gml__TransformationType*             Transformation                 1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
//  END OF CHOICE OF SUBSTITUTIONS
//  END OF CHOICE OF SUBSTITUTIONS
/// Element ConcatenatedOperation of type "http://www.opengis.net/gml/3.2":ConcatenatedOperationType.
    gml__ConcatenatedOperationType*      ConcatenatedOperation          1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
/// @brief gml:OperationMethod is a method (algorithm or procedure) used to perform a coordinate operation. Most operation methods use a number of operation parameters, although some coordinate conversions use none. Each coordinate operation using the method assigns values to these parameters. The parameter elements are an unordered list of associations to the set of operation parameters and parameter groups used by this operation method.
/// Element OperationMethod of type "http://www.opengis.net/gml/3.2":OperationMethodType.
    gml__OperationMethodType*            OperationMethod                1;	///< Required element.
/// @brief gml:GeneralOperationParameter is the abstract definition of a parameter or group of parameters used by an operation method.
/// Abstract element AbstractGeneralOperationParameter of type "http://www.opengis.net/gml/3.2":AbstractGeneralOperationParameterType.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractGeneralOperationParameter"> with elements <OperationParameter> <OperationParameterGroup>
/// @brief gml:OperationParameter is the definition of a parameter used by an operation method. Most parameter values are numeric, but other types of parameter values are possible. This complex type is expected to be used or extended for all operation methods, without defining operation-method-specialized element names.
/// Element OperationParameter of type "http://www.opengis.net/gml/3.2":OperationParameterType.
    gml__OperationParameterType*         OperationParameter             1;	///< Required element.
/// @brief gml:OperationParameterGroup is the definition of a group of parameters used by an operation method. This complex type is expected to be used or extended for all applicable operation methods, without defining operation-method-specialized element names. The generalOperationParameter elements are an unordered list of associations to the set of operation parameters that are members of this group.
/// Element OperationParameterGroup of type "http://www.opengis.net/gml/3.2":OperationParameterGroupType.
    gml__OperationParameterGroupType*    OperationParameterGroup        1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
/// @brief A reference system is characterized in terms of its domain of validity: the spatial and temporal extent over which it is applicable. The basic GML element for temporal reference systems is gml:TimeReferenceSystem. Its content model extends gml:DefinitionType with one additional property, gml:domainOfValidity.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="TimeReferenceSystem"> with elements <TimeCoordinateSystem> <TimeCalendar> <TimeClock> <TimeOrdinalReferenceSystem>
/// @brief A reference system is characterized in terms of its domain of validity: the spatial and temporal extent over which it is applicable. The basic GML element for temporal reference systems is gml:TimeReferenceSystem. Its content model extends gml:DefinitionType with one additional property, gml:domainOfValidity.
/// Element TimeReferenceSystem of type "http://www.opengis.net/gml/3.2":TimeReferenceSystemType.
    gml__TimeReferenceSystemType*        TimeReferenceSystem            1;	///< Required element.
/// @brief A temporal coordinate system shall be based on a continuous interval scale defined in terms of a single time interval. The differences to ISO 19108 TM_CoordinateSystem are: - the origin is specified either using the property gml:originPosition whose value is a direct time position, or using the property gml:origin whose model is gml:TimeInstantPropertyType; this permits more flexibility in representation and also supports referring to a value fixed elsewhere; - the interval uses gml:TimeIntervalLengthType.
/// Element TimeCoordinateSystem of type "http://www.opengis.net/gml/3.2":TimeCoordinateSystemType.
    gml__TimeCoordinateSystemType*       TimeCoordinateSystem           1;	///< Required element.
/// @brief A calendar is a discrete temporal reference system that provides a basis for defining temporal position to a resolution of one day. gml:TimeCalendar adds one property to those inherited from gml:TimeReferenceSystem. A gml:referenceFrame provides a link to a gml:TimeCalendarEra that it uses. A gml:TimeCalendar may reference more than one calendar era. The referenceFrame element follows the standard GML property model, allowing the association to be instantiated either using an inline description using the gml:TimeCalendarEra element, or a link to a gml:TimeCalendarEra which is explicit elsewhere.
/// Element TimeCalendar of type "http://www.opengis.net/gml/3.2":TimeCalendarType.
    gml__TimeCalendarType*               TimeCalendar                   1;	///< Required element.
/// @brief A clock provides a basis for defining temporal position within a day. A clock shall be used with a calendar in order to provide a complete description of a temporal position within a specific day. gml:TimeClock adds the following properties to those inherited from gml:TimeReferenceSystemType: - gml:referenceEvent is the name or description of an event, such as solar noon or sunrise, which fixes the position of the base scale of the clock. - gml:referenceTime specifies the time of day associated with the reference event expressed as a time of day in the given clock. The reference time is usually the origin of the clock scale. - gml:utcReference specifies the 24 hour local or UTC time that corresponds to the reference time. - gml:dateBasis contains or references the calendars that use this clock.
/// Element TimeClock of type "http://www.opengis.net/gml/3.2":TimeClockType.
    gml__TimeClockType*                  TimeClock                      1;	///< Required element.
/// @brief In some applications of geographic information such as geology and archaeology relative position in time is known more precisely than absolute time or duration. The order of events in time can be well established, but the magnitude of the intervals between them cannot be accurately determined; in such cases, the use of an ordinal temporal reference system is appropriate. An ordinal temporal reference system is composed of a sequence of named coterminous eras, which may in turn be composed of sequences of member eras at a finer scale, giving the whole a hierarchical structure of eras of verying resolution. An ordinal temporal reference system whose component eras are not further subdivided is effectively a temporal topological complex constrained to be a linear graph. An ordinal temporal reference system some or all of whose component eras are subdivided is effectively a temporal topological complex with the constraint that parallel branches may only be constructed in pairs where one is a single temporal ordinal era and the other is a sequence of temporal ordinal eras that are called "members" of the "group". This constraint means that within a single temporal ordinal reference system, the relative position of all temporal ordinal eras is unambiguous. The positions of the beginning and end of a given era may calibrate the relative time scale. gml:TimeOrdinalReferenceSystem adds one or more gml:component properties to the generic temporal reference system model.
/// Element TimeOrdinalReferenceSystem of type "http://www.opengis.net/gml/3.2":TimeOrdinalReferenceSystemType.
    gml__TimeOrdinalReferenceSystemType*  TimeOrdinalReferenceSystem     1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
/// Element DefinitionCollection of type "http://www.opengis.net/gml/3.2":DictionaryType.
    gml__DictionaryType*                 DefinitionCollection           1;	///< Required element.
/// Element DefinitionProxy of type "http://www.opengis.net/gml/3.2":DefinitionProxyType.
    gml__DefinitionProxyType*            DefinitionProxy                1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
/// @brief This abstract element serves as the head of a substitution group which may contain any elements whose content model is derived from gml:AbstractFeatureType. This may be used as a variable in the construction of content models. gml:AbstractFeature may be thought of as "anything that is a GML feature" and may be used to define variables or templates in which the value of a GML property is "any feature". This occurs in particular in a GML feature collection where the feature member properties contain one or multiple copies of gml:AbstractFeature respectively.
/// Abstract element AbstractFeature of type "http://www.opengis.net/gml/3.2":AbstractFeatureType.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractFeature"> with elements <DynamicFeature> <AbstractCoverage> <AbstractContinuousCoverage> <Observation> <AbstractFeatureCollection> <FeatureCollection> <SpatialDataSet> <SpatialDataSet> <ZoningElement> <ZoningElement> <OfficialDocumentation> <OfficialDocumentation> <SupplementaryRegulation> <SupplementaryRegulation> <SpatialPlan> <SpatialPlan>
/// @brief States are captured by time-stamped instances of a feature. The content model extends the standard gml:AbstractFeatureType with the gml:dynamicProperties model group. Each time-stamped instance represents a 'snapshot' of a feature. The dynamic feature classes will normally be extended to suit particular applications. A dynamic feature bears either a time stamp or a history.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="DynamicFeature"> with elements <DynamicFeatureCollection>
/// @brief States are captured by time-stamped instances of a feature. The content model extends the standard gml:AbstractFeatureType with the gml:dynamicProperties model group. Each time-stamped instance represents a 'snapshot' of a feature. The dynamic feature classes will normally be extended to suit particular applications. A dynamic feature bears either a time stamp or a history.
/// Element DynamicFeature of type "http://www.opengis.net/gml/3.2":DynamicFeatureType.
    gml__DynamicFeatureType*             DynamicFeature                 1;	///< Required element.
/// @brief A gml:DynamicFeatureCollection is a feature collection that has a gml:validTime property (i.e. is a snapshot of the feature collection) or which has a gml:history property that contains one or more gml:AbstractTimeSlices each of which contain values of the time varying properties of the feature collection. Note that the gml:DynamicFeatureCollection may be one of the following: 1. A feature collection which consists of static feature members (members do not change in time) but which has properties of the collection object as a whole that do change in time . 2. A feature collection which consists of dynamic feature members (the members are gml:DynamicFeatures) but which also has properties of the collection as a whole that vary in time.
/// Element DynamicFeatureCollection of type "http://www.opengis.net/gml/3.2":DynamicFeatureCollectionType.
    gml__DynamicFeatureCollectionType*   DynamicFeatureCollection       1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
/// @brief This element serves as the head of a substitution group which may contain any coverage whose type is derived from gml:AbstractCoverageType. It may act as a variable in the definition of content models where it is required to permit any coverage to be valid.
/// Abstract element AbstractCoverage of type "http://www.opengis.net/gml/3.2":AbstractCoverageType.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractCoverage"> with elements <AbstractDiscreteCoverage>
/// @brief A discrete coverage consists of a domain set, range set and optionally a coverage function. The domain set consists of either spatial or temporal geometry objects, finite in number. The range set is comprised of a finite number of attribute values each of which is associated to every direct position within any single spatiotemporal object in the domain. In other words, the range values are constant on each spatiotemporal object in the domain. This coverage function maps each element from the coverage domain to an element in its range. The coverageFunction element describes the mapping function. This element serves as the head of a substitution group which may contain any discrete coverage whose type is derived from gml:DiscreteCoverageType.
/// Abstract element AbstractDiscreteCoverage of type "http://www.opengis.net/gml/3.2":DiscreteCoverageType.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractDiscreteCoverage"> with elements <MultiPointCoverage> <MultiCurveCoverage> <MultiSurfaceCoverage> <MultiSolidCoverage> <GridCoverage> <RectifiedGridCoverage>
/// @brief In a gml:MultiPointCoverage the domain set is a gml:MultiPoint, that is a collection of arbitrarily distributed geometric points. The content model is identical with gml:DiscreteCoverageType, but that gml:domainSet shall have values gml:MultiPoint. In a gml:MultiPointCoverage the mapping from the domain to the range is straightforward. - For gml:DataBlock encodings the points of the gml:MultiPoint are mapped in document order to the tuples of the data block. - For gml:CompositeValue encodings the points of the gml:MultiPoint are mapped to the members of the composite value in document order. - For gml:File encodings the points of the gml:MultiPoint are mapped to the records of the file in sequential order.
/// Element MultiPointCoverage of type "http://www.opengis.net/gml/3.2":DiscreteCoverageType.
    gml__DiscreteCoverageType*           MultiPointCoverage             1;	///< Required element.
/// @brief In a gml:MultiCurveCoverage the domain is partioned into a collection of curves comprising a gml:MultiCurve. The coverage function then maps each curve in the collection to a value in the range set. The content model is identical with gml:DiscreteCoverageType, but that gml:domainSet shall have values gml:MultiCurve. In a gml:MultiCurveCoverage the mapping from the domain to the range is straightforward. - For gml:DataBlock encodings the curves of the gml:MultiCurve are mapped in document order to the tuples of the data block. - For gml:CompositeValue encodings the curves of the gml:MultiCurve are mapped to the members of the composite value in document order. - For gml:File encodings the curves of the gml:MultiCurve are mapped to the records of the file in sequential order.
/// Element MultiCurveCoverage of type "http://www.opengis.net/gml/3.2":DiscreteCoverageType.
    gml__DiscreteCoverageType*           MultiCurveCoverage             1;	///< Required element.
/// @brief In a gml:MultiSurfaceCoverage the domain is partioned into a collection of surfaces comprising a gml:MultiSurface. The coverage function than maps each surface in the collection to a value in the range set. The content model is identical with gml:DiscreteCoverageType, but that gml:domainSet shall have values gml:MultiSurface. In a gml:MultiSurfaceCoverage the mapping from the domain to the range is straightforward. - For gml:DataBlock encodings the surfaces of the gml:MultiSurface are mapped in document order to the tuples of the data block. - For gml:CompositeValue encodings the surfaces of the gml:MultiSurface are mapped to the members of the composite value in document order. - For gml:File encodings the surfaces of the gml:MultiSurface are mapped to the records of the file in sequential order.
/// Element MultiSurfaceCoverage of type "http://www.opengis.net/gml/3.2":DiscreteCoverageType.
    gml__DiscreteCoverageType*           MultiSurfaceCoverage           1;	///< Required element.
/// @brief In a gml:MultiSolidCoverage the domain is partioned into a collection of solids comprising a gml:MultiSolid. The coverage function than maps each solid in the collection to a value in the range set. The content model is identical with gml:DiscreteCoverageType, but that gml:domainSet shall have values gml:MultiSolid. In a gml:MultiSolidCoverage the mapping from the domain to the range is straightforward. - For gml:DataBlock encodings the solids of the gml:MultiSolid are mapped in document order to the tuples of the data block. - For gml:CompositeValue encodings the solids of the gml:MultiSolid are mapped to the members of the composite value in document order. - For gml:File encodings the solids of the gml:MultiSolid are mapped to the records of the file in sequential order.
/// Element MultiSolidCoverage of type "http://www.opengis.net/gml/3.2":DiscreteCoverageType.
    gml__DiscreteCoverageType*           MultiSolidCoverage             1;	///< Required element.
/// @brief A gml:GriddedCoverage is a discrete point coverage in which the domain set is a geometric grid of points. Note that this is the same as the gml:MultiPointCoverage except that we have a gml:Grid to describe the domain. The simple gridded coverage is not geometrically referenced and hence no geometric positions are assignable to the points in the grid. Such geometric positioning is introduced in the gml:RectifiedGridCoverage.
/// Element GridCoverage of type "http://www.opengis.net/gml/3.2":DiscreteCoverageType.
    gml__DiscreteCoverageType*           GridCoverage                   1;	///< Required element.
/// @brief The gml:RectifiedGridCoverage is a discrete point coverage based on a rectified grid. It is similar to the grid coverage except that the points of the grid are geometrically referenced. The rectified grid coverage has a domain that is a gml:RectifiedGrid geometry.
/// Element RectifiedGridCoverage of type "http://www.opengis.net/gml/3.2":DiscreteCoverageType.
    gml__DiscreteCoverageType*           RectifiedGridCoverage          1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
//  END OF CHOICE OF SUBSTITUTIONS
/// @brief A continuous coverage as defined in ISO 19123 is a coverage that can return different values for the same feature attribute at different direct positions within a single spatiotemporal object in its spatiotemporal domain. The base type for continuous coverages is AbstractContinuousCoverageType. The coverageFunction element describes the mapping function. The abstract element gml:AbstractContinuousCoverage serves as the head of a substitution group which may contain any continuous coverage whose type is derived from gml:AbstractContinuousCoverageType.
/// Abstract element AbstractContinuousCoverage of type "http://www.opengis.net/gml/3.2":AbstractContinuousCoverageType.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractContinuousCoverage"> with elements
//  END OF CHOICE OF SUBSTITUTIONS
;	///< Required element.
/// @brief The content model is a straightforward extension of gml:AbstractFeatureType; it automatically has the gml:identifier, gml:description, gml:descriptionReference, gml:name, and gml:boundedBy properties. The gml:validTime element describes the time of the observation. Note that this may be a time instant or a time period. The gml:using property contains or references a description of a sensor, instrument or procedure used for the observation. The gml:target property contains or references the specimen, region or station which is the object of the observation. This property is particularly useful for remote observations, such as photographs, where a generic location property might apply to the location of the camera or the location of the field of view, and thus may be ambiguous. The gml:subject element is provided as a convenient synonym for gml:target. This is the term commonly used in phtotography. The gml:resultOf property indicates the result of the observation. The value may be inline, or a reference to a value elsewhere.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="Observation"> with elements <DirectedObservation>
/// @brief The content model is a straightforward extension of gml:AbstractFeatureType; it automatically has the gml:identifier, gml:description, gml:descriptionReference, gml:name, and gml:boundedBy properties. The gml:validTime element describes the time of the observation. Note that this may be a time instant or a time period. The gml:using property contains or references a description of a sensor, instrument or procedure used for the observation. The gml:target property contains or references the specimen, region or station which is the object of the observation. This property is particularly useful for remote observations, such as photographs, where a generic location property might apply to the location of the camera or the location of the field of view, and thus may be ambiguous. The gml:subject element is provided as a convenient synonym for gml:target. This is the term commonly used in phtotography. The gml:resultOf property indicates the result of the observation. The value may be inline, or a reference to a value elsewhere.
/// Element Observation of type "http://www.opengis.net/gml/3.2":ObservationType.
    gml__ObservationType*                Observation                    1;	///< Required element.
/// @brief A gml:DirectedObservation is the same as an observation except that it adds an additional gml:direction property. This is the direction in which the observation was acquired. Clearly this applies only to certain types of observations such as visual observations by people, or observations obtained from terrestrial cameras.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="DirectedObservation"> with elements <DirectedObservationAtDistance>
/// @brief A gml:DirectedObservation is the same as an observation except that it adds an additional gml:direction property. This is the direction in which the observation was acquired. Clearly this applies only to certain types of observations such as visual observations by people, or observations obtained from terrestrial cameras.
/// Element DirectedObservation of type "http://www.opengis.net/gml/3.2":DirectedObservationType.
    gml__DirectedObservationType*        DirectedObservation            1;	///< Required element.
/// @brief gml:DirectedObservationAtDistance adds an additional distance property. This is the distance from the observer to the subject of the observation. Clearly this applies only to certain types of observations such as visual observations by people, or observations obtained from terrestrial cameras.
/// Element DirectedObservationAtDistance of type "http://www.opengis.net/gml/3.2":DirectedObservationAtDistanceType.
    gml__DirectedObservationAtDistanceType*  DirectedObservationAtDistance  1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
//  END OF CHOICE OF SUBSTITUTIONS
/// Abstract element AbstractFeatureCollection of type "http://www.opengis.net/gml/3.2":AbstractFeatureCollectionType.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractFeatureCollection"> with elements
//  END OF CHOICE OF SUBSTITUTIONS
;	///< Required element.
/// Element FeatureCollection of type "http://www.opengis.net/gml/3.2":FeatureCollectionType.
    gml__FeatureCollectionType*          FeatureCollection              1;	///< Required element.
/// @brief -- Definition -- Identifiable collection of spatial data. -- Description -- NOTE The type SpatialDataSet is offered as a pre-defined type for spatial data sets. The scope of this type is packaging pre-defined data sets for the non-direct access download service. It may be reused in thematic application schemas, but if it does not fit an application-schema-specific data set object should be modelled. This type may have the same name and definition like this type, but may have a different set of properties. This type specifies three properties: an external object identifier, a container for metadata (may be void), and an association to zero or more spatial objects.
/// Element SpatialDataSet of type "http://inspire.ec.europa.eu/schemas/base/3.3":SpatialDataSetType.
    base__SpatialDataSetType*            SpatialDataSet                 1;	///< Required element.
/// @brief -- Definition -- Identifiable collection of spatial data. -- Description -- NOTE The type SpatialDataSet is offered as a pre-defined type for spatial data sets. The scope of this type is packaging pre-defined data sets for the non-direct access download service. It may be reused in thematic application schemas, but if it does not fit an application-schema-specific data set object should be modelled. This type may have the same name and definition like this type, but may have a different set of properties. This type specifies three properties: an external object identifier, a container for metadata (may be void), and an association to zero or more spatial objects.
/// Element SpatialDataSet of type "http://inspire.ec.europa.eu/schemas/base/3.3":SpatialDataSetType.
    //jld base__SpatialDataSetType*            SpatialDataSet                 1;	///< Required element.
/// @brief -- Name -- zoning element -- Definition -- A spatial object which is homogeneous regarding the permitted uses of land based on zoning which separate one set of land uses from another. -- Description -- Zoning elements refer to the regulation of the kinds of activities which will be acceptable on particular lots (such as open space, residential, agricultural, commercial or industrial). The intensity of use at which those activities can be performed (from low-density housing such as single family homes to high-density such as high-rise apartment buildings), the height of buildings, the amount of space that structures may occupy, the proportions of the types of space on a lot, such as how much landscaped space, impervious surface, traffic lanes, and parking may be provided.
/// Element ZoningElement of type "http://inspire.ec.europa.eu/schemas/plu/3.0":ZoningElementType.
    plu__ZoningElementType*              ZoningElement                  1;	///< Required element.
/// @brief -- Name -- zoning element -- Definition -- A spatial object which is homogeneous regarding the permitted uses of land based on zoning which separate one set of land uses from another. -- Description -- Zoning elements refer to the regulation of the kinds of activities which will be acceptable on particular lots (such as open space, residential, agricultural, commercial or industrial). The intensity of use at which those activities can be performed (from low-density housing such as single family homes to high-density such as high-rise apartment buildings), the height of buildings, the amount of space that structures may occupy, the proportions of the types of space on a lot, such as how much landscaped space, impervious surface, traffic lanes, and parking may be provided.
/// Element ZoningElement of type "http://inspire.ec.europa.eu/schemas/plu/3.0":ZoningElementType.
    //jld plu__ZoningElementType*              ZoningElement                  1;	///< Required element.
/// @brief -- Name -- official documentation -- Definition -- The official documentation that composes the spatial plan; it may be composed of, the applicable legislation, the regulations, cartographic elements, descriptive elements that may be associated with the complete spatial plan, a zoning element or a supplementary regulation . In some Member States the actual textual regulation will be part of the data set (and can be put in the regulationText attribute), in other Member States the text will not be part of the data set and will be referenced via a reference to a document or a legal act. At least one of the three voidable values shall be provided. -- Description -- NOTE: The LegislationCitation is the value type of the attribute regulation reference. An example of a regulation reference would be: http://www2.vlaanderen.be /ruimtelijk/grup/00350/00362_00001/data/ 212_00362_00001_d_0BVR.pdf.
/// Element OfficialDocumentation of type "http://inspire.ec.europa.eu/schemas/plu/3.0":OfficialDocumentationType.
    plu__OfficialDocumentationType*      OfficialDocumentation          1;	///< Required element.
/// @brief -- Name -- official documentation -- Definition -- The official documentation that composes the spatial plan; it may be composed of, the applicable legislation, the regulations, cartographic elements, descriptive elements that may be associated with the complete spatial plan, a zoning element or a supplementary regulation . In some Member States the actual textual regulation will be part of the data set (and can be put in the regulationText attribute), in other Member States the text will not be part of the data set and will be referenced via a reference to a document or a legal act. At least one of the three voidable values shall be provided. -- Description -- NOTE: The LegislationCitation is the value type of the attribute regulation reference. An example of a regulation reference would be: http://www2.vlaanderen.be /ruimtelijk/grup/00350/00362_00001/data/ 212_00362_00001_d_0BVR.pdf.
/// Element OfficialDocumentation of type "http://inspire.ec.europa.eu/schemas/plu/3.0":OfficialDocumentationType.
    //jld plu__OfficialDocumentationType*      OfficialDocumentation          1;	///< Required element.
/// @brief -- Name -- supplementary regulation -- Definition -- A spatial object (point, line or polygon) of a spatial plan that provides supplementary information and/or limitation of the use of land/water necessary for spatial planning reasons or to formalise external rules defined in legal text. -- Description -- NOTE the supplementary regulations affects all land use that overlap with the geometry EXAMPLE an air field generates restriction in its surroundings regarding aircraft landing, radar and telecommunication devices. It is the buffer around these artefacts that generates the supplementary regulation on the Land Use.
/// Element SupplementaryRegulation of type "http://inspire.ec.europa.eu/schemas/plu/3.0":SupplementaryRegulationType.
    plu__SupplementaryRegulationType*    SupplementaryRegulation        1;	///< Required element.
/// @brief -- Name -- supplementary regulation -- Definition -- A spatial object (point, line or polygon) of a spatial plan that provides supplementary information and/or limitation of the use of land/water necessary for spatial planning reasons or to formalise external rules defined in legal text. -- Description -- NOTE the supplementary regulations affects all land use that overlap with the geometry EXAMPLE an air field generates restriction in its surroundings regarding aircraft landing, radar and telecommunication devices. It is the buffer around these artefacts that generates the supplementary regulation on the Land Use.
/// Element SupplementaryRegulation of type "http://inspire.ec.europa.eu/schemas/plu/3.0":SupplementaryRegulationType.
    //jld plu__SupplementaryRegulationType*    SupplementaryRegulation        1;	///< Required element.
/// @brief -- Name -- spatial plan -- Definition -- A set of documents that indicates a strategic direction for the development of a given geographic area, states the policies, priorities, programmes and land allocations that will implement the strategic direction and influences the distribution of people and activities in spaces of various scales. Spatial plans may be developed for urban planning, regional planning, environmental planning, landscape planning, national spatial plans, or spatial planning at the Union level.
/// Element SpatialPlan of type "http://inspire.ec.europa.eu/schemas/plu/3.0":SpatialPlanType.
    plu__SpatialPlanType*                SpatialPlan                    1;	///< Required element.
/// @brief -- Name -- spatial plan -- Definition -- A set of documents that indicates a strategic direction for the development of a given geographic area, states the policies, priorities, programmes and land allocations that will implement the strategic direction and influences the distribution of people and activities in spaces of various scales. Spatial plans may be developed for urban planning, regional planning, environmental planning, landscape planning, national spatial plans, or spatial planning at the Union level.
/// Element SpatialPlan of type "http://inspire.ec.europa.eu/schemas/plu/3.0":SpatialPlanType.
    //jld plu__SpatialPlanType*                SpatialPlan                    1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
/// @brief gml:AbstractTimeObject acts as the head of a substitution group for all temporal primitives and complexes.
/// Abstract element AbstractTimeObject of type "http://www.opengis.net/gml/3.2":AbstractTimeObjectType.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractTimeObject"> with elements <AbstractTimePrimitive> <AbstractTimeComplex>
/// @brief gml:AbstractTimePrimitive acts as the head of a substitution group for geometric and topological temporal primitives.
/// Abstract element AbstractTimePrimitive of type "http://www.opengis.net/gml/3.2":AbstractTimePrimitiveType.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractTimePrimitive"> with elements <AbstractTimeGeometricPrimitive> <AbstractTimeTopologyPrimitive>
/// @brief gml:TimeGeometricPrimitive acts as the head of a substitution group for geometric temporal primitives. A temporal geometry shall be associated with a temporal reference system through the frame attribute that provides a URI reference that identifies a description of the reference system. Following ISO 19108, the Gregorian calendar with UTC is the default reference system, but others may also be used. The GPS calendar is an alternative reference systems in common use. The two geometric primitives in the temporal dimension are the instant and the period. GML components are defined to support these as follows.
/// Abstract element AbstractTimeGeometricPrimitive of type "http://www.opengis.net/gml/3.2":AbstractTimeGeometricPrimitiveType.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractTimeGeometricPrimitive"> with elements <TimeInstant> <TimePeriod>
/// @brief gml:TimeInstant acts as a zero-dimensional geometric primitive that represents an identifiable position in time.
/// Element TimeInstant of type "http://www.opengis.net/gml/3.2":TimeInstantType.
    gml__TimeInstantType*                TimeInstant                    1;	///< Required element.
/// @brief gml:TimePeriod acts as a one-dimensional geometric primitive that represents an identifiable extent in time. The location in of a gml:TimePeriod is described by the temporal positions of the instants at which it begins and ends. The length of the period is equal to the temporal distance between the two bounding temporal positions. Both beginning and end may be described in terms of their direct position using gml:TimePositionType which is an XML Schema simple content type, or by reference to an indentifiable time instant using gml:TimeInstantPropertyType. Alternatively a limit of a gml:TimePeriod may use the conventional GML property model to make a reference to a time instant described elsewhere, or a limit may be indicated as a direct position.
/// Element TimePeriod of type "http://www.opengis.net/gml/3.2":TimePeriodType.
    gml__TimePeriodType*                 TimePeriod                     1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
/// @brief gml:TimeTopologyPrimitive acts as the head of a substitution group for topological temporal primitives. Temporal topology primitives shall imply the ordering information between features or feature properties. The temporal connection of features can be examined if they have temporal topology primitives as values of their properties. Usually, an instantaneous feature associates with a time node, and a static feature associates with a time edge. A feature with both modes associates with the temporal topology primitive: a supertype of time nodes and time edges. A topological primitive is always connected to one or more other topological primitives, and is, therefore, always a member of a topological complex. In a GML instance, this will often be indicated by the primitives being described by elements that are descendents of an element describing a complex. However, in order to support the case where a temporal topological primitive is described in another context, the optional complex property is provided, which carries a reference to the parent temporal topological complex.
/// Abstract element AbstractTimeTopologyPrimitive of type "http://www.opengis.net/gml/3.2":AbstractTimeTopologyPrimitiveType.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractTimeTopologyPrimitive"> with elements <TimeNode> <TimeEdge>
/// @brief A time node is a zero-dimensional topological primitive that represents an identifiable node in time (it is equivalent to a point in space). A node may act as the termination or initiation of any number of time edges. A time node may be realised as a geometry, its position, whose value is a time instant.
/// Element TimeNode of type "http://www.opengis.net/gml/3.2":TimeNodeType.
    gml__TimeNodeType*                   TimeNode                       1;	///< Required element.
/// @brief A time edge is a one-dimensional topological primitive. It is an open interval that starts and ends at a node. The edge may be realised as a geometry whose value is a time period.
/// Element TimeEdge of type "http://www.opengis.net/gml/3.2":TimeEdgeType.
    gml__TimeEdgeType*                   TimeEdge                       1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
//  END OF CHOICE OF SUBSTITUTIONS
/// @brief gml:AbstractTimeComplex is an aggregation of temporal primitives and acts as the head of a substitution group for temporal complexes.
/// Abstract element AbstractTimeComplex of type "http://www.opengis.net/gml/3.2":AbstractTimeComplexType.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractTimeComplex"> with elements <TimeTopologyComplex>
/// @brief A temporal topology complex shall be the connected acyclic directed graph composed of temporal topological primitives, i.e. time nodes and time edges. Because a time edge may not exist without two time nodes on its boundaries, static features have time edges from a temporal topology complex as the values of their temporal properties, regardless of explicit declarations. A temporal topology complex expresses a linear or a non-linear graph. A temporal linear graph, composed of a sequence of time edges, provides a lineage described only by "substitution" of feature instances or feature element values. A time node as the start or the end of the graph connects with at least one time edge. A time node other than the start and the end shall connect to at least two time edges: one of starting from the node, and another ending at the node. A temporal topological complex is a set of connected temporal topological primitives. The member primtives are indicated, either by reference or by value, using the primitive property.
/// Element TimeTopologyComplex of type "http://www.opengis.net/gml/3.2":TimeTopologyComplexType.
    gml__TimeTopologyComplexType*        TimeTopologyComplex            1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
//  END OF CHOICE OF SUBSTITUTIONS
/// Element Bag of type "http://www.opengis.net/gml/3.2":BagType.
    gml__BagType*                        Bag                            1;	///< Required element.
/// Element Array of type "http://www.opengis.net/gml/3.2":ArrayType.
    gml__ArrayType*                      Array                          1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
/// @brief gml:DataBlock describes the Range as a block of text encoded values similar to a Common Separated Value (CSV) representation. The range set parameterization is described by the property gml:rangeParameters.
/// Element DataBlock of type "http://www.opengis.net/gml/3.2":DataBlockType.
    gml__DataBlockType*                  DataBlock                      1;	///< Required element.
/// @brief for efficiency reasons, GML also provides a means of encoding the range set in an arbitrary external encoding, such as a binary file. This encoding may be "well-known" but this is not required. This mode uses the gml:File element. The values of the coverage (attribute values in the range set) are transmitted in a external file that is referenced from the XML structure described by gml:FileType. The external file is referenced by the gml:fileReference property that is an anyURI (the gml:fileName property has been deprecated). This means that the external file may be located remotely from the referencing GML instance. The gml:compression property points to a definition of a compression algorithm through an anyURI. This may be a retrievable, computable definition or simply a reference to an unambiguous name for the compression method. The gml:mimeType property points to a definition of the file mime type. The gml:fileStructure property is defined by a codelist. Note further that all values shall be enclosed in a single file. Multi-file structures for values are not supported in GML. The semantics of the range set is described as above using the gml:rangeParameters property. Note that if any compression algorithm is applied, the structure above applies only to the pre-compression or post-decompression structure of the file. Note that the fields within a record match the gml:valueComponents of the gml:CompositeValue in document order.
/// Element File of type "http://www.opengis.net/gml/3.2":FileType.
    gml__FileType*                       File                           1;	///< Required element.
/// @brief The gml:coverageFunction property describes the mapping function from the domain to the range of the coverage. The value of the CoverageFunction is one of gml:CoverageMappingRule and gml:GridFunction. If the gml:coverageFunction property is omitted for a gridded coverage (including rectified gridded coverages) the gml:startPoint is assumed to be the value of the gml:low property in the gml:Grid geometry, and the gml:sequenceRule is assumed to be linear and the gml:axisOrder property is assumed to be "+1 +2".
/// Element coverageFunction of type "http://www.opengis.net/gml/3.2":CoverageFunctionType.
    gml__CoverageFunctionType*           coverageFunction               1;	///< Required element.
/// @brief gml:CoverageMappingRule provides a formal or informal description of the coverage function. The mapping rule may be defined as an in-line string (gml:ruleDefinition) or via a remote reference through xlink:href (gml:ruleReference). If no rule name is specified, the default is 'Linear' with respect to members of the domain in document order.
/// Element CoverageMappingRule of type "http://www.opengis.net/gml/3.2":MappingRuleType.
    gml__MappingRuleType*                CoverageMappingRule            1;	///< Required element.
/// @brief gml:GridFunction provides an explicit mapping rule for grid geometries, i.e. the domain shall be a geometry of type grid. It describes the mapping of grid posts (discrete point grid coverage) or grid cells (discrete surface coverage) to the values in the range set. The gml:startPoint is the index position of a point in the grid that is mapped to the first point in the range set (this is also the index position of the first grid post). If the gml:startPoint property is omitted the gml:startPoint is assumed to be equal to the value of gml:low in the gml:Grid geometry. Subsequent points in the mapping are determined by the value of the gml:sequenceRule.
/// Element GridFunction of type "http://www.opengis.net/gml/3.2":GridFunctionType.
    gml__GridFunctionType*               GridFunction                   1;	///< Required element.
/// @brief gml:AbstractValue is an abstract element which acts as the head of a substitution group which contains gml:AbstractScalarValue, gml:AbstractScalarValueList, gml:CompositeValue and gml:ValueExtent, and (transitively) the elements in their substitution groups. These elements may be used in an application schema as variables, so that in an XML instance document any member of its substitution group may occur.
/// Abstract element AbstractValue of type xs:anyType.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractValue"> with elements <AbstractScalarValue> <AbstractScalarValueList> <CompositeValue> <CategoryExtent> <CountExtent> <QuantityExtent>
/// @brief gml:AbstractScalarValue is an abstract element which acts as the head of a substitution group which contains gml:Boolean, gml:Category, gml:Count and gml:Quantity, and (transitively) the elements in their substitution groups.
/// Abstract element AbstractScalarValue of type xs:anyType.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractScalarValue"> with elements <Boolean> <Category> <Count> <Quantity>
/// class _gml__ArrayAssociationType_Boolean operations:
/// - soap_new__gml__ArrayAssociationType_Boolean(soap*) allocate
/// - soap_new__gml__ArrayAssociationType_Boolean(soap*, int num) allocate array
/// - soap_new_req__gml__ArrayAssociationType_Boolean(soap*, ...) allocate, set required members
/// - soap_new_set__gml__ArrayAssociationType_Boolean(soap*, ...) allocate, set all public members
/// - int soap_read__gml__ArrayAssociationType_Boolean(soap*, _gml__ArrayAssociationType_Boolean*) deserialize from a stream
/// - int soap_write__gml__ArrayAssociationType_Boolean(soap, _gml__ArrayAssociationType_Boolean*) serialize to a stream
    class _gml__ArrayAssociationType_Boolean
    {
/// __item wraps 'xs:boolean' simpleContent.
    bool                                 __item                        ;
/// Attribute nilReason of type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
    }                                   *Boolean                       ;	///< Nillable pointer.
/// @brief A gml:Category has an optional XML attribute codeSpace, whose value is a URI which identifies a dictionary, codelist or authority for the term.
/// class _gml__ArrayAssociationType_Category operations:
/// - soap_new__gml__ArrayAssociationType_Category(soap*) allocate
/// - soap_new__gml__ArrayAssociationType_Category(soap*, int num) allocate array
/// - soap_new_req__gml__ArrayAssociationType_Category(soap*, ...) allocate, set required members
/// - soap_new_set__gml__ArrayAssociationType_Category(soap*, ...) allocate, set all public members
/// - int soap_read__gml__ArrayAssociationType_Category(soap*, _gml__ArrayAssociationType_Category*) deserialize from a stream
/// - int soap_write__gml__ArrayAssociationType_Category(soap, _gml__ArrayAssociationType_Category*) serialize to a stream
    class _gml__ArrayAssociationType_Category
    {
/// __item wraps 'xs:string' simpleContent.
    std::string                          __item                        ;
/// Attribute nilReason of type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute codeSpace of type xs:anyURI.
   @xsd__anyURI*                         codeSpace                      0;	///< Optional attribute.
    }                                   *Category                      ;	///< Nillable pointer.
/// class _gml__ArrayAssociationType_Count operations:
/// - soap_new__gml__ArrayAssociationType_Count(soap*) allocate
/// - soap_new__gml__ArrayAssociationType_Count(soap*, int num) allocate array
/// - soap_new_req__gml__ArrayAssociationType_Count(soap*, ...) allocate, set required members
/// - soap_new_set__gml__ArrayAssociationType_Count(soap*, ...) allocate, set all public members
/// - int soap_read__gml__ArrayAssociationType_Count(soap*, _gml__ArrayAssociationType_Count*) deserialize from a stream
/// - int soap_write__gml__ArrayAssociationType_Count(soap, _gml__ArrayAssociationType_Count*) serialize to a stream
    class _gml__ArrayAssociationType_Count
    {
/// __item wraps 'xs:integer' simpleContent.
    long                                 __item                        ;
/// Attribute nilReason of type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
    }                                   *Count                         ;	///< Nillable pointer.
/// @brief An XML attribute uom ("unit of measure") is required, whose value is a URI which identifies the definition of a ratio scale or units by which the numeric value shall be multiplied, or an interval or position scale on which the value occurs.
/// class _gml__ArrayAssociationType_Quantity operations:
/// - soap_new__gml__ArrayAssociationType_Quantity(soap*) allocate
/// - soap_new__gml__ArrayAssociationType_Quantity(soap*, int num) allocate array
/// - soap_new_req__gml__ArrayAssociationType_Quantity(soap*, ...) allocate, set required members
/// - soap_new_set__gml__ArrayAssociationType_Quantity(soap*, ...) allocate, set all public members
/// - int soap_read__gml__ArrayAssociationType_Quantity(soap*, _gml__ArrayAssociationType_Quantity*) deserialize from a stream
/// - int soap_write__gml__ArrayAssociationType_Quantity(soap, _gml__ArrayAssociationType_Quantity*) serialize to a stream
    class _gml__ArrayAssociationType_Quantity
    {
/// __item wraps 'xs:double' simpleContent.
    double                               __item                        ;
/// Attribute nilReason of type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute uom of type "http://www.opengis.net/gml/3.2":UomIdentifier.
   @gml__UomIdentifier                   uom                            1;	///< Required attribute.
    }                                   *Quantity                      ;	///< Nillable pointer.
//  END OF CHOICE OF SUBSTITUTIONS
/// @brief gml:AbstractScalarValueList is an abstract element which acts as the head of a substitution group which contains gml:BooleanList, gml:CategoryList, gml:CountList and gml:QuantityList, and (transitively) the elements in their substitution groups.
/// Abstract element AbstractScalarValueList of type xs:anyType.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractScalarValueList"> with elements <BooleanList> <CategoryList> <CountList> <QuantityList>
/// Element BooleanList of type "http://www.opengis.net/gml/3.2":booleanOrNilReasonList.
    gml__booleanOrNilReasonList*         BooleanList                    1;	///< Required element.
/// Element CategoryList of type "http://www.opengis.net/gml/3.2":CodeOrNilReasonListType.
    gml__CodeOrNilReasonListType*        CategoryList                   1;	///< Required element.
/// Element CountList of type "http://www.opengis.net/gml/3.2":integerOrNilReasonList.
    gml__integerOrNilReasonList*         CountList                      1;	///< Required element.
/// Element QuantityList of type "http://www.opengis.net/gml/3.2":MeasureOrNilReasonListType.
    gml__MeasureOrNilReasonListType*     QuantityList                   1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
/// @brief gml:CompositeValue is an aggregate value built from other values . It contains zero or an arbitrary number of gml:valueComponent elements, and zero or one gml:valueComponents property elements. It may be used for strongly coupled aggregates (vectors, tensors) or for arbitrary collections of values.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="CompositeValue"> with elements <ValueArray>
/// @brief gml:CompositeValue is an aggregate value built from other values . It contains zero or an arbitrary number of gml:valueComponent elements, and zero or one gml:valueComponents property elements. It may be used for strongly coupled aggregates (vectors, tensors) or for arbitrary collections of values.
/// Element CompositeValue of type "http://www.opengis.net/gml/3.2":CompositeValueType.
    gml__CompositeValueType*             CompositeValue                 1;	///< Required element.
/// @brief A Value Array is used for homogeneous arrays of primitive and aggregate values. The member values may be scalars, composites, arrays or lists. ValueArray has the same content model as CompositeValue, but the member values shall be homogeneous. The element declaration contains a Schematron constraint which expresses this restriction precisely. Since the members are homogeneous, the gml:referenceSystem (uom, codeSpace) may be specified on the gml:ValueArray itself and inherited by all the members if desired.
/// Element ValueArray of type "http://www.opengis.net/gml/3.2":ValueArrayType.
    gml__ValueArrayType*                 ValueArray                     1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
/// Element CategoryExtent of type "http://www.opengis.net/gml/3.2":CategoryExtentType.
    gml__CategoryExtentType*             CategoryExtent                 1;	///< Required element.
/// Element CountExtent of type "http://www.opengis.net/gml/3.2":CountExtentType.
    gml__CountExtentType*                CountExtent                    1;	///< Required element.
/// Element QuantityExtent of type "http://www.opengis.net/gml/3.2":QuantityExtentType.
    gml__QuantityExtentType*             QuantityExtent                 1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
/// @brief gml:AbstractGeneralParameterValue is an abstract parameter value or group of parameter values. This abstract complexType is expected to be extended and restricted for well-known operation methods with many instances, in Application Schemas that define operation-method-specialized element names and contents. Specific parameter value elements are directly contained in concrete subtypes, not in this abstract type. All concrete types derived from this type shall extend this type to include one "...Value" element with an appropriate type, which should be one of the element types allowed in the ParameterValueType. In addition, all derived concrete types shall extend this type to include a "operationParameter" property element that references one element substitutable for the "OperationParameter" object element.
/// Abstract element AbstractGeneralParameterValue of type "http://www.opengis.net/gml/3.2":AbstractGeneralParameterValueType.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractGeneralParameterValue"> with elements <ParameterValue> <ParameterValueGroup>
/// @brief gml:ParameterValue is a parameter value, an ordered sequence of values, or a reference to a file of parameter values. This concrete complex type may be used for operation methods without using an Application Schema that defines operation-method-specialized element names and contents, especially for methods with only one instance. This complex type may be used, extended, or restricted for well-known operation methods, especially for methods with many instances.
/// Element ParameterValue of type "http://www.opengis.net/gml/3.2":ParameterValueType.
    gml__ParameterValueType*             ParameterValue                 1;	///< Required element.
/// @brief gml:ParameterValueGroup is a group of related parameter values. The same group can be repeated more than once in a Conversion, Transformation, or higher level ParameterValueGroup, if those instances contain different values of one or more parameterValues which suitably distinquish among those groups. This concrete complex type can be used for operation methods without using an Application Schema that defines operation-method-specialized element names and contents. This complex type may be used, extended, or restricted for well-known operation methods, especially for methods with only one instance. The parameterValue elements are an unordered set of composition association roles to the parameter values and groups of values included in this group.
/// Element ParameterValueGroup of type "http://www.opengis.net/gml/3.2":ParameterValueGroupType.
    gml__ParameterValueGroupType*        ParameterValueGroup            1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
/// Abstract element AbstractMetaData of type "http://www.opengis.net/gml/3.2":AbstractMetaDataType.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractMetaData"> with elements <GenericMetaData>
/// Element GenericMetaData of type "http://www.opengis.net/gml/3.2":GenericMetaDataType.
    gml__GenericMetaDataType*            GenericMetaData                1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
/// @brief -- Definition -- External unique object identifier published by the responsible body, which may be used by external applications to reference the spatial object. -- Description -- NOTE1 External object identifiers are distinct from thematic object identifiers. NOTE 2 The voidable version identifier attribute is not part of the unique identifier of a spatial object and may be used to distinguish two versions of the same spatial object. NOTE 3 The unique identifier will not change during the life-time of a spatial object.
/// Element Identifier of type "http://inspire.ec.europa.eu/schemas/base/3.3":IdentifierType.
    base__IdentifierType*                Identifier                     1;	///< Required element.
/// @brief -- Definition -- External unique object identifier published by the responsible body, which may be used by external applications to reference the spatial object. -- Description -- NOTE1 External object identifiers are distinct from thematic object identifiers. NOTE 2 The voidable version identifier attribute is not part of the unique identifier of a spatial object and may be used to distinguish two versions of the same spatial object. NOTE 3 The unique identifier will not change during the life-time of a spatial object.
/// Element Identifier of type "http://inspire.ec.europa.eu/schemas/base/3.3":IdentifierType.
    //jld base__IdentifierType*                Identifier                     1;	///< Required element.
/// @brief -- Name -- Dimension Indication -- Definition -- Specifications about the dimensioning of the urban developments.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="DimensioningIndicationValue"> with elements <DimensioningIndicationMeasureValue> <DimensioningIndicationIntegerValue> <DimensioningIndicationCharacterValue> <DimensioningIndicationRealValue>
/// @brief -- Name -- Dimension Indication -- Definition -- Specifications about the dimensioning of the urban developments.
/// Element DimensioningIndicationValue of type "http://inspire.ec.europa.eu/schemas/plu/3.0":DimensioningIndicationValueType.
    plu__DimensioningIndicationValueType*  DimensioningIndicationValue    1;	///< Required element.
/// @brief -- Name -- dimension indication measure value -- Definition -- Dimensioning indication whose value is a measure.
/// Element DimensioningIndicationMeasureValue of type "http://inspire.ec.europa.eu/schemas/plu/3.0":DimensioningIndicationMeasureValueType.
    plu__DimensioningIndicationMeasureValueType*  DimensioningIndicationMeasureValue 1;	///< Required element.
/// @brief -- Name -- dimension indication integer value -- Definition -- Dimensioning indication whose value is of type integer.
/// Element DimensioningIndicationIntegerValue of type "http://inspire.ec.europa.eu/schemas/plu/3.0":DimensioningIndicationIntegerValueType.
    plu__DimensioningIndicationIntegerValueType*  DimensioningIndicationIntegerValue 1;	///< Required element.
/// @brief -- Name -- dimension indication character value -- Definition -- Dimensioning indication whose value is of type CharacterString.
/// Element DimensioningIndicationCharacterValue of type "http://inspire.ec.europa.eu/schemas/plu/3.0":DimensioningIndicationCharacterValueType.
    plu__DimensioningIndicationCharacterValueType*  DimensioningIndicationCharacterValue 1;	///< Required element.
/// @brief -- Name -- dimension indication real value -- Definition -- Dimensioning indication whose value is a floating point number.
/// Element DimensioningIndicationRealValue of type "http://inspire.ec.europa.eu/schemas/plu/3.0":DimensioningIndicationRealValueType.
    plu__DimensioningIndicationRealValueType*  DimensioningIndicationRealValue 1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
/// @brief -- Name -- Dimension Indication -- Definition -- Specifications about the dimensioning of the urban developments.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="DimensioningIndicationValue"> with elements <DimensioningIndicationMeasureValue> <DimensioningIndicationIntegerValue> <DimensioningIndicationCharacterValue> <DimensioningIndicationRealValue>
/// @brief -- Name -- Dimension Indication -- Definition -- Specifications about the dimensioning of the urban developments.
/// Element DimensioningIndicationValue of type "http://inspire.ec.europa.eu/schemas/plu/3.0":DimensioningIndicationValueType.
    //jld plu__DimensioningIndicationValueType*  DimensioningIndicationValue    1;	///< Required element.
/// @brief -- Name -- dimension indication measure value -- Definition -- Dimensioning indication whose value is a measure.
/// Element DimensioningIndicationMeasureValue of type "http://inspire.ec.europa.eu/schemas/plu/3.0":DimensioningIndicationMeasureValueType.
    //jld plu__DimensioningIndicationMeasureValueType*  DimensioningIndicationMeasureValue 1;	///< Required element.
/// @brief -- Name -- dimension indication integer value -- Definition -- Dimensioning indication whose value is of type integer.
/// Element DimensioningIndicationIntegerValue of type "http://inspire.ec.europa.eu/schemas/plu/3.0":DimensioningIndicationIntegerValueType.
    //jld plu__DimensioningIndicationIntegerValueType*  DimensioningIndicationIntegerValue 1;	///< Required element.
/// @brief -- Name -- dimension indication character value -- Definition -- Dimensioning indication whose value is of type CharacterString.
/// Element DimensioningIndicationCharacterValue of type "http://inspire.ec.europa.eu/schemas/plu/3.0":DimensioningIndicationCharacterValueType.
    //jld plu__DimensioningIndicationCharacterValueType*  DimensioningIndicationCharacterValue 1;	///< Required element.
/// @brief -- Name -- dimension indication real value -- Definition -- Dimensioning indication whose value is a floating point number.
/// Element DimensioningIndicationRealValue of type "http://inspire.ec.europa.eu/schemas/plu/3.0":DimensioningIndicationRealValueType.
    //jld plu__DimensioningIndicationRealValueType*  DimensioningIndicationRealValue 1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
/// @brief -- Definition -- Reference to administrative ordinance. Ordinance is a regulation/rule that is adopted by an authority that is legally mandated to take such ordinance.
/// Element OrdinanceValue of type "http://inspire.ec.europa.eu/schemas/plu/3.0":OrdinanceValueType.
    plu__OrdinanceValueType*             OrdinanceValue                 1;	///< Required element.
/// @brief -- Definition -- Reference to administrative ordinance. Ordinance is a regulation/rule that is adopted by an authority that is legally mandated to take such ordinance.
/// Element OrdinanceValue of type "http://inspire.ec.europa.eu/schemas/plu/3.0":OrdinanceValueType.
    //jld plu__OrdinanceValueType*             OrdinanceValue                 1;	///< Required element.
/// @brief -- Definition -- Information regarding the map that has been used as a background in the definition of a spatial plan, a zoning element or a supplementary regulation.
/// Element BackgroundMapValue of type "http://inspire.ec.europa.eu/schemas/plu/3.0":BackgroundMapValueType.
    plu__BackgroundMapValueType*         BackgroundMapValue             1;	///< Required element.
/// @brief -- Definition -- Information regarding the map that has been used as a background in the definition of a spatial plan, a zoning element or a supplementary regulation.
/// Element BackgroundMapValue of type "http://inspire.ec.europa.eu/schemas/plu/3.0":BackgroundMapValueType.
    //jld plu__BackgroundMapValueType*         BackgroundMapValue             1;	///< Required element.
    }                                    __union_ArrayAssociationType  ;
;
    }                                   *__union_ArrayAssociationType  ;
//  END OF CHOICE OF SUBSTITUTIONS
/// Attribute owns of type xs:boolean.
   @bool                                 owns                           0 = false;	///< Default value="false".
};

/// "http://www.opengis.net/gml/3.2":MetaDataPropertyType is a complexType.
/// class gml__MetaDataPropertyType operations:
/// - soap_new_gml__MetaDataPropertyType(soap*) allocate
/// - soap_new_gml__MetaDataPropertyType(soap*, int num) allocate array
/// - soap_new_req_gml__MetaDataPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__MetaDataPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__MetaDataPropertyType(soap*, gml__MetaDataPropertyType*) deserialize from a stream
/// - int soap_write_gml__MetaDataPropertyType(soap, gml__MetaDataPropertyType*) serialize to a stream
class gml__MetaDataPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gml__MetaDataPropertyType_sequence
    {
/// Reference "http://www.opengis.net/gml/3.2":AbstractMetaData to abstract element.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractMetaData"> with elements <GenericMetaData>
   $int                                  __unionAbstractMetaData        0;	///< Union _gml__union_MetaDataPropertyType selector: set to SOAP_UNION__gml__union_MetaDataPropertyType_<fieldname>
/// Union for substitutionGroup="AbstractMetaData"
    union _gml__union_MetaDataPropertyType
    {
/// Element GenericMetaData of type "http://www.opengis.net/gml/3.2":GenericMetaDataType.
    gml__GenericMetaDataType*            GenericMetaData                1;	///< Required element.
    }                                    __union_MetaDataPropertyType  ;
//  END OF CHOICE OF SUBSTITUTIONS
    }>                                   __MetaDataPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute about of type xs:anyURI.
   @xsd__anyURI*                         about                          0;	///< Optional attribute.
/// Attribute nilReason of type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         remoteSchema                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.opengis.net/gml/3.2":AbstractMetaDataType is an abstract complexType.
/// class gml__AbstractMetaDataType operations:
/// - soap_new_gml__AbstractMetaDataType(soap*) allocate
/// - soap_new_gml__AbstractMetaDataType(soap*, int num) allocate array
/// - soap_new_req_gml__AbstractMetaDataType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__AbstractMetaDataType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__AbstractMetaDataType(soap*, gml__AbstractMetaDataType*) deserialize from a stream
/// - int soap_write_gml__AbstractMetaDataType(soap, gml__AbstractMetaDataType*) serialize to a stream
class gml__AbstractMetaDataType : public xsd__anyType
{ public:
/// Attribute reference "http://www.opengis.net/gml/3.2":id.
/// @brief The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// TODO: this mixed complexType is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __mixed                       0;	///< Catch mixed content in XML string
};

/// "http://www.opengis.net/gml/3.2":LocationPropertyType is a complexType.
/// class gml__LocationPropertyType operations:
/// - soap_new_gml__LocationPropertyType(soap*) allocate
/// - soap_new_gml__LocationPropertyType(soap*, int num) allocate array
/// - soap_new_req_gml__LocationPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__LocationPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__LocationPropertyType(soap*, gml__LocationPropertyType*) deserialize from a stream
/// - int soap_write_gml__LocationPropertyType(soap, gml__LocationPropertyType*) serialize to a stream
class gml__LocationPropertyType : public xsd__anyType
{ public:
/// CHOICE <xs:choice>
   $int                                  __union_LocationPropertyType  ;	///< Union _gml__union_LocationPropertyType selector: set to SOAP_UNION__gml__union_LocationPropertyType_<fieldname>
    union _gml__union_LocationPropertyType
    {
/// @brief The AbstractGeometry element is the abstract head of the substitution group for all geometry elements of GML. This includes pre-defined and user-defined geometry elements. Any geometry element shall be a direct or indirect extension/restriction of AbstractGeometryType and shall be directly or indirectly in the substitution group of AbstractGeometry.
/// Reference "http://www.opengis.net/gml/3.2":AbstractGeometry to abstract element.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractGeometry"> with elements <GeometricComplex> <AbstractGeometricAggregate> <AbstractGeometricPrimitive> <AbstractImplicitGeometry>
/// Element GeometricComplex of type "http://www.opengis.net/gml/3.2":GeometricComplexType.
    gml__GeometricComplexType*           GeometricComplex               1;	///< Required element.
/// @brief gml:AbstractGeometricAggregate is the abstract head of the substitution group for all geometric aggregates.
/// Abstract element AbstractGeometricAggregate of type "http://www.opengis.net/gml/3.2":AbstractGeometricAggregateType.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractGeometricAggregate"> with elements <MultiGeometry> <MultiPoint> <MultiCurve> <MultiSurface> <MultiSolid>
/// @brief gml:MultiGeometry is a collection of one or more GML geometry objects of arbitrary type. The members of the geometric aggregate may be specified either using the "standard" property (gml:geometryMember) or the array property (gml:geometryMembers). It is also valid to use both the "standard" and the array properties in the same collection.
/// Element MultiGeometry of type "http://www.opengis.net/gml/3.2":MultiGeometryType.
    gml__MultiGeometryType*              MultiGeometry                  1;	///< Required element.
/// @brief A gml:MultiPoint consists of one or more gml:Points. The members of the geometric aggregate may be specified either using the "standard" property (gml:pointMember) or the array property (gml:pointMembers). It is also valid to use both the "standard" and the array properties in the same collection.
/// Element MultiPoint of type "http://www.opengis.net/gml/3.2":MultiPointType.
    gml__MultiPointType*                 MultiPoint                     1;	///< Required element.
/// @brief A gml:MultiCurve is defined by one or more gml:AbstractCurves. The members of the geometric aggregate may be specified either using the "standard" property (gml:curveMember) or the array property (gml:curveMembers). It is also valid to use both the "standard" and the array properties in the same collection.
/// Element MultiCurve of type "http://www.opengis.net/gml/3.2":MultiCurveType.
    gml__MultiCurveType*                 MultiCurve                     1;	///< Required element.
/// @brief A gml:MultiSurface is defined by one or more gml:AbstractSurfaces. The members of the geometric aggregate may be specified either using the "standard" property (gml:surfaceMember) or the array property (gml:surfaceMembers). It is also valid to use both the "standard" and the array properties in the same collection.
/// Element MultiSurface of type "http://www.opengis.net/gml/3.2":MultiSurfaceType.
    gml__MultiSurfaceType*               MultiSurface                   1;	///< Required element.
/// @brief A gml:MultiSolid is defined by one or more gml:AbstractSolids. The members of the geometric aggregate may be specified either using the "standard" property (gml:solidMember) or the array property (gml:solidMembers). It is also valid to use both the "standard" and the array properties in the same collection.
/// Element MultiSolid of type "http://www.opengis.net/gml/3.2":MultiSolidType.
    gml__MultiSolidType*                 MultiSolid                     1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
/// @brief The AbstractGeometricPrimitive element is the abstract head of the substitution group for all (pre- and user-defined) geometric primitives.
/// Abstract element AbstractGeometricPrimitive of type "http://www.opengis.net/gml/3.2":AbstractGeometricPrimitiveType.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractGeometricPrimitive"> with elements <AbstractSolid> <AbstractSurface> <Point> <AbstractCurve>
/// @brief The AbstractSolid element is the abstract head of the substituition group for all (continuous) solid elements.
/// Abstract element AbstractSolid of type "http://www.opengis.net/gml/3.2":AbstractSolidType.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractSolid"> with elements <CompositeSolid> <Solid>
/// @brief gml:CompositeSolid implements ISO 19107 GM_CompositeSolid (see ISO 19107:2003, 6.6.7) as specified in D.2.3.6. A gml:CompositeSolid is represented by a set of orientable surfaces. It is a geometry type with all the geometric properties of a (primitive) solid. Essentially, a composite solid is a collection of solids that join in pairs on common boundary surfaces and which, when considered as a whole, form a single solid. solidMember references or contains one solid in the composite solid. The solids are contiguous.
/// Element CompositeSolid of type "http://www.opengis.net/gml/3.2":CompositeSolidType.
    gml__CompositeSolidType*             CompositeSolid                 1;	///< Required element.
/// @brief A solid is the basis for 3-dimensional geometry. The extent of a solid is defined by the boundary surfaces as specified in ISO 19107:2003, 6.3.18. exterior specifies the outer boundary, interior the inner boundary of the solid.
/// Element Solid of type "http://www.opengis.net/gml/3.2":SolidType.
    gml__SolidType*                      Solid                          1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
/// @brief The AbstractSurface element is the abstract head of the substitution group for all (continuous) surface elements.
/// Abstract element AbstractSurface of type "http://www.opengis.net/gml/3.2":AbstractSurfaceType.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractSurface"> with elements <CompositeSurface> <Surface> <OrientableSurface> <Polygon>
/// @brief A gml:CompositeSurface is represented by a set of orientable surfaces. It is geometry type with all the geometric properties of a (primitive) surface. Essentially, a composite surface is a collection of surfaces that join in pairs on common boundary curves and which, when considered as a whole, form a single surface. surfaceMember references or contains inline one surface in the composite surface. The surfaces are contiguous.
/// Element CompositeSurface of type "http://www.opengis.net/gml/3.2":CompositeSurfaceType.
    gml__CompositeSurfaceType*           CompositeSurface               1;	///< Required element.
/// @brief A Surface is a 2-dimensional primitive and is composed of one or more surface patches as specified in ISO 19107:2003, 6.3.17.1. The surface patches are connected to one another. patches encapsulates the patches of the surface.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="Surface"> with elements <PolyhedralSurface> <TriangulatedSurface>
/// @brief A Surface is a 2-dimensional primitive and is composed of one or more surface patches as specified in ISO 19107:2003, 6.3.17.1. The surface patches are connected to one another. patches encapsulates the patches of the surface.
/// Element Surface of type "http://www.opengis.net/gml/3.2":SurfaceType.
    gml__SurfaceType*                    Surface                        1;	///< Required element.
/// @brief A polyhedral surface is a surface composed of polygon patches connected along their common boundary curves. This differs from the surface type only in the restriction on the types of surface patches acceptable. polygonPatches encapsulates the polygon patches of the polyhedral surface.
/// Element PolyhedralSurface of type "http://www.opengis.net/gml/3.2":SurfaceType.
    gml__SurfaceType*                    PolyhedralSurface              1;	///< Required element.
/// @brief A triangulated surface is a polyhedral surface that is composed only of triangles. There is no restriction on how the triangulation is derived. trianglePatches encapsulates the triangles of the triangulated surface.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="TriangulatedSurface"> with elements <Tin>
/// @brief A triangulated surface is a polyhedral surface that is composed only of triangles. There is no restriction on how the triangulation is derived. trianglePatches encapsulates the triangles of the triangulated surface.
/// Element TriangulatedSurface of type "http://www.opengis.net/gml/3.2":SurfaceType.
    gml__SurfaceType*                    TriangulatedSurface            1;	///< Required element.
/// @brief A tin is a triangulated surface that uses the Delauny algorithm or a similar algorithm complemented with consideration of stoplines (stopLines), breaklines (breakLines), and maximum length of triangle sides (maxLength). controlPoint shall contain a set of the positions (three or more) used as posts for this TIN (corners of the triangles in the TIN). See ISO 19107:2003, 6.4.39 for details.
/// Element Tin of type "http://www.opengis.net/gml/3.2":TinType.
    gml__TinType*                        Tin                            1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
//  END OF CHOICE OF SUBSTITUTIONS
/// @brief OrientableSurface consists of a surface and an orientation. If the orientation is "+", then the OrientableSurface is identical to the baseSurface. If the orientation is "-", then the OrientableSurface is a reference to a gml:AbstractSurface with an up-normal that reverses the direction for this OrientableSurface, the sense of "the top of the surface".
/// Element OrientableSurface of type "http://www.opengis.net/gml/3.2":OrientableSurfaceType.
    gml__OrientableSurfaceType*          OrientableSurface              1;	///< Required element.
/// @brief A Polygon is a special surface that is defined by a single surface patch (see D.3.6). The boundary of this patch is coplanar and the polygon uses planar interpolation in its interior. The elements exterior and interior describe the surface boundary of the polygon.
/// Element Polygon of type "http://www.opengis.net/gml/3.2":PolygonType.
    gml__PolygonType*                    Polygon                        1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
/// @brief A Point is defined by a single coordinate tuple. The direct position of a point is specified by the pos element which is of type DirectPositionType.
/// Element Point of type "http://www.opengis.net/gml/3.2":PointType.
    gml__PointType*                      Point                          1;	///< Required element.
/// @brief The AbstractCurve element is the abstract head of the substitution group for all (continuous) curve elements.
/// Abstract element AbstractCurve of type "http://www.opengis.net/gml/3.2":AbstractCurveType.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractCurve"> with elements <CompositeCurve> <Curve> <OrientableCurve> <LineString>
/// @brief A gml:CompositeCurve is represented by a sequence of (orientable) curves such that each curve in the sequence terminates at the start point of the subsequent curve in the list. curveMember references or contains inline one curve in the composite curve. The curves are contiguous, the collection of curves is ordered. Therefore, if provided, the aggregationType attribute shall have the value "sequence".
/// Element CompositeCurve of type "http://www.opengis.net/gml/3.2":CompositeCurveType.
    gml__CompositeCurveType*             CompositeCurve                 1;	///< Required element.
/// @brief A curve is a 1-dimensional primitive. Curves are continuous, connected, and have a measurable length in terms of the coordinate system. A curve is composed of one or more curve segments. Each curve segment within a curve may be defined using a different interpolation method. The curve segments are connected to one another, with the end point of each segment except the last being the start point of the next segment in the segment list. The orientation of the curve is positive. The element segments encapsulates the segments of the curve.
/// Element Curve of type "http://www.opengis.net/gml/3.2":CurveType.
    gml__CurveType*                      Curve                          1;	///< Required element.
/// @brief OrientableCurve consists of a curve and an orientation. If the orientation is "+", then the OrientableCurve is identical to the baseCurve. If the orientation is "-", then the OrientableCurve is related to another AbstractCurve with a parameterization that reverses the sense of the curve traversal.
/// Element OrientableCurve of type "http://www.opengis.net/gml/3.2":OrientableCurveType.
    gml__OrientableCurveType*            OrientableCurve                1;	///< Required element.
/// @brief A LineString is a special curve that consists of a single segment with linear interpolation. It is defined by two or more coordinate tuples, with linear interpolation between them. The number of direct positions in the list shall be at least two.
/// Element LineString of type "http://www.opengis.net/gml/3.2":LineStringType.
    gml__LineStringType*                 LineString                     1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
//  END OF CHOICE OF SUBSTITUTIONS
/// Abstract element AbstractImplicitGeometry of type "http://www.opengis.net/gml/3.2":AbstractGeometryType.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractImplicitGeometry"> with elements <Grid>
/// @brief The gml:Grid implicitly defines an unrectified grid, which is a network composed of two or more sets of curves in which the members of each set intersect the members of the other sets in an algorithmic way. The region of interest within the grid is given in terms of its gml:limits, being the grid coordinates of diagonally opposed corners of a rectangular region. gml:axisLabels is provided with a list of labels of the axes of the grid (gml:axisName has been deprecated). gml:dimension specifies the dimension of the grid. The gml:limits element contains a single gml:GridEnvelope. The gml:low and gml:high property elements of the envelope are each integerLists, which are coordinate tuples, the coordinates being measured as offsets from the origin of the grid along each axis, of the diagonally opposing corners of a "rectangular" region of interest.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="Grid"> with elements <RectifiedGrid>
/// @brief The gml:Grid implicitly defines an unrectified grid, which is a network composed of two or more sets of curves in which the members of each set intersect the members of the other sets in an algorithmic way. The region of interest within the grid is given in terms of its gml:limits, being the grid coordinates of diagonally opposed corners of a rectangular region. gml:axisLabels is provided with a list of labels of the axes of the grid (gml:axisName has been deprecated). gml:dimension specifies the dimension of the grid. The gml:limits element contains a single gml:GridEnvelope. The gml:low and gml:high property elements of the envelope are each integerLists, which are coordinate tuples, the coordinates being measured as offsets from the origin of the grid along each axis, of the diagonally opposing corners of a "rectangular" region of interest.
/// Element Grid of type "http://www.opengis.net/gml/3.2":GridType.
    gml__GridType*                       Grid                           1;	///< Required element.
/// @brief A rectified grid is a grid for which there is an affine transformation between the grid coordinates and the coordinates of an external coordinate reference system. It is defined by specifying the position (in some geometric space) of the grid "origin" and of the vectors that specify the post locations. Note that the grid limits (post indexes) and axis name properties are inherited from gml:GridType and that gml:RectifiedGrid adds a gml:origin property (contains or references a gml:Point) and a set of gml:offsetVector properties.
/// Element RectifiedGrid of type "http://www.opengis.net/gml/3.2":RectifiedGridType.
    gml__RectifiedGridType*              RectifiedGrid                  1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
//  END OF CHOICE OF SUBSTITUTIONS
//  END OF CHOICE OF SUBSTITUTIONS
/// Element reference "http://www.opengis.net/gml/3.2":LocationKeyWord.
    gml__CodeType*                       LocationKeyWord                1;	///< Required element.
/// Element reference "http://www.opengis.net/gml/3.2":LocationString.
    gml__StringOrRefType*                LocationString                 1;	///< Required element.
/// Element reference "http://www.opengis.net/gml/3.2":Null.
    gml__NilReasonType*                  Null                           1;	///< Required element.
    }                                    union_LocationPropertyType    ;
//  END OF CHOICE
/// Attribute nilReason of type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         remoteSchema                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.opengis.net/gml/3.2":FeatureArrayPropertyType is a complexType.
/// class gml__FeatureArrayPropertyType operations:
/// - soap_new_gml__FeatureArrayPropertyType(soap*) allocate
/// - soap_new_gml__FeatureArrayPropertyType(soap*, int num) allocate array
/// - soap_new_req_gml__FeatureArrayPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__FeatureArrayPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__FeatureArrayPropertyType(soap*, gml__FeatureArrayPropertyType*) deserialize from a stream
/// - int soap_write_gml__FeatureArrayPropertyType(soap, gml__FeatureArrayPropertyType*) serialize to a stream
class gml__FeatureArrayPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0" maxOccurs="unbounded">
    std::vector<                                                       
    class __gml__FeatureArrayPropertyType_sequence
    {
/// @brief This abstract element serves as the head of a substitution group which may contain any elements whose content model is derived from gml:AbstractFeatureType. This may be used as a variable in the construction of content models. gml:AbstractFeature may be thought of as "anything that is a GML feature" and may be used to define variables or templates in which the value of a GML property is "any feature". This occurs in particular in a GML feature collection where the feature member properties contain one or multiple copies of gml:AbstractFeature respectively.
/// Reference "http://www.opengis.net/gml/3.2":AbstractFeature to abstract element.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractFeature"> with elements <DynamicFeature> <AbstractCoverage> <AbstractContinuousCoverage> <Observation> <AbstractFeatureCollection> <FeatureCollection> <SpatialDataSet> <SpatialDataSet> <ZoningElement> <ZoningElement> <OfficialDocumentation> <OfficialDocumentation> <SupplementaryRegulation> <SupplementaryRegulation> <SpatialPlan> <SpatialPlan>
   $int                                  __unionAbstractFeature         0;	///< Union _gml__union_FeatureArrayPropertyType selector: set to SOAP_UNION__gml__union_FeatureArrayPropertyType_<fieldname>
/// Union for substitutionGroup="AbstractFeature"
    union _gml__union_FeatureArrayPropertyType
    {
/// @brief States are captured by time-stamped instances of a feature. The content model extends the standard gml:AbstractFeatureType with the gml:dynamicProperties model group. Each time-stamped instance represents a 'snapshot' of a feature. The dynamic feature classes will normally be extended to suit particular applications. A dynamic feature bears either a time stamp or a history.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="DynamicFeature"> with elements <DynamicFeatureCollection>
/// @brief States are captured by time-stamped instances of a feature. The content model extends the standard gml:AbstractFeatureType with the gml:dynamicProperties model group. Each time-stamped instance represents a 'snapshot' of a feature. The dynamic feature classes will normally be extended to suit particular applications. A dynamic feature bears either a time stamp or a history.
/// Element DynamicFeature of type "http://www.opengis.net/gml/3.2":DynamicFeatureType.
    gml__DynamicFeatureType*             DynamicFeature                 1;	///< Required element.
/// @brief A gml:DynamicFeatureCollection is a feature collection that has a gml:validTime property (i.e. is a snapshot of the feature collection) or which has a gml:history property that contains one or more gml:AbstractTimeSlices each of which contain values of the time varying properties of the feature collection. Note that the gml:DynamicFeatureCollection may be one of the following: 1. A feature collection which consists of static feature members (members do not change in time) but which has properties of the collection object as a whole that do change in time . 2. A feature collection which consists of dynamic feature members (the members are gml:DynamicFeatures) but which also has properties of the collection as a whole that vary in time.
/// Element DynamicFeatureCollection of type "http://www.opengis.net/gml/3.2":DynamicFeatureCollectionType.
    gml__DynamicFeatureCollectionType*   DynamicFeatureCollection       1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
/// @brief This element serves as the head of a substitution group which may contain any coverage whose type is derived from gml:AbstractCoverageType. It may act as a variable in the definition of content models where it is required to permit any coverage to be valid.
/// Abstract element AbstractCoverage of type "http://www.opengis.net/gml/3.2":AbstractCoverageType.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractCoverage"> with elements <AbstractDiscreteCoverage>
/// @brief A discrete coverage consists of a domain set, range set and optionally a coverage function. The domain set consists of either spatial or temporal geometry objects, finite in number. The range set is comprised of a finite number of attribute values each of which is associated to every direct position within any single spatiotemporal object in the domain. In other words, the range values are constant on each spatiotemporal object in the domain. This coverage function maps each element from the coverage domain to an element in its range. The coverageFunction element describes the mapping function. This element serves as the head of a substitution group which may contain any discrete coverage whose type is derived from gml:DiscreteCoverageType.
/// Abstract element AbstractDiscreteCoverage of type "http://www.opengis.net/gml/3.2":DiscreteCoverageType.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractDiscreteCoverage"> with elements <MultiPointCoverage> <MultiCurveCoverage> <MultiSurfaceCoverage> <MultiSolidCoverage> <GridCoverage> <RectifiedGridCoverage>
/// @brief In a gml:MultiPointCoverage the domain set is a gml:MultiPoint, that is a collection of arbitrarily distributed geometric points. The content model is identical with gml:DiscreteCoverageType, but that gml:domainSet shall have values gml:MultiPoint. In a gml:MultiPointCoverage the mapping from the domain to the range is straightforward. - For gml:DataBlock encodings the points of the gml:MultiPoint are mapped in document order to the tuples of the data block. - For gml:CompositeValue encodings the points of the gml:MultiPoint are mapped to the members of the composite value in document order. - For gml:File encodings the points of the gml:MultiPoint are mapped to the records of the file in sequential order.
/// Element MultiPointCoverage of type "http://www.opengis.net/gml/3.2":DiscreteCoverageType.
    gml__DiscreteCoverageType*           MultiPointCoverage             1;	///< Required element.
/// @brief In a gml:MultiCurveCoverage the domain is partioned into a collection of curves comprising a gml:MultiCurve. The coverage function then maps each curve in the collection to a value in the range set. The content model is identical with gml:DiscreteCoverageType, but that gml:domainSet shall have values gml:MultiCurve. In a gml:MultiCurveCoverage the mapping from the domain to the range is straightforward. - For gml:DataBlock encodings the curves of the gml:MultiCurve are mapped in document order to the tuples of the data block. - For gml:CompositeValue encodings the curves of the gml:MultiCurve are mapped to the members of the composite value in document order. - For gml:File encodings the curves of the gml:MultiCurve are mapped to the records of the file in sequential order.
/// Element MultiCurveCoverage of type "http://www.opengis.net/gml/3.2":DiscreteCoverageType.
    gml__DiscreteCoverageType*           MultiCurveCoverage             1;	///< Required element.
/// @brief In a gml:MultiSurfaceCoverage the domain is partioned into a collection of surfaces comprising a gml:MultiSurface. The coverage function than maps each surface in the collection to a value in the range set. The content model is identical with gml:DiscreteCoverageType, but that gml:domainSet shall have values gml:MultiSurface. In a gml:MultiSurfaceCoverage the mapping from the domain to the range is straightforward. - For gml:DataBlock encodings the surfaces of the gml:MultiSurface are mapped in document order to the tuples of the data block. - For gml:CompositeValue encodings the surfaces of the gml:MultiSurface are mapped to the members of the composite value in document order. - For gml:File encodings the surfaces of the gml:MultiSurface are mapped to the records of the file in sequential order.
/// Element MultiSurfaceCoverage of type "http://www.opengis.net/gml/3.2":DiscreteCoverageType.
    gml__DiscreteCoverageType*           MultiSurfaceCoverage           1;	///< Required element.
/// @brief In a gml:MultiSolidCoverage the domain is partioned into a collection of solids comprising a gml:MultiSolid. The coverage function than maps each solid in the collection to a value in the range set. The content model is identical with gml:DiscreteCoverageType, but that gml:domainSet shall have values gml:MultiSolid. In a gml:MultiSolidCoverage the mapping from the domain to the range is straightforward. - For gml:DataBlock encodings the solids of the gml:MultiSolid are mapped in document order to the tuples of the data block. - For gml:CompositeValue encodings the solids of the gml:MultiSolid are mapped to the members of the composite value in document order. - For gml:File encodings the solids of the gml:MultiSolid are mapped to the records of the file in sequential order.
/// Element MultiSolidCoverage of type "http://www.opengis.net/gml/3.2":DiscreteCoverageType.
    gml__DiscreteCoverageType*           MultiSolidCoverage             1;	///< Required element.
/// @brief A gml:GriddedCoverage is a discrete point coverage in which the domain set is a geometric grid of points. Note that this is the same as the gml:MultiPointCoverage except that we have a gml:Grid to describe the domain. The simple gridded coverage is not geometrically referenced and hence no geometric positions are assignable to the points in the grid. Such geometric positioning is introduced in the gml:RectifiedGridCoverage.
/// Element GridCoverage of type "http://www.opengis.net/gml/3.2":DiscreteCoverageType.
    gml__DiscreteCoverageType*           GridCoverage                   1;	///< Required element.
/// @brief The gml:RectifiedGridCoverage is a discrete point coverage based on a rectified grid. It is similar to the grid coverage except that the points of the grid are geometrically referenced. The rectified grid coverage has a domain that is a gml:RectifiedGrid geometry.
/// Element RectifiedGridCoverage of type "http://www.opengis.net/gml/3.2":DiscreteCoverageType.
    gml__DiscreteCoverageType*           RectifiedGridCoverage          1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
//  END OF CHOICE OF SUBSTITUTIONS
/// @brief A continuous coverage as defined in ISO 19123 is a coverage that can return different values for the same feature attribute at different direct positions within a single spatiotemporal object in its spatiotemporal domain. The base type for continuous coverages is AbstractContinuousCoverageType. The coverageFunction element describes the mapping function. The abstract element gml:AbstractContinuousCoverage serves as the head of a substitution group which may contain any continuous coverage whose type is derived from gml:AbstractContinuousCoverageType.
/// Abstract element AbstractContinuousCoverage of type "http://www.opengis.net/gml/3.2":AbstractContinuousCoverageType.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractContinuousCoverage"> with elements
//  END OF CHOICE OF SUBSTITUTIONS
;	///< Required element.
/// @brief The content model is a straightforward extension of gml:AbstractFeatureType; it automatically has the gml:identifier, gml:description, gml:descriptionReference, gml:name, and gml:boundedBy properties. The gml:validTime element describes the time of the observation. Note that this may be a time instant or a time period. The gml:using property contains or references a description of a sensor, instrument or procedure used for the observation. The gml:target property contains or references the specimen, region or station which is the object of the observation. This property is particularly useful for remote observations, such as photographs, where a generic location property might apply to the location of the camera or the location of the field of view, and thus may be ambiguous. The gml:subject element is provided as a convenient synonym for gml:target. This is the term commonly used in phtotography. The gml:resultOf property indicates the result of the observation. The value may be inline, or a reference to a value elsewhere.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="Observation"> with elements <DirectedObservation>
/// @brief The content model is a straightforward extension of gml:AbstractFeatureType; it automatically has the gml:identifier, gml:description, gml:descriptionReference, gml:name, and gml:boundedBy properties. The gml:validTime element describes the time of the observation. Note that this may be a time instant or a time period. The gml:using property contains or references a description of a sensor, instrument or procedure used for the observation. The gml:target property contains or references the specimen, region or station which is the object of the observation. This property is particularly useful for remote observations, such as photographs, where a generic location property might apply to the location of the camera or the location of the field of view, and thus may be ambiguous. The gml:subject element is provided as a convenient synonym for gml:target. This is the term commonly used in phtotography. The gml:resultOf property indicates the result of the observation. The value may be inline, or a reference to a value elsewhere.
/// Element Observation of type "http://www.opengis.net/gml/3.2":ObservationType.
    gml__ObservationType*                Observation                    1;	///< Required element.
/// @brief A gml:DirectedObservation is the same as an observation except that it adds an additional gml:direction property. This is the direction in which the observation was acquired. Clearly this applies only to certain types of observations such as visual observations by people, or observations obtained from terrestrial cameras.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="DirectedObservation"> with elements <DirectedObservationAtDistance>
/// @brief A gml:DirectedObservation is the same as an observation except that it adds an additional gml:direction property. This is the direction in which the observation was acquired. Clearly this applies only to certain types of observations such as visual observations by people, or observations obtained from terrestrial cameras.
/// Element DirectedObservation of type "http://www.opengis.net/gml/3.2":DirectedObservationType.
    gml__DirectedObservationType*        DirectedObservation            1;	///< Required element.
/// @brief gml:DirectedObservationAtDistance adds an additional distance property. This is the distance from the observer to the subject of the observation. Clearly this applies only to certain types of observations such as visual observations by people, or observations obtained from terrestrial cameras.
/// Element DirectedObservationAtDistance of type "http://www.opengis.net/gml/3.2":DirectedObservationAtDistanceType.
    gml__DirectedObservationAtDistanceType*  DirectedObservationAtDistance  1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
//  END OF CHOICE OF SUBSTITUTIONS
/// Abstract element AbstractFeatureCollection of type "http://www.opengis.net/gml/3.2":AbstractFeatureCollectionType.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractFeatureCollection"> with elements
//  END OF CHOICE OF SUBSTITUTIONS
;	///< Required element.
/// Element FeatureCollection of type "http://www.opengis.net/gml/3.2":FeatureCollectionType.
    gml__FeatureCollectionType*          FeatureCollection              1;	///< Required element.
/// @brief -- Definition -- Identifiable collection of spatial data. -- Description -- NOTE The type SpatialDataSet is offered as a pre-defined type for spatial data sets. The scope of this type is packaging pre-defined data sets for the non-direct access download service. It may be reused in thematic application schemas, but if it does not fit an application-schema-specific data set object should be modelled. This type may have the same name and definition like this type, but may have a different set of properties. This type specifies three properties: an external object identifier, a container for metadata (may be void), and an association to zero or more spatial objects.
/// Element SpatialDataSet of type "http://inspire.ec.europa.eu/schemas/base/3.3":SpatialDataSetType.
    base__SpatialDataSetType*            SpatialDataSet                 1;	///< Required element.
/// @brief -- Definition -- Identifiable collection of spatial data. -- Description -- NOTE The type SpatialDataSet is offered as a pre-defined type for spatial data sets. The scope of this type is packaging pre-defined data sets for the non-direct access download service. It may be reused in thematic application schemas, but if it does not fit an application-schema-specific data set object should be modelled. This type may have the same name and definition like this type, but may have a different set of properties. This type specifies three properties: an external object identifier, a container for metadata (may be void), and an association to zero or more spatial objects.
/// Element SpatialDataSet of type "http://inspire.ec.europa.eu/schemas/base/3.3":SpatialDataSetType.
    //jld base__SpatialDataSetType*            SpatialDataSet                 1;	///< Required element.
/// @brief -- Name -- zoning element -- Definition -- A spatial object which is homogeneous regarding the permitted uses of land based on zoning which separate one set of land uses from another. -- Description -- Zoning elements refer to the regulation of the kinds of activities which will be acceptable on particular lots (such as open space, residential, agricultural, commercial or industrial). The intensity of use at which those activities can be performed (from low-density housing such as single family homes to high-density such as high-rise apartment buildings), the height of buildings, the amount of space that structures may occupy, the proportions of the types of space on a lot, such as how much landscaped space, impervious surface, traffic lanes, and parking may be provided.
/// Element ZoningElement of type "http://inspire.ec.europa.eu/schemas/plu/3.0":ZoningElementType.
    plu__ZoningElementType*              ZoningElement                  1;	///< Required element.
/// @brief -- Name -- zoning element -- Definition -- A spatial object which is homogeneous regarding the permitted uses of land based on zoning which separate one set of land uses from another. -- Description -- Zoning elements refer to the regulation of the kinds of activities which will be acceptable on particular lots (such as open space, residential, agricultural, commercial or industrial). The intensity of use at which those activities can be performed (from low-density housing such as single family homes to high-density such as high-rise apartment buildings), the height of buildings, the amount of space that structures may occupy, the proportions of the types of space on a lot, such as how much landscaped space, impervious surface, traffic lanes, and parking may be provided.
/// Element ZoningElement of type "http://inspire.ec.europa.eu/schemas/plu/3.0":ZoningElementType.
    //jld plu__ZoningElementType*              ZoningElement                  1;	///< Required element.
/// @brief -- Name -- official documentation -- Definition -- The official documentation that composes the spatial plan; it may be composed of, the applicable legislation, the regulations, cartographic elements, descriptive elements that may be associated with the complete spatial plan, a zoning element or a supplementary regulation . In some Member States the actual textual regulation will be part of the data set (and can be put in the regulationText attribute), in other Member States the text will not be part of the data set and will be referenced via a reference to a document or a legal act. At least one of the three voidable values shall be provided. -- Description -- NOTE: The LegislationCitation is the value type of the attribute regulation reference. An example of a regulation reference would be: http://www2.vlaanderen.be /ruimtelijk/grup/00350/00362_00001/data/ 212_00362_00001_d_0BVR.pdf.
/// Element OfficialDocumentation of type "http://inspire.ec.europa.eu/schemas/plu/3.0":OfficialDocumentationType.
    plu__OfficialDocumentationType*      OfficialDocumentation          1;	///< Required element.
/// @brief -- Name -- official documentation -- Definition -- The official documentation that composes the spatial plan; it may be composed of, the applicable legislation, the regulations, cartographic elements, descriptive elements that may be associated with the complete spatial plan, a zoning element or a supplementary regulation . In some Member States the actual textual regulation will be part of the data set (and can be put in the regulationText attribute), in other Member States the text will not be part of the data set and will be referenced via a reference to a document or a legal act. At least one of the three voidable values shall be provided. -- Description -- NOTE: The LegislationCitation is the value type of the attribute regulation reference. An example of a regulation reference would be: http://www2.vlaanderen.be /ruimtelijk/grup/00350/00362_00001/data/ 212_00362_00001_d_0BVR.pdf.
/// Element OfficialDocumentation of type "http://inspire.ec.europa.eu/schemas/plu/3.0":OfficialDocumentationType.
    //jld plu__OfficialDocumentationType*      OfficialDocumentation          1;	///< Required element.
/// @brief -- Name -- supplementary regulation -- Definition -- A spatial object (point, line or polygon) of a spatial plan that provides supplementary information and/or limitation of the use of land/water necessary for spatial planning reasons or to formalise external rules defined in legal text. -- Description -- NOTE the supplementary regulations affects all land use that overlap with the geometry EXAMPLE an air field generates restriction in its surroundings regarding aircraft landing, radar and telecommunication devices. It is the buffer around these artefacts that generates the supplementary regulation on the Land Use.
/// Element SupplementaryRegulation of type "http://inspire.ec.europa.eu/schemas/plu/3.0":SupplementaryRegulationType.
    plu__SupplementaryRegulationType*    SupplementaryRegulation        1;	///< Required element.
/// @brief -- Name -- supplementary regulation -- Definition -- A spatial object (point, line or polygon) of a spatial plan that provides supplementary information and/or limitation of the use of land/water necessary for spatial planning reasons or to formalise external rules defined in legal text. -- Description -- NOTE the supplementary regulations affects all land use that overlap with the geometry EXAMPLE an air field generates restriction in its surroundings regarding aircraft landing, radar and telecommunication devices. It is the buffer around these artefacts that generates the supplementary regulation on the Land Use.
/// Element SupplementaryRegulation of type "http://inspire.ec.europa.eu/schemas/plu/3.0":SupplementaryRegulationType.
    //jld plu__SupplementaryRegulationType*    SupplementaryRegulation        1;	///< Required element.
/// @brief -- Name -- spatial plan -- Definition -- A set of documents that indicates a strategic direction for the development of a given geographic area, states the policies, priorities, programmes and land allocations that will implement the strategic direction and influences the distribution of people and activities in spaces of various scales. Spatial plans may be developed for urban planning, regional planning, environmental planning, landscape planning, national spatial plans, or spatial planning at the Union level.
/// Element SpatialPlan of type "http://inspire.ec.europa.eu/schemas/plu/3.0":SpatialPlanType.
    plu__SpatialPlanType*                SpatialPlan                    1;	///< Required element.
/// @brief -- Name -- spatial plan -- Definition -- A set of documents that indicates a strategic direction for the development of a given geographic area, states the policies, priorities, programmes and land allocations that will implement the strategic direction and influences the distribution of people and activities in spaces of various scales. Spatial plans may be developed for urban planning, regional planning, environmental planning, landscape planning, national spatial plans, or spatial planning at the Union level.
/// Element SpatialPlan of type "http://inspire.ec.europa.eu/schemas/plu/3.0":SpatialPlanType.
    //jld plu__SpatialPlanType*                SpatialPlan                    1;	///< Required element.
    }                                    __union_FeatureArrayPropertyType;
//  END OF CHOICE OF SUBSTITUTIONS
    }>                                   __FeatureArrayPropertyType_sequence 0;
//  END OF SEQUENCE
};

/// "http://www.opengis.net/gml/3.2":IndirectEntryType is a complexType.
/// class gml__IndirectEntryType operations:
/// - soap_new_gml__IndirectEntryType(soap*) allocate
/// - soap_new_gml__IndirectEntryType(soap*, int num) allocate array
/// - soap_new_req_gml__IndirectEntryType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__IndirectEntryType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__IndirectEntryType(soap*, gml__IndirectEntryType*) deserialize from a stream
/// - int soap_write_gml__IndirectEntryType(soap, gml__IndirectEntryType*) serialize to a stream
class gml__IndirectEntryType : public xsd__anyType
{ public:
/// Element reference "http://www.opengis.net/gml/3.2":DefinitionProxy.
    gml__DefinitionProxyType*            DefinitionProxy                1;	///< Required element.
};


/// Top-level root element "http://www.opengis.net/gml/3.2":domainOfValidity
/// @brief The gml:domainOfValidity property implements an association role to an EX_Extent object as encoded in ISO/TS 19139, either referencing or containing the definition of that extent.

/// "http://www.opengis.net/gml/3.2":domainOfValidity is a complexType.
/// class _gml__domainOfValidity operations:
/// - soap_new__gml__domainOfValidity(soap*) allocate
/// - soap_new__gml__domainOfValidity(soap*, int num) allocate array
/// - soap_new_req__gml__domainOfValidity(soap*, ...) allocate, set required members
/// - soap_new_set__gml__domainOfValidity(soap*, ...) allocate, set all public members
/// - int soap_read__gml__domainOfValidity(soap*, _gml__domainOfValidity*) deserialize from a stream
/// - int soap_write__gml__domainOfValidity(soap, _gml__domainOfValidity*) serialize to a stream
class _gml__domainOfValidity
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gml__domainOfValidity_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd":EX_Extent.
    gmd__EX_x005fExtent_x005fType*       gmd__EX_x005fExtent            1;	///< Required element.
    }>                                   __domainOfValidity_sequence    0;
//  END OF SEQUENCE
/// Attribute nilReason of type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         remoteSchema                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.opengis.net/gml/3.2":secondDefiningParameter
/// @brief gml:secondDefiningParameter is a property containing the definition of the second parameter that defines the shape of an ellipsoid. An ellipsoid requires two defining parameters: semi-major axis and inverse flattening or semi-major axis and semi-minor axis. When the reference body is a sphere rather than an ellipsoid, only a single defining parameter is required, namely the radius of the sphere; in that case, the semi-major axis "degenerates" into the radius of the sphere. The inverseFlattening element contains the inverse flattening value of the ellipsoid. This value is a scale factor (or ratio). It uses gml:LengthType with the restriction that the unit of measure referenced by the uom attribute must be suitable for a scale factor, such as percent, permil, or parts-per-million. The semiMinorAxis element contains the length of the semi-minor axis of the ellipsoid. When the isSphere element is included, the ellipsoid is degenerate and is actually a sphere. The sphere is completely defined by the semi-major axis, which is the radius of the sphere.

/// "http://www.opengis.net/gml/3.2":secondDefiningParameter is a complexType.
/// class _gml__secondDefiningParameter operations:
/// - soap_new__gml__secondDefiningParameter(soap*) allocate
/// - soap_new__gml__secondDefiningParameter(soap*, int num) allocate array
/// - soap_new_req__gml__secondDefiningParameter(soap*, ...) allocate, set required members
/// - soap_new_set__gml__secondDefiningParameter(soap*, ...) allocate, set all public members
/// - int soap_read__gml__secondDefiningParameter(soap*, _gml__secondDefiningParameter*) deserialize from a stream
/// - int soap_write__gml__secondDefiningParameter(soap, _gml__secondDefiningParameter*) serialize to a stream
class _gml__secondDefiningParameter
{ public:
/// Element reference "http://www.opengis.net/gml/3.2":SecondDefiningParameter.
    _gml__SecondDefiningParameter*       SecondDefiningParameter        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.opengis.net/gml/3.2":SecondDefiningParameter

/// "http://www.opengis.net/gml/3.2":SecondDefiningParameter is a complexType.
/// class _gml__SecondDefiningParameter operations:
/// - soap_new__gml__SecondDefiningParameter(soap*) allocate
/// - soap_new__gml__SecondDefiningParameter(soap*, int num) allocate array
/// - soap_new_req__gml__SecondDefiningParameter(soap*, ...) allocate, set required members
/// - soap_new_set__gml__SecondDefiningParameter(soap*, ...) allocate, set all public members
/// - int soap_read__gml__SecondDefiningParameter(soap*, _gml__SecondDefiningParameter*) deserialize from a stream
/// - int soap_write__gml__SecondDefiningParameter(soap, _gml__SecondDefiningParameter*) serialize to a stream
class _gml__SecondDefiningParameter
{ public:
/// CHOICE <xs:choice>
   $int                                  __union_SecondDefiningParameter;	///< Union _gml__union_SecondDefiningParameter selector: set to SOAP_UNION__gml__union_SecondDefiningParameter_<fieldname>
/// Union for choice in type gml__SecondDefiningParameter
    union _gml__union_SecondDefiningParameter
    {
/// Element inverseFlattening of type "http://www.opengis.net/gml/3.2":MeasureType.
    gml__MeasureType*                    inverseFlattening              1;	///< Required element.
/// Element semiMinorAxis of type "http://www.opengis.net/gml/3.2":LengthType.
    gml__LengthType*                     semiMinorAxis                  1;	///< Required element.
/// Element isSphere of type xs:boolean.
    bool                                 isSphere                       = true;	///< Default value="true".
    }                                    union_SecondDefiningParameter ;
//  END OF CHOICE
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.opengis.net/gml/3.2":coordinateOperationAccuracy
/// @brief gml:coordinateOperationAccuracy is an association role to a DQ_PositionalAccuracy object as encoded in ISO/TS 19139, either referencing or containing the definition of that positional accuracy. That object contains an estimate of the impact of this coordinate operation on point accuracy. That is, it gives position error estimates for the target coordinates of this coordinate operation, assuming no errors in the source coordinates.

/// "http://www.opengis.net/gml/3.2":coordinateOperationAccuracy is a complexType.
/// class _gml__coordinateOperationAccuracy operations:
/// - soap_new__gml__coordinateOperationAccuracy(soap*) allocate
/// - soap_new__gml__coordinateOperationAccuracy(soap*, int num) allocate array
/// - soap_new_req__gml__coordinateOperationAccuracy(soap*, ...) allocate, set required members
/// - soap_new_set__gml__coordinateOperationAccuracy(soap*, ...) allocate, set all public members
/// - int soap_read__gml__coordinateOperationAccuracy(soap*, _gml__coordinateOperationAccuracy*) deserialize from a stream
/// - int soap_write__gml__coordinateOperationAccuracy(soap, _gml__coordinateOperationAccuracy*) serialize to a stream
class _gml__coordinateOperationAccuracy
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gml__coordinateOperationAccuracy_sequence
    {
/// Reference "http://www.isotc211.org/2005/gmd":AbstractDQ_PositionalAccuracy to abstract element.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractDQ_PositionalAccuracy"> with elements <DQ_RelativeInternalPositionalAccuracy> <DQ_GriddedDataPositionalAccuracy> <DQ_AbsoluteExternalPositionalAccuracy>
   $int                                  __unionAbstractDQ_x005fPositionalAccuracy 0;	///< Union _gml__union_coordinateOperationAccuracy selector: set to SOAP_UNION__gml__union_coordinateOperationAccuracy_<fieldname>
/// Union for substitutionGroup="AbstractDQ_PositionalAccuracy"
    union _gml__union_coordinateOperationAccuracy
    {
/// Element DQ_RelativeInternalPositionalAccuracy of type "http://www.isotc211.org/2005/gmd":DQ_RelativeInternalPositionalAccuracy_Type.
    gmd__DQ_x005fRelativeInternalPositionalAccuracy_x005fType*  DQ_x005fRelativeInternalPositionalAccuracy 1;	///< Required element.
/// Element DQ_GriddedDataPositionalAccuracy of type "http://www.isotc211.org/2005/gmd":DQ_GriddedDataPositionalAccuracy_Type.
    gmd__DQ_x005fGriddedDataPositionalAccuracy_x005fType*  DQ_x005fGriddedDataPositionalAccuracy 1;	///< Required element.
/// Element DQ_AbsoluteExternalPositionalAccuracy of type "http://www.isotc211.org/2005/gmd":DQ_AbsoluteExternalPositionalAccuracy_Type.
    gmd__DQ_x005fAbsoluteExternalPositionalAccuracy_x005fType*  DQ_x005fAbsoluteExternalPositionalAccuracy 1;	///< Required element.
    }                                    __union_coordinateOperationAccuracy;
//  END OF CHOICE OF SUBSTITUTIONS
    }>                                   __coordinateOperationAccuracy_sequence 0;
//  END OF SEQUENCE
/// Attribute nilReason of type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         remoteSchema                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.opengis.net/gml/3.2":formulaCitation
/// @brief gml:formulaCitation provides a reference to a publication giving the formula(s) or procedure used by an coordinate operation method.

/// "http://www.opengis.net/gml/3.2":formulaCitation is a complexType.
/// class _gml__formulaCitation operations:
/// - soap_new__gml__formulaCitation(soap*) allocate
/// - soap_new__gml__formulaCitation(soap*, int num) allocate array
/// - soap_new_req__gml__formulaCitation(soap*, ...) allocate, set required members
/// - soap_new_set__gml__formulaCitation(soap*, ...) allocate, set all public members
/// - int soap_read__gml__formulaCitation(soap*, _gml__formulaCitation*) deserialize from a stream
/// - int soap_write__gml__formulaCitation(soap, _gml__formulaCitation*) serialize to a stream
class _gml__formulaCitation
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gml__formulaCitation_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd":CI_Citation.
    gmd__CI_x005fCitation_x005fType*     gmd__CI_x005fCitation          1;	///< Required element.
    }>                                   __formulaCitation_sequence     0;
//  END OF SEQUENCE
/// Attribute nilReason of type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         remoteSchema                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://www.isotc211.org/2005/gmd                                         *
 *                                                                            *
\******************************************************************************/


/// "http://www.isotc211.org/2005/gmd":DS_Aggregate_PropertyType is a complexType.
/// class gmd__DS_x005fAggregate_x005fPropertyType operations:
/// - soap_new_gmd__DS_x005fAggregate_x005fPropertyType(soap*) allocate
/// - soap_new_gmd__DS_x005fAggregate_x005fPropertyType(soap*, int num) allocate array
/// - soap_new_req_gmd__DS_x005fAggregate_x005fPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__DS_x005fAggregate_x005fPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__DS_x005fAggregate_x005fPropertyType(soap*, gmd__DS_x005fAggregate_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__DS_x005fAggregate_x005fPropertyType(soap, gmd__DS_x005fAggregate_x005fPropertyType*) serialize to a stream
class gmd__DS_x005fAggregate_x005fPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gmd__DS_x005fAggregate_x005fPropertyType_sequence
    {
/// Reference "http://www.isotc211.org/2005/gmd":AbstractDS_Aggregate to abstract element.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractDS_Aggregate"> with elements <DS_OtherAggregate> <DS_Series> <DS_Initiative>
   $int                                  __unionAbstractDS_x005fAggregate 0;	///< Union _gmd__union_DS_x005fAggregate_x005fPropertyType selector: set to SOAP_UNION__gmd__union_DS_x005fAggregate_x005fPropertyType_<fieldname>
/// Union for substitutionGroup="AbstractDS_Aggregate"
    union _gmd__union_DS_x005fAggregate_x005fPropertyType
    {
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="DS_OtherAggregate"> with elements <DS_StereoMate>
/// Element DS_OtherAggregate of type "http://www.isotc211.org/2005/gmd":DS_OtherAggregate_Type.
    gmd__DS_x005fOtherAggregate_x005fType*  DS_x005fOtherAggregate         1;	///< Required element.
/// Element DS_StereoMate of type "http://www.isotc211.org/2005/gmd":DS_StereoMate_Type.
    gmd__DS_x005fStereoMate_x005fType*   DS_x005fStereoMate             1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="DS_Series"> with elements <DS_Platform> <DS_Sensor> <DS_ProductionSeries>
/// Element DS_Series of type "http://www.isotc211.org/2005/gmd":DS_Series_Type.
    gmd__DS_x005fSeries_x005fType*       DS_x005fSeries                 1;	///< Required element.
/// Element DS_Platform of type "http://www.isotc211.org/2005/gmd":DS_Platform_Type.
    gmd__DS_x005fPlatform_x005fType*     DS_x005fPlatform               1;	///< Required element.
/// Element DS_Sensor of type "http://www.isotc211.org/2005/gmd":DS_Sensor_Type.
    gmd__DS_x005fSensor_x005fType*       DS_x005fSensor                 1;	///< Required element.
/// Element DS_ProductionSeries of type "http://www.isotc211.org/2005/gmd":DS_ProductionSeries_Type.
    gmd__DS_x005fProductionSeries_x005fType*  DS_x005fProductionSeries       1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
/// Element DS_Initiative of type "http://www.isotc211.org/2005/gmd":DS_Initiative_Type.
    gmd__DS_x005fInitiative_x005fType*   DS_x005fInitiative             1;	///< Required element.
    }                                    __union_DS_x005fAggregate_x005fPropertyType;
//  END OF CHOICE OF SUBSTITUTIONS
    }>                                   __DS_x005fAggregate_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
/// Attribute uuidref of type xs:string.
   @std::string*                         uuidref                        0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.isotc211.org/2005/gmd":DS_DataSet_PropertyType is a complexType.
/// class gmd__DS_x005fDataSet_x005fPropertyType operations:
/// - soap_new_gmd__DS_x005fDataSet_x005fPropertyType(soap*) allocate
/// - soap_new_gmd__DS_x005fDataSet_x005fPropertyType(soap*, int num) allocate array
/// - soap_new_req_gmd__DS_x005fDataSet_x005fPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__DS_x005fDataSet_x005fPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__DS_x005fDataSet_x005fPropertyType(soap*, gmd__DS_x005fDataSet_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__DS_x005fDataSet_x005fPropertyType(soap, gmd__DS_x005fDataSet_x005fPropertyType*) serialize to a stream
class gmd__DS_x005fDataSet_x005fPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gmd__DS_x005fDataSet_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd":DS_DataSet.
    gmd__DS_x005fDataSet_x005fType*      DS_x005fDataSet                1;	///< Required element.
    }>                                   __DS_x005fDataSet_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
/// Attribute uuidref of type xs:string.
   @std::string*                         uuidref                        0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.isotc211.org/2005/gmd":DS_OtherAggregate_PropertyType is a complexType.
/// class gmd__DS_x005fOtherAggregate_x005fPropertyType operations:
/// - soap_new_gmd__DS_x005fOtherAggregate_x005fPropertyType(soap*) allocate
/// - soap_new_gmd__DS_x005fOtherAggregate_x005fPropertyType(soap*, int num) allocate array
/// - soap_new_req_gmd__DS_x005fOtherAggregate_x005fPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__DS_x005fOtherAggregate_x005fPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__DS_x005fOtherAggregate_x005fPropertyType(soap*, gmd__DS_x005fOtherAggregate_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__DS_x005fOtherAggregate_x005fPropertyType(soap, gmd__DS_x005fOtherAggregate_x005fPropertyType*) serialize to a stream
class gmd__DS_x005fOtherAggregate_x005fPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gmd__DS_x005fOtherAggregate_x005fPropertyType_sequence
    {
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="DS_OtherAggregate"> with elements <DS_StereoMate>
   $int                                  __unionDS_x005fOtherAggregate  0;	///< Union _gmd__union_DS_x005fOtherAggregate_x005fPropertyType selector: set to SOAP_UNION__gmd__union_DS_x005fOtherAggregate_x005fPropertyType_<fieldname>
/// Union for substitutionGroup="DS_OtherAggregate"
    union _gmd__union_DS_x005fOtherAggregate_x005fPropertyType
    {
/// Element reference "http://www.isotc211.org/2005/gmd":DS_OtherAggregate.
    gmd__DS_x005fOtherAggregate_x005fType*  DS_x005fOtherAggregate         1;	///< Required element.
/// Element DS_StereoMate of type "http://www.isotc211.org/2005/gmd":DS_StereoMate_Type.
    gmd__DS_x005fStereoMate_x005fType*   DS_x005fStereoMate             1;	///< Required element.
    }                                    __union_DS_x005fOtherAggregate_x005fPropertyType;
//  END OF CHOICE OF SUBSTITUTIONS
    }>                                   __DS_x005fOtherAggregate_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
/// Attribute uuidref of type xs:string.
   @std::string*                         uuidref                        0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.isotc211.org/2005/gmd":DS_Series_PropertyType is a complexType.
/// class gmd__DS_x005fSeries_x005fPropertyType operations:
/// - soap_new_gmd__DS_x005fSeries_x005fPropertyType(soap*) allocate
/// - soap_new_gmd__DS_x005fSeries_x005fPropertyType(soap*, int num) allocate array
/// - soap_new_req_gmd__DS_x005fSeries_x005fPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__DS_x005fSeries_x005fPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__DS_x005fSeries_x005fPropertyType(soap*, gmd__DS_x005fSeries_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__DS_x005fSeries_x005fPropertyType(soap, gmd__DS_x005fSeries_x005fPropertyType*) serialize to a stream
class gmd__DS_x005fSeries_x005fPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gmd__DS_x005fSeries_x005fPropertyType_sequence
    {
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="DS_Series"> with elements <DS_Platform> <DS_Sensor> <DS_ProductionSeries>
   $int                                  __unionDS_x005fSeries          0;	///< Union _gmd__union_DS_x005fSeries_x005fPropertyType selector: set to SOAP_UNION__gmd__union_DS_x005fSeries_x005fPropertyType_<fieldname>
/// Union for substitutionGroup="DS_Series"
    union _gmd__union_DS_x005fSeries_x005fPropertyType
    {
/// Element reference "http://www.isotc211.org/2005/gmd":DS_Series.
    gmd__DS_x005fSeries_x005fType*       DS_x005fSeries                 1;	///< Required element.
/// Element DS_Platform of type "http://www.isotc211.org/2005/gmd":DS_Platform_Type.
    gmd__DS_x005fPlatform_x005fType*     DS_x005fPlatform               1;	///< Required element.
/// Element DS_Sensor of type "http://www.isotc211.org/2005/gmd":DS_Sensor_Type.
    gmd__DS_x005fSensor_x005fType*       DS_x005fSensor                 1;	///< Required element.
/// Element DS_ProductionSeries of type "http://www.isotc211.org/2005/gmd":DS_ProductionSeries_Type.
    gmd__DS_x005fProductionSeries_x005fType*  DS_x005fProductionSeries       1;	///< Required element.
    }                                    __union_DS_x005fSeries_x005fPropertyType;
//  END OF CHOICE OF SUBSTITUTIONS
    }>                                   __DS_x005fSeries_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
/// Attribute uuidref of type xs:string.
   @std::string*                         uuidref                        0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.isotc211.org/2005/gmd":DS_Initiative_PropertyType is a complexType.
/// class gmd__DS_x005fInitiative_x005fPropertyType operations:
/// - soap_new_gmd__DS_x005fInitiative_x005fPropertyType(soap*) allocate
/// - soap_new_gmd__DS_x005fInitiative_x005fPropertyType(soap*, int num) allocate array
/// - soap_new_req_gmd__DS_x005fInitiative_x005fPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__DS_x005fInitiative_x005fPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__DS_x005fInitiative_x005fPropertyType(soap*, gmd__DS_x005fInitiative_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__DS_x005fInitiative_x005fPropertyType(soap, gmd__DS_x005fInitiative_x005fPropertyType*) serialize to a stream
class gmd__DS_x005fInitiative_x005fPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gmd__DS_x005fInitiative_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd":DS_Initiative.
    gmd__DS_x005fInitiative_x005fType*   DS_x005fInitiative             1;	///< Required element.
    }>                                   __DS_x005fInitiative_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
/// Attribute uuidref of type xs:string.
   @std::string*                         uuidref                        0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.isotc211.org/2005/gmd":DS_Platform_PropertyType is a complexType.
/// class gmd__DS_x005fPlatform_x005fPropertyType operations:
/// - soap_new_gmd__DS_x005fPlatform_x005fPropertyType(soap*) allocate
/// - soap_new_gmd__DS_x005fPlatform_x005fPropertyType(soap*, int num) allocate array
/// - soap_new_req_gmd__DS_x005fPlatform_x005fPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__DS_x005fPlatform_x005fPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__DS_x005fPlatform_x005fPropertyType(soap*, gmd__DS_x005fPlatform_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__DS_x005fPlatform_x005fPropertyType(soap, gmd__DS_x005fPlatform_x005fPropertyType*) serialize to a stream
class gmd__DS_x005fPlatform_x005fPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gmd__DS_x005fPlatform_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd":DS_Platform.
    gmd__DS_x005fPlatform_x005fType*     DS_x005fPlatform               1;	///< Required element.
    }>                                   __DS_x005fPlatform_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
/// Attribute uuidref of type xs:string.
   @std::string*                         uuidref                        0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.isotc211.org/2005/gmd":DS_Sensor_PropertyType is a complexType.
/// class gmd__DS_x005fSensor_x005fPropertyType operations:
/// - soap_new_gmd__DS_x005fSensor_x005fPropertyType(soap*) allocate
/// - soap_new_gmd__DS_x005fSensor_x005fPropertyType(soap*, int num) allocate array
/// - soap_new_req_gmd__DS_x005fSensor_x005fPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__DS_x005fSensor_x005fPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__DS_x005fSensor_x005fPropertyType(soap*, gmd__DS_x005fSensor_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__DS_x005fSensor_x005fPropertyType(soap, gmd__DS_x005fSensor_x005fPropertyType*) serialize to a stream
class gmd__DS_x005fSensor_x005fPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gmd__DS_x005fSensor_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd":DS_Sensor.
    gmd__DS_x005fSensor_x005fType*       DS_x005fSensor                 1;	///< Required element.
    }>                                   __DS_x005fSensor_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
/// Attribute uuidref of type xs:string.
   @std::string*                         uuidref                        0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.isotc211.org/2005/gmd":DS_ProductionSeries_PropertyType is a complexType.
/// class gmd__DS_x005fProductionSeries_x005fPropertyType operations:
/// - soap_new_gmd__DS_x005fProductionSeries_x005fPropertyType(soap*) allocate
/// - soap_new_gmd__DS_x005fProductionSeries_x005fPropertyType(soap*, int num) allocate array
/// - soap_new_req_gmd__DS_x005fProductionSeries_x005fPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__DS_x005fProductionSeries_x005fPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__DS_x005fProductionSeries_x005fPropertyType(soap*, gmd__DS_x005fProductionSeries_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__DS_x005fProductionSeries_x005fPropertyType(soap, gmd__DS_x005fProductionSeries_x005fPropertyType*) serialize to a stream
class gmd__DS_x005fProductionSeries_x005fPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gmd__DS_x005fProductionSeries_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd":DS_ProductionSeries.
    gmd__DS_x005fProductionSeries_x005fType*  DS_x005fProductionSeries       1;	///< Required element.
    }>                                   __DS_x005fProductionSeries_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
/// Attribute uuidref of type xs:string.
   @std::string*                         uuidref                        0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.isotc211.org/2005/gmd":DS_StereoMate_PropertyType is a complexType.
/// class gmd__DS_x005fStereoMate_x005fPropertyType operations:
/// - soap_new_gmd__DS_x005fStereoMate_x005fPropertyType(soap*) allocate
/// - soap_new_gmd__DS_x005fStereoMate_x005fPropertyType(soap*, int num) allocate array
/// - soap_new_req_gmd__DS_x005fStereoMate_x005fPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__DS_x005fStereoMate_x005fPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__DS_x005fStereoMate_x005fPropertyType(soap*, gmd__DS_x005fStereoMate_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__DS_x005fStereoMate_x005fPropertyType(soap, gmd__DS_x005fStereoMate_x005fPropertyType*) serialize to a stream
class gmd__DS_x005fStereoMate_x005fPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gmd__DS_x005fStereoMate_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd":DS_StereoMate.
    gmd__DS_x005fStereoMate_x005fType*   DS_x005fStereoMate             1;	///< Required element.
    }>                                   __DS_x005fStereoMate_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
/// Attribute uuidref of type xs:string.
   @std::string*                         uuidref                        0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.isotc211.org/2005/gmd":MD_Metadata_PropertyType is a complexType.
/// class gmd__MD_x005fMetadata_x005fPropertyType operations:
/// - soap_new_gmd__MD_x005fMetadata_x005fPropertyType(soap*) allocate
/// - soap_new_gmd__MD_x005fMetadata_x005fPropertyType(soap*, int num) allocate array
/// - soap_new_req_gmd__MD_x005fMetadata_x005fPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__MD_x005fMetadata_x005fPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__MD_x005fMetadata_x005fPropertyType(soap*, gmd__MD_x005fMetadata_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fMetadata_x005fPropertyType(soap, gmd__MD_x005fMetadata_x005fPropertyType*) serialize to a stream
class gmd__MD_x005fMetadata_x005fPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gmd__MD_x005fMetadata_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd":MD_Metadata.
    gmd__MD_x005fMetadata_x005fType*     MD_x005fMetadata               1;	///< Required element.
    }>                                   __MD_x005fMetadata_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
/// Attribute uuidref of type xs:string.
   @std::string*                         uuidref                        0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.isotc211.org/2005/gmd":MD_GridSpatialRepresentation_PropertyType is a complexType.
/// class gmd__MD_x005fGridSpatialRepresentation_x005fPropertyType operations:
/// - soap_new_gmd__MD_x005fGridSpatialRepresentation_x005fPropertyType(soap*) allocate
/// - soap_new_gmd__MD_x005fGridSpatialRepresentation_x005fPropertyType(soap*, int num) allocate array
/// - soap_new_req_gmd__MD_x005fGridSpatialRepresentation_x005fPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__MD_x005fGridSpatialRepresentation_x005fPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__MD_x005fGridSpatialRepresentation_x005fPropertyType(soap*, gmd__MD_x005fGridSpatialRepresentation_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fGridSpatialRepresentation_x005fPropertyType(soap, gmd__MD_x005fGridSpatialRepresentation_x005fPropertyType*) serialize to a stream
class gmd__MD_x005fGridSpatialRepresentation_x005fPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gmd__MD_x005fGridSpatialRepresentation_x005fPropertyType_sequence
    {
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="MD_GridSpatialRepresentation"> with elements <MD_Georeferenceable> <MD_Georectified>
   $int                                  __unionMD_x005fGridSpatialRepresentation 0;	///< Union _gmd__union_MD_x005fGridSpatialRepresentation_x005fPropertyType selector: set to SOAP_UNION__gmd__union_MD_x005fGridSpatialRepresentation_x005fPropertyType_<fieldname>
/// Union for substitutionGroup="MD_GridSpatialRepresentation"
    union _gmd__union_MD_x005fGridSpatialRepresentation_x005fPropertyType
    {
/// Element reference "http://www.isotc211.org/2005/gmd":MD_GridSpatialRepresentation.
    gmd__MD_x005fGridSpatialRepresentation_x005fType*  MD_x005fGridSpatialRepresentation 1;	///< Required element.
/// Element MD_Georeferenceable of type "http://www.isotc211.org/2005/gmd":MD_Georeferenceable_Type.
    gmd__MD_x005fGeoreferenceable_x005fType*  MD_x005fGeoreferenceable       1;	///< Required element.
/// Element MD_Georectified of type "http://www.isotc211.org/2005/gmd":MD_Georectified_Type.
    gmd__MD_x005fGeorectified_x005fType*  MD_x005fGeorectified           1;	///< Required element.
    }                                    __union_MD_x005fGridSpatialRepresentation_x005fPropertyType;
//  END OF CHOICE OF SUBSTITUTIONS
    }>                                   __MD_x005fGridSpatialRepresentation_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
/// Attribute uuidref of type xs:string.
   @std::string*                         uuidref                        0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.isotc211.org/2005/gmd":MD_VectorSpatialRepresentation_PropertyType is a complexType.
/// class gmd__MD_x005fVectorSpatialRepresentation_x005fPropertyType operations:
/// - soap_new_gmd__MD_x005fVectorSpatialRepresentation_x005fPropertyType(soap*) allocate
/// - soap_new_gmd__MD_x005fVectorSpatialRepresentation_x005fPropertyType(soap*, int num) allocate array
/// - soap_new_req_gmd__MD_x005fVectorSpatialRepresentation_x005fPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__MD_x005fVectorSpatialRepresentation_x005fPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__MD_x005fVectorSpatialRepresentation_x005fPropertyType(soap*, gmd__MD_x005fVectorSpatialRepresentation_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fVectorSpatialRepresentation_x005fPropertyType(soap, gmd__MD_x005fVectorSpatialRepresentation_x005fPropertyType*) serialize to a stream
class gmd__MD_x005fVectorSpatialRepresentation_x005fPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gmd__MD_x005fVectorSpatialRepresentation_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd":MD_VectorSpatialRepresentation.
    gmd__MD_x005fVectorSpatialRepresentation_x005fType*  MD_x005fVectorSpatialRepresentation 1;	///< Required element.
    }>                                   __MD_x005fVectorSpatialRepresentation_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
/// Attribute uuidref of type xs:string.
   @std::string*                         uuidref                        0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.isotc211.org/2005/gmd":MD_SpatialRepresentation_PropertyType is a complexType.
/// class gmd__MD_x005fSpatialRepresentation_x005fPropertyType operations:
/// - soap_new_gmd__MD_x005fSpatialRepresentation_x005fPropertyType(soap*) allocate
/// - soap_new_gmd__MD_x005fSpatialRepresentation_x005fPropertyType(soap*, int num) allocate array
/// - soap_new_req_gmd__MD_x005fSpatialRepresentation_x005fPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__MD_x005fSpatialRepresentation_x005fPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__MD_x005fSpatialRepresentation_x005fPropertyType(soap*, gmd__MD_x005fSpatialRepresentation_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fSpatialRepresentation_x005fPropertyType(soap, gmd__MD_x005fSpatialRepresentation_x005fPropertyType*) serialize to a stream
class gmd__MD_x005fSpatialRepresentation_x005fPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gmd__MD_x005fSpatialRepresentation_x005fPropertyType_sequence
    {
/// Reference "http://www.isotc211.org/2005/gmd":AbstractMD_SpatialRepresentation to abstract element.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractMD_SpatialRepresentation"> with elements <MD_GridSpatialRepresentation> <MD_VectorSpatialRepresentation>
   $int                                  __unionAbstractMD_x005fSpatialRepresentation 0;	///< Union _gmd__union_MD_x005fSpatialRepresentation_x005fPropertyType selector: set to SOAP_UNION__gmd__union_MD_x005fSpatialRepresentation_x005fPropertyType_<fieldname>
/// Union for substitutionGroup="AbstractMD_SpatialRepresentation"
    union _gmd__union_MD_x005fSpatialRepresentation_x005fPropertyType
    {
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="MD_GridSpatialRepresentation"> with elements <MD_Georeferenceable> <MD_Georectified>
/// Element MD_GridSpatialRepresentation of type "http://www.isotc211.org/2005/gmd":MD_GridSpatialRepresentation_Type.
    gmd__MD_x005fGridSpatialRepresentation_x005fType*  MD_x005fGridSpatialRepresentation 1;	///< Required element.
/// Element MD_Georeferenceable of type "http://www.isotc211.org/2005/gmd":MD_Georeferenceable_Type.
    gmd__MD_x005fGeoreferenceable_x005fType*  MD_x005fGeoreferenceable       1;	///< Required element.
/// Element MD_Georectified of type "http://www.isotc211.org/2005/gmd":MD_Georectified_Type.
    gmd__MD_x005fGeorectified_x005fType*  MD_x005fGeorectified           1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
/// Element MD_VectorSpatialRepresentation of type "http://www.isotc211.org/2005/gmd":MD_VectorSpatialRepresentation_Type.
    gmd__MD_x005fVectorSpatialRepresentation_x005fType*  MD_x005fVectorSpatialRepresentation 1;	///< Required element.
    }                                    __union_MD_x005fSpatialRepresentation_x005fPropertyType;
//  END OF CHOICE OF SUBSTITUTIONS
    }>                                   __MD_x005fSpatialRepresentation_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
/// Attribute uuidref of type xs:string.
   @std::string*                         uuidref                        0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.isotc211.org/2005/gmd":MD_Georeferenceable_PropertyType is a complexType.
/// class gmd__MD_x005fGeoreferenceable_x005fPropertyType operations:
/// - soap_new_gmd__MD_x005fGeoreferenceable_x005fPropertyType(soap*) allocate
/// - soap_new_gmd__MD_x005fGeoreferenceable_x005fPropertyType(soap*, int num) allocate array
/// - soap_new_req_gmd__MD_x005fGeoreferenceable_x005fPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__MD_x005fGeoreferenceable_x005fPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__MD_x005fGeoreferenceable_x005fPropertyType(soap*, gmd__MD_x005fGeoreferenceable_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fGeoreferenceable_x005fPropertyType(soap, gmd__MD_x005fGeoreferenceable_x005fPropertyType*) serialize to a stream
class gmd__MD_x005fGeoreferenceable_x005fPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gmd__MD_x005fGeoreferenceable_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd":MD_Georeferenceable.
    gmd__MD_x005fGeoreferenceable_x005fType*  MD_x005fGeoreferenceable       1;	///< Required element.
    }>                                   __MD_x005fGeoreferenceable_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
/// Attribute uuidref of type xs:string.
   @std::string*                         uuidref                        0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.isotc211.org/2005/gmd":MD_Dimension_PropertyType is a complexType.
/// class gmd__MD_x005fDimension_x005fPropertyType operations:
/// - soap_new_gmd__MD_x005fDimension_x005fPropertyType(soap*) allocate
/// - soap_new_gmd__MD_x005fDimension_x005fPropertyType(soap*, int num) allocate array
/// - soap_new_req_gmd__MD_x005fDimension_x005fPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__MD_x005fDimension_x005fPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__MD_x005fDimension_x005fPropertyType(soap*, gmd__MD_x005fDimension_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fDimension_x005fPropertyType(soap, gmd__MD_x005fDimension_x005fPropertyType*) serialize to a stream
class gmd__MD_x005fDimension_x005fPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gmd__MD_x005fDimension_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd":MD_Dimension.
    gmd__MD_x005fDimension_x005fType*    MD_x005fDimension              1;	///< Required element.
    }>                                   __MD_x005fDimension_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
/// Attribute uuidref of type xs:string.
   @std::string*                         uuidref                        0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.isotc211.org/2005/gmd":MD_Georectified_PropertyType is a complexType.
/// class gmd__MD_x005fGeorectified_x005fPropertyType operations:
/// - soap_new_gmd__MD_x005fGeorectified_x005fPropertyType(soap*) allocate
/// - soap_new_gmd__MD_x005fGeorectified_x005fPropertyType(soap*, int num) allocate array
/// - soap_new_req_gmd__MD_x005fGeorectified_x005fPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__MD_x005fGeorectified_x005fPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__MD_x005fGeorectified_x005fPropertyType(soap*, gmd__MD_x005fGeorectified_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fGeorectified_x005fPropertyType(soap, gmd__MD_x005fGeorectified_x005fPropertyType*) serialize to a stream
class gmd__MD_x005fGeorectified_x005fPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gmd__MD_x005fGeorectified_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd":MD_Georectified.
    gmd__MD_x005fGeorectified_x005fType*  MD_x005fGeorectified           1;	///< Required element.
    }>                                   __MD_x005fGeorectified_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
/// Attribute uuidref of type xs:string.
   @std::string*                         uuidref                        0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.isotc211.org/2005/gmd":MD_GeometricObjects_PropertyType is a complexType.
/// class gmd__MD_x005fGeometricObjects_x005fPropertyType operations:
/// - soap_new_gmd__MD_x005fGeometricObjects_x005fPropertyType(soap*) allocate
/// - soap_new_gmd__MD_x005fGeometricObjects_x005fPropertyType(soap*, int num) allocate array
/// - soap_new_req_gmd__MD_x005fGeometricObjects_x005fPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__MD_x005fGeometricObjects_x005fPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__MD_x005fGeometricObjects_x005fPropertyType(soap*, gmd__MD_x005fGeometricObjects_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fGeometricObjects_x005fPropertyType(soap, gmd__MD_x005fGeometricObjects_x005fPropertyType*) serialize to a stream
class gmd__MD_x005fGeometricObjects_x005fPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gmd__MD_x005fGeometricObjects_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd":MD_GeometricObjects.
    gmd__MD_x005fGeometricObjects_x005fType*  MD_x005fGeometricObjects       1;	///< Required element.
    }>                                   __MD_x005fGeometricObjects_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
/// Attribute uuidref of type xs:string.
   @std::string*                         uuidref                        0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.isotc211.org/2005/gmd":MD_PixelOrientationCode_PropertyType is a complexType.
/// class gmd__MD_x005fPixelOrientationCode_x005fPropertyType operations:
/// - soap_new_gmd__MD_x005fPixelOrientationCode_x005fPropertyType(soap*) allocate
/// - soap_new_gmd__MD_x005fPixelOrientationCode_x005fPropertyType(soap*, int num) allocate array
/// - soap_new_req_gmd__MD_x005fPixelOrientationCode_x005fPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__MD_x005fPixelOrientationCode_x005fPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__MD_x005fPixelOrientationCode_x005fPropertyType(soap*, gmd__MD_x005fPixelOrientationCode_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fPixelOrientationCode_x005fPropertyType(soap, gmd__MD_x005fPixelOrientationCode_x005fPropertyType*) serialize to a stream
class gmd__MD_x005fPixelOrientationCode_x005fPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gmd__MD_x005fPixelOrientationCode_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd":MD_PixelOrientationCode.
    enum gmd__MD_x005fPixelOrientationCode_x005fType  MD_x005fPixelOrientationCode   1;	///< Required element.
    }>                                   __MD_x005fPixelOrientationCode_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
};

/// "http://www.isotc211.org/2005/gmd":MD_TopologyLevelCode_PropertyType is a complexType.
/// class gmd__MD_x005fTopologyLevelCode_x005fPropertyType operations:
/// - soap_new_gmd__MD_x005fTopologyLevelCode_x005fPropertyType(soap*) allocate
/// - soap_new_gmd__MD_x005fTopologyLevelCode_x005fPropertyType(soap*, int num) allocate array
/// - soap_new_req_gmd__MD_x005fTopologyLevelCode_x005fPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__MD_x005fTopologyLevelCode_x005fPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__MD_x005fTopologyLevelCode_x005fPropertyType(soap*, gmd__MD_x005fTopologyLevelCode_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fTopologyLevelCode_x005fPropertyType(soap, gmd__MD_x005fTopologyLevelCode_x005fPropertyType*) serialize to a stream
class gmd__MD_x005fTopologyLevelCode_x005fPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gmd__MD_x005fTopologyLevelCode_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd":MD_TopologyLevelCode.
    gco__CodeListValue_x005fType*        MD_x005fTopologyLevelCode      1;	///< Required element.
    }>                                   __MD_x005fTopologyLevelCode_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
};

/// "http://www.isotc211.org/2005/gmd":MD_GeometricObjectTypeCode_PropertyType is a complexType.
/// class gmd__MD_x005fGeometricObjectTypeCode_x005fPropertyType operations:
/// - soap_new_gmd__MD_x005fGeometricObjectTypeCode_x005fPropertyType(soap*) allocate
/// - soap_new_gmd__MD_x005fGeometricObjectTypeCode_x005fPropertyType(soap*, int num) allocate array
/// - soap_new_req_gmd__MD_x005fGeometricObjectTypeCode_x005fPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__MD_x005fGeometricObjectTypeCode_x005fPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__MD_x005fGeometricObjectTypeCode_x005fPropertyType(soap*, gmd__MD_x005fGeometricObjectTypeCode_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fGeometricObjectTypeCode_x005fPropertyType(soap, gmd__MD_x005fGeometricObjectTypeCode_x005fPropertyType*) serialize to a stream
class gmd__MD_x005fGeometricObjectTypeCode_x005fPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gmd__MD_x005fGeometricObjectTypeCode_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd":MD_GeometricObjectTypeCode.
    gco__CodeListValue_x005fType*        MD_x005fGeometricObjectTypeCode 1;	///< Required element.
    }>                                   __MD_x005fGeometricObjectTypeCode_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
};

/// "http://www.isotc211.org/2005/gmd":MD_CellGeometryCode_PropertyType is a complexType.
/// class gmd__MD_x005fCellGeometryCode_x005fPropertyType operations:
/// - soap_new_gmd__MD_x005fCellGeometryCode_x005fPropertyType(soap*) allocate
/// - soap_new_gmd__MD_x005fCellGeometryCode_x005fPropertyType(soap*, int num) allocate array
/// - soap_new_req_gmd__MD_x005fCellGeometryCode_x005fPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__MD_x005fCellGeometryCode_x005fPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__MD_x005fCellGeometryCode_x005fPropertyType(soap*, gmd__MD_x005fCellGeometryCode_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fCellGeometryCode_x005fPropertyType(soap, gmd__MD_x005fCellGeometryCode_x005fPropertyType*) serialize to a stream
class gmd__MD_x005fCellGeometryCode_x005fPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gmd__MD_x005fCellGeometryCode_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd":MD_CellGeometryCode.
    gco__CodeListValue_x005fType*        MD_x005fCellGeometryCode       1;	///< Required element.
    }>                                   __MD_x005fCellGeometryCode_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
};

/// "http://www.isotc211.org/2005/gmd":MD_DimensionNameTypeCode_PropertyType is a complexType.
/// class gmd__MD_x005fDimensionNameTypeCode_x005fPropertyType operations:
/// - soap_new_gmd__MD_x005fDimensionNameTypeCode_x005fPropertyType(soap*) allocate
/// - soap_new_gmd__MD_x005fDimensionNameTypeCode_x005fPropertyType(soap*, int num) allocate array
/// - soap_new_req_gmd__MD_x005fDimensionNameTypeCode_x005fPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__MD_x005fDimensionNameTypeCode_x005fPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__MD_x005fDimensionNameTypeCode_x005fPropertyType(soap*, gmd__MD_x005fDimensionNameTypeCode_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fDimensionNameTypeCode_x005fPropertyType(soap, gmd__MD_x005fDimensionNameTypeCode_x005fPropertyType*) serialize to a stream
class gmd__MD_x005fDimensionNameTypeCode_x005fPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gmd__MD_x005fDimensionNameTypeCode_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd":MD_DimensionNameTypeCode.
    gco__CodeListValue_x005fType*        MD_x005fDimensionNameTypeCode  1;	///< Required element.
    }>                                   __MD_x005fDimensionNameTypeCode_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
};

/// "http://www.isotc211.org/2005/gmd":CI_ResponsibleParty_PropertyType is a complexType.
/// class gmd__CI_x005fResponsibleParty_x005fPropertyType operations:
/// - soap_new_gmd__CI_x005fResponsibleParty_x005fPropertyType(soap*) allocate
/// - soap_new_gmd__CI_x005fResponsibleParty_x005fPropertyType(soap*, int num) allocate array
/// - soap_new_req_gmd__CI_x005fResponsibleParty_x005fPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__CI_x005fResponsibleParty_x005fPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__CI_x005fResponsibleParty_x005fPropertyType(soap*, gmd__CI_x005fResponsibleParty_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__CI_x005fResponsibleParty_x005fPropertyType(soap, gmd__CI_x005fResponsibleParty_x005fPropertyType*) serialize to a stream
class gmd__CI_x005fResponsibleParty_x005fPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gmd__CI_x005fResponsibleParty_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd":CI_ResponsibleParty.
    gmd__CI_x005fResponsibleParty_x005fType*  CI_x005fResponsibleParty       1;	///< Required element.
    }>                                   __CI_x005fResponsibleParty_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
/// Attribute uuidref of type xs:string.
   @std::string*                         uuidref                        0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.isotc211.org/2005/gmd":CI_Citation_PropertyType is a complexType.
/// class gmd__CI_x005fCitation_x005fPropertyType operations:
/// - soap_new_gmd__CI_x005fCitation_x005fPropertyType(soap*) allocate
/// - soap_new_gmd__CI_x005fCitation_x005fPropertyType(soap*, int num) allocate array
/// - soap_new_req_gmd__CI_x005fCitation_x005fPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__CI_x005fCitation_x005fPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__CI_x005fCitation_x005fPropertyType(soap*, gmd__CI_x005fCitation_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__CI_x005fCitation_x005fPropertyType(soap, gmd__CI_x005fCitation_x005fPropertyType*) serialize to a stream
class gmd__CI_x005fCitation_x005fPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gmd__CI_x005fCitation_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd":CI_Citation.
    gmd__CI_x005fCitation_x005fType*     CI_x005fCitation               1;	///< Required element.
    }>                                   __CI_x005fCitation_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
/// Attribute uuidref of type xs:string.
   @std::string*                         uuidref                        0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.isotc211.org/2005/gmd":CI_Address_PropertyType is a complexType.
/// class gmd__CI_x005fAddress_x005fPropertyType operations:
/// - soap_new_gmd__CI_x005fAddress_x005fPropertyType(soap*) allocate
/// - soap_new_gmd__CI_x005fAddress_x005fPropertyType(soap*, int num) allocate array
/// - soap_new_req_gmd__CI_x005fAddress_x005fPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__CI_x005fAddress_x005fPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__CI_x005fAddress_x005fPropertyType(soap*, gmd__CI_x005fAddress_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__CI_x005fAddress_x005fPropertyType(soap, gmd__CI_x005fAddress_x005fPropertyType*) serialize to a stream
class gmd__CI_x005fAddress_x005fPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gmd__CI_x005fAddress_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd":CI_Address.
    gmd__CI_x005fAddress_x005fType*      CI_x005fAddress                1;	///< Required element.
    }>                                   __CI_x005fAddress_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
/// Attribute uuidref of type xs:string.
   @std::string*                         uuidref                        0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.isotc211.org/2005/gmd":CI_OnlineResource_PropertyType is a complexType.
/// class gmd__CI_x005fOnlineResource_x005fPropertyType operations:
/// - soap_new_gmd__CI_x005fOnlineResource_x005fPropertyType(soap*) allocate
/// - soap_new_gmd__CI_x005fOnlineResource_x005fPropertyType(soap*, int num) allocate array
/// - soap_new_req_gmd__CI_x005fOnlineResource_x005fPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__CI_x005fOnlineResource_x005fPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__CI_x005fOnlineResource_x005fPropertyType(soap*, gmd__CI_x005fOnlineResource_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__CI_x005fOnlineResource_x005fPropertyType(soap, gmd__CI_x005fOnlineResource_x005fPropertyType*) serialize to a stream
class gmd__CI_x005fOnlineResource_x005fPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gmd__CI_x005fOnlineResource_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd":CI_OnlineResource.
    gmd__CI_x005fOnlineResource_x005fType*  CI_x005fOnlineResource         1;	///< Required element.
    }>                                   __CI_x005fOnlineResource_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
/// Attribute uuidref of type xs:string.
   @std::string*                         uuidref                        0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.isotc211.org/2005/gmd":CI_Contact_PropertyType is a complexType.
/// class gmd__CI_x005fContact_x005fPropertyType operations:
/// - soap_new_gmd__CI_x005fContact_x005fPropertyType(soap*) allocate
/// - soap_new_gmd__CI_x005fContact_x005fPropertyType(soap*, int num) allocate array
/// - soap_new_req_gmd__CI_x005fContact_x005fPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__CI_x005fContact_x005fPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__CI_x005fContact_x005fPropertyType(soap*, gmd__CI_x005fContact_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__CI_x005fContact_x005fPropertyType(soap, gmd__CI_x005fContact_x005fPropertyType*) serialize to a stream
class gmd__CI_x005fContact_x005fPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gmd__CI_x005fContact_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd":CI_Contact.
    gmd__CI_x005fContact_x005fType*      CI_x005fContact                1;	///< Required element.
    }>                                   __CI_x005fContact_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
/// Attribute uuidref of type xs:string.
   @std::string*                         uuidref                        0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.isotc211.org/2005/gmd":CI_Telephone_PropertyType is a complexType.
/// class gmd__CI_x005fTelephone_x005fPropertyType operations:
/// - soap_new_gmd__CI_x005fTelephone_x005fPropertyType(soap*) allocate
/// - soap_new_gmd__CI_x005fTelephone_x005fPropertyType(soap*, int num) allocate array
/// - soap_new_req_gmd__CI_x005fTelephone_x005fPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__CI_x005fTelephone_x005fPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__CI_x005fTelephone_x005fPropertyType(soap*, gmd__CI_x005fTelephone_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__CI_x005fTelephone_x005fPropertyType(soap, gmd__CI_x005fTelephone_x005fPropertyType*) serialize to a stream
class gmd__CI_x005fTelephone_x005fPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gmd__CI_x005fTelephone_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd":CI_Telephone.
    gmd__CI_x005fTelephone_x005fType*    CI_x005fTelephone              1;	///< Required element.
    }>                                   __CI_x005fTelephone_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
/// Attribute uuidref of type xs:string.
   @std::string*                         uuidref                        0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.isotc211.org/2005/gmd":CI_Date_PropertyType is a complexType.
/// class gmd__CI_x005fDate_x005fPropertyType operations:
/// - soap_new_gmd__CI_x005fDate_x005fPropertyType(soap*) allocate
/// - soap_new_gmd__CI_x005fDate_x005fPropertyType(soap*, int num) allocate array
/// - soap_new_req_gmd__CI_x005fDate_x005fPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__CI_x005fDate_x005fPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__CI_x005fDate_x005fPropertyType(soap*, gmd__CI_x005fDate_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__CI_x005fDate_x005fPropertyType(soap, gmd__CI_x005fDate_x005fPropertyType*) serialize to a stream
class gmd__CI_x005fDate_x005fPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gmd__CI_x005fDate_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd":CI_Date.
    gmd__CI_x005fDate_x005fType*         CI_x005fDate                   1;	///< Required element.
    }>                                   __CI_x005fDate_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
/// Attribute uuidref of type xs:string.
   @std::string*                         uuidref                        0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.isotc211.org/2005/gmd":CI_Series_PropertyType is a complexType.
/// class gmd__CI_x005fSeries_x005fPropertyType operations:
/// - soap_new_gmd__CI_x005fSeries_x005fPropertyType(soap*) allocate
/// - soap_new_gmd__CI_x005fSeries_x005fPropertyType(soap*, int num) allocate array
/// - soap_new_req_gmd__CI_x005fSeries_x005fPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__CI_x005fSeries_x005fPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__CI_x005fSeries_x005fPropertyType(soap*, gmd__CI_x005fSeries_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__CI_x005fSeries_x005fPropertyType(soap, gmd__CI_x005fSeries_x005fPropertyType*) serialize to a stream
class gmd__CI_x005fSeries_x005fPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gmd__CI_x005fSeries_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd":CI_Series.
    gmd__CI_x005fSeries_x005fType*       CI_x005fSeries                 1;	///< Required element.
    }>                                   __CI_x005fSeries_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
/// Attribute uuidref of type xs:string.
   @std::string*                         uuidref                        0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.isotc211.org/2005/gmd":URL_PropertyType is a complexType.
/// class gmd__URL_x005fPropertyType operations:
/// - soap_new_gmd__URL_x005fPropertyType(soap*) allocate
/// - soap_new_gmd__URL_x005fPropertyType(soap*, int num) allocate array
/// - soap_new_req_gmd__URL_x005fPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__URL_x005fPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__URL_x005fPropertyType(soap*, gmd__URL_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__URL_x005fPropertyType(soap, gmd__URL_x005fPropertyType*) serialize to a stream
class gmd__URL_x005fPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gmd__URL_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd":URL.
    xsd__anyURI                          URL                            1;	///< Required element.
    }>                                   __URL_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
};

/// "http://www.isotc211.org/2005/gmd":CI_RoleCode_PropertyType is a complexType.
/// class gmd__CI_x005fRoleCode_x005fPropertyType operations:
/// - soap_new_gmd__CI_x005fRoleCode_x005fPropertyType(soap*) allocate
/// - soap_new_gmd__CI_x005fRoleCode_x005fPropertyType(soap*, int num) allocate array
/// - soap_new_req_gmd__CI_x005fRoleCode_x005fPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__CI_x005fRoleCode_x005fPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__CI_x005fRoleCode_x005fPropertyType(soap*, gmd__CI_x005fRoleCode_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__CI_x005fRoleCode_x005fPropertyType(soap, gmd__CI_x005fRoleCode_x005fPropertyType*) serialize to a stream
class gmd__CI_x005fRoleCode_x005fPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gmd__CI_x005fRoleCode_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd":CI_RoleCode.
    gco__CodeListValue_x005fType*        CI_x005fRoleCode               1;	///< Required element.
    }>                                   __CI_x005fRoleCode_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
};

/// "http://www.isotc211.org/2005/gmd":CI_PresentationFormCode_PropertyType is a complexType.
/// class gmd__CI_x005fPresentationFormCode_x005fPropertyType operations:
/// - soap_new_gmd__CI_x005fPresentationFormCode_x005fPropertyType(soap*) allocate
/// - soap_new_gmd__CI_x005fPresentationFormCode_x005fPropertyType(soap*, int num) allocate array
/// - soap_new_req_gmd__CI_x005fPresentationFormCode_x005fPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__CI_x005fPresentationFormCode_x005fPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__CI_x005fPresentationFormCode_x005fPropertyType(soap*, gmd__CI_x005fPresentationFormCode_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__CI_x005fPresentationFormCode_x005fPropertyType(soap, gmd__CI_x005fPresentationFormCode_x005fPropertyType*) serialize to a stream
class gmd__CI_x005fPresentationFormCode_x005fPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gmd__CI_x005fPresentationFormCode_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd":CI_PresentationFormCode.
    gco__CodeListValue_x005fType*        CI_x005fPresentationFormCode   1;	///< Required element.
    }>                                   __CI_x005fPresentationFormCode_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
};

/// "http://www.isotc211.org/2005/gmd":CI_OnLineFunctionCode_PropertyType is a complexType.
/// class gmd__CI_x005fOnLineFunctionCode_x005fPropertyType operations:
/// - soap_new_gmd__CI_x005fOnLineFunctionCode_x005fPropertyType(soap*) allocate
/// - soap_new_gmd__CI_x005fOnLineFunctionCode_x005fPropertyType(soap*, int num) allocate array
/// - soap_new_req_gmd__CI_x005fOnLineFunctionCode_x005fPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__CI_x005fOnLineFunctionCode_x005fPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__CI_x005fOnLineFunctionCode_x005fPropertyType(soap*, gmd__CI_x005fOnLineFunctionCode_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__CI_x005fOnLineFunctionCode_x005fPropertyType(soap, gmd__CI_x005fOnLineFunctionCode_x005fPropertyType*) serialize to a stream
class gmd__CI_x005fOnLineFunctionCode_x005fPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gmd__CI_x005fOnLineFunctionCode_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd":CI_OnLineFunctionCode.
    gco__CodeListValue_x005fType*        CI_x005fOnLineFunctionCode     1;	///< Required element.
    }>                                   __CI_x005fOnLineFunctionCode_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
};

/// "http://www.isotc211.org/2005/gmd":CI_DateTypeCode_PropertyType is a complexType.
/// class gmd__CI_x005fDateTypeCode_x005fPropertyType operations:
/// - soap_new_gmd__CI_x005fDateTypeCode_x005fPropertyType(soap*) allocate
/// - soap_new_gmd__CI_x005fDateTypeCode_x005fPropertyType(soap*, int num) allocate array
/// - soap_new_req_gmd__CI_x005fDateTypeCode_x005fPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__CI_x005fDateTypeCode_x005fPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__CI_x005fDateTypeCode_x005fPropertyType(soap*, gmd__CI_x005fDateTypeCode_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__CI_x005fDateTypeCode_x005fPropertyType(soap, gmd__CI_x005fDateTypeCode_x005fPropertyType*) serialize to a stream
class gmd__CI_x005fDateTypeCode_x005fPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gmd__CI_x005fDateTypeCode_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd":CI_DateTypeCode.
    gco__CodeListValue_x005fType*        CI_x005fDateTypeCode           1;	///< Required element.
    }>                                   __CI_x005fDateTypeCode_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
};

/// "http://www.isotc211.org/2005/gmd":RS_Identifier_PropertyType is a complexType.
/// class gmd__RS_x005fIdentifier_x005fPropertyType operations:
/// - soap_new_gmd__RS_x005fIdentifier_x005fPropertyType(soap*) allocate
/// - soap_new_gmd__RS_x005fIdentifier_x005fPropertyType(soap*, int num) allocate array
/// - soap_new_req_gmd__RS_x005fIdentifier_x005fPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__RS_x005fIdentifier_x005fPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__RS_x005fIdentifier_x005fPropertyType(soap*, gmd__RS_x005fIdentifier_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__RS_x005fIdentifier_x005fPropertyType(soap, gmd__RS_x005fIdentifier_x005fPropertyType*) serialize to a stream
class gmd__RS_x005fIdentifier_x005fPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gmd__RS_x005fIdentifier_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd":RS_Identifier.
    gmd__RS_x005fIdentifier_x005fType*   RS_x005fIdentifier             1;	///< Required element.
    }>                                   __RS_x005fIdentifier_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
/// Attribute uuidref of type xs:string.
   @std::string*                         uuidref                        0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.isotc211.org/2005/gmd":MD_ReferenceSystem_PropertyType is a complexType.
/// class gmd__MD_x005fReferenceSystem_x005fPropertyType operations:
/// - soap_new_gmd__MD_x005fReferenceSystem_x005fPropertyType(soap*) allocate
/// - soap_new_gmd__MD_x005fReferenceSystem_x005fPropertyType(soap*, int num) allocate array
/// - soap_new_req_gmd__MD_x005fReferenceSystem_x005fPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__MD_x005fReferenceSystem_x005fPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__MD_x005fReferenceSystem_x005fPropertyType(soap*, gmd__MD_x005fReferenceSystem_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fReferenceSystem_x005fPropertyType(soap, gmd__MD_x005fReferenceSystem_x005fPropertyType*) serialize to a stream
class gmd__MD_x005fReferenceSystem_x005fPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gmd__MD_x005fReferenceSystem_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd":MD_ReferenceSystem.
    gmd__MD_x005fReferenceSystem_x005fType*  MD_x005fReferenceSystem        1;	///< Required element.
    }>                                   __MD_x005fReferenceSystem_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
/// Attribute uuidref of type xs:string.
   @std::string*                         uuidref                        0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.isotc211.org/2005/gmd":MD_Identifier_PropertyType is a complexType.
/// class gmd__MD_x005fIdentifier_x005fPropertyType operations:
/// - soap_new_gmd__MD_x005fIdentifier_x005fPropertyType(soap*) allocate
/// - soap_new_gmd__MD_x005fIdentifier_x005fPropertyType(soap*, int num) allocate array
/// - soap_new_req_gmd__MD_x005fIdentifier_x005fPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__MD_x005fIdentifier_x005fPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__MD_x005fIdentifier_x005fPropertyType(soap*, gmd__MD_x005fIdentifier_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fIdentifier_x005fPropertyType(soap, gmd__MD_x005fIdentifier_x005fPropertyType*) serialize to a stream
class gmd__MD_x005fIdentifier_x005fPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gmd__MD_x005fIdentifier_x005fPropertyType_sequence
    {
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="MD_Identifier"> with elements <RS_Identifier>
   $int                                  __unionMD_x005fIdentifier      0;	///< Union _gmd__union_MD_x005fIdentifier_x005fPropertyType selector: set to SOAP_UNION__gmd__union_MD_x005fIdentifier_x005fPropertyType_<fieldname>
/// Union for substitutionGroup="MD_Identifier"
    union _gmd__union_MD_x005fIdentifier_x005fPropertyType
    {
/// Element reference "http://www.isotc211.org/2005/gmd":MD_Identifier.
    gmd__MD_x005fIdentifier_x005fType*   MD_x005fIdentifier             1;	///< Required element.
/// Element RS_Identifier of type "http://www.isotc211.org/2005/gmd":RS_Identifier_Type.
    gmd__RS_x005fIdentifier_x005fType*   RS_x005fIdentifier             1;	///< Required element.
    }                                    __union_MD_x005fIdentifier_x005fPropertyType;
//  END OF CHOICE OF SUBSTITUTIONS
    }>                                   __MD_x005fIdentifier_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
/// Attribute uuidref of type xs:string.
   @std::string*                         uuidref                        0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.isotc211.org/2005/gmd":RS_ReferenceSystem_PropertyType is a complexType.
/// class gmd__RS_x005fReferenceSystem_x005fPropertyType operations:
/// - soap_new_gmd__RS_x005fReferenceSystem_x005fPropertyType(soap*) allocate
/// - soap_new_gmd__RS_x005fReferenceSystem_x005fPropertyType(soap*, int num) allocate array
/// - soap_new_req_gmd__RS_x005fReferenceSystem_x005fPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__RS_x005fReferenceSystem_x005fPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__RS_x005fReferenceSystem_x005fPropertyType(soap*, gmd__RS_x005fReferenceSystem_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__RS_x005fReferenceSystem_x005fPropertyType(soap, gmd__RS_x005fReferenceSystem_x005fPropertyType*) serialize to a stream
class gmd__RS_x005fReferenceSystem_x005fPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gmd__RS_x005fReferenceSystem_x005fPropertyType_sequence
    {
/// Reference "http://www.isotc211.org/2005/gmd":AbstractRS_ReferenceSystem to abstract element.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractRS_ReferenceSystem"> with elements
   $int                                  __unionAbstractRS_x005fReferenceSystem 0;	///< Union _gmd__union_RS_x005fReferenceSystem_x005fPropertyType selector: set to SOAP_UNION__gmd__union_RS_x005fReferenceSystem_x005fPropertyType_<fieldname>
/// Union for substitutionGroup="AbstractRS_ReferenceSystem"
    union _gmd__union_RS_x005fReferenceSystem_x005fPropertyType
    {
    }                                    __union_RS_x005fReferenceSystem_x005fPropertyType;
//  END OF CHOICE OF SUBSTITUTIONS
    }>                                   __RS_x005fReferenceSystem_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
/// Attribute uuidref of type xs:string.
   @std::string*                         uuidref                        0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.isotc211.org/2005/gmd":EX_TemporalExtent_PropertyType is a complexType.
/// class gmd__EX_x005fTemporalExtent_x005fPropertyType operations:
/// - soap_new_gmd__EX_x005fTemporalExtent_x005fPropertyType(soap*) allocate
/// - soap_new_gmd__EX_x005fTemporalExtent_x005fPropertyType(soap*, int num) allocate array
/// - soap_new_req_gmd__EX_x005fTemporalExtent_x005fPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__EX_x005fTemporalExtent_x005fPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__EX_x005fTemporalExtent_x005fPropertyType(soap*, gmd__EX_x005fTemporalExtent_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__EX_x005fTemporalExtent_x005fPropertyType(soap, gmd__EX_x005fTemporalExtent_x005fPropertyType*) serialize to a stream
class gmd__EX_x005fTemporalExtent_x005fPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gmd__EX_x005fTemporalExtent_x005fPropertyType_sequence
    {
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="EX_TemporalExtent"> with elements <EX_SpatialTemporalExtent>
   $int                                  __unionEX_x005fTemporalExtent  0;	///< Union _gmd__union_EX_x005fTemporalExtent_x005fPropertyType selector: set to SOAP_UNION__gmd__union_EX_x005fTemporalExtent_x005fPropertyType_<fieldname>
/// Union for substitutionGroup="EX_TemporalExtent"
    union _gmd__union_EX_x005fTemporalExtent_x005fPropertyType
    {
/// Element reference "http://www.isotc211.org/2005/gmd":EX_TemporalExtent.
    gmd__EX_x005fTemporalExtent_x005fType*  EX_x005fTemporalExtent         1;	///< Required element.
/// Element EX_SpatialTemporalExtent of type "http://www.isotc211.org/2005/gmd":EX_SpatialTemporalExtent_Type.
    gmd__EX_x005fSpatialTemporalExtent_x005fType*  EX_x005fSpatialTemporalExtent  1;	///< Required element.
    }                                    __union_EX_x005fTemporalExtent_x005fPropertyType;
//  END OF CHOICE OF SUBSTITUTIONS
    }>                                   __EX_x005fTemporalExtent_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
/// Attribute uuidref of type xs:string.
   @std::string*                         uuidref                        0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.isotc211.org/2005/gmd":EX_VerticalExtent_PropertyType is a complexType.
/// class gmd__EX_x005fVerticalExtent_x005fPropertyType operations:
/// - soap_new_gmd__EX_x005fVerticalExtent_x005fPropertyType(soap*) allocate
/// - soap_new_gmd__EX_x005fVerticalExtent_x005fPropertyType(soap*, int num) allocate array
/// - soap_new_req_gmd__EX_x005fVerticalExtent_x005fPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__EX_x005fVerticalExtent_x005fPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__EX_x005fVerticalExtent_x005fPropertyType(soap*, gmd__EX_x005fVerticalExtent_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__EX_x005fVerticalExtent_x005fPropertyType(soap, gmd__EX_x005fVerticalExtent_x005fPropertyType*) serialize to a stream
class gmd__EX_x005fVerticalExtent_x005fPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gmd__EX_x005fVerticalExtent_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd":EX_VerticalExtent.
    gmd__EX_x005fVerticalExtent_x005fType*  EX_x005fVerticalExtent         1;	///< Required element.
    }>                                   __EX_x005fVerticalExtent_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
/// Attribute uuidref of type xs:string.
   @std::string*                         uuidref                        0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.isotc211.org/2005/gmd":EX_BoundingPolygon_PropertyType is a complexType.
/// class gmd__EX_x005fBoundingPolygon_x005fPropertyType operations:
/// - soap_new_gmd__EX_x005fBoundingPolygon_x005fPropertyType(soap*) allocate
/// - soap_new_gmd__EX_x005fBoundingPolygon_x005fPropertyType(soap*, int num) allocate array
/// - soap_new_req_gmd__EX_x005fBoundingPolygon_x005fPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__EX_x005fBoundingPolygon_x005fPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__EX_x005fBoundingPolygon_x005fPropertyType(soap*, gmd__EX_x005fBoundingPolygon_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__EX_x005fBoundingPolygon_x005fPropertyType(soap, gmd__EX_x005fBoundingPolygon_x005fPropertyType*) serialize to a stream
class gmd__EX_x005fBoundingPolygon_x005fPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gmd__EX_x005fBoundingPolygon_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd":EX_BoundingPolygon.
    gmd__EX_x005fBoundingPolygon_x005fType*  EX_x005fBoundingPolygon        1;	///< Required element.
    }>                                   __EX_x005fBoundingPolygon_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
/// Attribute uuidref of type xs:string.
   @std::string*                         uuidref                        0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.isotc211.org/2005/gmd":EX_Extent_PropertyType is a complexType.
/// class gmd__EX_x005fExtent_x005fPropertyType operations:
/// - soap_new_gmd__EX_x005fExtent_x005fPropertyType(soap*) allocate
/// - soap_new_gmd__EX_x005fExtent_x005fPropertyType(soap*, int num) allocate array
/// - soap_new_req_gmd__EX_x005fExtent_x005fPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__EX_x005fExtent_x005fPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__EX_x005fExtent_x005fPropertyType(soap*, gmd__EX_x005fExtent_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__EX_x005fExtent_x005fPropertyType(soap, gmd__EX_x005fExtent_x005fPropertyType*) serialize to a stream
class gmd__EX_x005fExtent_x005fPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gmd__EX_x005fExtent_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd":EX_Extent.
    gmd__EX_x005fExtent_x005fType*       EX_x005fExtent                 1;	///< Required element.
    }>                                   __EX_x005fExtent_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
/// Attribute uuidref of type xs:string.
   @std::string*                         uuidref                        0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.isotc211.org/2005/gmd":EX_GeographicExtent_PropertyType is a complexType.
/// class gmd__EX_x005fGeographicExtent_x005fPropertyType operations:
/// - soap_new_gmd__EX_x005fGeographicExtent_x005fPropertyType(soap*) allocate
/// - soap_new_gmd__EX_x005fGeographicExtent_x005fPropertyType(soap*, int num) allocate array
/// - soap_new_req_gmd__EX_x005fGeographicExtent_x005fPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__EX_x005fGeographicExtent_x005fPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__EX_x005fGeographicExtent_x005fPropertyType(soap*, gmd__EX_x005fGeographicExtent_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__EX_x005fGeographicExtent_x005fPropertyType(soap, gmd__EX_x005fGeographicExtent_x005fPropertyType*) serialize to a stream
class gmd__EX_x005fGeographicExtent_x005fPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gmd__EX_x005fGeographicExtent_x005fPropertyType_sequence
    {
/// Reference "http://www.isotc211.org/2005/gmd":AbstractEX_GeographicExtent to abstract element.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractEX_GeographicExtent"> with elements <EX_BoundingPolygon> <EX_GeographicBoundingBox> <EX_GeographicDescription>
   $int                                  __unionAbstractEX_x005fGeographicExtent 0;	///< Union _gmd__union_EX_x005fGeographicExtent_x005fPropertyType selector: set to SOAP_UNION__gmd__union_EX_x005fGeographicExtent_x005fPropertyType_<fieldname>
/// Union for substitutionGroup="AbstractEX_GeographicExtent"
    union _gmd__union_EX_x005fGeographicExtent_x005fPropertyType
    {
/// Element EX_BoundingPolygon of type "http://www.isotc211.org/2005/gmd":EX_BoundingPolygon_Type.
    gmd__EX_x005fBoundingPolygon_x005fType*  EX_x005fBoundingPolygon        1;	///< Required element.
/// Element EX_GeographicBoundingBox of type "http://www.isotc211.org/2005/gmd":EX_GeographicBoundingBox_Type.
    gmd__EX_x005fGeographicBoundingBox_x005fType*  EX_x005fGeographicBoundingBox  1;	///< Required element.
/// Element EX_GeographicDescription of type "http://www.isotc211.org/2005/gmd":EX_GeographicDescription_Type.
    gmd__EX_x005fGeographicDescription_x005fType*  EX_x005fGeographicDescription  1;	///< Required element.
    }                                    __union_EX_x005fGeographicExtent_x005fPropertyType;
//  END OF CHOICE OF SUBSTITUTIONS
    }>                                   __EX_x005fGeographicExtent_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
/// Attribute uuidref of type xs:string.
   @std::string*                         uuidref                        0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.isotc211.org/2005/gmd":EX_GeographicBoundingBox_PropertyType is a complexType.
/// class gmd__EX_x005fGeographicBoundingBox_x005fPropertyType operations:
/// - soap_new_gmd__EX_x005fGeographicBoundingBox_x005fPropertyType(soap*) allocate
/// - soap_new_gmd__EX_x005fGeographicBoundingBox_x005fPropertyType(soap*, int num) allocate array
/// - soap_new_req_gmd__EX_x005fGeographicBoundingBox_x005fPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__EX_x005fGeographicBoundingBox_x005fPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__EX_x005fGeographicBoundingBox_x005fPropertyType(soap*, gmd__EX_x005fGeographicBoundingBox_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__EX_x005fGeographicBoundingBox_x005fPropertyType(soap, gmd__EX_x005fGeographicBoundingBox_x005fPropertyType*) serialize to a stream
class gmd__EX_x005fGeographicBoundingBox_x005fPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gmd__EX_x005fGeographicBoundingBox_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd":EX_GeographicBoundingBox.
    gmd__EX_x005fGeographicBoundingBox_x005fType*  EX_x005fGeographicBoundingBox  1;	///< Required element.
    }>                                   __EX_x005fGeographicBoundingBox_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
/// Attribute uuidref of type xs:string.
   @std::string*                         uuidref                        0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.isotc211.org/2005/gmd":EX_SpatialTemporalExtent_PropertyType is a complexType.
/// class gmd__EX_x005fSpatialTemporalExtent_x005fPropertyType operations:
/// - soap_new_gmd__EX_x005fSpatialTemporalExtent_x005fPropertyType(soap*) allocate
/// - soap_new_gmd__EX_x005fSpatialTemporalExtent_x005fPropertyType(soap*, int num) allocate array
/// - soap_new_req_gmd__EX_x005fSpatialTemporalExtent_x005fPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__EX_x005fSpatialTemporalExtent_x005fPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__EX_x005fSpatialTemporalExtent_x005fPropertyType(soap*, gmd__EX_x005fSpatialTemporalExtent_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__EX_x005fSpatialTemporalExtent_x005fPropertyType(soap, gmd__EX_x005fSpatialTemporalExtent_x005fPropertyType*) serialize to a stream
class gmd__EX_x005fSpatialTemporalExtent_x005fPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gmd__EX_x005fSpatialTemporalExtent_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd":EX_SpatialTemporalExtent.
    gmd__EX_x005fSpatialTemporalExtent_x005fType*  EX_x005fSpatialTemporalExtent  1;	///< Required element.
    }>                                   __EX_x005fSpatialTemporalExtent_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
/// Attribute uuidref of type xs:string.
   @std::string*                         uuidref                        0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.isotc211.org/2005/gmd":EX_GeographicDescription_PropertyType is a complexType.
/// class gmd__EX_x005fGeographicDescription_x005fPropertyType operations:
/// - soap_new_gmd__EX_x005fGeographicDescription_x005fPropertyType(soap*) allocate
/// - soap_new_gmd__EX_x005fGeographicDescription_x005fPropertyType(soap*, int num) allocate array
/// - soap_new_req_gmd__EX_x005fGeographicDescription_x005fPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__EX_x005fGeographicDescription_x005fPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__EX_x005fGeographicDescription_x005fPropertyType(soap*, gmd__EX_x005fGeographicDescription_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__EX_x005fGeographicDescription_x005fPropertyType(soap, gmd__EX_x005fGeographicDescription_x005fPropertyType*) serialize to a stream
class gmd__EX_x005fGeographicDescription_x005fPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gmd__EX_x005fGeographicDescription_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd":EX_GeographicDescription.
    gmd__EX_x005fGeographicDescription_x005fType*  EX_x005fGeographicDescription  1;	///< Required element.
    }>                                   __EX_x005fGeographicDescription_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
/// Attribute uuidref of type xs:string.
   @std::string*                         uuidref                        0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.isotc211.org/2005/gmd":MD_ExtendedElementInformation_PropertyType is a complexType.
/// class gmd__MD_x005fExtendedElementInformation_x005fPropertyType operations:
/// - soap_new_gmd__MD_x005fExtendedElementInformation_x005fPropertyType(soap*) allocate
/// - soap_new_gmd__MD_x005fExtendedElementInformation_x005fPropertyType(soap*, int num) allocate array
/// - soap_new_req_gmd__MD_x005fExtendedElementInformation_x005fPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__MD_x005fExtendedElementInformation_x005fPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__MD_x005fExtendedElementInformation_x005fPropertyType(soap*, gmd__MD_x005fExtendedElementInformation_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fExtendedElementInformation_x005fPropertyType(soap, gmd__MD_x005fExtendedElementInformation_x005fPropertyType*) serialize to a stream
class gmd__MD_x005fExtendedElementInformation_x005fPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gmd__MD_x005fExtendedElementInformation_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd":MD_ExtendedElementInformation.
    gmd__MD_x005fExtendedElementInformation_x005fType*  MD_x005fExtendedElementInformation 1;	///< Required element.
    }>                                   __MD_x005fExtendedElementInformation_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
/// Attribute uuidref of type xs:string.
   @std::string*                         uuidref                        0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.isotc211.org/2005/gmd":MD_MetadataExtensionInformation_PropertyType is a complexType.
/// class gmd__MD_x005fMetadataExtensionInformation_x005fPropertyType operations:
/// - soap_new_gmd__MD_x005fMetadataExtensionInformation_x005fPropertyType(soap*) allocate
/// - soap_new_gmd__MD_x005fMetadataExtensionInformation_x005fPropertyType(soap*, int num) allocate array
/// - soap_new_req_gmd__MD_x005fMetadataExtensionInformation_x005fPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__MD_x005fMetadataExtensionInformation_x005fPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__MD_x005fMetadataExtensionInformation_x005fPropertyType(soap*, gmd__MD_x005fMetadataExtensionInformation_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fMetadataExtensionInformation_x005fPropertyType(soap, gmd__MD_x005fMetadataExtensionInformation_x005fPropertyType*) serialize to a stream
class gmd__MD_x005fMetadataExtensionInformation_x005fPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gmd__MD_x005fMetadataExtensionInformation_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd":MD_MetadataExtensionInformation.
    gmd__MD_x005fMetadataExtensionInformation_x005fType*  MD_x005fMetadataExtensionInformation 1;	///< Required element.
    }>                                   __MD_x005fMetadataExtensionInformation_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
/// Attribute uuidref of type xs:string.
   @std::string*                         uuidref                        0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.isotc211.org/2005/gmd":MD_ObligationCode_PropertyType is a complexType.
/// class gmd__MD_x005fObligationCode_x005fPropertyType operations:
/// - soap_new_gmd__MD_x005fObligationCode_x005fPropertyType(soap*) allocate
/// - soap_new_gmd__MD_x005fObligationCode_x005fPropertyType(soap*, int num) allocate array
/// - soap_new_req_gmd__MD_x005fObligationCode_x005fPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__MD_x005fObligationCode_x005fPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__MD_x005fObligationCode_x005fPropertyType(soap*, gmd__MD_x005fObligationCode_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fObligationCode_x005fPropertyType(soap, gmd__MD_x005fObligationCode_x005fPropertyType*) serialize to a stream
class gmd__MD_x005fObligationCode_x005fPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gmd__MD_x005fObligationCode_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd":MD_ObligationCode.
    enum gmd__MD_x005fObligationCode_x005fType  MD_x005fObligationCode         1;	///< Required element.
    }>                                   __MD_x005fObligationCode_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
};

/// "http://www.isotc211.org/2005/gmd":MD_DatatypeCode_PropertyType is a complexType.
/// class gmd__MD_x005fDatatypeCode_x005fPropertyType operations:
/// - soap_new_gmd__MD_x005fDatatypeCode_x005fPropertyType(soap*) allocate
/// - soap_new_gmd__MD_x005fDatatypeCode_x005fPropertyType(soap*, int num) allocate array
/// - soap_new_req_gmd__MD_x005fDatatypeCode_x005fPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__MD_x005fDatatypeCode_x005fPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__MD_x005fDatatypeCode_x005fPropertyType(soap*, gmd__MD_x005fDatatypeCode_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fDatatypeCode_x005fPropertyType(soap, gmd__MD_x005fDatatypeCode_x005fPropertyType*) serialize to a stream
class gmd__MD_x005fDatatypeCode_x005fPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gmd__MD_x005fDatatypeCode_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd":MD_DatatypeCode.
    gco__CodeListValue_x005fType*        MD_x005fDatatypeCode           1;	///< Required element.
    }>                                   __MD_x005fDatatypeCode_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
};

/// "http://www.isotc211.org/2005/gmd":MD_FeatureCatalogueDescription_PropertyType is a complexType.
/// class gmd__MD_x005fFeatureCatalogueDescription_x005fPropertyType operations:
/// - soap_new_gmd__MD_x005fFeatureCatalogueDescription_x005fPropertyType(soap*) allocate
/// - soap_new_gmd__MD_x005fFeatureCatalogueDescription_x005fPropertyType(soap*, int num) allocate array
/// - soap_new_req_gmd__MD_x005fFeatureCatalogueDescription_x005fPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__MD_x005fFeatureCatalogueDescription_x005fPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__MD_x005fFeatureCatalogueDescription_x005fPropertyType(soap*, gmd__MD_x005fFeatureCatalogueDescription_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fFeatureCatalogueDescription_x005fPropertyType(soap, gmd__MD_x005fFeatureCatalogueDescription_x005fPropertyType*) serialize to a stream
class gmd__MD_x005fFeatureCatalogueDescription_x005fPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gmd__MD_x005fFeatureCatalogueDescription_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd":MD_FeatureCatalogueDescription.
    gmd__MD_x005fFeatureCatalogueDescription_x005fType*  MD_x005fFeatureCatalogueDescription 1;	///< Required element.
    }>                                   __MD_x005fFeatureCatalogueDescription_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
/// Attribute uuidref of type xs:string.
   @std::string*                         uuidref                        0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.isotc211.org/2005/gmd":MD_CoverageDescription_PropertyType is a complexType.
/// class gmd__MD_x005fCoverageDescription_x005fPropertyType operations:
/// - soap_new_gmd__MD_x005fCoverageDescription_x005fPropertyType(soap*) allocate
/// - soap_new_gmd__MD_x005fCoverageDescription_x005fPropertyType(soap*, int num) allocate array
/// - soap_new_req_gmd__MD_x005fCoverageDescription_x005fPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__MD_x005fCoverageDescription_x005fPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__MD_x005fCoverageDescription_x005fPropertyType(soap*, gmd__MD_x005fCoverageDescription_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fCoverageDescription_x005fPropertyType(soap, gmd__MD_x005fCoverageDescription_x005fPropertyType*) serialize to a stream
class gmd__MD_x005fCoverageDescription_x005fPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gmd__MD_x005fCoverageDescription_x005fPropertyType_sequence
    {
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="MD_CoverageDescription"> with elements <MD_ImageDescription>
   $int                                  __unionMD_x005fCoverageDescription 0;	///< Union _gmd__union_MD_x005fCoverageDescription_x005fPropertyType selector: set to SOAP_UNION__gmd__union_MD_x005fCoverageDescription_x005fPropertyType_<fieldname>
/// Union for substitutionGroup="MD_CoverageDescription"
    union _gmd__union_MD_x005fCoverageDescription_x005fPropertyType
    {
/// Element reference "http://www.isotc211.org/2005/gmd":MD_CoverageDescription.
    gmd__MD_x005fCoverageDescription_x005fType*  MD_x005fCoverageDescription    1;	///< Required element.
/// Element MD_ImageDescription of type "http://www.isotc211.org/2005/gmd":MD_ImageDescription_Type.
    gmd__MD_x005fImageDescription_x005fType*  MD_x005fImageDescription       1;	///< Required element.
    }                                    __union_MD_x005fCoverageDescription_x005fPropertyType;
//  END OF CHOICE OF SUBSTITUTIONS
    }>                                   __MD_x005fCoverageDescription_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
/// Attribute uuidref of type xs:string.
   @std::string*                         uuidref                        0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.isotc211.org/2005/gmd":MD_ImageDescription_PropertyType is a complexType.
/// class gmd__MD_x005fImageDescription_x005fPropertyType operations:
/// - soap_new_gmd__MD_x005fImageDescription_x005fPropertyType(soap*) allocate
/// - soap_new_gmd__MD_x005fImageDescription_x005fPropertyType(soap*, int num) allocate array
/// - soap_new_req_gmd__MD_x005fImageDescription_x005fPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__MD_x005fImageDescription_x005fPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__MD_x005fImageDescription_x005fPropertyType(soap*, gmd__MD_x005fImageDescription_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fImageDescription_x005fPropertyType(soap, gmd__MD_x005fImageDescription_x005fPropertyType*) serialize to a stream
class gmd__MD_x005fImageDescription_x005fPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gmd__MD_x005fImageDescription_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd":MD_ImageDescription.
    gmd__MD_x005fImageDescription_x005fType*  MD_x005fImageDescription       1;	///< Required element.
    }>                                   __MD_x005fImageDescription_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
/// Attribute uuidref of type xs:string.
   @std::string*                         uuidref                        0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.isotc211.org/2005/gmd":MD_ContentInformation_PropertyType is a complexType.
/// class gmd__MD_x005fContentInformation_x005fPropertyType operations:
/// - soap_new_gmd__MD_x005fContentInformation_x005fPropertyType(soap*) allocate
/// - soap_new_gmd__MD_x005fContentInformation_x005fPropertyType(soap*, int num) allocate array
/// - soap_new_req_gmd__MD_x005fContentInformation_x005fPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__MD_x005fContentInformation_x005fPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__MD_x005fContentInformation_x005fPropertyType(soap*, gmd__MD_x005fContentInformation_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fContentInformation_x005fPropertyType(soap, gmd__MD_x005fContentInformation_x005fPropertyType*) serialize to a stream
class gmd__MD_x005fContentInformation_x005fPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gmd__MD_x005fContentInformation_x005fPropertyType_sequence
    {
/// Reference "http://www.isotc211.org/2005/gmd":AbstractMD_ContentInformation to abstract element.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractMD_ContentInformation"> with elements <MD_FeatureCatalogueDescription> <MD_CoverageDescription>
   $int                                  __unionAbstractMD_x005fContentInformation 0;	///< Union _gmd__union_MD_x005fContentInformation_x005fPropertyType selector: set to SOAP_UNION__gmd__union_MD_x005fContentInformation_x005fPropertyType_<fieldname>
/// Union for substitutionGroup="AbstractMD_ContentInformation"
    union _gmd__union_MD_x005fContentInformation_x005fPropertyType
    {
/// Element MD_FeatureCatalogueDescription of type "http://www.isotc211.org/2005/gmd":MD_FeatureCatalogueDescription_Type.
    gmd__MD_x005fFeatureCatalogueDescription_x005fType*  MD_x005fFeatureCatalogueDescription 1;	///< Required element.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="MD_CoverageDescription"> with elements <MD_ImageDescription>
/// Element MD_CoverageDescription of type "http://www.isotc211.org/2005/gmd":MD_CoverageDescription_Type.
    gmd__MD_x005fCoverageDescription_x005fType*  MD_x005fCoverageDescription    1;	///< Required element.
/// Element MD_ImageDescription of type "http://www.isotc211.org/2005/gmd":MD_ImageDescription_Type.
    gmd__MD_x005fImageDescription_x005fType*  MD_x005fImageDescription       1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
    }                                    __union_MD_x005fContentInformation_x005fPropertyType;
//  END OF CHOICE OF SUBSTITUTIONS
    }>                                   __MD_x005fContentInformation_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
/// Attribute uuidref of type xs:string.
   @std::string*                         uuidref                        0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.isotc211.org/2005/gmd":MD_RangeDimension_PropertyType is a complexType.
/// class gmd__MD_x005fRangeDimension_x005fPropertyType operations:
/// - soap_new_gmd__MD_x005fRangeDimension_x005fPropertyType(soap*) allocate
/// - soap_new_gmd__MD_x005fRangeDimension_x005fPropertyType(soap*, int num) allocate array
/// - soap_new_req_gmd__MD_x005fRangeDimension_x005fPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__MD_x005fRangeDimension_x005fPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__MD_x005fRangeDimension_x005fPropertyType(soap*, gmd__MD_x005fRangeDimension_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fRangeDimension_x005fPropertyType(soap, gmd__MD_x005fRangeDimension_x005fPropertyType*) serialize to a stream
class gmd__MD_x005fRangeDimension_x005fPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gmd__MD_x005fRangeDimension_x005fPropertyType_sequence
    {
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="MD_RangeDimension"> with elements <MD_Band>
   $int                                  __unionMD_x005fRangeDimension  0;	///< Union _gmd__union_MD_x005fRangeDimension_x005fPropertyType selector: set to SOAP_UNION__gmd__union_MD_x005fRangeDimension_x005fPropertyType_<fieldname>
/// Union for substitutionGroup="MD_RangeDimension"
    union _gmd__union_MD_x005fRangeDimension_x005fPropertyType
    {
/// Element reference "http://www.isotc211.org/2005/gmd":MD_RangeDimension.
    gmd__MD_x005fRangeDimension_x005fType*  MD_x005fRangeDimension         1;	///< Required element.
/// Element MD_Band of type "http://www.isotc211.org/2005/gmd":MD_Band_Type.
    gmd__MD_x005fBand_x005fType*         MD_x005fBand                   1;	///< Required element.
    }                                    __union_MD_x005fRangeDimension_x005fPropertyType;
//  END OF CHOICE OF SUBSTITUTIONS
    }>                                   __MD_x005fRangeDimension_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
/// Attribute uuidref of type xs:string.
   @std::string*                         uuidref                        0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.isotc211.org/2005/gmd":MD_Band_PropertyType is a complexType.
/// class gmd__MD_x005fBand_x005fPropertyType operations:
/// - soap_new_gmd__MD_x005fBand_x005fPropertyType(soap*) allocate
/// - soap_new_gmd__MD_x005fBand_x005fPropertyType(soap*, int num) allocate array
/// - soap_new_req_gmd__MD_x005fBand_x005fPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__MD_x005fBand_x005fPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__MD_x005fBand_x005fPropertyType(soap*, gmd__MD_x005fBand_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fBand_x005fPropertyType(soap, gmd__MD_x005fBand_x005fPropertyType*) serialize to a stream
class gmd__MD_x005fBand_x005fPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gmd__MD_x005fBand_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd":MD_Band.
    gmd__MD_x005fBand_x005fType*         MD_x005fBand                   1;	///< Required element.
    }>                                   __MD_x005fBand_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
/// Attribute uuidref of type xs:string.
   @std::string*                         uuidref                        0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.isotc211.org/2005/gmd":MD_CoverageContentTypeCode_PropertyType is a complexType.
/// class gmd__MD_x005fCoverageContentTypeCode_x005fPropertyType operations:
/// - soap_new_gmd__MD_x005fCoverageContentTypeCode_x005fPropertyType(soap*) allocate
/// - soap_new_gmd__MD_x005fCoverageContentTypeCode_x005fPropertyType(soap*, int num) allocate array
/// - soap_new_req_gmd__MD_x005fCoverageContentTypeCode_x005fPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__MD_x005fCoverageContentTypeCode_x005fPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__MD_x005fCoverageContentTypeCode_x005fPropertyType(soap*, gmd__MD_x005fCoverageContentTypeCode_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fCoverageContentTypeCode_x005fPropertyType(soap, gmd__MD_x005fCoverageContentTypeCode_x005fPropertyType*) serialize to a stream
class gmd__MD_x005fCoverageContentTypeCode_x005fPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gmd__MD_x005fCoverageContentTypeCode_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd":MD_CoverageContentTypeCode.
    gco__CodeListValue_x005fType*        MD_x005fCoverageContentTypeCode 1;	///< Required element.
    }>                                   __MD_x005fCoverageContentTypeCode_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
};

/// "http://www.isotc211.org/2005/gmd":MD_ImagingConditionCode_PropertyType is a complexType.
/// class gmd__MD_x005fImagingConditionCode_x005fPropertyType operations:
/// - soap_new_gmd__MD_x005fImagingConditionCode_x005fPropertyType(soap*) allocate
/// - soap_new_gmd__MD_x005fImagingConditionCode_x005fPropertyType(soap*, int num) allocate array
/// - soap_new_req_gmd__MD_x005fImagingConditionCode_x005fPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__MD_x005fImagingConditionCode_x005fPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__MD_x005fImagingConditionCode_x005fPropertyType(soap*, gmd__MD_x005fImagingConditionCode_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fImagingConditionCode_x005fPropertyType(soap, gmd__MD_x005fImagingConditionCode_x005fPropertyType*) serialize to a stream
class gmd__MD_x005fImagingConditionCode_x005fPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gmd__MD_x005fImagingConditionCode_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd":MD_ImagingConditionCode.
    gco__CodeListValue_x005fType*        MD_x005fImagingConditionCode   1;	///< Required element.
    }>                                   __MD_x005fImagingConditionCode_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
};

/// "http://www.isotc211.org/2005/gmd":MD_ApplicationSchemaInformation_PropertyType is a complexType.
/// class gmd__MD_x005fApplicationSchemaInformation_x005fPropertyType operations:
/// - soap_new_gmd__MD_x005fApplicationSchemaInformation_x005fPropertyType(soap*) allocate
/// - soap_new_gmd__MD_x005fApplicationSchemaInformation_x005fPropertyType(soap*, int num) allocate array
/// - soap_new_req_gmd__MD_x005fApplicationSchemaInformation_x005fPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__MD_x005fApplicationSchemaInformation_x005fPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__MD_x005fApplicationSchemaInformation_x005fPropertyType(soap*, gmd__MD_x005fApplicationSchemaInformation_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fApplicationSchemaInformation_x005fPropertyType(soap, gmd__MD_x005fApplicationSchemaInformation_x005fPropertyType*) serialize to a stream
class gmd__MD_x005fApplicationSchemaInformation_x005fPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gmd__MD_x005fApplicationSchemaInformation_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd":MD_ApplicationSchemaInformation.
    gmd__MD_x005fApplicationSchemaInformation_x005fType*  MD_x005fApplicationSchemaInformation 1;	///< Required element.
    }>                                   __MD_x005fApplicationSchemaInformation_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
/// Attribute uuidref of type xs:string.
   @std::string*                         uuidref                        0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.isotc211.org/2005/gmd":MD_PortrayalCatalogueReference_PropertyType is a complexType.
/// class gmd__MD_x005fPortrayalCatalogueReference_x005fPropertyType operations:
/// - soap_new_gmd__MD_x005fPortrayalCatalogueReference_x005fPropertyType(soap*) allocate
/// - soap_new_gmd__MD_x005fPortrayalCatalogueReference_x005fPropertyType(soap*, int num) allocate array
/// - soap_new_req_gmd__MD_x005fPortrayalCatalogueReference_x005fPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__MD_x005fPortrayalCatalogueReference_x005fPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__MD_x005fPortrayalCatalogueReference_x005fPropertyType(soap*, gmd__MD_x005fPortrayalCatalogueReference_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fPortrayalCatalogueReference_x005fPropertyType(soap, gmd__MD_x005fPortrayalCatalogueReference_x005fPropertyType*) serialize to a stream
class gmd__MD_x005fPortrayalCatalogueReference_x005fPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gmd__MD_x005fPortrayalCatalogueReference_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd":MD_PortrayalCatalogueReference.
    gmd__MD_x005fPortrayalCatalogueReference_x005fType*  MD_x005fPortrayalCatalogueReference 1;	///< Required element.
    }>                                   __MD_x005fPortrayalCatalogueReference_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
/// Attribute uuidref of type xs:string.
   @std::string*                         uuidref                        0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.isotc211.org/2005/gmd":LI_ProcessStep_PropertyType is a complexType.
/// class gmd__LI_x005fProcessStep_x005fPropertyType operations:
/// - soap_new_gmd__LI_x005fProcessStep_x005fPropertyType(soap*) allocate
/// - soap_new_gmd__LI_x005fProcessStep_x005fPropertyType(soap*, int num) allocate array
/// - soap_new_req_gmd__LI_x005fProcessStep_x005fPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__LI_x005fProcessStep_x005fPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__LI_x005fProcessStep_x005fPropertyType(soap*, gmd__LI_x005fProcessStep_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__LI_x005fProcessStep_x005fPropertyType(soap, gmd__LI_x005fProcessStep_x005fPropertyType*) serialize to a stream
class gmd__LI_x005fProcessStep_x005fPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gmd__LI_x005fProcessStep_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd":LI_ProcessStep.
    gmd__LI_x005fProcessStep_x005fType*  LI_x005fProcessStep            1;	///< Required element.
    }>                                   __LI_x005fProcessStep_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
/// Attribute uuidref of type xs:string.
   @std::string*                         uuidref                        0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.isotc211.org/2005/gmd":LI_Source_PropertyType is a complexType.
/// class gmd__LI_x005fSource_x005fPropertyType operations:
/// - soap_new_gmd__LI_x005fSource_x005fPropertyType(soap*) allocate
/// - soap_new_gmd__LI_x005fSource_x005fPropertyType(soap*, int num) allocate array
/// - soap_new_req_gmd__LI_x005fSource_x005fPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__LI_x005fSource_x005fPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__LI_x005fSource_x005fPropertyType(soap*, gmd__LI_x005fSource_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__LI_x005fSource_x005fPropertyType(soap, gmd__LI_x005fSource_x005fPropertyType*) serialize to a stream
class gmd__LI_x005fSource_x005fPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gmd__LI_x005fSource_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd":LI_Source.
    gmd__LI_x005fSource_x005fType*       LI_x005fSource                 1;	///< Required element.
    }>                                   __LI_x005fSource_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
/// Attribute uuidref of type xs:string.
   @std::string*                         uuidref                        0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.isotc211.org/2005/gmd":LI_Lineage_PropertyType is a complexType.
/// class gmd__LI_x005fLineage_x005fPropertyType operations:
/// - soap_new_gmd__LI_x005fLineage_x005fPropertyType(soap*) allocate
/// - soap_new_gmd__LI_x005fLineage_x005fPropertyType(soap*, int num) allocate array
/// - soap_new_req_gmd__LI_x005fLineage_x005fPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__LI_x005fLineage_x005fPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__LI_x005fLineage_x005fPropertyType(soap*, gmd__LI_x005fLineage_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__LI_x005fLineage_x005fPropertyType(soap, gmd__LI_x005fLineage_x005fPropertyType*) serialize to a stream
class gmd__LI_x005fLineage_x005fPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gmd__LI_x005fLineage_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd":LI_Lineage.
    gmd__LI_x005fLineage_x005fType*      LI_x005fLineage                1;	///< Required element.
    }>                                   __LI_x005fLineage_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
/// Attribute uuidref of type xs:string.
   @std::string*                         uuidref                        0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.isotc211.org/2005/gmd":DQ_ConformanceResult_PropertyType is a complexType.
/// class gmd__DQ_x005fConformanceResult_x005fPropertyType operations:
/// - soap_new_gmd__DQ_x005fConformanceResult_x005fPropertyType(soap*) allocate
/// - soap_new_gmd__DQ_x005fConformanceResult_x005fPropertyType(soap*, int num) allocate array
/// - soap_new_req_gmd__DQ_x005fConformanceResult_x005fPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__DQ_x005fConformanceResult_x005fPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__DQ_x005fConformanceResult_x005fPropertyType(soap*, gmd__DQ_x005fConformanceResult_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__DQ_x005fConformanceResult_x005fPropertyType(soap, gmd__DQ_x005fConformanceResult_x005fPropertyType*) serialize to a stream
class gmd__DQ_x005fConformanceResult_x005fPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gmd__DQ_x005fConformanceResult_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd":DQ_ConformanceResult.
    gmd__DQ_x005fConformanceResult_x005fType*  DQ_x005fConformanceResult      1;	///< Required element.
    }>                                   __DQ_x005fConformanceResult_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
/// Attribute uuidref of type xs:string.
   @std::string*                         uuidref                        0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.isotc211.org/2005/gmd":DQ_QuantitativeResult_PropertyType is a complexType.
/// class gmd__DQ_x005fQuantitativeResult_x005fPropertyType operations:
/// - soap_new_gmd__DQ_x005fQuantitativeResult_x005fPropertyType(soap*) allocate
/// - soap_new_gmd__DQ_x005fQuantitativeResult_x005fPropertyType(soap*, int num) allocate array
/// - soap_new_req_gmd__DQ_x005fQuantitativeResult_x005fPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__DQ_x005fQuantitativeResult_x005fPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__DQ_x005fQuantitativeResult_x005fPropertyType(soap*, gmd__DQ_x005fQuantitativeResult_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__DQ_x005fQuantitativeResult_x005fPropertyType(soap, gmd__DQ_x005fQuantitativeResult_x005fPropertyType*) serialize to a stream
class gmd__DQ_x005fQuantitativeResult_x005fPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gmd__DQ_x005fQuantitativeResult_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd":DQ_QuantitativeResult.
    gmd__DQ_x005fQuantitativeResult_x005fType*  DQ_x005fQuantitativeResult     1;	///< Required element.
    }>                                   __DQ_x005fQuantitativeResult_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
/// Attribute uuidref of type xs:string.
   @std::string*                         uuidref                        0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.isotc211.org/2005/gmd":DQ_Result_PropertyType is a complexType.
/// class gmd__DQ_x005fResult_x005fPropertyType operations:
/// - soap_new_gmd__DQ_x005fResult_x005fPropertyType(soap*) allocate
/// - soap_new_gmd__DQ_x005fResult_x005fPropertyType(soap*, int num) allocate array
/// - soap_new_req_gmd__DQ_x005fResult_x005fPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__DQ_x005fResult_x005fPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__DQ_x005fResult_x005fPropertyType(soap*, gmd__DQ_x005fResult_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__DQ_x005fResult_x005fPropertyType(soap, gmd__DQ_x005fResult_x005fPropertyType*) serialize to a stream
class gmd__DQ_x005fResult_x005fPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gmd__DQ_x005fResult_x005fPropertyType_sequence
    {
/// Reference "http://www.isotc211.org/2005/gmd":AbstractDQ_Result to abstract element.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractDQ_Result"> with elements <DQ_ConformanceResult> <DQ_QuantitativeResult>
   $int                                  __unionAbstractDQ_x005fResult  0;	///< Union _gmd__union_DQ_x005fResult_x005fPropertyType selector: set to SOAP_UNION__gmd__union_DQ_x005fResult_x005fPropertyType_<fieldname>
/// Union for substitutionGroup="AbstractDQ_Result"
    union _gmd__union_DQ_x005fResult_x005fPropertyType
    {
/// Element DQ_ConformanceResult of type "http://www.isotc211.org/2005/gmd":DQ_ConformanceResult_Type.
    gmd__DQ_x005fConformanceResult_x005fType*  DQ_x005fConformanceResult      1;	///< Required element.
/// Element DQ_QuantitativeResult of type "http://www.isotc211.org/2005/gmd":DQ_QuantitativeResult_Type.
    gmd__DQ_x005fQuantitativeResult_x005fType*  DQ_x005fQuantitativeResult     1;	///< Required element.
    }                                    __union_DQ_x005fResult_x005fPropertyType;
//  END OF CHOICE OF SUBSTITUTIONS
    }>                                   __DQ_x005fResult_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
/// Attribute uuidref of type xs:string.
   @std::string*                         uuidref                        0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.isotc211.org/2005/gmd":DQ_TemporalValidity_PropertyType is a complexType.
/// class gmd__DQ_x005fTemporalValidity_x005fPropertyType operations:
/// - soap_new_gmd__DQ_x005fTemporalValidity_x005fPropertyType(soap*) allocate
/// - soap_new_gmd__DQ_x005fTemporalValidity_x005fPropertyType(soap*, int num) allocate array
/// - soap_new_req_gmd__DQ_x005fTemporalValidity_x005fPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__DQ_x005fTemporalValidity_x005fPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__DQ_x005fTemporalValidity_x005fPropertyType(soap*, gmd__DQ_x005fTemporalValidity_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__DQ_x005fTemporalValidity_x005fPropertyType(soap, gmd__DQ_x005fTemporalValidity_x005fPropertyType*) serialize to a stream
class gmd__DQ_x005fTemporalValidity_x005fPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gmd__DQ_x005fTemporalValidity_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd":DQ_TemporalValidity.
    gmd__DQ_x005fTemporalValidity_x005fType*  DQ_x005fTemporalValidity       1;	///< Required element.
    }>                                   __DQ_x005fTemporalValidity_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
/// Attribute uuidref of type xs:string.
   @std::string*                         uuidref                        0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.isotc211.org/2005/gmd":DQ_TemporalConsistency_PropertyType is a complexType.
/// class gmd__DQ_x005fTemporalConsistency_x005fPropertyType operations:
/// - soap_new_gmd__DQ_x005fTemporalConsistency_x005fPropertyType(soap*) allocate
/// - soap_new_gmd__DQ_x005fTemporalConsistency_x005fPropertyType(soap*, int num) allocate array
/// - soap_new_req_gmd__DQ_x005fTemporalConsistency_x005fPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__DQ_x005fTemporalConsistency_x005fPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__DQ_x005fTemporalConsistency_x005fPropertyType(soap*, gmd__DQ_x005fTemporalConsistency_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__DQ_x005fTemporalConsistency_x005fPropertyType(soap, gmd__DQ_x005fTemporalConsistency_x005fPropertyType*) serialize to a stream
class gmd__DQ_x005fTemporalConsistency_x005fPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gmd__DQ_x005fTemporalConsistency_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd":DQ_TemporalConsistency.
    gmd__DQ_x005fTemporalConsistency_x005fType*  DQ_x005fTemporalConsistency    1;	///< Required element.
    }>                                   __DQ_x005fTemporalConsistency_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
/// Attribute uuidref of type xs:string.
   @std::string*                         uuidref                        0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.isotc211.org/2005/gmd":DQ_AccuracyOfATimeMeasurement_PropertyType is a complexType.
/// class gmd__DQ_x005fAccuracyOfATimeMeasurement_x005fPropertyType operations:
/// - soap_new_gmd__DQ_x005fAccuracyOfATimeMeasurement_x005fPropertyType(soap*) allocate
/// - soap_new_gmd__DQ_x005fAccuracyOfATimeMeasurement_x005fPropertyType(soap*, int num) allocate array
/// - soap_new_req_gmd__DQ_x005fAccuracyOfATimeMeasurement_x005fPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__DQ_x005fAccuracyOfATimeMeasurement_x005fPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__DQ_x005fAccuracyOfATimeMeasurement_x005fPropertyType(soap*, gmd__DQ_x005fAccuracyOfATimeMeasurement_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__DQ_x005fAccuracyOfATimeMeasurement_x005fPropertyType(soap, gmd__DQ_x005fAccuracyOfATimeMeasurement_x005fPropertyType*) serialize to a stream
class gmd__DQ_x005fAccuracyOfATimeMeasurement_x005fPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gmd__DQ_x005fAccuracyOfATimeMeasurement_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd":DQ_AccuracyOfATimeMeasurement.
    gmd__DQ_x005fAccuracyOfATimeMeasurement_x005fType*  DQ_x005fAccuracyOfATimeMeasurement 1;	///< Required element.
    }>                                   __DQ_x005fAccuracyOfATimeMeasurement_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
/// Attribute uuidref of type xs:string.
   @std::string*                         uuidref                        0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.isotc211.org/2005/gmd":DQ_QuantitativeAttributeAccuracy_PropertyType is a complexType.
/// class gmd__DQ_x005fQuantitativeAttributeAccuracy_x005fPropertyType operations:
/// - soap_new_gmd__DQ_x005fQuantitativeAttributeAccuracy_x005fPropertyType(soap*) allocate
/// - soap_new_gmd__DQ_x005fQuantitativeAttributeAccuracy_x005fPropertyType(soap*, int num) allocate array
/// - soap_new_req_gmd__DQ_x005fQuantitativeAttributeAccuracy_x005fPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__DQ_x005fQuantitativeAttributeAccuracy_x005fPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__DQ_x005fQuantitativeAttributeAccuracy_x005fPropertyType(soap*, gmd__DQ_x005fQuantitativeAttributeAccuracy_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__DQ_x005fQuantitativeAttributeAccuracy_x005fPropertyType(soap, gmd__DQ_x005fQuantitativeAttributeAccuracy_x005fPropertyType*) serialize to a stream
class gmd__DQ_x005fQuantitativeAttributeAccuracy_x005fPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gmd__DQ_x005fQuantitativeAttributeAccuracy_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd":DQ_QuantitativeAttributeAccuracy.
    gmd__DQ_x005fQuantitativeAttributeAccuracy_x005fType*  DQ_x005fQuantitativeAttributeAccuracy 1;	///< Required element.
    }>                                   __DQ_x005fQuantitativeAttributeAccuracy_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
/// Attribute uuidref of type xs:string.
   @std::string*                         uuidref                        0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.isotc211.org/2005/gmd":DQ_NonQuantitativeAttributeAccuracy_PropertyType is a complexType.
/// class gmd__DQ_x005fNonQuantitativeAttributeAccuracy_x005fPropertyType operations:
/// - soap_new_gmd__DQ_x005fNonQuantitativeAttributeAccuracy_x005fPropertyType(soap*) allocate
/// - soap_new_gmd__DQ_x005fNonQuantitativeAttributeAccuracy_x005fPropertyType(soap*, int num) allocate array
/// - soap_new_req_gmd__DQ_x005fNonQuantitativeAttributeAccuracy_x005fPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__DQ_x005fNonQuantitativeAttributeAccuracy_x005fPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__DQ_x005fNonQuantitativeAttributeAccuracy_x005fPropertyType(soap*, gmd__DQ_x005fNonQuantitativeAttributeAccuracy_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__DQ_x005fNonQuantitativeAttributeAccuracy_x005fPropertyType(soap, gmd__DQ_x005fNonQuantitativeAttributeAccuracy_x005fPropertyType*) serialize to a stream
class gmd__DQ_x005fNonQuantitativeAttributeAccuracy_x005fPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gmd__DQ_x005fNonQuantitativeAttributeAccuracy_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd":DQ_NonQuantitativeAttributeAccuracy.
    gmd__DQ_x005fNonQuantitativeAttributeAccuracy_x005fType*  DQ_x005fNonQuantitativeAttributeAccuracy 1;	///< Required element.
    }>                                   __DQ_x005fNonQuantitativeAttributeAccuracy_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
/// Attribute uuidref of type xs:string.
   @std::string*                         uuidref                        0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.isotc211.org/2005/gmd":DQ_ThematicClassificationCorrectness_PropertyType is a complexType.
/// class gmd__DQ_x005fThematicClassificationCorrectness_x005fPropertyType operations:
/// - soap_new_gmd__DQ_x005fThematicClassificationCorrectness_x005fPropertyType(soap*) allocate
/// - soap_new_gmd__DQ_x005fThematicClassificationCorrectness_x005fPropertyType(soap*, int num) allocate array
/// - soap_new_req_gmd__DQ_x005fThematicClassificationCorrectness_x005fPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__DQ_x005fThematicClassificationCorrectness_x005fPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__DQ_x005fThematicClassificationCorrectness_x005fPropertyType(soap*, gmd__DQ_x005fThematicClassificationCorrectness_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__DQ_x005fThematicClassificationCorrectness_x005fPropertyType(soap, gmd__DQ_x005fThematicClassificationCorrectness_x005fPropertyType*) serialize to a stream
class gmd__DQ_x005fThematicClassificationCorrectness_x005fPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gmd__DQ_x005fThematicClassificationCorrectness_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd":DQ_ThematicClassificationCorrectness.
    gmd__DQ_x005fThematicClassificationCorrectness_x005fType*  DQ_x005fThematicClassificationCorrectness 1;	///< Required element.
    }>                                   __DQ_x005fThematicClassificationCorrectness_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
/// Attribute uuidref of type xs:string.
   @std::string*                         uuidref                        0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.isotc211.org/2005/gmd":DQ_RelativeInternalPositionalAccuracy_PropertyType is a complexType.
/// class gmd__DQ_x005fRelativeInternalPositionalAccuracy_x005fPropertyType operations:
/// - soap_new_gmd__DQ_x005fRelativeInternalPositionalAccuracy_x005fPropertyType(soap*) allocate
/// - soap_new_gmd__DQ_x005fRelativeInternalPositionalAccuracy_x005fPropertyType(soap*, int num) allocate array
/// - soap_new_req_gmd__DQ_x005fRelativeInternalPositionalAccuracy_x005fPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__DQ_x005fRelativeInternalPositionalAccuracy_x005fPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__DQ_x005fRelativeInternalPositionalAccuracy_x005fPropertyType(soap*, gmd__DQ_x005fRelativeInternalPositionalAccuracy_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__DQ_x005fRelativeInternalPositionalAccuracy_x005fPropertyType(soap, gmd__DQ_x005fRelativeInternalPositionalAccuracy_x005fPropertyType*) serialize to a stream
class gmd__DQ_x005fRelativeInternalPositionalAccuracy_x005fPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gmd__DQ_x005fRelativeInternalPositionalAccuracy_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd":DQ_RelativeInternalPositionalAccuracy.
    gmd__DQ_x005fRelativeInternalPositionalAccuracy_x005fType*  DQ_x005fRelativeInternalPositionalAccuracy 1;	///< Required element.
    }>                                   __DQ_x005fRelativeInternalPositionalAccuracy_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
/// Attribute uuidref of type xs:string.
   @std::string*                         uuidref                        0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.isotc211.org/2005/gmd":DQ_GriddedDataPositionalAccuracy_PropertyType is a complexType.
/// class gmd__DQ_x005fGriddedDataPositionalAccuracy_x005fPropertyType operations:
/// - soap_new_gmd__DQ_x005fGriddedDataPositionalAccuracy_x005fPropertyType(soap*) allocate
/// - soap_new_gmd__DQ_x005fGriddedDataPositionalAccuracy_x005fPropertyType(soap*, int num) allocate array
/// - soap_new_req_gmd__DQ_x005fGriddedDataPositionalAccuracy_x005fPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__DQ_x005fGriddedDataPositionalAccuracy_x005fPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__DQ_x005fGriddedDataPositionalAccuracy_x005fPropertyType(soap*, gmd__DQ_x005fGriddedDataPositionalAccuracy_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__DQ_x005fGriddedDataPositionalAccuracy_x005fPropertyType(soap, gmd__DQ_x005fGriddedDataPositionalAccuracy_x005fPropertyType*) serialize to a stream
class gmd__DQ_x005fGriddedDataPositionalAccuracy_x005fPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gmd__DQ_x005fGriddedDataPositionalAccuracy_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd":DQ_GriddedDataPositionalAccuracy.
    gmd__DQ_x005fGriddedDataPositionalAccuracy_x005fType*  DQ_x005fGriddedDataPositionalAccuracy 1;	///< Required element.
    }>                                   __DQ_x005fGriddedDataPositionalAccuracy_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
/// Attribute uuidref of type xs:string.
   @std::string*                         uuidref                        0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.isotc211.org/2005/gmd":DQ_AbsoluteExternalPositionalAccuracy_PropertyType is a complexType.
/// class gmd__DQ_x005fAbsoluteExternalPositionalAccuracy_x005fPropertyType operations:
/// - soap_new_gmd__DQ_x005fAbsoluteExternalPositionalAccuracy_x005fPropertyType(soap*) allocate
/// - soap_new_gmd__DQ_x005fAbsoluteExternalPositionalAccuracy_x005fPropertyType(soap*, int num) allocate array
/// - soap_new_req_gmd__DQ_x005fAbsoluteExternalPositionalAccuracy_x005fPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__DQ_x005fAbsoluteExternalPositionalAccuracy_x005fPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__DQ_x005fAbsoluteExternalPositionalAccuracy_x005fPropertyType(soap*, gmd__DQ_x005fAbsoluteExternalPositionalAccuracy_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__DQ_x005fAbsoluteExternalPositionalAccuracy_x005fPropertyType(soap, gmd__DQ_x005fAbsoluteExternalPositionalAccuracy_x005fPropertyType*) serialize to a stream
class gmd__DQ_x005fAbsoluteExternalPositionalAccuracy_x005fPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gmd__DQ_x005fAbsoluteExternalPositionalAccuracy_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd":DQ_AbsoluteExternalPositionalAccuracy.
    gmd__DQ_x005fAbsoluteExternalPositionalAccuracy_x005fType*  DQ_x005fAbsoluteExternalPositionalAccuracy 1;	///< Required element.
    }>                                   __DQ_x005fAbsoluteExternalPositionalAccuracy_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
/// Attribute uuidref of type xs:string.
   @std::string*                         uuidref                        0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.isotc211.org/2005/gmd":DQ_TopologicalConsistency_PropertyType is a complexType.
/// class gmd__DQ_x005fTopologicalConsistency_x005fPropertyType operations:
/// - soap_new_gmd__DQ_x005fTopologicalConsistency_x005fPropertyType(soap*) allocate
/// - soap_new_gmd__DQ_x005fTopologicalConsistency_x005fPropertyType(soap*, int num) allocate array
/// - soap_new_req_gmd__DQ_x005fTopologicalConsistency_x005fPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__DQ_x005fTopologicalConsistency_x005fPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__DQ_x005fTopologicalConsistency_x005fPropertyType(soap*, gmd__DQ_x005fTopologicalConsistency_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__DQ_x005fTopologicalConsistency_x005fPropertyType(soap, gmd__DQ_x005fTopologicalConsistency_x005fPropertyType*) serialize to a stream
class gmd__DQ_x005fTopologicalConsistency_x005fPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gmd__DQ_x005fTopologicalConsistency_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd":DQ_TopologicalConsistency.
    gmd__DQ_x005fTopologicalConsistency_x005fType*  DQ_x005fTopologicalConsistency 1;	///< Required element.
    }>                                   __DQ_x005fTopologicalConsistency_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
/// Attribute uuidref of type xs:string.
   @std::string*                         uuidref                        0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.isotc211.org/2005/gmd":DQ_FormatConsistency_PropertyType is a complexType.
/// class gmd__DQ_x005fFormatConsistency_x005fPropertyType operations:
/// - soap_new_gmd__DQ_x005fFormatConsistency_x005fPropertyType(soap*) allocate
/// - soap_new_gmd__DQ_x005fFormatConsistency_x005fPropertyType(soap*, int num) allocate array
/// - soap_new_req_gmd__DQ_x005fFormatConsistency_x005fPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__DQ_x005fFormatConsistency_x005fPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__DQ_x005fFormatConsistency_x005fPropertyType(soap*, gmd__DQ_x005fFormatConsistency_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__DQ_x005fFormatConsistency_x005fPropertyType(soap, gmd__DQ_x005fFormatConsistency_x005fPropertyType*) serialize to a stream
class gmd__DQ_x005fFormatConsistency_x005fPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gmd__DQ_x005fFormatConsistency_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd":DQ_FormatConsistency.
    gmd__DQ_x005fFormatConsistency_x005fType*  DQ_x005fFormatConsistency      1;	///< Required element.
    }>                                   __DQ_x005fFormatConsistency_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
/// Attribute uuidref of type xs:string.
   @std::string*                         uuidref                        0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.isotc211.org/2005/gmd":DQ_DomainConsistency_PropertyType is a complexType.
/// class gmd__DQ_x005fDomainConsistency_x005fPropertyType operations:
/// - soap_new_gmd__DQ_x005fDomainConsistency_x005fPropertyType(soap*) allocate
/// - soap_new_gmd__DQ_x005fDomainConsistency_x005fPropertyType(soap*, int num) allocate array
/// - soap_new_req_gmd__DQ_x005fDomainConsistency_x005fPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__DQ_x005fDomainConsistency_x005fPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__DQ_x005fDomainConsistency_x005fPropertyType(soap*, gmd__DQ_x005fDomainConsistency_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__DQ_x005fDomainConsistency_x005fPropertyType(soap, gmd__DQ_x005fDomainConsistency_x005fPropertyType*) serialize to a stream
class gmd__DQ_x005fDomainConsistency_x005fPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gmd__DQ_x005fDomainConsistency_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd":DQ_DomainConsistency.
    gmd__DQ_x005fDomainConsistency_x005fType*  DQ_x005fDomainConsistency      1;	///< Required element.
    }>                                   __DQ_x005fDomainConsistency_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
/// Attribute uuidref of type xs:string.
   @std::string*                         uuidref                        0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.isotc211.org/2005/gmd":DQ_ConceptualConsistency_PropertyType is a complexType.
/// class gmd__DQ_x005fConceptualConsistency_x005fPropertyType operations:
/// - soap_new_gmd__DQ_x005fConceptualConsistency_x005fPropertyType(soap*) allocate
/// - soap_new_gmd__DQ_x005fConceptualConsistency_x005fPropertyType(soap*, int num) allocate array
/// - soap_new_req_gmd__DQ_x005fConceptualConsistency_x005fPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__DQ_x005fConceptualConsistency_x005fPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__DQ_x005fConceptualConsistency_x005fPropertyType(soap*, gmd__DQ_x005fConceptualConsistency_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__DQ_x005fConceptualConsistency_x005fPropertyType(soap, gmd__DQ_x005fConceptualConsistency_x005fPropertyType*) serialize to a stream
class gmd__DQ_x005fConceptualConsistency_x005fPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gmd__DQ_x005fConceptualConsistency_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd":DQ_ConceptualConsistency.
    gmd__DQ_x005fConceptualConsistency_x005fType*  DQ_x005fConceptualConsistency  1;	///< Required element.
    }>                                   __DQ_x005fConceptualConsistency_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
/// Attribute uuidref of type xs:string.
   @std::string*                         uuidref                        0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.isotc211.org/2005/gmd":DQ_CompletenessOmission_PropertyType is a complexType.
/// class gmd__DQ_x005fCompletenessOmission_x005fPropertyType operations:
/// - soap_new_gmd__DQ_x005fCompletenessOmission_x005fPropertyType(soap*) allocate
/// - soap_new_gmd__DQ_x005fCompletenessOmission_x005fPropertyType(soap*, int num) allocate array
/// - soap_new_req_gmd__DQ_x005fCompletenessOmission_x005fPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__DQ_x005fCompletenessOmission_x005fPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__DQ_x005fCompletenessOmission_x005fPropertyType(soap*, gmd__DQ_x005fCompletenessOmission_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__DQ_x005fCompletenessOmission_x005fPropertyType(soap, gmd__DQ_x005fCompletenessOmission_x005fPropertyType*) serialize to a stream
class gmd__DQ_x005fCompletenessOmission_x005fPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gmd__DQ_x005fCompletenessOmission_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd":DQ_CompletenessOmission.
    gmd__DQ_x005fCompletenessOmission_x005fType*  DQ_x005fCompletenessOmission   1;	///< Required element.
    }>                                   __DQ_x005fCompletenessOmission_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
/// Attribute uuidref of type xs:string.
   @std::string*                         uuidref                        0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.isotc211.org/2005/gmd":DQ_CompletenessCommission_PropertyType is a complexType.
/// class gmd__DQ_x005fCompletenessCommission_x005fPropertyType operations:
/// - soap_new_gmd__DQ_x005fCompletenessCommission_x005fPropertyType(soap*) allocate
/// - soap_new_gmd__DQ_x005fCompletenessCommission_x005fPropertyType(soap*, int num) allocate array
/// - soap_new_req_gmd__DQ_x005fCompletenessCommission_x005fPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__DQ_x005fCompletenessCommission_x005fPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__DQ_x005fCompletenessCommission_x005fPropertyType(soap*, gmd__DQ_x005fCompletenessCommission_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__DQ_x005fCompletenessCommission_x005fPropertyType(soap, gmd__DQ_x005fCompletenessCommission_x005fPropertyType*) serialize to a stream
class gmd__DQ_x005fCompletenessCommission_x005fPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gmd__DQ_x005fCompletenessCommission_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd":DQ_CompletenessCommission.
    gmd__DQ_x005fCompletenessCommission_x005fType*  DQ_x005fCompletenessCommission 1;	///< Required element.
    }>                                   __DQ_x005fCompletenessCommission_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
/// Attribute uuidref of type xs:string.
   @std::string*                         uuidref                        0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.isotc211.org/2005/gmd":DQ_TemporalAccuracy_PropertyType is a complexType.
/// class gmd__DQ_x005fTemporalAccuracy_x005fPropertyType operations:
/// - soap_new_gmd__DQ_x005fTemporalAccuracy_x005fPropertyType(soap*) allocate
/// - soap_new_gmd__DQ_x005fTemporalAccuracy_x005fPropertyType(soap*, int num) allocate array
/// - soap_new_req_gmd__DQ_x005fTemporalAccuracy_x005fPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__DQ_x005fTemporalAccuracy_x005fPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__DQ_x005fTemporalAccuracy_x005fPropertyType(soap*, gmd__DQ_x005fTemporalAccuracy_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__DQ_x005fTemporalAccuracy_x005fPropertyType(soap, gmd__DQ_x005fTemporalAccuracy_x005fPropertyType*) serialize to a stream
class gmd__DQ_x005fTemporalAccuracy_x005fPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gmd__DQ_x005fTemporalAccuracy_x005fPropertyType_sequence
    {
/// Reference "http://www.isotc211.org/2005/gmd":AbstractDQ_TemporalAccuracy to abstract element.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractDQ_TemporalAccuracy"> with elements <DQ_TemporalValidity> <DQ_TemporalConsistency> <DQ_AccuracyOfATimeMeasurement>
   $int                                  __unionAbstractDQ_x005fTemporalAccuracy 0;	///< Union _gmd__union_DQ_x005fTemporalAccuracy_x005fPropertyType selector: set to SOAP_UNION__gmd__union_DQ_x005fTemporalAccuracy_x005fPropertyType_<fieldname>
/// Union for substitutionGroup="AbstractDQ_TemporalAccuracy"
    union _gmd__union_DQ_x005fTemporalAccuracy_x005fPropertyType
    {
/// Element DQ_TemporalValidity of type "http://www.isotc211.org/2005/gmd":DQ_TemporalValidity_Type.
    gmd__DQ_x005fTemporalValidity_x005fType*  DQ_x005fTemporalValidity       1;	///< Required element.
/// Element DQ_TemporalConsistency of type "http://www.isotc211.org/2005/gmd":DQ_TemporalConsistency_Type.
    gmd__DQ_x005fTemporalConsistency_x005fType*  DQ_x005fTemporalConsistency    1;	///< Required element.
/// Element DQ_AccuracyOfATimeMeasurement of type "http://www.isotc211.org/2005/gmd":DQ_AccuracyOfATimeMeasurement_Type.
    gmd__DQ_x005fAccuracyOfATimeMeasurement_x005fType*  DQ_x005fAccuracyOfATimeMeasurement 1;	///< Required element.
    }                                    __union_DQ_x005fTemporalAccuracy_x005fPropertyType;
//  END OF CHOICE OF SUBSTITUTIONS
    }>                                   __DQ_x005fTemporalAccuracy_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
/// Attribute uuidref of type xs:string.
   @std::string*                         uuidref                        0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.isotc211.org/2005/gmd":DQ_ThematicAccuracy_PropertyType is a complexType.
/// class gmd__DQ_x005fThematicAccuracy_x005fPropertyType operations:
/// - soap_new_gmd__DQ_x005fThematicAccuracy_x005fPropertyType(soap*) allocate
/// - soap_new_gmd__DQ_x005fThematicAccuracy_x005fPropertyType(soap*, int num) allocate array
/// - soap_new_req_gmd__DQ_x005fThematicAccuracy_x005fPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__DQ_x005fThematicAccuracy_x005fPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__DQ_x005fThematicAccuracy_x005fPropertyType(soap*, gmd__DQ_x005fThematicAccuracy_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__DQ_x005fThematicAccuracy_x005fPropertyType(soap, gmd__DQ_x005fThematicAccuracy_x005fPropertyType*) serialize to a stream
class gmd__DQ_x005fThematicAccuracy_x005fPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gmd__DQ_x005fThematicAccuracy_x005fPropertyType_sequence
    {
/// Reference "http://www.isotc211.org/2005/gmd":AbstractDQ_ThematicAccuracy to abstract element.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractDQ_ThematicAccuracy"> with elements <DQ_QuantitativeAttributeAccuracy> <DQ_NonQuantitativeAttributeAccuracy> <DQ_ThematicClassificationCorrectness>
   $int                                  __unionAbstractDQ_x005fThematicAccuracy 0;	///< Union _gmd__union_DQ_x005fThematicAccuracy_x005fPropertyType selector: set to SOAP_UNION__gmd__union_DQ_x005fThematicAccuracy_x005fPropertyType_<fieldname>
/// Union for substitutionGroup="AbstractDQ_ThematicAccuracy"
    union _gmd__union_DQ_x005fThematicAccuracy_x005fPropertyType
    {
/// Element DQ_QuantitativeAttributeAccuracy of type "http://www.isotc211.org/2005/gmd":DQ_QuantitativeAttributeAccuracy_Type.
    gmd__DQ_x005fQuantitativeAttributeAccuracy_x005fType*  DQ_x005fQuantitativeAttributeAccuracy 1;	///< Required element.
/// Element DQ_NonQuantitativeAttributeAccuracy of type "http://www.isotc211.org/2005/gmd":DQ_NonQuantitativeAttributeAccuracy_Type.
    gmd__DQ_x005fNonQuantitativeAttributeAccuracy_x005fType*  DQ_x005fNonQuantitativeAttributeAccuracy 1;	///< Required element.
/// Element DQ_ThematicClassificationCorrectness of type "http://www.isotc211.org/2005/gmd":DQ_ThematicClassificationCorrectness_Type.
    gmd__DQ_x005fThematicClassificationCorrectness_x005fType*  DQ_x005fThematicClassificationCorrectness 1;	///< Required element.
    }                                    __union_DQ_x005fThematicAccuracy_x005fPropertyType;
//  END OF CHOICE OF SUBSTITUTIONS
    }>                                   __DQ_x005fThematicAccuracy_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
/// Attribute uuidref of type xs:string.
   @std::string*                         uuidref                        0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.isotc211.org/2005/gmd":DQ_PositionalAccuracy_PropertyType is a complexType.
/// class gmd__DQ_x005fPositionalAccuracy_x005fPropertyType operations:
/// - soap_new_gmd__DQ_x005fPositionalAccuracy_x005fPropertyType(soap*) allocate
/// - soap_new_gmd__DQ_x005fPositionalAccuracy_x005fPropertyType(soap*, int num) allocate array
/// - soap_new_req_gmd__DQ_x005fPositionalAccuracy_x005fPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__DQ_x005fPositionalAccuracy_x005fPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__DQ_x005fPositionalAccuracy_x005fPropertyType(soap*, gmd__DQ_x005fPositionalAccuracy_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__DQ_x005fPositionalAccuracy_x005fPropertyType(soap, gmd__DQ_x005fPositionalAccuracy_x005fPropertyType*) serialize to a stream
class gmd__DQ_x005fPositionalAccuracy_x005fPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gmd__DQ_x005fPositionalAccuracy_x005fPropertyType_sequence
    {
/// Reference "http://www.isotc211.org/2005/gmd":AbstractDQ_PositionalAccuracy to abstract element.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractDQ_PositionalAccuracy"> with elements <DQ_RelativeInternalPositionalAccuracy> <DQ_GriddedDataPositionalAccuracy> <DQ_AbsoluteExternalPositionalAccuracy>
   $int                                  __unionAbstractDQ_x005fPositionalAccuracy 0;	///< Union _gmd__union_DQ_x005fPositionalAccuracy_x005fPropertyType selector: set to SOAP_UNION__gmd__union_DQ_x005fPositionalAccuracy_x005fPropertyType_<fieldname>
/// Union for substitutionGroup="AbstractDQ_PositionalAccuracy"
    union _gmd__union_DQ_x005fPositionalAccuracy_x005fPropertyType
    {
/// Element DQ_RelativeInternalPositionalAccuracy of type "http://www.isotc211.org/2005/gmd":DQ_RelativeInternalPositionalAccuracy_Type.
    gmd__DQ_x005fRelativeInternalPositionalAccuracy_x005fType*  DQ_x005fRelativeInternalPositionalAccuracy 1;	///< Required element.
/// Element DQ_GriddedDataPositionalAccuracy of type "http://www.isotc211.org/2005/gmd":DQ_GriddedDataPositionalAccuracy_Type.
    gmd__DQ_x005fGriddedDataPositionalAccuracy_x005fType*  DQ_x005fGriddedDataPositionalAccuracy 1;	///< Required element.
/// Element DQ_AbsoluteExternalPositionalAccuracy of type "http://www.isotc211.org/2005/gmd":DQ_AbsoluteExternalPositionalAccuracy_Type.
    gmd__DQ_x005fAbsoluteExternalPositionalAccuracy_x005fType*  DQ_x005fAbsoluteExternalPositionalAccuracy 1;	///< Required element.
    }                                    __union_DQ_x005fPositionalAccuracy_x005fPropertyType;
//  END OF CHOICE OF SUBSTITUTIONS
    }>                                   __DQ_x005fPositionalAccuracy_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
/// Attribute uuidref of type xs:string.
   @std::string*                         uuidref                        0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.isotc211.org/2005/gmd":DQ_LogicalConsistency_PropertyType is a complexType.
/// class gmd__DQ_x005fLogicalConsistency_x005fPropertyType operations:
/// - soap_new_gmd__DQ_x005fLogicalConsistency_x005fPropertyType(soap*) allocate
/// - soap_new_gmd__DQ_x005fLogicalConsistency_x005fPropertyType(soap*, int num) allocate array
/// - soap_new_req_gmd__DQ_x005fLogicalConsistency_x005fPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__DQ_x005fLogicalConsistency_x005fPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__DQ_x005fLogicalConsistency_x005fPropertyType(soap*, gmd__DQ_x005fLogicalConsistency_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__DQ_x005fLogicalConsistency_x005fPropertyType(soap, gmd__DQ_x005fLogicalConsistency_x005fPropertyType*) serialize to a stream
class gmd__DQ_x005fLogicalConsistency_x005fPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gmd__DQ_x005fLogicalConsistency_x005fPropertyType_sequence
    {
/// Reference "http://www.isotc211.org/2005/gmd":AbstractDQ_LogicalConsistency to abstract element.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractDQ_LogicalConsistency"> with elements <DQ_TopologicalConsistency> <DQ_FormatConsistency> <DQ_DomainConsistency> <DQ_ConceptualConsistency>
   $int                                  __unionAbstractDQ_x005fLogicalConsistency 0;	///< Union _gmd__union_DQ_x005fLogicalConsistency_x005fPropertyType selector: set to SOAP_UNION__gmd__union_DQ_x005fLogicalConsistency_x005fPropertyType_<fieldname>
/// Union for substitutionGroup="AbstractDQ_LogicalConsistency"
    union _gmd__union_DQ_x005fLogicalConsistency_x005fPropertyType
    {
/// Element DQ_TopologicalConsistency of type "http://www.isotc211.org/2005/gmd":DQ_TopologicalConsistency_Type.
    gmd__DQ_x005fTopologicalConsistency_x005fType*  DQ_x005fTopologicalConsistency 1;	///< Required element.
/// Element DQ_FormatConsistency of type "http://www.isotc211.org/2005/gmd":DQ_FormatConsistency_Type.
    gmd__DQ_x005fFormatConsistency_x005fType*  DQ_x005fFormatConsistency      1;	///< Required element.
/// Element DQ_DomainConsistency of type "http://www.isotc211.org/2005/gmd":DQ_DomainConsistency_Type.
    gmd__DQ_x005fDomainConsistency_x005fType*  DQ_x005fDomainConsistency      1;	///< Required element.
/// Element DQ_ConceptualConsistency of type "http://www.isotc211.org/2005/gmd":DQ_ConceptualConsistency_Type.
    gmd__DQ_x005fConceptualConsistency_x005fType*  DQ_x005fConceptualConsistency  1;	///< Required element.
    }                                    __union_DQ_x005fLogicalConsistency_x005fPropertyType;
//  END OF CHOICE OF SUBSTITUTIONS
    }>                                   __DQ_x005fLogicalConsistency_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
/// Attribute uuidref of type xs:string.
   @std::string*                         uuidref                        0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.isotc211.org/2005/gmd":DQ_Completeness_PropertyType is a complexType.
/// class gmd__DQ_x005fCompleteness_x005fPropertyType operations:
/// - soap_new_gmd__DQ_x005fCompleteness_x005fPropertyType(soap*) allocate
/// - soap_new_gmd__DQ_x005fCompleteness_x005fPropertyType(soap*, int num) allocate array
/// - soap_new_req_gmd__DQ_x005fCompleteness_x005fPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__DQ_x005fCompleteness_x005fPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__DQ_x005fCompleteness_x005fPropertyType(soap*, gmd__DQ_x005fCompleteness_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__DQ_x005fCompleteness_x005fPropertyType(soap, gmd__DQ_x005fCompleteness_x005fPropertyType*) serialize to a stream
class gmd__DQ_x005fCompleteness_x005fPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gmd__DQ_x005fCompleteness_x005fPropertyType_sequence
    {
/// Reference "http://www.isotc211.org/2005/gmd":AbstractDQ_Completeness to abstract element.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractDQ_Completeness"> with elements <DQ_CompletenessOmission> <DQ_CompletenessCommission>
   $int                                  __unionAbstractDQ_x005fCompleteness 0;	///< Union _gmd__union_DQ_x005fCompleteness_x005fPropertyType selector: set to SOAP_UNION__gmd__union_DQ_x005fCompleteness_x005fPropertyType_<fieldname>
/// Union for substitutionGroup="AbstractDQ_Completeness"
    union _gmd__union_DQ_x005fCompleteness_x005fPropertyType
    {
/// Element DQ_CompletenessOmission of type "http://www.isotc211.org/2005/gmd":DQ_CompletenessOmission_Type.
    gmd__DQ_x005fCompletenessOmission_x005fType*  DQ_x005fCompletenessOmission   1;	///< Required element.
/// Element DQ_CompletenessCommission of type "http://www.isotc211.org/2005/gmd":DQ_CompletenessCommission_Type.
    gmd__DQ_x005fCompletenessCommission_x005fType*  DQ_x005fCompletenessCommission 1;	///< Required element.
    }                                    __union_DQ_x005fCompleteness_x005fPropertyType;
//  END OF CHOICE OF SUBSTITUTIONS
    }>                                   __DQ_x005fCompleteness_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
/// Attribute uuidref of type xs:string.
   @std::string*                         uuidref                        0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.isotc211.org/2005/gmd":DQ_Element_PropertyType is a complexType.
/// class gmd__DQ_x005fElement_x005fPropertyType operations:
/// - soap_new_gmd__DQ_x005fElement_x005fPropertyType(soap*) allocate
/// - soap_new_gmd__DQ_x005fElement_x005fPropertyType(soap*, int num) allocate array
/// - soap_new_req_gmd__DQ_x005fElement_x005fPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__DQ_x005fElement_x005fPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__DQ_x005fElement_x005fPropertyType(soap*, gmd__DQ_x005fElement_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__DQ_x005fElement_x005fPropertyType(soap, gmd__DQ_x005fElement_x005fPropertyType*) serialize to a stream
class gmd__DQ_x005fElement_x005fPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gmd__DQ_x005fElement_x005fPropertyType_sequence
    {
/// Reference "http://www.isotc211.org/2005/gmd":AbstractDQ_Element to abstract element.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractDQ_Element"> with elements <AbstractDQ_TemporalAccuracy> <AbstractDQ_ThematicAccuracy> <AbstractDQ_PositionalAccuracy> <AbstractDQ_LogicalConsistency> <AbstractDQ_Completeness>
   $int                                  __unionAbstractDQ_x005fElement 0;	///< Union _gmd__union_DQ_x005fElement_x005fPropertyType selector: set to SOAP_UNION__gmd__union_DQ_x005fElement_x005fPropertyType_<fieldname>
/// Union for substitutionGroup="AbstractDQ_Element"
    union _gmd__union_DQ_x005fElement_x005fPropertyType
    {
/// Abstract element AbstractDQ_TemporalAccuracy of type "http://www.isotc211.org/2005/gmd":AbstractDQ_TemporalAccuracy_Type.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractDQ_TemporalAccuracy"> with elements <DQ_TemporalValidity> <DQ_TemporalConsistency> <DQ_AccuracyOfATimeMeasurement>
/// Element DQ_TemporalValidity of type "http://www.isotc211.org/2005/gmd":DQ_TemporalValidity_Type.
    gmd__DQ_x005fTemporalValidity_x005fType*  DQ_x005fTemporalValidity       1;	///< Required element.
/// Element DQ_TemporalConsistency of type "http://www.isotc211.org/2005/gmd":DQ_TemporalConsistency_Type.
    gmd__DQ_x005fTemporalConsistency_x005fType*  DQ_x005fTemporalConsistency    1;	///< Required element.
/// Element DQ_AccuracyOfATimeMeasurement of type "http://www.isotc211.org/2005/gmd":DQ_AccuracyOfATimeMeasurement_Type.
    gmd__DQ_x005fAccuracyOfATimeMeasurement_x005fType*  DQ_x005fAccuracyOfATimeMeasurement 1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
/// Abstract element AbstractDQ_ThematicAccuracy of type "http://www.isotc211.org/2005/gmd":AbstractDQ_ThematicAccuracy_Type.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractDQ_ThematicAccuracy"> with elements <DQ_QuantitativeAttributeAccuracy> <DQ_NonQuantitativeAttributeAccuracy> <DQ_ThematicClassificationCorrectness>
/// Element DQ_QuantitativeAttributeAccuracy of type "http://www.isotc211.org/2005/gmd":DQ_QuantitativeAttributeAccuracy_Type.
    gmd__DQ_x005fQuantitativeAttributeAccuracy_x005fType*  DQ_x005fQuantitativeAttributeAccuracy 1;	///< Required element.
/// Element DQ_NonQuantitativeAttributeAccuracy of type "http://www.isotc211.org/2005/gmd":DQ_NonQuantitativeAttributeAccuracy_Type.
    gmd__DQ_x005fNonQuantitativeAttributeAccuracy_x005fType*  DQ_x005fNonQuantitativeAttributeAccuracy 1;	///< Required element.
/// Element DQ_ThematicClassificationCorrectness of type "http://www.isotc211.org/2005/gmd":DQ_ThematicClassificationCorrectness_Type.
    gmd__DQ_x005fThematicClassificationCorrectness_x005fType*  DQ_x005fThematicClassificationCorrectness 1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
/// Abstract element AbstractDQ_PositionalAccuracy of type "http://www.isotc211.org/2005/gmd":AbstractDQ_PositionalAccuracy_Type.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractDQ_PositionalAccuracy"> with elements <DQ_RelativeInternalPositionalAccuracy> <DQ_GriddedDataPositionalAccuracy> <DQ_AbsoluteExternalPositionalAccuracy>
/// Element DQ_RelativeInternalPositionalAccuracy of type "http://www.isotc211.org/2005/gmd":DQ_RelativeInternalPositionalAccuracy_Type.
    gmd__DQ_x005fRelativeInternalPositionalAccuracy_x005fType*  DQ_x005fRelativeInternalPositionalAccuracy 1;	///< Required element.
/// Element DQ_GriddedDataPositionalAccuracy of type "http://www.isotc211.org/2005/gmd":DQ_GriddedDataPositionalAccuracy_Type.
    gmd__DQ_x005fGriddedDataPositionalAccuracy_x005fType*  DQ_x005fGriddedDataPositionalAccuracy 1;	///< Required element.
/// Element DQ_AbsoluteExternalPositionalAccuracy of type "http://www.isotc211.org/2005/gmd":DQ_AbsoluteExternalPositionalAccuracy_Type.
    gmd__DQ_x005fAbsoluteExternalPositionalAccuracy_x005fType*  DQ_x005fAbsoluteExternalPositionalAccuracy 1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
/// Abstract element AbstractDQ_LogicalConsistency of type "http://www.isotc211.org/2005/gmd":AbstractDQ_LogicalConsistency_Type.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractDQ_LogicalConsistency"> with elements <DQ_TopologicalConsistency> <DQ_FormatConsistency> <DQ_DomainConsistency> <DQ_ConceptualConsistency>
/// Element DQ_TopologicalConsistency of type "http://www.isotc211.org/2005/gmd":DQ_TopologicalConsistency_Type.
    gmd__DQ_x005fTopologicalConsistency_x005fType*  DQ_x005fTopologicalConsistency 1;	///< Required element.
/// Element DQ_FormatConsistency of type "http://www.isotc211.org/2005/gmd":DQ_FormatConsistency_Type.
    gmd__DQ_x005fFormatConsistency_x005fType*  DQ_x005fFormatConsistency      1;	///< Required element.
/// Element DQ_DomainConsistency of type "http://www.isotc211.org/2005/gmd":DQ_DomainConsistency_Type.
    gmd__DQ_x005fDomainConsistency_x005fType*  DQ_x005fDomainConsistency      1;	///< Required element.
/// Element DQ_ConceptualConsistency of type "http://www.isotc211.org/2005/gmd":DQ_ConceptualConsistency_Type.
    gmd__DQ_x005fConceptualConsistency_x005fType*  DQ_x005fConceptualConsistency  1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
/// Abstract element AbstractDQ_Completeness of type "http://www.isotc211.org/2005/gmd":AbstractDQ_Completeness_Type.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractDQ_Completeness"> with elements <DQ_CompletenessOmission> <DQ_CompletenessCommission>
/// Element DQ_CompletenessOmission of type "http://www.isotc211.org/2005/gmd":DQ_CompletenessOmission_Type.
    gmd__DQ_x005fCompletenessOmission_x005fType*  DQ_x005fCompletenessOmission   1;	///< Required element.
/// Element DQ_CompletenessCommission of type "http://www.isotc211.org/2005/gmd":DQ_CompletenessCommission_Type.
    gmd__DQ_x005fCompletenessCommission_x005fType*  DQ_x005fCompletenessCommission 1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
    }                                    __union_DQ_x005fElement_x005fPropertyType;
//  END OF CHOICE OF SUBSTITUTIONS
    }>                                   __DQ_x005fElement_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
/// Attribute uuidref of type xs:string.
   @std::string*                         uuidref                        0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.isotc211.org/2005/gmd":DQ_DataQuality_PropertyType is a complexType.
/// class gmd__DQ_x005fDataQuality_x005fPropertyType operations:
/// - soap_new_gmd__DQ_x005fDataQuality_x005fPropertyType(soap*) allocate
/// - soap_new_gmd__DQ_x005fDataQuality_x005fPropertyType(soap*, int num) allocate array
/// - soap_new_req_gmd__DQ_x005fDataQuality_x005fPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__DQ_x005fDataQuality_x005fPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__DQ_x005fDataQuality_x005fPropertyType(soap*, gmd__DQ_x005fDataQuality_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__DQ_x005fDataQuality_x005fPropertyType(soap, gmd__DQ_x005fDataQuality_x005fPropertyType*) serialize to a stream
class gmd__DQ_x005fDataQuality_x005fPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gmd__DQ_x005fDataQuality_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd":DQ_DataQuality.
    gmd__DQ_x005fDataQuality_x005fType*  DQ_x005fDataQuality            1;	///< Required element.
    }>                                   __DQ_x005fDataQuality_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
/// Attribute uuidref of type xs:string.
   @std::string*                         uuidref                        0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.isotc211.org/2005/gmd":DQ_Scope_PropertyType is a complexType.
/// class gmd__DQ_x005fScope_x005fPropertyType operations:
/// - soap_new_gmd__DQ_x005fScope_x005fPropertyType(soap*) allocate
/// - soap_new_gmd__DQ_x005fScope_x005fPropertyType(soap*, int num) allocate array
/// - soap_new_req_gmd__DQ_x005fScope_x005fPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__DQ_x005fScope_x005fPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__DQ_x005fScope_x005fPropertyType(soap*, gmd__DQ_x005fScope_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__DQ_x005fScope_x005fPropertyType(soap, gmd__DQ_x005fScope_x005fPropertyType*) serialize to a stream
class gmd__DQ_x005fScope_x005fPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gmd__DQ_x005fScope_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd":DQ_Scope.
    gmd__DQ_x005fScope_x005fType*        DQ_x005fScope                  1;	///< Required element.
    }>                                   __DQ_x005fScope_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
/// Attribute uuidref of type xs:string.
   @std::string*                         uuidref                        0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.isotc211.org/2005/gmd":DQ_EvaluationMethodTypeCode_PropertyType is a complexType.
/// class gmd__DQ_x005fEvaluationMethodTypeCode_x005fPropertyType operations:
/// - soap_new_gmd__DQ_x005fEvaluationMethodTypeCode_x005fPropertyType(soap*) allocate
/// - soap_new_gmd__DQ_x005fEvaluationMethodTypeCode_x005fPropertyType(soap*, int num) allocate array
/// - soap_new_req_gmd__DQ_x005fEvaluationMethodTypeCode_x005fPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__DQ_x005fEvaluationMethodTypeCode_x005fPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__DQ_x005fEvaluationMethodTypeCode_x005fPropertyType(soap*, gmd__DQ_x005fEvaluationMethodTypeCode_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__DQ_x005fEvaluationMethodTypeCode_x005fPropertyType(soap, gmd__DQ_x005fEvaluationMethodTypeCode_x005fPropertyType*) serialize to a stream
class gmd__DQ_x005fEvaluationMethodTypeCode_x005fPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gmd__DQ_x005fEvaluationMethodTypeCode_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd":DQ_EvaluationMethodTypeCode.
    gco__CodeListValue_x005fType*        DQ_x005fEvaluationMethodTypeCode 1;	///< Required element.
    }>                                   __DQ_x005fEvaluationMethodTypeCode_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
};

/// "http://www.isotc211.org/2005/gmd":MD_Identification_PropertyType is a complexType.
/// class gmd__MD_x005fIdentification_x005fPropertyType operations:
/// - soap_new_gmd__MD_x005fIdentification_x005fPropertyType(soap*) allocate
/// - soap_new_gmd__MD_x005fIdentification_x005fPropertyType(soap*, int num) allocate array
/// - soap_new_req_gmd__MD_x005fIdentification_x005fPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__MD_x005fIdentification_x005fPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__MD_x005fIdentification_x005fPropertyType(soap*, gmd__MD_x005fIdentification_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fIdentification_x005fPropertyType(soap, gmd__MD_x005fIdentification_x005fPropertyType*) serialize to a stream
class gmd__MD_x005fIdentification_x005fPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gmd__MD_x005fIdentification_x005fPropertyType_sequence
    {
/// Reference "http://www.isotc211.org/2005/gmd":AbstractMD_Identification to abstract element.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractMD_Identification"> with elements <MD_DataIdentification> <MD_ServiceIdentification>
   $int                                  __unionAbstractMD_x005fIdentification 0;	///< Union _gmd__union_MD_x005fIdentification_x005fPropertyType selector: set to SOAP_UNION__gmd__union_MD_x005fIdentification_x005fPropertyType_<fieldname>
/// Union for substitutionGroup="AbstractMD_Identification"
    union _gmd__union_MD_x005fIdentification_x005fPropertyType
    {
/// Element MD_DataIdentification of type "http://www.isotc211.org/2005/gmd":MD_DataIdentification_Type.
    gmd__MD_x005fDataIdentification_x005fType*  MD_x005fDataIdentification     1;	///< Required element.
/// Element MD_ServiceIdentification of type "http://www.isotc211.org/2005/gmd":MD_ServiceIdentification_Type.
    gmd__MD_x005fServiceIdentification_x005fType*  MD_x005fServiceIdentification  1;	///< Required element.
    }                                    __union_MD_x005fIdentification_x005fPropertyType;
//  END OF CHOICE OF SUBSTITUTIONS
    }>                                   __MD_x005fIdentification_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
/// Attribute uuidref of type xs:string.
   @std::string*                         uuidref                        0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.isotc211.org/2005/gmd":MD_BrowseGraphic_PropertyType is a complexType.
/// class gmd__MD_x005fBrowseGraphic_x005fPropertyType operations:
/// - soap_new_gmd__MD_x005fBrowseGraphic_x005fPropertyType(soap*) allocate
/// - soap_new_gmd__MD_x005fBrowseGraphic_x005fPropertyType(soap*, int num) allocate array
/// - soap_new_req_gmd__MD_x005fBrowseGraphic_x005fPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__MD_x005fBrowseGraphic_x005fPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__MD_x005fBrowseGraphic_x005fPropertyType(soap*, gmd__MD_x005fBrowseGraphic_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fBrowseGraphic_x005fPropertyType(soap, gmd__MD_x005fBrowseGraphic_x005fPropertyType*) serialize to a stream
class gmd__MD_x005fBrowseGraphic_x005fPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gmd__MD_x005fBrowseGraphic_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd":MD_BrowseGraphic.
    gmd__MD_x005fBrowseGraphic_x005fType*  MD_x005fBrowseGraphic          1;	///< Required element.
    }>                                   __MD_x005fBrowseGraphic_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
/// Attribute uuidref of type xs:string.
   @std::string*                         uuidref                        0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.isotc211.org/2005/gmd":MD_DataIdentification_PropertyType is a complexType.
/// class gmd__MD_x005fDataIdentification_x005fPropertyType operations:
/// - soap_new_gmd__MD_x005fDataIdentification_x005fPropertyType(soap*) allocate
/// - soap_new_gmd__MD_x005fDataIdentification_x005fPropertyType(soap*, int num) allocate array
/// - soap_new_req_gmd__MD_x005fDataIdentification_x005fPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__MD_x005fDataIdentification_x005fPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__MD_x005fDataIdentification_x005fPropertyType(soap*, gmd__MD_x005fDataIdentification_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fDataIdentification_x005fPropertyType(soap, gmd__MD_x005fDataIdentification_x005fPropertyType*) serialize to a stream
class gmd__MD_x005fDataIdentification_x005fPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gmd__MD_x005fDataIdentification_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd":MD_DataIdentification.
    gmd__MD_x005fDataIdentification_x005fType*  MD_x005fDataIdentification     1;	///< Required element.
    }>                                   __MD_x005fDataIdentification_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
/// Attribute uuidref of type xs:string.
   @std::string*                         uuidref                        0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.isotc211.org/2005/gmd":MD_ServiceIdentification_PropertyType is a complexType.
/// class gmd__MD_x005fServiceIdentification_x005fPropertyType operations:
/// - soap_new_gmd__MD_x005fServiceIdentification_x005fPropertyType(soap*) allocate
/// - soap_new_gmd__MD_x005fServiceIdentification_x005fPropertyType(soap*, int num) allocate array
/// - soap_new_req_gmd__MD_x005fServiceIdentification_x005fPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__MD_x005fServiceIdentification_x005fPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__MD_x005fServiceIdentification_x005fPropertyType(soap*, gmd__MD_x005fServiceIdentification_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fServiceIdentification_x005fPropertyType(soap, gmd__MD_x005fServiceIdentification_x005fPropertyType*) serialize to a stream
class gmd__MD_x005fServiceIdentification_x005fPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gmd__MD_x005fServiceIdentification_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd":MD_ServiceIdentification.
    gmd__MD_x005fServiceIdentification_x005fType*  MD_x005fServiceIdentification  1;	///< Required element.
    }>                                   __MD_x005fServiceIdentification_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
/// Attribute uuidref of type xs:string.
   @std::string*                         uuidref                        0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.isotc211.org/2005/gmd":MD_RepresentativeFraction_PropertyType is a complexType.
/// class gmd__MD_x005fRepresentativeFraction_x005fPropertyType operations:
/// - soap_new_gmd__MD_x005fRepresentativeFraction_x005fPropertyType(soap*) allocate
/// - soap_new_gmd__MD_x005fRepresentativeFraction_x005fPropertyType(soap*, int num) allocate array
/// - soap_new_req_gmd__MD_x005fRepresentativeFraction_x005fPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__MD_x005fRepresentativeFraction_x005fPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__MD_x005fRepresentativeFraction_x005fPropertyType(soap*, gmd__MD_x005fRepresentativeFraction_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fRepresentativeFraction_x005fPropertyType(soap, gmd__MD_x005fRepresentativeFraction_x005fPropertyType*) serialize to a stream
class gmd__MD_x005fRepresentativeFraction_x005fPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gmd__MD_x005fRepresentativeFraction_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd":MD_RepresentativeFraction.
    gmd__MD_x005fRepresentativeFraction_x005fType*  MD_x005fRepresentativeFraction 1;	///< Required element.
    }>                                   __MD_x005fRepresentativeFraction_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
/// Attribute uuidref of type xs:string.
   @std::string*                         uuidref                        0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.isotc211.org/2005/gmd":MD_Usage_PropertyType is a complexType.
/// class gmd__MD_x005fUsage_x005fPropertyType operations:
/// - soap_new_gmd__MD_x005fUsage_x005fPropertyType(soap*) allocate
/// - soap_new_gmd__MD_x005fUsage_x005fPropertyType(soap*, int num) allocate array
/// - soap_new_req_gmd__MD_x005fUsage_x005fPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__MD_x005fUsage_x005fPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__MD_x005fUsage_x005fPropertyType(soap*, gmd__MD_x005fUsage_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fUsage_x005fPropertyType(soap, gmd__MD_x005fUsage_x005fPropertyType*) serialize to a stream
class gmd__MD_x005fUsage_x005fPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gmd__MD_x005fUsage_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd":MD_Usage.
    gmd__MD_x005fUsage_x005fType*        MD_x005fUsage                  1;	///< Required element.
    }>                                   __MD_x005fUsage_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
/// Attribute uuidref of type xs:string.
   @std::string*                         uuidref                        0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.isotc211.org/2005/gmd":MD_Keywords_PropertyType is a complexType.
/// class gmd__MD_x005fKeywords_x005fPropertyType operations:
/// - soap_new_gmd__MD_x005fKeywords_x005fPropertyType(soap*) allocate
/// - soap_new_gmd__MD_x005fKeywords_x005fPropertyType(soap*, int num) allocate array
/// - soap_new_req_gmd__MD_x005fKeywords_x005fPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__MD_x005fKeywords_x005fPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__MD_x005fKeywords_x005fPropertyType(soap*, gmd__MD_x005fKeywords_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fKeywords_x005fPropertyType(soap, gmd__MD_x005fKeywords_x005fPropertyType*) serialize to a stream
class gmd__MD_x005fKeywords_x005fPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gmd__MD_x005fKeywords_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd":MD_Keywords.
    gmd__MD_x005fKeywords_x005fType*     MD_x005fKeywords               1;	///< Required element.
    }>                                   __MD_x005fKeywords_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
/// Attribute uuidref of type xs:string.
   @std::string*                         uuidref                        0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.isotc211.org/2005/gmd":DS_Association_PropertyType is a complexType.
/// class gmd__DS_x005fAssociation_x005fPropertyType operations:
/// - soap_new_gmd__DS_x005fAssociation_x005fPropertyType(soap*) allocate
/// - soap_new_gmd__DS_x005fAssociation_x005fPropertyType(soap*, int num) allocate array
/// - soap_new_req_gmd__DS_x005fAssociation_x005fPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__DS_x005fAssociation_x005fPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__DS_x005fAssociation_x005fPropertyType(soap*, gmd__DS_x005fAssociation_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__DS_x005fAssociation_x005fPropertyType(soap, gmd__DS_x005fAssociation_x005fPropertyType*) serialize to a stream
class gmd__DS_x005fAssociation_x005fPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gmd__DS_x005fAssociation_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd":DS_Association.
    gmd__DS_x005fAssociation_x005fType*  DS_x005fAssociation            1;	///< Required element.
    }>                                   __DS_x005fAssociation_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
/// Attribute uuidref of type xs:string.
   @std::string*                         uuidref                        0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.isotc211.org/2005/gmd":MD_AggregateInformation_PropertyType is a complexType.
/// class gmd__MD_x005fAggregateInformation_x005fPropertyType operations:
/// - soap_new_gmd__MD_x005fAggregateInformation_x005fPropertyType(soap*) allocate
/// - soap_new_gmd__MD_x005fAggregateInformation_x005fPropertyType(soap*, int num) allocate array
/// - soap_new_req_gmd__MD_x005fAggregateInformation_x005fPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__MD_x005fAggregateInformation_x005fPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__MD_x005fAggregateInformation_x005fPropertyType(soap*, gmd__MD_x005fAggregateInformation_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fAggregateInformation_x005fPropertyType(soap, gmd__MD_x005fAggregateInformation_x005fPropertyType*) serialize to a stream
class gmd__MD_x005fAggregateInformation_x005fPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gmd__MD_x005fAggregateInformation_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd":MD_AggregateInformation.
    gmd__MD_x005fAggregateInformation_x005fType*  MD_x005fAggregateInformation   1;	///< Required element.
    }>                                   __MD_x005fAggregateInformation_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
/// Attribute uuidref of type xs:string.
   @std::string*                         uuidref                        0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.isotc211.org/2005/gmd":MD_Resolution_Type is a complexType.
/// class gmd__MD_x005fResolution_x005fType operations:
/// - soap_new_gmd__MD_x005fResolution_x005fType(soap*) allocate
/// - soap_new_gmd__MD_x005fResolution_x005fType(soap*, int num) allocate array
/// - soap_new_req_gmd__MD_x005fResolution_x005fType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__MD_x005fResolution_x005fType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__MD_x005fResolution_x005fType(soap*, gmd__MD_x005fResolution_x005fType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fResolution_x005fType(soap, gmd__MD_x005fResolution_x005fType*) serialize to a stream
class gmd__MD_x005fResolution_x005fType : public xsd__anyType
{ public:
/// CHOICE <xs:choice>
   $int                                  __union_MD_x005fResolution_x005fType;	///< Union _gmd__union_MD_x005fResolution_x005fType selector: set to SOAP_UNION__gmd__union_MD_x005fResolution_x005fType_<fieldname>
/// Union for choice in type gmd__MD_x005fResolution_x005fType
    union _gmd__union_MD_x005fResolution_x005fType
    {
/// Element equivalentScale of type "http://www.isotc211.org/2005/gmd":MD_RepresentativeFraction_PropertyType.
    gmd__MD_x005fRepresentativeFraction_x005fPropertyType*  equivalentScale                1;	///< Required element.
/// Element distance of type "http://www.isotc211.org/2005/gco":Distance_PropertyType.
    gco__Distance_x005fPropertyType*     distance                       1;	///< Required element.
    }                                    union_MD_x005fResolution_x005fType;
//  END OF CHOICE
};

/// "http://www.isotc211.org/2005/gmd":MD_Resolution_PropertyType is a complexType.
/// class gmd__MD_x005fResolution_x005fPropertyType operations:
/// - soap_new_gmd__MD_x005fResolution_x005fPropertyType(soap*) allocate
/// - soap_new_gmd__MD_x005fResolution_x005fPropertyType(soap*, int num) allocate array
/// - soap_new_req_gmd__MD_x005fResolution_x005fPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__MD_x005fResolution_x005fPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__MD_x005fResolution_x005fPropertyType(soap*, gmd__MD_x005fResolution_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fResolution_x005fPropertyType(soap, gmd__MD_x005fResolution_x005fPropertyType*) serialize to a stream
class gmd__MD_x005fResolution_x005fPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gmd__MD_x005fResolution_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd":MD_Resolution.
    gmd__MD_x005fResolution_x005fType*   MD_x005fResolution             1;	///< Required element.
    }>                                   __MD_x005fResolution_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
};

/// "http://www.isotc211.org/2005/gmd":MD_TopicCategoryCode_PropertyType is a complexType.
/// class gmd__MD_x005fTopicCategoryCode_x005fPropertyType operations:
/// - soap_new_gmd__MD_x005fTopicCategoryCode_x005fPropertyType(soap*) allocate
/// - soap_new_gmd__MD_x005fTopicCategoryCode_x005fPropertyType(soap*, int num) allocate array
/// - soap_new_req_gmd__MD_x005fTopicCategoryCode_x005fPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__MD_x005fTopicCategoryCode_x005fPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__MD_x005fTopicCategoryCode_x005fPropertyType(soap*, gmd__MD_x005fTopicCategoryCode_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fTopicCategoryCode_x005fPropertyType(soap, gmd__MD_x005fTopicCategoryCode_x005fPropertyType*) serialize to a stream
class gmd__MD_x005fTopicCategoryCode_x005fPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gmd__MD_x005fTopicCategoryCode_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd":MD_TopicCategoryCode.
    enum gmd__MD_x005fTopicCategoryCode_x005fType  MD_x005fTopicCategoryCode      1;	///< Required element.
    }>                                   __MD_x005fTopicCategoryCode_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
};

/// "http://www.isotc211.org/2005/gmd":MD_CharacterSetCode_PropertyType is a complexType.
/// class gmd__MD_x005fCharacterSetCode_x005fPropertyType operations:
/// - soap_new_gmd__MD_x005fCharacterSetCode_x005fPropertyType(soap*) allocate
/// - soap_new_gmd__MD_x005fCharacterSetCode_x005fPropertyType(soap*, int num) allocate array
/// - soap_new_req_gmd__MD_x005fCharacterSetCode_x005fPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__MD_x005fCharacterSetCode_x005fPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__MD_x005fCharacterSetCode_x005fPropertyType(soap*, gmd__MD_x005fCharacterSetCode_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fCharacterSetCode_x005fPropertyType(soap, gmd__MD_x005fCharacterSetCode_x005fPropertyType*) serialize to a stream
class gmd__MD_x005fCharacterSetCode_x005fPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gmd__MD_x005fCharacterSetCode_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd":MD_CharacterSetCode.
    gco__CodeListValue_x005fType*        MD_x005fCharacterSetCode       1;	///< Required element.
    }>                                   __MD_x005fCharacterSetCode_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
};

/// "http://www.isotc211.org/2005/gmd":MD_SpatialRepresentationTypeCode_PropertyType is a complexType.
/// class gmd__MD_x005fSpatialRepresentationTypeCode_x005fPropertyType operations:
/// - soap_new_gmd__MD_x005fSpatialRepresentationTypeCode_x005fPropertyType(soap*) allocate
/// - soap_new_gmd__MD_x005fSpatialRepresentationTypeCode_x005fPropertyType(soap*, int num) allocate array
/// - soap_new_req_gmd__MD_x005fSpatialRepresentationTypeCode_x005fPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__MD_x005fSpatialRepresentationTypeCode_x005fPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__MD_x005fSpatialRepresentationTypeCode_x005fPropertyType(soap*, gmd__MD_x005fSpatialRepresentationTypeCode_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fSpatialRepresentationTypeCode_x005fPropertyType(soap, gmd__MD_x005fSpatialRepresentationTypeCode_x005fPropertyType*) serialize to a stream
class gmd__MD_x005fSpatialRepresentationTypeCode_x005fPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gmd__MD_x005fSpatialRepresentationTypeCode_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd":MD_SpatialRepresentationTypeCode.
    gco__CodeListValue_x005fType*        MD_x005fSpatialRepresentationTypeCode 1;	///< Required element.
    }>                                   __MD_x005fSpatialRepresentationTypeCode_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
};

/// "http://www.isotc211.org/2005/gmd":MD_ProgressCode_PropertyType is a complexType.
/// class gmd__MD_x005fProgressCode_x005fPropertyType operations:
/// - soap_new_gmd__MD_x005fProgressCode_x005fPropertyType(soap*) allocate
/// - soap_new_gmd__MD_x005fProgressCode_x005fPropertyType(soap*, int num) allocate array
/// - soap_new_req_gmd__MD_x005fProgressCode_x005fPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__MD_x005fProgressCode_x005fPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__MD_x005fProgressCode_x005fPropertyType(soap*, gmd__MD_x005fProgressCode_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fProgressCode_x005fPropertyType(soap, gmd__MD_x005fProgressCode_x005fPropertyType*) serialize to a stream
class gmd__MD_x005fProgressCode_x005fPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gmd__MD_x005fProgressCode_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd":MD_ProgressCode.
    gco__CodeListValue_x005fType*        MD_x005fProgressCode           1;	///< Required element.
    }>                                   __MD_x005fProgressCode_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
};

/// "http://www.isotc211.org/2005/gmd":MD_KeywordTypeCode_PropertyType is a complexType.
/// class gmd__MD_x005fKeywordTypeCode_x005fPropertyType operations:
/// - soap_new_gmd__MD_x005fKeywordTypeCode_x005fPropertyType(soap*) allocate
/// - soap_new_gmd__MD_x005fKeywordTypeCode_x005fPropertyType(soap*, int num) allocate array
/// - soap_new_req_gmd__MD_x005fKeywordTypeCode_x005fPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__MD_x005fKeywordTypeCode_x005fPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__MD_x005fKeywordTypeCode_x005fPropertyType(soap*, gmd__MD_x005fKeywordTypeCode_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fKeywordTypeCode_x005fPropertyType(soap, gmd__MD_x005fKeywordTypeCode_x005fPropertyType*) serialize to a stream
class gmd__MD_x005fKeywordTypeCode_x005fPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gmd__MD_x005fKeywordTypeCode_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd":MD_KeywordTypeCode.
    gco__CodeListValue_x005fType*        MD_x005fKeywordTypeCode        1;	///< Required element.
    }>                                   __MD_x005fKeywordTypeCode_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
};

/// "http://www.isotc211.org/2005/gmd":DS_AssociationTypeCode_PropertyType is a complexType.
/// class gmd__DS_x005fAssociationTypeCode_x005fPropertyType operations:
/// - soap_new_gmd__DS_x005fAssociationTypeCode_x005fPropertyType(soap*) allocate
/// - soap_new_gmd__DS_x005fAssociationTypeCode_x005fPropertyType(soap*, int num) allocate array
/// - soap_new_req_gmd__DS_x005fAssociationTypeCode_x005fPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__DS_x005fAssociationTypeCode_x005fPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__DS_x005fAssociationTypeCode_x005fPropertyType(soap*, gmd__DS_x005fAssociationTypeCode_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__DS_x005fAssociationTypeCode_x005fPropertyType(soap, gmd__DS_x005fAssociationTypeCode_x005fPropertyType*) serialize to a stream
class gmd__DS_x005fAssociationTypeCode_x005fPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gmd__DS_x005fAssociationTypeCode_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd":DS_AssociationTypeCode.
    gco__CodeListValue_x005fType*        DS_x005fAssociationTypeCode    1;	///< Required element.
    }>                                   __DS_x005fAssociationTypeCode_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
};

/// "http://www.isotc211.org/2005/gmd":DS_InitiativeTypeCode_PropertyType is a complexType.
/// class gmd__DS_x005fInitiativeTypeCode_x005fPropertyType operations:
/// - soap_new_gmd__DS_x005fInitiativeTypeCode_x005fPropertyType(soap*) allocate
/// - soap_new_gmd__DS_x005fInitiativeTypeCode_x005fPropertyType(soap*, int num) allocate array
/// - soap_new_req_gmd__DS_x005fInitiativeTypeCode_x005fPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__DS_x005fInitiativeTypeCode_x005fPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__DS_x005fInitiativeTypeCode_x005fPropertyType(soap*, gmd__DS_x005fInitiativeTypeCode_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__DS_x005fInitiativeTypeCode_x005fPropertyType(soap, gmd__DS_x005fInitiativeTypeCode_x005fPropertyType*) serialize to a stream
class gmd__DS_x005fInitiativeTypeCode_x005fPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gmd__DS_x005fInitiativeTypeCode_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd":DS_InitiativeTypeCode.
    gco__CodeListValue_x005fType*        DS_x005fInitiativeTypeCode     1;	///< Required element.
    }>                                   __DS_x005fInitiativeTypeCode_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
};

/// "http://www.isotc211.org/2005/gmd":MD_Constraints_PropertyType is a complexType.
/// class gmd__MD_x005fConstraints_x005fPropertyType operations:
/// - soap_new_gmd__MD_x005fConstraints_x005fPropertyType(soap*) allocate
/// - soap_new_gmd__MD_x005fConstraints_x005fPropertyType(soap*, int num) allocate array
/// - soap_new_req_gmd__MD_x005fConstraints_x005fPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__MD_x005fConstraints_x005fPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__MD_x005fConstraints_x005fPropertyType(soap*, gmd__MD_x005fConstraints_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fConstraints_x005fPropertyType(soap, gmd__MD_x005fConstraints_x005fPropertyType*) serialize to a stream
class gmd__MD_x005fConstraints_x005fPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gmd__MD_x005fConstraints_x005fPropertyType_sequence
    {
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="MD_Constraints"> with elements <MD_LegalConstraints> <MD_SecurityConstraints>
   $int                                  __unionMD_x005fConstraints     0;	///< Union _gmd__union_MD_x005fConstraints_x005fPropertyType selector: set to SOAP_UNION__gmd__union_MD_x005fConstraints_x005fPropertyType_<fieldname>
/// Union for substitutionGroup="MD_Constraints"
    union _gmd__union_MD_x005fConstraints_x005fPropertyType
    {
/// Element reference "http://www.isotc211.org/2005/gmd":MD_Constraints.
    gmd__MD_x005fConstraints_x005fType*  MD_x005fConstraints            1;	///< Required element.
/// Element MD_LegalConstraints of type "http://www.isotc211.org/2005/gmd":MD_LegalConstraints_Type.
    gmd__MD_x005fLegalConstraints_x005fType*  MD_x005fLegalConstraints       1;	///< Required element.
/// Element MD_SecurityConstraints of type "http://www.isotc211.org/2005/gmd":MD_SecurityConstraints_Type.
    gmd__MD_x005fSecurityConstraints_x005fType*  MD_x005fSecurityConstraints    1;	///< Required element.
    }                                    __union_MD_x005fConstraints_x005fPropertyType;
//  END OF CHOICE OF SUBSTITUTIONS
    }>                                   __MD_x005fConstraints_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
/// Attribute uuidref of type xs:string.
   @std::string*                         uuidref                        0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.isotc211.org/2005/gmd":MD_LegalConstraints_PropertyType is a complexType.
/// class gmd__MD_x005fLegalConstraints_x005fPropertyType operations:
/// - soap_new_gmd__MD_x005fLegalConstraints_x005fPropertyType(soap*) allocate
/// - soap_new_gmd__MD_x005fLegalConstraints_x005fPropertyType(soap*, int num) allocate array
/// - soap_new_req_gmd__MD_x005fLegalConstraints_x005fPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__MD_x005fLegalConstraints_x005fPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__MD_x005fLegalConstraints_x005fPropertyType(soap*, gmd__MD_x005fLegalConstraints_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fLegalConstraints_x005fPropertyType(soap, gmd__MD_x005fLegalConstraints_x005fPropertyType*) serialize to a stream
class gmd__MD_x005fLegalConstraints_x005fPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gmd__MD_x005fLegalConstraints_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd":MD_LegalConstraints.
    gmd__MD_x005fLegalConstraints_x005fType*  MD_x005fLegalConstraints       1;	///< Required element.
    }>                                   __MD_x005fLegalConstraints_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
/// Attribute uuidref of type xs:string.
   @std::string*                         uuidref                        0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.isotc211.org/2005/gmd":MD_SecurityConstraints_PropertyType is a complexType.
/// class gmd__MD_x005fSecurityConstraints_x005fPropertyType operations:
/// - soap_new_gmd__MD_x005fSecurityConstraints_x005fPropertyType(soap*) allocate
/// - soap_new_gmd__MD_x005fSecurityConstraints_x005fPropertyType(soap*, int num) allocate array
/// - soap_new_req_gmd__MD_x005fSecurityConstraints_x005fPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__MD_x005fSecurityConstraints_x005fPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__MD_x005fSecurityConstraints_x005fPropertyType(soap*, gmd__MD_x005fSecurityConstraints_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fSecurityConstraints_x005fPropertyType(soap, gmd__MD_x005fSecurityConstraints_x005fPropertyType*) serialize to a stream
class gmd__MD_x005fSecurityConstraints_x005fPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gmd__MD_x005fSecurityConstraints_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd":MD_SecurityConstraints.
    gmd__MD_x005fSecurityConstraints_x005fType*  MD_x005fSecurityConstraints    1;	///< Required element.
    }>                                   __MD_x005fSecurityConstraints_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
/// Attribute uuidref of type xs:string.
   @std::string*                         uuidref                        0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.isotc211.org/2005/gmd":MD_ClassificationCode_PropertyType is a complexType.
/// class gmd__MD_x005fClassificationCode_x005fPropertyType operations:
/// - soap_new_gmd__MD_x005fClassificationCode_x005fPropertyType(soap*) allocate
/// - soap_new_gmd__MD_x005fClassificationCode_x005fPropertyType(soap*, int num) allocate array
/// - soap_new_req_gmd__MD_x005fClassificationCode_x005fPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__MD_x005fClassificationCode_x005fPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__MD_x005fClassificationCode_x005fPropertyType(soap*, gmd__MD_x005fClassificationCode_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fClassificationCode_x005fPropertyType(soap, gmd__MD_x005fClassificationCode_x005fPropertyType*) serialize to a stream
class gmd__MD_x005fClassificationCode_x005fPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gmd__MD_x005fClassificationCode_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd":MD_ClassificationCode.
    gco__CodeListValue_x005fType*        MD_x005fClassificationCode     1;	///< Required element.
    }>                                   __MD_x005fClassificationCode_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
};

/// "http://www.isotc211.org/2005/gmd":MD_RestrictionCode_PropertyType is a complexType.
/// class gmd__MD_x005fRestrictionCode_x005fPropertyType operations:
/// - soap_new_gmd__MD_x005fRestrictionCode_x005fPropertyType(soap*) allocate
/// - soap_new_gmd__MD_x005fRestrictionCode_x005fPropertyType(soap*, int num) allocate array
/// - soap_new_req_gmd__MD_x005fRestrictionCode_x005fPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__MD_x005fRestrictionCode_x005fPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__MD_x005fRestrictionCode_x005fPropertyType(soap*, gmd__MD_x005fRestrictionCode_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fRestrictionCode_x005fPropertyType(soap, gmd__MD_x005fRestrictionCode_x005fPropertyType*) serialize to a stream
class gmd__MD_x005fRestrictionCode_x005fPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gmd__MD_x005fRestrictionCode_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd":MD_RestrictionCode.
    gco__CodeListValue_x005fType*        MD_x005fRestrictionCode        1;	///< Required element.
    }>                                   __MD_x005fRestrictionCode_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
};

/// "http://www.isotc211.org/2005/gmd":MD_Medium_PropertyType is a complexType.
/// class gmd__MD_x005fMedium_x005fPropertyType operations:
/// - soap_new_gmd__MD_x005fMedium_x005fPropertyType(soap*) allocate
/// - soap_new_gmd__MD_x005fMedium_x005fPropertyType(soap*, int num) allocate array
/// - soap_new_req_gmd__MD_x005fMedium_x005fPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__MD_x005fMedium_x005fPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__MD_x005fMedium_x005fPropertyType(soap*, gmd__MD_x005fMedium_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fMedium_x005fPropertyType(soap, gmd__MD_x005fMedium_x005fPropertyType*) serialize to a stream
class gmd__MD_x005fMedium_x005fPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gmd__MD_x005fMedium_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd":MD_Medium.
    gmd__MD_x005fMedium_x005fType*       MD_x005fMedium                 1;	///< Required element.
    }>                                   __MD_x005fMedium_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
/// Attribute uuidref of type xs:string.
   @std::string*                         uuidref                        0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.isotc211.org/2005/gmd":MD_DigitalTransferOptions_PropertyType is a complexType.
/// class gmd__MD_x005fDigitalTransferOptions_x005fPropertyType operations:
/// - soap_new_gmd__MD_x005fDigitalTransferOptions_x005fPropertyType(soap*) allocate
/// - soap_new_gmd__MD_x005fDigitalTransferOptions_x005fPropertyType(soap*, int num) allocate array
/// - soap_new_req_gmd__MD_x005fDigitalTransferOptions_x005fPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__MD_x005fDigitalTransferOptions_x005fPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__MD_x005fDigitalTransferOptions_x005fPropertyType(soap*, gmd__MD_x005fDigitalTransferOptions_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fDigitalTransferOptions_x005fPropertyType(soap, gmd__MD_x005fDigitalTransferOptions_x005fPropertyType*) serialize to a stream
class gmd__MD_x005fDigitalTransferOptions_x005fPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gmd__MD_x005fDigitalTransferOptions_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd":MD_DigitalTransferOptions.
    gmd__MD_x005fDigitalTransferOptions_x005fType*  MD_x005fDigitalTransferOptions 1;	///< Required element.
    }>                                   __MD_x005fDigitalTransferOptions_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
/// Attribute uuidref of type xs:string.
   @std::string*                         uuidref                        0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.isotc211.org/2005/gmd":MD_StandardOrderProcess_PropertyType is a complexType.
/// class gmd__MD_x005fStandardOrderProcess_x005fPropertyType operations:
/// - soap_new_gmd__MD_x005fStandardOrderProcess_x005fPropertyType(soap*) allocate
/// - soap_new_gmd__MD_x005fStandardOrderProcess_x005fPropertyType(soap*, int num) allocate array
/// - soap_new_req_gmd__MD_x005fStandardOrderProcess_x005fPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__MD_x005fStandardOrderProcess_x005fPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__MD_x005fStandardOrderProcess_x005fPropertyType(soap*, gmd__MD_x005fStandardOrderProcess_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fStandardOrderProcess_x005fPropertyType(soap, gmd__MD_x005fStandardOrderProcess_x005fPropertyType*) serialize to a stream
class gmd__MD_x005fStandardOrderProcess_x005fPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gmd__MD_x005fStandardOrderProcess_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd":MD_StandardOrderProcess.
    gmd__MD_x005fStandardOrderProcess_x005fType*  MD_x005fStandardOrderProcess   1;	///< Required element.
    }>                                   __MD_x005fStandardOrderProcess_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
/// Attribute uuidref of type xs:string.
   @std::string*                         uuidref                        0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.isotc211.org/2005/gmd":MD_Distributor_PropertyType is a complexType.
/// class gmd__MD_x005fDistributor_x005fPropertyType operations:
/// - soap_new_gmd__MD_x005fDistributor_x005fPropertyType(soap*) allocate
/// - soap_new_gmd__MD_x005fDistributor_x005fPropertyType(soap*, int num) allocate array
/// - soap_new_req_gmd__MD_x005fDistributor_x005fPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__MD_x005fDistributor_x005fPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__MD_x005fDistributor_x005fPropertyType(soap*, gmd__MD_x005fDistributor_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fDistributor_x005fPropertyType(soap, gmd__MD_x005fDistributor_x005fPropertyType*) serialize to a stream
class gmd__MD_x005fDistributor_x005fPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gmd__MD_x005fDistributor_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd":MD_Distributor.
    gmd__MD_x005fDistributor_x005fType*  MD_x005fDistributor            1;	///< Required element.
    }>                                   __MD_x005fDistributor_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
/// Attribute uuidref of type xs:string.
   @std::string*                         uuidref                        0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.isotc211.org/2005/gmd":MD_Distribution_PropertyType is a complexType.
/// class gmd__MD_x005fDistribution_x005fPropertyType operations:
/// - soap_new_gmd__MD_x005fDistribution_x005fPropertyType(soap*) allocate
/// - soap_new_gmd__MD_x005fDistribution_x005fPropertyType(soap*, int num) allocate array
/// - soap_new_req_gmd__MD_x005fDistribution_x005fPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__MD_x005fDistribution_x005fPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__MD_x005fDistribution_x005fPropertyType(soap*, gmd__MD_x005fDistribution_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fDistribution_x005fPropertyType(soap, gmd__MD_x005fDistribution_x005fPropertyType*) serialize to a stream
class gmd__MD_x005fDistribution_x005fPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gmd__MD_x005fDistribution_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd":MD_Distribution.
    gmd__MD_x005fDistribution_x005fType*  MD_x005fDistribution           1;	///< Required element.
    }>                                   __MD_x005fDistribution_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
/// Attribute uuidref of type xs:string.
   @std::string*                         uuidref                        0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.isotc211.org/2005/gmd":MD_Format_PropertyType is a complexType.
/// class gmd__MD_x005fFormat_x005fPropertyType operations:
/// - soap_new_gmd__MD_x005fFormat_x005fPropertyType(soap*) allocate
/// - soap_new_gmd__MD_x005fFormat_x005fPropertyType(soap*, int num) allocate array
/// - soap_new_req_gmd__MD_x005fFormat_x005fPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__MD_x005fFormat_x005fPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__MD_x005fFormat_x005fPropertyType(soap*, gmd__MD_x005fFormat_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fFormat_x005fPropertyType(soap, gmd__MD_x005fFormat_x005fPropertyType*) serialize to a stream
class gmd__MD_x005fFormat_x005fPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gmd__MD_x005fFormat_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd":MD_Format.
    gmd__MD_x005fFormat_x005fType*       MD_x005fFormat                 1;	///< Required element.
    }>                                   __MD_x005fFormat_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
/// Attribute uuidref of type xs:string.
   @std::string*                         uuidref                        0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.isotc211.org/2005/gmd":MD_DistributionUnits_PropertyType is a complexType.
/// class gmd__MD_x005fDistributionUnits_x005fPropertyType operations:
/// - soap_new_gmd__MD_x005fDistributionUnits_x005fPropertyType(soap*) allocate
/// - soap_new_gmd__MD_x005fDistributionUnits_x005fPropertyType(soap*, int num) allocate array
/// - soap_new_req_gmd__MD_x005fDistributionUnits_x005fPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__MD_x005fDistributionUnits_x005fPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__MD_x005fDistributionUnits_x005fPropertyType(soap*, gmd__MD_x005fDistributionUnits_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fDistributionUnits_x005fPropertyType(soap, gmd__MD_x005fDistributionUnits_x005fPropertyType*) serialize to a stream
class gmd__MD_x005fDistributionUnits_x005fPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gmd__MD_x005fDistributionUnits_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd":MD_DistributionUnits.
    gco__CodeListValue_x005fType*        MD_x005fDistributionUnits      1;	///< Required element.
    }>                                   __MD_x005fDistributionUnits_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
};

/// "http://www.isotc211.org/2005/gmd":MD_MediumFormatCode_PropertyType is a complexType.
/// class gmd__MD_x005fMediumFormatCode_x005fPropertyType operations:
/// - soap_new_gmd__MD_x005fMediumFormatCode_x005fPropertyType(soap*) allocate
/// - soap_new_gmd__MD_x005fMediumFormatCode_x005fPropertyType(soap*, int num) allocate array
/// - soap_new_req_gmd__MD_x005fMediumFormatCode_x005fPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__MD_x005fMediumFormatCode_x005fPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__MD_x005fMediumFormatCode_x005fPropertyType(soap*, gmd__MD_x005fMediumFormatCode_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fMediumFormatCode_x005fPropertyType(soap, gmd__MD_x005fMediumFormatCode_x005fPropertyType*) serialize to a stream
class gmd__MD_x005fMediumFormatCode_x005fPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gmd__MD_x005fMediumFormatCode_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd":MD_MediumFormatCode.
    gco__CodeListValue_x005fType*        MD_x005fMediumFormatCode       1;	///< Required element.
    }>                                   __MD_x005fMediumFormatCode_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
};

/// "http://www.isotc211.org/2005/gmd":MD_MediumNameCode_PropertyType is a complexType.
/// class gmd__MD_x005fMediumNameCode_x005fPropertyType operations:
/// - soap_new_gmd__MD_x005fMediumNameCode_x005fPropertyType(soap*) allocate
/// - soap_new_gmd__MD_x005fMediumNameCode_x005fPropertyType(soap*, int num) allocate array
/// - soap_new_req_gmd__MD_x005fMediumNameCode_x005fPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__MD_x005fMediumNameCode_x005fPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__MD_x005fMediumNameCode_x005fPropertyType(soap*, gmd__MD_x005fMediumNameCode_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fMediumNameCode_x005fPropertyType(soap, gmd__MD_x005fMediumNameCode_x005fPropertyType*) serialize to a stream
class gmd__MD_x005fMediumNameCode_x005fPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gmd__MD_x005fMediumNameCode_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd":MD_MediumNameCode.
    gco__CodeListValue_x005fType*        MD_x005fMediumNameCode         1;	///< Required element.
    }>                                   __MD_x005fMediumNameCode_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
};

/// "http://www.isotc211.org/2005/gmd":MD_MaintenanceInformation_PropertyType is a complexType.
/// class gmd__MD_x005fMaintenanceInformation_x005fPropertyType operations:
/// - soap_new_gmd__MD_x005fMaintenanceInformation_x005fPropertyType(soap*) allocate
/// - soap_new_gmd__MD_x005fMaintenanceInformation_x005fPropertyType(soap*, int num) allocate array
/// - soap_new_req_gmd__MD_x005fMaintenanceInformation_x005fPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__MD_x005fMaintenanceInformation_x005fPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__MD_x005fMaintenanceInformation_x005fPropertyType(soap*, gmd__MD_x005fMaintenanceInformation_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fMaintenanceInformation_x005fPropertyType(soap, gmd__MD_x005fMaintenanceInformation_x005fPropertyType*) serialize to a stream
class gmd__MD_x005fMaintenanceInformation_x005fPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gmd__MD_x005fMaintenanceInformation_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd":MD_MaintenanceInformation.
    gmd__MD_x005fMaintenanceInformation_x005fType*  MD_x005fMaintenanceInformation 1;	///< Required element.
    }>                                   __MD_x005fMaintenanceInformation_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
/// Attribute uuidref of type xs:string.
   @std::string*                         uuidref                        0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.isotc211.org/2005/gmd":MD_ScopeDescription_Type is a complexType.
/// @brief Description of the class of information covered by the information
/// class gmd__MD_x005fScopeDescription_x005fType operations:
/// - soap_new_gmd__MD_x005fScopeDescription_x005fType(soap*) allocate
/// - soap_new_gmd__MD_x005fScopeDescription_x005fType(soap*, int num) allocate array
/// - soap_new_req_gmd__MD_x005fScopeDescription_x005fType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__MD_x005fScopeDescription_x005fType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__MD_x005fScopeDescription_x005fType(soap*, gmd__MD_x005fScopeDescription_x005fType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fScopeDescription_x005fType(soap, gmd__MD_x005fScopeDescription_x005fType*) serialize to a stream
class gmd__MD_x005fScopeDescription_x005fType : public xsd__anyType
{ public:
/// CHOICE <xs:choice>
   $int                                  __union_MD_x005fScopeDescription_x005fType;	///< Union _gmd__union_MD_x005fScopeDescription_x005fType selector: set to SOAP_UNION__gmd__union_MD_x005fScopeDescription_x005fType_<fieldname>
/// Union for choice in type gmd__MD_x005fScopeDescription_x005fType
    union _gmd__union_MD_x005fScopeDescription_x005fType
    {
/// Vector of gco__ObjectReference_x005fPropertyType* with length 1..unbounded
    std::vector<gco__ObjectReference_x005fPropertyType*> *attributes                     1;
/// Vector of gco__ObjectReference_x005fPropertyType* with length 1..unbounded
    std::vector<gco__ObjectReference_x005fPropertyType*> *features                       1;
/// Vector of gco__ObjectReference_x005fPropertyType* with length 1..unbounded
    std::vector<gco__ObjectReference_x005fPropertyType*> *featureInstances               1;
/// Vector of gco__ObjectReference_x005fPropertyType* with length 1..unbounded
    std::vector<gco__ObjectReference_x005fPropertyType*> *attributeInstances             1;
/// Element dataset of type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  dataset                        1;	///< Required element.
/// Element other of type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  other                          1;	///< Required element.
    }                                    union_MD_x005fScopeDescription_x005fType;
//  END OF CHOICE
};

/// "http://www.isotc211.org/2005/gmd":MD_ScopeDescription_PropertyType is a complexType.
/// class gmd__MD_x005fScopeDescription_x005fPropertyType operations:
/// - soap_new_gmd__MD_x005fScopeDescription_x005fPropertyType(soap*) allocate
/// - soap_new_gmd__MD_x005fScopeDescription_x005fPropertyType(soap*, int num) allocate array
/// - soap_new_req_gmd__MD_x005fScopeDescription_x005fPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__MD_x005fScopeDescription_x005fPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__MD_x005fScopeDescription_x005fPropertyType(soap*, gmd__MD_x005fScopeDescription_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fScopeDescription_x005fPropertyType(soap, gmd__MD_x005fScopeDescription_x005fPropertyType*) serialize to a stream
class gmd__MD_x005fScopeDescription_x005fPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gmd__MD_x005fScopeDescription_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd":MD_ScopeDescription.
    gmd__MD_x005fScopeDescription_x005fType*  MD_x005fScopeDescription       1;	///< Required element.
    }>                                   __MD_x005fScopeDescription_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
};

/// "http://www.isotc211.org/2005/gmd":MD_MaintenanceFrequencyCode_PropertyType is a complexType.
/// class gmd__MD_x005fMaintenanceFrequencyCode_x005fPropertyType operations:
/// - soap_new_gmd__MD_x005fMaintenanceFrequencyCode_x005fPropertyType(soap*) allocate
/// - soap_new_gmd__MD_x005fMaintenanceFrequencyCode_x005fPropertyType(soap*, int num) allocate array
/// - soap_new_req_gmd__MD_x005fMaintenanceFrequencyCode_x005fPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__MD_x005fMaintenanceFrequencyCode_x005fPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__MD_x005fMaintenanceFrequencyCode_x005fPropertyType(soap*, gmd__MD_x005fMaintenanceFrequencyCode_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fMaintenanceFrequencyCode_x005fPropertyType(soap, gmd__MD_x005fMaintenanceFrequencyCode_x005fPropertyType*) serialize to a stream
class gmd__MD_x005fMaintenanceFrequencyCode_x005fPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gmd__MD_x005fMaintenanceFrequencyCode_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd":MD_MaintenanceFrequencyCode.
    gco__CodeListValue_x005fType*        MD_x005fMaintenanceFrequencyCode 1;	///< Required element.
    }>                                   __MD_x005fMaintenanceFrequencyCode_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
};

/// "http://www.isotc211.org/2005/gmd":MD_ScopeCode_PropertyType is a complexType.
/// class gmd__MD_x005fScopeCode_x005fPropertyType operations:
/// - soap_new_gmd__MD_x005fScopeCode_x005fPropertyType(soap*) allocate
/// - soap_new_gmd__MD_x005fScopeCode_x005fPropertyType(soap*, int num) allocate array
/// - soap_new_req_gmd__MD_x005fScopeCode_x005fPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__MD_x005fScopeCode_x005fPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__MD_x005fScopeCode_x005fPropertyType(soap*, gmd__MD_x005fScopeCode_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fScopeCode_x005fPropertyType(soap, gmd__MD_x005fScopeCode_x005fPropertyType*) serialize to a stream
class gmd__MD_x005fScopeCode_x005fPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gmd__MD_x005fScopeCode_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd":MD_ScopeCode.
    gco__CodeListValue_x005fType*        MD_x005fScopeCode              1;	///< Required element.
    }>                                   __MD_x005fScopeCode_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
};

/// "http://www.isotc211.org/2005/gmd":PT_Locale_PropertyType is a complexType.
/// class gmd__PT_x005fLocale_x005fPropertyType operations:
/// - soap_new_gmd__PT_x005fLocale_x005fPropertyType(soap*) allocate
/// - soap_new_gmd__PT_x005fLocale_x005fPropertyType(soap*, int num) allocate array
/// - soap_new_req_gmd__PT_x005fLocale_x005fPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__PT_x005fLocale_x005fPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__PT_x005fLocale_x005fPropertyType(soap*, gmd__PT_x005fLocale_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__PT_x005fLocale_x005fPropertyType(soap, gmd__PT_x005fLocale_x005fPropertyType*) serialize to a stream
class gmd__PT_x005fLocale_x005fPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gmd__PT_x005fLocale_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd":PT_Locale.
    gmd__PT_x005fLocale_x005fType*       PT_x005fLocale                 1;	///< Required element.
    }>                                   __PT_x005fLocale_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
/// Attribute uuidref of type xs:string.
   @std::string*                         uuidref                        0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.isotc211.org/2005/gmd":PT_LocaleContainer_Type is a complexType.
/// class gmd__PT_x005fLocaleContainer_x005fType operations:
/// - soap_new_gmd__PT_x005fLocaleContainer_x005fType(soap*) allocate
/// - soap_new_gmd__PT_x005fLocaleContainer_x005fType(soap*, int num) allocate array
/// - soap_new_req_gmd__PT_x005fLocaleContainer_x005fType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__PT_x005fLocaleContainer_x005fType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__PT_x005fLocaleContainer_x005fType(soap*, gmd__PT_x005fLocaleContainer_x005fType*) deserialize from a stream
/// - int soap_write_gmd__PT_x005fLocaleContainer_x005fType(soap, gmd__PT_x005fLocaleContainer_x005fType*) serialize to a stream
class gmd__PT_x005fLocaleContainer_x005fType : public xsd__anyType
{ public:
/// Element description of type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  description                    1;	///< Required element.
/// Element locale of type "http://www.isotc211.org/2005/gmd":PT_Locale_PropertyType.
    gmd__PT_x005fLocale_x005fPropertyType*  locale                         1;	///< Required element.
/// Vector of gmd__CI_x005fDate_x005fPropertyType* with length 1..unbounded
    std::vector<gmd__CI_x005fDate_x005fPropertyType*> date                           1;
/// Vector of gmd__CI_x005fResponsibleParty_x005fPropertyType* with length 1..unbounded
    std::vector<gmd__CI_x005fResponsibleParty_x005fPropertyType*> responsibleParty               1;
/// Vector of gmd__LocalisedCharacterString_x005fPropertyType* with length 1..unbounded
    std::vector<gmd__LocalisedCharacterString_x005fPropertyType*> localisedString                1;
};

/// "http://www.isotc211.org/2005/gmd":PT_LocaleContainer_PropertyType is a complexType.
/// class gmd__PT_x005fLocaleContainer_x005fPropertyType operations:
/// - soap_new_gmd__PT_x005fLocaleContainer_x005fPropertyType(soap*) allocate
/// - soap_new_gmd__PT_x005fLocaleContainer_x005fPropertyType(soap*, int num) allocate array
/// - soap_new_req_gmd__PT_x005fLocaleContainer_x005fPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__PT_x005fLocaleContainer_x005fPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__PT_x005fLocaleContainer_x005fPropertyType(soap*, gmd__PT_x005fLocaleContainer_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__PT_x005fLocaleContainer_x005fPropertyType(soap, gmd__PT_x005fLocaleContainer_x005fPropertyType*) serialize to a stream
class gmd__PT_x005fLocaleContainer_x005fPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gmd__PT_x005fLocaleContainer_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd":PT_LocaleContainer.
    gmd__PT_x005fLocaleContainer_x005fType*  PT_x005fLocaleContainer        1;	///< Required element.
    }>                                   __PT_x005fLocaleContainer_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
/// Attribute uuidref of type xs:string.
   @std::string*                         uuidref                        0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.isotc211.org/2005/gmd":LanguageCode_PropertyType is a complexType.
/// class gmd__LanguageCode_x005fPropertyType operations:
/// - soap_new_gmd__LanguageCode_x005fPropertyType(soap*) allocate
/// - soap_new_gmd__LanguageCode_x005fPropertyType(soap*, int num) allocate array
/// - soap_new_req_gmd__LanguageCode_x005fPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__LanguageCode_x005fPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__LanguageCode_x005fPropertyType(soap*, gmd__LanguageCode_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__LanguageCode_x005fPropertyType(soap, gmd__LanguageCode_x005fPropertyType*) serialize to a stream
class gmd__LanguageCode_x005fPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gmd__LanguageCode_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd":LanguageCode.
    gco__CodeListValue_x005fType*        LanguageCode                   1;	///< Required element.
    }>                                   __LanguageCode_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
};

/// "http://www.isotc211.org/2005/gmd":Country_PropertyType is a complexType.
/// class gmd__Country_x005fPropertyType operations:
/// - soap_new_gmd__Country_x005fPropertyType(soap*) allocate
/// - soap_new_gmd__Country_x005fPropertyType(soap*, int num) allocate array
/// - soap_new_req_gmd__Country_x005fPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__Country_x005fPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__Country_x005fPropertyType(soap*, gmd__Country_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__Country_x005fPropertyType(soap, gmd__Country_x005fPropertyType*) serialize to a stream
class gmd__Country_x005fPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gmd__Country_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd":Country.
    gco__CodeListValue_x005fType*        Country                        1;	///< Required element.
    }>                                   __Country_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
};

/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://www.w3.org/1999/xlink                                             *
 *                                                                            *
\******************************************************************************/


/// "http://www.w3.org/1999/xlink":simple is a complexType.
/// @brief Intended for use as the type of user-declared elements to make them simple links.
/// class xlink__simple operations:
/// - soap_new_xlink__simple(soap*) allocate
/// - soap_new_xlink__simple(soap*, int num) allocate array
/// - soap_new_req_xlink__simple(soap*, ...) allocate, set required members
/// - soap_new_set_xlink__simple(soap*, ...) allocate, set all public members
/// - int soap_read_xlink__simple(soap*, xlink__simple*) deserialize from a stream
/// - int soap_write_xlink__simple(soap, xlink__simple*) serialize to a stream
class xlink__simple : public xsd__anyType
{ public:
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
/// TODO: this mixed complexType is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __mixed                       0;	///< Catch mixed content in XML string
};

/// "http://www.w3.org/1999/xlink":extended is a complexType.
/// @brief Intended for use as the type of user-declared elements to make them extended links. Note that the elements referenced in the content model are all abstract. The intention is that by simply declaring elements with these as their substitutionGroup, all the right things will happen.
/// class xlink__extended operations:
/// - soap_new_xlink__extended(soap*) allocate
/// - soap_new_xlink__extended(soap*, int num) allocate array
/// - soap_new_req_xlink__extended(soap*, ...) allocate, set required members
/// - soap_new_set_xlink__extended(soap*, ...) allocate, set all public members
/// - int soap_read_xlink__extended(soap*, xlink__extended*) deserialize from a stream
/// - int soap_write_xlink__extended(soap, xlink__extended*) serialize to a stream
class xlink__extended : public xsd__anyType
{ public:
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType                 xlink__type                    1 = xlink__typeType__extended;	///< Fixed required value="extended".
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
};

/// "http://www.w3.org/1999/xlink":titleEltType is a complexType.
/// class xlink__titleEltType operations:
/// - soap_new_xlink__titleEltType(soap*) allocate
/// - soap_new_xlink__titleEltType(soap*, int num) allocate array
/// - soap_new_req_xlink__titleEltType(soap*, ...) allocate, set required members
/// - soap_new_set_xlink__titleEltType(soap*, ...) allocate, set all public members
/// - int soap_read_xlink__titleEltType(soap*, xlink__titleEltType*) deserialize from a stream
/// - int soap_write_xlink__titleEltType(soap, xlink__titleEltType*) serialize to a stream
class xlink__titleEltType : public xsd__anyType
{ public:
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType                 xlink__type                    1 = xlink__typeType__title;	///< Fixed required value="title".
/// @brief xml:lang is not required, but provides much of the motivation for title elements in addition to attributes, and so is provided here for convenience.
/// Imported attribute reference xml:lang.
   @_xml__lang*                          xml__lang                      0;	///< Optional attribute.
/// TODO: this mixed complexType is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __mixed                       0;	///< Catch mixed content in XML string
};

/// "http://www.w3.org/1999/xlink":resourceType is a complexType.
/// class xlink__resourceType operations:
/// - soap_new_xlink__resourceType(soap*) allocate
/// - soap_new_xlink__resourceType(soap*, int num) allocate array
/// - soap_new_req_xlink__resourceType(soap*, ...) allocate, set required members
/// - soap_new_set_xlink__resourceType(soap*, ...) allocate, set all public members
/// - int soap_read_xlink__resourceType(soap*, xlink__resourceType*) deserialize from a stream
/// - int soap_write_xlink__resourceType(soap, xlink__resourceType*) serialize to a stream
class xlink__resourceType : public xsd__anyType
{ public:
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType                 xlink__type                    1 = xlink__typeType__resource;	///< Fixed required value="resource".
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":label.
   @xlink__labelType*                    xlink__label                   0;	///< Optional attribute.
/// TODO: this mixed complexType is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __mixed                       0;	///< Catch mixed content in XML string
};

/// "http://www.w3.org/1999/xlink":locatorType is a complexType.
/// class xlink__locatorType operations:
/// - soap_new_xlink__locatorType(soap*) allocate
/// - soap_new_xlink__locatorType(soap*, int num) allocate array
/// - soap_new_req_xlink__locatorType(soap*, ...) allocate, set required members
/// - soap_new_set_xlink__locatorType(soap*, ...) allocate, set all public members
/// - int soap_read_xlink__locatorType(soap*, xlink__locatorType*) deserialize from a stream
/// - int soap_write_xlink__locatorType(soap, xlink__locatorType*) serialize to a stream
class xlink__locatorType : public xsd__anyType
{ public:
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType                 xlink__type                    1 = xlink__typeType__locator;	///< Fixed required value="locator".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType                      xlink__href                    1;	///< Required attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// @brief label is not required, but locators have no particular XLink function if they are not labeled.
/// Attribute reference "http://www.w3.org/1999/xlink":label.
   @xlink__labelType*                    xlink__label                   0;	///< Optional attribute.
};

/// "http://www.w3.org/1999/xlink":arcType is a complexType.
/// class xlink__arcType operations:
/// - soap_new_xlink__arcType(soap*) allocate
/// - soap_new_xlink__arcType(soap*, int num) allocate array
/// - soap_new_req_xlink__arcType(soap*, ...) allocate, set required members
/// - soap_new_set_xlink__arcType(soap*, ...) allocate, set all public members
/// - int soap_read_xlink__arcType(soap*, xlink__arcType*) deserialize from a stream
/// - int soap_write_xlink__arcType(soap, xlink__arcType*) serialize to a stream
class xlink__arcType : public xsd__anyType
{ public:
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType                 xlink__type                    1 = xlink__typeType__arc;	///< Fixed required value="arc".
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":from.
   @xlink__fromType*                     xlink__from                    0;	///< Optional attribute.
/// @brief from and to have default behavior when values are missing
/// Attribute reference "http://www.w3.org/1999/xlink":to.
   @xlink__toType*                       xlink__to                      0;	///< Optional attribute.
};

/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://www.isotc211.org/2005/gco                                         *
 *                                                                            *
\******************************************************************************/


/// "http://www.isotc211.org/2005/gco":TypeName_PropertyType is a complexType.
/// class gco__TypeName_x005fPropertyType operations:
/// - soap_new_gco__TypeName_x005fPropertyType(soap*) allocate
/// - soap_new_gco__TypeName_x005fPropertyType(soap*, int num) allocate array
/// - soap_new_req_gco__TypeName_x005fPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gco__TypeName_x005fPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gco__TypeName_x005fPropertyType(soap*, gco__TypeName_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gco__TypeName_x005fPropertyType(soap, gco__TypeName_x005fPropertyType*) serialize to a stream
class gco__TypeName_x005fPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gco__TypeName_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gco":TypeName.
    gco__TypeName_x005fType*             TypeName                       1;	///< Required element.
    }>                                   __TypeName_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute uuidref of type xs:string.
   @std::string*                         uuidref                        0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.isotc211.org/2005/gco":MemberName_PropertyType is a complexType.
/// class gco__MemberName_x005fPropertyType operations:
/// - soap_new_gco__MemberName_x005fPropertyType(soap*) allocate
/// - soap_new_gco__MemberName_x005fPropertyType(soap*, int num) allocate array
/// - soap_new_req_gco__MemberName_x005fPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gco__MemberName_x005fPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gco__MemberName_x005fPropertyType(soap*, gco__MemberName_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gco__MemberName_x005fPropertyType(soap, gco__MemberName_x005fPropertyType*) serialize to a stream
class gco__MemberName_x005fPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gco__MemberName_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gco":MemberName.
    gco__MemberName_x005fType*           MemberName                     1;	///< Required element.
    }>                                   __MemberName_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute uuidref of type xs:string.
   @std::string*                         uuidref                        0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.isotc211.org/2005/gco":Multiplicity_PropertyType is a complexType.
/// class gco__Multiplicity_x005fPropertyType operations:
/// - soap_new_gco__Multiplicity_x005fPropertyType(soap*) allocate
/// - soap_new_gco__Multiplicity_x005fPropertyType(soap*, int num) allocate array
/// - soap_new_req_gco__Multiplicity_x005fPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gco__Multiplicity_x005fPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gco__Multiplicity_x005fPropertyType(soap*, gco__Multiplicity_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gco__Multiplicity_x005fPropertyType(soap, gco__Multiplicity_x005fPropertyType*) serialize to a stream
class gco__Multiplicity_x005fPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gco__Multiplicity_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gco":Multiplicity.
    gco__Multiplicity_x005fType*         Multiplicity                   1;	///< Required element.
    }>                                   __Multiplicity_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute uuidref of type xs:string.
   @std::string*                         uuidref                        0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.isotc211.org/2005/gco":MultiplicityRange_PropertyType is a complexType.
/// class gco__MultiplicityRange_x005fPropertyType operations:
/// - soap_new_gco__MultiplicityRange_x005fPropertyType(soap*) allocate
/// - soap_new_gco__MultiplicityRange_x005fPropertyType(soap*, int num) allocate array
/// - soap_new_req_gco__MultiplicityRange_x005fPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gco__MultiplicityRange_x005fPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gco__MultiplicityRange_x005fPropertyType(soap*, gco__MultiplicityRange_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gco__MultiplicityRange_x005fPropertyType(soap, gco__MultiplicityRange_x005fPropertyType*) serialize to a stream
class gco__MultiplicityRange_x005fPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gco__MultiplicityRange_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gco":MultiplicityRange.
    gco__MultiplicityRange_x005fType*    MultiplicityRange              1;	///< Required element.
    }>                                   __MultiplicityRange_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute uuidref of type xs:string.
   @std::string*                         uuidref                        0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.isotc211.org/2005/gco":Measure_PropertyType is a complexType.
/// class gco__Measure_x005fPropertyType operations:
/// - soap_new_gco__Measure_x005fPropertyType(soap*) allocate
/// - soap_new_gco__Measure_x005fPropertyType(soap*, int num) allocate array
/// - soap_new_req_gco__Measure_x005fPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gco__Measure_x005fPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gco__Measure_x005fPropertyType(soap*, gco__Measure_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gco__Measure_x005fPropertyType(soap, gco__Measure_x005fPropertyType*) serialize to a stream
class gco__Measure_x005fPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gco__Measure_x005fPropertyType_sequence
    {
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="Measure"> with elements <Length> <Angle> <Scale>
   $int                                  __unionMeasure                 0;	///< Union _gco__union_Measure_x005fPropertyType selector: set to SOAP_UNION__gco__union_Measure_x005fPropertyType_<fieldname>
/// Union for substitutionGroup="Measure"
    union _gco__union_Measure_x005fPropertyType
    {
/// Element reference "http://www.isotc211.org/2005/gco":Measure.
    gml__MeasureType*                    Measure                        1;	///< Required element.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="Length"> with elements <Distance>
/// Element Length of type "http://www.opengis.net/gml/3.2":LengthType.
    gml__LengthType*                     Length                         1;	///< Required element.
/// Element Distance of type "http://www.opengis.net/gml/3.2":LengthType.
    gml__LengthType*                     Distance                       1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
/// Element Angle of type "http://www.opengis.net/gml/3.2":AngleType.
    gml__AngleType*                      Angle                          1;	///< Required element.
/// Element Scale of type "http://www.opengis.net/gml/3.2":ScaleType.
    gml__ScaleType*                      Scale                          1;	///< Required element.
    }                                    __union_Measure_x005fPropertyType;
//  END OF CHOICE OF SUBSTITUTIONS
    }>                                   __Measure_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
};

/// "http://www.isotc211.org/2005/gco":Length_PropertyType is a complexType.
/// class gco__Length_x005fPropertyType operations:
/// - soap_new_gco__Length_x005fPropertyType(soap*) allocate
/// - soap_new_gco__Length_x005fPropertyType(soap*, int num) allocate array
/// - soap_new_req_gco__Length_x005fPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gco__Length_x005fPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gco__Length_x005fPropertyType(soap*, gco__Length_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gco__Length_x005fPropertyType(soap, gco__Length_x005fPropertyType*) serialize to a stream
class gco__Length_x005fPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gco__Length_x005fPropertyType_sequence
    {
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="Length"> with elements <Distance>
   $int                                  __unionLength                  0;	///< Union _gco__union_Length_x005fPropertyType selector: set to SOAP_UNION__gco__union_Length_x005fPropertyType_<fieldname>
/// Union for substitutionGroup="Length"
    union _gco__union_Length_x005fPropertyType
    {
/// Element reference "http://www.isotc211.org/2005/gco":Length.
    gml__LengthType*                     Length                         1;	///< Required element.
/// Element Distance of type "http://www.opengis.net/gml/3.2":LengthType.
    gml__LengthType*                     Distance                       1;	///< Required element.
    }                                    __union_Length_x005fPropertyType;
//  END OF CHOICE OF SUBSTITUTIONS
    }>                                   __Length_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
};

/// "http://www.isotc211.org/2005/gco":Angle_PropertyType is a complexType.
/// class gco__Angle_x005fPropertyType operations:
/// - soap_new_gco__Angle_x005fPropertyType(soap*) allocate
/// - soap_new_gco__Angle_x005fPropertyType(soap*, int num) allocate array
/// - soap_new_req_gco__Angle_x005fPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gco__Angle_x005fPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gco__Angle_x005fPropertyType(soap*, gco__Angle_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gco__Angle_x005fPropertyType(soap, gco__Angle_x005fPropertyType*) serialize to a stream
class gco__Angle_x005fPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gco__Angle_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gco":Angle.
    gml__AngleType*                      Angle                          1;	///< Required element.
    }>                                   __Angle_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
};

/// "http://www.isotc211.org/2005/gco":Scale_PropertyType is a complexType.
/// class gco__Scale_x005fPropertyType operations:
/// - soap_new_gco__Scale_x005fPropertyType(soap*) allocate
/// - soap_new_gco__Scale_x005fPropertyType(soap*, int num) allocate array
/// - soap_new_req_gco__Scale_x005fPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gco__Scale_x005fPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gco__Scale_x005fPropertyType(soap*, gco__Scale_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gco__Scale_x005fPropertyType(soap, gco__Scale_x005fPropertyType*) serialize to a stream
class gco__Scale_x005fPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gco__Scale_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gco":Scale.
    gml__ScaleType*                      Scale                          1;	///< Required element.
    }>                                   __Scale_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
};

/// "http://www.isotc211.org/2005/gco":Distance_PropertyType is a complexType.
/// class gco__Distance_x005fPropertyType operations:
/// - soap_new_gco__Distance_x005fPropertyType(soap*) allocate
/// - soap_new_gco__Distance_x005fPropertyType(soap*, int num) allocate array
/// - soap_new_req_gco__Distance_x005fPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gco__Distance_x005fPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gco__Distance_x005fPropertyType(soap*, gco__Distance_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gco__Distance_x005fPropertyType(soap, gco__Distance_x005fPropertyType*) serialize to a stream
class gco__Distance_x005fPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gco__Distance_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gco":Distance.
    gml__LengthType*                     Distance                       1;	///< Required element.
    }>                                   __Distance_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
};

/// "http://www.isotc211.org/2005/gco":CharacterString_PropertyType is a complexType.
/// class gco__CharacterString_x005fPropertyType operations:
/// - soap_new_gco__CharacterString_x005fPropertyType(soap*) allocate
/// - soap_new_gco__CharacterString_x005fPropertyType(soap*, int num) allocate array
/// - soap_new_req_gco__CharacterString_x005fPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gco__CharacterString_x005fPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gco__CharacterString_x005fPropertyType(soap*, gco__CharacterString_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gco__CharacterString_x005fPropertyType(soap, gco__CharacterString_x005fPropertyType*) serialize to a stream
class gco__CharacterString_x005fPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gco__CharacterString_x005fPropertyType_sequence
    {
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="CharacterString"> with elements <MD_PixelOrientationCode> <MD_PixelOrientationCode> <MD_TopologyLevelCode> <MD_TopologyLevelCode> <MD_GeometricObjectTypeCode> <MD_GeometricObjectTypeCode> <MD_CellGeometryCode> <MD_CellGeometryCode> <MD_DimensionNameTypeCode> <MD_DimensionNameTypeCode> <CI_RoleCode> <CI_RoleCode> <CI_PresentationFormCode> <CI_PresentationFormCode> <CI_OnLineFunctionCode> <CI_OnLineFunctionCode> <CI_DateTypeCode> <CI_DateTypeCode> <MD_ObligationCode> <MD_ObligationCode> <MD_DatatypeCode> <MD_DatatypeCode> <MD_CoverageContentTypeCode> <MD_CoverageContentTypeCode> <MD_ImagingConditionCode> <MD_ImagingConditionCode> <DQ_EvaluationMethodTypeCode> <DQ_EvaluationMethodTypeCode> <MD_TopicCategoryCode> <MD_TopicCategoryCode> <MD_CharacterSetCode> <MD_CharacterSetCode> <MD_SpatialRepresentationTypeCode> <MD_SpatialRepresentationTypeCode> <MD_ProgressCode> <MD_ProgressCode> <MD_KeywordTypeCode> <MD_KeywordTypeCode> <DS_AssociationTypeCode> <DS_AssociationTypeCode> <DS_InitiativeTypeCode> <DS_InitiativeTypeCode> <MD_ClassificationCode> <MD_ClassificationCode> <MD_RestrictionCode> <MD_RestrictionCode> <MD_DistributionUnits> <MD_DistributionUnits> <MD_MediumFormatCode> <MD_MediumFormatCode> <MD_MediumNameCode> <MD_MediumNameCode> <MD_MaintenanceFrequencyCode> <MD_MaintenanceFrequencyCode> <MD_ScopeCode> <MD_ScopeCode> <LocalisedCharacterString> <LocalisedCharacterString> <LanguageCode> <LanguageCode> <Country> <Country>
   $int                                  __unionCharacterString         0;	///< Union _gco__union_CharacterString_x005fPropertyType selector: set to SOAP_UNION__gco__union_CharacterString_x005fPropertyType_<fieldname>
/// Union for substitutionGroup="CharacterString"
    union _gco__union_CharacterString_x005fPropertyType
    {
/// Element reference "http://www.isotc211.org/2005/gco":CharacterString.
    std::string*                         CharacterString                1;	///< Required element.
/// Element MD_PixelOrientationCode of type "http://www.isotc211.org/2005/gmd":MD_PixelOrientationCode_Type.
    enum gmd__MD_x005fPixelOrientationCode_x005fType  MD_x005fPixelOrientationCode   1;	///< Required element.
/// Element MD_PixelOrientationCode of type "http://www.isotc211.org/2005/gmd":MD_PixelOrientationCode_Type.
    //jld enum gmd__MD_x005fPixelOrientationCode_x005fType  MD_x005fPixelOrientationCode   1;	///< Required element.
/// Element MD_TopologyLevelCode of type "http://www.isotc211.org/2005/gco":CodeListValue_Type.
    gco__CodeListValue_x005fType*        MD_x005fTopologyLevelCode      1;	///< Required element.
/// Element MD_TopologyLevelCode of type "http://www.isotc211.org/2005/gco":CodeListValue_Type.
   //jld  gco__CodeListValue_x005fType*        MD_x005fTopologyLevelCode      1;	///< Required element.
/// Element MD_GeometricObjectTypeCode of type "http://www.isotc211.org/2005/gco":CodeListValue_Type.
    gco__CodeListValue_x005fType*        MD_x005fGeometricObjectTypeCode 1;	///< Required element.
/// Element MD_GeometricObjectTypeCode of type "http://www.isotc211.org/2005/gco":CodeListValue_Type.
    //jld gco__CodeListValue_x005fType*        MD_x005fGeometricObjectTypeCode 1;	///< Required element.
/// Element MD_CellGeometryCode of type "http://www.isotc211.org/2005/gco":CodeListValue_Type.
    gco__CodeListValue_x005fType*        MD_x005fCellGeometryCode       1;	///< Required element.
/// Element MD_CellGeometryCode of type "http://www.isotc211.org/2005/gco":CodeListValue_Type.
    //jld gco__CodeListValue_x005fType*        MD_x005fCellGeometryCode       1;	///< Required element.
/// Element MD_DimensionNameTypeCode of type "http://www.isotc211.org/2005/gco":CodeListValue_Type.
    gco__CodeListValue_x005fType*        MD_x005fDimensionNameTypeCode  1;	///< Required element.
/// Element MD_DimensionNameTypeCode of type "http://www.isotc211.org/2005/gco":CodeListValue_Type.
    //jld gco__CodeListValue_x005fType*        MD_x005fDimensionNameTypeCode  1;	///< Required element.
/// Element CI_RoleCode of type "http://www.isotc211.org/2005/gco":CodeListValue_Type.
    gco__CodeListValue_x005fType*        CI_x005fRoleCode               1;	///< Required element.
/// Element CI_RoleCode of type "http://www.isotc211.org/2005/gco":CodeListValue_Type.
    //jld gco__CodeListValue_x005fType*        CI_x005fRoleCode               1;	///< Required element.
/// Element CI_PresentationFormCode of type "http://www.isotc211.org/2005/gco":CodeListValue_Type.
    gco__CodeListValue_x005fType*        CI_x005fPresentationFormCode   1;	///< Required element.
/// Element CI_PresentationFormCode of type "http://www.isotc211.org/2005/gco":CodeListValue_Type.
    //jld gco__CodeListValue_x005fType*        CI_x005fPresentationFormCode   1;	///< Required element.
/// Element CI_OnLineFunctionCode of type "http://www.isotc211.org/2005/gco":CodeListValue_Type.
    gco__CodeListValue_x005fType*        CI_x005fOnLineFunctionCode     1;	///< Required element.
/// Element CI_OnLineFunctionCode of type "http://www.isotc211.org/2005/gco":CodeListValue_Type.
    //jld gco__CodeListValue_x005fType*        CI_x005fOnLineFunctionCode     1;	///< Required element.
/// Element CI_DateTypeCode of type "http://www.isotc211.org/2005/gco":CodeListValue_Type.
    gco__CodeListValue_x005fType*        CI_x005fDateTypeCode           1;	///< Required element.
/// Element CI_DateTypeCode of type "http://www.isotc211.org/2005/gco":CodeListValue_Type.
    //jld gco__CodeListValue_x005fType*        CI_x005fDateTypeCode           1;	///< Required element.
/// Element MD_ObligationCode of type "http://www.isotc211.org/2005/gmd":MD_ObligationCode_Type.
    enum gmd__MD_x005fObligationCode_x005fType  MD_x005fObligationCode         1;	///< Required element.
/// Element MD_ObligationCode of type "http://www.isotc211.org/2005/gmd":MD_ObligationCode_Type.
    //jld enum gmd__MD_x005fObligationCode_x005fType  MD_x005fObligationCode         1;	///< Required element.
/// Element MD_DatatypeCode of type "http://www.isotc211.org/2005/gco":CodeListValue_Type.
    gco__CodeListValue_x005fType*        MD_x005fDatatypeCode           1;	///< Required element.
/// Element MD_DatatypeCode of type "http://www.isotc211.org/2005/gco":CodeListValue_Type.
    //jld gco__CodeListValue_x005fType*        MD_x005fDatatypeCode           1;	///< Required element.
/// Element MD_CoverageContentTypeCode of type "http://www.isotc211.org/2005/gco":CodeListValue_Type.
    gco__CodeListValue_x005fType*        MD_x005fCoverageContentTypeCode 1;	///< Required element.
/// Element MD_CoverageContentTypeCode of type "http://www.isotc211.org/2005/gco":CodeListValue_Type.
    //jld gco__CodeListValue_x005fType*        MD_x005fCoverageContentTypeCode 1;	///< Required element.
/// Element MD_ImagingConditionCode of type "http://www.isotc211.org/2005/gco":CodeListValue_Type.
    gco__CodeListValue_x005fType*        MD_x005fImagingConditionCode   1;	///< Required element.
/// Element MD_ImagingConditionCode of type "http://www.isotc211.org/2005/gco":CodeListValue_Type.
    //jld gco__CodeListValue_x005fType*        MD_x005fImagingConditionCode   1;	///< Required element.
/// Element DQ_EvaluationMethodTypeCode of type "http://www.isotc211.org/2005/gco":CodeListValue_Type.
    gco__CodeListValue_x005fType*        DQ_x005fEvaluationMethodTypeCode 1;	///< Required element.
/// Element DQ_EvaluationMethodTypeCode of type "http://www.isotc211.org/2005/gco":CodeListValue_Type.
    //jld gco__CodeListValue_x005fType*        DQ_x005fEvaluationMethodTypeCode 1;	///< Required element.
/// Element MD_TopicCategoryCode of type "http://www.isotc211.org/2005/gmd":MD_TopicCategoryCode_Type.
    enum gmd__MD_x005fTopicCategoryCode_x005fType  MD_x005fTopicCategoryCode      1;	///< Required element.
/// Element MD_TopicCategoryCode of type "http://www.isotc211.org/2005/gmd":MD_TopicCategoryCode_Type.
    //jld enum gmd__MD_x005fTopicCategoryCode_x005fType  MD_x005fTopicCategoryCode      1;	///< Required element.
/// Element MD_CharacterSetCode of type "http://www.isotc211.org/2005/gco":CodeListValue_Type.
    gco__CodeListValue_x005fType*        MD_x005fCharacterSetCode       1;	///< Required element.
/// Element MD_CharacterSetCode of type "http://www.isotc211.org/2005/gco":CodeListValue_Type.
    //jld gco__CodeListValue_x005fType*        MD_x005fCharacterSetCode       1;	///< Required element.
/// Element MD_SpatialRepresentationTypeCode of type "http://www.isotc211.org/2005/gco":CodeListValue_Type.
    gco__CodeListValue_x005fType*        MD_x005fSpatialRepresentationTypeCode 1;	///< Required element.
/// Element MD_SpatialRepresentationTypeCode of type "http://www.isotc211.org/2005/gco":CodeListValue_Type.
    //jld gco__CodeListValue_x005fType*        MD_x005fSpatialRepresentationTypeCode 1;	///< Required element.
/// Element MD_ProgressCode of type "http://www.isotc211.org/2005/gco":CodeListValue_Type.
    gco__CodeListValue_x005fType*        MD_x005fProgressCode           1;	///< Required element.
/// Element MD_ProgressCode of type "http://www.isotc211.org/2005/gco":CodeListValue_Type.
    //jld gco__CodeListValue_x005fType*        MD_x005fProgressCode           1;	///< Required element.
/// Element MD_KeywordTypeCode of type "http://www.isotc211.org/2005/gco":CodeListValue_Type.
    gco__CodeListValue_x005fType*        MD_x005fKeywordTypeCode        1;	///< Required element.
/// Element MD_KeywordTypeCode of type "http://www.isotc211.org/2005/gco":CodeListValue_Type.
    //jld gco__CodeListValue_x005fType*        MD_x005fKeywordTypeCode        1;	///< Required element.
/// Element DS_AssociationTypeCode of type "http://www.isotc211.org/2005/gco":CodeListValue_Type.
    gco__CodeListValue_x005fType*        DS_x005fAssociationTypeCode    1;	///< Required element.
/// Element DS_AssociationTypeCode of type "http://www.isotc211.org/2005/gco":CodeListValue_Type.
    //jld gco__CodeListValue_x005fType*        DS_x005fAssociationTypeCode    1;	///< Required element.
/// Element DS_InitiativeTypeCode of type "http://www.isotc211.org/2005/gco":CodeListValue_Type.
    gco__CodeListValue_x005fType*        DS_x005fInitiativeTypeCode     1;	///< Required element.
/// Element DS_InitiativeTypeCode of type "http://www.isotc211.org/2005/gco":CodeListValue_Type.
   //jld  gco__CodeListValue_x005fType*        DS_x005fInitiativeTypeCode     1;	///< Required element.
/// Element MD_ClassificationCode of type "http://www.isotc211.org/2005/gco":CodeListValue_Type.
    gco__CodeListValue_x005fType*        MD_x005fClassificationCode     1;	///< Required element.
/// Element MD_ClassificationCode of type "http://www.isotc211.org/2005/gco":CodeListValue_Type.
    //jld gco__CodeListValue_x005fType*        MD_x005fClassificationCode     1;	///< Required element.
/// Element MD_RestrictionCode of type "http://www.isotc211.org/2005/gco":CodeListValue_Type.
    gco__CodeListValue_x005fType*        MD_x005fRestrictionCode        1;	///< Required element.
/// Element MD_RestrictionCode of type "http://www.isotc211.org/2005/gco":CodeListValue_Type.
    //jld gco__CodeListValue_x005fType*        MD_x005fRestrictionCode        1;	///< Required element.
/// Element MD_DistributionUnits of type "http://www.isotc211.org/2005/gco":CodeListValue_Type.
    gco__CodeListValue_x005fType*        MD_x005fDistributionUnits      1;	///< Required element.
/// Element MD_DistributionUnits of type "http://www.isotc211.org/2005/gco":CodeListValue_Type.
    //jld gco__CodeListValue_x005fType*        MD_x005fDistributionUnits      1;	///< Required element.
/// Element MD_MediumFormatCode of type "http://www.isotc211.org/2005/gco":CodeListValue_Type.
    gco__CodeListValue_x005fType*        MD_x005fMediumFormatCode       1;	///< Required element.
/// Element MD_MediumFormatCode of type "http://www.isotc211.org/2005/gco":CodeListValue_Type.
    //jld gco__CodeListValue_x005fType*        MD_x005fMediumFormatCode       1;	///< Required element.
/// Element MD_MediumNameCode of type "http://www.isotc211.org/2005/gco":CodeListValue_Type.
    gco__CodeListValue_x005fType*        MD_x005fMediumNameCode         1;	///< Required element.
/// Element MD_MediumNameCode of type "http://www.isotc211.org/2005/gco":CodeListValue_Type.
    //jld gco__CodeListValue_x005fType*        MD_x005fMediumNameCode         1;	///< Required element.
/// Element MD_MaintenanceFrequencyCode of type "http://www.isotc211.org/2005/gco":CodeListValue_Type.
    gco__CodeListValue_x005fType*        MD_x005fMaintenanceFrequencyCode 1;	///< Required element.
/// Element MD_MaintenanceFrequencyCode of type "http://www.isotc211.org/2005/gco":CodeListValue_Type.
    //jld gco__CodeListValue_x005fType*        MD_x005fMaintenanceFrequencyCode 1;	///< Required element.
/// Element MD_ScopeCode of type "http://www.isotc211.org/2005/gco":CodeListValue_Type.
    gco__CodeListValue_x005fType*        MD_x005fScopeCode              1;	///< Required element.
/// Element MD_ScopeCode of type "http://www.isotc211.org/2005/gco":CodeListValue_Type.
    //jld gco__CodeListValue_x005fType*        MD_x005fScopeCode              1;	///< Required element.
/// Element LocalisedCharacterString of type "http://www.isotc211.org/2005/gmd":LocalisedCharacterString_Type.
    gmd__LocalisedCharacterString_x005fType*  LocalisedCharacterString       1;	///< Required element.
/// Element LocalisedCharacterString of type "http://www.isotc211.org/2005/gmd":LocalisedCharacterString_Type.
    //jld gmd__LocalisedCharacterString_x005fType*  LocalisedCharacterString       1;	///< Required element.
/// Element LanguageCode of type "http://www.isotc211.org/2005/gco":CodeListValue_Type.
    gco__CodeListValue_x005fType*        LanguageCode                   1;	///< Required element.
/// Element LanguageCode of type "http://www.isotc211.org/2005/gco":CodeListValue_Type.
    //jld gco__CodeListValue_x005fType*        LanguageCode                   1;	///< Required element.
/// Element Country of type "http://www.isotc211.org/2005/gco":CodeListValue_Type.
    gco__CodeListValue_x005fType*        Country                        1;	///< Required element.
/// Element Country of type "http://www.isotc211.org/2005/gco":CodeListValue_Type.
    //jld gco__CodeListValue_x005fType*        Country                        1;	///< Required element.
    }                                    __union_CharacterString_x005fPropertyType;
//  END OF CHOICE OF SUBSTITUTIONS
    }>                                   __CharacterString_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
};

/// "http://www.isotc211.org/2005/gco":Boolean_PropertyType is a complexType.
/// class gco__Boolean_x005fPropertyType operations:
/// - soap_new_gco__Boolean_x005fPropertyType(soap*) allocate
/// - soap_new_gco__Boolean_x005fPropertyType(soap*, int num) allocate array
/// - soap_new_req_gco__Boolean_x005fPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gco__Boolean_x005fPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gco__Boolean_x005fPropertyType(soap*, gco__Boolean_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gco__Boolean_x005fPropertyType(soap, gco__Boolean_x005fPropertyType*) serialize to a stream
class gco__Boolean_x005fPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gco__Boolean_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gco":Boolean.
    bool                                 Boolean                        1;	///< Required element.
    }>                                   __Boolean_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
};

/// "http://www.isotc211.org/2005/gco":GenericName_PropertyType is a complexType.
/// class gco__GenericName_x005fPropertyType operations:
/// - soap_new_gco__GenericName_x005fPropertyType(soap*) allocate
/// - soap_new_gco__GenericName_x005fPropertyType(soap*, int num) allocate array
/// - soap_new_req_gco__GenericName_x005fPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gco__GenericName_x005fPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gco__GenericName_x005fPropertyType(soap*, gco__GenericName_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gco__GenericName_x005fPropertyType(soap, gco__GenericName_x005fPropertyType*) serialize to a stream
class gco__GenericName_x005fPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gco__GenericName_x005fPropertyType_sequence
    {
/// Reference "http://www.isotc211.org/2005/gco":AbstractGenericName to abstract element.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractGenericName"> with elements <LocalName> <ScopedName>
   $int                                  __unionAbstractGenericName     0;	///< Union _gco__union_GenericName_x005fPropertyType selector: set to SOAP_UNION__gco__union_GenericName_x005fPropertyType_<fieldname>
/// Union for substitutionGroup="AbstractGenericName"
    union _gco__union_GenericName_x005fPropertyType
    {
/// Element LocalName of type "http://www.opengis.net/gml/3.2":CodeType.
    gml__CodeType*                       LocalName                      1;	///< Required element.
/// Element ScopedName of type "http://www.opengis.net/gml/3.2":CodeType.
    gml__CodeType*                       ScopedName                     1;	///< Required element.
    }                                    __union_GenericName_x005fPropertyType;
//  END OF CHOICE OF SUBSTITUTIONS
    }>                                   __GenericName_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
};

/// "http://www.isotc211.org/2005/gco":LocalName_PropertyType is a complexType.
/// class gco__LocalName_x005fPropertyType operations:
/// - soap_new_gco__LocalName_x005fPropertyType(soap*) allocate
/// - soap_new_gco__LocalName_x005fPropertyType(soap*, int num) allocate array
/// - soap_new_req_gco__LocalName_x005fPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gco__LocalName_x005fPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gco__LocalName_x005fPropertyType(soap*, gco__LocalName_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gco__LocalName_x005fPropertyType(soap, gco__LocalName_x005fPropertyType*) serialize to a stream
class gco__LocalName_x005fPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gco__LocalName_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gco":LocalName.
    gml__CodeType*                       LocalName                      1;	///< Required element.
    }>                                   __LocalName_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
};

/// "http://www.isotc211.org/2005/gco":ScopedName_PropertyType is a complexType.
/// class gco__ScopedName_x005fPropertyType operations:
/// - soap_new_gco__ScopedName_x005fPropertyType(soap*) allocate
/// - soap_new_gco__ScopedName_x005fPropertyType(soap*, int num) allocate array
/// - soap_new_req_gco__ScopedName_x005fPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gco__ScopedName_x005fPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gco__ScopedName_x005fPropertyType(soap*, gco__ScopedName_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gco__ScopedName_x005fPropertyType(soap, gco__ScopedName_x005fPropertyType*) serialize to a stream
class gco__ScopedName_x005fPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gco__ScopedName_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gco":ScopedName.
    gml__CodeType*                       ScopedName                     1;	///< Required element.
    }>                                   __ScopedName_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
};

/// "http://www.isotc211.org/2005/gco":UomAngle_PropertyType is a complexType.
/// class gco__UomAngle_x005fPropertyType operations:
/// - soap_new_gco__UomAngle_x005fPropertyType(soap*) allocate
/// - soap_new_gco__UomAngle_x005fPropertyType(soap*, int num) allocate array
/// - soap_new_req_gco__UomAngle_x005fPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gco__UomAngle_x005fPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gco__UomAngle_x005fPropertyType(soap*, gco__UomAngle_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gco__UomAngle_x005fPropertyType(soap, gco__UomAngle_x005fPropertyType*) serialize to a stream
class gco__UomAngle_x005fPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gco__UomAngle_x005fPropertyType_sequence
    {
/// @brief A gml:UnitDefinition is a general definition of a unit of measure. This generic element is used only for units for which no relationship with other units or units systems is known. The content model of gml:UnitDefinition adds three additional properties to gml:Definition, gml:quantityType, gml:quantityTypeReference and gml:catalogSymbol. The gml:catalogSymbol property optionally gives the short symbol used for this unit. This element is usually used when the relationship of this unit to other units or units systems is unknown.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="UnitDefinition"> with elements <BaseUnit> <DerivedUnit> <ConventionalUnit>
   $int                                  __unionUnitDefinition          0;	///< Union _gco__union_UomAngle_x005fPropertyType selector: set to SOAP_UNION__gco__union_UomAngle_x005fPropertyType_<fieldname>
/// Union for substitutionGroup="UnitDefinition"
    union _gco__union_UomAngle_x005fPropertyType
    {
/// @brief A gml:UnitDefinition is a general definition of a unit of measure. This generic element is used only for units for which no relationship with other units or units systems is known. The content model of gml:UnitDefinition adds three additional properties to gml:Definition, gml:quantityType, gml:quantityTypeReference and gml:catalogSymbol. The gml:catalogSymbol property optionally gives the short symbol used for this unit. This element is usually used when the relationship of this unit to other units or units systems is unknown.
/// Element reference "http://www.opengis.net/gml/3.2":UnitDefinition.
    gml__UnitDefinitionType*             gml__UnitDefinition            1;	///< Required element.
/// @brief A base unit is a unit of measure that cannot be derived by combination of other base units within a particular system of units. For example, in the SI system of units, the base units are metre, kilogram, second, Ampere, Kelvin, mole, and candela, for the physical quantity types length, mass, time interval, electric current, thermodynamic temperature, amount of substance and luminous intensity, respectively. gml:BaseUnit extends generic gml:UnitDefinition with the property gml:unitsSystem, which carries a reference to the units system to which this base unit is asserted to belong.
/// Element BaseUnit of type "http://www.opengis.net/gml/3.2":BaseUnitType.
    gml__BaseUnitType*                   BaseUnit                       1;	///< Required element.
/// @brief Derived units are defined by combination of other units. Derived units are used for quantities other than those corresponding to the base units, such as hertz (s-1) for frequency, Newton (kg.m/s2) for force. Derived units based directly on base units are usually preferred for quantities other than the fundamental quantities within a system. If a derived unit is not the preferred unit, the gml:ConventionalUnit element should be used instead. The gml:DerivedUnit extends gml:UnitDefinition with the property gml:derivationUnitTerms.
/// Element DerivedUnit of type "http://www.opengis.net/gml/3.2":DerivedUnitType.
    gml__DerivedUnitType*                DerivedUnit                    1;	///< Required element.
/// @brief Conventional units that are neither base units nor defined by direct combination of base units are used in many application domains. For example electronVolt for energy, feet and nautical miles for length. In most cases there is a known, usually linear, conversion to a preferred unit which is either a base unit or derived by direct combination of base units. The gml:ConventionalUnit extends gml:UnitDefinition with a property that describes a conversion to a preferred unit for this physical quantity. When the conversion is exact, the element gml:conversionToPreferredUnit should be used, or when the conversion is not exact the element gml:roughConversionToPreferredUnit is available. Both of these elements have the same content model. The gml:derivationUnitTerm property defined above is included to allow a user to optionally record how this unit may be derived from other ("more primitive") units.
/// Element ConventionalUnit of type "http://www.opengis.net/gml/3.2":ConventionalUnitType.
    gml__ConventionalUnitType*           ConventionalUnit               1;	///< Required element.
    }                                    __union_UomAngle_x005fPropertyType;
//  END OF CHOICE OF SUBSTITUTIONS
    }>                                   __UomAngle_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute uuidref of type xs:string.
   @std::string*                         uuidref                        0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.isotc211.org/2005/gco":UomLength_PropertyType is a complexType.
/// class gco__UomLength_x005fPropertyType operations:
/// - soap_new_gco__UomLength_x005fPropertyType(soap*) allocate
/// - soap_new_gco__UomLength_x005fPropertyType(soap*, int num) allocate array
/// - soap_new_req_gco__UomLength_x005fPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gco__UomLength_x005fPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gco__UomLength_x005fPropertyType(soap*, gco__UomLength_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gco__UomLength_x005fPropertyType(soap, gco__UomLength_x005fPropertyType*) serialize to a stream
class gco__UomLength_x005fPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gco__UomLength_x005fPropertyType_sequence
    {
/// @brief A gml:UnitDefinition is a general definition of a unit of measure. This generic element is used only for units for which no relationship with other units or units systems is known. The content model of gml:UnitDefinition adds three additional properties to gml:Definition, gml:quantityType, gml:quantityTypeReference and gml:catalogSymbol. The gml:catalogSymbol property optionally gives the short symbol used for this unit. This element is usually used when the relationship of this unit to other units or units systems is unknown.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="UnitDefinition"> with elements <BaseUnit> <DerivedUnit> <ConventionalUnit>
   $int                                  __unionUnitDefinition          0;	///< Union _gco__union_UomLength_x005fPropertyType selector: set to SOAP_UNION__gco__union_UomLength_x005fPropertyType_<fieldname>
/// Union for substitutionGroup="UnitDefinition"
    union _gco__union_UomLength_x005fPropertyType
    {
/// @brief A gml:UnitDefinition is a general definition of a unit of measure. This generic element is used only for units for which no relationship with other units or units systems is known. The content model of gml:UnitDefinition adds three additional properties to gml:Definition, gml:quantityType, gml:quantityTypeReference and gml:catalogSymbol. The gml:catalogSymbol property optionally gives the short symbol used for this unit. This element is usually used when the relationship of this unit to other units or units systems is unknown.
/// Element reference "http://www.opengis.net/gml/3.2":UnitDefinition.
    gml__UnitDefinitionType*             gml__UnitDefinition            1;	///< Required element.
/// @brief A base unit is a unit of measure that cannot be derived by combination of other base units within a particular system of units. For example, in the SI system of units, the base units are metre, kilogram, second, Ampere, Kelvin, mole, and candela, for the physical quantity types length, mass, time interval, electric current, thermodynamic temperature, amount of substance and luminous intensity, respectively. gml:BaseUnit extends generic gml:UnitDefinition with the property gml:unitsSystem, which carries a reference to the units system to which this base unit is asserted to belong.
/// Element BaseUnit of type "http://www.opengis.net/gml/3.2":BaseUnitType.
    gml__BaseUnitType*                   BaseUnit                       1;	///< Required element.
/// @brief Derived units are defined by combination of other units. Derived units are used for quantities other than those corresponding to the base units, such as hertz (s-1) for frequency, Newton (kg.m/s2) for force. Derived units based directly on base units are usually preferred for quantities other than the fundamental quantities within a system. If a derived unit is not the preferred unit, the gml:ConventionalUnit element should be used instead. The gml:DerivedUnit extends gml:UnitDefinition with the property gml:derivationUnitTerms.
/// Element DerivedUnit of type "http://www.opengis.net/gml/3.2":DerivedUnitType.
    gml__DerivedUnitType*                DerivedUnit                    1;	///< Required element.
/// @brief Conventional units that are neither base units nor defined by direct combination of base units are used in many application domains. For example electronVolt for energy, feet and nautical miles for length. In most cases there is a known, usually linear, conversion to a preferred unit which is either a base unit or derived by direct combination of base units. The gml:ConventionalUnit extends gml:UnitDefinition with a property that describes a conversion to a preferred unit for this physical quantity. When the conversion is exact, the element gml:conversionToPreferredUnit should be used, or when the conversion is not exact the element gml:roughConversionToPreferredUnit is available. Both of these elements have the same content model. The gml:derivationUnitTerm property defined above is included to allow a user to optionally record how this unit may be derived from other ("more primitive") units.
/// Element ConventionalUnit of type "http://www.opengis.net/gml/3.2":ConventionalUnitType.
    gml__ConventionalUnitType*           ConventionalUnit               1;	///< Required element.
    }                                    __union_UomLength_x005fPropertyType;
//  END OF CHOICE OF SUBSTITUTIONS
    }>                                   __UomLength_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute uuidref of type xs:string.
   @std::string*                         uuidref                        0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.isotc211.org/2005/gco":UomScale_PropertyType is a complexType.
/// class gco__UomScale_x005fPropertyType operations:
/// - soap_new_gco__UomScale_x005fPropertyType(soap*) allocate
/// - soap_new_gco__UomScale_x005fPropertyType(soap*, int num) allocate array
/// - soap_new_req_gco__UomScale_x005fPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gco__UomScale_x005fPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gco__UomScale_x005fPropertyType(soap*, gco__UomScale_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gco__UomScale_x005fPropertyType(soap, gco__UomScale_x005fPropertyType*) serialize to a stream
class gco__UomScale_x005fPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gco__UomScale_x005fPropertyType_sequence
    {
/// @brief A gml:UnitDefinition is a general definition of a unit of measure. This generic element is used only for units for which no relationship with other units or units systems is known. The content model of gml:UnitDefinition adds three additional properties to gml:Definition, gml:quantityType, gml:quantityTypeReference and gml:catalogSymbol. The gml:catalogSymbol property optionally gives the short symbol used for this unit. This element is usually used when the relationship of this unit to other units or units systems is unknown.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="UnitDefinition"> with elements <BaseUnit> <DerivedUnit> <ConventionalUnit>
   $int                                  __unionUnitDefinition          0;	///< Union _gco__union_UomScale_x005fPropertyType selector: set to SOAP_UNION__gco__union_UomScale_x005fPropertyType_<fieldname>
/// Union for substitutionGroup="UnitDefinition"
    union _gco__union_UomScale_x005fPropertyType
    {
/// @brief A gml:UnitDefinition is a general definition of a unit of measure. This generic element is used only for units for which no relationship with other units or units systems is known. The content model of gml:UnitDefinition adds three additional properties to gml:Definition, gml:quantityType, gml:quantityTypeReference and gml:catalogSymbol. The gml:catalogSymbol property optionally gives the short symbol used for this unit. This element is usually used when the relationship of this unit to other units or units systems is unknown.
/// Element reference "http://www.opengis.net/gml/3.2":UnitDefinition.
    gml__UnitDefinitionType*             gml__UnitDefinition            1;	///< Required element.
/// @brief A base unit is a unit of measure that cannot be derived by combination of other base units within a particular system of units. For example, in the SI system of units, the base units are metre, kilogram, second, Ampere, Kelvin, mole, and candela, for the physical quantity types length, mass, time interval, electric current, thermodynamic temperature, amount of substance and luminous intensity, respectively. gml:BaseUnit extends generic gml:UnitDefinition with the property gml:unitsSystem, which carries a reference to the units system to which this base unit is asserted to belong.
/// Element BaseUnit of type "http://www.opengis.net/gml/3.2":BaseUnitType.
    gml__BaseUnitType*                   BaseUnit                       1;	///< Required element.
/// @brief Derived units are defined by combination of other units. Derived units are used for quantities other than those corresponding to the base units, such as hertz (s-1) for frequency, Newton (kg.m/s2) for force. Derived units based directly on base units are usually preferred for quantities other than the fundamental quantities within a system. If a derived unit is not the preferred unit, the gml:ConventionalUnit element should be used instead. The gml:DerivedUnit extends gml:UnitDefinition with the property gml:derivationUnitTerms.
/// Element DerivedUnit of type "http://www.opengis.net/gml/3.2":DerivedUnitType.
    gml__DerivedUnitType*                DerivedUnit                    1;	///< Required element.
/// @brief Conventional units that are neither base units nor defined by direct combination of base units are used in many application domains. For example electronVolt for energy, feet and nautical miles for length. In most cases there is a known, usually linear, conversion to a preferred unit which is either a base unit or derived by direct combination of base units. The gml:ConventionalUnit extends gml:UnitDefinition with a property that describes a conversion to a preferred unit for this physical quantity. When the conversion is exact, the element gml:conversionToPreferredUnit should be used, or when the conversion is not exact the element gml:roughConversionToPreferredUnit is available. Both of these elements have the same content model. The gml:derivationUnitTerm property defined above is included to allow a user to optionally record how this unit may be derived from other ("more primitive") units.
/// Element ConventionalUnit of type "http://www.opengis.net/gml/3.2":ConventionalUnitType.
    gml__ConventionalUnitType*           ConventionalUnit               1;	///< Required element.
    }                                    __union_UomScale_x005fPropertyType;
//  END OF CHOICE OF SUBSTITUTIONS
    }>                                   __UomScale_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute uuidref of type xs:string.
   @std::string*                         uuidref                        0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.isotc211.org/2005/gco":UnitOfMeasure_PropertyType is a complexType.
/// class gco__UnitOfMeasure_x005fPropertyType operations:
/// - soap_new_gco__UnitOfMeasure_x005fPropertyType(soap*) allocate
/// - soap_new_gco__UnitOfMeasure_x005fPropertyType(soap*, int num) allocate array
/// - soap_new_req_gco__UnitOfMeasure_x005fPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gco__UnitOfMeasure_x005fPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gco__UnitOfMeasure_x005fPropertyType(soap*, gco__UnitOfMeasure_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gco__UnitOfMeasure_x005fPropertyType(soap, gco__UnitOfMeasure_x005fPropertyType*) serialize to a stream
class gco__UnitOfMeasure_x005fPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gco__UnitOfMeasure_x005fPropertyType_sequence
    {
/// @brief A gml:UnitDefinition is a general definition of a unit of measure. This generic element is used only for units for which no relationship with other units or units systems is known. The content model of gml:UnitDefinition adds three additional properties to gml:Definition, gml:quantityType, gml:quantityTypeReference and gml:catalogSymbol. The gml:catalogSymbol property optionally gives the short symbol used for this unit. This element is usually used when the relationship of this unit to other units or units systems is unknown.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="UnitDefinition"> with elements <BaseUnit> <DerivedUnit> <ConventionalUnit>
   $int                                  __unionUnitDefinition          0;	///< Union _gco__union_UnitOfMeasure_x005fPropertyType selector: set to SOAP_UNION__gco__union_UnitOfMeasure_x005fPropertyType_<fieldname>
/// Union for substitutionGroup="UnitDefinition"
    union _gco__union_UnitOfMeasure_x005fPropertyType
    {
/// @brief A gml:UnitDefinition is a general definition of a unit of measure. This generic element is used only for units for which no relationship with other units or units systems is known. The content model of gml:UnitDefinition adds three additional properties to gml:Definition, gml:quantityType, gml:quantityTypeReference and gml:catalogSymbol. The gml:catalogSymbol property optionally gives the short symbol used for this unit. This element is usually used when the relationship of this unit to other units or units systems is unknown.
/// Element reference "http://www.opengis.net/gml/3.2":UnitDefinition.
    gml__UnitDefinitionType*             gml__UnitDefinition            1;	///< Required element.
/// @brief A base unit is a unit of measure that cannot be derived by combination of other base units within a particular system of units. For example, in the SI system of units, the base units are metre, kilogram, second, Ampere, Kelvin, mole, and candela, for the physical quantity types length, mass, time interval, electric current, thermodynamic temperature, amount of substance and luminous intensity, respectively. gml:BaseUnit extends generic gml:UnitDefinition with the property gml:unitsSystem, which carries a reference to the units system to which this base unit is asserted to belong.
/// Element BaseUnit of type "http://www.opengis.net/gml/3.2":BaseUnitType.
    gml__BaseUnitType*                   BaseUnit                       1;	///< Required element.
/// @brief Derived units are defined by combination of other units. Derived units are used for quantities other than those corresponding to the base units, such as hertz (s-1) for frequency, Newton (kg.m/s2) for force. Derived units based directly on base units are usually preferred for quantities other than the fundamental quantities within a system. If a derived unit is not the preferred unit, the gml:ConventionalUnit element should be used instead. The gml:DerivedUnit extends gml:UnitDefinition with the property gml:derivationUnitTerms.
/// Element DerivedUnit of type "http://www.opengis.net/gml/3.2":DerivedUnitType.
    gml__DerivedUnitType*                DerivedUnit                    1;	///< Required element.
/// @brief Conventional units that are neither base units nor defined by direct combination of base units are used in many application domains. For example electronVolt for energy, feet and nautical miles for length. In most cases there is a known, usually linear, conversion to a preferred unit which is either a base unit or derived by direct combination of base units. The gml:ConventionalUnit extends gml:UnitDefinition with a property that describes a conversion to a preferred unit for this physical quantity. When the conversion is exact, the element gml:conversionToPreferredUnit should be used, or when the conversion is not exact the element gml:roughConversionToPreferredUnit is available. Both of these elements have the same content model. The gml:derivationUnitTerm property defined above is included to allow a user to optionally record how this unit may be derived from other ("more primitive") units.
/// Element ConventionalUnit of type "http://www.opengis.net/gml/3.2":ConventionalUnitType.
    gml__ConventionalUnitType*           ConventionalUnit               1;	///< Required element.
    }                                    __union_UnitOfMeasure_x005fPropertyType;
//  END OF CHOICE OF SUBSTITUTIONS
    }>                                   __UnitOfMeasure_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute uuidref of type xs:string.
   @std::string*                         uuidref                        0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.isotc211.org/2005/gco":UomArea_PropertyType is a complexType.
/// class gco__UomArea_x005fPropertyType operations:
/// - soap_new_gco__UomArea_x005fPropertyType(soap*) allocate
/// - soap_new_gco__UomArea_x005fPropertyType(soap*, int num) allocate array
/// - soap_new_req_gco__UomArea_x005fPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gco__UomArea_x005fPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gco__UomArea_x005fPropertyType(soap*, gco__UomArea_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gco__UomArea_x005fPropertyType(soap, gco__UomArea_x005fPropertyType*) serialize to a stream
class gco__UomArea_x005fPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gco__UomArea_x005fPropertyType_sequence
    {
/// @brief A gml:UnitDefinition is a general definition of a unit of measure. This generic element is used only for units for which no relationship with other units or units systems is known. The content model of gml:UnitDefinition adds three additional properties to gml:Definition, gml:quantityType, gml:quantityTypeReference and gml:catalogSymbol. The gml:catalogSymbol property optionally gives the short symbol used for this unit. This element is usually used when the relationship of this unit to other units or units systems is unknown.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="UnitDefinition"> with elements <BaseUnit> <DerivedUnit> <ConventionalUnit>
   $int                                  __unionUnitDefinition          0;	///< Union _gco__union_UomArea_x005fPropertyType selector: set to SOAP_UNION__gco__union_UomArea_x005fPropertyType_<fieldname>
/// Union for substitutionGroup="UnitDefinition"
    union _gco__union_UomArea_x005fPropertyType
    {
/// @brief A gml:UnitDefinition is a general definition of a unit of measure. This generic element is used only for units for which no relationship with other units or units systems is known. The content model of gml:UnitDefinition adds three additional properties to gml:Definition, gml:quantityType, gml:quantityTypeReference and gml:catalogSymbol. The gml:catalogSymbol property optionally gives the short symbol used for this unit. This element is usually used when the relationship of this unit to other units or units systems is unknown.
/// Element reference "http://www.opengis.net/gml/3.2":UnitDefinition.
    gml__UnitDefinitionType*             gml__UnitDefinition            1;	///< Required element.
/// @brief A base unit is a unit of measure that cannot be derived by combination of other base units within a particular system of units. For example, in the SI system of units, the base units are metre, kilogram, second, Ampere, Kelvin, mole, and candela, for the physical quantity types length, mass, time interval, electric current, thermodynamic temperature, amount of substance and luminous intensity, respectively. gml:BaseUnit extends generic gml:UnitDefinition with the property gml:unitsSystem, which carries a reference to the units system to which this base unit is asserted to belong.
/// Element BaseUnit of type "http://www.opengis.net/gml/3.2":BaseUnitType.
    gml__BaseUnitType*                   BaseUnit                       1;	///< Required element.
/// @brief Derived units are defined by combination of other units. Derived units are used for quantities other than those corresponding to the base units, such as hertz (s-1) for frequency, Newton (kg.m/s2) for force. Derived units based directly on base units are usually preferred for quantities other than the fundamental quantities within a system. If a derived unit is not the preferred unit, the gml:ConventionalUnit element should be used instead. The gml:DerivedUnit extends gml:UnitDefinition with the property gml:derivationUnitTerms.
/// Element DerivedUnit of type "http://www.opengis.net/gml/3.2":DerivedUnitType.
    gml__DerivedUnitType*                DerivedUnit                    1;	///< Required element.
/// @brief Conventional units that are neither base units nor defined by direct combination of base units are used in many application domains. For example electronVolt for energy, feet and nautical miles for length. In most cases there is a known, usually linear, conversion to a preferred unit which is either a base unit or derived by direct combination of base units. The gml:ConventionalUnit extends gml:UnitDefinition with a property that describes a conversion to a preferred unit for this physical quantity. When the conversion is exact, the element gml:conversionToPreferredUnit should be used, or when the conversion is not exact the element gml:roughConversionToPreferredUnit is available. Both of these elements have the same content model. The gml:derivationUnitTerm property defined above is included to allow a user to optionally record how this unit may be derived from other ("more primitive") units.
/// Element ConventionalUnit of type "http://www.opengis.net/gml/3.2":ConventionalUnitType.
    gml__ConventionalUnitType*           ConventionalUnit               1;	///< Required element.
    }                                    __union_UomArea_x005fPropertyType;
//  END OF CHOICE OF SUBSTITUTIONS
    }>                                   __UomArea_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute uuidref of type xs:string.
   @std::string*                         uuidref                        0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.isotc211.org/2005/gco":UomVelocity_PropertyType is a complexType.
/// class gco__UomVelocity_x005fPropertyType operations:
/// - soap_new_gco__UomVelocity_x005fPropertyType(soap*) allocate
/// - soap_new_gco__UomVelocity_x005fPropertyType(soap*, int num) allocate array
/// - soap_new_req_gco__UomVelocity_x005fPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gco__UomVelocity_x005fPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gco__UomVelocity_x005fPropertyType(soap*, gco__UomVelocity_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gco__UomVelocity_x005fPropertyType(soap, gco__UomVelocity_x005fPropertyType*) serialize to a stream
class gco__UomVelocity_x005fPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gco__UomVelocity_x005fPropertyType_sequence
    {
/// @brief A gml:UnitDefinition is a general definition of a unit of measure. This generic element is used only for units for which no relationship with other units or units systems is known. The content model of gml:UnitDefinition adds three additional properties to gml:Definition, gml:quantityType, gml:quantityTypeReference and gml:catalogSymbol. The gml:catalogSymbol property optionally gives the short symbol used for this unit. This element is usually used when the relationship of this unit to other units or units systems is unknown.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="UnitDefinition"> with elements <BaseUnit> <DerivedUnit> <ConventionalUnit>
   $int                                  __unionUnitDefinition          0;	///< Union _gco__union_UomVelocity_x005fPropertyType selector: set to SOAP_UNION__gco__union_UomVelocity_x005fPropertyType_<fieldname>
/// Union for substitutionGroup="UnitDefinition"
    union _gco__union_UomVelocity_x005fPropertyType
    {
/// @brief A gml:UnitDefinition is a general definition of a unit of measure. This generic element is used only for units for which no relationship with other units or units systems is known. The content model of gml:UnitDefinition adds three additional properties to gml:Definition, gml:quantityType, gml:quantityTypeReference and gml:catalogSymbol. The gml:catalogSymbol property optionally gives the short symbol used for this unit. This element is usually used when the relationship of this unit to other units or units systems is unknown.
/// Element reference "http://www.opengis.net/gml/3.2":UnitDefinition.
    gml__UnitDefinitionType*             gml__UnitDefinition            1;	///< Required element.
/// @brief A base unit is a unit of measure that cannot be derived by combination of other base units within a particular system of units. For example, in the SI system of units, the base units are metre, kilogram, second, Ampere, Kelvin, mole, and candela, for the physical quantity types length, mass, time interval, electric current, thermodynamic temperature, amount of substance and luminous intensity, respectively. gml:BaseUnit extends generic gml:UnitDefinition with the property gml:unitsSystem, which carries a reference to the units system to which this base unit is asserted to belong.
/// Element BaseUnit of type "http://www.opengis.net/gml/3.2":BaseUnitType.
    gml__BaseUnitType*                   BaseUnit                       1;	///< Required element.
/// @brief Derived units are defined by combination of other units. Derived units are used for quantities other than those corresponding to the base units, such as hertz (s-1) for frequency, Newton (kg.m/s2) for force. Derived units based directly on base units are usually preferred for quantities other than the fundamental quantities within a system. If a derived unit is not the preferred unit, the gml:ConventionalUnit element should be used instead. The gml:DerivedUnit extends gml:UnitDefinition with the property gml:derivationUnitTerms.
/// Element DerivedUnit of type "http://www.opengis.net/gml/3.2":DerivedUnitType.
    gml__DerivedUnitType*                DerivedUnit                    1;	///< Required element.
/// @brief Conventional units that are neither base units nor defined by direct combination of base units are used in many application domains. For example electronVolt for energy, feet and nautical miles for length. In most cases there is a known, usually linear, conversion to a preferred unit which is either a base unit or derived by direct combination of base units. The gml:ConventionalUnit extends gml:UnitDefinition with a property that describes a conversion to a preferred unit for this physical quantity. When the conversion is exact, the element gml:conversionToPreferredUnit should be used, or when the conversion is not exact the element gml:roughConversionToPreferredUnit is available. Both of these elements have the same content model. The gml:derivationUnitTerm property defined above is included to allow a user to optionally record how this unit may be derived from other ("more primitive") units.
/// Element ConventionalUnit of type "http://www.opengis.net/gml/3.2":ConventionalUnitType.
    gml__ConventionalUnitType*           ConventionalUnit               1;	///< Required element.
    }                                    __union_UomVelocity_x005fPropertyType;
//  END OF CHOICE OF SUBSTITUTIONS
    }>                                   __UomVelocity_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute uuidref of type xs:string.
   @std::string*                         uuidref                        0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.isotc211.org/2005/gco":UomTime_PropertyType is a complexType.
/// class gco__UomTime_x005fPropertyType operations:
/// - soap_new_gco__UomTime_x005fPropertyType(soap*) allocate
/// - soap_new_gco__UomTime_x005fPropertyType(soap*, int num) allocate array
/// - soap_new_req_gco__UomTime_x005fPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gco__UomTime_x005fPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gco__UomTime_x005fPropertyType(soap*, gco__UomTime_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gco__UomTime_x005fPropertyType(soap, gco__UomTime_x005fPropertyType*) serialize to a stream
class gco__UomTime_x005fPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gco__UomTime_x005fPropertyType_sequence
    {
/// @brief A gml:UnitDefinition is a general definition of a unit of measure. This generic element is used only for units for which no relationship with other units or units systems is known. The content model of gml:UnitDefinition adds three additional properties to gml:Definition, gml:quantityType, gml:quantityTypeReference and gml:catalogSymbol. The gml:catalogSymbol property optionally gives the short symbol used for this unit. This element is usually used when the relationship of this unit to other units or units systems is unknown.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="UnitDefinition"> with elements <BaseUnit> <DerivedUnit> <ConventionalUnit>
   $int                                  __unionUnitDefinition          0;	///< Union _gco__union_UomTime_x005fPropertyType selector: set to SOAP_UNION__gco__union_UomTime_x005fPropertyType_<fieldname>
/// Union for substitutionGroup="UnitDefinition"
    union _gco__union_UomTime_x005fPropertyType
    {
/// @brief A gml:UnitDefinition is a general definition of a unit of measure. This generic element is used only for units for which no relationship with other units or units systems is known. The content model of gml:UnitDefinition adds three additional properties to gml:Definition, gml:quantityType, gml:quantityTypeReference and gml:catalogSymbol. The gml:catalogSymbol property optionally gives the short symbol used for this unit. This element is usually used when the relationship of this unit to other units or units systems is unknown.
/// Element reference "http://www.opengis.net/gml/3.2":UnitDefinition.
    gml__UnitDefinitionType*             gml__UnitDefinition            1;	///< Required element.
/// @brief A base unit is a unit of measure that cannot be derived by combination of other base units within a particular system of units. For example, in the SI system of units, the base units are metre, kilogram, second, Ampere, Kelvin, mole, and candela, for the physical quantity types length, mass, time interval, electric current, thermodynamic temperature, amount of substance and luminous intensity, respectively. gml:BaseUnit extends generic gml:UnitDefinition with the property gml:unitsSystem, which carries a reference to the units system to which this base unit is asserted to belong.
/// Element BaseUnit of type "http://www.opengis.net/gml/3.2":BaseUnitType.
    gml__BaseUnitType*                   BaseUnit                       1;	///< Required element.
/// @brief Derived units are defined by combination of other units. Derived units are used for quantities other than those corresponding to the base units, such as hertz (s-1) for frequency, Newton (kg.m/s2) for force. Derived units based directly on base units are usually preferred for quantities other than the fundamental quantities within a system. If a derived unit is not the preferred unit, the gml:ConventionalUnit element should be used instead. The gml:DerivedUnit extends gml:UnitDefinition with the property gml:derivationUnitTerms.
/// Element DerivedUnit of type "http://www.opengis.net/gml/3.2":DerivedUnitType.
    gml__DerivedUnitType*                DerivedUnit                    1;	///< Required element.
/// @brief Conventional units that are neither base units nor defined by direct combination of base units are used in many application domains. For example electronVolt for energy, feet and nautical miles for length. In most cases there is a known, usually linear, conversion to a preferred unit which is either a base unit or derived by direct combination of base units. The gml:ConventionalUnit extends gml:UnitDefinition with a property that describes a conversion to a preferred unit for this physical quantity. When the conversion is exact, the element gml:conversionToPreferredUnit should be used, or when the conversion is not exact the element gml:roughConversionToPreferredUnit is available. Both of these elements have the same content model. The gml:derivationUnitTerm property defined above is included to allow a user to optionally record how this unit may be derived from other ("more primitive") units.
/// Element ConventionalUnit of type "http://www.opengis.net/gml/3.2":ConventionalUnitType.
    gml__ConventionalUnitType*           ConventionalUnit               1;	///< Required element.
    }                                    __union_UomTime_x005fPropertyType;
//  END OF CHOICE OF SUBSTITUTIONS
    }>                                   __UomTime_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute uuidref of type xs:string.
   @std::string*                         uuidref                        0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.isotc211.org/2005/gco":UomVolume_PropertyType is a complexType.
/// class gco__UomVolume_x005fPropertyType operations:
/// - soap_new_gco__UomVolume_x005fPropertyType(soap*) allocate
/// - soap_new_gco__UomVolume_x005fPropertyType(soap*, int num) allocate array
/// - soap_new_req_gco__UomVolume_x005fPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gco__UomVolume_x005fPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gco__UomVolume_x005fPropertyType(soap*, gco__UomVolume_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gco__UomVolume_x005fPropertyType(soap, gco__UomVolume_x005fPropertyType*) serialize to a stream
class gco__UomVolume_x005fPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gco__UomVolume_x005fPropertyType_sequence
    {
/// @brief A gml:UnitDefinition is a general definition of a unit of measure. This generic element is used only for units for which no relationship with other units or units systems is known. The content model of gml:UnitDefinition adds three additional properties to gml:Definition, gml:quantityType, gml:quantityTypeReference and gml:catalogSymbol. The gml:catalogSymbol property optionally gives the short symbol used for this unit. This element is usually used when the relationship of this unit to other units or units systems is unknown.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="UnitDefinition"> with elements <BaseUnit> <DerivedUnit> <ConventionalUnit>
   $int                                  __unionUnitDefinition          0;	///< Union _gco__union_UomVolume_x005fPropertyType selector: set to SOAP_UNION__gco__union_UomVolume_x005fPropertyType_<fieldname>
/// Union for substitutionGroup="UnitDefinition"
    union _gco__union_UomVolume_x005fPropertyType
    {
/// @brief A gml:UnitDefinition is a general definition of a unit of measure. This generic element is used only for units for which no relationship with other units or units systems is known. The content model of gml:UnitDefinition adds three additional properties to gml:Definition, gml:quantityType, gml:quantityTypeReference and gml:catalogSymbol. The gml:catalogSymbol property optionally gives the short symbol used for this unit. This element is usually used when the relationship of this unit to other units or units systems is unknown.
/// Element reference "http://www.opengis.net/gml/3.2":UnitDefinition.
    gml__UnitDefinitionType*             gml__UnitDefinition            1;	///< Required element.
/// @brief A base unit is a unit of measure that cannot be derived by combination of other base units within a particular system of units. For example, in the SI system of units, the base units are metre, kilogram, second, Ampere, Kelvin, mole, and candela, for the physical quantity types length, mass, time interval, electric current, thermodynamic temperature, amount of substance and luminous intensity, respectively. gml:BaseUnit extends generic gml:UnitDefinition with the property gml:unitsSystem, which carries a reference to the units system to which this base unit is asserted to belong.
/// Element BaseUnit of type "http://www.opengis.net/gml/3.2":BaseUnitType.
    gml__BaseUnitType*                   BaseUnit                       1;	///< Required element.
/// @brief Derived units are defined by combination of other units. Derived units are used for quantities other than those corresponding to the base units, such as hertz (s-1) for frequency, Newton (kg.m/s2) for force. Derived units based directly on base units are usually preferred for quantities other than the fundamental quantities within a system. If a derived unit is not the preferred unit, the gml:ConventionalUnit element should be used instead. The gml:DerivedUnit extends gml:UnitDefinition with the property gml:derivationUnitTerms.
/// Element DerivedUnit of type "http://www.opengis.net/gml/3.2":DerivedUnitType.
    gml__DerivedUnitType*                DerivedUnit                    1;	///< Required element.
/// @brief Conventional units that are neither base units nor defined by direct combination of base units are used in many application domains. For example electronVolt for energy, feet and nautical miles for length. In most cases there is a known, usually linear, conversion to a preferred unit which is either a base unit or derived by direct combination of base units. The gml:ConventionalUnit extends gml:UnitDefinition with a property that describes a conversion to a preferred unit for this physical quantity. When the conversion is exact, the element gml:conversionToPreferredUnit should be used, or when the conversion is not exact the element gml:roughConversionToPreferredUnit is available. Both of these elements have the same content model. The gml:derivationUnitTerm property defined above is included to allow a user to optionally record how this unit may be derived from other ("more primitive") units.
/// Element ConventionalUnit of type "http://www.opengis.net/gml/3.2":ConventionalUnitType.
    gml__ConventionalUnitType*           ConventionalUnit               1;	///< Required element.
    }                                    __union_UomVolume_x005fPropertyType;
//  END OF CHOICE OF SUBSTITUTIONS
    }>                                   __UomVolume_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute uuidref of type xs:string.
   @std::string*                         uuidref                        0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.isotc211.org/2005/gco":DateTime_PropertyType is a complexType.
/// class gco__DateTime_x005fPropertyType operations:
/// - soap_new_gco__DateTime_x005fPropertyType(soap*) allocate
/// - soap_new_gco__DateTime_x005fPropertyType(soap*, int num) allocate array
/// - soap_new_req_gco__DateTime_x005fPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gco__DateTime_x005fPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gco__DateTime_x005fPropertyType(soap*, gco__DateTime_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gco__DateTime_x005fPropertyType(soap, gco__DateTime_x005fPropertyType*) serialize to a stream
class gco__DateTime_x005fPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gco__DateTime_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gco":DateTime.
    time_t                               DateTime                       1;	///< Required element.
    }>                                   __DateTime_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
};

/// "http://www.isotc211.org/2005/gco":Date_PropertyType is a complexType.
/// class gco__Date_x005fPropertyType operations:
/// - soap_new_gco__Date_x005fPropertyType(soap*) allocate
/// - soap_new_gco__Date_x005fPropertyType(soap*, int num) allocate array
/// - soap_new_req_gco__Date_x005fPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gco__Date_x005fPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gco__Date_x005fPropertyType(soap*, gco__Date_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gco__Date_x005fPropertyType(soap, gco__Date_x005fPropertyType*) serialize to a stream
class gco__Date_x005fPropertyType : public xsd__anyType
{ public:
/// CHOICE <xs:choice minOccurs="0">
   $int                                  __union_Date_x005fPropertyType 0;	///< Union _gco__union_Date_x005fPropertyType selector: set to SOAP_UNION__gco__union_Date_x005fPropertyType_<fieldname> or 0
/// Union for choice in type gco__Date_x005fPropertyType
    union _gco__union_Date_x005fPropertyType
    {
/// Element reference "http://www.isotc211.org/2005/gco":Date.
    gco__Date_x005fType*                 Date                           1;	///< Required element.
/// Element reference "http://www.isotc211.org/2005/gco":DateTime.
    time_t                               DateTime                       1;	///< Required element.
    }                                    union_Date_x005fPropertyType  ;
//  END OF CHOICE
/// Attribute reference "http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
};

/// "http://www.isotc211.org/2005/gco":Number_PropertyType is a complexType.
/// class gco__Number_x005fPropertyType operations:
/// - soap_new_gco__Number_x005fPropertyType(soap*) allocate
/// - soap_new_gco__Number_x005fPropertyType(soap*, int num) allocate array
/// - soap_new_req_gco__Number_x005fPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gco__Number_x005fPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gco__Number_x005fPropertyType(soap*, gco__Number_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gco__Number_x005fPropertyType(soap, gco__Number_x005fPropertyType*) serialize to a stream
class gco__Number_x005fPropertyType : public xsd__anyType
{ public:
/// CHOICE <xs:choice minOccurs="0">
   $int                                  __union_Number_x005fPropertyType 0;	///< Union _gco__union_Number_x005fPropertyType selector: set to SOAP_UNION__gco__union_Number_x005fPropertyType_<fieldname> or 0
/// Union for choice in type gco__Number_x005fPropertyType
    union _gco__union_Number_x005fPropertyType
    {
/// Element reference "http://www.isotc211.org/2005/gco":Real.
    double                               Real                           1;	///< Required element.
/// Element reference "http://www.isotc211.org/2005/gco":Decimal.
    xsd__decimal*                        Decimal                        1;	///< Required element.
/// Element reference "http://www.isotc211.org/2005/gco":Integer.
    long                                 Integer                        1;	///< Required element.
    }                                    union_Number_x005fPropertyType;
//  END OF CHOICE
/// Attribute reference "http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
};

/// "http://www.isotc211.org/2005/gco":Decimal_PropertyType is a complexType.
/// class gco__Decimal_x005fPropertyType operations:
/// - soap_new_gco__Decimal_x005fPropertyType(soap*) allocate
/// - soap_new_gco__Decimal_x005fPropertyType(soap*, int num) allocate array
/// - soap_new_req_gco__Decimal_x005fPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gco__Decimal_x005fPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gco__Decimal_x005fPropertyType(soap*, gco__Decimal_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gco__Decimal_x005fPropertyType(soap, gco__Decimal_x005fPropertyType*) serialize to a stream
class gco__Decimal_x005fPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gco__Decimal_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gco":Decimal.
    xsd__decimal                         Decimal                        1;	///< Required element.
    }>                                   __Decimal_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
};

/// "http://www.isotc211.org/2005/gco":Real_PropertyType is a complexType.
/// class gco__Real_x005fPropertyType operations:
/// - soap_new_gco__Real_x005fPropertyType(soap*) allocate
/// - soap_new_gco__Real_x005fPropertyType(soap*, int num) allocate array
/// - soap_new_req_gco__Real_x005fPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gco__Real_x005fPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gco__Real_x005fPropertyType(soap*, gco__Real_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gco__Real_x005fPropertyType(soap, gco__Real_x005fPropertyType*) serialize to a stream
class gco__Real_x005fPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gco__Real_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gco":Real.
    double                               Real                           1;	///< Required element.
    }>                                   __Real_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
};

/// "http://www.isotc211.org/2005/gco":Integer_PropertyType is a complexType.
/// class gco__Integer_x005fPropertyType operations:
/// - soap_new_gco__Integer_x005fPropertyType(soap*) allocate
/// - soap_new_gco__Integer_x005fPropertyType(soap*, int num) allocate array
/// - soap_new_req_gco__Integer_x005fPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gco__Integer_x005fPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gco__Integer_x005fPropertyType(soap*, gco__Integer_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gco__Integer_x005fPropertyType(soap, gco__Integer_x005fPropertyType*) serialize to a stream
class gco__Integer_x005fPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gco__Integer_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gco":Integer.
    long                                 Integer                        1;	///< Required element.
    }>                                   __Integer_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
};

/// "http://www.isotc211.org/2005/gco":UnlimitedInteger_PropertyType is a complexType.
/// class gco__UnlimitedInteger_x005fPropertyType operations:
/// - soap_new_gco__UnlimitedInteger_x005fPropertyType(soap*) allocate
/// - soap_new_gco__UnlimitedInteger_x005fPropertyType(soap*, int num) allocate array
/// - soap_new_req_gco__UnlimitedInteger_x005fPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gco__UnlimitedInteger_x005fPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gco__UnlimitedInteger_x005fPropertyType(soap*, gco__UnlimitedInteger_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gco__UnlimitedInteger_x005fPropertyType(soap, gco__UnlimitedInteger_x005fPropertyType*) serialize to a stream
class gco__UnlimitedInteger_x005fPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gco__UnlimitedInteger_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gco":UnlimitedInteger.
    gco__UnlimitedInteger_x005fType*     UnlimitedInteger               1;	///< Required element.
    }>                                   __UnlimitedInteger_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
};

/// "http://www.isotc211.org/2005/gco":Record_PropertyType is a complexType.
/// class gco__Record_x005fPropertyType operations:
/// - soap_new_gco__Record_x005fPropertyType(soap*) allocate
/// - soap_new_gco__Record_x005fPropertyType(soap*, int num) allocate array
/// - soap_new_req_gco__Record_x005fPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gco__Record_x005fPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gco__Record_x005fPropertyType(soap*, gco__Record_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gco__Record_x005fPropertyType(soap, gco__Record_x005fPropertyType*) serialize to a stream
class gco__Record_x005fPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gco__Record_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gco":Record.
    _XML                                 Record                         1;	///< Required element.
    }>                                   __Record_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute uuidref of type xs:string.
   @std::string*                         uuidref                        0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.isotc211.org/2005/gco":RecordType_PropertyType is a complexType.
/// class gco__RecordType_x005fPropertyType operations:
/// - soap_new_gco__RecordType_x005fPropertyType(soap*) allocate
/// - soap_new_gco__RecordType_x005fPropertyType(soap*, int num) allocate array
/// - soap_new_req_gco__RecordType_x005fPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gco__RecordType_x005fPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gco__RecordType_x005fPropertyType(soap*, gco__RecordType_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gco__RecordType_x005fPropertyType(soap, gco__RecordType_x005fPropertyType*) serialize to a stream
class gco__RecordType_x005fPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gco__RecordType_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gco":RecordType.
    gco__RecordType_x005fType*           RecordType                     1;	///< Required element.
    }>                                   __RecordType_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
};

/// "http://www.isotc211.org/2005/gco":Binary_PropertyType is a complexType.
/// class gco__Binary_x005fPropertyType operations:
/// - soap_new_gco__Binary_x005fPropertyType(soap*) allocate
/// - soap_new_gco__Binary_x005fPropertyType(soap*, int num) allocate array
/// - soap_new_req_gco__Binary_x005fPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gco__Binary_x005fPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gco__Binary_x005fPropertyType(soap*, gco__Binary_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gco__Binary_x005fPropertyType(soap, gco__Binary_x005fPropertyType*) serialize to a stream
class gco__Binary_x005fPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gco__Binary_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gco":Binary.
    gco__Binary_x005fType*               Binary                         1;	///< Required element.
    }>                                   __Binary_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
};

/// "http://www.isotc211.org/2005/gco":AbstractObject_Type is an abstract complexType.
/// class gco__AbstractObject_x005fType operations:
/// - soap_new_gco__AbstractObject_x005fType(soap*) allocate
/// - soap_new_gco__AbstractObject_x005fType(soap*, int num) allocate array
/// - soap_new_req_gco__AbstractObject_x005fType(soap*, ...) allocate, set required members
/// - soap_new_set_gco__AbstractObject_x005fType(soap*, ...) allocate, set all public members
/// - int soap_read_gco__AbstractObject_x005fType(soap*, gco__AbstractObject_x005fType*) deserialize from a stream
/// - int soap_write_gco__AbstractObject_x005fType(soap, gco__AbstractObject_x005fType*) serialize to a stream
class gco__AbstractObject_x005fType : public xsd__anyType
{ public:
/// Attribute id of type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute uuid of type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
};

/// "http://www.isotc211.org/2005/gco":ObjectReference_PropertyType is a complexType.
/// class gco__ObjectReference_x005fPropertyType operations:
/// - soap_new_gco__ObjectReference_x005fPropertyType(soap*) allocate
/// - soap_new_gco__ObjectReference_x005fPropertyType(soap*, int num) allocate array
/// - soap_new_req_gco__ObjectReference_x005fPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gco__ObjectReference_x005fPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gco__ObjectReference_x005fPropertyType(soap*, gco__ObjectReference_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gco__ObjectReference_x005fPropertyType(soap, gco__ObjectReference_x005fPropertyType*) serialize to a stream
class gco__ObjectReference_x005fPropertyType : public xsd__anyType
{ public:
/// Attribute reference "http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute uuidref of type xs:string.
   @std::string*                         uuidref                        0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://www.isotc211.org/2005/gss                                         *
 *                                                                            *
\******************************************************************************/


/// "http://www.isotc211.org/2005/gss":GM_Point_PropertyType is a complexType.
/// class gss__GM_x005fPoint_x005fPropertyType operations:
/// - soap_new_gss__GM_x005fPoint_x005fPropertyType(soap*) allocate
/// - soap_new_gss__GM_x005fPoint_x005fPropertyType(soap*, int num) allocate array
/// - soap_new_req_gss__GM_x005fPoint_x005fPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gss__GM_x005fPoint_x005fPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gss__GM_x005fPoint_x005fPropertyType(soap*, gss__GM_x005fPoint_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gss__GM_x005fPoint_x005fPropertyType(soap, gss__GM_x005fPoint_x005fPropertyType*) serialize to a stream
class gss__GM_x005fPoint_x005fPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gss__GM_x005fPoint_x005fPropertyType_sequence
    {
/// @brief A Point is defined by a single coordinate tuple. The direct position of a point is specified by the pos element which is of type DirectPositionType.
/// Element reference "http://www.opengis.net/gml/3.2":Point.
    gml__PointType*                      gml__Point                     1;	///< Required element.
    }>                                   __GM_x005fPoint_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
/// Attribute uuidref of type xs:string.
   @std::string*                         uuidref                        0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.isotc211.org/2005/gss":GM_Object_PropertyType is a complexType.
/// class gss__GM_x005fObject_x005fPropertyType operations:
/// - soap_new_gss__GM_x005fObject_x005fPropertyType(soap*) allocate
/// - soap_new_gss__GM_x005fObject_x005fPropertyType(soap*, int num) allocate array
/// - soap_new_req_gss__GM_x005fObject_x005fPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gss__GM_x005fObject_x005fPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gss__GM_x005fObject_x005fPropertyType(soap*, gss__GM_x005fObject_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gss__GM_x005fObject_x005fPropertyType(soap, gss__GM_x005fObject_x005fPropertyType*) serialize to a stream
class gss__GM_x005fObject_x005fPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gss__GM_x005fObject_x005fPropertyType_sequence
    {
/// @brief The AbstractGeometry element is the abstract head of the substitution group for all geometry elements of GML. This includes pre-defined and user-defined geometry elements. Any geometry element shall be a direct or indirect extension/restriction of AbstractGeometryType and shall be directly or indirectly in the substitution group of AbstractGeometry.
/// Reference "http://www.opengis.net/gml/3.2":AbstractGeometry to abstract element.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractGeometry"> with elements <GeometricComplex> <AbstractGeometricAggregate> <AbstractGeometricPrimitive> <AbstractImplicitGeometry>
   $int                                  __unionAbstractGeometry        0;	///< Union _gss__union_GM_x005fObject_x005fPropertyType selector: set to SOAP_UNION__gss__union_GM_x005fObject_x005fPropertyType_<fieldname>
/// Union for substitutionGroup="AbstractGeometry"
    union _gss__union_GM_x005fObject_x005fPropertyType
    {
/// Element GeometricComplex of type "http://www.opengis.net/gml/3.2":GeometricComplexType.
    gml__GeometricComplexType*           GeometricComplex               1;	///< Required element.
/// @brief gml:AbstractGeometricAggregate is the abstract head of the substitution group for all geometric aggregates.
/// Abstract element AbstractGeometricAggregate of type "http://www.opengis.net/gml/3.2":AbstractGeometricAggregateType.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractGeometricAggregate"> with elements <MultiGeometry> <MultiPoint> <MultiCurve> <MultiSurface> <MultiSolid>
/// @brief gml:MultiGeometry is a collection of one or more GML geometry objects of arbitrary type. The members of the geometric aggregate may be specified either using the "standard" property (gml:geometryMember) or the array property (gml:geometryMembers). It is also valid to use both the "standard" and the array properties in the same collection.
/// Element MultiGeometry of type "http://www.opengis.net/gml/3.2":MultiGeometryType.
    gml__MultiGeometryType*              MultiGeometry                  1;	///< Required element.
/// @brief A gml:MultiPoint consists of one or more gml:Points. The members of the geometric aggregate may be specified either using the "standard" property (gml:pointMember) or the array property (gml:pointMembers). It is also valid to use both the "standard" and the array properties in the same collection.
/// Element MultiPoint of type "http://www.opengis.net/gml/3.2":MultiPointType.
    gml__MultiPointType*                 MultiPoint                     1;	///< Required element.
/// @brief A gml:MultiCurve is defined by one or more gml:AbstractCurves. The members of the geometric aggregate may be specified either using the "standard" property (gml:curveMember) or the array property (gml:curveMembers). It is also valid to use both the "standard" and the array properties in the same collection.
/// Element MultiCurve of type "http://www.opengis.net/gml/3.2":MultiCurveType.
    gml__MultiCurveType*                 MultiCurve                     1;	///< Required element.
/// @brief A gml:MultiSurface is defined by one or more gml:AbstractSurfaces. The members of the geometric aggregate may be specified either using the "standard" property (gml:surfaceMember) or the array property (gml:surfaceMembers). It is also valid to use both the "standard" and the array properties in the same collection.
/// Element MultiSurface of type "http://www.opengis.net/gml/3.2":MultiSurfaceType.
    gml__MultiSurfaceType*               MultiSurface                   1;	///< Required element.
/// @brief A gml:MultiSolid is defined by one or more gml:AbstractSolids. The members of the geometric aggregate may be specified either using the "standard" property (gml:solidMember) or the array property (gml:solidMembers). It is also valid to use both the "standard" and the array properties in the same collection.
/// Element MultiSolid of type "http://www.opengis.net/gml/3.2":MultiSolidType.
    gml__MultiSolidType*                 MultiSolid                     1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
/// @brief The AbstractGeometricPrimitive element is the abstract head of the substitution group for all (pre- and user-defined) geometric primitives.
/// Abstract element AbstractGeometricPrimitive of type "http://www.opengis.net/gml/3.2":AbstractGeometricPrimitiveType.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractGeometricPrimitive"> with elements <AbstractSolid> <AbstractSurface> <Point> <AbstractCurve>
/// @brief The AbstractSolid element is the abstract head of the substituition group for all (continuous) solid elements.
/// Abstract element AbstractSolid of type "http://www.opengis.net/gml/3.2":AbstractSolidType.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractSolid"> with elements <CompositeSolid> <Solid>
/// @brief gml:CompositeSolid implements ISO 19107 GM_CompositeSolid (see ISO 19107:2003, 6.6.7) as specified in D.2.3.6. A gml:CompositeSolid is represented by a set of orientable surfaces. It is a geometry type with all the geometric properties of a (primitive) solid. Essentially, a composite solid is a collection of solids that join in pairs on common boundary surfaces and which, when considered as a whole, form a single solid. solidMember references or contains one solid in the composite solid. The solids are contiguous.
/// Element CompositeSolid of type "http://www.opengis.net/gml/3.2":CompositeSolidType.
    gml__CompositeSolidType*             CompositeSolid                 1;	///< Required element.
/// @brief A solid is the basis for 3-dimensional geometry. The extent of a solid is defined by the boundary surfaces as specified in ISO 19107:2003, 6.3.18. exterior specifies the outer boundary, interior the inner boundary of the solid.
/// Element Solid of type "http://www.opengis.net/gml/3.2":SolidType.
    gml__SolidType*                      Solid                          1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
/// @brief The AbstractSurface element is the abstract head of the substitution group for all (continuous) surface elements.
/// Abstract element AbstractSurface of type "http://www.opengis.net/gml/3.2":AbstractSurfaceType.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractSurface"> with elements <CompositeSurface> <Surface> <OrientableSurface> <Polygon>
/// @brief A gml:CompositeSurface is represented by a set of orientable surfaces. It is geometry type with all the geometric properties of a (primitive) surface. Essentially, a composite surface is a collection of surfaces that join in pairs on common boundary curves and which, when considered as a whole, form a single surface. surfaceMember references or contains inline one surface in the composite surface. The surfaces are contiguous.
/// Element CompositeSurface of type "http://www.opengis.net/gml/3.2":CompositeSurfaceType.
    gml__CompositeSurfaceType*           CompositeSurface               1;	///< Required element.
/// @brief A Surface is a 2-dimensional primitive and is composed of one or more surface patches as specified in ISO 19107:2003, 6.3.17.1. The surface patches are connected to one another. patches encapsulates the patches of the surface.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="Surface"> with elements <PolyhedralSurface> <TriangulatedSurface>
/// @brief A Surface is a 2-dimensional primitive and is composed of one or more surface patches as specified in ISO 19107:2003, 6.3.17.1. The surface patches are connected to one another. patches encapsulates the patches of the surface.
/// Element Surface of type "http://www.opengis.net/gml/3.2":SurfaceType.
    gml__SurfaceType*                    Surface                        1;	///< Required element.
/// @brief A polyhedral surface is a surface composed of polygon patches connected along their common boundary curves. This differs from the surface type only in the restriction on the types of surface patches acceptable. polygonPatches encapsulates the polygon patches of the polyhedral surface.
/// Element PolyhedralSurface of type "http://www.opengis.net/gml/3.2":SurfaceType.
    gml__SurfaceType*                    PolyhedralSurface              1;	///< Required element.
/// @brief A triangulated surface is a polyhedral surface that is composed only of triangles. There is no restriction on how the triangulation is derived. trianglePatches encapsulates the triangles of the triangulated surface.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="TriangulatedSurface"> with elements <Tin>
/// @brief A triangulated surface is a polyhedral surface that is composed only of triangles. There is no restriction on how the triangulation is derived. trianglePatches encapsulates the triangles of the triangulated surface.
/// Element TriangulatedSurface of type "http://www.opengis.net/gml/3.2":SurfaceType.
    gml__SurfaceType*                    TriangulatedSurface            1;	///< Required element.
/// @brief A tin is a triangulated surface that uses the Delauny algorithm or a similar algorithm complemented with consideration of stoplines (stopLines), breaklines (breakLines), and maximum length of triangle sides (maxLength). controlPoint shall contain a set of the positions (three or more) used as posts for this TIN (corners of the triangles in the TIN). See ISO 19107:2003, 6.4.39 for details.
/// Element Tin of type "http://www.opengis.net/gml/3.2":TinType.
    gml__TinType*                        Tin                            1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
//  END OF CHOICE OF SUBSTITUTIONS
/// @brief OrientableSurface consists of a surface and an orientation. If the orientation is "+", then the OrientableSurface is identical to the baseSurface. If the orientation is "-", then the OrientableSurface is a reference to a gml:AbstractSurface with an up-normal that reverses the direction for this OrientableSurface, the sense of "the top of the surface".
/// Element OrientableSurface of type "http://www.opengis.net/gml/3.2":OrientableSurfaceType.
    gml__OrientableSurfaceType*          OrientableSurface              1;	///< Required element.
/// @brief A Polygon is a special surface that is defined by a single surface patch (see D.3.6). The boundary of this patch is coplanar and the polygon uses planar interpolation in its interior. The elements exterior and interior describe the surface boundary of the polygon.
/// Element Polygon of type "http://www.opengis.net/gml/3.2":PolygonType.
    gml__PolygonType*                    Polygon                        1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
/// @brief A Point is defined by a single coordinate tuple. The direct position of a point is specified by the pos element which is of type DirectPositionType.
/// Element Point of type "http://www.opengis.net/gml/3.2":PointType.
    gml__PointType*                      Point                          1;	///< Required element.
/// @brief The AbstractCurve element is the abstract head of the substitution group for all (continuous) curve elements.
/// Abstract element AbstractCurve of type "http://www.opengis.net/gml/3.2":AbstractCurveType.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractCurve"> with elements <CompositeCurve> <Curve> <OrientableCurve> <LineString>
/// @brief A gml:CompositeCurve is represented by a sequence of (orientable) curves such that each curve in the sequence terminates at the start point of the subsequent curve in the list. curveMember references or contains inline one curve in the composite curve. The curves are contiguous, the collection of curves is ordered. Therefore, if provided, the aggregationType attribute shall have the value "sequence".
/// Element CompositeCurve of type "http://www.opengis.net/gml/3.2":CompositeCurveType.
    gml__CompositeCurveType*             CompositeCurve                 1;	///< Required element.
/// @brief A curve is a 1-dimensional primitive. Curves are continuous, connected, and have a measurable length in terms of the coordinate system. A curve is composed of one or more curve segments. Each curve segment within a curve may be defined using a different interpolation method. The curve segments are connected to one another, with the end point of each segment except the last being the start point of the next segment in the segment list. The orientation of the curve is positive. The element segments encapsulates the segments of the curve.
/// Element Curve of type "http://www.opengis.net/gml/3.2":CurveType.
    gml__CurveType*                      Curve                          1;	///< Required element.
/// @brief OrientableCurve consists of a curve and an orientation. If the orientation is "+", then the OrientableCurve is identical to the baseCurve. If the orientation is "-", then the OrientableCurve is related to another AbstractCurve with a parameterization that reverses the sense of the curve traversal.
/// Element OrientableCurve of type "http://www.opengis.net/gml/3.2":OrientableCurveType.
    gml__OrientableCurveType*            OrientableCurve                1;	///< Required element.
/// @brief A LineString is a special curve that consists of a single segment with linear interpolation. It is defined by two or more coordinate tuples, with linear interpolation between them. The number of direct positions in the list shall be at least two.
/// Element LineString of type "http://www.opengis.net/gml/3.2":LineStringType.
    gml__LineStringType*                 LineString                     1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
//  END OF CHOICE OF SUBSTITUTIONS
/// Abstract element AbstractImplicitGeometry of type "http://www.opengis.net/gml/3.2":AbstractGeometryType.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractImplicitGeometry"> with elements <Grid>
/// @brief The gml:Grid implicitly defines an unrectified grid, which is a network composed of two or more sets of curves in which the members of each set intersect the members of the other sets in an algorithmic way. The region of interest within the grid is given in terms of its gml:limits, being the grid coordinates of diagonally opposed corners of a rectangular region. gml:axisLabels is provided with a list of labels of the axes of the grid (gml:axisName has been deprecated). gml:dimension specifies the dimension of the grid. The gml:limits element contains a single gml:GridEnvelope. The gml:low and gml:high property elements of the envelope are each integerLists, which are coordinate tuples, the coordinates being measured as offsets from the origin of the grid along each axis, of the diagonally opposing corners of a "rectangular" region of interest.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="Grid"> with elements <RectifiedGrid>
/// @brief The gml:Grid implicitly defines an unrectified grid, which is a network composed of two or more sets of curves in which the members of each set intersect the members of the other sets in an algorithmic way. The region of interest within the grid is given in terms of its gml:limits, being the grid coordinates of diagonally opposed corners of a rectangular region. gml:axisLabels is provided with a list of labels of the axes of the grid (gml:axisName has been deprecated). gml:dimension specifies the dimension of the grid. The gml:limits element contains a single gml:GridEnvelope. The gml:low and gml:high property elements of the envelope are each integerLists, which are coordinate tuples, the coordinates being measured as offsets from the origin of the grid along each axis, of the diagonally opposing corners of a "rectangular" region of interest.
/// Element Grid of type "http://www.opengis.net/gml/3.2":GridType.
    gml__GridType*                       Grid                           1;	///< Required element.
/// @brief A rectified grid is a grid for which there is an affine transformation between the grid coordinates and the coordinates of an external coordinate reference system. It is defined by specifying the position (in some geometric space) of the grid "origin" and of the vectors that specify the post locations. Note that the grid limits (post indexes) and axis name properties are inherited from gml:GridType and that gml:RectifiedGrid adds a gml:origin property (contains or references a gml:Point) and a set of gml:offsetVector properties.
/// Element RectifiedGrid of type "http://www.opengis.net/gml/3.2":RectifiedGridType.
    gml__RectifiedGridType*              RectifiedGrid                  1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
//  END OF CHOICE OF SUBSTITUTIONS
    }                                    __union_GM_x005fObject_x005fPropertyType;
//  END OF CHOICE OF SUBSTITUTIONS
    }>                                   __GM_x005fObject_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
/// Attribute uuidref of type xs:string.
   @std::string*                         uuidref                        0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://www.isotc211.org/2005/gts                                         *
 *                                                                            *
\******************************************************************************/


/// "http://www.isotc211.org/2005/gts":TM_Primitive_PropertyType is a complexType.
/// class gts__TM_x005fPrimitive_x005fPropertyType operations:
/// - soap_new_gts__TM_x005fPrimitive_x005fPropertyType(soap*) allocate
/// - soap_new_gts__TM_x005fPrimitive_x005fPropertyType(soap*, int num) allocate array
/// - soap_new_req_gts__TM_x005fPrimitive_x005fPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gts__TM_x005fPrimitive_x005fPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gts__TM_x005fPrimitive_x005fPropertyType(soap*, gts__TM_x005fPrimitive_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gts__TM_x005fPrimitive_x005fPropertyType(soap, gts__TM_x005fPrimitive_x005fPropertyType*) serialize to a stream
class gts__TM_x005fPrimitive_x005fPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gts__TM_x005fPrimitive_x005fPropertyType_sequence
    {
/// @brief gml:AbstractTimePrimitive acts as the head of a substitution group for geometric and topological temporal primitives.
/// Reference "http://www.opengis.net/gml/3.2":AbstractTimePrimitive to abstract element.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractTimePrimitive"> with elements <AbstractTimeGeometricPrimitive> <AbstractTimeTopologyPrimitive>
   $int                                  __unionAbstractTimePrimitive   0;	///< Union _gts__union_TM_x005fPrimitive_x005fPropertyType selector: set to SOAP_UNION__gts__union_TM_x005fPrimitive_x005fPropertyType_<fieldname>
/// Union for substitutionGroup="AbstractTimePrimitive"
    union _gts__union_TM_x005fPrimitive_x005fPropertyType
    {
/// @brief gml:TimeGeometricPrimitive acts as the head of a substitution group for geometric temporal primitives. A temporal geometry shall be associated with a temporal reference system through the frame attribute that provides a URI reference that identifies a description of the reference system. Following ISO 19108, the Gregorian calendar with UTC is the default reference system, but others may also be used. The GPS calendar is an alternative reference systems in common use. The two geometric primitives in the temporal dimension are the instant and the period. GML components are defined to support these as follows.
/// Abstract element AbstractTimeGeometricPrimitive of type "http://www.opengis.net/gml/3.2":AbstractTimeGeometricPrimitiveType.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractTimeGeometricPrimitive"> with elements <TimeInstant> <TimePeriod>
/// @brief gml:TimeInstant acts as a zero-dimensional geometric primitive that represents an identifiable position in time.
/// Element TimeInstant of type "http://www.opengis.net/gml/3.2":TimeInstantType.
    gml__TimeInstantType*                TimeInstant                    1;	///< Required element.
/// @brief gml:TimePeriod acts as a one-dimensional geometric primitive that represents an identifiable extent in time. The location in of a gml:TimePeriod is described by the temporal positions of the instants at which it begins and ends. The length of the period is equal to the temporal distance between the two bounding temporal positions. Both beginning and end may be described in terms of their direct position using gml:TimePositionType which is an XML Schema simple content type, or by reference to an indentifiable time instant using gml:TimeInstantPropertyType. Alternatively a limit of a gml:TimePeriod may use the conventional GML property model to make a reference to a time instant described elsewhere, or a limit may be indicated as a direct position.
/// Element TimePeriod of type "http://www.opengis.net/gml/3.2":TimePeriodType.
    gml__TimePeriodType*                 TimePeriod                     1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
/// @brief gml:TimeTopologyPrimitive acts as the head of a substitution group for topological temporal primitives. Temporal topology primitives shall imply the ordering information between features or feature properties. The temporal connection of features can be examined if they have temporal topology primitives as values of their properties. Usually, an instantaneous feature associates with a time node, and a static feature associates with a time edge. A feature with both modes associates with the temporal topology primitive: a supertype of time nodes and time edges. A topological primitive is always connected to one or more other topological primitives, and is, therefore, always a member of a topological complex. In a GML instance, this will often be indicated by the primitives being described by elements that are descendents of an element describing a complex. However, in order to support the case where a temporal topological primitive is described in another context, the optional complex property is provided, which carries a reference to the parent temporal topological complex.
/// Abstract element AbstractTimeTopologyPrimitive of type "http://www.opengis.net/gml/3.2":AbstractTimeTopologyPrimitiveType.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractTimeTopologyPrimitive"> with elements <TimeNode> <TimeEdge>
/// @brief A time node is a zero-dimensional topological primitive that represents an identifiable node in time (it is equivalent to a point in space). A node may act as the termination or initiation of any number of time edges. A time node may be realised as a geometry, its position, whose value is a time instant.
/// Element TimeNode of type "http://www.opengis.net/gml/3.2":TimeNodeType.
    gml__TimeNodeType*                   TimeNode                       1;	///< Required element.
/// @brief A time edge is a one-dimensional topological primitive. It is an open interval that starts and ends at a node. The edge may be realised as a geometry whose value is a time period.
/// Element TimeEdge of type "http://www.opengis.net/gml/3.2":TimeEdgeType.
    gml__TimeEdgeType*                   TimeEdge                       1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
    }                                    __union_TM_x005fPrimitive_x005fPropertyType;
//  END OF CHOICE OF SUBSTITUTIONS
    }>                                   __TM_x005fPrimitive_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
/// Attribute uuidref of type xs:string.
   @std::string*                         uuidref                        0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.isotc211.org/2005/gts":TM_PeriodDuration_PropertyType is a complexType.
/// class gts__TM_x005fPeriodDuration_x005fPropertyType operations:
/// - soap_new_gts__TM_x005fPeriodDuration_x005fPropertyType(soap*) allocate
/// - soap_new_gts__TM_x005fPeriodDuration_x005fPropertyType(soap*, int num) allocate array
/// - soap_new_req_gts__TM_x005fPeriodDuration_x005fPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gts__TM_x005fPeriodDuration_x005fPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gts__TM_x005fPeriodDuration_x005fPropertyType(soap*, gts__TM_x005fPeriodDuration_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gts__TM_x005fPeriodDuration_x005fPropertyType(soap, gts__TM_x005fPeriodDuration_x005fPropertyType*) serialize to a stream
class gts__TM_x005fPeriodDuration_x005fPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gts__TM_x005fPeriodDuration_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gts":TM_PeriodDuration.
    xsd__duration                        TM_x005fPeriodDuration         1;	///< Required element.
    }>                                   __TM_x005fPeriodDuration_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
};

/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://www.isotc211.org/2005/gsr                                         *
 *                                                                            *
\******************************************************************************/


/// "http://www.isotc211.org/2005/gsr":SC_CRS_PropertyType is a complexType.
/// class gsr__SC_x005fCRS_x005fPropertyType operations:
/// - soap_new_gsr__SC_x005fCRS_x005fPropertyType(soap*) allocate
/// - soap_new_gsr__SC_x005fCRS_x005fPropertyType(soap*, int num) allocate array
/// - soap_new_req_gsr__SC_x005fCRS_x005fPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gsr__SC_x005fCRS_x005fPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gsr__SC_x005fCRS_x005fPropertyType(soap*, gsr__SC_x005fCRS_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gsr__SC_x005fCRS_x005fPropertyType(soap, gsr__SC_x005fCRS_x005fPropertyType*) serialize to a stream
class gsr__SC_x005fCRS_x005fPropertyType : public xsd__anyType
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gsr__SC_x005fCRS_x005fPropertyType_sequence
    {
/// @brief gml:AbstractCRS specifies a coordinate reference system which is usually single but may be compound. This abstract complex type shall not be used, extended, or restricted, in a GML Application Schema, to define a concrete subtype with a meaning equivalent to a concrete subtype specified in this document.
/// Reference "http://www.opengis.net/gml/3.2":AbstractCRS to abstract element.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractCRS"> with elements <AbstractSingleCRS> <CompoundCRS>
   $int                                  __unionAbstractCRS             0;	///< Union _gsr__union_SC_x005fCRS_x005fPropertyType selector: set to SOAP_UNION__gsr__union_SC_x005fCRS_x005fPropertyType_<fieldname>
/// Union for substitutionGroup="AbstractCRS"
    union _gsr__union_SC_x005fCRS_x005fPropertyType
    {
/// @brief gml:AbstractSingleCRS implements a coordinate reference system consisting of one coordinate system and one datum (as opposed to a Compound CRS).
/// Abstract element AbstractSingleCRS of type "http://www.opengis.net/gml/3.2":AbstractCRSType.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractSingleCRS"> with elements <AbstractGeneralDerivedCRS> <GeodeticCRS> <VerticalCRS> <EngineeringCRS> <ImageCRS> <TemporalCRS> <GeographicCRS> <GeocentricCRS>
/// @brief gml:AbstractGeneralDerivedCRS is a coordinate reference system that is defined by its coordinate conversion from another coordinate reference system. This abstract complex type shall not be used, extended, or restricted, in a GML Application Schema, to define a concrete subtype with a meaning equivalent to a concrete subtype specified in this document.
/// Abstract element AbstractGeneralDerivedCRS of type "http://www.opengis.net/gml/3.2":AbstractGeneralDerivedCRSType.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractGeneralDerivedCRS"> with elements <ProjectedCRS> <DerivedCRS>
/// @brief gml:ProjectedCRS is a 2D coordinate reference system used to approximate the shape of the earth on a planar surface, but in such a way that the distortion that is inherent to the approximation is carefully controlled and known. Distortion correction is commonly applied to calculated bearings and distances to produce values that are a close match to actual field values.
/// Element ProjectedCRS of type "http://www.opengis.net/gml/3.2":ProjectedCRSType.
    gml__ProjectedCRSType*               ProjectedCRS                   1;	///< Required element.
/// @brief gml:DerivedCRS is a single coordinate reference system that is defined by its coordinate conversion from another single coordinate reference system known as the base CRS. The base CRS can be a projected coordinate reference system, if this DerivedCRS is used for a georectified grid coverage as described in ISO 19123, Clause 8.
/// Element DerivedCRS of type "http://www.opengis.net/gml/3.2":DerivedCRSType.
    gml__DerivedCRSType*                 DerivedCRS                     1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
/// Element GeodeticCRS of type "http://www.opengis.net/gml/3.2":GeodeticCRSType.
    gml__GeodeticCRSType*                GeodeticCRS                    1;	///< Required element.
/// @brief gml:VerticalCRS is a 1D coordinate reference system used for recording heights or depths. Vertical CRSs make use of the direction of gravity to define the concept of height or depth, but the relationship with gravity may not be straightforward. By implication, ellipsoidal heights (h) cannot be captured in a vertical coordinate reference system. Ellipsoidal heights cannot exist independently, but only as an inseparable part of a 3D coordinate tuple defined in a geographic 3D coordinate reference system.
/// Element VerticalCRS of type "http://www.opengis.net/gml/3.2":VerticalCRSType.
    gml__VerticalCRSType*                VerticalCRS                    1;	///< Required element.
/// @brief gml:EngineeringCRS is a contextually local coordinate reference system which can be divided into two broad categories: - earth-fixed systems applied to engineering activities on or near the surface of the earth; - CRSs on moving platforms such as road vehicles, vessels, aircraft, or spacecraft, see ISO 19111 8.3.
/// Element EngineeringCRS of type "http://www.opengis.net/gml/3.2":EngineeringCRSType.
    gml__EngineeringCRSType*             EngineeringCRS                 1;	///< Required element.
/// @brief gml:ImageCRS is an engineering coordinate reference system applied to locations in images. Image coordinate reference systems are treated as a separate sub-type because the definition of the associated image datum contains two attributes not relevant to other engineering datums.
/// Element ImageCRS of type "http://www.opengis.net/gml/3.2":ImageCRSType.
    gml__ImageCRSType*                   ImageCRS                       1;	///< Required element.
/// @brief gml:TemporalCRS is a 1D coordinate reference system used for the recording of time.
/// Element TemporalCRS of type "http://www.opengis.net/gml/3.2":TemporalCRSType.
    gml__TemporalCRSType*                TemporalCRS                    1;	///< Required element.
/// Element GeographicCRS of type "http://www.opengis.net/gml/3.2":GeographicCRSType.
    gml__GeographicCRSType*              GeographicCRS                  1;	///< Required element.
/// Element GeocentricCRS of type "http://www.opengis.net/gml/3.2":GeocentricCRSType.
    gml__GeocentricCRSType*              GeocentricCRS                  1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
/// @brief gml:CompundCRS is a coordinate reference system describing the position of points through two or more independent coordinate reference systems. It is associated with a non-repeating sequence of two or more instances of SingleCRS.
/// Element CompoundCRS of type "http://www.opengis.net/gml/3.2":CompoundCRSType.
    gml__CompoundCRSType*                CompoundCRS                    1;	///< Required element.
    }                                    __union_SC_x005fCRS_x005fPropertyType;
//  END OF CHOICE OF SUBSTITUTIONS
    }>                                   __SC_x005fCRS_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
/// Attribute uuidref of type xs:string.
   @std::string*                         uuidref                        0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://inspire.ec.europa.eu/schemas/plu/3.0":DimensioningIndicationMeasureValueType is a complexType with complexContent extension of "http://inspire.ec.europa.eu/schemas/plu/3.0":DimensioningIndicationValueType.
/// class plu__DimensioningIndicationMeasureValueType operations:
/// - soap_new_plu__DimensioningIndicationMeasureValueType(soap*) allocate
/// - soap_new_plu__DimensioningIndicationMeasureValueType(soap*, int num) allocate array
/// - soap_new_req_plu__DimensioningIndicationMeasureValueType(soap*, ...) allocate, set required members
/// - soap_new_set_plu__DimensioningIndicationMeasureValueType(soap*, ...) allocate, set all public members
/// - int soap_read_plu__DimensioningIndicationMeasureValueType(soap*, plu__DimensioningIndicationMeasureValueType*) deserialize from a stream
/// - int soap_write_plu__DimensioningIndicationMeasureValueType(soap, plu__DimensioningIndicationMeasureValueType*) serialize to a stream
class plu__DimensioningIndicationMeasureValueType : public plu__DimensioningIndicationValueType
{ public:
/*  INHERITED FROM plu__DimensioningIndicationValueType:
/// @brief -- Definition -- Description of the dimension indication.
/// Element indicationReference of type xs:string.
    std::string                          indicationReference            1;	///< Required element.
    END OF INHERITED FROM plu__DimensioningIndicationValueType */
/// Element value of type "http://www.opengis.net/gml/3.2":MeasureType.
    gml__MeasureType*                    value                          1;	///< Required element.
};

/// "http://inspire.ec.europa.eu/schemas/plu/3.0":DimensioningIndicationIntegerValueType is a complexType with complexContent extension of "http://inspire.ec.europa.eu/schemas/plu/3.0":DimensioningIndicationValueType.
/// class plu__DimensioningIndicationIntegerValueType operations:
/// - soap_new_plu__DimensioningIndicationIntegerValueType(soap*) allocate
/// - soap_new_plu__DimensioningIndicationIntegerValueType(soap*, int num) allocate array
/// - soap_new_req_plu__DimensioningIndicationIntegerValueType(soap*, ...) allocate, set required members
/// - soap_new_set_plu__DimensioningIndicationIntegerValueType(soap*, ...) allocate, set all public members
/// - int soap_read_plu__DimensioningIndicationIntegerValueType(soap*, plu__DimensioningIndicationIntegerValueType*) deserialize from a stream
/// - int soap_write_plu__DimensioningIndicationIntegerValueType(soap, plu__DimensioningIndicationIntegerValueType*) serialize to a stream
class plu__DimensioningIndicationIntegerValueType : public plu__DimensioningIndicationValueType
{ public:
/*  INHERITED FROM plu__DimensioningIndicationValueType:
/// @brief -- Definition -- Description of the dimension indication.
/// Element indicationReference of type xs:string.
    std::string                          indicationReference            1;	///< Required element.
    END OF INHERITED FROM plu__DimensioningIndicationValueType */
/// Element value of type xs:integer.
    long                                 value                          1;	///< Required element.
};

/// "http://inspire.ec.europa.eu/schemas/plu/3.0":DimensioningIndicationCharacterValueType is a complexType with complexContent extension of "http://inspire.ec.europa.eu/schemas/plu/3.0":DimensioningIndicationValueType.
/// class plu__DimensioningIndicationCharacterValueType operations:
/// - soap_new_plu__DimensioningIndicationCharacterValueType(soap*) allocate
/// - soap_new_plu__DimensioningIndicationCharacterValueType(soap*, int num) allocate array
/// - soap_new_req_plu__DimensioningIndicationCharacterValueType(soap*, ...) allocate, set required members
/// - soap_new_set_plu__DimensioningIndicationCharacterValueType(soap*, ...) allocate, set all public members
/// - int soap_read_plu__DimensioningIndicationCharacterValueType(soap*, plu__DimensioningIndicationCharacterValueType*) deserialize from a stream
/// - int soap_write_plu__DimensioningIndicationCharacterValueType(soap, plu__DimensioningIndicationCharacterValueType*) serialize to a stream
class plu__DimensioningIndicationCharacterValueType : public plu__DimensioningIndicationValueType
{ public:
/*  INHERITED FROM plu__DimensioningIndicationValueType:
/// @brief -- Definition -- Description of the dimension indication.
/// Element indicationReference of type xs:string.
    std::string                          indicationReference            1;	///< Required element.
    END OF INHERITED FROM plu__DimensioningIndicationValueType */
/// @brief -- Definition -- value of the dimension indications.
/// Element value of type xs:string.
    std::string                          value                          1;	///< Required element.
};

/// "http://inspire.ec.europa.eu/schemas/plu/3.0":DimensioningIndicationRealValueType is a complexType with complexContent extension of "http://inspire.ec.europa.eu/schemas/plu/3.0":DimensioningIndicationValueType.
/// class plu__DimensioningIndicationRealValueType operations:
/// - soap_new_plu__DimensioningIndicationRealValueType(soap*) allocate
/// - soap_new_plu__DimensioningIndicationRealValueType(soap*, int num) allocate array
/// - soap_new_req_plu__DimensioningIndicationRealValueType(soap*, ...) allocate, set required members
/// - soap_new_set_plu__DimensioningIndicationRealValueType(soap*, ...) allocate, set all public members
/// - int soap_read_plu__DimensioningIndicationRealValueType(soap*, plu__DimensioningIndicationRealValueType*) deserialize from a stream
/// - int soap_write_plu__DimensioningIndicationRealValueType(soap, plu__DimensioningIndicationRealValueType*) serialize to a stream
class plu__DimensioningIndicationRealValueType : public plu__DimensioningIndicationValueType
{ public:
/*  INHERITED FROM plu__DimensioningIndicationValueType:
/// @brief -- Definition -- Description of the dimension indication.
/// Element indicationReference of type xs:string.
    std::string                          indicationReference            1;	///< Required element.
    END OF INHERITED FROM plu__DimensioningIndicationValueType */
/// Element value of type xs:double.
    double                               value                          1;	///< Required element.
};

/// "http://inspire.ec.europa.eu/schemas/base2/1.0":DocumentCitationType is a complexType with complexContent extension of "http://www.opengis.net/gml/3.2":AbstractGMLType.
/// class base2__DocumentCitationType operations:
/// - soap_new_base2__DocumentCitationType(soap*) allocate
/// - soap_new_base2__DocumentCitationType(soap*, int num) allocate array
/// - soap_new_req_base2__DocumentCitationType(soap*, ...) allocate, set required members
/// - soap_new_set_base2__DocumentCitationType(soap*, ...) allocate, set all public members
/// - int soap_read_base2__DocumentCitationType(soap*, base2__DocumentCitationType*) deserialize from a stream
/// - int soap_write_base2__DocumentCitationType(soap, base2__DocumentCitationType*) serialize to a stream
class base2__DocumentCitationType : public gml__AbstractGMLType
{ public:
/*  INHERITED FROM gml__AbstractGMLType:
/// GROUP <xs:group name="StandardObjectProperties">
/// Vector of gml__MetaDataPropertyType* element refs with length 0..unbounded
    std::vector<gml__MetaDataPropertyType*> metaDataProperty               0;
/// @brief The value of this property is a text description of the object. gml:description uses gml:StringOrRefType as its content model, so it may contain a simple text string content, or carry a reference to an external description. The use of gml:description to reference an external description has been deprecated and replaced by the gml:descriptionReference property.
/// Element reference "http://www.opengis.net/gml/3.2":description.
    gml__StringOrRefType*                description                    0;	///< Optional element.
/// @brief The value of this property is a remote text description of the object. The xlink:href attribute of the gml:descriptionReference property references the external description.
/// Element reference "http://www.opengis.net/gml/3.2":descriptionReference.
    gml__ReferenceType*                  descriptionReference           0;	///< Optional element.
/// @brief Often, a special identifier is assigned to an object by the maintaining authority with the intention that it is used in references to the object For such cases, the codeSpace shall be provided. That identifier is usually unique either globally or within an application domain. gml:identifier is a pre-defined property for such identifiers.
/// Element reference "http://www.opengis.net/gml/3.2":identifier.
    gml__CodeWithAuthorityType*          identifier                     0;	///< Optional element.
/// @brief The gml:name property provides a label or identifier for the object, commonly a descriptive name. An object may have several names, typically assigned by different authorities. gml:name uses the gml:CodeType content model. The authority for a name is indicated by the value of its (optional) codeSpace attribute. The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace. In common usage there will be one name per authority, so a processing application may select the name from its preferred codeSpace.
/// Vector of gml__CodeType* element refs with length 0..unbounded
    std::vector<gml__CodeType*         > name                           0;
//  END OF GROUP
/// Attribute reference "http://www.opengis.net/gml/3.2":id.
/// @brief The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.
   @xsd__ID                              id                             1;	///< Required attribute.
    END OF INHERITED FROM gml__AbstractGMLType */
/// @brief -- Name -- name -- Definition -- Name of the document. -- Description -- NOTE For legal documents, this should be the official name assigned to the legislative instrument. EXAMPLE The official legal name for the INSPIRE Directive is "Directive 2007/2/EC of the European Parliament and of the Council of 14 March 2007 establishing an Infrastructure for Spatial Information in the European Community (INSPIRE)"
/// Element name of type xs:string.
    std::string                          name                           1;	///< Required element.
/// @brief -- Name -- short name -- Definition -- Short name or alternative title of the document. -- Description -- NOTE For legal documents, this should be a short name or alternative title commonly used to identify the legislation. EXAMPLE 1: INSPIRE Directive is the short name for "Directive 2007/2/EC of the European Parliament and of the Council of 14 March 2007 establishing an Infrastructure for Spatial Information in the European Community (INSPIRE)" EXAMPLE 2: CAFE Directive is the short name for the Directive 2008/50/EC of the European Parliament and of the Council of 21 May 2008 on ambient air quality and cleaner air for Europe" EXAMPLE 3: Water Framework Directive the short name for "Directive 2000/60/EC of the European Parliament and of the Council establishing a framework for the Community action in the field of water policy"
/// class _base2__DocumentCitationType_shortName operations:
/// - soap_new__base2__DocumentCitationType_shortName(soap*) allocate
/// - soap_new__base2__DocumentCitationType_shortName(soap*, int num) allocate array
/// - soap_new_req__base2__DocumentCitationType_shortName(soap*, ...) allocate, set required members
/// - soap_new_set__base2__DocumentCitationType_shortName(soap*, ...) allocate, set all public members
/// - int soap_read__base2__DocumentCitationType_shortName(soap*, _base2__DocumentCitationType_shortName*) deserialize from a stream
/// - int soap_write__base2__DocumentCitationType_shortName(soap, _base2__DocumentCitationType_shortName*) serialize to a stream
    class _base2__DocumentCitationType_shortName
    {
/// __item wraps 'xs:string' simpleContent.
    std::string                          __item                        ;
/// Attribute nilReason of type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
    }                                   *shortName                      0;	///< Nillable pointer.
/// @brief -- Name -- date -- Definition -- Date of creation, publication or revision of the document.
/// class _base2__DocumentCitationType_date operations:
/// - soap_new__base2__DocumentCitationType_date(soap*) allocate
/// - soap_new__base2__DocumentCitationType_date(soap*, int num) allocate array
/// - soap_new_req__base2__DocumentCitationType_date(soap*, ...) allocate, set required members
/// - soap_new_set__base2__DocumentCitationType_date(soap*, ...) allocate, set all public members
/// - int soap_read__base2__DocumentCitationType_date(soap*, _base2__DocumentCitationType_date*) deserialize from a stream
/// - int soap_write__base2__DocumentCitationType_date(soap, _base2__DocumentCitationType_date*) serialize to a stream
    class _base2__DocumentCitationType_date
    {
/// INHERITED FROM gml__AbstractMetadataPropertyType:
/// Attribute owns of type xs:boolean.
   @bool                                 owns                           0 = false;	///< Default value="false".
//  END OF INHERITED FROM gml__AbstractMetadataPropertyType
/// Element reference "http://www.isotc211.org/2005/gmd":CI_Date.
    gmd__CI_x005fDate_x005fType*         gmd__CI_x005fDate              1;	///< Required element.
/// Attribute nilReason of type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
    }                                   *date                          ;	///< Nillable pointer.
/// @brief -- Name -- link to online version -- Definition -- Link to an online version of the document
/// Vector of link with length 1..unbounded
    std::vector<
/// class _base2__DocumentCitationType_link operations:
/// - soap_new__base2__DocumentCitationType_link(soap*) allocate
/// - soap_new__base2__DocumentCitationType_link(soap*, int num) allocate array
/// - soap_new_req__base2__DocumentCitationType_link(soap*, ...) allocate, set required members
/// - soap_new_set__base2__DocumentCitationType_link(soap*, ...) allocate, set all public members
/// - int soap_read__base2__DocumentCitationType_link(soap*, _base2__DocumentCitationType_link*) deserialize from a stream
/// - int soap_write__base2__DocumentCitationType_link(soap, _base2__DocumentCitationType_link*) serialize to a stream
    class _base2__DocumentCitationType_link
    {
/// __item wraps 'xs:anyURI' simpleContent.
    xsd__anyURI                          __item                        ;
/// Attribute nilReason of type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
    }>                                  *link                          ;	///< Nillable pointer.
/// @brief -- Name -- specific reference -- Definition -- Reference to a specific part of the document. -- Description -- EXAMPLE For legal documents, this attribute can contain a reference to article(s) that specify a specific requirement or obligation.
/// Vector of specificReference with length 0..unbounded
    std::vector<
/// class _base2__DocumentCitationType_specificReference operations:
/// - soap_new__base2__DocumentCitationType_specificReference(soap*) allocate
/// - soap_new__base2__DocumentCitationType_specificReference(soap*, int num) allocate array
/// - soap_new_req__base2__DocumentCitationType_specificReference(soap*, ...) allocate, set required members
/// - soap_new_set__base2__DocumentCitationType_specificReference(soap*, ...) allocate, set all public members
/// - int soap_read__base2__DocumentCitationType_specificReference(soap*, _base2__DocumentCitationType_specificReference*) deserialize from a stream
/// - int soap_write__base2__DocumentCitationType_specificReference(soap, _base2__DocumentCitationType_specificReference*) serialize to a stream
    class _base2__DocumentCitationType_specificReference
    {
/// __item wraps 'xs:string' simpleContent.
    std::string                          __item                        ;
/// Attribute nilReason of type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
    }>                                  *specificReference              0;	///< Nillable pointer.
};


/// Top-level root element "http://www.interactive-instruments.de/ShapeChange/AppInfo":taggedValue

/// "http://www.interactive-instruments.de/ShapeChange/AppInfo":taggedValue is a complexType with simpleContent.
/// class _sc__taggedValue operations:
/// - soap_new__sc__taggedValue(soap*) allocate
/// - soap_new__sc__taggedValue(soap*, int num) allocate array
/// - soap_new_req__sc__taggedValue(soap*, ...) allocate, set required members
/// - soap_new_set__sc__taggedValue(soap*, ...) allocate, set all public members
/// - int soap_read__sc__taggedValue(soap*, _sc__taggedValue*) deserialize from a stream
/// - int soap_write__sc__taggedValue(soap, _sc__taggedValue*) serialize to a stream
class _sc__taggedValue
{ public:
/// __item wraps 'xs:string' simpleContent.
    std::string                          __item                        ;
/// Attribute tag of type xs:string.
   @std::string*                         tag                            0;	///< Optional attribute.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.opengis.net/gml/3.2":DynamicFeatureMemberType is a complexType with complexContent extension of "http://www.opengis.net/gml/3.2":AbstractFeatureMemberType.
/// class gml__DynamicFeatureMemberType operations:
/// - soap_new_gml__DynamicFeatureMemberType(soap*) allocate
/// - soap_new_gml__DynamicFeatureMemberType(soap*, int num) allocate array
/// - soap_new_req_gml__DynamicFeatureMemberType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__DynamicFeatureMemberType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__DynamicFeatureMemberType(soap*, gml__DynamicFeatureMemberType*) deserialize from a stream
/// - int soap_write_gml__DynamicFeatureMemberType(soap, gml__DynamicFeatureMemberType*) serialize to a stream
class gml__DynamicFeatureMemberType : public gml__AbstractFeatureMemberType
{ public:
/*  INHERITED FROM gml__AbstractFeatureMemberType:
/// Attribute owns of type xs:boolean.
   @bool                                 owns                           0 = false;	///< Default value="false".
    END OF INHERITED FROM gml__AbstractFeatureMemberType */
/// @brief States are captured by time-stamped instances of a feature. The content model extends the standard gml:AbstractFeatureType with the gml:dynamicProperties model group. Each time-stamped instance represents a 'snapshot' of a feature. The dynamic feature classes will normally be extended to suit particular applications. A dynamic feature bears either a time stamp or a history.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="DynamicFeature" minOccurs="0" maxOccurs="unbounded"> with elements <DynamicFeatureCollection>
   $int                                  __sizeDynamicFeature           0;
    class __gml__union_DynamicFeatureMemberType
    {
   $int                                  __unionDynamicFeature          0;	///< Union _gml__union_DynamicFeatureMemberType selector: set to SOAP_UNION__gml__union_DynamicFeatureMemberType_<fieldname> or 0
/// Union for substitutionGroup="DynamicFeature"
    union _gml__union_DynamicFeatureMemberType
    {
/// @brief States are captured by time-stamped instances of a feature. The content model extends the standard gml:AbstractFeatureType with the gml:dynamicProperties model group. Each time-stamped instance represents a 'snapshot' of a feature. The dynamic feature classes will normally be extended to suit particular applications. A dynamic feature bears either a time stamp or a history.
/// Vector of gml__DynamicFeatureType* element refs with length 0..unbounded
    std::vector<gml__DynamicFeatureType*> *DynamicFeature                 0;
/// @brief A gml:DynamicFeatureCollection is a feature collection that has a gml:validTime property (i.e. is a snapshot of the feature collection) or which has a gml:history property that contains one or more gml:AbstractTimeSlices each of which contain values of the time varying properties of the feature collection. Note that the gml:DynamicFeatureCollection may be one of the following: 1. A feature collection which consists of static feature members (members do not change in time) but which has properties of the collection object as a whole that do change in time . 2. A feature collection which consists of dynamic feature members (the members are gml:DynamicFeatures) but which also has properties of the collection as a whole that vary in time.
/// Element DynamicFeatureCollection of type "http://www.opengis.net/gml/3.2":DynamicFeatureCollectionType.
    gml__DynamicFeatureCollectionType*   DynamicFeatureCollection       1;	///< Required element.
    }                                    __union_DynamicFeatureMemberType;
;
    }                                   *__union_DynamicFeatureMemberType;
//  END OF CHOICE OF SUBSTITUTIONS
/// Attribute nilReason of type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         remoteSchema                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.opengis.net/gml/3.2":AbstractTimeSliceType is an abstract complexType with complexContent extension of "http://www.opengis.net/gml/3.2":AbstractGMLType.
/// class gml__AbstractTimeSliceType operations:
/// - soap_new_gml__AbstractTimeSliceType(soap*) allocate
/// - soap_new_gml__AbstractTimeSliceType(soap*, int num) allocate array
/// - soap_new_req_gml__AbstractTimeSliceType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__AbstractTimeSliceType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__AbstractTimeSliceType(soap*, gml__AbstractTimeSliceType*) deserialize from a stream
/// - int soap_write_gml__AbstractTimeSliceType(soap, gml__AbstractTimeSliceType*) serialize to a stream
class gml__AbstractTimeSliceType : public gml__AbstractGMLType
{ public:
/*  INHERITED FROM gml__AbstractGMLType:
/// GROUP <xs:group name="StandardObjectProperties">
/// Vector of gml__MetaDataPropertyType* element refs with length 0..unbounded
    std::vector<gml__MetaDataPropertyType*> metaDataProperty               0;
/// @brief The value of this property is a text description of the object. gml:description uses gml:StringOrRefType as its content model, so it may contain a simple text string content, or carry a reference to an external description. The use of gml:description to reference an external description has been deprecated and replaced by the gml:descriptionReference property.
/// Element reference "http://www.opengis.net/gml/3.2":description.
    gml__StringOrRefType*                description                    0;	///< Optional element.
/// @brief The value of this property is a remote text description of the object. The xlink:href attribute of the gml:descriptionReference property references the external description.
/// Element reference "http://www.opengis.net/gml/3.2":descriptionReference.
    gml__ReferenceType*                  descriptionReference           0;	///< Optional element.
/// @brief Often, a special identifier is assigned to an object by the maintaining authority with the intention that it is used in references to the object For such cases, the codeSpace shall be provided. That identifier is usually unique either globally or within an application domain. gml:identifier is a pre-defined property for such identifiers.
/// Element reference "http://www.opengis.net/gml/3.2":identifier.
    gml__CodeWithAuthorityType*          identifier                     0;	///< Optional element.
/// @brief The gml:name property provides a label or identifier for the object, commonly a descriptive name. An object may have several names, typically assigned by different authorities. gml:name uses the gml:CodeType content model. The authority for a name is indicated by the value of its (optional) codeSpace attribute. The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace. In common usage there will be one name per authority, so a processing application may select the name from its preferred codeSpace.
/// Vector of gml__CodeType* element refs with length 0..unbounded
    std::vector<gml__CodeType*         > name                           0;
//  END OF GROUP
/// Attribute reference "http://www.opengis.net/gml/3.2":id.
/// @brief The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.
   @xsd__ID                              id                             1;	///< Required attribute.
    END OF INHERITED FROM gml__AbstractGMLType */
/// @brief gml:validTime is a convenience property element.
/// Element reference "http://www.opengis.net/gml/3.2":validTime.
    gml__TimePrimitivePropertyType*      validTime                      1;	///< Required element.
/// @brief Evidence is represented by a simple gml:dataSource or gml:dataSourceReference property that indicates the source of the temporal data. The remote link attributes of the gml:dataSource element have been deprecated along with its current type.
/// Element reference "http://www.opengis.net/gml/3.2":dataSource.
    gml__StringOrRefType*                dataSource                     0;	///< Optional element.
};

/// "http://www.opengis.net/gml/3.2":AbstractTopologyType is an abstract complexType with complexContent extension of "http://www.opengis.net/gml/3.2":AbstractGMLType.
/// @brief This abstract type supplies the root or base type for all topological elements including primitives and complexes. It inherits AbstractGMLType and hence can be identified using the gml:id attribute.
/// class gml__AbstractTopologyType operations:
/// - soap_new_gml__AbstractTopologyType(soap*) allocate
/// - soap_new_gml__AbstractTopologyType(soap*, int num) allocate array
/// - soap_new_req_gml__AbstractTopologyType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__AbstractTopologyType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__AbstractTopologyType(soap*, gml__AbstractTopologyType*) deserialize from a stream
/// - int soap_write_gml__AbstractTopologyType(soap, gml__AbstractTopologyType*) serialize to a stream
class gml__AbstractTopologyType : public gml__AbstractGMLType
{ public:
/*  INHERITED FROM gml__AbstractGMLType:
/// GROUP <xs:group name="StandardObjectProperties">
/// Vector of gml__MetaDataPropertyType* element refs with length 0..unbounded
    std::vector<gml__MetaDataPropertyType*> metaDataProperty               0;
/// @brief The value of this property is a text description of the object. gml:description uses gml:StringOrRefType as its content model, so it may contain a simple text string content, or carry a reference to an external description. The use of gml:description to reference an external description has been deprecated and replaced by the gml:descriptionReference property.
/// Element reference "http://www.opengis.net/gml/3.2":description.
    gml__StringOrRefType*                description                    0;	///< Optional element.
/// @brief The value of this property is a remote text description of the object. The xlink:href attribute of the gml:descriptionReference property references the external description.
/// Element reference "http://www.opengis.net/gml/3.2":descriptionReference.
    gml__ReferenceType*                  descriptionReference           0;	///< Optional element.
/// @brief Often, a special identifier is assigned to an object by the maintaining authority with the intention that it is used in references to the object For such cases, the codeSpace shall be provided. That identifier is usually unique either globally or within an application domain. gml:identifier is a pre-defined property for such identifiers.
/// Element reference "http://www.opengis.net/gml/3.2":identifier.
    gml__CodeWithAuthorityType*          identifier                     0;	///< Optional element.
/// @brief The gml:name property provides a label or identifier for the object, commonly a descriptive name. An object may have several names, typically assigned by different authorities. gml:name uses the gml:CodeType content model. The authority for a name is indicated by the value of its (optional) codeSpace attribute. The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace. In common usage there will be one name per authority, so a processing application may select the name from its preferred codeSpace.
/// Vector of gml__CodeType* element refs with length 0..unbounded
    std::vector<gml__CodeType*         > name                           0;
//  END OF GROUP
/// Attribute reference "http://www.opengis.net/gml/3.2":id.
/// @brief The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.
   @xsd__ID                              id                             1;	///< Required attribute.
    END OF INHERITED FROM gml__AbstractGMLType */
};

/// "http://www.opengis.net/gml/3.2":LineStringSegmentType is a complexType with complexContent extension of "http://www.opengis.net/gml/3.2":AbstractCurveSegmentType.
/// class gml__LineStringSegmentType operations:
/// - soap_new_gml__LineStringSegmentType(soap*) allocate
/// - soap_new_gml__LineStringSegmentType(soap*, int num) allocate array
/// - soap_new_req_gml__LineStringSegmentType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__LineStringSegmentType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__LineStringSegmentType(soap*, gml__LineStringSegmentType*) deserialize from a stream
/// - int soap_write_gml__LineStringSegmentType(soap, gml__LineStringSegmentType*) serialize to a stream
class gml__LineStringSegmentType : public gml__AbstractCurveSegmentType
{ public:
/*  INHERITED FROM gml__AbstractCurveSegmentType:
/// Attribute numDerivativesAtStart of type xs:integer.
   @long                                 numDerivativesAtStart          0 = 0;	///< Default value="0".
/// Attribute numDerivativesAtEnd of type xs:integer.
   @long                                 numDerivativesAtEnd            0 = 0;	///< Default value="0".
/// Attribute numDerivativeInterior of type xs:integer.
   @long                                 numDerivativeInterior          0 = 0;	///< Default value="0".
    END OF INHERITED FROM gml__AbstractCurveSegmentType */
/// CHOICE <xs:choice>
   $int                                  __union_LineStringSegmentType ;	///< Union _gml__union_LineStringSegmentType selector: set to SOAP_UNION__gml__union_LineStringSegmentType_<fieldname>
    union _gml__union_LineStringSegmentType
    {
/// CHOICE <xs:choice minOccurs="2" maxOccurs="unbounded">
    struct ___gml__union_LineStringSegmentType_
    {
   $int                                  __size_LineStringSegmentType_  2;
    class __gml__union_LineStringSegmentType_
    {
   $int                                  __union_LineStringSegmentType_ 2;	///< Union _gml__union_LineStringSegmentType_ selector: set to SOAP_UNION__gml__union_LineStringSegmentType__<fieldname>
    union _gml__union_LineStringSegmentType_
    {
/// Element reference "http://www.opengis.net/gml/3.2":pos.
    gml__DirectPositionType*             pos                            1;	///< Required element.
/// @brief This property element either references a point via the XLink-attributes or contains the point element. pointProperty is the predefined property which may be used by GML Application Schemas whenever a GML feature has a property with a value that is substitutable for Point.
/// Element reference "http://www.opengis.net/gml/3.2":pointProperty.
    gml__PointPropertyType*              pointProperty                  1;	///< Required element.
/// Element reference "http://www.opengis.net/gml/3.2":pointRep.
    gml__PointPropertyType*              pointRep                       1;	///< Required element.
    }                                    union_LineStringSegmentType_  ;
    }                                   *__union_LineStringSegmentType_;
    }                                    __union_LineStringSegmentType_;
//  END OF CHOICE
/// Element reference "http://www.opengis.net/gml/3.2":posList.
    gml__DirectPositionListType*         posList                        1;	///< Required element.
/// Element reference "http://www.opengis.net/gml/3.2":coordinates.
    gml__CoordinatesType*                coordinates                    1;	///< Required element.
    }                                    union_LineStringSegmentType   ;
//  END OF CHOICE
/// Attribute interpolation of type "http://www.opengis.net/gml/3.2":CurveInterpolationType.
   @enum gml__CurveInterpolationType*    interpolation                  0;	///< Fixed optional value="linear".
};

/// "http://www.opengis.net/gml/3.2":ArcStringType is a complexType with complexContent extension of "http://www.opengis.net/gml/3.2":AbstractCurveSegmentType.
/// class gml__ArcStringType operations:
/// - soap_new_gml__ArcStringType(soap*) allocate
/// - soap_new_gml__ArcStringType(soap*, int num) allocate array
/// - soap_new_req_gml__ArcStringType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__ArcStringType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__ArcStringType(soap*, gml__ArcStringType*) deserialize from a stream
/// - int soap_write_gml__ArcStringType(soap, gml__ArcStringType*) serialize to a stream
class gml__ArcStringType : public gml__AbstractCurveSegmentType
{ public:
/*  INHERITED FROM gml__AbstractCurveSegmentType:
/// Attribute numDerivativesAtStart of type xs:integer.
   @long                                 numDerivativesAtStart          0 = 0;	///< Default value="0".
/// Attribute numDerivativesAtEnd of type xs:integer.
   @long                                 numDerivativesAtEnd            0 = 0;	///< Default value="0".
/// Attribute numDerivativeInterior of type xs:integer.
   @long                                 numDerivativeInterior          0 = 0;	///< Default value="0".
    END OF INHERITED FROM gml__AbstractCurveSegmentType */
/// CHOICE <xs:choice>
   $int                                  __union_ArcStringType         ;	///< Union _gml__union_ArcStringType selector: set to SOAP_UNION__gml__union_ArcStringType_<fieldname>
    union _gml__union_ArcStringType
    {
/// CHOICE <xs:choice minOccurs="3" maxOccurs="unbounded">
    struct ___gml__union_ArcStringType_
    {
   $int                                  __size_ArcStringType_          3;
    class __gml__union_ArcStringType_
    {
   $int                                  __union_ArcStringType_         3;	///< Union _gml__union_ArcStringType_ selector: set to SOAP_UNION__gml__union_ArcStringType__<fieldname>
    union _gml__union_ArcStringType_
    {
/// Element reference "http://www.opengis.net/gml/3.2":pos.
    gml__DirectPositionType*             pos                            1;	///< Required element.
/// @brief This property element either references a point via the XLink-attributes or contains the point element. pointProperty is the predefined property which may be used by GML Application Schemas whenever a GML feature has a property with a value that is substitutable for Point.
/// Element reference "http://www.opengis.net/gml/3.2":pointProperty.
    gml__PointPropertyType*              pointProperty                  1;	///< Required element.
/// Element reference "http://www.opengis.net/gml/3.2":pointRep.
    gml__PointPropertyType*              pointRep                       1;	///< Required element.
    }                                    union_ArcStringType_          ;
    }                                   *__union_ArcStringType_        ;
    }                                    __union_ArcStringType_        ;
//  END OF CHOICE
/// Element reference "http://www.opengis.net/gml/3.2":posList.
    gml__DirectPositionListType*         posList                        1;	///< Required element.
/// Element reference "http://www.opengis.net/gml/3.2":coordinates.
    gml__CoordinatesType*                coordinates                    1;	///< Required element.
    }                                    union_ArcStringType           ;
//  END OF CHOICE
/// Attribute interpolation of type "http://www.opengis.net/gml/3.2":CurveInterpolationType.
   @enum gml__CurveInterpolationType*    interpolation                  0;	///< Fixed optional value="circularArc3Points".
/// Attribute numArc of type xs:integer.
   @long*                                numArc                         0;	///< Optional attribute.
};

/// "http://www.opengis.net/gml/3.2":ArcStringByBulgeType is a complexType with complexContent extension of "http://www.opengis.net/gml/3.2":AbstractCurveSegmentType.
/// class gml__ArcStringByBulgeType operations:
/// - soap_new_gml__ArcStringByBulgeType(soap*) allocate
/// - soap_new_gml__ArcStringByBulgeType(soap*, int num) allocate array
/// - soap_new_req_gml__ArcStringByBulgeType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__ArcStringByBulgeType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__ArcStringByBulgeType(soap*, gml__ArcStringByBulgeType*) deserialize from a stream
/// - int soap_write_gml__ArcStringByBulgeType(soap, gml__ArcStringByBulgeType*) serialize to a stream
class gml__ArcStringByBulgeType : public gml__AbstractCurveSegmentType
{ public:
/*  INHERITED FROM gml__AbstractCurveSegmentType:
/// Attribute numDerivativesAtStart of type xs:integer.
   @long                                 numDerivativesAtStart          0 = 0;	///< Default value="0".
/// Attribute numDerivativesAtEnd of type xs:integer.
   @long                                 numDerivativesAtEnd            0 = 0;	///< Default value="0".
/// Attribute numDerivativeInterior of type xs:integer.
   @long                                 numDerivativeInterior          0 = 0;	///< Default value="0".
    END OF INHERITED FROM gml__AbstractCurveSegmentType */
/// CHOICE <xs:choice>
   $int                                  __union_ArcStringByBulgeType  ;	///< Union _gml__union_ArcStringByBulgeType selector: set to SOAP_UNION__gml__union_ArcStringByBulgeType_<fieldname>
    union _gml__union_ArcStringByBulgeType
    {
/// CHOICE <xs:choice minOccurs="2" maxOccurs="unbounded">
    struct ___gml__union_ArcStringByBulgeType_
    {
   $int                                  __size_ArcStringByBulgeType_   2;
    class __gml__union_ArcStringByBulgeType_
    {
   $int                                  __union_ArcStringByBulgeType_  2;	///< Union _gml__union_ArcStringByBulgeType_ selector: set to SOAP_UNION__gml__union_ArcStringByBulgeType__<fieldname>
    union _gml__union_ArcStringByBulgeType_
    {
/// Element reference "http://www.opengis.net/gml/3.2":pos.
    gml__DirectPositionType*             pos                            1;	///< Required element.
/// @brief This property element either references a point via the XLink-attributes or contains the point element. pointProperty is the predefined property which may be used by GML Application Schemas whenever a GML feature has a property with a value that is substitutable for Point.
/// Element reference "http://www.opengis.net/gml/3.2":pointProperty.
    gml__PointPropertyType*              pointProperty                  1;	///< Required element.
/// Element reference "http://www.opengis.net/gml/3.2":pointRep.
    gml__PointPropertyType*              pointRep                       1;	///< Required element.
    }                                    union_ArcStringByBulgeType_   ;
    }                                   *__union_ArcStringByBulgeType_ ;
    }                                    __union_ArcStringByBulgeType_ ;
//  END OF CHOICE
/// Element reference "http://www.opengis.net/gml/3.2":posList.
    gml__DirectPositionListType*         posList                        1;	///< Required element.
/// Element reference "http://www.opengis.net/gml/3.2":coordinates.
    gml__CoordinatesType*                coordinates                    1;	///< Required element.
    }                                    union_ArcStringByBulgeType    ;
//  END OF CHOICE
/// Vector of double with length 1..unbounded
    std::vector<double                 > bulge                          1;
/// Vector of gml__VectorType* with length 1..unbounded
    std::vector<gml__VectorType*       > normal                         1;
/// Attribute interpolation of type "http://www.opengis.net/gml/3.2":CurveInterpolationType.
   @enum gml__CurveInterpolationType*    interpolation                  0;	///< Fixed optional value="circularArc2PointWithBulge".
/// Attribute numArc of type xs:integer.
   @long*                                numArc                         0;	///< Optional attribute.
};

/// "http://www.opengis.net/gml/3.2":ArcByCenterPointType is a complexType with complexContent extension of "http://www.opengis.net/gml/3.2":AbstractCurveSegmentType.
/// class gml__ArcByCenterPointType operations:
/// - soap_new_gml__ArcByCenterPointType(soap*) allocate
/// - soap_new_gml__ArcByCenterPointType(soap*, int num) allocate array
/// - soap_new_req_gml__ArcByCenterPointType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__ArcByCenterPointType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__ArcByCenterPointType(soap*, gml__ArcByCenterPointType*) deserialize from a stream
/// - int soap_write_gml__ArcByCenterPointType(soap, gml__ArcByCenterPointType*) serialize to a stream
class gml__ArcByCenterPointType : public gml__AbstractCurveSegmentType
{ public:
/*  INHERITED FROM gml__AbstractCurveSegmentType:
/// Attribute numDerivativesAtStart of type xs:integer.
   @long                                 numDerivativesAtStart          0 = 0;	///< Default value="0".
/// Attribute numDerivativesAtEnd of type xs:integer.
   @long                                 numDerivativesAtEnd            0 = 0;	///< Default value="0".
/// Attribute numDerivativeInterior of type xs:integer.
   @long                                 numDerivativeInterior          0 = 0;	///< Default value="0".
    END OF INHERITED FROM gml__AbstractCurveSegmentType */
/// CHOICE <xs:choice>
   $int                                  __union_ArcByCenterPointType  ;	///< Union _gml__union_ArcByCenterPointType selector: set to SOAP_UNION__gml__union_ArcByCenterPointType_<fieldname>
    union _gml__union_ArcByCenterPointType
    {
/// CHOICE <xs:choice>
/// Element reference "http://www.opengis.net/gml/3.2":pos.
    gml__DirectPositionType*             pos                            1;	///< Required element.
/// @brief This property element either references a point via the XLink-attributes or contains the point element. pointProperty is the predefined property which may be used by GML Application Schemas whenever a GML feature has a property with a value that is substitutable for Point.
/// Element reference "http://www.opengis.net/gml/3.2":pointProperty.
    gml__PointPropertyType*              pointProperty                  1;	///< Required element.
/// Element reference "http://www.opengis.net/gml/3.2":pointRep.
    gml__PointPropertyType*              pointRep                       1;	///< Required element.
;
//  END OF CHOICE
/// Element reference "http://www.opengis.net/gml/3.2":posList.
    gml__DirectPositionListType*         posList                        1;	///< Required element.
/// Element reference "http://www.opengis.net/gml/3.2":coordinates.
    gml__CoordinatesType*                coordinates                    1;	///< Required element.
    }                                    union_ArcByCenterPointType    ;
//  END OF CHOICE
/// Element radius of type "http://www.opengis.net/gml/3.2":LengthType.
    gml__LengthType*                     radius                         1;	///< Required element.
/// Element startAngle of type "http://www.opengis.net/gml/3.2":AngleType.
    gml__AngleType*                      startAngle                     0;	///< Optional element.
/// Element endAngle of type "http://www.opengis.net/gml/3.2":AngleType.
    gml__AngleType*                      endAngle                       0;	///< Optional element.
/// Attribute interpolation of type "http://www.opengis.net/gml/3.2":CurveInterpolationType.
   @enum gml__CurveInterpolationType*    interpolation                  0;	///< Fixed optional value="circularArcCenterPointWithRadius".
/// Attribute numArc of type xs:integer.
   @long                                 numArc                         1 = 1;	///< Fixed required value="1".
};

/// "http://www.opengis.net/gml/3.2":CubicSplineType is a complexType with complexContent extension of "http://www.opengis.net/gml/3.2":AbstractCurveSegmentType.
/// class gml__CubicSplineType operations:
/// - soap_new_gml__CubicSplineType(soap*) allocate
/// - soap_new_gml__CubicSplineType(soap*, int num) allocate array
/// - soap_new_req_gml__CubicSplineType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__CubicSplineType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__CubicSplineType(soap*, gml__CubicSplineType*) deserialize from a stream
/// - int soap_write_gml__CubicSplineType(soap, gml__CubicSplineType*) serialize to a stream
class gml__CubicSplineType : public gml__AbstractCurveSegmentType
{ public:
/*  INHERITED FROM gml__AbstractCurveSegmentType:
/// Attribute numDerivativesAtStart of type xs:integer.
   @long                                 numDerivativesAtStart          0 = 0;	///< Default value="0".
/// Attribute numDerivativesAtEnd of type xs:integer.
   @long                                 numDerivativesAtEnd            0 = 0;	///< Default value="0".
/// Attribute numDerivativeInterior of type xs:integer.
   @long                                 numDerivativeInterior          0 = 0;	///< Default value="0".
    END OF INHERITED FROM gml__AbstractCurveSegmentType */
/// CHOICE <xs:choice>
   $int                                  __union_CubicSplineType       ;	///< Union _gml__union_CubicSplineType selector: set to SOAP_UNION__gml__union_CubicSplineType_<fieldname>
    union _gml__union_CubicSplineType
    {
/// CHOICE <xs:choice minOccurs="2" maxOccurs="unbounded">
    struct ___gml__union_CubicSplineType_
    {
   $int                                  __size_CubicSplineType_        2;
    class __gml__union_CubicSplineType_
    {
   $int                                  __union_CubicSplineType_       2;	///< Union _gml__union_CubicSplineType_ selector: set to SOAP_UNION__gml__union_CubicSplineType__<fieldname>
    union _gml__union_CubicSplineType_
    {
/// Element reference "http://www.opengis.net/gml/3.2":pos.
    gml__DirectPositionType*             pos                            1;	///< Required element.
/// @brief This property element either references a point via the XLink-attributes or contains the point element. pointProperty is the predefined property which may be used by GML Application Schemas whenever a GML feature has a property with a value that is substitutable for Point.
/// Element reference "http://www.opengis.net/gml/3.2":pointProperty.
    gml__PointPropertyType*              pointProperty                  1;	///< Required element.
/// Element reference "http://www.opengis.net/gml/3.2":pointRep.
    gml__PointPropertyType*              pointRep                       1;	///< Required element.
    }                                    union_CubicSplineType_        ;
    }                                   *__union_CubicSplineType_      ;
    }                                    __union_CubicSplineType_      ;
//  END OF CHOICE
/// Element reference "http://www.opengis.net/gml/3.2":posList.
    gml__DirectPositionListType*         posList                        1;	///< Required element.
/// Element reference "http://www.opengis.net/gml/3.2":coordinates.
    gml__CoordinatesType*                coordinates                    1;	///< Required element.
    }                                    union_CubicSplineType         ;
//  END OF CHOICE
/// Element vectorAtStart of type "http://www.opengis.net/gml/3.2":VectorType.
    gml__VectorType*                     vectorAtStart                  1;	///< Required element.
/// Element vectorAtEnd of type "http://www.opengis.net/gml/3.2":VectorType.
    gml__VectorType*                     vectorAtEnd                    1;	///< Required element.
/// Attribute interpolation of type "http://www.opengis.net/gml/3.2":CurveInterpolationType.
   @enum gml__CurveInterpolationType*    interpolation                  0;	///< Fixed optional value="cubicSpline".
/// Attribute degree of type xs:integer.
   @long*                                degree                         0;	///< Fixed optional value="3".
};

/// "http://www.opengis.net/gml/3.2":BSplineType is a complexType with complexContent extension of "http://www.opengis.net/gml/3.2":AbstractCurveSegmentType.
/// class gml__BSplineType operations:
/// - soap_new_gml__BSplineType(soap*) allocate
/// - soap_new_gml__BSplineType(soap*, int num) allocate array
/// - soap_new_req_gml__BSplineType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__BSplineType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__BSplineType(soap*, gml__BSplineType*) deserialize from a stream
/// - int soap_write_gml__BSplineType(soap, gml__BSplineType*) serialize to a stream
class gml__BSplineType : public gml__AbstractCurveSegmentType
{ public:
/*  INHERITED FROM gml__AbstractCurveSegmentType:
/// Attribute numDerivativesAtStart of type xs:integer.
   @long                                 numDerivativesAtStart          0 = 0;	///< Default value="0".
/// Attribute numDerivativesAtEnd of type xs:integer.
   @long                                 numDerivativesAtEnd            0 = 0;	///< Default value="0".
/// Attribute numDerivativeInterior of type xs:integer.
   @long                                 numDerivativeInterior          0 = 0;	///< Default value="0".
    END OF INHERITED FROM gml__AbstractCurveSegmentType */
/// CHOICE <xs:choice>
   $int                                  __union_BSplineType           ;	///< Union _gml__union_BSplineType selector: set to SOAP_UNION__gml__union_BSplineType_<fieldname>
    union _gml__union_BSplineType
    {
/// CHOICE <xs:choice minOccurs="0" maxOccurs="unbounded">
    struct ___gml__union_BSplineType_
    {
   $int                                  __size_BSplineType_            0;
    class __gml__union_BSplineType_
    {
   $int                                  __union_BSplineType_           0;	///< Union _gml__union_BSplineType_ selector: set to SOAP_UNION__gml__union_BSplineType__<fieldname> or 0
    union _gml__union_BSplineType_
    {
/// Element reference "http://www.opengis.net/gml/3.2":pos.
    gml__DirectPositionType*             pos                            1;	///< Required element.
/// @brief This property element either references a point via the XLink-attributes or contains the point element. pointProperty is the predefined property which may be used by GML Application Schemas whenever a GML feature has a property with a value that is substitutable for Point.
/// Element reference "http://www.opengis.net/gml/3.2":pointProperty.
    gml__PointPropertyType*              pointProperty                  1;	///< Required element.
/// Element reference "http://www.opengis.net/gml/3.2":pointRep.
    gml__PointPropertyType*              pointRep                       1;	///< Required element.
    }                                    union_BSplineType_            ;
    }                                   *__union_BSplineType_          ;
    }                                    __union_BSplineType_          ;
//  END OF CHOICE
/// Element reference "http://www.opengis.net/gml/3.2":posList.
    gml__DirectPositionListType*         posList                        1;	///< Required element.
/// Element reference "http://www.opengis.net/gml/3.2":coordinates.
    gml__CoordinatesType*                coordinates                    1;	///< Required element.
    }                                    union_BSplineType             ;
//  END OF CHOICE
/// Element degree of type xs:nonNegativeInteger.
    xsd__nonNegativeInteger              degree                         1;	///< Required element.
/// Vector of gml__KnotPropertyType* with length 2..unbounded
    std::vector<gml__KnotPropertyType* > knot                           2;
/// Attribute interpolation of type "http://www.opengis.net/gml/3.2":CurveInterpolationType.
   @enum gml__CurveInterpolationType     interpolation                  0 = gml__CurveInterpolationType__polynomialSpline;	///< Default value="polynomialSpline".
/// Attribute isPolynomial of type xs:boolean.
   @bool*                                isPolynomial                   0;	///< Optional attribute.
/// Attribute knotType of type "http://www.opengis.net/gml/3.2":KnotTypesType.
   @enum gml__KnotTypesType*             knotType                       0;	///< Optional attribute.
};

/// "http://www.opengis.net/gml/3.2":OffsetCurveType is a complexType with complexContent extension of "http://www.opengis.net/gml/3.2":AbstractCurveSegmentType.
/// class gml__OffsetCurveType operations:
/// - soap_new_gml__OffsetCurveType(soap*) allocate
/// - soap_new_gml__OffsetCurveType(soap*, int num) allocate array
/// - soap_new_req_gml__OffsetCurveType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__OffsetCurveType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__OffsetCurveType(soap*, gml__OffsetCurveType*) deserialize from a stream
/// - int soap_write_gml__OffsetCurveType(soap, gml__OffsetCurveType*) serialize to a stream
class gml__OffsetCurveType : public gml__AbstractCurveSegmentType
{ public:
/*  INHERITED FROM gml__AbstractCurveSegmentType:
/// Attribute numDerivativesAtStart of type xs:integer.
   @long                                 numDerivativesAtStart          0 = 0;	///< Default value="0".
/// Attribute numDerivativesAtEnd of type xs:integer.
   @long                                 numDerivativesAtEnd            0 = 0;	///< Default value="0".
/// Attribute numDerivativeInterior of type xs:integer.
   @long                                 numDerivativeInterior          0 = 0;	///< Default value="0".
    END OF INHERITED FROM gml__AbstractCurveSegmentType */
/// Element offsetBase of type "http://www.opengis.net/gml/3.2":CurvePropertyType.
    gml__CurvePropertyType*              offsetBase                     1;	///< Required element.
/// Element distance of type "http://www.opengis.net/gml/3.2":LengthType.
    gml__LengthType*                     distance                       1;	///< Required element.
/// Element refDirection of type "http://www.opengis.net/gml/3.2":VectorType.
    gml__VectorType*                     refDirection                   0;	///< Optional element.
};

/// "http://www.opengis.net/gml/3.2":ClothoidType is a complexType with complexContent extension of "http://www.opengis.net/gml/3.2":AbstractCurveSegmentType.
/// class gml__ClothoidType operations:
/// - soap_new_gml__ClothoidType(soap*) allocate
/// - soap_new_gml__ClothoidType(soap*, int num) allocate array
/// - soap_new_req_gml__ClothoidType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__ClothoidType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__ClothoidType(soap*, gml__ClothoidType*) deserialize from a stream
/// - int soap_write_gml__ClothoidType(soap, gml__ClothoidType*) serialize to a stream
class gml__ClothoidType : public gml__AbstractCurveSegmentType
{ public:
/*  INHERITED FROM gml__AbstractCurveSegmentType:
/// Attribute numDerivativesAtStart of type xs:integer.
   @long                                 numDerivativesAtStart          0 = 0;	///< Default value="0".
/// Attribute numDerivativesAtEnd of type xs:integer.
   @long                                 numDerivativesAtEnd            0 = 0;	///< Default value="0".
/// Attribute numDerivativeInterior of type xs:integer.
   @long                                 numDerivativeInterior          0 = 0;	///< Default value="0".
    END OF INHERITED FROM gml__AbstractCurveSegmentType */
/// class _gml__ClothoidType_refLocation operations:
/// - soap_new__gml__ClothoidType_refLocation(soap*) allocate
/// - soap_new__gml__ClothoidType_refLocation(soap*, int num) allocate array
/// - soap_new_req__gml__ClothoidType_refLocation(soap*, ...) allocate, set required members
/// - soap_new_set__gml__ClothoidType_refLocation(soap*, ...) allocate, set all public members
/// - int soap_read__gml__ClothoidType_refLocation(soap*, _gml__ClothoidType_refLocation*) deserialize from a stream
/// - int soap_write__gml__ClothoidType_refLocation(soap, _gml__ClothoidType_refLocation*) serialize to a stream
    class _gml__ClothoidType_refLocation
    {
/// @brief location, refDirection, inDimension and outDimension have the same meaning as specified in ISO 19107:2003, 6.4.21.
/// Element reference "http://www.opengis.net/gml/3.2":AffinePlacement.
    gml__AffinePlacementType*            AffinePlacement                1;	///< Required element.
    }                                    refLocation                    1;	///< Required element.
/// Element scaleFactor of type xs:decimal.
    xsd__decimal                         scaleFactor                    1;	///< Required element.
/// Element startParameter of type xs:double.
    double                               startParameter                 1;	///< Required element.
/// Element endParameter of type xs:double.
    double                               endParameter                   1;	///< Required element.
/// Attribute interpolation of type "http://www.opengis.net/gml/3.2":CurveInterpolationType.
   @enum gml__CurveInterpolationType*    interpolation                  0;	///< Fixed optional value="clothoid".
};

/// "http://www.opengis.net/gml/3.2":GeodesicStringType is a complexType with complexContent extension of "http://www.opengis.net/gml/3.2":AbstractCurveSegmentType.
/// class gml__GeodesicStringType operations:
/// - soap_new_gml__GeodesicStringType(soap*) allocate
/// - soap_new_gml__GeodesicStringType(soap*, int num) allocate array
/// - soap_new_req_gml__GeodesicStringType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__GeodesicStringType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__GeodesicStringType(soap*, gml__GeodesicStringType*) deserialize from a stream
/// - int soap_write_gml__GeodesicStringType(soap, gml__GeodesicStringType*) serialize to a stream
class gml__GeodesicStringType : public gml__AbstractCurveSegmentType
{ public:
/*  INHERITED FROM gml__AbstractCurveSegmentType:
/// Attribute numDerivativesAtStart of type xs:integer.
   @long                                 numDerivativesAtStart          0 = 0;	///< Default value="0".
/// Attribute numDerivativesAtEnd of type xs:integer.
   @long                                 numDerivativesAtEnd            0 = 0;	///< Default value="0".
/// Attribute numDerivativeInterior of type xs:integer.
   @long                                 numDerivativeInterior          0 = 0;	///< Default value="0".
    END OF INHERITED FROM gml__AbstractCurveSegmentType */
/// CHOICE <xs:choice>
/// Note: <xs:choice> with embedded <xs:sequence> or <xs:group> prevents the use of a union
/// Element reference "http://www.opengis.net/gml/3.2":posList.
    gml__DirectPositionListType*         posList                       ;
/// GROUP <xs:group name="geometricPositionGroup" minOccurs="2" maxOccurs="unbounded">
/// @brief GML supports two different ways to specify a geometric position: either by a direct position (a data type) or a point (a geometric object). pos elements are positions that are "owned" by the geometric primitive encapsulating this geometric position. pointProperty elements contain a point that may be referenced from other geometry elements or reference another point defined elsewhere (reuse of existing points).
/// CHOICE <xs:choice minOccurs="2" maxOccurs="unbounded">
   $int                                  __size_GeodesicStringType_     2;
    class __gml__union_GeodesicStringType_
    {
   $int                                  __union_GeodesicStringType_    2;	///< Union _gml__union_GeodesicStringType_ selector: set to SOAP_UNION__gml__union_GeodesicStringType__<fieldname>
    union _gml__union_GeodesicStringType_
    {
/// Element reference "http://www.opengis.net/gml/3.2":pos.
    gml__DirectPositionType*             pos                           ;
/// @brief This property element either references a point via the XLink-attributes or contains the point element. pointProperty is the predefined property which may be used by GML Application Schemas whenever a GML feature has a property with a value that is substitutable for Point.
/// Element reference "http://www.opengis.net/gml/3.2":pointProperty.
    gml__PointPropertyType*              pointProperty                 ;
    }                                    union_GeodesicStringType_     ;
    }                                   *__union_GeodesicStringType_   ;
//  END OF CHOICE
//  END OF GROUP
;
//  END OF CHOICE
/// Attribute interpolation of type "http://www.opengis.net/gml/3.2":CurveInterpolationType.
   @enum gml__CurveInterpolationType*    interpolation                  0;	///< Fixed optional value="geodesic".
};

/// "http://www.opengis.net/gml/3.2":PolygonPatchType is a complexType with complexContent extension of "http://www.opengis.net/gml/3.2":AbstractSurfacePatchType.
/// class gml__PolygonPatchType operations:
/// - soap_new_gml__PolygonPatchType(soap*) allocate
/// - soap_new_gml__PolygonPatchType(soap*, int num) allocate array
/// - soap_new_req_gml__PolygonPatchType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__PolygonPatchType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__PolygonPatchType(soap*, gml__PolygonPatchType*) deserialize from a stream
/// - int soap_write_gml__PolygonPatchType(soap, gml__PolygonPatchType*) serialize to a stream
class gml__PolygonPatchType : public gml__AbstractSurfacePatchType
{ public:
/*  INHERITED FROM gml__AbstractSurfacePatchType:
    END OF INHERITED FROM gml__AbstractSurfacePatchType */
/// @brief A boundary of a surface consists of a number of rings. In the normal 2D case, one of these rings is distinguished as being the exterior boundary. In a general manifold this is not always possible, in which case all boundaries shall be listed as interior boundaries, and the exterior will be empty.
/// Element reference "http://www.opengis.net/gml/3.2":exterior.
    gml__AbstractRingPropertyType*       exterior                       0;	///< Optional element.
/// @brief A boundary of a surface consists of a number of rings. The "interior" rings separate the surface / surface patch from the area enclosed by the rings.
/// Vector of gml__AbstractRingPropertyType* element refs with length 0..unbounded
    std::vector<gml__AbstractRingPropertyType*> interior                       0;
/// Attribute interpolation of type "http://www.opengis.net/gml/3.2":SurfaceInterpolationType.
   @enum gml__SurfaceInterpolationType*  interpolation                  0;	///< Fixed optional value="planar".
};

/// "http://www.opengis.net/gml/3.2":TriangleType is a complexType with complexContent extension of "http://www.opengis.net/gml/3.2":AbstractSurfacePatchType.
/// class gml__TriangleType operations:
/// - soap_new_gml__TriangleType(soap*) allocate
/// - soap_new_gml__TriangleType(soap*, int num) allocate array
/// - soap_new_req_gml__TriangleType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__TriangleType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__TriangleType(soap*, gml__TriangleType*) deserialize from a stream
/// - int soap_write_gml__TriangleType(soap, gml__TriangleType*) serialize to a stream
class gml__TriangleType : public gml__AbstractSurfacePatchType
{ public:
/*  INHERITED FROM gml__AbstractSurfacePatchType:
    END OF INHERITED FROM gml__AbstractSurfacePatchType */
/// @brief A boundary of a surface consists of a number of rings. In the normal 2D case, one of these rings is distinguished as being the exterior boundary. In a general manifold this is not always possible, in which case all boundaries shall be listed as interior boundaries, and the exterior will be empty.
/// Element reference "http://www.opengis.net/gml/3.2":exterior.
    gml__AbstractRingPropertyType*       exterior                       1;	///< Required element.
/// Attribute interpolation of type "http://www.opengis.net/gml/3.2":SurfaceInterpolationType.
   @enum gml__SurfaceInterpolationType*  interpolation                  0;	///< Fixed optional value="planar".
};

/// "http://www.opengis.net/gml/3.2":RectangleType is a complexType with complexContent extension of "http://www.opengis.net/gml/3.2":AbstractSurfacePatchType.
/// class gml__RectangleType operations:
/// - soap_new_gml__RectangleType(soap*) allocate
/// - soap_new_gml__RectangleType(soap*, int num) allocate array
/// - soap_new_req_gml__RectangleType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__RectangleType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__RectangleType(soap*, gml__RectangleType*) deserialize from a stream
/// - int soap_write_gml__RectangleType(soap, gml__RectangleType*) serialize to a stream
class gml__RectangleType : public gml__AbstractSurfacePatchType
{ public:
/*  INHERITED FROM gml__AbstractSurfacePatchType:
    END OF INHERITED FROM gml__AbstractSurfacePatchType */
/// @brief A boundary of a surface consists of a number of rings. In the normal 2D case, one of these rings is distinguished as being the exterior boundary. In a general manifold this is not always possible, in which case all boundaries shall be listed as interior boundaries, and the exterior will be empty.
/// Element reference "http://www.opengis.net/gml/3.2":exterior.
    gml__AbstractRingPropertyType*       exterior                       1;	///< Required element.
/// Attribute interpolation of type "http://www.opengis.net/gml/3.2":SurfaceInterpolationType.
   @enum gml__SurfaceInterpolationType*  interpolation                  0;	///< Fixed optional value="planar".
};

/// "http://www.opengis.net/gml/3.2":RingType is a complexType with complexContent extension of "http://www.opengis.net/gml/3.2":AbstractRingType.
/// class gml__RingType operations:
/// - soap_new_gml__RingType(soap*) allocate
/// - soap_new_gml__RingType(soap*, int num) allocate array
/// - soap_new_req_gml__RingType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__RingType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__RingType(soap*, gml__RingType*) deserialize from a stream
/// - int soap_write_gml__RingType(soap, gml__RingType*) serialize to a stream
class gml__RingType : public gml__AbstractRingType
{ public:
/*  INHERITED FROM gml__AbstractRingType:
    END OF INHERITED FROM gml__AbstractRingType */
/// Vector of gml__CurvePropertyType* element refs with length 1..unbounded
    std::vector<gml__CurvePropertyType*> curveMember                    1;
/// Attribute aggregationType of type "http://www.opengis.net/gml/3.2":AggregationType.
   @enum gml__AggregationType*           aggregationType                0;	///< Optional attribute.
};

/// "http://www.opengis.net/gml/3.2":AbstractParametricCurveSurfaceType is an abstract complexType with complexContent extension of "http://www.opengis.net/gml/3.2":AbstractSurfacePatchType.
/// class gml__AbstractParametricCurveSurfaceType operations:
/// - soap_new_gml__AbstractParametricCurveSurfaceType(soap*) allocate
/// - soap_new_gml__AbstractParametricCurveSurfaceType(soap*, int num) allocate array
/// - soap_new_req_gml__AbstractParametricCurveSurfaceType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__AbstractParametricCurveSurfaceType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__AbstractParametricCurveSurfaceType(soap*, gml__AbstractParametricCurveSurfaceType*) deserialize from a stream
/// - int soap_write_gml__AbstractParametricCurveSurfaceType(soap, gml__AbstractParametricCurveSurfaceType*) serialize to a stream
class gml__AbstractParametricCurveSurfaceType : public gml__AbstractSurfacePatchType
{ public:
/*  INHERITED FROM gml__AbstractSurfacePatchType:
    END OF INHERITED FROM gml__AbstractSurfacePatchType */
/// Attribute aggregationType of type "http://www.opengis.net/gml/3.2":AggregationType.
   @enum gml__AggregationType*           aggregationType                0;	///< Optional attribute.
};

/// "http://www.opengis.net/gml/3.2":LinearRingType is a complexType with complexContent extension of "http://www.opengis.net/gml/3.2":AbstractRingType.
/// class gml__LinearRingType operations:
/// - soap_new_gml__LinearRingType(soap*) allocate
/// - soap_new_gml__LinearRingType(soap*, int num) allocate array
/// - soap_new_req_gml__LinearRingType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__LinearRingType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__LinearRingType(soap*, gml__LinearRingType*) deserialize from a stream
/// - int soap_write_gml__LinearRingType(soap, gml__LinearRingType*) serialize to a stream
class gml__LinearRingType : public gml__AbstractRingType
{ public:
/*  INHERITED FROM gml__AbstractRingType:
    END OF INHERITED FROM gml__AbstractRingType */
/// CHOICE <xs:choice>
   $int                                  __union_LinearRingType        ;	///< Union _gml__union_LinearRingType selector: set to SOAP_UNION__gml__union_LinearRingType_<fieldname>
    union _gml__union_LinearRingType
    {
/// CHOICE <xs:choice minOccurs="4" maxOccurs="unbounded">
    struct ___gml__union_LinearRingType_
    {
   $int                                  __size_LinearRingType_         4;
    class __gml__union_LinearRingType_
    {
   $int                                  __union_LinearRingType_        4;	///< Union _gml__union_LinearRingType_ selector: set to SOAP_UNION__gml__union_LinearRingType__<fieldname>
    union _gml__union_LinearRingType_
    {
/// Element reference "http://www.opengis.net/gml/3.2":pos.
    gml__DirectPositionType*             pos                            1;	///< Required element.
/// @brief This property element either references a point via the XLink-attributes or contains the point element. pointProperty is the predefined property which may be used by GML Application Schemas whenever a GML feature has a property with a value that is substitutable for Point.
/// Element reference "http://www.opengis.net/gml/3.2":pointProperty.
    gml__PointPropertyType*              pointProperty                  1;	///< Required element.
/// Element reference "http://www.opengis.net/gml/3.2":pointRep.
    gml__PointPropertyType*              pointRep                       1;	///< Required element.
    }                                    union_LinearRingType_         ;
    }                                   *__union_LinearRingType_       ;
    }                                    __union_LinearRingType_       ;
//  END OF CHOICE
/// Element reference "http://www.opengis.net/gml/3.2":posList.
    gml__DirectPositionListType*         posList                        1;	///< Required element.
/// Element reference "http://www.opengis.net/gml/3.2":coordinates.
    gml__CoordinatesType*                coordinates                    1;	///< Required element.
    }                                    union_LinearRingType          ;
//  END OF CHOICE
};

/// "http://www.opengis.net/gml/3.2":AbstractGeometryType is an abstract complexType with complexContent extension of "http://www.opengis.net/gml/3.2":AbstractGMLType.
/// @brief All geometry elements are derived directly or indirectly from this abstract supertype. A geometry element may have an identifying attribute (gml:id), one or more names (elements identifier and name) and a description (elements description and descriptionReference) . It may be associated with a spatial reference system (attribute group gml:SRSReferenceGroup). The following rules shall be adhered to: - Every geometry type shall derive from this abstract type. - Every geometry element (i.e. an element of a geometry type) shall be directly or indirectly in the substitution group of AbstractGeometry.
/// class gml__AbstractGeometryType operations:
/// - soap_new_gml__AbstractGeometryType(soap*) allocate
/// - soap_new_gml__AbstractGeometryType(soap*, int num) allocate array
/// - soap_new_req_gml__AbstractGeometryType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__AbstractGeometryType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__AbstractGeometryType(soap*, gml__AbstractGeometryType*) deserialize from a stream
/// - int soap_write_gml__AbstractGeometryType(soap, gml__AbstractGeometryType*) serialize to a stream
class gml__AbstractGeometryType : public gml__AbstractGMLType
{ public:
/*  INHERITED FROM gml__AbstractGMLType:
/// GROUP <xs:group name="StandardObjectProperties">
/// Vector of gml__MetaDataPropertyType* element refs with length 0..unbounded
    std::vector<gml__MetaDataPropertyType*> metaDataProperty               0;
/// @brief The value of this property is a text description of the object. gml:description uses gml:StringOrRefType as its content model, so it may contain a simple text string content, or carry a reference to an external description. The use of gml:description to reference an external description has been deprecated and replaced by the gml:descriptionReference property.
/// Element reference "http://www.opengis.net/gml/3.2":description.
    gml__StringOrRefType*                description                    0;	///< Optional element.
/// @brief The value of this property is a remote text description of the object. The xlink:href attribute of the gml:descriptionReference property references the external description.
/// Element reference "http://www.opengis.net/gml/3.2":descriptionReference.
    gml__ReferenceType*                  descriptionReference           0;	///< Optional element.
/// @brief Often, a special identifier is assigned to an object by the maintaining authority with the intention that it is used in references to the object For such cases, the codeSpace shall be provided. That identifier is usually unique either globally or within an application domain. gml:identifier is a pre-defined property for such identifiers.
/// Element reference "http://www.opengis.net/gml/3.2":identifier.
    gml__CodeWithAuthorityType*          identifier                     0;	///< Optional element.
/// @brief The gml:name property provides a label or identifier for the object, commonly a descriptive name. An object may have several names, typically assigned by different authorities. gml:name uses the gml:CodeType content model. The authority for a name is indicated by the value of its (optional) codeSpace attribute. The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace. In common usage there will be one name per authority, so a processing application may select the name from its preferred codeSpace.
/// Vector of gml__CodeType* element refs with length 0..unbounded
    std::vector<gml__CodeType*         > name                           0;
//  END OF GROUP
/// Attribute reference "http://www.opengis.net/gml/3.2":id.
/// @brief The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.
   @xsd__ID                              id                             1;	///< Required attribute.
    END OF INHERITED FROM gml__AbstractGMLType */
/// Attribute srsName of type xs:anyURI.
   @xsd__anyURI*                         srsName                        0;	///< Optional attribute.
/// Attribute srsDimension of type xs:positiveInteger.
   @xsd__positiveInteger*                srsDimension                   0;	///< Optional attribute.
/// Attribute axisLabels of type "http://www.opengis.net/gml/3.2":NCNameList.
   @gml__NCNameList*                     axisLabels                     0;	///< Optional attribute.
/// Attribute uomLabels of type "http://www.opengis.net/gml/3.2":NCNameList.
   @gml__NCNameList*                     uomLabels                      0;	///< Optional attribute.
};

/// "http://www.opengis.net/gml/3.2":DirectPositionType is a complexType with simpleContent.
/// @brief Direct position instances hold the coordinates for a position within some coordinate reference system (CRS). Since direct positions, as data types, will often be included in larger objects (such as geometry elements) that have references to CRS, the srsName attribute will in general be missing, if this particular direct position is included in a larger element with such a reference to a CRS. In this case, the CRS is implicitly assumed to take on the value of the containing object's CRS. if no srsName attribute is given, the CRS shall be specified as part of the larger context this geometry element is part of, typically a geometric object like a point, curve, etc.
/// class gml__DirectPositionType operations:
/// - soap_new_gml__DirectPositionType(soap*) allocate
/// - soap_new_gml__DirectPositionType(soap*, int num) allocate array
/// - soap_new_req_gml__DirectPositionType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__DirectPositionType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__DirectPositionType(soap*, gml__DirectPositionType*) deserialize from a stream
/// - int soap_write_gml__DirectPositionType(soap, gml__DirectPositionType*) serialize to a stream
class gml__DirectPositionType : public xsd__anyType
{ public:
/// __item wraps '"http://www.opengis.net/gml/3.2":doubleList' simpleContent.
    gml__doubleList                      __item                        ;
/// Attribute srsName of type xs:anyURI.
   @xsd__anyURI*                         srsName                        0;	///< Optional attribute.
/// Attribute srsDimension of type xs:positiveInteger.
   @xsd__positiveInteger*                srsDimension                   0;	///< Optional attribute.
/// Attribute axisLabels of type "http://www.opengis.net/gml/3.2":NCNameList.
   @gml__NCNameList*                     axisLabels                     0;	///< Optional attribute.
/// Attribute uomLabels of type "http://www.opengis.net/gml/3.2":NCNameList.
   @gml__NCNameList*                     uomLabels                      0;	///< Optional attribute.
};

/// "http://www.opengis.net/gml/3.2":DirectPositionListType is a complexType with simpleContent.
/// @brief posList instances (and other instances with the content model specified by DirectPositionListType) hold the coordinates for a sequence of direct positions within the same coordinate reference system (CRS). if no srsName attribute is given, the CRS shall be specified as part of the larger context this geometry element is part of, typically a geometric object like a point, curve, etc. The optional attribute count specifies the number of direct positions in the list. If the attribute count is present then the attribute srsDimension shall be present, too. The number of entries in the list is equal to the product of the dimensionality of the coordinate reference system (i.e. it is a derived value of the coordinate reference system definition) and the number of direct positions.
/// class gml__DirectPositionListType operations:
/// - soap_new_gml__DirectPositionListType(soap*) allocate
/// - soap_new_gml__DirectPositionListType(soap*, int num) allocate array
/// - soap_new_req_gml__DirectPositionListType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__DirectPositionListType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__DirectPositionListType(soap*, gml__DirectPositionListType*) deserialize from a stream
/// - int soap_write_gml__DirectPositionListType(soap, gml__DirectPositionListType*) serialize to a stream
class gml__DirectPositionListType : public xsd__anyType
{ public:
/// __item wraps '"http://www.opengis.net/gml/3.2":doubleList' simpleContent.
    gml__doubleList                      __item                        ;
/// Attribute count of type xs:positiveInteger.
   @xsd__positiveInteger*                count                          0;	///< Optional attribute.
/// Attribute srsName of type xs:anyURI.
   @xsd__anyURI*                         srsName                        0;	///< Optional attribute.
/// Attribute srsDimension of type xs:positiveInteger.
   @xsd__positiveInteger*                srsDimension                   0;	///< Optional attribute.
/// Attribute axisLabels of type "http://www.opengis.net/gml/3.2":NCNameList.
   @gml__NCNameList*                     axisLabels                     0;	///< Optional attribute.
/// Attribute uomLabels of type "http://www.opengis.net/gml/3.2":NCNameList.
   @gml__NCNameList*                     uomLabels                      0;	///< Optional attribute.
};

/// "http://www.opengis.net/gml/3.2":DerivationUnitTermType is a complexType with complexContent extension of "http://www.opengis.net/gml/3.2":UnitOfMeasureType.
/// class gml__DerivationUnitTermType operations:
/// - soap_new_gml__DerivationUnitTermType(soap*) allocate
/// - soap_new_gml__DerivationUnitTermType(soap*, int num) allocate array
/// - soap_new_req_gml__DerivationUnitTermType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__DerivationUnitTermType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__DerivationUnitTermType(soap*, gml__DerivationUnitTermType*) deserialize from a stream
/// - int soap_write_gml__DerivationUnitTermType(soap, gml__DerivationUnitTermType*) serialize to a stream
class gml__DerivationUnitTermType : public gml__UnitOfMeasureType
{ public:
/*  INHERITED FROM gml__UnitOfMeasureType:
/// Attribute uom of type "http://www.opengis.net/gml/3.2":UomIdentifier.
   @gml__UomIdentifier                   uom                            1;	///< Required attribute.
    END OF INHERITED FROM gml__UnitOfMeasureType */
/// Attribute exponent of type xs:integer.
   @long*                                exponent                       0;	///< Optional attribute.
};

/// "http://www.opengis.net/gml/3.2":ConversionToPreferredUnitType is a complexType with complexContent extension of "http://www.opengis.net/gml/3.2":UnitOfMeasureType.
/// @brief The inherited attribute uom references the preferred unit that this conversion applies to. The conversion of a unit to the preferred unit for this physical quantity type is specified by an arithmetic conversion (scaling and/or offset). The content model extends gml:UnitOfMeasureType, which has a mandatory attribute uom which identifies the preferred unit for the physical quantity type that this conversion applies to. The conversion is specified by a choice of - gml:factor, which defines the scale factor, or - gml:formula, which defines a formula by which a value using the conventional unit of measure can be converted to obtain the corresponding value using the preferred unit of measure. The formula defines the parameters of a simple formula by which a value using the conventional unit of measure can be converted to the corresponding value using the preferred unit of measure. The formula element contains elements a, b, c and d, whose values use the XML Schema type double. These values are used in the formula y = (a + bx) / (c + dx), where x is a value using this unit, and y is the corresponding value using the base unit. The elements a and d are optional, and if values are not provided, those parameters are considered to be zero. If values are not provided for both a and d, the formula is equivalent to a fraction with numerator and denominator parameters.
/// class gml__ConversionToPreferredUnitType operations:
/// - soap_new_gml__ConversionToPreferredUnitType(soap*) allocate
/// - soap_new_gml__ConversionToPreferredUnitType(soap*, int num) allocate array
/// - soap_new_req_gml__ConversionToPreferredUnitType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__ConversionToPreferredUnitType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__ConversionToPreferredUnitType(soap*, gml__ConversionToPreferredUnitType*) deserialize from a stream
/// - int soap_write_gml__ConversionToPreferredUnitType(soap, gml__ConversionToPreferredUnitType*) serialize to a stream
class gml__ConversionToPreferredUnitType : public gml__UnitOfMeasureType
{ public:
/*  INHERITED FROM gml__UnitOfMeasureType:
/// Attribute uom of type "http://www.opengis.net/gml/3.2":UomIdentifier.
   @gml__UomIdentifier                   uom                            1;	///< Required attribute.
    END OF INHERITED FROM gml__UnitOfMeasureType */
/// CHOICE <xs:choice>
   $int                                  __union_ConversionToPreferredUnitType;	///< Union _gml__union_ConversionToPreferredUnitType selector: set to SOAP_UNION__gml__union_ConversionToPreferredUnitType_<fieldname>
/// Union for choice in type gml__ConversionToPreferredUnitType
    union _gml__union_ConversionToPreferredUnitType
    {
/// Element factor of type xs:double.
    double                               factor                         1;	///< Required element.
/// Element formula of type "http://www.opengis.net/gml/3.2":FormulaType.
    gml__FormulaType*                    formula                        1;	///< Required element.
    }                                    union_ConversionToPreferredUnitType;
//  END OF CHOICE
};

/// "http://www.opengis.net/gml/3.2":DefinitionBaseType is a complexType with complexContent restriction of "http://www.opengis.net/gml/3.2":AbstractGMLType.
/// class gml__DefinitionBaseType operations:
/// - soap_new_gml__DefinitionBaseType(soap*) allocate
/// - soap_new_gml__DefinitionBaseType(soap*, int num) allocate array
/// - soap_new_req_gml__DefinitionBaseType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__DefinitionBaseType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__DefinitionBaseType(soap*, gml__DefinitionBaseType*) deserialize from a stream
/// - int soap_write_gml__DefinitionBaseType(soap, gml__DefinitionBaseType*) serialize to a stream
class gml__DefinitionBaseType : public xsd__anyType
{ public:
/// Vector of gml__MetaDataPropertyType* element refs with length 0..unbounded
    std::vector<gml__MetaDataPropertyType*> metaDataProperty               0;
/// @brief The value of this property is a text description of the object. gml:description uses gml:StringOrRefType as its content model, so it may contain a simple text string content, or carry a reference to an external description. The use of gml:description to reference an external description has been deprecated and replaced by the gml:descriptionReference property.
/// Element reference "http://www.opengis.net/gml/3.2":description.
    gml__StringOrRefType*                description                    0;	///< Optional element.
/// @brief The value of this property is a remote text description of the object. The xlink:href attribute of the gml:descriptionReference property references the external description.
/// Element reference "http://www.opengis.net/gml/3.2":descriptionReference.
    gml__ReferenceType*                  descriptionReference           0;	///< Optional element.
/// @brief Often, a special identifier is assigned to an object by the maintaining authority with the intention that it is used in references to the object For such cases, the codeSpace shall be provided. That identifier is usually unique either globally or within an application domain. gml:identifier is a pre-defined property for such identifiers.
/// Element reference "http://www.opengis.net/gml/3.2":identifier.
    gml__CodeWithAuthorityType*          identifier                     1;	///< Required element.
/// @brief The gml:name property provides a label or identifier for the object, commonly a descriptive name. An object may have several names, typically assigned by different authorities. gml:name uses the gml:CodeType content model. The authority for a name is indicated by the value of its (optional) codeSpace attribute. The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace. In common usage there will be one name per authority, so a processing application may select the name from its preferred codeSpace.
/// Vector of gml__CodeType* element refs with length 0..unbounded
    std::vector<gml__CodeType*         > name                           0;
/// Attribute reference "http://www.opengis.net/gml/3.2":id.
/// @brief The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.
   @xsd__ID                              id                             1;	///< Required attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":id.
/// @brief The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.
   //jld @xsd__ID                              id                             1;	///< Required attribute.
};

/// "http://www.opengis.net/gml/3.2":DictionaryEntryType is a complexType with complexContent extension of "http://www.opengis.net/gml/3.2":AbstractMemberType.
/// class gml__DictionaryEntryType operations:
/// - soap_new_gml__DictionaryEntryType(soap*) allocate
/// - soap_new_gml__DictionaryEntryType(soap*, int num) allocate array
/// - soap_new_req_gml__DictionaryEntryType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__DictionaryEntryType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__DictionaryEntryType(soap*, gml__DictionaryEntryType*) deserialize from a stream
/// - int soap_write_gml__DictionaryEntryType(soap, gml__DictionaryEntryType*) serialize to a stream
class gml__DictionaryEntryType : public gml__AbstractMemberType
{ public:
/*  INHERITED FROM gml__AbstractMemberType:
/// Attribute owns of type xs:boolean.
   @bool                                 owns                           0 = false;	///< Default value="false".
    END OF INHERITED FROM gml__AbstractMemberType */
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gml__DictionaryEntryType_sequence
    {
/// @brief The basic gml:Definition element specifies a definition, which can be included in or referenced by a dictionary. The content model for a generic definition is a derivation from gml:AbstractGMLType. The gml:description property element shall hold the definition if this can be captured in a simple text string, or the gml:descriptionReference property element may carry a link to a description elsewhere. The gml:identifier element shall provide one identifier identifying this definition. The identifier shall be unique within the dictionaries using this definition. The gml:name elements shall provide zero or more terms and synonyms for which this is the definition. The gml:remarks element shall be used to hold additional textual information that is not conceptually part of the definition but is useful in understanding the definition.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="Definition"> with elements <UnitDefinition> <Dictionary> <CoordinateSystemAxis> <AbstractCoordinateSystem> <AbstractCRS> <AbstractDatum> <Ellipsoid> <PrimeMeridian> <AbstractCoordinateOperation> <OperationMethod> <AbstractGeneralOperationParameter> <TimeReferenceSystem> <DefinitionCollection> <DefinitionProxy>
   $int                                  __unionDefinition              0;	///< Union _gml__union_DictionaryEntryType selector: set to SOAP_UNION__gml__union_DictionaryEntryType_<fieldname>
/// Union for substitutionGroup="Definition"
    union _gml__union_DictionaryEntryType
    {
/// @brief The basic gml:Definition element specifies a definition, which can be included in or referenced by a dictionary. The content model for a generic definition is a derivation from gml:AbstractGMLType. The gml:description property element shall hold the definition if this can be captured in a simple text string, or the gml:descriptionReference property element may carry a link to a description elsewhere. The gml:identifier element shall provide one identifier identifying this definition. The identifier shall be unique within the dictionaries using this definition. The gml:name elements shall provide zero or more terms and synonyms for which this is the definition. The gml:remarks element shall be used to hold additional textual information that is not conceptually part of the definition but is useful in understanding the definition.
/// Element reference "http://www.opengis.net/gml/3.2":Definition.
    gml__DefinitionType*                 Definition                     1;	///< Required element.
/// @brief A gml:UnitDefinition is a general definition of a unit of measure. This generic element is used only for units for which no relationship with other units or units systems is known. The content model of gml:UnitDefinition adds three additional properties to gml:Definition, gml:quantityType, gml:quantityTypeReference and gml:catalogSymbol. The gml:catalogSymbol property optionally gives the short symbol used for this unit. This element is usually used when the relationship of this unit to other units or units systems is unknown.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="UnitDefinition"> with elements <BaseUnit> <DerivedUnit> <ConventionalUnit>
/// @brief A gml:UnitDefinition is a general definition of a unit of measure. This generic element is used only for units for which no relationship with other units or units systems is known. The content model of gml:UnitDefinition adds three additional properties to gml:Definition, gml:quantityType, gml:quantityTypeReference and gml:catalogSymbol. The gml:catalogSymbol property optionally gives the short symbol used for this unit. This element is usually used when the relationship of this unit to other units or units systems is unknown.
/// Element UnitDefinition of type "http://www.opengis.net/gml/3.2":UnitDefinitionType.
    gml__UnitDefinitionType*             UnitDefinition                 1;	///< Required element.
/// @brief A base unit is a unit of measure that cannot be derived by combination of other base units within a particular system of units. For example, in the SI system of units, the base units are metre, kilogram, second, Ampere, Kelvin, mole, and candela, for the physical quantity types length, mass, time interval, electric current, thermodynamic temperature, amount of substance and luminous intensity, respectively. gml:BaseUnit extends generic gml:UnitDefinition with the property gml:unitsSystem, which carries a reference to the units system to which this base unit is asserted to belong.
/// Element BaseUnit of type "http://www.opengis.net/gml/3.2":BaseUnitType.
    gml__BaseUnitType*                   BaseUnit                       1;	///< Required element.
/// @brief Derived units are defined by combination of other units. Derived units are used for quantities other than those corresponding to the base units, such as hertz (s-1) for frequency, Newton (kg.m/s2) for force. Derived units based directly on base units are usually preferred for quantities other than the fundamental quantities within a system. If a derived unit is not the preferred unit, the gml:ConventionalUnit element should be used instead. The gml:DerivedUnit extends gml:UnitDefinition with the property gml:derivationUnitTerms.
/// Element DerivedUnit of type "http://www.opengis.net/gml/3.2":DerivedUnitType.
    gml__DerivedUnitType*                DerivedUnit                    1;	///< Required element.
/// @brief Conventional units that are neither base units nor defined by direct combination of base units are used in many application domains. For example electronVolt for energy, feet and nautical miles for length. In most cases there is a known, usually linear, conversion to a preferred unit which is either a base unit or derived by direct combination of base units. The gml:ConventionalUnit extends gml:UnitDefinition with a property that describes a conversion to a preferred unit for this physical quantity. When the conversion is exact, the element gml:conversionToPreferredUnit should be used, or when the conversion is not exact the element gml:roughConversionToPreferredUnit is available. Both of these elements have the same content model. The gml:derivationUnitTerm property defined above is included to allow a user to optionally record how this unit may be derived from other ("more primitive") units.
/// Element ConventionalUnit of type "http://www.opengis.net/gml/3.2":ConventionalUnitType.
    gml__ConventionalUnitType*           ConventionalUnit               1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
/// @brief Sets of definitions may be collected into dictionaries or collections. A gml:Dictionary is a non-abstract collection of definitions. The gml:Dictionary content model adds a list of gml:dictionaryEntry properties that contain or reference gml:Definition objects. A database handle (gml:id attribute) is required, in order that this collection may be referred to. The standard gml:identifier, gml:description, gml:descriptionReference and gml:name properties are available to reference or contain more information about this dictionary. The gml:description and gml:descriptionReference property elements may be used for a description of this dictionary. The derived gml:name element may be used for the name(s) of this dictionary. for remote definiton references gml:dictionaryEntry shall be used. If a Definition object contained within a Dictionary uses the descriptionReference property to refer to a remote definition, then this enables the inclusion of a remote definition in a local dictionary, giving a handle and identifier in the context of the local dictionary.
/// Element Dictionary of type "http://www.opengis.net/gml/3.2":DictionaryType.
    gml__DictionaryType*                 Dictionary                     1;	///< Required element.
/// @brief gml:CoordinateSystemAxis is a definition of a coordinate system axis.
/// Element CoordinateSystemAxis of type "http://www.opengis.net/gml/3.2":CoordinateSystemAxisType.
    gml__CoordinateSystemAxisType*       CoordinateSystemAxis           1;	///< Required element.
/// @brief gml:AbstractCoordinateSystem is a coordinate system (CS) is the non-repeating sequence of coordinate system axes that spans a given coordinate space. A CS is derived from a set of mathematical rules for specifying how coordinates in a given space are to be assigned to points. The coordinate values in a coordinate tuple shall be recorded in the order in which the coordinate system axes associations are recorded. This abstract complex type shall not be used, extended, or restricted, in an Application Schema, to define a concrete subtype with a meaning equivalent to a concrete subtype specified in this document.
/// Abstract element AbstractCoordinateSystem of type "http://www.opengis.net/gml/3.2":AbstractCoordinateSystemType.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractCoordinateSystem"> with elements <EllipsoidalCS> <CartesianCS> <VerticalCS> <TimeCS> <LinearCS> <UserDefinedCS> <SphericalCS> <PolarCS> <CylindricalCS> <AffineCS> <TemporalCS> <ObliqueCartesianCS>
/// @brief gml:EllipsoidalCS is a two- or three-dimensional coordinate system in which position is specified by geodetic latitude, geodetic longitude, and (in the three-dimensional case) ellipsoidal height. An EllipsoidalCS shall have two or three gml:axis property elements; the number of associations shall equal the dimension of the CS.
/// Element EllipsoidalCS of type "http://www.opengis.net/gml/3.2":EllipsoidalCSType.
    gml__EllipsoidalCSType*              EllipsoidalCS                  1;	///< Required element.
/// @brief gml:CartesianCS is a 1-, 2-, or 3-dimensional coordinate system. In the 1-dimensional case, it contains a single straight coordinate axis. In the 2- and 3-dimensional cases gives the position of points relative to orthogonal straight axes. In the multi-dimensional case, all axes shall have the same length unit of measure. A CartesianCS shall have one, two, or three gml:axis property elements.
/// Element CartesianCS of type "http://www.opengis.net/gml/3.2":CartesianCSType.
    gml__CartesianCSType*                CartesianCS                    1;	///< Required element.
/// @brief gml:VerticalCS is a one-dimensional coordinate system used to record the heights or depths of points. Such a coordinate system is usually dependent on the Earth's gravity field, perhaps loosely as when atmospheric pressure is the basis for the vertical coordinate system axis. A VerticalCS shall have one gml:axis property element.
/// Element VerticalCS of type "http://www.opengis.net/gml/3.2":VerticalCSType.
    gml__VerticalCSType*                 VerticalCS                     1;	///< Required element.
/// @brief gml:TimeCS is a one-dimensional coordinate system containing a time axis, used to describe the temporal position of a point in the specified time units from a specified time origin. A TimeCS shall have one gml:axis property element.
/// Element TimeCS of type "http://www.opengis.net/gml/3.2":TimeCSType.
    gml__TimeCSType*                     TimeCS                         1;	///< Required element.
/// @brief gml:LinearCS is a one-dimensional coordinate system that consists of the points that lie on the single axis described. The associated coordinate is the distance with or without offset from the specified datum to the point along the axis. A LinearCS shall have one gml:axis property element.
/// Element LinearCS of type "http://www.opengis.net/gml/3.2":LinearCSType.
    gml__LinearCSType*                   LinearCS                       1;	///< Required element.
/// @brief gml:UserDefinedCS is a two- or three-dimensional coordinate system that consists of any combination of coordinate axes not covered by any other coordinate system type. A UserDefinedCS shall have two or three gml:axis property elements; the number of property elements shall equal the dimension of the CS.
/// Element UserDefinedCS of type "http://www.opengis.net/gml/3.2":UserDefinedCSType.
    gml__UserDefinedCSType*              UserDefinedCS                  1;	///< Required element.
/// @brief gml:SphericalCS is a three-dimensional coordinate system with one distance measured from the origin and two angular coordinates. A SphericalCS shall have three gml:axis property elements.
/// Element SphericalCS of type "http://www.opengis.net/gml/3.2":SphericalCSType.
    gml__SphericalCSType*                SphericalCS                    1;	///< Required element.
/// @brief gml:PolarCS ia s two-dimensional coordinate system in which position is specified by the distance from the origin and the angle between the line from the origin to a point and a reference direction. A PolarCS shall have two gml:axis property elements.
/// Element PolarCS of type "http://www.opengis.net/gml/3.2":PolarCSType.
    gml__PolarCSType*                    PolarCS                        1;	///< Required element.
/// @brief gml:CylindricalCS is a three-dimensional coordinate system consisting of a polar coordinate system extended by a straight coordinate axis perpendicular to the plane spanned by the polar coordinate system. A CylindricalCS shall have three gml:axis property elements.
/// Element CylindricalCS of type "http://www.opengis.net/gml/3.2":CylindricalCSType.
    gml__CylindricalCSType*              CylindricalCS                  1;	///< Required element.
/// @brief gml:AffineCS is a two- or three-dimensional coordinate system with straight axes that are not necessarily orthogonal. An AffineCS shall have two or three gml:axis property elements; the number of property elements shall equal the dimension of the CS.
/// Element AffineCS of type "http://www.opengis.net/gml/3.2":AffineCSType.
    gml__AffineCSType*                   AffineCS                       1;	///< Required element.
/// Element TemporalCS of type "http://www.opengis.net/gml/3.2":TemporalCSType.
    gml__TemporalCSType*                 TemporalCS                     1;	///< Required element.
/// Element ObliqueCartesianCS of type "http://www.opengis.net/gml/3.2":ObliqueCartesianCSType.
    gml__ObliqueCartesianCSType*         ObliqueCartesianCS             1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
/// @brief gml:AbstractCRS specifies a coordinate reference system which is usually single but may be compound. This abstract complex type shall not be used, extended, or restricted, in a GML Application Schema, to define a concrete subtype with a meaning equivalent to a concrete subtype specified in this document.
/// Abstract element AbstractCRS of type "http://www.opengis.net/gml/3.2":AbstractCRSType.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractCRS"> with elements <AbstractSingleCRS> <CompoundCRS>
/// @brief gml:AbstractSingleCRS implements a coordinate reference system consisting of one coordinate system and one datum (as opposed to a Compound CRS).
/// Abstract element AbstractSingleCRS of type "http://www.opengis.net/gml/3.2":AbstractCRSType.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractSingleCRS"> with elements <AbstractGeneralDerivedCRS> <GeodeticCRS> <VerticalCRS> <EngineeringCRS> <ImageCRS> <TemporalCRS> <GeographicCRS> <GeocentricCRS>
/// @brief gml:AbstractGeneralDerivedCRS is a coordinate reference system that is defined by its coordinate conversion from another coordinate reference system. This abstract complex type shall not be used, extended, or restricted, in a GML Application Schema, to define a concrete subtype with a meaning equivalent to a concrete subtype specified in this document.
/// Abstract element AbstractGeneralDerivedCRS of type "http://www.opengis.net/gml/3.2":AbstractGeneralDerivedCRSType.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractGeneralDerivedCRS"> with elements <ProjectedCRS> <DerivedCRS>
/// @brief gml:ProjectedCRS is a 2D coordinate reference system used to approximate the shape of the earth on a planar surface, but in such a way that the distortion that is inherent to the approximation is carefully controlled and known. Distortion correction is commonly applied to calculated bearings and distances to produce values that are a close match to actual field values.
/// Element ProjectedCRS of type "http://www.opengis.net/gml/3.2":ProjectedCRSType.
    gml__ProjectedCRSType*               ProjectedCRS                   1;	///< Required element.
/// @brief gml:DerivedCRS is a single coordinate reference system that is defined by its coordinate conversion from another single coordinate reference system known as the base CRS. The base CRS can be a projected coordinate reference system, if this DerivedCRS is used for a georectified grid coverage as described in ISO 19123, Clause 8.
/// Element DerivedCRS of type "http://www.opengis.net/gml/3.2":DerivedCRSType.
    gml__DerivedCRSType*                 DerivedCRS                     1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
/// Element GeodeticCRS of type "http://www.opengis.net/gml/3.2":GeodeticCRSType.
    gml__GeodeticCRSType*                GeodeticCRS                    1;	///< Required element.
/// @brief gml:VerticalCRS is a 1D coordinate reference system used for recording heights or depths. Vertical CRSs make use of the direction of gravity to define the concept of height or depth, but the relationship with gravity may not be straightforward. By implication, ellipsoidal heights (h) cannot be captured in a vertical coordinate reference system. Ellipsoidal heights cannot exist independently, but only as an inseparable part of a 3D coordinate tuple defined in a geographic 3D coordinate reference system.
/// Element VerticalCRS of type "http://www.opengis.net/gml/3.2":VerticalCRSType.
    gml__VerticalCRSType*                VerticalCRS                    1;	///< Required element.
/// @brief gml:EngineeringCRS is a contextually local coordinate reference system which can be divided into two broad categories: - earth-fixed systems applied to engineering activities on or near the surface of the earth; - CRSs on moving platforms such as road vehicles, vessels, aircraft, or spacecraft, see ISO 19111 8.3.
/// Element EngineeringCRS of type "http://www.opengis.net/gml/3.2":EngineeringCRSType.
    gml__EngineeringCRSType*             EngineeringCRS                 1;	///< Required element.
/// @brief gml:ImageCRS is an engineering coordinate reference system applied to locations in images. Image coordinate reference systems are treated as a separate sub-type because the definition of the associated image datum contains two attributes not relevant to other engineering datums.
/// Element ImageCRS of type "http://www.opengis.net/gml/3.2":ImageCRSType.
    gml__ImageCRSType*                   ImageCRS                       1;	///< Required element.
/// @brief gml:TemporalCRS is a 1D coordinate reference system used for the recording of time.
/// Element TemporalCRS of type "http://www.opengis.net/gml/3.2":TemporalCRSType.
    gml__TemporalCRSType*                TemporalCRS                    1;	///< Required element.
/// Element GeographicCRS of type "http://www.opengis.net/gml/3.2":GeographicCRSType.
    gml__GeographicCRSType*              GeographicCRS                  1;	///< Required element.
/// Element GeocentricCRS of type "http://www.opengis.net/gml/3.2":GeocentricCRSType.
    gml__GeocentricCRSType*              GeocentricCRS                  1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
/// @brief gml:CompundCRS is a coordinate reference system describing the position of points through two or more independent coordinate reference systems. It is associated with a non-repeating sequence of two or more instances of SingleCRS.
/// Element CompoundCRS of type "http://www.opengis.net/gml/3.2":CompoundCRSType.
    gml__CompoundCRSType*                CompoundCRS                    1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
/// @brief A gml:AbstractDatum specifies the relationship of a coordinate system to the earth, thus creating a coordinate reference system. A datum uses a parameter or set of parameters that determine the location of the origin of the coordinate reference system. Each datum subtype may be associated with only specific types of coordinate systems. This abstract complex type shall not be used, extended, or restricted, in a GML Application Schema, to define a concrete subtype with a meaning equivalent to a concrete subtype specified in this document.
/// Abstract element AbstractDatum of type "http://www.opengis.net/gml/3.2":AbstractDatumType.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractDatum"> with elements <GeodeticDatum> <EngineeringDatum> <ImageDatum> <VerticalDatum> <TemporalDatum>
/// @brief gml:GeodeticDatum is a geodetic datum defines the precise location and orientation in 3-dimensional space of a defined ellipsoid (or sphere), or of a Cartesian coordinate system centered in this ellipsoid (or sphere).
/// Element GeodeticDatum of type "http://www.opengis.net/gml/3.2":GeodeticDatumType.
    gml__GeodeticDatumType*              GeodeticDatum                  1;	///< Required element.
/// @brief gml:EngineeringDatum defines the origin of an engineering coordinate reference system, and is used in a region around that origin. This origin may be fixed with respect to the earth (such as a defined point at a construction site), or be a defined point on a moving vehicle (such as on a ship or satellite).
/// Element EngineeringDatum of type "http://www.opengis.net/gml/3.2":EngineeringDatumType.
    gml__EngineeringDatumType*           EngineeringDatum               1;	///< Required element.
/// @brief gml:ImageDatum defines the origin of an image coordinate reference system, and is used in a local context only. For an image datum, the anchor definition is usually either the centre of the image or the corner of the image. For more information, see ISO 19111 B.3.5.
/// Element ImageDatum of type "http://www.opengis.net/gml/3.2":ImageDatumType.
    gml__ImageDatumType*                 ImageDatum                     1;	///< Required element.
/// @brief gml:VerticalDatum is a textual description and/or a set of parameters identifying a particular reference level surface used as a zero-height surface, including its position with respect to the Earth for any of the height types recognized by this International Standard.
/// Element VerticalDatum of type "http://www.opengis.net/gml/3.2":VerticalDatumType.
    gml__VerticalDatumType*              VerticalDatum                  1;	///< Required element.
/// @brief A gml:TemporalDatum defines the origin of a Temporal Reference System. This type omits the "anchorDefinition" and "realizationEpoch" elements and adds the "origin" element with the dateTime type.
/// Element TemporalDatum of type "http://www.opengis.net/gml/3.2":TemporalDatumType.
    gml__TemporalDatumType*              TemporalDatum                  1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
/// @brief A gml:Ellipsoid is a geometric figure that may be used to describe the approximate shape of the earth. In mathematical terms, it is a surface formed by the rotation of an ellipse about its minor axis.
/// Element Ellipsoid of type "http://www.opengis.net/gml/3.2":EllipsoidType.
    gml__EllipsoidType*                  Ellipsoid                      1;	///< Required element.
/// @brief A gml:PrimeMeridian defines the origin from which longitude values are determined. The default value for the prime meridian gml:identifier value is "Greenwich".
/// Element PrimeMeridian of type "http://www.opengis.net/gml/3.2":PrimeMeridianType.
    gml__PrimeMeridianType*              PrimeMeridian                  1;	///< Required element.
/// @brief gml:AbstractCoordinateOperation is a mathematical operation on coordinates that transforms or converts coordinates to another coordinate reference system. Many but not all coordinate operations (from CRS A to CRS B) also uniquely define the inverse operation (from CRS B to CRS A). In some cases, the operation method algorithm for the inverse operation is the same as for the forward algorithm, but the signs of some operation parameter values shall be reversed. In other cases, different algorithms are required for the forward and inverse operations, but the same operation parameter values are used. If (some) entirely different parameter values are needed, a different coordinate operation shall be defined. The optional coordinateOperationAccuracy property elements provide estimates of the impact of this coordinate operation on point position accuracy.
/// Abstract element AbstractCoordinateOperation of type "http://www.opengis.net/gml/3.2":AbstractCoordinateOperationType.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractCoordinateOperation"> with elements <AbstractSingleOperation> <ConcatenatedOperation>
/// @brief gml:AbstractSingleOperation is a single (not concatenated) coordinate operation.
/// Abstract element AbstractSingleOperation of type "http://www.opengis.net/gml/3.2":AbstractCoordinateOperationType.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractSingleOperation"> with elements <PassThroughOperation> <AbstractOperation>
/// @brief gml:PassThroughOperation is a pass-through operation specifies that a subset of a coordinate tuple is subject to a specific coordinate operation. The modifiedCoordinate property elements are an ordered sequence of positive integers defining the positions in a coordinate tuple of the coordinates affected by this pass-through operation. The AggregationAttributeGroup should be used to specify that the modifiedCoordinate elements are ordered.
/// Element PassThroughOperation of type "http://www.opengis.net/gml/3.2":PassThroughOperationType.
    gml__PassThroughOperationType*       PassThroughOperation           1;	///< Required element.
/// Abstract element AbstractOperation of type "http://www.opengis.net/gml/3.2":AbstractCoordinateOperationType.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractOperation"> with elements <AbstractGeneralConversion> <AbstractGeneralTransformation>
/// @brief gm:AbstractGeneralConversion is an abstract operation on coordinates that does not include any change of datum. The best-known example of a coordinate conversion is a map projection. The parameters describing coordinate conversions are defined rather than empirically derived. Note that some conversions have no parameters. The operationVersion, sourceCRS, and targetCRS elements are omitted in a coordinate conversion. This abstract complex type is expected to be extended for well-known operation methods with many Conversion instances, in GML Application Schemas that define operation-method-specialized element names and contents. This conversion uses an operation method, usually with associated parameter values. However, operation methods and parameter values are directly associated with concrete subtypes, not with this abstract type. All concrete types derived from this type shall extend this type to include a "usesMethod" element that references the "OperationMethod" element. Similarly, all concrete types derived from this type shall extend this type to include zero or more elements each named "uses...Value" that each use the type of an element substitutable for the "AbstractGeneralParameterValue" element.
/// Abstract element AbstractGeneralConversion of type "http://www.opengis.net/gml/3.2":AbstractGeneralConversionType.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractGeneralConversion"> with elements <Conversion>
/// @brief gml:Conversion is a concrete operation on coordinates that does not include any change of Datum. The best-known example of a coordinate conversion is a map projection. The parameters describing coordinate conversions are defined rather than empirically derived. Note that some conversions have no parameters. This concrete complex type can be used without using a GML Application Schema that defines operation-method-specialized element names and contents, especially for methods with only one Conversion instance. The usesValue property elements are an unordered list of composition associations to the set of parameter values used by this conversion operation.
/// Element Conversion of type "http://www.opengis.net/gml/3.2":ConversionType.
    gml__ConversionType*                 Conversion                     1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
/// @brief gml:AbstractGeneralTransformation is an abstract operation on coordinates that usually includes a change of Datum. The parameters of a coordinate transformation are empirically derived from data containing the coordinates of a series of points in both coordinate reference systems. This computational process is usually "over-determined", allowing derivation of error (or accuracy) estimates for the transformation. Also, the stochastic nature of the parameters may result in multiple (different) versions of the same coordinate transformation. The operationVersion, sourceCRS, and targetCRS proeprty elements are mandatory in a coordinate transformation. This abstract complex type is expected to be extended for well-known operation methods with many Transformation instances, in Application Schemas that define operation-method-specialized value element names and contents. This transformation uses an operation method with associated parameter values. However, operation methods and parameter values are directly associated with concrete subtypes, not with this abstract type. All concrete types derived from this type shall extend this type to include a "usesMethod" element that references one "OperationMethod" element. Similarly, all concrete types derived from this type shall extend this type to include one or more elements each named "uses...Value" that each use the type of an element substitutable for the "AbstractGeneralParameterValue" element.
/// Abstract element AbstractGeneralTransformation of type "http://www.opengis.net/gml/3.2":AbstractGeneralTransformationType.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractGeneralTransformation"> with elements <Transformation>
/// @brief gml:Transformation is a concrete object element derived from gml:GeneralTransformation (13.6.2.13). This concrete object can be used for all operation methods, without using a GML Application Schema that defines operation-method-specialized element names and contents, especially for methods with only one Transformation instance. The parameterValue elements are an unordered list of composition associations to the set of parameter values used by this conversion operation.
/// Element Transformation of type "http://www.opengis.net/gml/3.2":TransformationType.
    gml__TransformationType*             Transformation                 1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
//  END OF CHOICE OF SUBSTITUTIONS
//  END OF CHOICE OF SUBSTITUTIONS
/// Element ConcatenatedOperation of type "http://www.opengis.net/gml/3.2":ConcatenatedOperationType.
    gml__ConcatenatedOperationType*      ConcatenatedOperation          1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
/// @brief gml:OperationMethod is a method (algorithm or procedure) used to perform a coordinate operation. Most operation methods use a number of operation parameters, although some coordinate conversions use none. Each coordinate operation using the method assigns values to these parameters. The parameter elements are an unordered list of associations to the set of operation parameters and parameter groups used by this operation method.
/// Element OperationMethod of type "http://www.opengis.net/gml/3.2":OperationMethodType.
    gml__OperationMethodType*            OperationMethod                1;	///< Required element.
/// @brief gml:GeneralOperationParameter is the abstract definition of a parameter or group of parameters used by an operation method.
/// Abstract element AbstractGeneralOperationParameter of type "http://www.opengis.net/gml/3.2":AbstractGeneralOperationParameterType.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractGeneralOperationParameter"> with elements <OperationParameter> <OperationParameterGroup>
/// @brief gml:OperationParameter is the definition of a parameter used by an operation method. Most parameter values are numeric, but other types of parameter values are possible. This complex type is expected to be used or extended for all operation methods, without defining operation-method-specialized element names.
/// Element OperationParameter of type "http://www.opengis.net/gml/3.2":OperationParameterType.
    gml__OperationParameterType*         OperationParameter             1;	///< Required element.
/// @brief gml:OperationParameterGroup is the definition of a group of parameters used by an operation method. This complex type is expected to be used or extended for all applicable operation methods, without defining operation-method-specialized element names. The generalOperationParameter elements are an unordered list of associations to the set of operation parameters that are members of this group.
/// Element OperationParameterGroup of type "http://www.opengis.net/gml/3.2":OperationParameterGroupType.
    gml__OperationParameterGroupType*    OperationParameterGroup        1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
/// @brief A reference system is characterized in terms of its domain of validity: the spatial and temporal extent over which it is applicable. The basic GML element for temporal reference systems is gml:TimeReferenceSystem. Its content model extends gml:DefinitionType with one additional property, gml:domainOfValidity.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="TimeReferenceSystem"> with elements <TimeCoordinateSystem> <TimeCalendar> <TimeClock> <TimeOrdinalReferenceSystem>
/// @brief A reference system is characterized in terms of its domain of validity: the spatial and temporal extent over which it is applicable. The basic GML element for temporal reference systems is gml:TimeReferenceSystem. Its content model extends gml:DefinitionType with one additional property, gml:domainOfValidity.
/// Element TimeReferenceSystem of type "http://www.opengis.net/gml/3.2":TimeReferenceSystemType.
    gml__TimeReferenceSystemType*        TimeReferenceSystem            1;	///< Required element.
/// @brief A temporal coordinate system shall be based on a continuous interval scale defined in terms of a single time interval. The differences to ISO 19108 TM_CoordinateSystem are: - the origin is specified either using the property gml:originPosition whose value is a direct time position, or using the property gml:origin whose model is gml:TimeInstantPropertyType; this permits more flexibility in representation and also supports referring to a value fixed elsewhere; - the interval uses gml:TimeIntervalLengthType.
/// Element TimeCoordinateSystem of type "http://www.opengis.net/gml/3.2":TimeCoordinateSystemType.
    gml__TimeCoordinateSystemType*       TimeCoordinateSystem           1;	///< Required element.
/// @brief A calendar is a discrete temporal reference system that provides a basis for defining temporal position to a resolution of one day. gml:TimeCalendar adds one property to those inherited from gml:TimeReferenceSystem. A gml:referenceFrame provides a link to a gml:TimeCalendarEra that it uses. A gml:TimeCalendar may reference more than one calendar era. The referenceFrame element follows the standard GML property model, allowing the association to be instantiated either using an inline description using the gml:TimeCalendarEra element, or a link to a gml:TimeCalendarEra which is explicit elsewhere.
/// Element TimeCalendar of type "http://www.opengis.net/gml/3.2":TimeCalendarType.
    gml__TimeCalendarType*               TimeCalendar                   1;	///< Required element.
/// @brief A clock provides a basis for defining temporal position within a day. A clock shall be used with a calendar in order to provide a complete description of a temporal position within a specific day. gml:TimeClock adds the following properties to those inherited from gml:TimeReferenceSystemType: - gml:referenceEvent is the name or description of an event, such as solar noon or sunrise, which fixes the position of the base scale of the clock. - gml:referenceTime specifies the time of day associated with the reference event expressed as a time of day in the given clock. The reference time is usually the origin of the clock scale. - gml:utcReference specifies the 24 hour local or UTC time that corresponds to the reference time. - gml:dateBasis contains or references the calendars that use this clock.
/// Element TimeClock of type "http://www.opengis.net/gml/3.2":TimeClockType.
    gml__TimeClockType*                  TimeClock                      1;	///< Required element.
/// @brief In some applications of geographic information such as geology and archaeology relative position in time is known more precisely than absolute time or duration. The order of events in time can be well established, but the magnitude of the intervals between them cannot be accurately determined; in such cases, the use of an ordinal temporal reference system is appropriate. An ordinal temporal reference system is composed of a sequence of named coterminous eras, which may in turn be composed of sequences of member eras at a finer scale, giving the whole a hierarchical structure of eras of verying resolution. An ordinal temporal reference system whose component eras are not further subdivided is effectively a temporal topological complex constrained to be a linear graph. An ordinal temporal reference system some or all of whose component eras are subdivided is effectively a temporal topological complex with the constraint that parallel branches may only be constructed in pairs where one is a single temporal ordinal era and the other is a sequence of temporal ordinal eras that are called "members" of the "group". This constraint means that within a single temporal ordinal reference system, the relative position of all temporal ordinal eras is unambiguous. The positions of the beginning and end of a given era may calibrate the relative time scale. gml:TimeOrdinalReferenceSystem adds one or more gml:component properties to the generic temporal reference system model.
/// Element TimeOrdinalReferenceSystem of type "http://www.opengis.net/gml/3.2":TimeOrdinalReferenceSystemType.
    gml__TimeOrdinalReferenceSystemType*  TimeOrdinalReferenceSystem     1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
/// Element DefinitionCollection of type "http://www.opengis.net/gml/3.2":DictionaryType.
    gml__DictionaryType*                 DefinitionCollection           1;	///< Required element.
/// Element DefinitionProxy of type "http://www.opengis.net/gml/3.2":DefinitionProxyType.
    gml__DefinitionProxyType*            DefinitionProxy                1;	///< Required element.
    }                                    __union_DictionaryEntryType   ;
//  END OF CHOICE OF SUBSTITUTIONS
    }>                                   __DictionaryEntryType_sequence 0;
//  END OF SEQUENCE
/// Attribute nilReason of type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         remoteSchema                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.opengis.net/gml/3.2":CodeType is a complexType with simpleContent.
/// @brief gml:CodeType is a generalized type to be used for a term, keyword or name. It adds a XML attribute codeSpace to a term, where the value of the codeSpace attribute (if present) shall indicate a dictionary, thesaurus, classification scheme, authority, or pattern for the term.
/// class gml__CodeType operations:
/// - soap_new_gml__CodeType(soap*) allocate
/// - soap_new_gml__CodeType(soap*, int num) allocate array
/// - soap_new_req_gml__CodeType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__CodeType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__CodeType(soap*, gml__CodeType*) deserialize from a stream
/// - int soap_write_gml__CodeType(soap, gml__CodeType*) serialize to a stream
class gml__CodeType : public xsd__anyType
{ public:
/// __item wraps 'xs:string' simpleContent.
    std::string                          __item                        ;
/// Attribute codeSpace of type xs:anyURI.
   @xsd__anyURI*                         codeSpace                      0;	///< Optional attribute.
};

/// "http://www.opengis.net/gml/3.2":MeasureType is a complexType with simpleContent.
/// @brief gml:MeasureType supports recording an amount encoded as a value of XML Schema double, together with a units of measure indicated by an attribute uom, short for "units Of measure". The value of the uom attribute identifies a reference system for the amount, usually a ratio or interval scale.
/// class gml__MeasureType operations:
/// - soap_new_gml__MeasureType(soap*) allocate
/// - soap_new_gml__MeasureType(soap*, int num) allocate array
/// - soap_new_req_gml__MeasureType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__MeasureType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__MeasureType(soap*, gml__MeasureType*) deserialize from a stream
/// - int soap_write_gml__MeasureType(soap, gml__MeasureType*) serialize to a stream
class gml__MeasureType : public xsd__anyType
{ public:
/// __item wraps 'xs:double' simpleContent.
    double                               __item                        ;
/// Attribute uom of type "http://www.opengis.net/gml/3.2":UomIdentifier.
   @gml__UomIdentifier                   uom                            1;	///< Required attribute.
};

/// "http://www.opengis.net/gml/3.2":CoordinatesType is a complexType with simpleContent.
/// @brief This type is deprecated for tuples with ordinate values that are numbers. CoordinatesType is a text string, intended to be used to record an array of tuples or coordinates. While it is not possible to enforce the internal structure of the string through schema validation, some optional attributes have been provided in previous versions of GML to support a description of the internal structure. These attributes are deprecated. The attributes were intended to be used as follows: Decimal symbol used for a decimal point (default="." a stop or period) cs symbol used to separate components within a tuple or coordinate string (default="," a comma) ts symbol used to separate tuples or coordinate strings (default=" " a space) Since it is based on the XML Schema string type, CoordinatesType may be used in the construction of tables of tuples or arrays of tuples, including ones that contain mixed text and numeric values.
/// class gml__CoordinatesType operations:
/// - soap_new_gml__CoordinatesType(soap*) allocate
/// - soap_new_gml__CoordinatesType(soap*, int num) allocate array
/// - soap_new_req_gml__CoordinatesType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__CoordinatesType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__CoordinatesType(soap*, gml__CoordinatesType*) deserialize from a stream
/// - int soap_write_gml__CoordinatesType(soap, gml__CoordinatesType*) serialize to a stream
class gml__CoordinatesType : public xsd__anyType
{ public:
/// __item wraps 'xs:string' simpleContent.
    std::string                          __item                        ;
/// Attribute decimal of type xs:string.
   @std::string                          decimal                        0 = ".";	///< Default value=".".
/// Attribute cs of type xs:string.
   @std::string                          cs                             0 = ",";	///< Default value=",".
/// Attribute ts of type xs:string.
   @std::string                          ts                             0 = " ";	///< Default value=" ".
};

/// "http://www.opengis.net/gml/3.2":CodeListType is a complexType with simpleContent.
/// @brief gml:CodeListType provides for lists of terms. The values in an instance element shall all be valid according to the rules of the dictionary, classification scheme, or authority identified by the value of its codeSpace attribute.
/// class gml__CodeListType operations:
/// - soap_new_gml__CodeListType(soap*) allocate
/// - soap_new_gml__CodeListType(soap*, int num) allocate array
/// - soap_new_req_gml__CodeListType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__CodeListType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__CodeListType(soap*, gml__CodeListType*) deserialize from a stream
/// - int soap_write_gml__CodeListType(soap, gml__CodeListType*) serialize to a stream
class gml__CodeListType : public xsd__anyType
{ public:
/// __item wraps '"http://www.opengis.net/gml/3.2":NameList' simpleContent.
    gml__NameList                        __item                        ;
/// Attribute codeSpace of type xs:anyURI.
   @xsd__anyURI*                         codeSpace                      0;	///< Optional attribute.
};

/// "http://www.opengis.net/gml/3.2":CodeOrNilReasonListType is a complexType with simpleContent.
/// @brief gml:CodeOrNilReasonListType provides for lists of terms. The values in an instance element shall all be valid according to the rules of the dictionary, classification scheme, or authority identified by the value of its codeSpace attribute. An instance element may also include embedded values from NilReasonType. It is intended to be used in situations where a term or classification is expected, but the value may be absent for some reason.
/// class gml__CodeOrNilReasonListType operations:
/// - soap_new_gml__CodeOrNilReasonListType(soap*) allocate
/// - soap_new_gml__CodeOrNilReasonListType(soap*, int num) allocate array
/// - soap_new_req_gml__CodeOrNilReasonListType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__CodeOrNilReasonListType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__CodeOrNilReasonListType(soap*, gml__CodeOrNilReasonListType*) deserialize from a stream
/// - int soap_write_gml__CodeOrNilReasonListType(soap, gml__CodeOrNilReasonListType*) serialize to a stream
class gml__CodeOrNilReasonListType : public xsd__anyType
{ public:
/// __item wraps '"http://www.opengis.net/gml/3.2":NameOrNilReasonList' simpleContent.
    gml__NameOrNilReasonList             __item                        ;
/// Attribute codeSpace of type xs:anyURI.
   @xsd__anyURI*                         codeSpace                      0;	///< Optional attribute.
};

/// "http://www.opengis.net/gml/3.2":MeasureListType is a complexType with simpleContent.
/// @brief gml:MeasureListType provides for a list of quantities.
/// class gml__MeasureListType operations:
/// - soap_new_gml__MeasureListType(soap*) allocate
/// - soap_new_gml__MeasureListType(soap*, int num) allocate array
/// - soap_new_req_gml__MeasureListType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__MeasureListType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__MeasureListType(soap*, gml__MeasureListType*) deserialize from a stream
/// - int soap_write_gml__MeasureListType(soap, gml__MeasureListType*) serialize to a stream
class gml__MeasureListType : public xsd__anyType
{ public:
/// __item wraps '"http://www.opengis.net/gml/3.2":doubleList' simpleContent.
    gml__doubleList                      __item                        ;
/// Attribute uom of type "http://www.opengis.net/gml/3.2":UomIdentifier.
   @gml__UomIdentifier                   uom                            1;	///< Required attribute.
};

/// "http://www.opengis.net/gml/3.2":MeasureOrNilReasonListType is a complexType with simpleContent.
/// @brief gml:MeasureOrNilReasonListType provides for a list of quantities. An instance element may also include embedded values from NilReasonType. It is intended to be used in situations where a value is expected, but the value may be absent for some reason.
/// class gml__MeasureOrNilReasonListType operations:
/// - soap_new_gml__MeasureOrNilReasonListType(soap*) allocate
/// - soap_new_gml__MeasureOrNilReasonListType(soap*, int num) allocate array
/// - soap_new_req_gml__MeasureOrNilReasonListType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__MeasureOrNilReasonListType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__MeasureOrNilReasonListType(soap*, gml__MeasureOrNilReasonListType*) deserialize from a stream
/// - int soap_write_gml__MeasureOrNilReasonListType(soap, gml__MeasureOrNilReasonListType*) serialize to a stream
class gml__MeasureOrNilReasonListType : public xsd__anyType
{ public:
/// __item wraps '"http://www.opengis.net/gml/3.2":doubleOrNilReasonList' simpleContent.
    gml__doubleOrNilReasonList           __item                        ;
/// Attribute uom of type "http://www.opengis.net/gml/3.2":UomIdentifier.
   @gml__UomIdentifier                   uom                            1;	///< Required attribute.
};

/// "http://www.opengis.net/gml/3.2":AbstractFeatureType is an abstract complexType with complexContent extension of "http://www.opengis.net/gml/3.2":AbstractGMLType.
/// @brief The basic feature model is given by the gml:AbstractFeatureType. The content model for gml:AbstractFeatureType adds two specific properties suitable for geographic features to the content model defined in gml:AbstractGMLType. The value of the gml:boundedBy property describes an envelope that encloses the entire feature instance, and is primarily useful for supporting rapid searching for features that occur in a particular location. The value of the gml:location property describes the extent, position or relative location of the feature.
/// class gml__AbstractFeatureType operations:
/// - soap_new_gml__AbstractFeatureType(soap*) allocate
/// - soap_new_gml__AbstractFeatureType(soap*, int num) allocate array
/// - soap_new_req_gml__AbstractFeatureType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__AbstractFeatureType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__AbstractFeatureType(soap*, gml__AbstractFeatureType*) deserialize from a stream
/// - int soap_write_gml__AbstractFeatureType(soap, gml__AbstractFeatureType*) serialize to a stream
class gml__AbstractFeatureType : public gml__AbstractGMLType
{ public:
/*  INHERITED FROM gml__AbstractGMLType:
/// GROUP <xs:group name="StandardObjectProperties">
/// Vector of gml__MetaDataPropertyType* element refs with length 0..unbounded
    std::vector<gml__MetaDataPropertyType*> metaDataProperty               0;
/// @brief The value of this property is a text description of the object. gml:description uses gml:StringOrRefType as its content model, so it may contain a simple text string content, or carry a reference to an external description. The use of gml:description to reference an external description has been deprecated and replaced by the gml:descriptionReference property.
/// Element reference "http://www.opengis.net/gml/3.2":description.
    gml__StringOrRefType*                description                    0;	///< Optional element.
/// @brief The value of this property is a remote text description of the object. The xlink:href attribute of the gml:descriptionReference property references the external description.
/// Element reference "http://www.opengis.net/gml/3.2":descriptionReference.
    gml__ReferenceType*                  descriptionReference           0;	///< Optional element.
/// @brief Often, a special identifier is assigned to an object by the maintaining authority with the intention that it is used in references to the object For such cases, the codeSpace shall be provided. That identifier is usually unique either globally or within an application domain. gml:identifier is a pre-defined property for such identifiers.
/// Element reference "http://www.opengis.net/gml/3.2":identifier.
    gml__CodeWithAuthorityType*          identifier                     0;	///< Optional element.
/// @brief The gml:name property provides a label or identifier for the object, commonly a descriptive name. An object may have several names, typically assigned by different authorities. gml:name uses the gml:CodeType content model. The authority for a name is indicated by the value of its (optional) codeSpace attribute. The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace. In common usage there will be one name per authority, so a processing application may select the name from its preferred codeSpace.
/// Vector of gml__CodeType* element refs with length 0..unbounded
    std::vector<gml__CodeType*         > name                           0;
//  END OF GROUP
/// Attribute reference "http://www.opengis.net/gml/3.2":id.
/// @brief The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.
   @xsd__ID                              id                             1;	///< Required attribute.
    END OF INHERITED FROM gml__AbstractGMLType */
/// @brief This property describes the minimum bounding box or rectangle that encloses the entire feature.
/// Element reference "http://www.opengis.net/gml/3.2":boundedBy.
    gml__BoundingShapeType*              boundedBy                      0;	///< Optional element.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="location" minOccurs="0"> with elements <priorityLocation>
   $int                                  __unionlocation                0;	///< Union _gml__union_AbstractFeatureType selector: set to SOAP_UNION__gml__union_AbstractFeatureType_<fieldname> or 0
/// Union for substitutionGroup="location"
    union _gml__union_AbstractFeatureType
    {
/// Element reference "http://www.opengis.net/gml/3.2":location.
    gml__LocationPropertyType*           location                       0;	///< Optional element.
/// Element priorityLocation of type "http://www.opengis.net/gml/3.2":PriorityLocationPropertyType.
    gml__PriorityLocationPropertyType*   priorityLocation               1;	///< Required element.
    }                                    __union_AbstractFeatureType   ;
//  END OF CHOICE OF SUBSTITUTIONS
};

/// "http://www.opengis.net/gml/3.2":EnvelopeWithTimePeriodType is a complexType with complexContent extension of "http://www.opengis.net/gml/3.2":EnvelopeType.
/// class gml__EnvelopeWithTimePeriodType operations:
/// - soap_new_gml__EnvelopeWithTimePeriodType(soap*) allocate
/// - soap_new_gml__EnvelopeWithTimePeriodType(soap*, int num) allocate array
/// - soap_new_req_gml__EnvelopeWithTimePeriodType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__EnvelopeWithTimePeriodType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__EnvelopeWithTimePeriodType(soap*, gml__EnvelopeWithTimePeriodType*) deserialize from a stream
/// - int soap_write_gml__EnvelopeWithTimePeriodType(soap, gml__EnvelopeWithTimePeriodType*) serialize to a stream
class gml__EnvelopeWithTimePeriodType : public gml__EnvelopeType
{ public:
/*  INHERITED FROM gml__EnvelopeType:
/// CHOICE <xs:choice>
/// Note: <xs:choice> with embedded <xs:sequence> or <xs:group> prevents the use of a union
/// SEQUENCE <xs:sequence>
/// Element lowerCorner of type "http://www.opengis.net/gml/3.2":DirectPositionType.
    gml__DirectPositionType*             lowerCorner                   ;
/// Element upperCorner of type "http://www.opengis.net/gml/3.2":DirectPositionType.
    gml__DirectPositionType*             upperCorner                   ;
//  END OF SEQUENCE
/// Vector of gml__DirectPositionType* element refs with length 2..2
    std::vector<gml__DirectPositionType*> pos                           :2;
/// Element reference "http://www.opengis.net/gml/3.2":coordinates.
    gml__CoordinatesType*                coordinates                   ;
;
//  END OF CHOICE
/// Attribute srsName of type xs:anyURI.
   @xsd__anyURI*                         srsName                        0;	///< Optional attribute.
/// Attribute srsDimension of type xs:positiveInteger.
   @xsd__positiveInteger*                srsDimension                   0;	///< Optional attribute.
/// Attribute axisLabels of type "http://www.opengis.net/gml/3.2":NCNameList.
   @gml__NCNameList*                     axisLabels                     0;	///< Optional attribute.
/// Attribute uomLabels of type "http://www.opengis.net/gml/3.2":NCNameList.
   @gml__NCNameList*                     uomLabels                      0;	///< Optional attribute.
    END OF INHERITED FROM gml__EnvelopeType */
/// Element beginPosition of type "http://www.opengis.net/gml/3.2":TimePositionType.
    gml__TimePositionType*               beginPosition                  1;	///< Required element.
/// Element endPosition of type "http://www.opengis.net/gml/3.2":TimePositionType.
    gml__TimePositionType*               endPosition                    1;	///< Required element.
/// Attribute frame of type xs:anyURI.
   @xsd__anyURI                          frame                          0;	///< Default value="#ISO-8601".
};

/// "http://www.opengis.net/gml/3.2":AbstractTimeObjectType is an abstract complexType with complexContent extension of "http://www.opengis.net/gml/3.2":AbstractGMLType.
/// class gml__AbstractTimeObjectType operations:
/// - soap_new_gml__AbstractTimeObjectType(soap*) allocate
/// - soap_new_gml__AbstractTimeObjectType(soap*, int num) allocate array
/// - soap_new_req_gml__AbstractTimeObjectType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__AbstractTimeObjectType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__AbstractTimeObjectType(soap*, gml__AbstractTimeObjectType*) deserialize from a stream
/// - int soap_write_gml__AbstractTimeObjectType(soap, gml__AbstractTimeObjectType*) serialize to a stream
class gml__AbstractTimeObjectType : public gml__AbstractGMLType
{ public:
/*  INHERITED FROM gml__AbstractGMLType:
/// GROUP <xs:group name="StandardObjectProperties">
/// Vector of gml__MetaDataPropertyType* element refs with length 0..unbounded
    std::vector<gml__MetaDataPropertyType*> metaDataProperty               0;
/// @brief The value of this property is a text description of the object. gml:description uses gml:StringOrRefType as its content model, so it may contain a simple text string content, or carry a reference to an external description. The use of gml:description to reference an external description has been deprecated and replaced by the gml:descriptionReference property.
/// Element reference "http://www.opengis.net/gml/3.2":description.
    gml__StringOrRefType*                description                    0;	///< Optional element.
/// @brief The value of this property is a remote text description of the object. The xlink:href attribute of the gml:descriptionReference property references the external description.
/// Element reference "http://www.opengis.net/gml/3.2":descriptionReference.
    gml__ReferenceType*                  descriptionReference           0;	///< Optional element.
/// @brief Often, a special identifier is assigned to an object by the maintaining authority with the intention that it is used in references to the object For such cases, the codeSpace shall be provided. That identifier is usually unique either globally or within an application domain. gml:identifier is a pre-defined property for such identifiers.
/// Element reference "http://www.opengis.net/gml/3.2":identifier.
    gml__CodeWithAuthorityType*          identifier                     0;	///< Optional element.
/// @brief The gml:name property provides a label or identifier for the object, commonly a descriptive name. An object may have several names, typically assigned by different authorities. gml:name uses the gml:CodeType content model. The authority for a name is indicated by the value of its (optional) codeSpace attribute. The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace. In common usage there will be one name per authority, so a processing application may select the name from its preferred codeSpace.
/// Vector of gml__CodeType* element refs with length 0..unbounded
    std::vector<gml__CodeType*         > name                           0;
//  END OF GROUP
/// Attribute reference "http://www.opengis.net/gml/3.2":id.
/// @brief The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.
   @xsd__ID                              id                             1;	///< Required attribute.
    END OF INHERITED FROM gml__AbstractGMLType */
};

/// "http://www.opengis.net/gml/3.2":RelatedTimeType is a complexType with complexContent extension of "http://www.opengis.net/gml/3.2":TimePrimitivePropertyType.
/// @brief gml:RelatedTimeType provides a content model for indicating the relative position of an arbitrary member of the substitution group whose head is gml:AbstractTimePrimitive. It extends the generic gml:TimePrimitivePropertyType with an XML attribute relativePosition, whose value is selected from the set of 13 temporal relationships identified by Allen (1983)
/// class gml__RelatedTimeType operations:
/// - soap_new_gml__RelatedTimeType(soap*) allocate
/// - soap_new_gml__RelatedTimeType(soap*, int num) allocate array
/// - soap_new_req_gml__RelatedTimeType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__RelatedTimeType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__RelatedTimeType(soap*, gml__RelatedTimeType*) deserialize from a stream
/// - int soap_write_gml__RelatedTimeType(soap, gml__RelatedTimeType*) serialize to a stream
class gml__RelatedTimeType : public gml__TimePrimitivePropertyType
{ public:
/*  INHERITED FROM gml__TimePrimitivePropertyType:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gml__RelatedTimeType_sequence
    {
/// @brief gml:AbstractTimePrimitive acts as the head of a substitution group for geometric and topological temporal primitives.
/// Reference "http://www.opengis.net/gml/3.2":AbstractTimePrimitive to abstract element.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractTimePrimitive"> with elements <AbstractTimeGeometricPrimitive> <AbstractTimeTopologyPrimitive>
   $int                                  __unionAbstractTimePrimitive   0;	///< Union _gml__union_RelatedTimeType selector: set to SOAP_UNION__gml__union_RelatedTimeType_<fieldname>
/// Union for substitutionGroup="AbstractTimePrimitive"
    union _gml__union_RelatedTimeType
    {
/// @brief gml:TimeGeometricPrimitive acts as the head of a substitution group for geometric temporal primitives. A temporal geometry shall be associated with a temporal reference system through the frame attribute that provides a URI reference that identifies a description of the reference system. Following ISO 19108, the Gregorian calendar with UTC is the default reference system, but others may also be used. The GPS calendar is an alternative reference systems in common use. The two geometric primitives in the temporal dimension are the instant and the period. GML components are defined to support these as follows.
/// Abstract element AbstractTimeGeometricPrimitive of type "http://www.opengis.net/gml/3.2":AbstractTimeGeometricPrimitiveType.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractTimeGeometricPrimitive"> with elements <TimeInstant> <TimePeriod>
/// @brief gml:TimeInstant acts as a zero-dimensional geometric primitive that represents an identifiable position in time.
/// Element TimeInstant of type "http://www.opengis.net/gml/3.2":TimeInstantType.
    gml__TimeInstantType*                TimeInstant                    1;	///< Required element.
/// @brief gml:TimePeriod acts as a one-dimensional geometric primitive that represents an identifiable extent in time. The location in of a gml:TimePeriod is described by the temporal positions of the instants at which it begins and ends. The length of the period is equal to the temporal distance between the two bounding temporal positions. Both beginning and end may be described in terms of their direct position using gml:TimePositionType which is an XML Schema simple content type, or by reference to an indentifiable time instant using gml:TimeInstantPropertyType. Alternatively a limit of a gml:TimePeriod may use the conventional GML property model to make a reference to a time instant described elsewhere, or a limit may be indicated as a direct position.
/// Element TimePeriod of type "http://www.opengis.net/gml/3.2":TimePeriodType.
    gml__TimePeriodType*                 TimePeriod                     1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
/// @brief gml:TimeTopologyPrimitive acts as the head of a substitution group for topological temporal primitives. Temporal topology primitives shall imply the ordering information between features or feature properties. The temporal connection of features can be examined if they have temporal topology primitives as values of their properties. Usually, an instantaneous feature associates with a time node, and a static feature associates with a time edge. A feature with both modes associates with the temporal topology primitive: a supertype of time nodes and time edges. A topological primitive is always connected to one or more other topological primitives, and is, therefore, always a member of a topological complex. In a GML instance, this will often be indicated by the primitives being described by elements that are descendents of an element describing a complex. However, in order to support the case where a temporal topological primitive is described in another context, the optional complex property is provided, which carries a reference to the parent temporal topological complex.
/// Abstract element AbstractTimeTopologyPrimitive of type "http://www.opengis.net/gml/3.2":AbstractTimeTopologyPrimitiveType.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractTimeTopologyPrimitive"> with elements <TimeNode> <TimeEdge>
/// @brief A time node is a zero-dimensional topological primitive that represents an identifiable node in time (it is equivalent to a point in space). A node may act as the termination or initiation of any number of time edges. A time node may be realised as a geometry, its position, whose value is a time instant.
/// Element TimeNode of type "http://www.opengis.net/gml/3.2":TimeNodeType.
    gml__TimeNodeType*                   TimeNode                       1;	///< Required element.
/// @brief A time edge is a one-dimensional topological primitive. It is an open interval that starts and ends at a node. The edge may be realised as a geometry whose value is a time period.
/// Element TimeEdge of type "http://www.opengis.net/gml/3.2":TimeEdgeType.
    gml__TimeEdgeType*                   TimeEdge                       1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
    }                                    __union_RelatedTimeType       ;
//  END OF CHOICE OF SUBSTITUTIONS
    }>                                   __RelatedTimeType_sequence     0;
//  END OF SEQUENCE
/// Attribute nilReason of type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         remoteSchema                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
/// Attribute owns of type xs:boolean.
   @bool                                 owns                           0 = false;	///< Default value="false".
    END OF INHERITED FROM gml__TimePrimitivePropertyType */
@    enum _gml__RelatedTimeType_relativePosition
    {
	_gml__RelatedTimeType_relativePosition__Before,	///< xs:string value="Before"
	_gml__RelatedTimeType_relativePosition__After,	///< xs:string value="After"
	_gml__RelatedTimeType_relativePosition__Begins,	///< xs:string value="Begins"
	_gml__RelatedTimeType_relativePosition__Ends,	///< xs:string value="Ends"
	_gml__RelatedTimeType_relativePosition__During,	///< xs:string value="During"
	_gml__RelatedTimeType_relativePosition__Equals,	///< xs:string value="Equals"
	_gml__RelatedTimeType_relativePosition__Contains,	///< xs:string value="Contains"
	_gml__RelatedTimeType_relativePosition__Overlaps,	///< xs:string value="Overlaps"
	_gml__RelatedTimeType_relativePosition__Meets,	///< xs:string value="Meets"
	_gml__RelatedTimeType_relativePosition__OverlappedBy,	///< xs:string value="OverlappedBy"
	_gml__RelatedTimeType_relativePosition__MetBy,	///< xs:string value="MetBy"
	_gml__RelatedTimeType_relativePosition__BegunBy,	///< xs:string value="BegunBy"
	_gml__RelatedTimeType_relativePosition__EndedBy,	///< xs:string value="EndedBy"
    }
                                        *relativePosition               0;	///< Optional attribute.
};

/// "http://www.opengis.net/gml/3.2":TimePositionType is a complexType with simpleContent.
/// @brief The method for identifying a temporal position is specific to each temporal reference system. gml:TimePositionType supports the description of temporal position according to the subtypes described in ISO 19108. Values based on calendars and clocks use lexical formats that are based on ISO 8601, as described in XML Schema Part 2:2001. A decimal value may be used with coordinate systems such as GPS time or UNIX time. A URI may be used to provide a reference to some era in an ordinal reference system . In common with many of the components modelled as data types in the ISO 19100 series of International Standards, the corresponding GML component has simple content. However, the content model gml:TimePositionType is defined in several steps. Three XML attributes appear on gml:TimePositionType: A time value shall be associated with a temporal reference system through the frame attribute that provides a URI reference that identifies a description of the reference system. Following ISO 19108, the Gregorian calendar with UTC is the default reference system, but others may also be used. Components for describing temporal reference systems are described in 14.4, but it is not required that the reference system be described in this, as the reference may refer to anything that may be indentified with a URI. For time values using a calendar containing more than one era, the (optional) calendarEraName attribute provides the name of the calendar era. Inexact temporal positions may be expressed using the optional indeterminatePosition attribute. This takes a value from an enumeration.
/// class gml__TimePositionType operations:
/// - soap_new_gml__TimePositionType(soap*) allocate
/// - soap_new_gml__TimePositionType(soap*, int num) allocate array
/// - soap_new_req_gml__TimePositionType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__TimePositionType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__TimePositionType(soap*, gml__TimePositionType*) deserialize from a stream
/// - int soap_write_gml__TimePositionType(soap, gml__TimePositionType*) serialize to a stream
class gml__TimePositionType : public xsd__anyType
{ public:
/// __item wraps '"http://www.opengis.net/gml/3.2":TimePositionUnion' simpleContent.
    gml__TimePositionUnion               __item                        ;
/// Attribute frame of type xs:anyURI.
   @xsd__anyURI                          frame                          0;	///< Default value="#ISO-8601".
/// Attribute calendarEraName of type xs:string.
   @std::string*                         calendarEraName                0;	///< Optional attribute.
/// Attribute indeterminatePosition of type "http://www.opengis.net/gml/3.2":TimeIndeterminateValueType.
   @enum gml__TimeIndeterminateValueType*  indeterminatePosition          0;	///< Optional attribute.
};

/// "http://www.opengis.net/gml/3.2":TimeIntervalLengthType is a complexType with simpleContent.
/// class gml__TimeIntervalLengthType operations:
/// - soap_new_gml__TimeIntervalLengthType(soap*) allocate
/// - soap_new_gml__TimeIntervalLengthType(soap*, int num) allocate array
/// - soap_new_req_gml__TimeIntervalLengthType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__TimeIntervalLengthType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__TimeIntervalLengthType(soap*, gml__TimeIntervalLengthType*) deserialize from a stream
/// - int soap_write_gml__TimeIntervalLengthType(soap, gml__TimeIntervalLengthType*) serialize to a stream
class gml__TimeIntervalLengthType : public xsd__anyType
{ public:
/// __item wraps 'xs:decimal' simpleContent.
    xsd__decimal                         __item                        ;
/// Attribute unit of type "http://www.opengis.net/gml/3.2":TimeUnitType.
   @gml__TimeUnitType                    unit                           1;	///< Required attribute.
/// Attribute radix of type xs:positiveInteger.
   @xsd__positiveInteger*                radix                          0;	///< Optional attribute.
/// Attribute factor of type xs:integer.
   @long*                                factor                         0;	///< Optional attribute.
};

/// "http://www.opengis.net/gml/3.2":CompositeValueType is a complexType with complexContent extension of "http://www.opengis.net/gml/3.2":AbstractGMLType.
/// class gml__CompositeValueType operations:
/// - soap_new_gml__CompositeValueType(soap*) allocate
/// - soap_new_gml__CompositeValueType(soap*, int num) allocate array
/// - soap_new_req_gml__CompositeValueType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__CompositeValueType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__CompositeValueType(soap*, gml__CompositeValueType*) deserialize from a stream
/// - int soap_write_gml__CompositeValueType(soap, gml__CompositeValueType*) serialize to a stream
class gml__CompositeValueType : public gml__AbstractGMLType
{ public:
/*  INHERITED FROM gml__AbstractGMLType:
/// GROUP <xs:group name="StandardObjectProperties">
/// Vector of gml__MetaDataPropertyType* element refs with length 0..unbounded
    std::vector<gml__MetaDataPropertyType*> metaDataProperty               0;
/// @brief The value of this property is a text description of the object. gml:description uses gml:StringOrRefType as its content model, so it may contain a simple text string content, or carry a reference to an external description. The use of gml:description to reference an external description has been deprecated and replaced by the gml:descriptionReference property.
/// Element reference "http://www.opengis.net/gml/3.2":description.
    gml__StringOrRefType*                description                    0;	///< Optional element.
/// @brief The value of this property is a remote text description of the object. The xlink:href attribute of the gml:descriptionReference property references the external description.
/// Element reference "http://www.opengis.net/gml/3.2":descriptionReference.
    gml__ReferenceType*                  descriptionReference           0;	///< Optional element.
/// @brief Often, a special identifier is assigned to an object by the maintaining authority with the intention that it is used in references to the object For such cases, the codeSpace shall be provided. That identifier is usually unique either globally or within an application domain. gml:identifier is a pre-defined property for such identifiers.
/// Element reference "http://www.opengis.net/gml/3.2":identifier.
    gml__CodeWithAuthorityType*          identifier                     0;	///< Optional element.
/// @brief The gml:name property provides a label or identifier for the object, commonly a descriptive name. An object may have several names, typically assigned by different authorities. gml:name uses the gml:CodeType content model. The authority for a name is indicated by the value of its (optional) codeSpace attribute. The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace. In common usage there will be one name per authority, so a processing application may select the name from its preferred codeSpace.
/// Vector of gml__CodeType* element refs with length 0..unbounded
    std::vector<gml__CodeType*         > name                           0;
//  END OF GROUP
/// Attribute reference "http://www.opengis.net/gml/3.2":id.
/// @brief The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.
   @xsd__ID                              id                             1;	///< Required attribute.
    END OF INHERITED FROM gml__AbstractGMLType */
/// @brief Property that refers to, or contains, a Value.
/// Vector of gml__ValuePropertyType* element refs with length 0..unbounded
    std::vector<gml__ValuePropertyType*> valueComponent                 0;
/// @brief Property that contains Values.
/// Element reference "http://www.opengis.net/gml/3.2":valueComponents.
    gml__ValueArrayPropertyType*         valueComponents                0;	///< Optional element.
/// Attribute aggregationType of type "http://www.opengis.net/gml/3.2":AggregationType.
   @enum gml__AggregationType*           aggregationType                0;	///< Optional attribute.
};

/// "http://www.opengis.net/gml/3.2":ParameterValueType is a complexType with complexContent extension of "http://www.opengis.net/gml/3.2":AbstractGeneralParameterValueType.
/// class gml__ParameterValueType operations:
/// - soap_new_gml__ParameterValueType(soap*) allocate
/// - soap_new_gml__ParameterValueType(soap*, int num) allocate array
/// - soap_new_req_gml__ParameterValueType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__ParameterValueType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__ParameterValueType(soap*, gml__ParameterValueType*) deserialize from a stream
/// - int soap_write_gml__ParameterValueType(soap, gml__ParameterValueType*) serialize to a stream
class gml__ParameterValueType : public gml__AbstractGeneralParameterValueType
{ public:
/*  INHERITED FROM gml__AbstractGeneralParameterValueType:
    END OF INHERITED FROM gml__AbstractGeneralParameterValueType */
/// CHOICE <xs:choice>
   $int                                  __union_ParameterValueType    ;	///< Union _gml__union_ParameterValueType selector: set to SOAP_UNION__gml__union_ParameterValueType_<fieldname>
    union _gml__union_ParameterValueType
    {
/// @brief gml:value is a numeric value of an operation parameter, with its associated unit of measure.
/// Element reference "http://www.opengis.net/gml/3.2":value.
    gml__MeasureType*                    value                          1;	///< Required element.
/// Element reference "http://www.opengis.net/gml/3.2":dmsAngleValue.
    gml__DMSAngleType*                   dmsAngleValue                  1;	///< Required element.
/// @brief gml:stringValue is a character string value of an operation parameter. A string value does not have an associated unit of measure.
/// Element reference "http://www.opengis.net/gml/3.2":stringValue.
    std::string*                         stringValue                    1;	///< Required element.
/// @brief gml:integerValue is a positive integer value of an operation parameter, usually used for a count. An integer value does not have an associated unit of measure.
/// Element reference "http://www.opengis.net/gml/3.2":integerValue.
    xsd__positiveInteger*                integerValue                   1;	///< Required element.
/// @brief gml:booleanValue is a boolean value of an operation parameter. A Boolean value does not have an associated unit of measure.
/// Element reference "http://www.opengis.net/gml/3.2":booleanValue.
    bool                                 booleanValue                   1;	///< Required element.
/// @brief gml:valueList is an ordered sequence of two or more numeric values of an operation parameter list, where each value has the same associated unit of measure. An element of this type contains a space-separated sequence of double values.
/// Element reference "http://www.opengis.net/gml/3.2":valueList.
    gml__MeasureListType*                valueList                      1;	///< Required element.
/// @brief gml:integerValueList is an ordered sequence of two or more integer values of an operation parameter list, usually used for counts. These integer values do not have an associated unit of measure. An element of this type contains a space-separated sequence of integer values.
/// Element reference "http://www.opengis.net/gml/3.2":integerValueList.
    gml__integerList*                    integerValueList               1;	///< Required element.
/// @brief gml:valueFile is a reference to a file or a part of a file containing one or more parameter values, each numeric value with its associated unit of measure. When referencing a part of a file, that file shall contain multiple identified parts, such as an XML encoded document. Furthermore, the referenced file or part of a file may reference another part of the same or different files, as allowed in XML documents.
/// Element reference "http://www.opengis.net/gml/3.2":valueFile.
    xsd__anyURI*                         valueFile                      1;	///< Required element.
    }                                    union_ParameterValueType      ;
//  END OF CHOICE
/// @brief gml:operationParameter is an association role to the operation parameter of which this is a value.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="operationParameter"> with elements <valueOfParameter>
   $int                                  __unionoperationParameter      0;	///< Union _gml__union_ParameterValueType_ selector: set to SOAP_UNION__gml__union_ParameterValueType__<fieldname>
/// Union for substitutionGroup="operationParameter"
    union _gml__union_ParameterValueType_
    {
/// @brief gml:operationParameter is an association role to the operation parameter of which this is a value.
/// Element reference "http://www.opengis.net/gml/3.2":operationParameter.
    gml__OperationParameterPropertyType*  operationParameter             1;	///< Required element.
/// Element valueOfParameter of type "http://www.opengis.net/gml/3.2":OperationParameterPropertyType.
    gml__OperationParameterPropertyType*  valueOfParameter               1;	///< Required element.
    }                                    __union_ParameterValueType_   ;
//  END OF CHOICE OF SUBSTITUTIONS
};

/// "http://www.opengis.net/gml/3.2":ParameterValueGroupType is a complexType with complexContent extension of "http://www.opengis.net/gml/3.2":AbstractGeneralParameterValueType.
/// class gml__ParameterValueGroupType operations:
/// - soap_new_gml__ParameterValueGroupType(soap*) allocate
/// - soap_new_gml__ParameterValueGroupType(soap*, int num) allocate array
/// - soap_new_req_gml__ParameterValueGroupType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__ParameterValueGroupType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__ParameterValueGroupType(soap*, gml__ParameterValueGroupType*) deserialize from a stream
/// - int soap_write_gml__ParameterValueGroupType(soap, gml__ParameterValueGroupType*) serialize to a stream
class gml__ParameterValueGroupType : public gml__AbstractGeneralParameterValueType
{ public:
/*  INHERITED FROM gml__AbstractGeneralParameterValueType:
    END OF INHERITED FROM gml__AbstractGeneralParameterValueType */
/// @brief gml:parameterValue is a composition association to a parameter value or group of parameter values used by a coordinate operation.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="parameterValue" minOccurs="2" maxOccurs="unbounded"> with elements <usesValue> <includesValue>
   $int                                  __sizeparameterValue           2;
    class __gml__union_ParameterValueGroupType
    {
   $int                                  __unionparameterValue          2;	///< Union _gml__union_ParameterValueGroupType selector: set to SOAP_UNION__gml__union_ParameterValueGroupType_<fieldname>
/// Union for substitutionGroup="parameterValue"
    union _gml__union_ParameterValueGroupType
    {
/// @brief gml:parameterValue is a composition association to a parameter value or group of parameter values used by a coordinate operation.
/// Vector of gml__AbstractGeneralParameterValuePropertyType* element refs with length 2..unbounded
    std::vector<gml__AbstractGeneralParameterValuePropertyType*> *parameterValue                 2;
/// Element usesValue of type "http://www.opengis.net/gml/3.2":AbstractGeneralParameterValuePropertyType.
    gml__AbstractGeneralParameterValuePropertyType*  usesValue                      1;	///< Required element.
/// Element includesValue of type "http://www.opengis.net/gml/3.2":AbstractGeneralParameterValuePropertyType.
    gml__AbstractGeneralParameterValuePropertyType*  includesValue                  1;	///< Required element.
    }                                    __union_ParameterValueGroupType;
;
    }                                   *__union_ParameterValueGroupType;
//  END OF CHOICE OF SUBSTITUTIONS
/// @brief gml:group is an association role to the operation parameter group for which this element provides parameter values.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="group"> with elements <valuesOfGroup>
   $int                                  __uniongroup                   0;	///< Union _gml__union_ParameterValueGroupType_ selector: set to SOAP_UNION__gml__union_ParameterValueGroupType__<fieldname>
/// Union for substitutionGroup="group"
    union _gml__union_ParameterValueGroupType_
    {
/// @brief gml:group is an association role to the operation parameter group for which this element provides parameter values.
/// Element reference "http://www.opengis.net/gml/3.2":group.
    gml__OperationParameterGroupPropertyType*  group                          1;	///< Required element.
/// Element valuesOfGroup of type "http://www.opengis.net/gml/3.2":OperationParameterGroupPropertyType.
    gml__OperationParameterGroupPropertyType*  valuesOfGroup                  1;	///< Required element.
    }                                    __union_ParameterValueGroupType_;
//  END OF CHOICE OF SUBSTITUTIONS
};

/// "http://www.opengis.net/gml/3.2":StringOrRefType is a complexType with simpleContent.
/// class gml__StringOrRefType operations:
/// - soap_new_gml__StringOrRefType(soap*) allocate
/// - soap_new_gml__StringOrRefType(soap*, int num) allocate array
/// - soap_new_req_gml__StringOrRefType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__StringOrRefType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__StringOrRefType(soap*, gml__StringOrRefType*) deserialize from a stream
/// - int soap_write_gml__StringOrRefType(soap, gml__StringOrRefType*) serialize to a stream
class gml__StringOrRefType : public xsd__anyType
{ public:
/// __item wraps 'xs:string' simpleContent.
    std::string                          __item                        ;
/// Attribute nilReason of type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         remoteSchema                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.opengis.net/gml/3.2":BagType is a complexType with complexContent extension of "http://www.opengis.net/gml/3.2":AbstractGMLType.
/// class gml__BagType operations:
/// - soap_new_gml__BagType(soap*) allocate
/// - soap_new_gml__BagType(soap*, int num) allocate array
/// - soap_new_req_gml__BagType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__BagType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__BagType(soap*, gml__BagType*) deserialize from a stream
/// - int soap_write_gml__BagType(soap, gml__BagType*) serialize to a stream
class gml__BagType : public gml__AbstractGMLType
{ public:
/*  INHERITED FROM gml__AbstractGMLType:
/// GROUP <xs:group name="StandardObjectProperties">
/// Vector of gml__MetaDataPropertyType* element refs with length 0..unbounded
    std::vector<gml__MetaDataPropertyType*> metaDataProperty               0;
/// @brief The value of this property is a text description of the object. gml:description uses gml:StringOrRefType as its content model, so it may contain a simple text string content, or carry a reference to an external description. The use of gml:description to reference an external description has been deprecated and replaced by the gml:descriptionReference property.
/// Element reference "http://www.opengis.net/gml/3.2":description.
    gml__StringOrRefType*                description                    0;	///< Optional element.
/// @brief The value of this property is a remote text description of the object. The xlink:href attribute of the gml:descriptionReference property references the external description.
/// Element reference "http://www.opengis.net/gml/3.2":descriptionReference.
    gml__ReferenceType*                  descriptionReference           0;	///< Optional element.
/// @brief Often, a special identifier is assigned to an object by the maintaining authority with the intention that it is used in references to the object For such cases, the codeSpace shall be provided. That identifier is usually unique either globally or within an application domain. gml:identifier is a pre-defined property for such identifiers.
/// Element reference "http://www.opengis.net/gml/3.2":identifier.
    gml__CodeWithAuthorityType*          identifier                     0;	///< Optional element.
/// @brief The gml:name property provides a label or identifier for the object, commonly a descriptive name. An object may have several names, typically assigned by different authorities. gml:name uses the gml:CodeType content model. The authority for a name is indicated by the value of its (optional) codeSpace attribute. The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace. In common usage there will be one name per authority, so a processing application may select the name from its preferred codeSpace.
/// Vector of gml__CodeType* element refs with length 0..unbounded
    std::vector<gml__CodeType*         > name                           0;
//  END OF GROUP
/// Attribute reference "http://www.opengis.net/gml/3.2":id.
/// @brief The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.
   @xsd__ID                              id                             1;	///< Required attribute.
    END OF INHERITED FROM gml__AbstractGMLType */
/// Vector of gml__AssociationRoleType* element refs with length 0..unbounded
    std::vector<gml__AssociationRoleType*> member                         0;
/// Element reference "http://www.opengis.net/gml/3.2":members.
    gml__ArrayAssociationType*           members                        0;	///< Optional element.
};

/// "http://www.opengis.net/gml/3.2":ArrayType is a complexType with complexContent extension of "http://www.opengis.net/gml/3.2":AbstractGMLType.
/// class gml__ArrayType operations:
/// - soap_new_gml__ArrayType(soap*) allocate
/// - soap_new_gml__ArrayType(soap*, int num) allocate array
/// - soap_new_req_gml__ArrayType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__ArrayType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__ArrayType(soap*, gml__ArrayType*) deserialize from a stream
/// - int soap_write_gml__ArrayType(soap, gml__ArrayType*) serialize to a stream
class gml__ArrayType : public gml__AbstractGMLType
{ public:
/*  INHERITED FROM gml__AbstractGMLType:
/// GROUP <xs:group name="StandardObjectProperties">
/// Vector of gml__MetaDataPropertyType* element refs with length 0..unbounded
    std::vector<gml__MetaDataPropertyType*> metaDataProperty               0;
/// @brief The value of this property is a text description of the object. gml:description uses gml:StringOrRefType as its content model, so it may contain a simple text string content, or carry a reference to an external description. The use of gml:description to reference an external description has been deprecated and replaced by the gml:descriptionReference property.
/// Element reference "http://www.opengis.net/gml/3.2":description.
    gml__StringOrRefType*                description                    0;	///< Optional element.
/// @brief The value of this property is a remote text description of the object. The xlink:href attribute of the gml:descriptionReference property references the external description.
/// Element reference "http://www.opengis.net/gml/3.2":descriptionReference.
    gml__ReferenceType*                  descriptionReference           0;	///< Optional element.
/// @brief Often, a special identifier is assigned to an object by the maintaining authority with the intention that it is used in references to the object For such cases, the codeSpace shall be provided. That identifier is usually unique either globally or within an application domain. gml:identifier is a pre-defined property for such identifiers.
/// Element reference "http://www.opengis.net/gml/3.2":identifier.
    gml__CodeWithAuthorityType*          identifier                     0;	///< Optional element.
/// @brief The gml:name property provides a label or identifier for the object, commonly a descriptive name. An object may have several names, typically assigned by different authorities. gml:name uses the gml:CodeType content model. The authority for a name is indicated by the value of its (optional) codeSpace attribute. The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace. In common usage there will be one name per authority, so a processing application may select the name from its preferred codeSpace.
/// Vector of gml__CodeType* element refs with length 0..unbounded
    std::vector<gml__CodeType*         > name                           0;
//  END OF GROUP
/// Attribute reference "http://www.opengis.net/gml/3.2":id.
/// @brief The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.
   @xsd__ID                              id                             1;	///< Required attribute.
    END OF INHERITED FROM gml__AbstractGMLType */
/// Element reference "http://www.opengis.net/gml/3.2":members.
    gml__ArrayAssociationType*           members                        0;	///< Optional element.
};

/// "http://www.opengis.net/gml/3.2":GenericMetaDataType is a complexType with complexContent extension of "http://www.opengis.net/gml/3.2":AbstractMetaDataType.
/// class gml__GenericMetaDataType operations:
/// - soap_new_gml__GenericMetaDataType(soap*) allocate
/// - soap_new_gml__GenericMetaDataType(soap*, int num) allocate array
/// - soap_new_req_gml__GenericMetaDataType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__GenericMetaDataType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__GenericMetaDataType(soap*, gml__GenericMetaDataType*) deserialize from a stream
/// - int soap_write_gml__GenericMetaDataType(soap, gml__GenericMetaDataType*) serialize to a stream
class gml__GenericMetaDataType : public gml__AbstractMetaDataType
{ public:
/*  INHERITED FROM gml__AbstractMetaDataType:
/// Attribute reference "http://www.opengis.net/gml/3.2":id.
/// @brief The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.
   @xsd__ID*                             id                             0;	///< Optional attribute.
    END OF INHERITED FROM gml__AbstractMetaDataType */
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// TODO: this mixed complexType is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __mixed                       0;	///< Catch mixed content in XML string
};

/// "http://www.opengis.net/gml/3.2":PriorityLocationPropertyType is a complexType with complexContent extension of "http://www.opengis.net/gml/3.2":LocationPropertyType.
/// class gml__PriorityLocationPropertyType operations:
/// - soap_new_gml__PriorityLocationPropertyType(soap*) allocate
/// - soap_new_gml__PriorityLocationPropertyType(soap*, int num) allocate array
/// - soap_new_req_gml__PriorityLocationPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__PriorityLocationPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__PriorityLocationPropertyType(soap*, gml__PriorityLocationPropertyType*) deserialize from a stream
/// - int soap_write_gml__PriorityLocationPropertyType(soap, gml__PriorityLocationPropertyType*) serialize to a stream
class gml__PriorityLocationPropertyType : public gml__LocationPropertyType
{ public:
/*  INHERITED FROM gml__LocationPropertyType:
/// CHOICE <xs:choice>
   $int                                  __union_PriorityLocationPropertyType;	///< Union _gml__union_PriorityLocationPropertyType selector: set to SOAP_UNION__gml__union_PriorityLocationPropertyType_<fieldname>
    union _gml__union_PriorityLocationPropertyType
    {
/// @brief The AbstractGeometry element is the abstract head of the substitution group for all geometry elements of GML. This includes pre-defined and user-defined geometry elements. Any geometry element shall be a direct or indirect extension/restriction of AbstractGeometryType and shall be directly or indirectly in the substitution group of AbstractGeometry.
/// Reference "http://www.opengis.net/gml/3.2":AbstractGeometry to abstract element.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractGeometry"> with elements <GeometricComplex> <AbstractGeometricAggregate> <AbstractGeometricPrimitive> <AbstractImplicitGeometry>
/// Element GeometricComplex of type "http://www.opengis.net/gml/3.2":GeometricComplexType.
    gml__GeometricComplexType*           GeometricComplex               1;	///< Required element.
/// @brief gml:AbstractGeometricAggregate is the abstract head of the substitution group for all geometric aggregates.
/// Abstract element AbstractGeometricAggregate of type "http://www.opengis.net/gml/3.2":AbstractGeometricAggregateType.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractGeometricAggregate"> with elements <MultiGeometry> <MultiPoint> <MultiCurve> <MultiSurface> <MultiSolid>
/// @brief gml:MultiGeometry is a collection of one or more GML geometry objects of arbitrary type. The members of the geometric aggregate may be specified either using the "standard" property (gml:geometryMember) or the array property (gml:geometryMembers). It is also valid to use both the "standard" and the array properties in the same collection.
/// Element MultiGeometry of type "http://www.opengis.net/gml/3.2":MultiGeometryType.
    gml__MultiGeometryType*              MultiGeometry                  1;	///< Required element.
/// @brief A gml:MultiPoint consists of one or more gml:Points. The members of the geometric aggregate may be specified either using the "standard" property (gml:pointMember) or the array property (gml:pointMembers). It is also valid to use both the "standard" and the array properties in the same collection.
/// Element MultiPoint of type "http://www.opengis.net/gml/3.2":MultiPointType.
    gml__MultiPointType*                 MultiPoint                     1;	///< Required element.
/// @brief A gml:MultiCurve is defined by one or more gml:AbstractCurves. The members of the geometric aggregate may be specified either using the "standard" property (gml:curveMember) or the array property (gml:curveMembers). It is also valid to use both the "standard" and the array properties in the same collection.
/// Element MultiCurve of type "http://www.opengis.net/gml/3.2":MultiCurveType.
    gml__MultiCurveType*                 MultiCurve                     1;	///< Required element.
/// @brief A gml:MultiSurface is defined by one or more gml:AbstractSurfaces. The members of the geometric aggregate may be specified either using the "standard" property (gml:surfaceMember) or the array property (gml:surfaceMembers). It is also valid to use both the "standard" and the array properties in the same collection.
/// Element MultiSurface of type "http://www.opengis.net/gml/3.2":MultiSurfaceType.
    gml__MultiSurfaceType*               MultiSurface                   1;	///< Required element.
/// @brief A gml:MultiSolid is defined by one or more gml:AbstractSolids. The members of the geometric aggregate may be specified either using the "standard" property (gml:solidMember) or the array property (gml:solidMembers). It is also valid to use both the "standard" and the array properties in the same collection.
/// Element MultiSolid of type "http://www.opengis.net/gml/3.2":MultiSolidType.
    gml__MultiSolidType*                 MultiSolid                     1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
/// @brief The AbstractGeometricPrimitive element is the abstract head of the substitution group for all (pre- and user-defined) geometric primitives.
/// Abstract element AbstractGeometricPrimitive of type "http://www.opengis.net/gml/3.2":AbstractGeometricPrimitiveType.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractGeometricPrimitive"> with elements <AbstractSolid> <AbstractSurface> <Point> <AbstractCurve>
/// @brief The AbstractSolid element is the abstract head of the substituition group for all (continuous) solid elements.
/// Abstract element AbstractSolid of type "http://www.opengis.net/gml/3.2":AbstractSolidType.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractSolid"> with elements <CompositeSolid> <Solid>
/// @brief gml:CompositeSolid implements ISO 19107 GM_CompositeSolid (see ISO 19107:2003, 6.6.7) as specified in D.2.3.6. A gml:CompositeSolid is represented by a set of orientable surfaces. It is a geometry type with all the geometric properties of a (primitive) solid. Essentially, a composite solid is a collection of solids that join in pairs on common boundary surfaces and which, when considered as a whole, form a single solid. solidMember references or contains one solid in the composite solid. The solids are contiguous.
/// Element CompositeSolid of type "http://www.opengis.net/gml/3.2":CompositeSolidType.
    gml__CompositeSolidType*             CompositeSolid                 1;	///< Required element.
/// @brief A solid is the basis for 3-dimensional geometry. The extent of a solid is defined by the boundary surfaces as specified in ISO 19107:2003, 6.3.18. exterior specifies the outer boundary, interior the inner boundary of the solid.
/// Element Solid of type "http://www.opengis.net/gml/3.2":SolidType.
    gml__SolidType*                      Solid                          1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
/// @brief The AbstractSurface element is the abstract head of the substitution group for all (continuous) surface elements.
/// Abstract element AbstractSurface of type "http://www.opengis.net/gml/3.2":AbstractSurfaceType.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractSurface"> with elements <CompositeSurface> <Surface> <OrientableSurface> <Polygon>
/// @brief A gml:CompositeSurface is represented by a set of orientable surfaces. It is geometry type with all the geometric properties of a (primitive) surface. Essentially, a composite surface is a collection of surfaces that join in pairs on common boundary curves and which, when considered as a whole, form a single surface. surfaceMember references or contains inline one surface in the composite surface. The surfaces are contiguous.
/// Element CompositeSurface of type "http://www.opengis.net/gml/3.2":CompositeSurfaceType.
    gml__CompositeSurfaceType*           CompositeSurface               1;	///< Required element.
/// @brief A Surface is a 2-dimensional primitive and is composed of one or more surface patches as specified in ISO 19107:2003, 6.3.17.1. The surface patches are connected to one another. patches encapsulates the patches of the surface.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="Surface"> with elements <PolyhedralSurface> <TriangulatedSurface>
/// @brief A Surface is a 2-dimensional primitive and is composed of one or more surface patches as specified in ISO 19107:2003, 6.3.17.1. The surface patches are connected to one another. patches encapsulates the patches of the surface.
/// Element Surface of type "http://www.opengis.net/gml/3.2":SurfaceType.
    gml__SurfaceType*                    Surface                        1;	///< Required element.
/// @brief A polyhedral surface is a surface composed of polygon patches connected along their common boundary curves. This differs from the surface type only in the restriction on the types of surface patches acceptable. polygonPatches encapsulates the polygon patches of the polyhedral surface.
/// Element PolyhedralSurface of type "http://www.opengis.net/gml/3.2":SurfaceType.
    gml__SurfaceType*                    PolyhedralSurface              1;	///< Required element.
/// @brief A triangulated surface is a polyhedral surface that is composed only of triangles. There is no restriction on how the triangulation is derived. trianglePatches encapsulates the triangles of the triangulated surface.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="TriangulatedSurface"> with elements <Tin>
/// @brief A triangulated surface is a polyhedral surface that is composed only of triangles. There is no restriction on how the triangulation is derived. trianglePatches encapsulates the triangles of the triangulated surface.
/// Element TriangulatedSurface of type "http://www.opengis.net/gml/3.2":SurfaceType.
    gml__SurfaceType*                    TriangulatedSurface            1;	///< Required element.
/// @brief A tin is a triangulated surface that uses the Delauny algorithm or a similar algorithm complemented with consideration of stoplines (stopLines), breaklines (breakLines), and maximum length of triangle sides (maxLength). controlPoint shall contain a set of the positions (three or more) used as posts for this TIN (corners of the triangles in the TIN). See ISO 19107:2003, 6.4.39 for details.
/// Element Tin of type "http://www.opengis.net/gml/3.2":TinType.
    gml__TinType*                        Tin                            1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
//  END OF CHOICE OF SUBSTITUTIONS
/// @brief OrientableSurface consists of a surface and an orientation. If the orientation is "+", then the OrientableSurface is identical to the baseSurface. If the orientation is "-", then the OrientableSurface is a reference to a gml:AbstractSurface with an up-normal that reverses the direction for this OrientableSurface, the sense of "the top of the surface".
/// Element OrientableSurface of type "http://www.opengis.net/gml/3.2":OrientableSurfaceType.
    gml__OrientableSurfaceType*          OrientableSurface              1;	///< Required element.
/// @brief A Polygon is a special surface that is defined by a single surface patch (see D.3.6). The boundary of this patch is coplanar and the polygon uses planar interpolation in its interior. The elements exterior and interior describe the surface boundary of the polygon.
/// Element Polygon of type "http://www.opengis.net/gml/3.2":PolygonType.
    gml__PolygonType*                    Polygon                        1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
/// @brief A Point is defined by a single coordinate tuple. The direct position of a point is specified by the pos element which is of type DirectPositionType.
/// Element Point of type "http://www.opengis.net/gml/3.2":PointType.
    gml__PointType*                      Point                          1;	///< Required element.
/// @brief The AbstractCurve element is the abstract head of the substitution group for all (continuous) curve elements.
/// Abstract element AbstractCurve of type "http://www.opengis.net/gml/3.2":AbstractCurveType.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractCurve"> with elements <CompositeCurve> <Curve> <OrientableCurve> <LineString>
/// @brief A gml:CompositeCurve is represented by a sequence of (orientable) curves such that each curve in the sequence terminates at the start point of the subsequent curve in the list. curveMember references or contains inline one curve in the composite curve. The curves are contiguous, the collection of curves is ordered. Therefore, if provided, the aggregationType attribute shall have the value "sequence".
/// Element CompositeCurve of type "http://www.opengis.net/gml/3.2":CompositeCurveType.
    gml__CompositeCurveType*             CompositeCurve                 1;	///< Required element.
/// @brief A curve is a 1-dimensional primitive. Curves are continuous, connected, and have a measurable length in terms of the coordinate system. A curve is composed of one or more curve segments. Each curve segment within a curve may be defined using a different interpolation method. The curve segments are connected to one another, with the end point of each segment except the last being the start point of the next segment in the segment list. The orientation of the curve is positive. The element segments encapsulates the segments of the curve.
/// Element Curve of type "http://www.opengis.net/gml/3.2":CurveType.
    gml__CurveType*                      Curve                          1;	///< Required element.
/// @brief OrientableCurve consists of a curve and an orientation. If the orientation is "+", then the OrientableCurve is identical to the baseCurve. If the orientation is "-", then the OrientableCurve is related to another AbstractCurve with a parameterization that reverses the sense of the curve traversal.
/// Element OrientableCurve of type "http://www.opengis.net/gml/3.2":OrientableCurveType.
    gml__OrientableCurveType*            OrientableCurve                1;	///< Required element.
/// @brief A LineString is a special curve that consists of a single segment with linear interpolation. It is defined by two or more coordinate tuples, with linear interpolation between them. The number of direct positions in the list shall be at least two.
/// Element LineString of type "http://www.opengis.net/gml/3.2":LineStringType.
    gml__LineStringType*                 LineString                     1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
//  END OF CHOICE OF SUBSTITUTIONS
/// Abstract element AbstractImplicitGeometry of type "http://www.opengis.net/gml/3.2":AbstractGeometryType.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractImplicitGeometry"> with elements <Grid>
/// @brief The gml:Grid implicitly defines an unrectified grid, which is a network composed of two or more sets of curves in which the members of each set intersect the members of the other sets in an algorithmic way. The region of interest within the grid is given in terms of its gml:limits, being the grid coordinates of diagonally opposed corners of a rectangular region. gml:axisLabels is provided with a list of labels of the axes of the grid (gml:axisName has been deprecated). gml:dimension specifies the dimension of the grid. The gml:limits element contains a single gml:GridEnvelope. The gml:low and gml:high property elements of the envelope are each integerLists, which are coordinate tuples, the coordinates being measured as offsets from the origin of the grid along each axis, of the diagonally opposing corners of a "rectangular" region of interest.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="Grid"> with elements <RectifiedGrid>
/// @brief The gml:Grid implicitly defines an unrectified grid, which is a network composed of two or more sets of curves in which the members of each set intersect the members of the other sets in an algorithmic way. The region of interest within the grid is given in terms of its gml:limits, being the grid coordinates of diagonally opposed corners of a rectangular region. gml:axisLabels is provided with a list of labels of the axes of the grid (gml:axisName has been deprecated). gml:dimension specifies the dimension of the grid. The gml:limits element contains a single gml:GridEnvelope. The gml:low and gml:high property elements of the envelope are each integerLists, which are coordinate tuples, the coordinates being measured as offsets from the origin of the grid along each axis, of the diagonally opposing corners of a "rectangular" region of interest.
/// Element Grid of type "http://www.opengis.net/gml/3.2":GridType.
    gml__GridType*                       Grid                           1;	///< Required element.
/// @brief A rectified grid is a grid for which there is an affine transformation between the grid coordinates and the coordinates of an external coordinate reference system. It is defined by specifying the position (in some geometric space) of the grid "origin" and of the vectors that specify the post locations. Note that the grid limits (post indexes) and axis name properties are inherited from gml:GridType and that gml:RectifiedGrid adds a gml:origin property (contains or references a gml:Point) and a set of gml:offsetVector properties.
/// Element RectifiedGrid of type "http://www.opengis.net/gml/3.2":RectifiedGridType.
    gml__RectifiedGridType*              RectifiedGrid                  1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
//  END OF CHOICE OF SUBSTITUTIONS
//  END OF CHOICE OF SUBSTITUTIONS
/// Element reference "http://www.opengis.net/gml/3.2":LocationKeyWord.
    gml__CodeType*                       LocationKeyWord                1;	///< Required element.
/// Element reference "http://www.opengis.net/gml/3.2":LocationString.
    gml__StringOrRefType*                LocationString                 1;	///< Required element.
/// Element reference "http://www.opengis.net/gml/3.2":Null.
    gml__NilReasonType*                  Null                           1;	///< Required element.
    }                                    union_PriorityLocationPropertyType;
//  END OF CHOICE
/// Attribute nilReason of type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         remoteSchema                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
    END OF INHERITED FROM gml__LocationPropertyType */
/// Attribute priority of type xs:string.
   @std::string*                         priority                       0;	///< Optional attribute.
};


/// Top-level root element "http://www.opengis.net/gml/3.2":Boolean

/// "http://www.opengis.net/gml/3.2":Boolean is a complexType with simpleContent.
/// class _gml__Boolean operations:
/// - soap_new__gml__Boolean(soap*) allocate
/// - soap_new__gml__Boolean(soap*, int num) allocate array
/// - soap_new_req__gml__Boolean(soap*, ...) allocate, set required members
/// - soap_new_set__gml__Boolean(soap*, ...) allocate, set all public members
/// - int soap_read__gml__Boolean(soap*, _gml__Boolean*) deserialize from a stream
/// - int soap_write__gml__Boolean(soap, _gml__Boolean*) serialize to a stream
class _gml__Boolean
{ public:
/// __item wraps 'xs:boolean' simpleContent.
    bool                                 __item                        ;
/// Attribute nilReason of type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.opengis.net/gml/3.2":Count

/// "http://www.opengis.net/gml/3.2":Count is a complexType with simpleContent.
/// class _gml__Count operations:
/// - soap_new__gml__Count(soap*) allocate
/// - soap_new__gml__Count(soap*, int num) allocate array
/// - soap_new_req__gml__Count(soap*, ...) allocate, set required members
/// - soap_new_set__gml__Count(soap*, ...) allocate, set all public members
/// - int soap_read__gml__Count(soap*, _gml__Count*) deserialize from a stream
/// - int soap_write__gml__Count(soap, _gml__Count*) serialize to a stream
class _gml__Count
{ public:
/// __item wraps 'xs:integer' simpleContent.
    long                                 __item                        ;
/// Attribute nilReason of type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.isotc211.org/2005/gmd":AbstractDS_Aggregate_Type is an abstract complexType with complexContent extension of "http://www.isotc211.org/2005/gco":AbstractObject_Type.
/// @brief Identifiable collection of datasets
/// class gmd__AbstractDS_x005fAggregate_x005fType operations:
/// - soap_new_gmd__AbstractDS_x005fAggregate_x005fType(soap*) allocate
/// - soap_new_gmd__AbstractDS_x005fAggregate_x005fType(soap*, int num) allocate array
/// - soap_new_req_gmd__AbstractDS_x005fAggregate_x005fType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__AbstractDS_x005fAggregate_x005fType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__AbstractDS_x005fAggregate_x005fType(soap*, gmd__AbstractDS_x005fAggregate_x005fType*) deserialize from a stream
/// - int soap_write_gmd__AbstractDS_x005fAggregate_x005fType(soap, gmd__AbstractDS_x005fAggregate_x005fType*) serialize to a stream
class gmd__AbstractDS_x005fAggregate_x005fType : public gco__AbstractObject_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
/// Attribute id of type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute uuid of type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/// Vector of gmd__DS_x005fDataSet_x005fPropertyType* with length 1..unbounded
    std::vector<gmd__DS_x005fDataSet_x005fPropertyType*> composedOf                     1;
/// Vector of gmd__MD_x005fMetadata_x005fPropertyType* with length 1..unbounded
    std::vector<gmd__MD_x005fMetadata_x005fPropertyType*> seriesMetadata                 1;
/// Vector of gmd__DS_x005fAggregate_x005fPropertyType* with length 0..unbounded
    std::vector<gmd__DS_x005fAggregate_x005fPropertyType*> subset                         0;
/// Vector of gmd__DS_x005fAggregate_x005fPropertyType* with length 0..unbounded
    std::vector<gmd__DS_x005fAggregate_x005fPropertyType*> superset                       0;
};

/// "http://www.isotc211.org/2005/gmd":DS_DataSet_Type is a complexType with complexContent extension of "http://www.isotc211.org/2005/gco":AbstractObject_Type.
/// @brief Identifiable collection of data
/// class gmd__DS_x005fDataSet_x005fType operations:
/// - soap_new_gmd__DS_x005fDataSet_x005fType(soap*) allocate
/// - soap_new_gmd__DS_x005fDataSet_x005fType(soap*, int num) allocate array
/// - soap_new_req_gmd__DS_x005fDataSet_x005fType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__DS_x005fDataSet_x005fType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__DS_x005fDataSet_x005fType(soap*, gmd__DS_x005fDataSet_x005fType*) deserialize from a stream
/// - int soap_write_gmd__DS_x005fDataSet_x005fType(soap, gmd__DS_x005fDataSet_x005fType*) serialize to a stream
class gmd__DS_x005fDataSet_x005fType : public gco__AbstractObject_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
/// Attribute id of type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute uuid of type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/// Vector of gmd__MD_x005fMetadata_x005fPropertyType* with length 1..unbounded
    std::vector<gmd__MD_x005fMetadata_x005fPropertyType*> has                            1;
/// Vector of gmd__DS_x005fAggregate_x005fPropertyType* with length 0..unbounded
    std::vector<gmd__DS_x005fAggregate_x005fPropertyType*> partOf                         0;
};

/// "http://www.isotc211.org/2005/gmd":MD_Metadata_Type is a complexType with complexContent extension of "http://www.isotc211.org/2005/gco":AbstractObject_Type.
/// @brief Information about the metadata
/// class gmd__MD_x005fMetadata_x005fType operations:
/// - soap_new_gmd__MD_x005fMetadata_x005fType(soap*) allocate
/// - soap_new_gmd__MD_x005fMetadata_x005fType(soap*, int num) allocate array
/// - soap_new_req_gmd__MD_x005fMetadata_x005fType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__MD_x005fMetadata_x005fType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__MD_x005fMetadata_x005fType(soap*, gmd__MD_x005fMetadata_x005fType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fMetadata_x005fType(soap, gmd__MD_x005fMetadata_x005fType*) serialize to a stream
class gmd__MD_x005fMetadata_x005fType : public gco__AbstractObject_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
/// Attribute id of type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute uuid of type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/// Element fileIdentifier of type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  fileIdentifier                 0;	///< Optional element.
/// Element language of type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  language                       0;	///< Optional element.
/// Element characterSet of type "http://www.isotc211.org/2005/gmd":MD_CharacterSetCode_PropertyType.
    gmd__MD_x005fCharacterSetCode_x005fPropertyType*  characterSet                   0;	///< Optional element.
/// Element parentIdentifier of type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  parentIdentifier               0;	///< Optional element.
/// Vector of gmd__MD_x005fScopeCode_x005fPropertyType* with length 0..unbounded
    std::vector<gmd__MD_x005fScopeCode_x005fPropertyType*> hierarchyLevel                 0;
/// Vector of gco__CharacterString_x005fPropertyType* with length 0..unbounded
    std::vector<gco__CharacterString_x005fPropertyType*> hierarchyLevelName             0;
/// Vector of gmd__CI_x005fResponsibleParty_x005fPropertyType* with length 1..unbounded
    std::vector<gmd__CI_x005fResponsibleParty_x005fPropertyType*> contact                        1;
/// Element dateStamp of type "http://www.isotc211.org/2005/gco":Date_PropertyType.
    gco__Date_x005fPropertyType*         dateStamp                      1;	///< Required element.
/// Element metadataStandardName of type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  metadataStandardName           0;	///< Optional element.
/// Element metadataStandardVersion of type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  metadataStandardVersion        0;	///< Optional element.
/// Element dataSetURI of type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  dataSetURI                     0;	///< Optional element.
/// Vector of gmd__PT_x005fLocale_x005fPropertyType* with length 0..unbounded
    std::vector<gmd__PT_x005fLocale_x005fPropertyType*> locale                         0;
/// Vector of gmd__MD_x005fSpatialRepresentation_x005fPropertyType* with length 0..unbounded
    std::vector<gmd__MD_x005fSpatialRepresentation_x005fPropertyType*> spatialRepresentationInfo      0;
/// Vector of gmd__MD_x005fReferenceSystem_x005fPropertyType* with length 0..unbounded
    std::vector<gmd__MD_x005fReferenceSystem_x005fPropertyType*> referenceSystemInfo            0;
/// Vector of gmd__MD_x005fMetadataExtensionInformation_x005fPropertyType* with length 0..unbounded
    std::vector<gmd__MD_x005fMetadataExtensionInformation_x005fPropertyType*> metadataExtensionInfo          0;
/// Vector of gmd__MD_x005fIdentification_x005fPropertyType* with length 1..unbounded
    std::vector<gmd__MD_x005fIdentification_x005fPropertyType*> identificationInfo             1;
/// Vector of gmd__MD_x005fContentInformation_x005fPropertyType* with length 0..unbounded
    std::vector<gmd__MD_x005fContentInformation_x005fPropertyType*> contentInfo                    0;
/// Element distributionInfo of type "http://www.isotc211.org/2005/gmd":MD_Distribution_PropertyType.
    gmd__MD_x005fDistribution_x005fPropertyType*  distributionInfo               0;	///< Optional element.
/// Vector of gmd__DQ_x005fDataQuality_x005fPropertyType* with length 0..unbounded
    std::vector<gmd__DQ_x005fDataQuality_x005fPropertyType*> dataQualityInfo                0;
/// Vector of gmd__MD_x005fPortrayalCatalogueReference_x005fPropertyType* with length 0..unbounded
    std::vector<gmd__MD_x005fPortrayalCatalogueReference_x005fPropertyType*> portrayalCatalogueInfo         0;
/// Vector of gmd__MD_x005fConstraints_x005fPropertyType* with length 0..unbounded
    std::vector<gmd__MD_x005fConstraints_x005fPropertyType*> metadataConstraints            0;
/// Vector of gmd__MD_x005fApplicationSchemaInformation_x005fPropertyType* with length 0..unbounded
    std::vector<gmd__MD_x005fApplicationSchemaInformation_x005fPropertyType*> applicationSchemaInfo          0;
/// Element metadataMaintenance of type "http://www.isotc211.org/2005/gmd":MD_MaintenanceInformation_PropertyType.
    gmd__MD_x005fMaintenanceInformation_x005fPropertyType*  metadataMaintenance            0;	///< Optional element.
/// Vector of gmd__DS_x005fAggregate_x005fPropertyType* with length 0..unbounded
    std::vector<gmd__DS_x005fAggregate_x005fPropertyType*> series                         0;
/// Vector of gmd__DS_x005fDataSet_x005fPropertyType* with length 0..unbounded
    std::vector<gmd__DS_x005fDataSet_x005fPropertyType*> describes                      0;
/// Vector of gco__ObjectReference_x005fPropertyType* with length 0..unbounded
    std::vector<gco__ObjectReference_x005fPropertyType*> propertyType                   0;
/// Vector of gco__ObjectReference_x005fPropertyType* with length 0..unbounded
    std::vector<gco__ObjectReference_x005fPropertyType*> featureType                    0;
/// Vector of gco__ObjectReference_x005fPropertyType* with length 0..unbounded
    std::vector<gco__ObjectReference_x005fPropertyType*> featureAttribute               0;
};

/// "http://www.isotc211.org/2005/gmd":AbstractMD_SpatialRepresentation_Type is an abstract complexType with complexContent extension of "http://www.isotc211.org/2005/gco":AbstractObject_Type.
/// @brief Digital mechanism used to represent spatial information
/// class gmd__AbstractMD_x005fSpatialRepresentation_x005fType operations:
/// - soap_new_gmd__AbstractMD_x005fSpatialRepresentation_x005fType(soap*) allocate
/// - soap_new_gmd__AbstractMD_x005fSpatialRepresentation_x005fType(soap*, int num) allocate array
/// - soap_new_req_gmd__AbstractMD_x005fSpatialRepresentation_x005fType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__AbstractMD_x005fSpatialRepresentation_x005fType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__AbstractMD_x005fSpatialRepresentation_x005fType(soap*, gmd__AbstractMD_x005fSpatialRepresentation_x005fType*) deserialize from a stream
/// - int soap_write_gmd__AbstractMD_x005fSpatialRepresentation_x005fType(soap, gmd__AbstractMD_x005fSpatialRepresentation_x005fType*) serialize to a stream
class gmd__AbstractMD_x005fSpatialRepresentation_x005fType : public gco__AbstractObject_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
/// Attribute id of type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute uuid of type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
    END OF INHERITED FROM gco__AbstractObject_x005fType */
};

/// "http://www.isotc211.org/2005/gmd":MD_Dimension_Type is a complexType with complexContent extension of "http://www.isotc211.org/2005/gco":AbstractObject_Type.
/// class gmd__MD_x005fDimension_x005fType operations:
/// - soap_new_gmd__MD_x005fDimension_x005fType(soap*) allocate
/// - soap_new_gmd__MD_x005fDimension_x005fType(soap*, int num) allocate array
/// - soap_new_req_gmd__MD_x005fDimension_x005fType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__MD_x005fDimension_x005fType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__MD_x005fDimension_x005fType(soap*, gmd__MD_x005fDimension_x005fType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fDimension_x005fType(soap, gmd__MD_x005fDimension_x005fType*) serialize to a stream
class gmd__MD_x005fDimension_x005fType : public gco__AbstractObject_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
/// Attribute id of type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute uuid of type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/// Element dimensionName of type "http://www.isotc211.org/2005/gmd":MD_DimensionNameTypeCode_PropertyType.
    gmd__MD_x005fDimensionNameTypeCode_x005fPropertyType*  dimensionName                  1;	///< Required element.
/// Element dimensionSize of type "http://www.isotc211.org/2005/gco":Integer_PropertyType.
    gco__Integer_x005fPropertyType*      dimensionSize                  1;	///< Required element.
/// Element resolution of type "http://www.isotc211.org/2005/gco":Measure_PropertyType.
    gco__Measure_x005fPropertyType*      resolution                     0;	///< Optional element.
};

/// "http://www.isotc211.org/2005/gmd":MD_GeometricObjects_Type is a complexType with complexContent extension of "http://www.isotc211.org/2005/gco":AbstractObject_Type.
/// class gmd__MD_x005fGeometricObjects_x005fType operations:
/// - soap_new_gmd__MD_x005fGeometricObjects_x005fType(soap*) allocate
/// - soap_new_gmd__MD_x005fGeometricObjects_x005fType(soap*, int num) allocate array
/// - soap_new_req_gmd__MD_x005fGeometricObjects_x005fType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__MD_x005fGeometricObjects_x005fType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__MD_x005fGeometricObjects_x005fType(soap*, gmd__MD_x005fGeometricObjects_x005fType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fGeometricObjects_x005fType(soap, gmd__MD_x005fGeometricObjects_x005fType*) serialize to a stream
class gmd__MD_x005fGeometricObjects_x005fType : public gco__AbstractObject_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
/// Attribute id of type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute uuid of type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/// Element geometricObjectType of type "http://www.isotc211.org/2005/gmd":MD_GeometricObjectTypeCode_PropertyType.
    gmd__MD_x005fGeometricObjectTypeCode_x005fPropertyType*  geometricObjectType            1;	///< Required element.
/// Element geometricObjectCount of type "http://www.isotc211.org/2005/gco":Integer_PropertyType.
    gco__Integer_x005fPropertyType*      geometricObjectCount           0;	///< Optional element.
};

/// "http://www.isotc211.org/2005/gmd":CI_ResponsibleParty_Type is a complexType with complexContent extension of "http://www.isotc211.org/2005/gco":AbstractObject_Type.
/// @brief Identification of, and means of communication with, person(s) and organisations associated with the dataset
/// class gmd__CI_x005fResponsibleParty_x005fType operations:
/// - soap_new_gmd__CI_x005fResponsibleParty_x005fType(soap*) allocate
/// - soap_new_gmd__CI_x005fResponsibleParty_x005fType(soap*, int num) allocate array
/// - soap_new_req_gmd__CI_x005fResponsibleParty_x005fType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__CI_x005fResponsibleParty_x005fType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__CI_x005fResponsibleParty_x005fType(soap*, gmd__CI_x005fResponsibleParty_x005fType*) deserialize from a stream
/// - int soap_write_gmd__CI_x005fResponsibleParty_x005fType(soap, gmd__CI_x005fResponsibleParty_x005fType*) serialize to a stream
class gmd__CI_x005fResponsibleParty_x005fType : public gco__AbstractObject_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
/// Attribute id of type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute uuid of type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/// Element individualName of type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  individualName                 0;	///< Optional element.
/// Element organisationName of type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  organisationName               0;	///< Optional element.
/// Element positionName of type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  positionName                   0;	///< Optional element.
/// Element contactInfo of type "http://www.isotc211.org/2005/gmd":CI_Contact_PropertyType.
    gmd__CI_x005fContact_x005fPropertyType*  contactInfo                    0;	///< Optional element.
/// Element role of type "http://www.isotc211.org/2005/gmd":CI_RoleCode_PropertyType.
    gmd__CI_x005fRoleCode_x005fPropertyType*  role                           1;	///< Required element.
};

/// "http://www.isotc211.org/2005/gmd":CI_Citation_Type is a complexType with complexContent extension of "http://www.isotc211.org/2005/gco":AbstractObject_Type.
/// @brief Standardized resource reference
/// class gmd__CI_x005fCitation_x005fType operations:
/// - soap_new_gmd__CI_x005fCitation_x005fType(soap*) allocate
/// - soap_new_gmd__CI_x005fCitation_x005fType(soap*, int num) allocate array
/// - soap_new_req_gmd__CI_x005fCitation_x005fType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__CI_x005fCitation_x005fType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__CI_x005fCitation_x005fType(soap*, gmd__CI_x005fCitation_x005fType*) deserialize from a stream
/// - int soap_write_gmd__CI_x005fCitation_x005fType(soap, gmd__CI_x005fCitation_x005fType*) serialize to a stream
class gmd__CI_x005fCitation_x005fType : public gco__AbstractObject_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
/// Attribute id of type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute uuid of type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/// Element title of type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  title                          1;	///< Required element.
/// Vector of gco__CharacterString_x005fPropertyType* with length 0..unbounded
    std::vector<gco__CharacterString_x005fPropertyType*> alternateTitle                 0;
/// Vector of gmd__CI_x005fDate_x005fPropertyType* with length 1..unbounded
    std::vector<gmd__CI_x005fDate_x005fPropertyType*> date                           1;
/// Element edition of type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  edition                        0;	///< Optional element.
/// Element editionDate of type "http://www.isotc211.org/2005/gco":Date_PropertyType.
    gco__Date_x005fPropertyType*         editionDate                    0;	///< Optional element.
/// Vector of gmd__MD_x005fIdentifier_x005fPropertyType* with length 0..unbounded
    std::vector<gmd__MD_x005fIdentifier_x005fPropertyType*> identifier                     0;
/// Vector of gmd__CI_x005fResponsibleParty_x005fPropertyType* with length 0..unbounded
    std::vector<gmd__CI_x005fResponsibleParty_x005fPropertyType*> citedResponsibleParty          0;
/// Vector of gmd__CI_x005fPresentationFormCode_x005fPropertyType* with length 0..unbounded
    std::vector<gmd__CI_x005fPresentationFormCode_x005fPropertyType*> presentationForm               0;
/// Element series of type "http://www.isotc211.org/2005/gmd":CI_Series_PropertyType.
    gmd__CI_x005fSeries_x005fPropertyType*  series                         0;	///< Optional element.
/// Element otherCitationDetails of type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  otherCitationDetails           0;	///< Optional element.
/// Element collectiveTitle of type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  collectiveTitle                0;	///< Optional element.
/// Element ISBN of type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  ISBN                           0;	///< Optional element.
/// Element ISSN of type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  ISSN                           0;	///< Optional element.
};

/// "http://www.isotc211.org/2005/gmd":CI_Address_Type is a complexType with complexContent extension of "http://www.isotc211.org/2005/gco":AbstractObject_Type.
/// @brief Location of the responsible individual or organisation
/// class gmd__CI_x005fAddress_x005fType operations:
/// - soap_new_gmd__CI_x005fAddress_x005fType(soap*) allocate
/// - soap_new_gmd__CI_x005fAddress_x005fType(soap*, int num) allocate array
/// - soap_new_req_gmd__CI_x005fAddress_x005fType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__CI_x005fAddress_x005fType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__CI_x005fAddress_x005fType(soap*, gmd__CI_x005fAddress_x005fType*) deserialize from a stream
/// - int soap_write_gmd__CI_x005fAddress_x005fType(soap, gmd__CI_x005fAddress_x005fType*) serialize to a stream
class gmd__CI_x005fAddress_x005fType : public gco__AbstractObject_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
/// Attribute id of type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute uuid of type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/// Vector of gco__CharacterString_x005fPropertyType* with length 0..unbounded
    std::vector<gco__CharacterString_x005fPropertyType*> deliveryPoint                  0;
/// Element city of type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  city                           0;	///< Optional element.
/// Element administrativeArea of type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  administrativeArea             0;	///< Optional element.
/// Element postalCode of type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  postalCode                     0;	///< Optional element.
/// Element country of type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  country                        0;	///< Optional element.
/// Vector of gco__CharacterString_x005fPropertyType* with length 0..unbounded
    std::vector<gco__CharacterString_x005fPropertyType*> electronicMailAddress          0;
};

/// "http://www.isotc211.org/2005/gmd":CI_OnlineResource_Type is a complexType with complexContent extension of "http://www.isotc211.org/2005/gco":AbstractObject_Type.
/// @brief Information about online sources from which the dataset, specification, or community profile name and extended metadata elements can be obtained.
/// class gmd__CI_x005fOnlineResource_x005fType operations:
/// - soap_new_gmd__CI_x005fOnlineResource_x005fType(soap*) allocate
/// - soap_new_gmd__CI_x005fOnlineResource_x005fType(soap*, int num) allocate array
/// - soap_new_req_gmd__CI_x005fOnlineResource_x005fType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__CI_x005fOnlineResource_x005fType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__CI_x005fOnlineResource_x005fType(soap*, gmd__CI_x005fOnlineResource_x005fType*) deserialize from a stream
/// - int soap_write_gmd__CI_x005fOnlineResource_x005fType(soap, gmd__CI_x005fOnlineResource_x005fType*) serialize to a stream
class gmd__CI_x005fOnlineResource_x005fType : public gco__AbstractObject_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
/// Attribute id of type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute uuid of type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/// Element linkage of type "http://www.isotc211.org/2005/gmd":URL_PropertyType.
    gmd__URL_x005fPropertyType*          linkage                        1;	///< Required element.
/// Element protocol of type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  protocol                       0;	///< Optional element.
/// Element applicationProfile of type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  applicationProfile             0;	///< Optional element.
/// Element name of type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  name                           0;	///< Optional element.
/// Element description of type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  description                    0;	///< Optional element.
/// Element function of type "http://www.isotc211.org/2005/gmd":CI_OnLineFunctionCode_PropertyType.
    gmd__CI_x005fOnLineFunctionCode_x005fPropertyType*  function                       0;	///< Optional element.
};

/// "http://www.isotc211.org/2005/gmd":CI_Contact_Type is a complexType with complexContent extension of "http://www.isotc211.org/2005/gco":AbstractObject_Type.
/// @brief Information required enabling contact with the responsible person and/or organisation
/// class gmd__CI_x005fContact_x005fType operations:
/// - soap_new_gmd__CI_x005fContact_x005fType(soap*) allocate
/// - soap_new_gmd__CI_x005fContact_x005fType(soap*, int num) allocate array
/// - soap_new_req_gmd__CI_x005fContact_x005fType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__CI_x005fContact_x005fType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__CI_x005fContact_x005fType(soap*, gmd__CI_x005fContact_x005fType*) deserialize from a stream
/// - int soap_write_gmd__CI_x005fContact_x005fType(soap, gmd__CI_x005fContact_x005fType*) serialize to a stream
class gmd__CI_x005fContact_x005fType : public gco__AbstractObject_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
/// Attribute id of type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute uuid of type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/// Element phone of type "http://www.isotc211.org/2005/gmd":CI_Telephone_PropertyType.
    gmd__CI_x005fTelephone_x005fPropertyType*  phone                          0;	///< Optional element.
/// Element address of type "http://www.isotc211.org/2005/gmd":CI_Address_PropertyType.
    gmd__CI_x005fAddress_x005fPropertyType*  address                        0;	///< Optional element.
/// Element onlineResource of type "http://www.isotc211.org/2005/gmd":CI_OnlineResource_PropertyType.
    gmd__CI_x005fOnlineResource_x005fPropertyType*  onlineResource                 0;	///< Optional element.
/// Element hoursOfService of type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  hoursOfService                 0;	///< Optional element.
/// Element contactInstructions of type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  contactInstructions            0;	///< Optional element.
};

/// "http://www.isotc211.org/2005/gmd":CI_Telephone_Type is a complexType with complexContent extension of "http://www.isotc211.org/2005/gco":AbstractObject_Type.
/// @brief Telephone numbers for contacting the responsible individual or organisation
/// class gmd__CI_x005fTelephone_x005fType operations:
/// - soap_new_gmd__CI_x005fTelephone_x005fType(soap*) allocate
/// - soap_new_gmd__CI_x005fTelephone_x005fType(soap*, int num) allocate array
/// - soap_new_req_gmd__CI_x005fTelephone_x005fType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__CI_x005fTelephone_x005fType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__CI_x005fTelephone_x005fType(soap*, gmd__CI_x005fTelephone_x005fType*) deserialize from a stream
/// - int soap_write_gmd__CI_x005fTelephone_x005fType(soap, gmd__CI_x005fTelephone_x005fType*) serialize to a stream
class gmd__CI_x005fTelephone_x005fType : public gco__AbstractObject_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
/// Attribute id of type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute uuid of type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/// Vector of gco__CharacterString_x005fPropertyType* with length 0..unbounded
    std::vector<gco__CharacterString_x005fPropertyType*> voice                          0;
/// Vector of gco__CharacterString_x005fPropertyType* with length 0..unbounded
    std::vector<gco__CharacterString_x005fPropertyType*> facsimile                      0;
};

/// "http://www.isotc211.org/2005/gmd":CI_Date_Type is a complexType with complexContent extension of "http://www.isotc211.org/2005/gco":AbstractObject_Type.
/// class gmd__CI_x005fDate_x005fType operations:
/// - soap_new_gmd__CI_x005fDate_x005fType(soap*) allocate
/// - soap_new_gmd__CI_x005fDate_x005fType(soap*, int num) allocate array
/// - soap_new_req_gmd__CI_x005fDate_x005fType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__CI_x005fDate_x005fType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__CI_x005fDate_x005fType(soap*, gmd__CI_x005fDate_x005fType*) deserialize from a stream
/// - int soap_write_gmd__CI_x005fDate_x005fType(soap, gmd__CI_x005fDate_x005fType*) serialize to a stream
class gmd__CI_x005fDate_x005fType : public gco__AbstractObject_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
/// Attribute id of type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute uuid of type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/// Element date of type "http://www.isotc211.org/2005/gco":Date_PropertyType.
    gco__Date_x005fPropertyType*         date                           1;	///< Required element.
/// Element dateType of type "http://www.isotc211.org/2005/gmd":CI_DateTypeCode_PropertyType.
    gmd__CI_x005fDateTypeCode_x005fPropertyType*  dateType                       1;	///< Required element.
};

/// "http://www.isotc211.org/2005/gmd":CI_Series_Type is a complexType with complexContent extension of "http://www.isotc211.org/2005/gco":AbstractObject_Type.
/// class gmd__CI_x005fSeries_x005fType operations:
/// - soap_new_gmd__CI_x005fSeries_x005fType(soap*) allocate
/// - soap_new_gmd__CI_x005fSeries_x005fType(soap*, int num) allocate array
/// - soap_new_req_gmd__CI_x005fSeries_x005fType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__CI_x005fSeries_x005fType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__CI_x005fSeries_x005fType(soap*, gmd__CI_x005fSeries_x005fType*) deserialize from a stream
/// - int soap_write_gmd__CI_x005fSeries_x005fType(soap, gmd__CI_x005fSeries_x005fType*) serialize to a stream
class gmd__CI_x005fSeries_x005fType : public gco__AbstractObject_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
/// Attribute id of type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute uuid of type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/// Element name of type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  name                           0;	///< Optional element.
/// Element issueIdentification of type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  issueIdentification            0;	///< Optional element.
/// Element page of type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  page                           0;	///< Optional element.
};

/// "http://www.isotc211.org/2005/gmd":MD_ReferenceSystem_Type is a complexType with complexContent extension of "http://www.isotc211.org/2005/gco":AbstractObject_Type.
/// class gmd__MD_x005fReferenceSystem_x005fType operations:
/// - soap_new_gmd__MD_x005fReferenceSystem_x005fType(soap*) allocate
/// - soap_new_gmd__MD_x005fReferenceSystem_x005fType(soap*, int num) allocate array
/// - soap_new_req_gmd__MD_x005fReferenceSystem_x005fType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__MD_x005fReferenceSystem_x005fType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__MD_x005fReferenceSystem_x005fType(soap*, gmd__MD_x005fReferenceSystem_x005fType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fReferenceSystem_x005fType(soap, gmd__MD_x005fReferenceSystem_x005fType*) serialize to a stream
class gmd__MD_x005fReferenceSystem_x005fType : public gco__AbstractObject_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
/// Attribute id of type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute uuid of type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/// Element referenceSystemIdentifier of type "http://www.isotc211.org/2005/gmd":RS_Identifier_PropertyType.
    gmd__RS_x005fIdentifier_x005fPropertyType*  referenceSystemIdentifier      0;	///< Optional element.
};

/// "http://www.isotc211.org/2005/gmd":MD_Identifier_Type is a complexType with complexContent extension of "http://www.isotc211.org/2005/gco":AbstractObject_Type.
/// class gmd__MD_x005fIdentifier_x005fType operations:
/// - soap_new_gmd__MD_x005fIdentifier_x005fType(soap*) allocate
/// - soap_new_gmd__MD_x005fIdentifier_x005fType(soap*, int num) allocate array
/// - soap_new_req_gmd__MD_x005fIdentifier_x005fType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__MD_x005fIdentifier_x005fType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__MD_x005fIdentifier_x005fType(soap*, gmd__MD_x005fIdentifier_x005fType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fIdentifier_x005fType(soap, gmd__MD_x005fIdentifier_x005fType*) serialize to a stream
class gmd__MD_x005fIdentifier_x005fType : public gco__AbstractObject_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
/// Attribute id of type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute uuid of type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/// Element authority of type "http://www.isotc211.org/2005/gmd":CI_Citation_PropertyType.
    gmd__CI_x005fCitation_x005fPropertyType*  authority                      0;	///< Optional element.
/// Element code of type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  code                           1;	///< Required element.
};

/// "http://www.isotc211.org/2005/gmd":AbstractRS_ReferenceSystem_Type is an abstract complexType with complexContent extension of "http://www.isotc211.org/2005/gco":AbstractObject_Type.
/// @brief Description of the spatial and temporal reference systems used in the dataset
/// class gmd__AbstractRS_x005fReferenceSystem_x005fType operations:
/// - soap_new_gmd__AbstractRS_x005fReferenceSystem_x005fType(soap*) allocate
/// - soap_new_gmd__AbstractRS_x005fReferenceSystem_x005fType(soap*, int num) allocate array
/// - soap_new_req_gmd__AbstractRS_x005fReferenceSystem_x005fType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__AbstractRS_x005fReferenceSystem_x005fType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__AbstractRS_x005fReferenceSystem_x005fType(soap*, gmd__AbstractRS_x005fReferenceSystem_x005fType*) deserialize from a stream
/// - int soap_write_gmd__AbstractRS_x005fReferenceSystem_x005fType(soap, gmd__AbstractRS_x005fReferenceSystem_x005fType*) serialize to a stream
class gmd__AbstractRS_x005fReferenceSystem_x005fType : public gco__AbstractObject_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
/// Attribute id of type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute uuid of type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/// Element name of type "http://www.isotc211.org/2005/gmd":RS_Identifier_PropertyType.
    gmd__RS_x005fIdentifier_x005fPropertyType*  name                           1;	///< Required element.
/// Vector of gmd__EX_x005fExtent_x005fPropertyType* with length 0..unbounded
    std::vector<gmd__EX_x005fExtent_x005fPropertyType*> domainOfValidity               0;
};

/// "http://www.isotc211.org/2005/gmd":EX_TemporalExtent_Type is a complexType with complexContent extension of "http://www.isotc211.org/2005/gco":AbstractObject_Type.
/// @brief Time period covered by the content of the dataset
/// class gmd__EX_x005fTemporalExtent_x005fType operations:
/// - soap_new_gmd__EX_x005fTemporalExtent_x005fType(soap*) allocate
/// - soap_new_gmd__EX_x005fTemporalExtent_x005fType(soap*, int num) allocate array
/// - soap_new_req_gmd__EX_x005fTemporalExtent_x005fType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__EX_x005fTemporalExtent_x005fType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__EX_x005fTemporalExtent_x005fType(soap*, gmd__EX_x005fTemporalExtent_x005fType*) deserialize from a stream
/// - int soap_write_gmd__EX_x005fTemporalExtent_x005fType(soap, gmd__EX_x005fTemporalExtent_x005fType*) serialize to a stream
class gmd__EX_x005fTemporalExtent_x005fType : public gco__AbstractObject_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
/// Attribute id of type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute uuid of type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/// Element extent of type "http://www.isotc211.org/2005/gts":TM_Primitive_PropertyType.
    gts__TM_x005fPrimitive_x005fPropertyType*  extent                         1;	///< Required element.
};

/// "http://www.isotc211.org/2005/gmd":EX_VerticalExtent_Type is a complexType with complexContent extension of "http://www.isotc211.org/2005/gco":AbstractObject_Type.
/// @brief Vertical domain of dataset
/// class gmd__EX_x005fVerticalExtent_x005fType operations:
/// - soap_new_gmd__EX_x005fVerticalExtent_x005fType(soap*) allocate
/// - soap_new_gmd__EX_x005fVerticalExtent_x005fType(soap*, int num) allocate array
/// - soap_new_req_gmd__EX_x005fVerticalExtent_x005fType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__EX_x005fVerticalExtent_x005fType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__EX_x005fVerticalExtent_x005fType(soap*, gmd__EX_x005fVerticalExtent_x005fType*) deserialize from a stream
/// - int soap_write_gmd__EX_x005fVerticalExtent_x005fType(soap, gmd__EX_x005fVerticalExtent_x005fType*) serialize to a stream
class gmd__EX_x005fVerticalExtent_x005fType : public gco__AbstractObject_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
/// Attribute id of type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute uuid of type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/// Element minimumValue of type "http://www.isotc211.org/2005/gco":Real_PropertyType.
    gco__Real_x005fPropertyType*         minimumValue                   1;	///< Required element.
/// Element maximumValue of type "http://www.isotc211.org/2005/gco":Real_PropertyType.
    gco__Real_x005fPropertyType*         maximumValue                   1;	///< Required element.
/// Element verticalCRS of type "http://www.isotc211.org/2005/gsr":SC_CRS_PropertyType.
    gsr__SC_x005fCRS_x005fPropertyType*  verticalCRS                    1;	///< Required element.
};

/// "http://www.isotc211.org/2005/gmd":EX_Extent_Type is a complexType with complexContent extension of "http://www.isotc211.org/2005/gco":AbstractObject_Type.
/// @brief Information about spatial, vertical, and temporal extent
/// class gmd__EX_x005fExtent_x005fType operations:
/// - soap_new_gmd__EX_x005fExtent_x005fType(soap*) allocate
/// - soap_new_gmd__EX_x005fExtent_x005fType(soap*, int num) allocate array
/// - soap_new_req_gmd__EX_x005fExtent_x005fType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__EX_x005fExtent_x005fType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__EX_x005fExtent_x005fType(soap*, gmd__EX_x005fExtent_x005fType*) deserialize from a stream
/// - int soap_write_gmd__EX_x005fExtent_x005fType(soap, gmd__EX_x005fExtent_x005fType*) serialize to a stream
class gmd__EX_x005fExtent_x005fType : public gco__AbstractObject_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
/// Attribute id of type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute uuid of type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/// Element description of type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  description                    0;	///< Optional element.
/// Vector of gmd__EX_x005fGeographicExtent_x005fPropertyType* with length 0..unbounded
    std::vector<gmd__EX_x005fGeographicExtent_x005fPropertyType*> geographicElement              0;
/// Vector of gmd__EX_x005fTemporalExtent_x005fPropertyType* with length 0..unbounded
    std::vector<gmd__EX_x005fTemporalExtent_x005fPropertyType*> temporalElement                0;
/// Vector of gmd__EX_x005fVerticalExtent_x005fPropertyType* with length 0..unbounded
    std::vector<gmd__EX_x005fVerticalExtent_x005fPropertyType*> verticalElement                0;
};

/// "http://www.isotc211.org/2005/gmd":AbstractEX_GeographicExtent_Type is an abstract complexType with complexContent extension of "http://www.isotc211.org/2005/gco":AbstractObject_Type.
/// @brief Geographic area of the dataset
/// class gmd__AbstractEX_x005fGeographicExtent_x005fType operations:
/// - soap_new_gmd__AbstractEX_x005fGeographicExtent_x005fType(soap*) allocate
/// - soap_new_gmd__AbstractEX_x005fGeographicExtent_x005fType(soap*, int num) allocate array
/// - soap_new_req_gmd__AbstractEX_x005fGeographicExtent_x005fType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__AbstractEX_x005fGeographicExtent_x005fType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__AbstractEX_x005fGeographicExtent_x005fType(soap*, gmd__AbstractEX_x005fGeographicExtent_x005fType*) deserialize from a stream
/// - int soap_write_gmd__AbstractEX_x005fGeographicExtent_x005fType(soap, gmd__AbstractEX_x005fGeographicExtent_x005fType*) serialize to a stream
class gmd__AbstractEX_x005fGeographicExtent_x005fType : public gco__AbstractObject_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
/// Attribute id of type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute uuid of type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/// Element extentTypeCode of type "http://www.isotc211.org/2005/gco":Boolean_PropertyType.
    gco__Boolean_x005fPropertyType*      extentTypeCode                 0;	///< Optional element.
};

/// "http://www.isotc211.org/2005/gmd":MD_ExtendedElementInformation_Type is a complexType with complexContent extension of "http://www.isotc211.org/2005/gco":AbstractObject_Type.
/// @brief New metadata element, not found in ISO 19115, which is required to describe geographic data
/// class gmd__MD_x005fExtendedElementInformation_x005fType operations:
/// - soap_new_gmd__MD_x005fExtendedElementInformation_x005fType(soap*) allocate
/// - soap_new_gmd__MD_x005fExtendedElementInformation_x005fType(soap*, int num) allocate array
/// - soap_new_req_gmd__MD_x005fExtendedElementInformation_x005fType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__MD_x005fExtendedElementInformation_x005fType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__MD_x005fExtendedElementInformation_x005fType(soap*, gmd__MD_x005fExtendedElementInformation_x005fType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fExtendedElementInformation_x005fType(soap, gmd__MD_x005fExtendedElementInformation_x005fType*) serialize to a stream
class gmd__MD_x005fExtendedElementInformation_x005fType : public gco__AbstractObject_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
/// Attribute id of type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute uuid of type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/// Element name of type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  name                           1;	///< Required element.
/// Element shortName of type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  shortName                      0;	///< Optional element.
/// Element domainCode of type "http://www.isotc211.org/2005/gco":Integer_PropertyType.
    gco__Integer_x005fPropertyType*      domainCode                     0;	///< Optional element.
/// Element definition of type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  definition                     1;	///< Required element.
/// Element obligation of type "http://www.isotc211.org/2005/gmd":MD_ObligationCode_PropertyType.
    gmd__MD_x005fObligationCode_x005fPropertyType*  obligation                     0;	///< Optional element.
/// Element condition of type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  condition                      0;	///< Optional element.
/// Element dataType of type "http://www.isotc211.org/2005/gmd":MD_DatatypeCode_PropertyType.
    gmd__MD_x005fDatatypeCode_x005fPropertyType*  dataType                       1;	///< Required element.
/// Element maximumOccurrence of type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  maximumOccurrence              0;	///< Optional element.
/// Element domainValue of type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  domainValue                    0;	///< Optional element.
/// Vector of gco__CharacterString_x005fPropertyType* with length 1..unbounded
    std::vector<gco__CharacterString_x005fPropertyType*> parentEntity                   1;
/// Element rule of type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  rule                           1;	///< Required element.
/// Vector of gco__CharacterString_x005fPropertyType* with length 0..unbounded
    std::vector<gco__CharacterString_x005fPropertyType*> rationale                      0;
/// Vector of gmd__CI_x005fResponsibleParty_x005fPropertyType* with length 1..unbounded
    std::vector<gmd__CI_x005fResponsibleParty_x005fPropertyType*> source                         1;
};

/// "http://www.isotc211.org/2005/gmd":MD_MetadataExtensionInformation_Type is a complexType with complexContent extension of "http://www.isotc211.org/2005/gco":AbstractObject_Type.
/// @brief Information describing metadata extensions.
/// class gmd__MD_x005fMetadataExtensionInformation_x005fType operations:
/// - soap_new_gmd__MD_x005fMetadataExtensionInformation_x005fType(soap*) allocate
/// - soap_new_gmd__MD_x005fMetadataExtensionInformation_x005fType(soap*, int num) allocate array
/// - soap_new_req_gmd__MD_x005fMetadataExtensionInformation_x005fType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__MD_x005fMetadataExtensionInformation_x005fType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__MD_x005fMetadataExtensionInformation_x005fType(soap*, gmd__MD_x005fMetadataExtensionInformation_x005fType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fMetadataExtensionInformation_x005fType(soap, gmd__MD_x005fMetadataExtensionInformation_x005fType*) serialize to a stream
class gmd__MD_x005fMetadataExtensionInformation_x005fType : public gco__AbstractObject_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
/// Attribute id of type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute uuid of type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/// Element extensionOnLineResource of type "http://www.isotc211.org/2005/gmd":CI_OnlineResource_PropertyType.
    gmd__CI_x005fOnlineResource_x005fPropertyType*  extensionOnLineResource        0;	///< Optional element.
/// Vector of gmd__MD_x005fExtendedElementInformation_x005fPropertyType* with length 0..unbounded
    std::vector<gmd__MD_x005fExtendedElementInformation_x005fPropertyType*> extendedElementInformation     0;
};

/// "http://www.isotc211.org/2005/gmd":AbstractMD_ContentInformation_Type is an abstract complexType with complexContent extension of "http://www.isotc211.org/2005/gco":AbstractObject_Type.
/// class gmd__AbstractMD_x005fContentInformation_x005fType operations:
/// - soap_new_gmd__AbstractMD_x005fContentInformation_x005fType(soap*) allocate
/// - soap_new_gmd__AbstractMD_x005fContentInformation_x005fType(soap*, int num) allocate array
/// - soap_new_req_gmd__AbstractMD_x005fContentInformation_x005fType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__AbstractMD_x005fContentInformation_x005fType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__AbstractMD_x005fContentInformation_x005fType(soap*, gmd__AbstractMD_x005fContentInformation_x005fType*) deserialize from a stream
/// - int soap_write_gmd__AbstractMD_x005fContentInformation_x005fType(soap, gmd__AbstractMD_x005fContentInformation_x005fType*) serialize to a stream
class gmd__AbstractMD_x005fContentInformation_x005fType : public gco__AbstractObject_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
/// Attribute id of type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute uuid of type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
    END OF INHERITED FROM gco__AbstractObject_x005fType */
};

/// "http://www.isotc211.org/2005/gmd":MD_RangeDimension_Type is a complexType with complexContent extension of "http://www.isotc211.org/2005/gco":AbstractObject_Type.
/// @brief Set of adjacent wavelengths in the electro-magnetic spectrum with a common characteristic, such as the visible band
/// class gmd__MD_x005fRangeDimension_x005fType operations:
/// - soap_new_gmd__MD_x005fRangeDimension_x005fType(soap*) allocate
/// - soap_new_gmd__MD_x005fRangeDimension_x005fType(soap*, int num) allocate array
/// - soap_new_req_gmd__MD_x005fRangeDimension_x005fType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__MD_x005fRangeDimension_x005fType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__MD_x005fRangeDimension_x005fType(soap*, gmd__MD_x005fRangeDimension_x005fType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fRangeDimension_x005fType(soap, gmd__MD_x005fRangeDimension_x005fType*) serialize to a stream
class gmd__MD_x005fRangeDimension_x005fType : public gco__AbstractObject_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
/// Attribute id of type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute uuid of type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/// Element sequenceIdentifier of type "http://www.isotc211.org/2005/gco":MemberName_PropertyType.
    gco__MemberName_x005fPropertyType*   sequenceIdentifier             0;	///< Optional element.
/// Element descriptor of type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  descriptor                     0;	///< Optional element.
};

/// "http://www.isotc211.org/2005/gmd":MD_ApplicationSchemaInformation_Type is a complexType with complexContent extension of "http://www.isotc211.org/2005/gco":AbstractObject_Type.
/// @brief Information about the application schema used to build the dataset
/// class gmd__MD_x005fApplicationSchemaInformation_x005fType operations:
/// - soap_new_gmd__MD_x005fApplicationSchemaInformation_x005fType(soap*) allocate
/// - soap_new_gmd__MD_x005fApplicationSchemaInformation_x005fType(soap*, int num) allocate array
/// - soap_new_req_gmd__MD_x005fApplicationSchemaInformation_x005fType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__MD_x005fApplicationSchemaInformation_x005fType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__MD_x005fApplicationSchemaInformation_x005fType(soap*, gmd__MD_x005fApplicationSchemaInformation_x005fType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fApplicationSchemaInformation_x005fType(soap, gmd__MD_x005fApplicationSchemaInformation_x005fType*) serialize to a stream
class gmd__MD_x005fApplicationSchemaInformation_x005fType : public gco__AbstractObject_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
/// Attribute id of type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute uuid of type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/// Element name of type "http://www.isotc211.org/2005/gmd":CI_Citation_PropertyType.
    gmd__CI_x005fCitation_x005fPropertyType*  name                           1;	///< Required element.
/// Element schemaLanguage of type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  schemaLanguage                 1;	///< Required element.
/// Element constraintLanguage of type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  constraintLanguage             1;	///< Required element.
/// Element schemaAscii of type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  schemaAscii                    0;	///< Optional element.
/// Element graphicsFile of type "http://www.isotc211.org/2005/gco":Binary_PropertyType.
    gco__Binary_x005fPropertyType*       graphicsFile                   0;	///< Optional element.
/// Element softwareDevelopmentFile of type "http://www.isotc211.org/2005/gco":Binary_PropertyType.
    gco__Binary_x005fPropertyType*       softwareDevelopmentFile        0;	///< Optional element.
/// Element softwareDevelopmentFileFormat of type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  softwareDevelopmentFileFormat  0;	///< Optional element.
};

/// "http://www.isotc211.org/2005/gmd":MD_PortrayalCatalogueReference_Type is a complexType with complexContent extension of "http://www.isotc211.org/2005/gco":AbstractObject_Type.
/// @brief Information identifing the portrayal catalogue used
/// class gmd__MD_x005fPortrayalCatalogueReference_x005fType operations:
/// - soap_new_gmd__MD_x005fPortrayalCatalogueReference_x005fType(soap*) allocate
/// - soap_new_gmd__MD_x005fPortrayalCatalogueReference_x005fType(soap*, int num) allocate array
/// - soap_new_req_gmd__MD_x005fPortrayalCatalogueReference_x005fType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__MD_x005fPortrayalCatalogueReference_x005fType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__MD_x005fPortrayalCatalogueReference_x005fType(soap*, gmd__MD_x005fPortrayalCatalogueReference_x005fType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fPortrayalCatalogueReference_x005fType(soap, gmd__MD_x005fPortrayalCatalogueReference_x005fType*) serialize to a stream
class gmd__MD_x005fPortrayalCatalogueReference_x005fType : public gco__AbstractObject_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
/// Attribute id of type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute uuid of type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/// Vector of gmd__CI_x005fCitation_x005fPropertyType* with length 1..unbounded
    std::vector<gmd__CI_x005fCitation_x005fPropertyType*> portrayalCatalogueCitation     1;
};

/// "http://www.isotc211.org/2005/gmd":LI_ProcessStep_Type is a complexType with complexContent extension of "http://www.isotc211.org/2005/gco":AbstractObject_Type.
/// class gmd__LI_x005fProcessStep_x005fType operations:
/// - soap_new_gmd__LI_x005fProcessStep_x005fType(soap*) allocate
/// - soap_new_gmd__LI_x005fProcessStep_x005fType(soap*, int num) allocate array
/// - soap_new_req_gmd__LI_x005fProcessStep_x005fType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__LI_x005fProcessStep_x005fType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__LI_x005fProcessStep_x005fType(soap*, gmd__LI_x005fProcessStep_x005fType*) deserialize from a stream
/// - int soap_write_gmd__LI_x005fProcessStep_x005fType(soap, gmd__LI_x005fProcessStep_x005fType*) serialize to a stream
class gmd__LI_x005fProcessStep_x005fType : public gco__AbstractObject_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
/// Attribute id of type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute uuid of type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/// Element description of type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  description                    1;	///< Required element.
/// Element rationale of type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  rationale                      0;	///< Optional element.
/// Element dateTime of type "http://www.isotc211.org/2005/gco":DateTime_PropertyType.
    gco__DateTime_x005fPropertyType*     dateTime                       0;	///< Optional element.
/// Vector of gmd__CI_x005fResponsibleParty_x005fPropertyType* with length 0..unbounded
    std::vector<gmd__CI_x005fResponsibleParty_x005fPropertyType*> processor                      0;
/// Vector of gmd__LI_x005fSource_x005fPropertyType* with length 0..unbounded
    std::vector<gmd__LI_x005fSource_x005fPropertyType*> source                         0;
};

/// "http://www.isotc211.org/2005/gmd":LI_Source_Type is a complexType with complexContent extension of "http://www.isotc211.org/2005/gco":AbstractObject_Type.
/// class gmd__LI_x005fSource_x005fType operations:
/// - soap_new_gmd__LI_x005fSource_x005fType(soap*) allocate
/// - soap_new_gmd__LI_x005fSource_x005fType(soap*, int num) allocate array
/// - soap_new_req_gmd__LI_x005fSource_x005fType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__LI_x005fSource_x005fType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__LI_x005fSource_x005fType(soap*, gmd__LI_x005fSource_x005fType*) deserialize from a stream
/// - int soap_write_gmd__LI_x005fSource_x005fType(soap, gmd__LI_x005fSource_x005fType*) serialize to a stream
class gmd__LI_x005fSource_x005fType : public gco__AbstractObject_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
/// Attribute id of type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute uuid of type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/// Element description of type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  description                    0;	///< Optional element.
/// Element scaleDenominator of type "http://www.isotc211.org/2005/gmd":MD_RepresentativeFraction_PropertyType.
    gmd__MD_x005fRepresentativeFraction_x005fPropertyType*  scaleDenominator               0;	///< Optional element.
/// Element sourceReferenceSystem of type "http://www.isotc211.org/2005/gmd":MD_ReferenceSystem_PropertyType.
    gmd__MD_x005fReferenceSystem_x005fPropertyType*  sourceReferenceSystem          0;	///< Optional element.
/// Element sourceCitation of type "http://www.isotc211.org/2005/gmd":CI_Citation_PropertyType.
    gmd__CI_x005fCitation_x005fPropertyType*  sourceCitation                 0;	///< Optional element.
/// Vector of gmd__EX_x005fExtent_x005fPropertyType* with length 0..unbounded
    std::vector<gmd__EX_x005fExtent_x005fPropertyType*> sourceExtent                   0;
/// Vector of gmd__LI_x005fProcessStep_x005fPropertyType* with length 0..unbounded
    std::vector<gmd__LI_x005fProcessStep_x005fPropertyType*> sourceStep                     0;
};

/// "http://www.isotc211.org/2005/gmd":LI_Lineage_Type is a complexType with complexContent extension of "http://www.isotc211.org/2005/gco":AbstractObject_Type.
/// class gmd__LI_x005fLineage_x005fType operations:
/// - soap_new_gmd__LI_x005fLineage_x005fType(soap*) allocate
/// - soap_new_gmd__LI_x005fLineage_x005fType(soap*, int num) allocate array
/// - soap_new_req_gmd__LI_x005fLineage_x005fType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__LI_x005fLineage_x005fType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__LI_x005fLineage_x005fType(soap*, gmd__LI_x005fLineage_x005fType*) deserialize from a stream
/// - int soap_write_gmd__LI_x005fLineage_x005fType(soap, gmd__LI_x005fLineage_x005fType*) serialize to a stream
class gmd__LI_x005fLineage_x005fType : public gco__AbstractObject_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
/// Attribute id of type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute uuid of type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/// Element statement of type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  statement                      0;	///< Optional element.
/// Vector of gmd__LI_x005fProcessStep_x005fPropertyType* with length 0..unbounded
    std::vector<gmd__LI_x005fProcessStep_x005fPropertyType*> processStep                    0;
/// Vector of gmd__LI_x005fSource_x005fPropertyType* with length 0..unbounded
    std::vector<gmd__LI_x005fSource_x005fPropertyType*> source                         0;
};

/// "http://www.isotc211.org/2005/gmd":AbstractDQ_Result_Type is an abstract complexType with complexContent extension of "http://www.isotc211.org/2005/gco":AbstractObject_Type.
/// class gmd__AbstractDQ_x005fResult_x005fType operations:
/// - soap_new_gmd__AbstractDQ_x005fResult_x005fType(soap*) allocate
/// - soap_new_gmd__AbstractDQ_x005fResult_x005fType(soap*, int num) allocate array
/// - soap_new_req_gmd__AbstractDQ_x005fResult_x005fType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__AbstractDQ_x005fResult_x005fType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__AbstractDQ_x005fResult_x005fType(soap*, gmd__AbstractDQ_x005fResult_x005fType*) deserialize from a stream
/// - int soap_write_gmd__AbstractDQ_x005fResult_x005fType(soap, gmd__AbstractDQ_x005fResult_x005fType*) serialize to a stream
class gmd__AbstractDQ_x005fResult_x005fType : public gco__AbstractObject_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
/// Attribute id of type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute uuid of type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
    END OF INHERITED FROM gco__AbstractObject_x005fType */
};

/// "http://www.isotc211.org/2005/gmd":AbstractDQ_Element_Type is an abstract complexType with complexContent extension of "http://www.isotc211.org/2005/gco":AbstractObject_Type.
/// class gmd__AbstractDQ_x005fElement_x005fType operations:
/// - soap_new_gmd__AbstractDQ_x005fElement_x005fType(soap*) allocate
/// - soap_new_gmd__AbstractDQ_x005fElement_x005fType(soap*, int num) allocate array
/// - soap_new_req_gmd__AbstractDQ_x005fElement_x005fType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__AbstractDQ_x005fElement_x005fType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__AbstractDQ_x005fElement_x005fType(soap*, gmd__AbstractDQ_x005fElement_x005fType*) deserialize from a stream
/// - int soap_write_gmd__AbstractDQ_x005fElement_x005fType(soap, gmd__AbstractDQ_x005fElement_x005fType*) serialize to a stream
class gmd__AbstractDQ_x005fElement_x005fType : public gco__AbstractObject_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
/// Attribute id of type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute uuid of type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/// Vector of gco__CharacterString_x005fPropertyType* with length 0..unbounded
    std::vector<gco__CharacterString_x005fPropertyType*> nameOfMeasure                  0;
/// Element measureIdentification of type "http://www.isotc211.org/2005/gmd":MD_Identifier_PropertyType.
    gmd__MD_x005fIdentifier_x005fPropertyType*  measureIdentification          0;	///< Optional element.
/// Element measureDescription of type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  measureDescription             0;	///< Optional element.
/// Element evaluationMethodType of type "http://www.isotc211.org/2005/gmd":DQ_EvaluationMethodTypeCode_PropertyType.
    gmd__DQ_x005fEvaluationMethodTypeCode_x005fPropertyType*  evaluationMethodType           0;	///< Optional element.
/// Element evaluationMethodDescription of type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  evaluationMethodDescription    0;	///< Optional element.
/// Element evaluationProcedure of type "http://www.isotc211.org/2005/gmd":CI_Citation_PropertyType.
    gmd__CI_x005fCitation_x005fPropertyType*  evaluationProcedure            0;	///< Optional element.
/// Vector of gco__DateTime_x005fPropertyType* with length 0..unbounded
    std::vector<gco__DateTime_x005fPropertyType*> dateTime                       0;
/// Vector of gmd__DQ_x005fResult_x005fPropertyType* with length 1..2
    std::vector<gmd__DQ_x005fResult_x005fPropertyType*> result                         1:2;
};

/// "http://www.isotc211.org/2005/gmd":DQ_DataQuality_Type is a complexType with complexContent extension of "http://www.isotc211.org/2005/gco":AbstractObject_Type.
/// class gmd__DQ_x005fDataQuality_x005fType operations:
/// - soap_new_gmd__DQ_x005fDataQuality_x005fType(soap*) allocate
/// - soap_new_gmd__DQ_x005fDataQuality_x005fType(soap*, int num) allocate array
/// - soap_new_req_gmd__DQ_x005fDataQuality_x005fType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__DQ_x005fDataQuality_x005fType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__DQ_x005fDataQuality_x005fType(soap*, gmd__DQ_x005fDataQuality_x005fType*) deserialize from a stream
/// - int soap_write_gmd__DQ_x005fDataQuality_x005fType(soap, gmd__DQ_x005fDataQuality_x005fType*) serialize to a stream
class gmd__DQ_x005fDataQuality_x005fType : public gco__AbstractObject_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
/// Attribute id of type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute uuid of type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/// Element scope of type "http://www.isotc211.org/2005/gmd":DQ_Scope_PropertyType.
    gmd__DQ_x005fScope_x005fPropertyType*  scope                          1;	///< Required element.
/// Vector of gmd__DQ_x005fElement_x005fPropertyType* with length 0..unbounded
    std::vector<gmd__DQ_x005fElement_x005fPropertyType*> report                         0;
/// Element lineage of type "http://www.isotc211.org/2005/gmd":LI_Lineage_PropertyType.
    gmd__LI_x005fLineage_x005fPropertyType*  lineage                        0;	///< Optional element.
};

/// "http://www.isotc211.org/2005/gmd":DQ_Scope_Type is a complexType with complexContent extension of "http://www.isotc211.org/2005/gco":AbstractObject_Type.
/// class gmd__DQ_x005fScope_x005fType operations:
/// - soap_new_gmd__DQ_x005fScope_x005fType(soap*) allocate
/// - soap_new_gmd__DQ_x005fScope_x005fType(soap*, int num) allocate array
/// - soap_new_req_gmd__DQ_x005fScope_x005fType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__DQ_x005fScope_x005fType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__DQ_x005fScope_x005fType(soap*, gmd__DQ_x005fScope_x005fType*) deserialize from a stream
/// - int soap_write_gmd__DQ_x005fScope_x005fType(soap, gmd__DQ_x005fScope_x005fType*) serialize to a stream
class gmd__DQ_x005fScope_x005fType : public gco__AbstractObject_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
/// Attribute id of type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute uuid of type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/// Element level of type "http://www.isotc211.org/2005/gmd":MD_ScopeCode_PropertyType.
    gmd__MD_x005fScopeCode_x005fPropertyType*  level                          1;	///< Required element.
/// Element extent of type "http://www.isotc211.org/2005/gmd":EX_Extent_PropertyType.
    gmd__EX_x005fExtent_x005fPropertyType*  extent                         0;	///< Optional element.
/// Vector of gmd__MD_x005fScopeDescription_x005fPropertyType* with length 0..unbounded
    std::vector<gmd__MD_x005fScopeDescription_x005fPropertyType*> levelDescription               0;
};

/// "http://www.isotc211.org/2005/gmd":AbstractMD_Identification_Type is an abstract complexType with complexContent extension of "http://www.isotc211.org/2005/gco":AbstractObject_Type.
/// @brief Basic information about data
/// class gmd__AbstractMD_x005fIdentification_x005fType operations:
/// - soap_new_gmd__AbstractMD_x005fIdentification_x005fType(soap*) allocate
/// - soap_new_gmd__AbstractMD_x005fIdentification_x005fType(soap*, int num) allocate array
/// - soap_new_req_gmd__AbstractMD_x005fIdentification_x005fType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__AbstractMD_x005fIdentification_x005fType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__AbstractMD_x005fIdentification_x005fType(soap*, gmd__AbstractMD_x005fIdentification_x005fType*) deserialize from a stream
/// - int soap_write_gmd__AbstractMD_x005fIdentification_x005fType(soap, gmd__AbstractMD_x005fIdentification_x005fType*) serialize to a stream
class gmd__AbstractMD_x005fIdentification_x005fType : public gco__AbstractObject_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
/// Attribute id of type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute uuid of type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/// Element citation of type "http://www.isotc211.org/2005/gmd":CI_Citation_PropertyType.
    gmd__CI_x005fCitation_x005fPropertyType*  citation                       1;	///< Required element.
/// Element abstract of type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  abstract                       1;	///< Required element.
/// Element purpose of type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  purpose                        0;	///< Optional element.
/// Vector of gco__CharacterString_x005fPropertyType* with length 0..unbounded
    std::vector<gco__CharacterString_x005fPropertyType*> credit                         0;
/// Vector of gmd__MD_x005fProgressCode_x005fPropertyType* with length 0..unbounded
    std::vector<gmd__MD_x005fProgressCode_x005fPropertyType*> status                         0;
/// Vector of gmd__CI_x005fResponsibleParty_x005fPropertyType* with length 0..unbounded
    std::vector<gmd__CI_x005fResponsibleParty_x005fPropertyType*> pointOfContact                 0;
/// Vector of gmd__MD_x005fMaintenanceInformation_x005fPropertyType* with length 0..unbounded
    std::vector<gmd__MD_x005fMaintenanceInformation_x005fPropertyType*> resourceMaintenance            0;
/// Vector of gmd__MD_x005fBrowseGraphic_x005fPropertyType* with length 0..unbounded
    std::vector<gmd__MD_x005fBrowseGraphic_x005fPropertyType*> graphicOverview                0;
/// Vector of gmd__MD_x005fFormat_x005fPropertyType* with length 0..unbounded
    std::vector<gmd__MD_x005fFormat_x005fPropertyType*> resourceFormat                 0;
/// Vector of gmd__MD_x005fKeywords_x005fPropertyType* with length 0..unbounded
    std::vector<gmd__MD_x005fKeywords_x005fPropertyType*> descriptiveKeywords            0;
/// Vector of gmd__MD_x005fUsage_x005fPropertyType* with length 0..unbounded
    std::vector<gmd__MD_x005fUsage_x005fPropertyType*> resourceSpecificUsage          0;
/// Vector of gmd__MD_x005fConstraints_x005fPropertyType* with length 0..unbounded
    std::vector<gmd__MD_x005fConstraints_x005fPropertyType*> resourceConstraints            0;
/// Vector of gmd__MD_x005fAggregateInformation_x005fPropertyType* with length 0..unbounded
    std::vector<gmd__MD_x005fAggregateInformation_x005fPropertyType*> aggregationInfo                0;
};

/// "http://www.isotc211.org/2005/gmd":MD_BrowseGraphic_Type is a complexType with complexContent extension of "http://www.isotc211.org/2005/gco":AbstractObject_Type.
/// @brief Graphic that provides an illustration of the dataset (should include a legend for the graphic)
/// class gmd__MD_x005fBrowseGraphic_x005fType operations:
/// - soap_new_gmd__MD_x005fBrowseGraphic_x005fType(soap*) allocate
/// - soap_new_gmd__MD_x005fBrowseGraphic_x005fType(soap*, int num) allocate array
/// - soap_new_req_gmd__MD_x005fBrowseGraphic_x005fType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__MD_x005fBrowseGraphic_x005fType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__MD_x005fBrowseGraphic_x005fType(soap*, gmd__MD_x005fBrowseGraphic_x005fType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fBrowseGraphic_x005fType(soap, gmd__MD_x005fBrowseGraphic_x005fType*) serialize to a stream
class gmd__MD_x005fBrowseGraphic_x005fType : public gco__AbstractObject_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
/// Attribute id of type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute uuid of type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/// Element fileName of type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  fileName                       1;	///< Required element.
/// Element fileDescription of type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  fileDescription                0;	///< Optional element.
/// Element fileType of type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  fileType                       0;	///< Optional element.
};

/// "http://www.isotc211.org/2005/gmd":MD_RepresentativeFraction_Type is a complexType with complexContent extension of "http://www.isotc211.org/2005/gco":AbstractObject_Type.
/// class gmd__MD_x005fRepresentativeFraction_x005fType operations:
/// - soap_new_gmd__MD_x005fRepresentativeFraction_x005fType(soap*) allocate
/// - soap_new_gmd__MD_x005fRepresentativeFraction_x005fType(soap*, int num) allocate array
/// - soap_new_req_gmd__MD_x005fRepresentativeFraction_x005fType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__MD_x005fRepresentativeFraction_x005fType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__MD_x005fRepresentativeFraction_x005fType(soap*, gmd__MD_x005fRepresentativeFraction_x005fType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fRepresentativeFraction_x005fType(soap, gmd__MD_x005fRepresentativeFraction_x005fType*) serialize to a stream
class gmd__MD_x005fRepresentativeFraction_x005fType : public gco__AbstractObject_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
/// Attribute id of type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute uuid of type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/// Element denominator of type "http://www.isotc211.org/2005/gco":Integer_PropertyType.
    gco__Integer_x005fPropertyType*      denominator                    1;	///< Required element.
};

/// "http://www.isotc211.org/2005/gmd":MD_Usage_Type is a complexType with complexContent extension of "http://www.isotc211.org/2005/gco":AbstractObject_Type.
/// @brief Brief description of ways in which the dataset is currently used.
/// class gmd__MD_x005fUsage_x005fType operations:
/// - soap_new_gmd__MD_x005fUsage_x005fType(soap*) allocate
/// - soap_new_gmd__MD_x005fUsage_x005fType(soap*, int num) allocate array
/// - soap_new_req_gmd__MD_x005fUsage_x005fType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__MD_x005fUsage_x005fType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__MD_x005fUsage_x005fType(soap*, gmd__MD_x005fUsage_x005fType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fUsage_x005fType(soap, gmd__MD_x005fUsage_x005fType*) serialize to a stream
class gmd__MD_x005fUsage_x005fType : public gco__AbstractObject_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
/// Attribute id of type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute uuid of type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/// Element specificUsage of type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  specificUsage                  1;	///< Required element.
/// Element usageDateTime of type "http://www.isotc211.org/2005/gco":DateTime_PropertyType.
    gco__DateTime_x005fPropertyType*     usageDateTime                  0;	///< Optional element.
/// Element userDeterminedLimitations of type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  userDeterminedLimitations      0;	///< Optional element.
/// Vector of gmd__CI_x005fResponsibleParty_x005fPropertyType* with length 1..unbounded
    std::vector<gmd__CI_x005fResponsibleParty_x005fPropertyType*> userContactInfo                1;
};

/// "http://www.isotc211.org/2005/gmd":MD_Keywords_Type is a complexType with complexContent extension of "http://www.isotc211.org/2005/gco":AbstractObject_Type.
/// @brief Keywords, their type and reference source
/// class gmd__MD_x005fKeywords_x005fType operations:
/// - soap_new_gmd__MD_x005fKeywords_x005fType(soap*) allocate
/// - soap_new_gmd__MD_x005fKeywords_x005fType(soap*, int num) allocate array
/// - soap_new_req_gmd__MD_x005fKeywords_x005fType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__MD_x005fKeywords_x005fType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__MD_x005fKeywords_x005fType(soap*, gmd__MD_x005fKeywords_x005fType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fKeywords_x005fType(soap, gmd__MD_x005fKeywords_x005fType*) serialize to a stream
class gmd__MD_x005fKeywords_x005fType : public gco__AbstractObject_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
/// Attribute id of type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute uuid of type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/// Vector of gco__CharacterString_x005fPropertyType* with length 1..unbounded
    std::vector<gco__CharacterString_x005fPropertyType*> keyword                        1;
/// Element type of type "http://www.isotc211.org/2005/gmd":MD_KeywordTypeCode_PropertyType.
    gmd__MD_x005fKeywordTypeCode_x005fPropertyType*  type                           0;	///< Optional element.
/// Element thesaurusName of type "http://www.isotc211.org/2005/gmd":CI_Citation_PropertyType.
    gmd__CI_x005fCitation_x005fPropertyType*  thesaurusName                  0;	///< Optional element.
};

/// "http://www.isotc211.org/2005/gmd":DS_Association_Type is a complexType with complexContent extension of "http://www.isotc211.org/2005/gco":AbstractObject_Type.
/// class gmd__DS_x005fAssociation_x005fType operations:
/// - soap_new_gmd__DS_x005fAssociation_x005fType(soap*) allocate
/// - soap_new_gmd__DS_x005fAssociation_x005fType(soap*, int num) allocate array
/// - soap_new_req_gmd__DS_x005fAssociation_x005fType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__DS_x005fAssociation_x005fType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__DS_x005fAssociation_x005fType(soap*, gmd__DS_x005fAssociation_x005fType*) deserialize from a stream
/// - int soap_write_gmd__DS_x005fAssociation_x005fType(soap, gmd__DS_x005fAssociation_x005fType*) serialize to a stream
class gmd__DS_x005fAssociation_x005fType : public gco__AbstractObject_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
/// Attribute id of type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute uuid of type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
    END OF INHERITED FROM gco__AbstractObject_x005fType */
};

/// "http://www.isotc211.org/2005/gmd":MD_AggregateInformation_Type is a complexType with complexContent extension of "http://www.isotc211.org/2005/gco":AbstractObject_Type.
/// @brief Encapsulates the dataset aggregation information
/// class gmd__MD_x005fAggregateInformation_x005fType operations:
/// - soap_new_gmd__MD_x005fAggregateInformation_x005fType(soap*) allocate
/// - soap_new_gmd__MD_x005fAggregateInformation_x005fType(soap*, int num) allocate array
/// - soap_new_req_gmd__MD_x005fAggregateInformation_x005fType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__MD_x005fAggregateInformation_x005fType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__MD_x005fAggregateInformation_x005fType(soap*, gmd__MD_x005fAggregateInformation_x005fType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fAggregateInformation_x005fType(soap, gmd__MD_x005fAggregateInformation_x005fType*) serialize to a stream
class gmd__MD_x005fAggregateInformation_x005fType : public gco__AbstractObject_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
/// Attribute id of type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute uuid of type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/// Element aggregateDataSetName of type "http://www.isotc211.org/2005/gmd":CI_Citation_PropertyType.
    gmd__CI_x005fCitation_x005fPropertyType*  aggregateDataSetName           0;	///< Optional element.
/// Element aggregateDataSetIdentifier of type "http://www.isotc211.org/2005/gmd":MD_Identifier_PropertyType.
    gmd__MD_x005fIdentifier_x005fPropertyType*  aggregateDataSetIdentifier     0;	///< Optional element.
/// Element associationType of type "http://www.isotc211.org/2005/gmd":DS_AssociationTypeCode_PropertyType.
    gmd__DS_x005fAssociationTypeCode_x005fPropertyType*  associationType                1;	///< Required element.
/// Element initiativeType of type "http://www.isotc211.org/2005/gmd":DS_InitiativeTypeCode_PropertyType.
    gmd__DS_x005fInitiativeTypeCode_x005fPropertyType*  initiativeType                 0;	///< Optional element.
};

/// "http://www.isotc211.org/2005/gmd":MD_Constraints_Type is a complexType with complexContent extension of "http://www.isotc211.org/2005/gco":AbstractObject_Type.
/// @brief Restrictions on the access and use of a dataset or metadata
/// class gmd__MD_x005fConstraints_x005fType operations:
/// - soap_new_gmd__MD_x005fConstraints_x005fType(soap*) allocate
/// - soap_new_gmd__MD_x005fConstraints_x005fType(soap*, int num) allocate array
/// - soap_new_req_gmd__MD_x005fConstraints_x005fType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__MD_x005fConstraints_x005fType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__MD_x005fConstraints_x005fType(soap*, gmd__MD_x005fConstraints_x005fType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fConstraints_x005fType(soap, gmd__MD_x005fConstraints_x005fType*) serialize to a stream
class gmd__MD_x005fConstraints_x005fType : public gco__AbstractObject_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
/// Attribute id of type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute uuid of type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/// Vector of gco__CharacterString_x005fPropertyType* with length 0..unbounded
    std::vector<gco__CharacterString_x005fPropertyType*> useLimitation                  0;
};

/// "http://www.isotc211.org/2005/gmd":MD_Medium_Type is a complexType with complexContent extension of "http://www.isotc211.org/2005/gco":AbstractObject_Type.
/// @brief Information about the media on which the data can be distributed
/// class gmd__MD_x005fMedium_x005fType operations:
/// - soap_new_gmd__MD_x005fMedium_x005fType(soap*) allocate
/// - soap_new_gmd__MD_x005fMedium_x005fType(soap*, int num) allocate array
/// - soap_new_req_gmd__MD_x005fMedium_x005fType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__MD_x005fMedium_x005fType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__MD_x005fMedium_x005fType(soap*, gmd__MD_x005fMedium_x005fType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fMedium_x005fType(soap, gmd__MD_x005fMedium_x005fType*) serialize to a stream
class gmd__MD_x005fMedium_x005fType : public gco__AbstractObject_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
/// Attribute id of type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute uuid of type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/// Element name of type "http://www.isotc211.org/2005/gmd":MD_MediumNameCode_PropertyType.
    gmd__MD_x005fMediumNameCode_x005fPropertyType*  name                           0;	///< Optional element.
/// Vector of gco__Real_x005fPropertyType* with length 0..unbounded
    std::vector<gco__Real_x005fPropertyType*> density                        0;
/// Element densityUnits of type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  densityUnits                   0;	///< Optional element.
/// Element volumes of type "http://www.isotc211.org/2005/gco":Integer_PropertyType.
    gco__Integer_x005fPropertyType*      volumes                        0;	///< Optional element.
/// Vector of gmd__MD_x005fMediumFormatCode_x005fPropertyType* with length 0..unbounded
    std::vector<gmd__MD_x005fMediumFormatCode_x005fPropertyType*> mediumFormat                   0;
/// Element mediumNote of type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  mediumNote                     0;	///< Optional element.
};

/// "http://www.isotc211.org/2005/gmd":MD_DigitalTransferOptions_Type is a complexType with complexContent extension of "http://www.isotc211.org/2005/gco":AbstractObject_Type.
/// @brief Technical means and media by which a dataset is obtained from the distributor
/// class gmd__MD_x005fDigitalTransferOptions_x005fType operations:
/// - soap_new_gmd__MD_x005fDigitalTransferOptions_x005fType(soap*) allocate
/// - soap_new_gmd__MD_x005fDigitalTransferOptions_x005fType(soap*, int num) allocate array
/// - soap_new_req_gmd__MD_x005fDigitalTransferOptions_x005fType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__MD_x005fDigitalTransferOptions_x005fType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__MD_x005fDigitalTransferOptions_x005fType(soap*, gmd__MD_x005fDigitalTransferOptions_x005fType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fDigitalTransferOptions_x005fType(soap, gmd__MD_x005fDigitalTransferOptions_x005fType*) serialize to a stream
class gmd__MD_x005fDigitalTransferOptions_x005fType : public gco__AbstractObject_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
/// Attribute id of type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute uuid of type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/// Element unitsOfDistribution of type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  unitsOfDistribution            0;	///< Optional element.
/// Element transferSize of type "http://www.isotc211.org/2005/gco":Real_PropertyType.
    gco__Real_x005fPropertyType*         transferSize                   0;	///< Optional element.
/// Vector of gmd__CI_x005fOnlineResource_x005fPropertyType* with length 0..unbounded
    std::vector<gmd__CI_x005fOnlineResource_x005fPropertyType*> onLine                         0;
/// Element offLine of type "http://www.isotc211.org/2005/gmd":MD_Medium_PropertyType.
    gmd__MD_x005fMedium_x005fPropertyType*  offLine                        0;	///< Optional element.
};

/// "http://www.isotc211.org/2005/gmd":MD_StandardOrderProcess_Type is a complexType with complexContent extension of "http://www.isotc211.org/2005/gco":AbstractObject_Type.
/// @brief Common ways in which the dataset may be obtained or received, and related instructions and fee information
/// class gmd__MD_x005fStandardOrderProcess_x005fType operations:
/// - soap_new_gmd__MD_x005fStandardOrderProcess_x005fType(soap*) allocate
/// - soap_new_gmd__MD_x005fStandardOrderProcess_x005fType(soap*, int num) allocate array
/// - soap_new_req_gmd__MD_x005fStandardOrderProcess_x005fType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__MD_x005fStandardOrderProcess_x005fType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__MD_x005fStandardOrderProcess_x005fType(soap*, gmd__MD_x005fStandardOrderProcess_x005fType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fStandardOrderProcess_x005fType(soap, gmd__MD_x005fStandardOrderProcess_x005fType*) serialize to a stream
class gmd__MD_x005fStandardOrderProcess_x005fType : public gco__AbstractObject_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
/// Attribute id of type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute uuid of type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/// Element fees of type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  fees                           0;	///< Optional element.
/// Element plannedAvailableDateTime of type "http://www.isotc211.org/2005/gco":DateTime_PropertyType.
    gco__DateTime_x005fPropertyType*     plannedAvailableDateTime       0;	///< Optional element.
/// Element orderingInstructions of type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  orderingInstructions           0;	///< Optional element.
/// Element turnaround of type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  turnaround                     0;	///< Optional element.
};

/// "http://www.isotc211.org/2005/gmd":MD_Distributor_Type is a complexType with complexContent extension of "http://www.isotc211.org/2005/gco":AbstractObject_Type.
/// @brief Information about the distributor
/// class gmd__MD_x005fDistributor_x005fType operations:
/// - soap_new_gmd__MD_x005fDistributor_x005fType(soap*) allocate
/// - soap_new_gmd__MD_x005fDistributor_x005fType(soap*, int num) allocate array
/// - soap_new_req_gmd__MD_x005fDistributor_x005fType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__MD_x005fDistributor_x005fType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__MD_x005fDistributor_x005fType(soap*, gmd__MD_x005fDistributor_x005fType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fDistributor_x005fType(soap, gmd__MD_x005fDistributor_x005fType*) serialize to a stream
class gmd__MD_x005fDistributor_x005fType : public gco__AbstractObject_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
/// Attribute id of type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute uuid of type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/// Element distributorContact of type "http://www.isotc211.org/2005/gmd":CI_ResponsibleParty_PropertyType.
    gmd__CI_x005fResponsibleParty_x005fPropertyType*  distributorContact             1;	///< Required element.
/// Vector of gmd__MD_x005fStandardOrderProcess_x005fPropertyType* with length 0..unbounded
    std::vector<gmd__MD_x005fStandardOrderProcess_x005fPropertyType*> distributionOrderProcess       0;
/// Vector of gmd__MD_x005fFormat_x005fPropertyType* with length 0..unbounded
    std::vector<gmd__MD_x005fFormat_x005fPropertyType*> distributorFormat              0;
/// Vector of gmd__MD_x005fDigitalTransferOptions_x005fPropertyType* with length 0..unbounded
    std::vector<gmd__MD_x005fDigitalTransferOptions_x005fPropertyType*> distributorTransferOptions     0;
};

/// "http://www.isotc211.org/2005/gmd":MD_Distribution_Type is a complexType with complexContent extension of "http://www.isotc211.org/2005/gco":AbstractObject_Type.
/// @brief Information about the distributor of and options for obtaining the dataset
/// class gmd__MD_x005fDistribution_x005fType operations:
/// - soap_new_gmd__MD_x005fDistribution_x005fType(soap*) allocate
/// - soap_new_gmd__MD_x005fDistribution_x005fType(soap*, int num) allocate array
/// - soap_new_req_gmd__MD_x005fDistribution_x005fType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__MD_x005fDistribution_x005fType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__MD_x005fDistribution_x005fType(soap*, gmd__MD_x005fDistribution_x005fType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fDistribution_x005fType(soap, gmd__MD_x005fDistribution_x005fType*) serialize to a stream
class gmd__MD_x005fDistribution_x005fType : public gco__AbstractObject_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
/// Attribute id of type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute uuid of type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/// Vector of gmd__MD_x005fFormat_x005fPropertyType* with length 0..unbounded
    std::vector<gmd__MD_x005fFormat_x005fPropertyType*> distributionFormat             0;
/// Vector of gmd__MD_x005fDistributor_x005fPropertyType* with length 0..unbounded
    std::vector<gmd__MD_x005fDistributor_x005fPropertyType*> distributor                    0;
/// Vector of gmd__MD_x005fDigitalTransferOptions_x005fPropertyType* with length 0..unbounded
    std::vector<gmd__MD_x005fDigitalTransferOptions_x005fPropertyType*> transferOptions                0;
};

/// "http://www.isotc211.org/2005/gmd":MD_Format_Type is a complexType with complexContent extension of "http://www.isotc211.org/2005/gco":AbstractObject_Type.
/// @brief Description of the form of the data to be distributed
/// class gmd__MD_x005fFormat_x005fType operations:
/// - soap_new_gmd__MD_x005fFormat_x005fType(soap*) allocate
/// - soap_new_gmd__MD_x005fFormat_x005fType(soap*, int num) allocate array
/// - soap_new_req_gmd__MD_x005fFormat_x005fType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__MD_x005fFormat_x005fType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__MD_x005fFormat_x005fType(soap*, gmd__MD_x005fFormat_x005fType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fFormat_x005fType(soap, gmd__MD_x005fFormat_x005fType*) serialize to a stream
class gmd__MD_x005fFormat_x005fType : public gco__AbstractObject_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
/// Attribute id of type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute uuid of type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/// Element name of type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  name                           1;	///< Required element.
/// Element version of type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  version                        1;	///< Required element.
/// Element amendmentNumber of type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  amendmentNumber                0;	///< Optional element.
/// Element specification of type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  specification                  0;	///< Optional element.
/// Element fileDecompressionTechnique of type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  fileDecompressionTechnique     0;	///< Optional element.
/// Vector of gmd__MD_x005fDistributor_x005fPropertyType* with length 0..unbounded
    std::vector<gmd__MD_x005fDistributor_x005fPropertyType*> formatDistributor              0;
};

/// "http://www.isotc211.org/2005/gmd":MD_MaintenanceInformation_Type is a complexType with complexContent extension of "http://www.isotc211.org/2005/gco":AbstractObject_Type.
/// @brief Information about the scope and frequency of updating
/// class gmd__MD_x005fMaintenanceInformation_x005fType operations:
/// - soap_new_gmd__MD_x005fMaintenanceInformation_x005fType(soap*) allocate
/// - soap_new_gmd__MD_x005fMaintenanceInformation_x005fType(soap*, int num) allocate array
/// - soap_new_req_gmd__MD_x005fMaintenanceInformation_x005fType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__MD_x005fMaintenanceInformation_x005fType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__MD_x005fMaintenanceInformation_x005fType(soap*, gmd__MD_x005fMaintenanceInformation_x005fType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fMaintenanceInformation_x005fType(soap, gmd__MD_x005fMaintenanceInformation_x005fType*) serialize to a stream
class gmd__MD_x005fMaintenanceInformation_x005fType : public gco__AbstractObject_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
/// Attribute id of type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute uuid of type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/// Element maintenanceAndUpdateFrequency of type "http://www.isotc211.org/2005/gmd":MD_MaintenanceFrequencyCode_PropertyType.
    gmd__MD_x005fMaintenanceFrequencyCode_x005fPropertyType*  maintenanceAndUpdateFrequency  1;	///< Required element.
/// Element dateOfNextUpdate of type "http://www.isotc211.org/2005/gco":Date_PropertyType.
    gco__Date_x005fPropertyType*         dateOfNextUpdate               0;	///< Optional element.
/// Element userDefinedMaintenanceFrequency of type "http://www.isotc211.org/2005/gts":TM_PeriodDuration_PropertyType.
    gts__TM_x005fPeriodDuration_x005fPropertyType*  userDefinedMaintenanceFrequency 0;	///< Optional element.
/// Vector of gmd__MD_x005fScopeCode_x005fPropertyType* with length 0..unbounded
    std::vector<gmd__MD_x005fScopeCode_x005fPropertyType*> updateScope                    0;
/// Vector of gmd__MD_x005fScopeDescription_x005fPropertyType* with length 0..unbounded
    std::vector<gmd__MD_x005fScopeDescription_x005fPropertyType*> updateScopeDescription         0;
/// Vector of gco__CharacterString_x005fPropertyType* with length 0..unbounded
    std::vector<gco__CharacterString_x005fPropertyType*> maintenanceNote                0;
/// Vector of gmd__CI_x005fResponsibleParty_x005fPropertyType* with length 0..unbounded
    std::vector<gmd__CI_x005fResponsibleParty_x005fPropertyType*> contact                        0;
};

/// "http://www.isotc211.org/2005/gmd":PT_FreeText_Type is a complexType with complexContent extension of "http://www.isotc211.org/2005/gco":AbstractObject_Type.
/// class gmd__PT_x005fFreeText_x005fType operations:
/// - soap_new_gmd__PT_x005fFreeText_x005fType(soap*) allocate
/// - soap_new_gmd__PT_x005fFreeText_x005fType(soap*, int num) allocate array
/// - soap_new_req_gmd__PT_x005fFreeText_x005fType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__PT_x005fFreeText_x005fType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__PT_x005fFreeText_x005fType(soap*, gmd__PT_x005fFreeText_x005fType*) deserialize from a stream
/// - int soap_write_gmd__PT_x005fFreeText_x005fType(soap, gmd__PT_x005fFreeText_x005fType*) serialize to a stream
class gmd__PT_x005fFreeText_x005fType : public gco__AbstractObject_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
/// Attribute id of type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute uuid of type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/// Vector of gmd__LocalisedCharacterString_x005fPropertyType* with length 1..unbounded
    std::vector<gmd__LocalisedCharacterString_x005fPropertyType*> textGroup                      1;
};

/// "http://www.isotc211.org/2005/gmd":PT_FreeText_PropertyType is a complexType with complexContent extension of "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
/// class gmd__PT_x005fFreeText_x005fPropertyType operations:
/// - soap_new_gmd__PT_x005fFreeText_x005fPropertyType(soap*) allocate
/// - soap_new_gmd__PT_x005fFreeText_x005fPropertyType(soap*, int num) allocate array
/// - soap_new_req_gmd__PT_x005fFreeText_x005fPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__PT_x005fFreeText_x005fPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__PT_x005fFreeText_x005fPropertyType(soap*, gmd__PT_x005fFreeText_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__PT_x005fFreeText_x005fPropertyType(soap, gmd__PT_x005fFreeText_x005fPropertyType*) serialize to a stream
class gmd__PT_x005fFreeText_x005fPropertyType : public gco__CharacterString_x005fPropertyType
{ public:
/*  INHERITED FROM gco__CharacterString_x005fPropertyType:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gco__PT_x005fFreeText_x005fPropertyType_sequence
    {
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="CharacterString"> with elements <MD_PixelOrientationCode> <MD_PixelOrientationCode> <MD_TopologyLevelCode> <MD_TopologyLevelCode> <MD_GeometricObjectTypeCode> <MD_GeometricObjectTypeCode> <MD_CellGeometryCode> <MD_CellGeometryCode> <MD_DimensionNameTypeCode> <MD_DimensionNameTypeCode> <CI_RoleCode> <CI_RoleCode> <CI_PresentationFormCode> <CI_PresentationFormCode> <CI_OnLineFunctionCode> <CI_OnLineFunctionCode> <CI_DateTypeCode> <CI_DateTypeCode> <MD_ObligationCode> <MD_ObligationCode> <MD_DatatypeCode> <MD_DatatypeCode> <MD_CoverageContentTypeCode> <MD_CoverageContentTypeCode> <MD_ImagingConditionCode> <MD_ImagingConditionCode> <DQ_EvaluationMethodTypeCode> <DQ_EvaluationMethodTypeCode> <MD_TopicCategoryCode> <MD_TopicCategoryCode> <MD_CharacterSetCode> <MD_CharacterSetCode> <MD_SpatialRepresentationTypeCode> <MD_SpatialRepresentationTypeCode> <MD_ProgressCode> <MD_ProgressCode> <MD_KeywordTypeCode> <MD_KeywordTypeCode> <DS_AssociationTypeCode> <DS_AssociationTypeCode> <DS_InitiativeTypeCode> <DS_InitiativeTypeCode> <MD_ClassificationCode> <MD_ClassificationCode> <MD_RestrictionCode> <MD_RestrictionCode> <MD_DistributionUnits> <MD_DistributionUnits> <MD_MediumFormatCode> <MD_MediumFormatCode> <MD_MediumNameCode> <MD_MediumNameCode> <MD_MaintenanceFrequencyCode> <MD_MaintenanceFrequencyCode> <MD_ScopeCode> <MD_ScopeCode> <LocalisedCharacterString> <LocalisedCharacterString> <LanguageCode> <LanguageCode> <Country> <Country>
   $int                                  __unionCharacterString         0;	///< Union _gco__union_PT_x005fFreeText_x005fPropertyType selector: set to SOAP_UNION__gco__union_PT_x005fFreeText_x005fPropertyType_<fieldname>
/// Union for substitutionGroup="CharacterString"
    union _gco__union_PT_x005fFreeText_x005fPropertyType
    {
/// Element reference "http://www.isotc211.org/2005/gco":CharacterString.
    std::string*                         CharacterString                1;	///< Required element.
/// Element MD_PixelOrientationCode of type "http://www.isotc211.org/2005/gmd":MD_PixelOrientationCode_Type.
    enum gmd__MD_x005fPixelOrientationCode_x005fType  MD_x005fPixelOrientationCode   1;	///< Required element.
/// Element MD_PixelOrientationCode of type "http://www.isotc211.org/2005/gmd":MD_PixelOrientationCode_Type.
    enum gmd__MD_x005fPixelOrientationCode_x005fType  MD_x005fPixelOrientationCode   1;	///< Required element.
/// Element MD_TopologyLevelCode of type "http://www.isotc211.org/2005/gco":CodeListValue_Type.
    gco__CodeListValue_x005fType*        MD_x005fTopologyLevelCode      1;	///< Required element.
/// Element MD_TopologyLevelCode of type "http://www.isotc211.org/2005/gco":CodeListValue_Type.
    gco__CodeListValue_x005fType*        MD_x005fTopologyLevelCode      1;	///< Required element.
/// Element MD_GeometricObjectTypeCode of type "http://www.isotc211.org/2005/gco":CodeListValue_Type.
    gco__CodeListValue_x005fType*        MD_x005fGeometricObjectTypeCode 1;	///< Required element.
/// Element MD_GeometricObjectTypeCode of type "http://www.isotc211.org/2005/gco":CodeListValue_Type.
    gco__CodeListValue_x005fType*        MD_x005fGeometricObjectTypeCode 1;	///< Required element.
/// Element MD_CellGeometryCode of type "http://www.isotc211.org/2005/gco":CodeListValue_Type.
    gco__CodeListValue_x005fType*        MD_x005fCellGeometryCode       1;	///< Required element.
/// Element MD_CellGeometryCode of type "http://www.isotc211.org/2005/gco":CodeListValue_Type.
    gco__CodeListValue_x005fType*        MD_x005fCellGeometryCode       1;	///< Required element.
/// Element MD_DimensionNameTypeCode of type "http://www.isotc211.org/2005/gco":CodeListValue_Type.
    gco__CodeListValue_x005fType*        MD_x005fDimensionNameTypeCode  1;	///< Required element.
/// Element MD_DimensionNameTypeCode of type "http://www.isotc211.org/2005/gco":CodeListValue_Type.
    gco__CodeListValue_x005fType*        MD_x005fDimensionNameTypeCode  1;	///< Required element.
/// Element CI_RoleCode of type "http://www.isotc211.org/2005/gco":CodeListValue_Type.
    gco__CodeListValue_x005fType*        CI_x005fRoleCode               1;	///< Required element.
/// Element CI_RoleCode of type "http://www.isotc211.org/2005/gco":CodeListValue_Type.
    gco__CodeListValue_x005fType*        CI_x005fRoleCode               1;	///< Required element.
/// Element CI_PresentationFormCode of type "http://www.isotc211.org/2005/gco":CodeListValue_Type.
    gco__CodeListValue_x005fType*        CI_x005fPresentationFormCode   1;	///< Required element.
/// Element CI_PresentationFormCode of type "http://www.isotc211.org/2005/gco":CodeListValue_Type.
    gco__CodeListValue_x005fType*        CI_x005fPresentationFormCode   1;	///< Required element.
/// Element CI_OnLineFunctionCode of type "http://www.isotc211.org/2005/gco":CodeListValue_Type.
    gco__CodeListValue_x005fType*        CI_x005fOnLineFunctionCode     1;	///< Required element.
/// Element CI_OnLineFunctionCode of type "http://www.isotc211.org/2005/gco":CodeListValue_Type.
    gco__CodeListValue_x005fType*        CI_x005fOnLineFunctionCode     1;	///< Required element.
/// Element CI_DateTypeCode of type "http://www.isotc211.org/2005/gco":CodeListValue_Type.
    gco__CodeListValue_x005fType*        CI_x005fDateTypeCode           1;	///< Required element.
/// Element CI_DateTypeCode of type "http://www.isotc211.org/2005/gco":CodeListValue_Type.
    gco__CodeListValue_x005fType*        CI_x005fDateTypeCode           1;	///< Required element.
/// Element MD_ObligationCode of type "http://www.isotc211.org/2005/gmd":MD_ObligationCode_Type.
    enum gmd__MD_x005fObligationCode_x005fType  MD_x005fObligationCode         1;	///< Required element.
/// Element MD_ObligationCode of type "http://www.isotc211.org/2005/gmd":MD_ObligationCode_Type.
    enum gmd__MD_x005fObligationCode_x005fType  MD_x005fObligationCode         1;	///< Required element.
/// Element MD_DatatypeCode of type "http://www.isotc211.org/2005/gco":CodeListValue_Type.
    gco__CodeListValue_x005fType*        MD_x005fDatatypeCode           1;	///< Required element.
/// Element MD_DatatypeCode of type "http://www.isotc211.org/2005/gco":CodeListValue_Type.
    gco__CodeListValue_x005fType*        MD_x005fDatatypeCode           1;	///< Required element.
/// Element MD_CoverageContentTypeCode of type "http://www.isotc211.org/2005/gco":CodeListValue_Type.
    gco__CodeListValue_x005fType*        MD_x005fCoverageContentTypeCode 1;	///< Required element.
/// Element MD_CoverageContentTypeCode of type "http://www.isotc211.org/2005/gco":CodeListValue_Type.
    gco__CodeListValue_x005fType*        MD_x005fCoverageContentTypeCode 1;	///< Required element.
/// Element MD_ImagingConditionCode of type "http://www.isotc211.org/2005/gco":CodeListValue_Type.
    gco__CodeListValue_x005fType*        MD_x005fImagingConditionCode   1;	///< Required element.
/// Element MD_ImagingConditionCode of type "http://www.isotc211.org/2005/gco":CodeListValue_Type.
    gco__CodeListValue_x005fType*        MD_x005fImagingConditionCode   1;	///< Required element.
/// Element DQ_EvaluationMethodTypeCode of type "http://www.isotc211.org/2005/gco":CodeListValue_Type.
    gco__CodeListValue_x005fType*        DQ_x005fEvaluationMethodTypeCode 1;	///< Required element.
/// Element DQ_EvaluationMethodTypeCode of type "http://www.isotc211.org/2005/gco":CodeListValue_Type.
    gco__CodeListValue_x005fType*        DQ_x005fEvaluationMethodTypeCode 1;	///< Required element.
/// Element MD_TopicCategoryCode of type "http://www.isotc211.org/2005/gmd":MD_TopicCategoryCode_Type.
    enum gmd__MD_x005fTopicCategoryCode_x005fType  MD_x005fTopicCategoryCode      1;	///< Required element.
/// Element MD_TopicCategoryCode of type "http://www.isotc211.org/2005/gmd":MD_TopicCategoryCode_Type.
    enum gmd__MD_x005fTopicCategoryCode_x005fType  MD_x005fTopicCategoryCode      1;	///< Required element.
/// Element MD_CharacterSetCode of type "http://www.isotc211.org/2005/gco":CodeListValue_Type.
    gco__CodeListValue_x005fType*        MD_x005fCharacterSetCode       1;	///< Required element.
/// Element MD_CharacterSetCode of type "http://www.isotc211.org/2005/gco":CodeListValue_Type.
    gco__CodeListValue_x005fType*        MD_x005fCharacterSetCode       1;	///< Required element.
/// Element MD_SpatialRepresentationTypeCode of type "http://www.isotc211.org/2005/gco":CodeListValue_Type.
    gco__CodeListValue_x005fType*        MD_x005fSpatialRepresentationTypeCode 1;	///< Required element.
/// Element MD_SpatialRepresentationTypeCode of type "http://www.isotc211.org/2005/gco":CodeListValue_Type.
    gco__CodeListValue_x005fType*        MD_x005fSpatialRepresentationTypeCode 1;	///< Required element.
/// Element MD_ProgressCode of type "http://www.isotc211.org/2005/gco":CodeListValue_Type.
    gco__CodeListValue_x005fType*        MD_x005fProgressCode           1;	///< Required element.
/// Element MD_ProgressCode of type "http://www.isotc211.org/2005/gco":CodeListValue_Type.
    gco__CodeListValue_x005fType*        MD_x005fProgressCode           1;	///< Required element.
/// Element MD_KeywordTypeCode of type "http://www.isotc211.org/2005/gco":CodeListValue_Type.
    gco__CodeListValue_x005fType*        MD_x005fKeywordTypeCode        1;	///< Required element.
/// Element MD_KeywordTypeCode of type "http://www.isotc211.org/2005/gco":CodeListValue_Type.
    gco__CodeListValue_x005fType*        MD_x005fKeywordTypeCode        1;	///< Required element.
/// Element DS_AssociationTypeCode of type "http://www.isotc211.org/2005/gco":CodeListValue_Type.
    gco__CodeListValue_x005fType*        DS_x005fAssociationTypeCode    1;	///< Required element.
/// Element DS_AssociationTypeCode of type "http://www.isotc211.org/2005/gco":CodeListValue_Type.
    gco__CodeListValue_x005fType*        DS_x005fAssociationTypeCode    1;	///< Required element.
/// Element DS_InitiativeTypeCode of type "http://www.isotc211.org/2005/gco":CodeListValue_Type.
    gco__CodeListValue_x005fType*        DS_x005fInitiativeTypeCode     1;	///< Required element.
/// Element DS_InitiativeTypeCode of type "http://www.isotc211.org/2005/gco":CodeListValue_Type.
    gco__CodeListValue_x005fType*        DS_x005fInitiativeTypeCode     1;	///< Required element.
/// Element MD_ClassificationCode of type "http://www.isotc211.org/2005/gco":CodeListValue_Type.
    gco__CodeListValue_x005fType*        MD_x005fClassificationCode     1;	///< Required element.
/// Element MD_ClassificationCode of type "http://www.isotc211.org/2005/gco":CodeListValue_Type.
    gco__CodeListValue_x005fType*        MD_x005fClassificationCode     1;	///< Required element.
/// Element MD_RestrictionCode of type "http://www.isotc211.org/2005/gco":CodeListValue_Type.
    gco__CodeListValue_x005fType*        MD_x005fRestrictionCode        1;	///< Required element.
/// Element MD_RestrictionCode of type "http://www.isotc211.org/2005/gco":CodeListValue_Type.
    gco__CodeListValue_x005fType*        MD_x005fRestrictionCode        1;	///< Required element.
/// Element MD_DistributionUnits of type "http://www.isotc211.org/2005/gco":CodeListValue_Type.
    gco__CodeListValue_x005fType*        MD_x005fDistributionUnits      1;	///< Required element.
/// Element MD_DistributionUnits of type "http://www.isotc211.org/2005/gco":CodeListValue_Type.
    gco__CodeListValue_x005fType*        MD_x005fDistributionUnits      1;	///< Required element.
/// Element MD_MediumFormatCode of type "http://www.isotc211.org/2005/gco":CodeListValue_Type.
    gco__CodeListValue_x005fType*        MD_x005fMediumFormatCode       1;	///< Required element.
/// Element MD_MediumFormatCode of type "http://www.isotc211.org/2005/gco":CodeListValue_Type.
    gco__CodeListValue_x005fType*        MD_x005fMediumFormatCode       1;	///< Required element.
/// Element MD_MediumNameCode of type "http://www.isotc211.org/2005/gco":CodeListValue_Type.
    gco__CodeListValue_x005fType*        MD_x005fMediumNameCode         1;	///< Required element.
/// Element MD_MediumNameCode of type "http://www.isotc211.org/2005/gco":CodeListValue_Type.
    gco__CodeListValue_x005fType*        MD_x005fMediumNameCode         1;	///< Required element.
/// Element MD_MaintenanceFrequencyCode of type "http://www.isotc211.org/2005/gco":CodeListValue_Type.
    gco__CodeListValue_x005fType*        MD_x005fMaintenanceFrequencyCode 1;	///< Required element.
/// Element MD_MaintenanceFrequencyCode of type "http://www.isotc211.org/2005/gco":CodeListValue_Type.
    gco__CodeListValue_x005fType*        MD_x005fMaintenanceFrequencyCode 1;	///< Required element.
/// Element MD_ScopeCode of type "http://www.isotc211.org/2005/gco":CodeListValue_Type.
    gco__CodeListValue_x005fType*        MD_x005fScopeCode              1;	///< Required element.
/// Element MD_ScopeCode of type "http://www.isotc211.org/2005/gco":CodeListValue_Type.
    gco__CodeListValue_x005fType*        MD_x005fScopeCode              1;	///< Required element.
/// Element LocalisedCharacterString of type "http://www.isotc211.org/2005/gmd":LocalisedCharacterString_Type.
    gmd__LocalisedCharacterString_x005fType*  LocalisedCharacterString       1;	///< Required element.
/// Element LocalisedCharacterString of type "http://www.isotc211.org/2005/gmd":LocalisedCharacterString_Type.
    gmd__LocalisedCharacterString_x005fType*  LocalisedCharacterString       1;	///< Required element.
/// Element LanguageCode of type "http://www.isotc211.org/2005/gco":CodeListValue_Type.
    gco__CodeListValue_x005fType*        LanguageCode                   1;	///< Required element.
/// Element LanguageCode of type "http://www.isotc211.org/2005/gco":CodeListValue_Type.
    gco__CodeListValue_x005fType*        LanguageCode                   1;	///< Required element.
/// Element Country of type "http://www.isotc211.org/2005/gco":CodeListValue_Type.
    gco__CodeListValue_x005fType*        Country                        1;	///< Required element.
/// Element Country of type "http://www.isotc211.org/2005/gco":CodeListValue_Type.
    gco__CodeListValue_x005fType*        Country                        1;	///< Required element.
    }                                    __union_PT_x005fFreeText_x005fPropertyType;
//  END OF CHOICE OF SUBSTITUTIONS
    }>                                   __PT_x005fFreeText_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
    END OF INHERITED FROM gco__CharacterString_x005fPropertyType */
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gmd__PT_x005fFreeText_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd":PT_FreeText.
    gmd__PT_x005fFreeText_x005fType*     PT_x005fFreeText               1;	///< Required element.
    }>                                   __PT_x005fFreeText_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
};

/// "http://www.isotc211.org/2005/gmd":PT_Locale_Type is a complexType with complexContent extension of "http://www.isotc211.org/2005/gco":AbstractObject_Type.
/// class gmd__PT_x005fLocale_x005fType operations:
/// - soap_new_gmd__PT_x005fLocale_x005fType(soap*) allocate
/// - soap_new_gmd__PT_x005fLocale_x005fType(soap*, int num) allocate array
/// - soap_new_req_gmd__PT_x005fLocale_x005fType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__PT_x005fLocale_x005fType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__PT_x005fLocale_x005fType(soap*, gmd__PT_x005fLocale_x005fType*) deserialize from a stream
/// - int soap_write_gmd__PT_x005fLocale_x005fType(soap, gmd__PT_x005fLocale_x005fType*) serialize to a stream
class gmd__PT_x005fLocale_x005fType : public gco__AbstractObject_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
/// Attribute id of type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute uuid of type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/// Element languageCode of type "http://www.isotc211.org/2005/gmd":LanguageCode_PropertyType.
    gmd__LanguageCode_x005fPropertyType*  languageCode                   1;	///< Required element.
/// Element country of type "http://www.isotc211.org/2005/gmd":Country_PropertyType.
    gmd__Country_x005fPropertyType*      country                        0;	///< Optional element.
/// Element characterEncoding of type "http://www.isotc211.org/2005/gmd":MD_CharacterSetCode_PropertyType.
    gmd__MD_x005fCharacterSetCode_x005fPropertyType*  characterEncoding              1;	///< Required element.
};

/// "http://www.isotc211.org/2005/gmd":LocalisedCharacterString_Type is a complexType with simpleContent.
/// class gmd__LocalisedCharacterString_x005fType operations:
/// - soap_new_gmd__LocalisedCharacterString_x005fType(soap*) allocate
/// - soap_new_gmd__LocalisedCharacterString_x005fType(soap*, int num) allocate array
/// - soap_new_req_gmd__LocalisedCharacterString_x005fType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__LocalisedCharacterString_x005fType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__LocalisedCharacterString_x005fType(soap*, gmd__LocalisedCharacterString_x005fType*) deserialize from a stream
/// - int soap_write_gmd__LocalisedCharacterString_x005fType(soap, gmd__LocalisedCharacterString_x005fType*) serialize to a stream
class gmd__LocalisedCharacterString_x005fType : public xsd__anyType
{ public:
/// __item wraps 'xs:string' simpleContent.
    std::string                          __item                        ;
/// Attribute id of type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute locale of type xs:anyURI.
   @xsd__anyURI*                         locale                         0;	///< Optional attribute.
};

/// "http://www.isotc211.org/2005/gmd":LocalisedCharacterString_PropertyType is a complexType with complexContent extension of "http://www.isotc211.org/2005/gco":ObjectReference_PropertyType.
/// class gmd__LocalisedCharacterString_x005fPropertyType operations:
/// - soap_new_gmd__LocalisedCharacterString_x005fPropertyType(soap*) allocate
/// - soap_new_gmd__LocalisedCharacterString_x005fPropertyType(soap*, int num) allocate array
/// - soap_new_req_gmd__LocalisedCharacterString_x005fPropertyType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__LocalisedCharacterString_x005fPropertyType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__LocalisedCharacterString_x005fPropertyType(soap*, gmd__LocalisedCharacterString_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__LocalisedCharacterString_x005fPropertyType(soap, gmd__LocalisedCharacterString_x005fPropertyType*) serialize to a stream
class gmd__LocalisedCharacterString_x005fPropertyType : public gco__ObjectReference_x005fPropertyType
{ public:
/*  INHERITED FROM gco__ObjectReference_x005fPropertyType:
/// Attribute reference "http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute uuidref of type xs:string.
   @std::string*                         uuidref                        0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
    END OF INHERITED FROM gco__ObjectReference_x005fPropertyType */
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __gmd__LocalisedCharacterString_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd":LocalisedCharacterString.
    gmd__LocalisedCharacterString_x005fType*  LocalisedCharacterString       1;	///< Required element.
    }>                                   __LocalisedCharacterString_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
};

/// "http://www.isotc211.org/2005/gco":TypeName_Type is a complexType with complexContent extension of "http://www.isotc211.org/2005/gco":AbstractObject_Type.
/// @brief A TypeName is a LocalName that references either a recordType or object type in some form of schema. The stored value "aName" is the returned value for the "aName()" operation. This is the types name. - For parsing from types (or objects) the parsible name normally uses a "." navigation separator, so that it is of the form [class].[member].[memberOfMember]. ...)
/// class gco__TypeName_x005fType operations:
/// - soap_new_gco__TypeName_x005fType(soap*) allocate
/// - soap_new_gco__TypeName_x005fType(soap*, int num) allocate array
/// - soap_new_req_gco__TypeName_x005fType(soap*, ...) allocate, set required members
/// - soap_new_set_gco__TypeName_x005fType(soap*, ...) allocate, set all public members
/// - int soap_read_gco__TypeName_x005fType(soap*, gco__TypeName_x005fType*) deserialize from a stream
/// - int soap_write_gco__TypeName_x005fType(soap, gco__TypeName_x005fType*) serialize to a stream
class gco__TypeName_x005fType : public gco__AbstractObject_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
/// Attribute id of type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute uuid of type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/// Element aName of type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  aName                          1;	///< Required element.
};

/// "http://www.isotc211.org/2005/gco":MemberName_Type is a complexType with complexContent extension of "http://www.isotc211.org/2005/gco":AbstractObject_Type.
/// @brief A MemberName is a LocalName that references either an attribute slot in a record or recordType or an attribute, operation, or association role in an object instance or type description in some form of schema. The stored value "aName" is the returned value for the "aName()" operation.
/// class gco__MemberName_x005fType operations:
/// - soap_new_gco__MemberName_x005fType(soap*) allocate
/// - soap_new_gco__MemberName_x005fType(soap*, int num) allocate array
/// - soap_new_req_gco__MemberName_x005fType(soap*, ...) allocate, set required members
/// - soap_new_set_gco__MemberName_x005fType(soap*, ...) allocate, set all public members
/// - int soap_read_gco__MemberName_x005fType(soap*, gco__MemberName_x005fType*) deserialize from a stream
/// - int soap_write_gco__MemberName_x005fType(soap, gco__MemberName_x005fType*) serialize to a stream
class gco__MemberName_x005fType : public gco__AbstractObject_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
/// Attribute id of type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute uuid of type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/// Element aName of type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  aName                          1;	///< Required element.
/// Element attributeType of type "http://www.isotc211.org/2005/gco":TypeName_PropertyType.
    gco__TypeName_x005fPropertyType*     attributeType                  1;	///< Required element.
};

/// "http://www.isotc211.org/2005/gco":Multiplicity_Type is a complexType with complexContent extension of "http://www.isotc211.org/2005/gco":AbstractObject_Type.
/// @brief Use to represent the possible cardinality of a relation. Represented by a set of simple multiplicity ranges.
/// class gco__Multiplicity_x005fType operations:
/// - soap_new_gco__Multiplicity_x005fType(soap*) allocate
/// - soap_new_gco__Multiplicity_x005fType(soap*, int num) allocate array
/// - soap_new_req_gco__Multiplicity_x005fType(soap*, ...) allocate, set required members
/// - soap_new_set_gco__Multiplicity_x005fType(soap*, ...) allocate, set all public members
/// - int soap_read_gco__Multiplicity_x005fType(soap*, gco__Multiplicity_x005fType*) deserialize from a stream
/// - int soap_write_gco__Multiplicity_x005fType(soap, gco__Multiplicity_x005fType*) serialize to a stream
class gco__Multiplicity_x005fType : public gco__AbstractObject_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
/// Attribute id of type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute uuid of type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/// Vector of gco__MultiplicityRange_x005fPropertyType* with length 1..unbounded
    std::vector<gco__MultiplicityRange_x005fPropertyType*> range                          1;
};

/// "http://www.isotc211.org/2005/gco":MultiplicityRange_Type is a complexType with complexContent extension of "http://www.isotc211.org/2005/gco":AbstractObject_Type.
/// @brief A component of a multiplicity, consisting of an non-negative lower bound, and a potentially infinite upper bound.
/// class gco__MultiplicityRange_x005fType operations:
/// - soap_new_gco__MultiplicityRange_x005fType(soap*) allocate
/// - soap_new_gco__MultiplicityRange_x005fType(soap*, int num) allocate array
/// - soap_new_req_gco__MultiplicityRange_x005fType(soap*, ...) allocate, set required members
/// - soap_new_set_gco__MultiplicityRange_x005fType(soap*, ...) allocate, set all public members
/// - int soap_read_gco__MultiplicityRange_x005fType(soap*, gco__MultiplicityRange_x005fType*) deserialize from a stream
/// - int soap_write_gco__MultiplicityRange_x005fType(soap, gco__MultiplicityRange_x005fType*) serialize to a stream
class gco__MultiplicityRange_x005fType : public gco__AbstractObject_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
/// Attribute id of type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute uuid of type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/// Element lower of type "http://www.isotc211.org/2005/gco":Integer_PropertyType.
    gco__Integer_x005fPropertyType*      lower                          1;	///< Required element.
/// Element upper of type "http://www.isotc211.org/2005/gco":UnlimitedInteger_PropertyType.
    gco__UnlimitedInteger_x005fPropertyType*  upper                          1;	///< Required element.
};

/// "http://www.isotc211.org/2005/gco":UnlimitedInteger_Type is a complexType with simpleContent.
/// class gco__UnlimitedInteger_x005fType operations:
/// - soap_new_gco__UnlimitedInteger_x005fType(soap*) allocate
/// - soap_new_gco__UnlimitedInteger_x005fType(soap*, int num) allocate array
/// - soap_new_req_gco__UnlimitedInteger_x005fType(soap*, ...) allocate, set required members
/// - soap_new_set_gco__UnlimitedInteger_x005fType(soap*, ...) allocate, set all public members
/// - int soap_read_gco__UnlimitedInteger_x005fType(soap*, gco__UnlimitedInteger_x005fType*) deserialize from a stream
/// - int soap_write_gco__UnlimitedInteger_x005fType(soap, gco__UnlimitedInteger_x005fType*) serialize to a stream
class gco__UnlimitedInteger_x005fType : public xsd__anyType
{ public:
/// __item wraps 'xs:nonNegativeInteger' simpleContent.
    xsd__nonNegativeInteger              __item                        ;
/// Attribute isInfinite of type xs:boolean.
   @bool*                                isInfinite                     0;	///< Optional attribute.
};

/// "http://www.isotc211.org/2005/gco":RecordType_Type is a complexType with simpleContent.
/// class gco__RecordType_x005fType operations:
/// - soap_new_gco__RecordType_x005fType(soap*) allocate
/// - soap_new_gco__RecordType_x005fType(soap*, int num) allocate array
/// - soap_new_req_gco__RecordType_x005fType(soap*, ...) allocate, set required members
/// - soap_new_set_gco__RecordType_x005fType(soap*, ...) allocate, set all public members
/// - int soap_read_gco__RecordType_x005fType(soap*, gco__RecordType_x005fType*) deserialize from a stream
/// - int soap_write_gco__RecordType_x005fType(soap, gco__RecordType_x005fType*) serialize to a stream
class gco__RecordType_x005fType : public xsd__anyType
{ public:
/// __item wraps 'xs:string' simpleContent.
    std::string                          __item                        ;
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
};

/// "http://www.isotc211.org/2005/gco":Binary_Type is a complexType with simpleContent.
/// class gco__Binary_x005fType operations:
/// - soap_new_gco__Binary_x005fType(soap*) allocate
/// - soap_new_gco__Binary_x005fType(soap*, int num) allocate array
/// - soap_new_req_gco__Binary_x005fType(soap*, ...) allocate, set required members
/// - soap_new_set_gco__Binary_x005fType(soap*, ...) allocate, set all public members
/// - int soap_read_gco__Binary_x005fType(soap*, gco__Binary_x005fType*) deserialize from a stream
/// - int soap_write_gco__Binary_x005fType(soap, gco__Binary_x005fType*) serialize to a stream
class gco__Binary_x005fType : public xsd__anyType
{ public:
/// __item wraps 'xs:string' simpleContent.
    std::string                          __item                        ;
/// Attribute src of type xs:anyURI.
   @xsd__anyURI*                         src                            0;	///< Optional attribute.
};

/// "http://www.isotc211.org/2005/gco":CodeListValue_Type is a complexType with simpleContent.
/// class gco__CodeListValue_x005fType operations:
/// - soap_new_gco__CodeListValue_x005fType(soap*) allocate
/// - soap_new_gco__CodeListValue_x005fType(soap*, int num) allocate array
/// - soap_new_req_gco__CodeListValue_x005fType(soap*, ...) allocate, set required members
/// - soap_new_set_gco__CodeListValue_x005fType(soap*, ...) allocate, set all public members
/// - int soap_read_gco__CodeListValue_x005fType(soap*, gco__CodeListValue_x005fType*) deserialize from a stream
/// - int soap_write_gco__CodeListValue_x005fType(soap, gco__CodeListValue_x005fType*) serialize to a stream
class gco__CodeListValue_x005fType : public xsd__anyType
{ public:
/// __item wraps 'xs:string' simpleContent.
    std::string                          __item                        ;
/// Attribute codeList of type xs:anyURI.
   @xsd__anyURI                          codeList                       1;	///< Required attribute.
/// Attribute codeListValue of type xs:anyURI.
   @xsd__anyURI                          codeListValue                  1;	///< Required attribute.
/// Attribute codeSpace of type xs:anyURI.
   @xsd__anyURI*                         codeSpace                      0;	///< Optional attribute.
};

/// "http://inspire.ec.europa.eu/schemas/plu/3.0":ZoningElementType is a complexType with complexContent extension of "http://www.opengis.net/gml/3.2":AbstractFeatureType.
/// class plu__ZoningElementType operations:
/// - soap_new_plu__ZoningElementType(soap*) allocate
/// - soap_new_plu__ZoningElementType(soap*, int num) allocate array
/// - soap_new_req_plu__ZoningElementType(soap*, ...) allocate, set required members
/// - soap_new_set_plu__ZoningElementType(soap*, ...) allocate, set all public members
/// - int soap_read_plu__ZoningElementType(soap*, plu__ZoningElementType*) deserialize from a stream
/// - int soap_write_plu__ZoningElementType(soap, plu__ZoningElementType*) serialize to a stream
class plu__ZoningElementType : public gml__AbstractFeatureType
{ public:
/*  INHERITED FROM gml__AbstractGMLType:
/// GROUP <xs:group name="StandardObjectProperties">
/// Vector of gml__MetaDataPropertyType* element refs with length 0..unbounded
    std::vector<gml__MetaDataPropertyType*> metaDataProperty               0;
/// @brief The value of this property is a text description of the object. gml:description uses gml:StringOrRefType as its content model, so it may contain a simple text string content, or carry a reference to an external description. The use of gml:description to reference an external description has been deprecated and replaced by the gml:descriptionReference property.
/// Element reference "http://www.opengis.net/gml/3.2":description.
    gml__StringOrRefType*                description                    0;	///< Optional element.
/// @brief The value of this property is a remote text description of the object. The xlink:href attribute of the gml:descriptionReference property references the external description.
/// Element reference "http://www.opengis.net/gml/3.2":descriptionReference.
    gml__ReferenceType*                  descriptionReference           0;	///< Optional element.
/// @brief Often, a special identifier is assigned to an object by the maintaining authority with the intention that it is used in references to the object For such cases, the codeSpace shall be provided. That identifier is usually unique either globally or within an application domain. gml:identifier is a pre-defined property for such identifiers.
/// Element reference "http://www.opengis.net/gml/3.2":identifier.
    gml__CodeWithAuthorityType*          identifier                     0;	///< Optional element.
/// @brief The gml:name property provides a label or identifier for the object, commonly a descriptive name. An object may have several names, typically assigned by different authorities. gml:name uses the gml:CodeType content model. The authority for a name is indicated by the value of its (optional) codeSpace attribute. The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace. In common usage there will be one name per authority, so a processing application may select the name from its preferred codeSpace.
/// Vector of gml__CodeType* element refs with length 0..unbounded
    std::vector<gml__CodeType*         > name                           0;
//  END OF GROUP
/// Attribute reference "http://www.opengis.net/gml/3.2":id.
/// @brief The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.
   @xsd__ID                              id                             1;	///< Required attribute.
    END OF INHERITED FROM gml__AbstractGMLType */
/*  INHERITED FROM gml__AbstractFeatureType:
/// @brief This property describes the minimum bounding box or rectangle that encloses the entire feature.
/// Element reference "http://www.opengis.net/gml/3.2":boundedBy.
    gml__BoundingShapeType*              boundedBy                      0;	///< Optional element.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="location" minOccurs="0"> with elements <priorityLocation>
   $int                                  __unionlocation                0;	///< Union _gml__union_ZoningElementType selector: set to SOAP_UNION__gml__union_ZoningElementType_<fieldname> or 0
/// Union for substitutionGroup="location"
    union _gml__union_ZoningElementType
    {
/// Element reference "http://www.opengis.net/gml/3.2":location.
    gml__LocationPropertyType*           location                       0;	///< Optional element.
/// Element priorityLocation of type "http://www.opengis.net/gml/3.2":PriorityLocationPropertyType.
    gml__PriorityLocationPropertyType*   priorityLocation               1;	///< Required element.
    }                                    __union_ZoningElementType     ;
//  END OF CHOICE OF SUBSTITUTIONS
    END OF INHERITED FROM gml__AbstractFeatureType */
/// @brief -- Definition -- External object identifier of the spatial object. -- Description -- An external object identifier is a unique object identifier published by the responsible body, which may be used by external applications to reference the spatial object. The identifier is an identifier of the spatial object, not an identifier of the real-world phenomenon.
/// Element inspireId of type "http://inspire.ec.europa.eu/schemas/base/3.3":IdentifierPropertyType.
    base__IdentifierPropertyType*        inspireId                      1;	///< Required element.
/// @brief -- Definition -- Geometry of this zoning element
/// Element geometry of type "http://www.opengis.net/gml/3.2":MultiSurfacePropertyType.
    gml__MultiSurfacePropertyType*       geometry                       1;	///< Required element.
/// @brief -- Definition -- The date when the phenomenon started to exist in the real world.
/// class _plu__ZoningElementType_validFrom operations:
/// - soap_new__plu__ZoningElementType_validFrom(soap*) allocate
/// - soap_new__plu__ZoningElementType_validFrom(soap*, int num) allocate array
/// - soap_new_req__plu__ZoningElementType_validFrom(soap*, ...) allocate, set required members
/// - soap_new_set__plu__ZoningElementType_validFrom(soap*, ...) allocate, set all public members
/// - int soap_read__plu__ZoningElementType_validFrom(soap*, _plu__ZoningElementType_validFrom*) deserialize from a stream
/// - int soap_write__plu__ZoningElementType_validFrom(soap, _plu__ZoningElementType_validFrom*) serialize to a stream
    class _plu__ZoningElementType_validFrom
    {
/// __item wraps 'xs:date' simpleContent.
    xsd__date                            __item                        ;
/// Attribute nilReason of type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
    }                                   *validFrom                      0;	///< Nillable pointer.
/// @brief -- Definition -- The time from which the phenomenon no longer exists in the real world.
/// class _plu__ZoningElementType_validTo operations:
/// - soap_new__plu__ZoningElementType_validTo(soap*) allocate
/// - soap_new__plu__ZoningElementType_validTo(soap*, int num) allocate array
/// - soap_new_req__plu__ZoningElementType_validTo(soap*, ...) allocate, set required members
/// - soap_new_set__plu__ZoningElementType_validTo(soap*, ...) allocate, set all public members
/// - int soap_read__plu__ZoningElementType_validTo(soap*, _plu__ZoningElementType_validTo*) deserialize from a stream
/// - int soap_write__plu__ZoningElementType_validTo(soap, _plu__ZoningElementType_validTo*) serialize to a stream
    class _plu__ZoningElementType_validTo
    {
/// __item wraps 'xs:date' simpleContent.
    xsd__date                            __item                        ;
/// Attribute nilReason of type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
    }                                   *validTo                        0;	///< Nillable pointer.
/// @brief -- Definition -- Land use HILUCS class that is dominant in this land use object.
/// Vector of gml__ReferenceType* with length 1..unbounded
    std::vector<gml__ReferenceType*    > hilucsLandUse                  1;
/// @brief -- Definition -- Date and time at which this version of the spatial object was inserted or changed in the spatial data set.
/// class _plu__ZoningElementType_beginLifespanVersion operations:
/// - soap_new__plu__ZoningElementType_beginLifespanVersion(soap*) allocate
/// - soap_new__plu__ZoningElementType_beginLifespanVersion(soap*, int num) allocate array
/// - soap_new_req__plu__ZoningElementType_beginLifespanVersion(soap*, ...) allocate, set required members
/// - soap_new_set__plu__ZoningElementType_beginLifespanVersion(soap*, ...) allocate, set all public members
/// - int soap_read__plu__ZoningElementType_beginLifespanVersion(soap*, _plu__ZoningElementType_beginLifespanVersion*) deserialize from a stream
/// - int soap_write__plu__ZoningElementType_beginLifespanVersion(soap, _plu__ZoningElementType_beginLifespanVersion*) serialize to a stream
    class _plu__ZoningElementType_beginLifespanVersion
    {
/// __item wraps 'xs:dateTime' simpleContent.
    time_t                               __item                        ;
/// Attribute nilReason of type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
    }                                   *beginLifespanVersion          ;	///< Nillable pointer.
/// @brief -- Name -- land use presence -- Definition -- Actual presence of a land use HILUCS category wihtin the object.
/// class _plu__ZoningElementType_hilucsPresence operations:
/// - soap_new__plu__ZoningElementType_hilucsPresence(soap*) allocate
/// - soap_new__plu__ZoningElementType_hilucsPresence(soap*, int num) allocate array
/// - soap_new_req__plu__ZoningElementType_hilucsPresence(soap*, ...) allocate, set required members
/// - soap_new_set__plu__ZoningElementType_hilucsPresence(soap*, ...) allocate, set all public members
/// - int soap_read__plu__ZoningElementType_hilucsPresence(soap*, _plu__ZoningElementType_hilucsPresence*) deserialize from a stream
/// - int soap_write__plu__ZoningElementType_hilucsPresence(soap, _plu__ZoningElementType_hilucsPresence*) serialize to a stream
    class _plu__ZoningElementType_hilucsPresence
    {
/// @brief -- Name -- HILUCS presence -- Definition -- Presence of one or several HILUCS values in an area, indicated either as the percentage covered for each value or as the values listed in their order of importance. -- Description -- The HILUCS presence data type enables the provision of information on land uses inside one land use object in order to collect more than one land use existence perfectly identifiable by importance order or percentages. NOTE 1: The order of land use value presence without percentages enable providing an order of dominance/importance of each land use present in the land use object NOTE 2: The sum of the percentages can be below 100%, or above. The order is provided according to the respective importance when the percentages are not known.
/// Element reference "http://inspire.ec.europa.eu/schemas/lunom/3.0":HILUCSPresence.
    lunom__HILUCSPresenceType*           lunom__HILUCSPresence          1;	///< Required element.
/// Attribute nilReason of type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
    }                                   *hilucsPresence                ;	///< Nillable pointer.
/// @brief -- Definition -- Land Use Category according to the nomenclature specific to this data set. -- Description -- Reference to an entry in the classfication that is part of the SpecificLandUseClassification.
/// Vector of gml__ReferenceType* with length 1..unbounded
    std::vector<gml__ReferenceType*    > specificLandUse               ;	///< Nillable pointer.
/// @brief -- Name -- land use presence -- Definition -- Actual presence of a land use category wihtin the object.
/// class _plu__ZoningElementType_specificPresence operations:
/// - soap_new__plu__ZoningElementType_specificPresence(soap*) allocate
/// - soap_new__plu__ZoningElementType_specificPresence(soap*, int num) allocate array
/// - soap_new_req__plu__ZoningElementType_specificPresence(soap*, ...) allocate, set required members
/// - soap_new_set__plu__ZoningElementType_specificPresence(soap*, ...) allocate, set all public members
/// - int soap_read__plu__ZoningElementType_specificPresence(soap*, _plu__ZoningElementType_specificPresence*) deserialize from a stream
/// - int soap_write__plu__ZoningElementType_specificPresence(soap, _plu__ZoningElementType_specificPresence*) serialize to a stream
    class _plu__ZoningElementType_specificPresence
    {
/// @brief -- Name -- specific presence -- Definition -- Presence of one or several land use classification values in an area according to the code list provided by the data provider, indicated either as the percentage covered for each value or as the values listed in their order of importance. -- Description -- NOTE 1: The order of land use value presence without percentages enable providing an order of dominance/importance of each land use present in the land use object NOTE 2: The sum of the percentages can be below 100%, or above. The order is provided according to the respective importance when the percentages are not known.
/// Element reference "http://inspire.ec.europa.eu/schemas/lunom/3.0":SpecificPresence.
    lunom__SpecificPresenceType*         lunom__SpecificPresence        1;	///< Required element.
/// Attribute nilReason of type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
    }                                   *specificPresence              ;	///< Nillable pointer.
/// @brief -- Definition -- Legal nature of the land use indication. -- Description -- NOTE Indicates whether the land use indication is legally binding or not.
/// Element regulationNature of type "http://www.opengis.net/gml/3.2":ReferenceType.
    gml__ReferenceType*                  regulationNature               1;	///< Required element.
/// @brief -- Definition -- Date and time at which this version of the spatial object was superseded or retired in the spatial data set.
/// class _plu__ZoningElementType_endLifespanVersion operations:
/// - soap_new__plu__ZoningElementType_endLifespanVersion(soap*) allocate
/// - soap_new__plu__ZoningElementType_endLifespanVersion(soap*, int num) allocate array
/// - soap_new_req__plu__ZoningElementType_endLifespanVersion(soap*, ...) allocate, set required members
/// - soap_new_set__plu__ZoningElementType_endLifespanVersion(soap*, ...) allocate, set all public members
/// - int soap_read__plu__ZoningElementType_endLifespanVersion(soap*, _plu__ZoningElementType_endLifespanVersion*) deserialize from a stream
/// - int soap_write__plu__ZoningElementType_endLifespanVersion(soap, _plu__ZoningElementType_endLifespanVersion*) serialize to a stream
    class _plu__ZoningElementType_endLifespanVersion
    {
/// __item wraps 'xs:dateTime' simpleContent.
    time_t                               __item                        ;
/// Attribute nilReason of type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
    }                                   *endLifespanVersion             0;	///< Nillable pointer.
/// @brief -- Definition -- General indication of the step of the planning process that the zoning element is undergoing. -- Description -- NOTE This enumeration contains values that are common to most planning systems.
/// Element processStepGeneral of type "http://www.opengis.net/gml/3.2":ReferenceType.
    gml__ReferenceType*                  processStepGeneral            ;	///< Nillable pointer.
/// @brief -- Name -- background map -- Definition -- Identification of the background map that has been used for constructing this zoning element.
/// class _plu__ZoningElementType_backgroundMap operations:
/// - soap_new__plu__ZoningElementType_backgroundMap(soap*) allocate
/// - soap_new__plu__ZoningElementType_backgroundMap(soap*, int num) allocate array
/// - soap_new_req__plu__ZoningElementType_backgroundMap(soap*, ...) allocate, set required members
/// - soap_new_set__plu__ZoningElementType_backgroundMap(soap*, ...) allocate, set all public members
/// - int soap_read__plu__ZoningElementType_backgroundMap(soap*, _plu__ZoningElementType_backgroundMap*) deserialize from a stream
/// - int soap_write__plu__ZoningElementType_backgroundMap(soap, _plu__ZoningElementType_backgroundMap*) serialize to a stream
    class _plu__ZoningElementType_backgroundMap
    {
/// @brief -- Definition -- Information regarding the map that has been used as a background in the definition of a spatial plan, a zoning element or a supplementary regulation.
/// Element reference "http://inspire.ec.europa.eu/schemas/plu/3.0":BackgroundMapValue.
    plu__BackgroundMapValueType*         BackgroundMapValue             1;	///< Required element.
/// Attribute nilReason of type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
    }                                   *backgroundMap                 ;	///< Nillable pointer.
/// @brief -- Definition -- Specifications about the dimensioning of the urban developments.
/// Vector of dimensioningIndication with length 0..unbounded
    std::vector<
/// class _plu__ZoningElementType_dimensioningIndication operations:
/// - soap_new__plu__ZoningElementType_dimensioningIndication(soap*) allocate
/// - soap_new__plu__ZoningElementType_dimensioningIndication(soap*, int num) allocate array
/// - soap_new_req__plu__ZoningElementType_dimensioningIndication(soap*, ...) allocate, set required members
/// - soap_new_set__plu__ZoningElementType_dimensioningIndication(soap*, ...) allocate, set all public members
/// - int soap_read__plu__ZoningElementType_dimensioningIndication(soap*, _plu__ZoningElementType_dimensioningIndication*) deserialize from a stream
/// - int soap_write__plu__ZoningElementType_dimensioningIndication(soap, _plu__ZoningElementType_dimensioningIndication*) serialize to a stream
    class _plu__ZoningElementType_dimensioningIndication
    {
/// @brief -- Name -- Dimension Indication -- Definition -- Specifications about the dimensioning of the urban developments.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="DimensioningIndicationValue"> with elements <DimensioningIndicationMeasureValue> <DimensioningIndicationIntegerValue> <DimensioningIndicationCharacterValue> <DimensioningIndicationRealValue>
   $int                                  __unionDimensioningIndicationValue 0;	///< Union _plu__union_ZoningElementType_dimensioningIndication selector: set to SOAP_UNION__plu__union_ZoningElementType_dimensioningIndication_<fieldname>
/// Union for substitutionGroup="DimensioningIndicationValue"
    union _plu__union_ZoningElementType_dimensioningIndication
    {
/// @brief -- Name -- Dimension Indication -- Definition -- Specifications about the dimensioning of the urban developments.
/// Element reference "http://inspire.ec.europa.eu/schemas/plu/3.0":DimensioningIndicationValue.
    plu__DimensioningIndicationValueType*  DimensioningIndicationValue    1;	///< Required element.
/// @brief -- Name -- dimension indication measure value -- Definition -- Dimensioning indication whose value is a measure.
/// Element DimensioningIndicationMeasureValue of type "http://inspire.ec.europa.eu/schemas/plu/3.0":DimensioningIndicationMeasureValueType.
    plu__DimensioningIndicationMeasureValueType*  DimensioningIndicationMeasureValue 1;	///< Required element.
/// @brief -- Name -- dimension indication integer value -- Definition -- Dimensioning indication whose value is of type integer.
/// Element DimensioningIndicationIntegerValue of type "http://inspire.ec.europa.eu/schemas/plu/3.0":DimensioningIndicationIntegerValueType.
    plu__DimensioningIndicationIntegerValueType*  DimensioningIndicationIntegerValue 1;	///< Required element.
/// @brief -- Name -- dimension indication character value -- Definition -- Dimensioning indication whose value is of type CharacterString.
/// Element DimensioningIndicationCharacterValue of type "http://inspire.ec.europa.eu/schemas/plu/3.0":DimensioningIndicationCharacterValueType.
    plu__DimensioningIndicationCharacterValueType*  DimensioningIndicationCharacterValue 1;	///< Required element.
/// @brief -- Name -- dimension indication real value -- Definition -- Dimensioning indication whose value is a floating point number.
/// Element DimensioningIndicationRealValue of type "http://inspire.ec.europa.eu/schemas/plu/3.0":DimensioningIndicationRealValueType.
    plu__DimensioningIndicationRealValueType*  DimensioningIndicationRealValue 1;	///< Required element.
    }                                    __union_ZoningElementType_dimensioningIndication;
//  END OF CHOICE OF SUBSTITUTIONS
/// Attribute nilReason of type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
    }>                                  *dimensioningIndication         0;	///< Nillable pointer.
/// @brief -- Definition -- Textual Regulation that is part of this zoning element.
/// Vector of gml__ReferenceType* with length 1..unbounded
    std::vector<gml__ReferenceType*    > officialDocument              ;	///< Nillable pointer.
/// @brief -- Definition -- SpatialPlan which this ZoningElement belongs to.
/// Element plan of type "http://www.opengis.net/gml/3.2":ReferenceType.
    gml__ReferenceType*                  plan                           1;	///< Required element.
};

/// "http://inspire.ec.europa.eu/schemas/plu/3.0":OfficialDocumentationType is a complexType with complexContent extension of "http://www.opengis.net/gml/3.2":AbstractFeatureType.
/// class plu__OfficialDocumentationType operations:
/// - soap_new_plu__OfficialDocumentationType(soap*) allocate
/// - soap_new_plu__OfficialDocumentationType(soap*, int num) allocate array
/// - soap_new_req_plu__OfficialDocumentationType(soap*, ...) allocate, set required members
/// - soap_new_set_plu__OfficialDocumentationType(soap*, ...) allocate, set all public members
/// - int soap_read_plu__OfficialDocumentationType(soap*, plu__OfficialDocumentationType*) deserialize from a stream
/// - int soap_write_plu__OfficialDocumentationType(soap, plu__OfficialDocumentationType*) serialize to a stream
class plu__OfficialDocumentationType : public gml__AbstractFeatureType
{ public:
/*  INHERITED FROM gml__AbstractGMLType:
/// GROUP <xs:group name="StandardObjectProperties">
/// Vector of gml__MetaDataPropertyType* element refs with length 0..unbounded
    std::vector<gml__MetaDataPropertyType*> metaDataProperty               0;
/// @brief The value of this property is a text description of the object. gml:description uses gml:StringOrRefType as its content model, so it may contain a simple text string content, or carry a reference to an external description. The use of gml:description to reference an external description has been deprecated and replaced by the gml:descriptionReference property.
/// Element reference "http://www.opengis.net/gml/3.2":description.
    gml__StringOrRefType*                description                    0;	///< Optional element.
/// @brief The value of this property is a remote text description of the object. The xlink:href attribute of the gml:descriptionReference property references the external description.
/// Element reference "http://www.opengis.net/gml/3.2":descriptionReference.
    gml__ReferenceType*                  descriptionReference           0;	///< Optional element.
/// @brief Often, a special identifier is assigned to an object by the maintaining authority with the intention that it is used in references to the object For such cases, the codeSpace shall be provided. That identifier is usually unique either globally or within an application domain. gml:identifier is a pre-defined property for such identifiers.
/// Element reference "http://www.opengis.net/gml/3.2":identifier.
    gml__CodeWithAuthorityType*          identifier                     0;	///< Optional element.
/// @brief The gml:name property provides a label or identifier for the object, commonly a descriptive name. An object may have several names, typically assigned by different authorities. gml:name uses the gml:CodeType content model. The authority for a name is indicated by the value of its (optional) codeSpace attribute. The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace. In common usage there will be one name per authority, so a processing application may select the name from its preferred codeSpace.
/// Vector of gml__CodeType* element refs with length 0..unbounded
    std::vector<gml__CodeType*         > name                           0;
//  END OF GROUP
/// Attribute reference "http://www.opengis.net/gml/3.2":id.
/// @brief The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.
   @xsd__ID                              id                             1;	///< Required attribute.
    END OF INHERITED FROM gml__AbstractGMLType */
/*  INHERITED FROM gml__AbstractFeatureType:
/// @brief This property describes the minimum bounding box or rectangle that encloses the entire feature.
/// Element reference "http://www.opengis.net/gml/3.2":boundedBy.
    gml__BoundingShapeType*              boundedBy                      0;	///< Optional element.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="location" minOccurs="0"> with elements <priorityLocation>
   $int                                  __unionlocation                0;	///< Union _gml__union_OfficialDocumentationType selector: set to SOAP_UNION__gml__union_OfficialDocumentationType_<fieldname> or 0
/// Union for substitutionGroup="location"
    union _gml__union_OfficialDocumentationType
    {
/// Element reference "http://www.opengis.net/gml/3.2":location.
    gml__LocationPropertyType*           location                       0;	///< Optional element.
/// Element priorityLocation of type "http://www.opengis.net/gml/3.2":PriorityLocationPropertyType.
    gml__PriorityLocationPropertyType*   priorityLocation               1;	///< Required element.
    }                                    __union_OfficialDocumentationType;
//  END OF CHOICE OF SUBSTITUTIONS
    END OF INHERITED FROM gml__AbstractFeatureType */
/// @brief -- Definition -- External object identifier of this spatial textual regulation. -- Description -- NOTE An external object identifier is a unique object identifier published by the responsible body, which may be used by external applications to reference the spatial object. The identifier is an identifier of the spatial object, not an identifier of the real-world phenomenon.
/// Element inspireId of type "http://inspire.ec.europa.eu/schemas/base/3.3":IdentifierPropertyType.
    base__IdentifierPropertyType*        inspireId                      1;	///< Required element.
/// @brief -- Definition -- Reference to the document that contains the text of the regulation.
/// class _plu__OfficialDocumentationType_legislationCitation operations:
/// - soap_new__plu__OfficialDocumentationType_legislationCitation(soap*) allocate
/// - soap_new__plu__OfficialDocumentationType_legislationCitation(soap*, int num) allocate array
/// - soap_new_req__plu__OfficialDocumentationType_legislationCitation(soap*, ...) allocate, set required members
/// - soap_new_set__plu__OfficialDocumentationType_legislationCitation(soap*, ...) allocate, set all public members
/// - int soap_read__plu__OfficialDocumentationType_legislationCitation(soap*, _plu__OfficialDocumentationType_legislationCitation*) deserialize from a stream
/// - int soap_write__plu__OfficialDocumentationType_legislationCitation(soap, _plu__OfficialDocumentationType_legislationCitation*) serialize to a stream
    class _plu__OfficialDocumentationType_legislationCitation
    {
/// INHERITED FROM gml__AbstractMemberType:
/// Attribute owns of type xs:boolean.
   @bool                                 owns                           0 = false;	///< Default value="false".
//  END OF INHERITED FROM gml__AbstractMemberType
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __plu__OfficialDocumentationType_legislationCitation_sequence
    {
/// @brief -- Name -- legislation citation -- Definition -- Citation for the purposes of unambiguously referencing a legal act or a specific part of a legal act.
/// Element reference "http://inspire.ec.europa.eu/schemas/base2/1.0":LegislationCitation.
    base2__LegislationCitationType*      base2__LegislationCitation     1;	///< Required element.
    }>                                   __OfficialDocumentationType_legislationCitation_sequence 0;
//  END OF SEQUENCE
/// Attribute nilReason of type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         gml__remoteSchema              0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
    }                                   *legislationCitation            0;	///< Nillable pointer.
/// @brief -- Definition -- Text of the regulation.
/// class _plu__OfficialDocumentationType_regulationText operations:
/// - soap_new__plu__OfficialDocumentationType_regulationText(soap*) allocate
/// - soap_new__plu__OfficialDocumentationType_regulationText(soap*, int num) allocate array
/// - soap_new_req__plu__OfficialDocumentationType_regulationText(soap*, ...) allocate, set required members
/// - soap_new_set__plu__OfficialDocumentationType_regulationText(soap*, ...) allocate, set all public members
/// - int soap_read__plu__OfficialDocumentationType_regulationText(soap*, _plu__OfficialDocumentationType_regulationText*) deserialize from a stream
/// - int soap_write__plu__OfficialDocumentationType_regulationText(soap, _plu__OfficialDocumentationType_regulationText*) serialize to a stream
    class _plu__OfficialDocumentationType_regulationText
    {
/// __item wraps 'xs:string' simpleContent.
    std::string                          __item                        ;
/// Attribute nilReason of type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
    }                                   *regulationText                 0;	///< Nillable pointer.
/// @brief -- Definition -- Citation of scanned plans and structural drawings which may sometimes be geo-referenced or not,. E.g. raster images, vector drawings or scanned text.
/// class _plu__OfficialDocumentationType_planDocument operations:
/// - soap_new__plu__OfficialDocumentationType_planDocument(soap*) allocate
/// - soap_new__plu__OfficialDocumentationType_planDocument(soap*, int num) allocate array
/// - soap_new_req__plu__OfficialDocumentationType_planDocument(soap*, ...) allocate, set required members
/// - soap_new_set__plu__OfficialDocumentationType_planDocument(soap*, ...) allocate, set all public members
/// - int soap_read__plu__OfficialDocumentationType_planDocument(soap*, _plu__OfficialDocumentationType_planDocument*) deserialize from a stream
/// - int soap_write__plu__OfficialDocumentationType_planDocument(soap, _plu__OfficialDocumentationType_planDocument*) serialize to a stream
    class _plu__OfficialDocumentationType_planDocument
    {
/// INHERITED FROM gml__AbstractMemberType:
/// Attribute owns of type xs:boolean.
   @bool                                 owns                           0 = false;	///< Default value="false".
//  END OF INHERITED FROM gml__AbstractMemberType
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __plu__OfficialDocumentationType_planDocument_sequence
    {
/// @brief -- Name -- document citation -- Definition -- Citation for the purposes of unambiguously referencing a document.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="DocumentCitation"> with elements <LegislationCitation>
   $int                                  __unionDocumentCitation        0;	///< Union _plu__union_OfficialDocumentationType_planDocument selector: set to SOAP_UNION__plu__union_OfficialDocumentationType_planDocument_<fieldname>
/// Union for substitutionGroup="DocumentCitation"
    union _plu__union_OfficialDocumentationType_planDocument
    {
/// @brief -- Name -- document citation -- Definition -- Citation for the purposes of unambiguously referencing a document.
/// Element reference "http://inspire.ec.europa.eu/schemas/base2/1.0":DocumentCitation.
    base2__DocumentCitationType*         base2__DocumentCitation        1;	///< Required element.
/// @brief -- Name -- legislation citation -- Definition -- Citation for the purposes of unambiguously referencing a legal act or a specific part of a legal act.
/// Element LegislationCitation of type "http://inspire.ec.europa.eu/schemas/base2/1.0":LegislationCitationType.
    base2__LegislationCitationType*      LegislationCitation            1;	///< Required element.
    }                                    __union_OfficialDocumentationType_planDocument;
//  END OF CHOICE OF SUBSTITUTIONS
    }>                                   __OfficialDocumentationType_planDocument_sequence 0;
//  END OF SEQUENCE
/// Attribute nilReason of type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         gml__remoteSchema              0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
    }                                   *planDocument                   0;	///< Nillable pointer.
};

/// "http://inspire.ec.europa.eu/schemas/plu/3.0":SupplementaryRegulationType is a complexType with complexContent extension of "http://www.opengis.net/gml/3.2":AbstractFeatureType.
/// class plu__SupplementaryRegulationType operations:
/// - soap_new_plu__SupplementaryRegulationType(soap*) allocate
/// - soap_new_plu__SupplementaryRegulationType(soap*, int num) allocate array
/// - soap_new_req_plu__SupplementaryRegulationType(soap*, ...) allocate, set required members
/// - soap_new_set_plu__SupplementaryRegulationType(soap*, ...) allocate, set all public members
/// - int soap_read_plu__SupplementaryRegulationType(soap*, plu__SupplementaryRegulationType*) deserialize from a stream
/// - int soap_write_plu__SupplementaryRegulationType(soap, plu__SupplementaryRegulationType*) serialize to a stream
class plu__SupplementaryRegulationType : public gml__AbstractFeatureType
{ public:
/*  INHERITED FROM gml__AbstractGMLType:
/// GROUP <xs:group name="StandardObjectProperties">
/// Vector of gml__MetaDataPropertyType* element refs with length 0..unbounded
    std::vector<gml__MetaDataPropertyType*> metaDataProperty               0;
/// @brief The value of this property is a text description of the object. gml:description uses gml:StringOrRefType as its content model, so it may contain a simple text string content, or carry a reference to an external description. The use of gml:description to reference an external description has been deprecated and replaced by the gml:descriptionReference property.
/// Element reference "http://www.opengis.net/gml/3.2":description.
    gml__StringOrRefType*                description                    0;	///< Optional element.
/// @brief The value of this property is a remote text description of the object. The xlink:href attribute of the gml:descriptionReference property references the external description.
/// Element reference "http://www.opengis.net/gml/3.2":descriptionReference.
    gml__ReferenceType*                  descriptionReference           0;	///< Optional element.
/// @brief Often, a special identifier is assigned to an object by the maintaining authority with the intention that it is used in references to the object For such cases, the codeSpace shall be provided. That identifier is usually unique either globally or within an application domain. gml:identifier is a pre-defined property for such identifiers.
/// Element reference "http://www.opengis.net/gml/3.2":identifier.
    gml__CodeWithAuthorityType*          identifier                     0;	///< Optional element.
/// @brief The gml:name property provides a label or identifier for the object, commonly a descriptive name. An object may have several names, typically assigned by different authorities. gml:name uses the gml:CodeType content model. The authority for a name is indicated by the value of its (optional) codeSpace attribute. The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace. In common usage there will be one name per authority, so a processing application may select the name from its preferred codeSpace.
/// Vector of gml__CodeType* element refs with length 0..unbounded
    std::vector<gml__CodeType*         > name                           0;
//  END OF GROUP
/// Attribute reference "http://www.opengis.net/gml/3.2":id.
/// @brief The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.
   @xsd__ID                              id                             1;	///< Required attribute.
    END OF INHERITED FROM gml__AbstractGMLType */
/*  INHERITED FROM gml__AbstractFeatureType:
/// @brief This property describes the minimum bounding box or rectangle that encloses the entire feature.
/// Element reference "http://www.opengis.net/gml/3.2":boundedBy.
    gml__BoundingShapeType*              boundedBy                      0;	///< Optional element.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="location" minOccurs="0"> with elements <priorityLocation>
   $int                                  __unionlocation                0;	///< Union _gml__union_SupplementaryRegulationType selector: set to SOAP_UNION__gml__union_SupplementaryRegulationType_<fieldname> or 0
/// Union for substitutionGroup="location"
    union _gml__union_SupplementaryRegulationType
    {
/// Element reference "http://www.opengis.net/gml/3.2":location.
    gml__LocationPropertyType*           location                       0;	///< Optional element.
/// Element priorityLocation of type "http://www.opengis.net/gml/3.2":PriorityLocationPropertyType.
    gml__PriorityLocationPropertyType*   priorityLocation               1;	///< Required element.
    }                                    __union_SupplementaryRegulationType;
//  END OF CHOICE OF SUBSTITUTIONS
    END OF INHERITED FROM gml__AbstractFeatureType */
/// @brief -- Definition -- First date at which this version of this supplementary regulation is valid in reality.
/// class _plu__SupplementaryRegulationType_validFrom operations:
/// - soap_new__plu__SupplementaryRegulationType_validFrom(soap*) allocate
/// - soap_new__plu__SupplementaryRegulationType_validFrom(soap*, int num) allocate array
/// - soap_new_req__plu__SupplementaryRegulationType_validFrom(soap*, ...) allocate, set required members
/// - soap_new_set__plu__SupplementaryRegulationType_validFrom(soap*, ...) allocate, set all public members
/// - int soap_read__plu__SupplementaryRegulationType_validFrom(soap*, _plu__SupplementaryRegulationType_validFrom*) deserialize from a stream
/// - int soap_write__plu__SupplementaryRegulationType_validFrom(soap, _plu__SupplementaryRegulationType_validFrom*) serialize to a stream
    class _plu__SupplementaryRegulationType_validFrom
    {
/// __item wraps 'xs:date' simpleContent.
    xsd__date                            __item                        ;
/// Attribute nilReason of type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
    }                                   *validFrom                      0;	///< Nillable pointer.
/// @brief -- Definition -- The time from which the supplementary regulation is no longer valid.
/// class _plu__SupplementaryRegulationType_validTo operations:
/// - soap_new__plu__SupplementaryRegulationType_validTo(soap*) allocate
/// - soap_new__plu__SupplementaryRegulationType_validTo(soap*, int num) allocate array
/// - soap_new_req__plu__SupplementaryRegulationType_validTo(soap*, ...) allocate, set required members
/// - soap_new_set__plu__SupplementaryRegulationType_validTo(soap*, ...) allocate, set all public members
/// - int soap_read__plu__SupplementaryRegulationType_validTo(soap*, _plu__SupplementaryRegulationType_validTo*) deserialize from a stream
/// - int soap_write__plu__SupplementaryRegulationType_validTo(soap, _plu__SupplementaryRegulationType_validTo*) serialize to a stream
    class _plu__SupplementaryRegulationType_validTo
    {
/// __item wraps 'xs:date' simpleContent.
    xsd__date                            __item                        ;
/// Attribute nilReason of type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
    }                                   *validTo                        0;	///< Nillable pointer.
/// @brief -- Definition -- Reference to a category of supplementary regulation provided in a specific nomenclature of supplementary regulations provided by the data provider.
/// Vector of gml__ReferenceType* with length 1..unbounded
    std::vector<gml__ReferenceType*    > specificSupplementaryRegulation;	///< Nillable pointer.
/// @brief -- Definition -- General indication of the step of the planning process that the supplementary regulation is undergoing. -- Description -- NOTE This enumeration contains values that are common to most planning systems.
/// Element processStepGeneral of type "http://www.opengis.net/gml/3.2":ReferenceType.
    gml__ReferenceType*                  processStepGeneral            ;	///< Nillable pointer.
/// @brief -- Name -- background map -- Definition -- Identification of the background map that has been used for constructing the supplementary regulation.
/// class _plu__SupplementaryRegulationType_backgroundMap operations:
/// - soap_new__plu__SupplementaryRegulationType_backgroundMap(soap*) allocate
/// - soap_new__plu__SupplementaryRegulationType_backgroundMap(soap*, int num) allocate array
/// - soap_new_req__plu__SupplementaryRegulationType_backgroundMap(soap*, ...) allocate, set required members
/// - soap_new_set__plu__SupplementaryRegulationType_backgroundMap(soap*, ...) allocate, set all public members
/// - int soap_read__plu__SupplementaryRegulationType_backgroundMap(soap*, _plu__SupplementaryRegulationType_backgroundMap*) deserialize from a stream
/// - int soap_write__plu__SupplementaryRegulationType_backgroundMap(soap, _plu__SupplementaryRegulationType_backgroundMap*) serialize to a stream
    class _plu__SupplementaryRegulationType_backgroundMap
    {
/// @brief -- Definition -- Information regarding the map that has been used as a background in the definition of a spatial plan, a zoning element or a supplementary regulation.
/// Element reference "http://inspire.ec.europa.eu/schemas/plu/3.0":BackgroundMapValue.
    plu__BackgroundMapValueType*         BackgroundMapValue             1;	///< Required element.
/// Attribute nilReason of type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
    }                                   *backgroundMap                 ;	///< Nillable pointer.
/// @brief -- Definition -- Date and time at which this version of the spatial object was inserted or changed in the spatial data set.
/// class _plu__SupplementaryRegulationType_beginLifespanVersion operations:
/// - soap_new__plu__SupplementaryRegulationType_beginLifespanVersion(soap*) allocate
/// - soap_new__plu__SupplementaryRegulationType_beginLifespanVersion(soap*, int num) allocate array
/// - soap_new_req__plu__SupplementaryRegulationType_beginLifespanVersion(soap*, ...) allocate, set required members
/// - soap_new_set__plu__SupplementaryRegulationType_beginLifespanVersion(soap*, ...) allocate, set all public members
/// - int soap_read__plu__SupplementaryRegulationType_beginLifespanVersion(soap*, _plu__SupplementaryRegulationType_beginLifespanVersion*) deserialize from a stream
/// - int soap_write__plu__SupplementaryRegulationType_beginLifespanVersion(soap, _plu__SupplementaryRegulationType_beginLifespanVersion*) serialize to a stream
    class _plu__SupplementaryRegulationType_beginLifespanVersion
    {
/// __item wraps 'xs:dateTime' simpleContent.
    time_t                               __item                        ;
/// Attribute nilReason of type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
    }                                   *beginLifespanVersion          ;	///< Nillable pointer.
/// @brief -- Definition -- Specifications about the dimensioning that are added to the dimensioning of the zoning elements that overlap the geometry of the supplementary regulation.
/// Vector of dimensioningIndication with length 0..unbounded
    std::vector<
/// class _plu__SupplementaryRegulationType_dimensioningIndication operations:
/// - soap_new__plu__SupplementaryRegulationType_dimensioningIndication(soap*) allocate
/// - soap_new__plu__SupplementaryRegulationType_dimensioningIndication(soap*, int num) allocate array
/// - soap_new_req__plu__SupplementaryRegulationType_dimensioningIndication(soap*, ...) allocate, set required members
/// - soap_new_set__plu__SupplementaryRegulationType_dimensioningIndication(soap*, ...) allocate, set all public members
/// - int soap_read__plu__SupplementaryRegulationType_dimensioningIndication(soap*, _plu__SupplementaryRegulationType_dimensioningIndication*) deserialize from a stream
/// - int soap_write__plu__SupplementaryRegulationType_dimensioningIndication(soap, _plu__SupplementaryRegulationType_dimensioningIndication*) serialize to a stream
    class _plu__SupplementaryRegulationType_dimensioningIndication
    {
/// @brief -- Name -- Dimension Indication -- Definition -- Specifications about the dimensioning of the urban developments.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="DimensioningIndicationValue"> with elements <DimensioningIndicationMeasureValue> <DimensioningIndicationIntegerValue> <DimensioningIndicationCharacterValue> <DimensioningIndicationRealValue>
   $int                                  __unionDimensioningIndicationValue 0;	///< Union _plu__union_SupplementaryRegulationType_dimensioningIndication selector: set to SOAP_UNION__plu__union_SupplementaryRegulationType_dimensioningIndication_<fieldname>
/// Union for substitutionGroup="DimensioningIndicationValue"
    union _plu__union_SupplementaryRegulationType_dimensioningIndication
    {
/// @brief -- Name -- Dimension Indication -- Definition -- Specifications about the dimensioning of the urban developments.
/// Element reference "http://inspire.ec.europa.eu/schemas/plu/3.0":DimensioningIndicationValue.
    plu__DimensioningIndicationValueType*  DimensioningIndicationValue    1;	///< Required element.
/// @brief -- Name -- dimension indication measure value -- Definition -- Dimensioning indication whose value is a measure.
/// Element DimensioningIndicationMeasureValue of type "http://inspire.ec.europa.eu/schemas/plu/3.0":DimensioningIndicationMeasureValueType.
    plu__DimensioningIndicationMeasureValueType*  DimensioningIndicationMeasureValue 1;	///< Required element.
/// @brief -- Name -- dimension indication integer value -- Definition -- Dimensioning indication whose value is of type integer.
/// Element DimensioningIndicationIntegerValue of type "http://inspire.ec.europa.eu/schemas/plu/3.0":DimensioningIndicationIntegerValueType.
    plu__DimensioningIndicationIntegerValueType*  DimensioningIndicationIntegerValue 1;	///< Required element.
/// @brief -- Name -- dimension indication character value -- Definition -- Dimensioning indication whose value is of type CharacterString.
/// Element DimensioningIndicationCharacterValue of type "http://inspire.ec.europa.eu/schemas/plu/3.0":DimensioningIndicationCharacterValueType.
    plu__DimensioningIndicationCharacterValueType*  DimensioningIndicationCharacterValue 1;	///< Required element.
/// @brief -- Name -- dimension indication real value -- Definition -- Dimensioning indication whose value is a floating point number.
/// Element DimensioningIndicationRealValue of type "http://inspire.ec.europa.eu/schemas/plu/3.0":DimensioningIndicationRealValueType.
    plu__DimensioningIndicationRealValueType*  DimensioningIndicationRealValue 1;	///< Required element.
    }                                    __union_SupplementaryRegulationType_dimensioningIndication;
//  END OF CHOICE OF SUBSTITUTIONS
/// Attribute nilReason of type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
    }>                                  *dimensioningIndication         0;	///< Nillable pointer.
/// @brief -- Definition -- External object identifier of the spatial object. -- Description -- NOTE An external object identifier is a unique object identifier published by the responsible body, which may be used by external applications to reference the spatial object. The identifier is an identifier of the spatial object, not an identifier of the real-world phenomenon.
/// Element inspireId of type "http://inspire.ec.europa.eu/schemas/base/3.3":IdentifierPropertyType.
    base__IdentifierPropertyType*        inspireId                      1;	///< Required element.
/// @brief -- Definition -- Date and time at which this version of the spatial object was superseded or retired in the spatial data set.
/// class _plu__SupplementaryRegulationType_endLifespanVersion operations:
/// - soap_new__plu__SupplementaryRegulationType_endLifespanVersion(soap*) allocate
/// - soap_new__plu__SupplementaryRegulationType_endLifespanVersion(soap*, int num) allocate array
/// - soap_new_req__plu__SupplementaryRegulationType_endLifespanVersion(soap*, ...) allocate, set required members
/// - soap_new_set__plu__SupplementaryRegulationType_endLifespanVersion(soap*, ...) allocate, set all public members
/// - int soap_read__plu__SupplementaryRegulationType_endLifespanVersion(soap*, _plu__SupplementaryRegulationType_endLifespanVersion*) deserialize from a stream
/// - int soap_write__plu__SupplementaryRegulationType_endLifespanVersion(soap, _plu__SupplementaryRegulationType_endLifespanVersion*) serialize to a stream
    class _plu__SupplementaryRegulationType_endLifespanVersion
    {
/// __item wraps 'xs:dateTime' simpleContent.
    time_t                               __item                        ;
/// Attribute nilReason of type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
    }                                   *endLifespanVersion             0;	///< Nillable pointer.
/// @brief -- Definition -- Geometry of the piece of land on which the supplementary regulation applies.
/// Element geometry of type "http://www.opengis.net/gml/3.2":GeometryPropertyType.
    gml__GeometryPropertyType*           geometry                       1;	///< Required element.
/// @brief -- Name -- inherited from other plans -- Definition -- Indication whether the supplementary regulation is inherited from another spatial plan.
/// class _plu__SupplementaryRegulationType_inheritedFromOtherPlans operations:
/// - soap_new__plu__SupplementaryRegulationType_inheritedFromOtherPlans(soap*) allocate
/// - soap_new__plu__SupplementaryRegulationType_inheritedFromOtherPlans(soap*, int num) allocate array
/// - soap_new_req__plu__SupplementaryRegulationType_inheritedFromOtherPlans(soap*, ...) allocate, set required members
/// - soap_new_set__plu__SupplementaryRegulationType_inheritedFromOtherPlans(soap*, ...) allocate, set all public members
/// - int soap_read__plu__SupplementaryRegulationType_inheritedFromOtherPlans(soap*, _plu__SupplementaryRegulationType_inheritedFromOtherPlans*) deserialize from a stream
/// - int soap_write__plu__SupplementaryRegulationType_inheritedFromOtherPlans(soap, _plu__SupplementaryRegulationType_inheritedFromOtherPlans*) serialize to a stream
    class _plu__SupplementaryRegulationType_inheritedFromOtherPlans
    {
/// __item wraps 'xs:boolean' simpleContent.
    bool                                 __item                        ;
/// Attribute nilReason of type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
    }                                   *inheritedFromOtherPlans       ;	///< Nillable pointer.
/// @brief -- Name -- specific regulation nature -- Definition -- Legal nature of the land use regulation from a national perspective. -- Description -- On member state level the legal classification for plan regulations may be complex. A supplementary regulation may be principally "bindingOnlyForAuthorities" but according to national law this regulation have to be more specified to explain the specific degree of binding. (e.g. on state or regional planning level in Germany: principles of spatial planning, other spatial planning requirements or goals of spatial planning). NOTE This attribute complements the information provided by the attribute regulationNature.
/// class _plu__SupplementaryRegulationType_specificRegulationNature operations:
/// - soap_new__plu__SupplementaryRegulationType_specificRegulationNature(soap*) allocate
/// - soap_new__plu__SupplementaryRegulationType_specificRegulationNature(soap*, int num) allocate array
/// - soap_new_req__plu__SupplementaryRegulationType_specificRegulationNature(soap*, ...) allocate, set required members
/// - soap_new_set__plu__SupplementaryRegulationType_specificRegulationNature(soap*, ...) allocate, set all public members
/// - int soap_read__plu__SupplementaryRegulationType_specificRegulationNature(soap*, _plu__SupplementaryRegulationType_specificRegulationNature*) deserialize from a stream
/// - int soap_write__plu__SupplementaryRegulationType_specificRegulationNature(soap, _plu__SupplementaryRegulationType_specificRegulationNature*) serialize to a stream
    class _plu__SupplementaryRegulationType_specificRegulationNature
    {
/// __item wraps 'xs:string' simpleContent.
    std::string                          __item                        ;
/// Attribute nilReason of type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
    }                                   *specificRegulationNature      ;	///< Nillable pointer.
/// @brief -- Definition -- Official name of the supplementary regulation
/// Vector of name with length 0..unbounded
    std::vector<
/// class _plu__SupplementaryRegulationType_name operations:
/// - soap_new__plu__SupplementaryRegulationType_name(soap*) allocate
/// - soap_new__plu__SupplementaryRegulationType_name(soap*, int num) allocate array
/// - soap_new_req__plu__SupplementaryRegulationType_name(soap*, ...) allocate, set required members
/// - soap_new_set__plu__SupplementaryRegulationType_name(soap*, ...) allocate, set all public members
/// - int soap_read__plu__SupplementaryRegulationType_name(soap*, _plu__SupplementaryRegulationType_name*) deserialize from a stream
/// - int soap_write__plu__SupplementaryRegulationType_name(soap, _plu__SupplementaryRegulationType_name*) serialize to a stream
    class _plu__SupplementaryRegulationType_name
    {
/// __item wraps 'xs:string' simpleContent.
    std::string                          __item                        ;
/// Attribute nilReason of type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
    }>                                  *name                           0;	///< Nillable pointer.
/// @brief -- Definition -- Legal nature of the land use regulation. -- Description -- NOTE Indicates whether the land use regulation is legally binding or not.
/// Element regulationNature of type "http://www.opengis.net/gml/3.2":ReferenceType.
    gml__ReferenceType*                  regulationNature               1;	///< Required element.
/// @brief -- Definition -- Code of the supplementary regulation from the hierarchical supplementary regulation code list agreed at the European level.
/// Vector of gml__ReferenceType* with length 1..unbounded
    std::vector<gml__ReferenceType*    > supplementaryRegulation        1;
/// @brief -- Definition -- Link to the Textual regulations that correspond to this supplementary regulation.
/// Vector of gml__ReferenceType* with length 1..unbounded
    std::vector<gml__ReferenceType*    > officialDocument              ;	///< Nillable pointer.
/// @brief -- Definition -- Link to the plan this supplementary regulation is part of.
/// Element plan of type "http://www.opengis.net/gml/3.2":ReferenceType.
    gml__ReferenceType*                  plan                           1;	///< Required element.
};

/// "http://inspire.ec.europa.eu/schemas/plu/3.0":SpatialPlanType is a complexType with complexContent extension of "http://www.opengis.net/gml/3.2":AbstractFeatureType.
/// class plu__SpatialPlanType operations:
/// - soap_new_plu__SpatialPlanType(soap*) allocate
/// - soap_new_plu__SpatialPlanType(soap*, int num) allocate array
/// - soap_new_req_plu__SpatialPlanType(soap*, ...) allocate, set required members
/// - soap_new_set_plu__SpatialPlanType(soap*, ...) allocate, set all public members
/// - int soap_read_plu__SpatialPlanType(soap*, plu__SpatialPlanType*) deserialize from a stream
/// - int soap_write_plu__SpatialPlanType(soap, plu__SpatialPlanType*) serialize to a stream
class plu__SpatialPlanType : public gml__AbstractFeatureType
{ public:
/*  INHERITED FROM gml__AbstractGMLType:
/// GROUP <xs:group name="StandardObjectProperties">
/// Vector of gml__MetaDataPropertyType* element refs with length 0..unbounded
    std::vector<gml__MetaDataPropertyType*> metaDataProperty               0;
/// @brief The value of this property is a text description of the object. gml:description uses gml:StringOrRefType as its content model, so it may contain a simple text string content, or carry a reference to an external description. The use of gml:description to reference an external description has been deprecated and replaced by the gml:descriptionReference property.
/// Element reference "http://www.opengis.net/gml/3.2":description.
    gml__StringOrRefType*                description                    0;	///< Optional element.
/// @brief The value of this property is a remote text description of the object. The xlink:href attribute of the gml:descriptionReference property references the external description.
/// Element reference "http://www.opengis.net/gml/3.2":descriptionReference.
    gml__ReferenceType*                  descriptionReference           0;	///< Optional element.
/// @brief Often, a special identifier is assigned to an object by the maintaining authority with the intention that it is used in references to the object For such cases, the codeSpace shall be provided. That identifier is usually unique either globally or within an application domain. gml:identifier is a pre-defined property for such identifiers.
/// Element reference "http://www.opengis.net/gml/3.2":identifier.
    gml__CodeWithAuthorityType*          identifier                     0;	///< Optional element.
/// @brief The gml:name property provides a label or identifier for the object, commonly a descriptive name. An object may have several names, typically assigned by different authorities. gml:name uses the gml:CodeType content model. The authority for a name is indicated by the value of its (optional) codeSpace attribute. The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace. In common usage there will be one name per authority, so a processing application may select the name from its preferred codeSpace.
/// Vector of gml__CodeType* element refs with length 0..unbounded
    std::vector<gml__CodeType*         > name                           0;
//  END OF GROUP
/// Attribute reference "http://www.opengis.net/gml/3.2":id.
/// @brief The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.
   @xsd__ID                              id                             1;	///< Required attribute.
    END OF INHERITED FROM gml__AbstractGMLType */
/*  INHERITED FROM gml__AbstractFeatureType:
/// @brief This property describes the minimum bounding box or rectangle that encloses the entire feature.
/// Element reference "http://www.opengis.net/gml/3.2":boundedBy.
    gml__BoundingShapeType*              boundedBy                      0;	///< Optional element.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="location" minOccurs="0"> with elements <priorityLocation>
   $int                                  __unionlocation                0;	///< Union _gml__union_SpatialPlanType selector: set to SOAP_UNION__gml__union_SpatialPlanType_<fieldname> or 0
/// Union for substitutionGroup="location"
    union _gml__union_SpatialPlanType
    {
/// Element reference "http://www.opengis.net/gml/3.2":location.
    gml__LocationPropertyType*           location                       0;	///< Optional element.
/// Element priorityLocation of type "http://www.opengis.net/gml/3.2":PriorityLocationPropertyType.
    gml__PriorityLocationPropertyType*   priorityLocation               1;	///< Required element.
    }                                    __union_SpatialPlanType       ;
//  END OF CHOICE OF SUBSTITUTIONS
    END OF INHERITED FROM gml__AbstractFeatureType */
/// @brief -- Definition -- External object identifier of the spatial plan. -- Description -- NOTE An external object identifier is a unique object identifier published by the responsible body, which may be used by external applications to reference the spatial object. The identifier is an identifier of the spatial object, not an identifier of the real-world phenomenon.
/// Element inspireId of type "http://inspire.ec.europa.eu/schemas/base/3.3":IdentifierPropertyType.
    base__IdentifierPropertyType*        inspireId                      1;	///< Required element.
/// @brief -- Definition -- Geometrical union of all the instances of the spatial objects ZoningElement and SupplementaryRegulation. When a SpatialPlan is only composed of a document, the attribute extent is the border of the cartographic image that contains the land use information (i.e. the land use map extent).
/// Element extent of type "http://www.opengis.net/gml/3.2":MultiSurfacePropertyType.
    gml__MultiSurfacePropertyType*       extent                         1;	///< Required element.
/// @brief -- Definition -- Date and time at which this version of the spatial object was inserted or changed in the spatial data set.
/// class _plu__SpatialPlanType_beginLifespanVersion operations:
/// - soap_new__plu__SpatialPlanType_beginLifespanVersion(soap*) allocate
/// - soap_new__plu__SpatialPlanType_beginLifespanVersion(soap*, int num) allocate array
/// - soap_new_req__plu__SpatialPlanType_beginLifespanVersion(soap*, ...) allocate, set required members
/// - soap_new_set__plu__SpatialPlanType_beginLifespanVersion(soap*, ...) allocate, set all public members
/// - int soap_read__plu__SpatialPlanType_beginLifespanVersion(soap*, _plu__SpatialPlanType_beginLifespanVersion*) deserialize from a stream
/// - int soap_write__plu__SpatialPlanType_beginLifespanVersion(soap, _plu__SpatialPlanType_beginLifespanVersion*) serialize to a stream
    class _plu__SpatialPlanType_beginLifespanVersion
    {
/// __item wraps 'xs:dateTime' simpleContent.
    time_t                               __item                        ;
/// Attribute nilReason of type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
    }                                   *beginLifespanVersion          ;	///< Nillable pointer.
/// @brief -- Definition -- Official title of the spatial plan.
/// Element officialTitle of type xs:string.
    std::string                          officialTitle                  1;	///< Required element.
/// @brief -- Name -- level of spatial plan -- Definition -- Level of the administrative units covered by the plan. -- Description -- Member states should make a mapping to this enumeration.
/// Element levelOfSpatialPlan of type "http://www.opengis.net/gml/3.2":ReferenceType.
    gml__ReferenceType*                  levelOfSpatialPlan             1;	///< Required element.
/// @brief -- Definition -- Date and time at which this version of the spatial object was superseded or retired in the spatial data set.
/// class _plu__SpatialPlanType_endLifespanVersion operations:
/// - soap_new__plu__SpatialPlanType_endLifespanVersion(soap*) allocate
/// - soap_new__plu__SpatialPlanType_endLifespanVersion(soap*, int num) allocate array
/// - soap_new_req__plu__SpatialPlanType_endLifespanVersion(soap*, ...) allocate, set required members
/// - soap_new_set__plu__SpatialPlanType_endLifespanVersion(soap*, ...) allocate, set all public members
/// - int soap_read__plu__SpatialPlanType_endLifespanVersion(soap*, _plu__SpatialPlanType_endLifespanVersion*) deserialize from a stream
/// - int soap_write__plu__SpatialPlanType_endLifespanVersion(soap, _plu__SpatialPlanType_endLifespanVersion*) serialize to a stream
    class _plu__SpatialPlanType_endLifespanVersion
    {
/// __item wraps 'xs:dateTime' simpleContent.
    time_t                               __item                        ;
/// Attribute nilReason of type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
    }                                   *endLifespanVersion             0;	///< Nillable pointer.
/// @brief -- Definition -- First date at which this spatial plan is valid in reality.
/// class _plu__SpatialPlanType_validFrom operations:
/// - soap_new__plu__SpatialPlanType_validFrom(soap*) allocate
/// - soap_new__plu__SpatialPlanType_validFrom(soap*, int num) allocate array
/// - soap_new_req__plu__SpatialPlanType_validFrom(soap*, ...) allocate, set required members
/// - soap_new_set__plu__SpatialPlanType_validFrom(soap*, ...) allocate, set all public members
/// - int soap_read__plu__SpatialPlanType_validFrom(soap*, _plu__SpatialPlanType_validFrom*) deserialize from a stream
/// - int soap_write__plu__SpatialPlanType_validFrom(soap, _plu__SpatialPlanType_validFrom*) serialize to a stream
    class _plu__SpatialPlanType_validFrom
    {
/// __item wraps 'xs:date' simpleContent.
    xsd__date                            __item                        ;
/// Attribute nilReason of type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
    }                                   *validFrom                      0;	///< Nillable pointer.
/// @brief -- Definition -- The time from which the spatial plan no longer exists in the real world.
/// class _plu__SpatialPlanType_validTo operations:
/// - soap_new__plu__SpatialPlanType_validTo(soap*) allocate
/// - soap_new__plu__SpatialPlanType_validTo(soap*, int num) allocate array
/// - soap_new_req__plu__SpatialPlanType_validTo(soap*, ...) allocate, set required members
/// - soap_new_set__plu__SpatialPlanType_validTo(soap*, ...) allocate, set all public members
/// - int soap_read__plu__SpatialPlanType_validTo(soap*, _plu__SpatialPlanType_validTo*) deserialize from a stream
/// - int soap_write__plu__SpatialPlanType_validTo(soap, _plu__SpatialPlanType_validTo*) serialize to a stream
    class _plu__SpatialPlanType_validTo
    {
/// __item wraps 'xs:date' simpleContent.
    xsd__date                            __item                        ;
/// Attribute nilReason of type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
    }                                   *validTo                        0;	///< Nillable pointer.
/// @brief -- Definition -- Alternative (unofficial) title of the spatial plan.
/// class _plu__SpatialPlanType_alternativeTitle operations:
/// - soap_new__plu__SpatialPlanType_alternativeTitle(soap*) allocate
/// - soap_new__plu__SpatialPlanType_alternativeTitle(soap*, int num) allocate array
/// - soap_new_req__plu__SpatialPlanType_alternativeTitle(soap*, ...) allocate, set required members
/// - soap_new_set__plu__SpatialPlanType_alternativeTitle(soap*, ...) allocate, set all public members
/// - int soap_read__plu__SpatialPlanType_alternativeTitle(soap*, _plu__SpatialPlanType_alternativeTitle*) deserialize from a stream
/// - int soap_write__plu__SpatialPlanType_alternativeTitle(soap, _plu__SpatialPlanType_alternativeTitle*) serialize to a stream
    class _plu__SpatialPlanType_alternativeTitle
    {
/// __item wraps 'xs:string' simpleContent.
    std::string                          __item                        ;
/// Attribute nilReason of type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
    }                                   *alternativeTitle              ;	///< Nillable pointer.
/// @brief -- Definition -- Name of the type of plan that the Member State has given to the plan. -- Description -- NOTE The admissible values for this attribute are managed at the member state level via a code list EXAMPLE: FR: DTA, SCOT, PLU, etc. DE: Bebauungsplan, Flchennutzungsplan, Regionalplan, Landesentwicklungsplan NL: bestemmingsplan, structuurvisie.
/// Element planTypeName of type "http://www.opengis.net/gml/3.2":ReferenceType.
    gml__ReferenceType*                  planTypeName                   1;	///< Required element.
/// @brief -- Definition -- General indication of the step of the planning process that the plan is undergoing. -- Description -- NOTE This enumeration contains values that are common to most planning systems.
/// Element processStepGeneral of type "http://www.opengis.net/gml/3.2":ReferenceType.
    gml__ReferenceType*                  processStepGeneral            ;	///< Nillable pointer.
/// @brief -- Name -- background map -- Definition -- Identification of the background map that has been used for constructing this Plan.
/// class _plu__SpatialPlanType_backgroundMap operations:
/// - soap_new__plu__SpatialPlanType_backgroundMap(soap*) allocate
/// - soap_new__plu__SpatialPlanType_backgroundMap(soap*, int num) allocate array
/// - soap_new_req__plu__SpatialPlanType_backgroundMap(soap*, ...) allocate, set required members
/// - soap_new_set__plu__SpatialPlanType_backgroundMap(soap*, ...) allocate, set all public members
/// - int soap_read__plu__SpatialPlanType_backgroundMap(soap*, _plu__SpatialPlanType_backgroundMap*) deserialize from a stream
/// - int soap_write__plu__SpatialPlanType_backgroundMap(soap, _plu__SpatialPlanType_backgroundMap*) serialize to a stream
    class _plu__SpatialPlanType_backgroundMap
    {
/// @brief -- Definition -- Information regarding the map that has been used as a background in the definition of a spatial plan, a zoning element or a supplementary regulation.
/// Element reference "http://inspire.ec.europa.eu/schemas/plu/3.0":BackgroundMapValue.
    plu__BackgroundMapValueType*         BackgroundMapValue             1;	///< Required element.
/// Attribute nilReason of type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
    }                                   *backgroundMap                 ;	///< Nillable pointer.
/// @brief -- Definition -- Reference to relevant administrative ordinance. -- Description -- NOTE This attribute is multiple because, independently from the current legal status of the plan, there can be references to more than one ordinance, in relation to the different steps that the planning process has already undergone (e.g. ordinance for the preparation of a new plan, ordinance of adoption, ordinance of approval, etc.).
/// Vector of ordinance with length 1..unbounded
    std::vector<
/// class _plu__SpatialPlanType_ordinance operations:
/// - soap_new__plu__SpatialPlanType_ordinance(soap*) allocate
/// - soap_new__plu__SpatialPlanType_ordinance(soap*, int num) allocate array
/// - soap_new_req__plu__SpatialPlanType_ordinance(soap*, ...) allocate, set required members
/// - soap_new_set__plu__SpatialPlanType_ordinance(soap*, ...) allocate, set all public members
/// - int soap_read__plu__SpatialPlanType_ordinance(soap*, _plu__SpatialPlanType_ordinance*) deserialize from a stream
/// - int soap_write__plu__SpatialPlanType_ordinance(soap, _plu__SpatialPlanType_ordinance*) serialize to a stream
    class _plu__SpatialPlanType_ordinance
    {
/// @brief -- Definition -- Reference to administrative ordinance. Ordinance is a regulation/rule that is adopted by an authority that is legally mandated to take such ordinance.
/// Element reference "http://inspire.ec.europa.eu/schemas/plu/3.0":OrdinanceValue.
    plu__OrdinanceValueType*             OrdinanceValue                 1;	///< Required element.
/// Attribute nilReason of type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
    }>                                  *ordinance                     ;	///< Nillable pointer.
/// @brief -- Definition -- Link to the official documents that relate to the spatial plan.
/// Vector of gml__ReferenceType* with length 1..unbounded
    std::vector<gml__ReferenceType*    > officialDocument              ;	///< Nillable pointer.
/// @brief -- Definition -- Reference to the ZoningElements which belong to this SpatialPlan.
/// Vector of gml__ReferenceType* with length 0..unbounded
    std::vector<gml__ReferenceType*    > member                         0;
/// @brief -- Definition -- Links to supplementary regulations providing information and/or limitations on the use of land/water that supplements the zoning as part of this spatial plan.
/// Vector of gml__ReferenceType* with length 0..unbounded
    std::vector<gml__ReferenceType*    > restriction                    0;
};

/// "http://inspire.ec.europa.eu/schemas/base/3.3":SpatialDataSetType is a complexType with complexContent extension of "http://www.opengis.net/gml/3.2":AbstractFeatureType.
/// class base__SpatialDataSetType operations:
/// - soap_new_base__SpatialDataSetType(soap*) allocate
/// - soap_new_base__SpatialDataSetType(soap*, int num) allocate array
/// - soap_new_req_base__SpatialDataSetType(soap*, ...) allocate, set required members
/// - soap_new_set_base__SpatialDataSetType(soap*, ...) allocate, set all public members
/// - int soap_read_base__SpatialDataSetType(soap*, base__SpatialDataSetType*) deserialize from a stream
/// - int soap_write_base__SpatialDataSetType(soap, base__SpatialDataSetType*) serialize to a stream
class base__SpatialDataSetType : public gml__AbstractFeatureType
{ public:
/*  INHERITED FROM gml__AbstractGMLType:
/// GROUP <xs:group name="StandardObjectProperties">
/// Vector of gml__MetaDataPropertyType* element refs with length 0..unbounded
    std::vector<gml__MetaDataPropertyType*> metaDataProperty               0;
/// @brief The value of this property is a text description of the object. gml:description uses gml:StringOrRefType as its content model, so it may contain a simple text string content, or carry a reference to an external description. The use of gml:description to reference an external description has been deprecated and replaced by the gml:descriptionReference property.
/// Element reference "http://www.opengis.net/gml/3.2":description.
    gml__StringOrRefType*                description                    0;	///< Optional element.
/// @brief The value of this property is a remote text description of the object. The xlink:href attribute of the gml:descriptionReference property references the external description.
/// Element reference "http://www.opengis.net/gml/3.2":descriptionReference.
    gml__ReferenceType*                  descriptionReference           0;	///< Optional element.
/// @brief Often, a special identifier is assigned to an object by the maintaining authority with the intention that it is used in references to the object For such cases, the codeSpace shall be provided. That identifier is usually unique either globally or within an application domain. gml:identifier is a pre-defined property for such identifiers.
/// Element reference "http://www.opengis.net/gml/3.2":identifier.
    gml__CodeWithAuthorityType*          identifier                     0;	///< Optional element.
/// @brief The gml:name property provides a label or identifier for the object, commonly a descriptive name. An object may have several names, typically assigned by different authorities. gml:name uses the gml:CodeType content model. The authority for a name is indicated by the value of its (optional) codeSpace attribute. The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace. In common usage there will be one name per authority, so a processing application may select the name from its preferred codeSpace.
/// Vector of gml__CodeType* element refs with length 0..unbounded
    std::vector<gml__CodeType*         > name                           0;
//  END OF GROUP
/// Attribute reference "http://www.opengis.net/gml/3.2":id.
/// @brief The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.
   @xsd__ID                              id                             1;	///< Required attribute.
    END OF INHERITED FROM gml__AbstractGMLType */
/*  INHERITED FROM gml__AbstractFeatureType:
/// @brief This property describes the minimum bounding box or rectangle that encloses the entire feature.
/// Element reference "http://www.opengis.net/gml/3.2":boundedBy.
    gml__BoundingShapeType*              boundedBy                      0;	///< Optional element.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="location" minOccurs="0"> with elements <priorityLocation>
   $int                                  __unionlocation                0;	///< Union _gml__union_SpatialDataSetType selector: set to SOAP_UNION__gml__union_SpatialDataSetType_<fieldname> or 0
/// Union for substitutionGroup="location"
    union _gml__union_SpatialDataSetType
    {
/// Element reference "http://www.opengis.net/gml/3.2":location.
    gml__LocationPropertyType*           location                       0;	///< Optional element.
/// Element priorityLocation of type "http://www.opengis.net/gml/3.2":PriorityLocationPropertyType.
    gml__PriorityLocationPropertyType*   priorityLocation               1;	///< Required element.
    }                                    __union_SpatialDataSetType    ;
//  END OF CHOICE OF SUBSTITUTIONS
    END OF INHERITED FROM gml__AbstractFeatureType */
/// @brief -- Definition -- Identifier of the spatial data set.
/// Element identifier of type "http://inspire.ec.europa.eu/schemas/base/3.3":IdentifierPropertyType.
    base__IdentifierPropertyType*        identifier                     1;	///< Required element.
/// @brief -- Definition -- Metadata of the spatial data set.
/// class _base__SpatialDataSetType_metadata operations:
/// - soap_new__base__SpatialDataSetType_metadata(soap*) allocate
/// - soap_new__base__SpatialDataSetType_metadata(soap*, int num) allocate array
/// - soap_new_req__base__SpatialDataSetType_metadata(soap*, ...) allocate, set required members
/// - soap_new_set__base__SpatialDataSetType_metadata(soap*, ...) allocate, set all public members
/// - int soap_read__base__SpatialDataSetType_metadata(soap*, _base__SpatialDataSetType_metadata*) deserialize from a stream
/// - int soap_write__base__SpatialDataSetType_metadata(soap, _base__SpatialDataSetType_metadata*) serialize to a stream
    class _base__SpatialDataSetType_metadata
    {
/// INHERITED FROM gml__AbstractMetadataPropertyType:
/// Attribute owns of type xs:boolean.
   @bool                                 owns                           0 = false;	///< Default value="false".
//  END OF INHERITED FROM gml__AbstractMetadataPropertyType
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __base__SpatialDataSetType_metadata_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd":MD_Metadata.
    gmd__MD_x005fMetadata_x005fType*     gmd__MD_x005fMetadata          1;	///< Required element.
    }>                                   __SpatialDataSetType_metadata_sequence 0;
//  END OF SEQUENCE
/// Attribute nilReason of type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         gml__remoteSchema              0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed optional value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
    }                                   *metadata                      ;	///< Nillable pointer.
};

/// "http://inspire.ec.europa.eu/schemas/base2/1.0":LegislationCitationType is a complexType with complexContent extension of "http://inspire.ec.europa.eu/schemas/base2/1.0":DocumentCitationType.
/// class base2__LegislationCitationType operations:
/// - soap_new_base2__LegislationCitationType(soap*) allocate
/// - soap_new_base2__LegislationCitationType(soap*, int num) allocate array
/// - soap_new_req_base2__LegislationCitationType(soap*, ...) allocate, set required members
/// - soap_new_set_base2__LegislationCitationType(soap*, ...) allocate, set all public members
/// - int soap_read_base2__LegislationCitationType(soap*, base2__LegislationCitationType*) deserialize from a stream
/// - int soap_write_base2__LegislationCitationType(soap, base2__LegislationCitationType*) serialize to a stream
class base2__LegislationCitationType : public base2__DocumentCitationType
{ public:
/*  INHERITED FROM gml__AbstractGMLType:
/// GROUP <xs:group name="StandardObjectProperties">
/// Vector of gml__MetaDataPropertyType* element refs with length 0..unbounded
    std::vector<gml__MetaDataPropertyType*> metaDataProperty               0;
/// @brief The value of this property is a text description of the object. gml:description uses gml:StringOrRefType as its content model, so it may contain a simple text string content, or carry a reference to an external description. The use of gml:description to reference an external description has been deprecated and replaced by the gml:descriptionReference property.
/// Element reference "http://www.opengis.net/gml/3.2":description.
    gml__StringOrRefType*                description                    0;	///< Optional element.
/// @brief The value of this property is a remote text description of the object. The xlink:href attribute of the gml:descriptionReference property references the external description.
/// Element reference "http://www.opengis.net/gml/3.2":descriptionReference.
    gml__ReferenceType*                  descriptionReference           0;	///< Optional element.
/// @brief Often, a special identifier is assigned to an object by the maintaining authority with the intention that it is used in references to the object For such cases, the codeSpace shall be provided. That identifier is usually unique either globally or within an application domain. gml:identifier is a pre-defined property for such identifiers.
/// Element reference "http://www.opengis.net/gml/3.2":identifier.
    gml__CodeWithAuthorityType*          identifier                     0;	///< Optional element.
/// @brief The gml:name property provides a label or identifier for the object, commonly a descriptive name. An object may have several names, typically assigned by different authorities. gml:name uses the gml:CodeType content model. The authority for a name is indicated by the value of its (optional) codeSpace attribute. The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace. In common usage there will be one name per authority, so a processing application may select the name from its preferred codeSpace.
/// Vector of gml__CodeType* element refs with length 0..unbounded
    std::vector<gml__CodeType*         > name                           0;
//  END OF GROUP
/// Attribute reference "http://www.opengis.net/gml/3.2":id.
/// @brief The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.
   @xsd__ID                              id                             1;	///< Required attribute.
    END OF INHERITED FROM gml__AbstractGMLType */
/*  INHERITED FROM base2__DocumentCitationType:
/// @brief -- Name -- name -- Definition -- Name of the document. -- Description -- NOTE For legal documents, this should be the official name assigned to the legislative instrument. EXAMPLE The official legal name for the INSPIRE Directive is "Directive 2007/2/EC of the European Parliament and of the Council of 14 March 2007 establishing an Infrastructure for Spatial Information in the European Community (INSPIRE)"
/// Element name of type xs:string.
    std::string                          name                           1;	///< Required element.
/// @brief -- Name -- short name -- Definition -- Short name or alternative title of the document. -- Description -- NOTE For legal documents, this should be a short name or alternative title commonly used to identify the legislation. EXAMPLE 1: INSPIRE Directive is the short name for "Directive 2007/2/EC of the European Parliament and of the Council of 14 March 2007 establishing an Infrastructure for Spatial Information in the European Community (INSPIRE)" EXAMPLE 2: CAFE Directive is the short name for the Directive 2008/50/EC of the European Parliament and of the Council of 21 May 2008 on ambient air quality and cleaner air for Europe" EXAMPLE 3: Water Framework Directive the short name for "Directive 2000/60/EC of the European Parliament and of the Council establishing a framework for the Community action in the field of water policy"
/// class _base2__LegislationCitationType_shortName operations:
/// - soap_new__base2__LegislationCitationType_shortName(soap*) allocate
/// - soap_new__base2__LegislationCitationType_shortName(soap*, int num) allocate array
/// - soap_new_req__base2__LegislationCitationType_shortName(soap*, ...) allocate, set required members
/// - soap_new_set__base2__LegislationCitationType_shortName(soap*, ...) allocate, set all public members
/// - int soap_read__base2__LegislationCitationType_shortName(soap*, _base2__LegislationCitationType_shortName*) deserialize from a stream
/// - int soap_write__base2__LegislationCitationType_shortName(soap, _base2__LegislationCitationType_shortName*) serialize to a stream
    class _base2__LegislationCitationType_shortName
    {
/// __item wraps 'xs:string' simpleContent.
    std::string                          __item                        ;
/// Attribute nilReason of type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
    }                                   *shortName                      0;	///< Nillable pointer.
/// @brief -- Name -- date -- Definition -- Date of creation, publication or revision of the document.
/// class _base2__LegislationCitationType_date operations:
/// - soap_new__base2__LegislationCitationType_date(soap*) allocate
/// - soap_new__base2__LegislationCitationType_date(soap*, int num) allocate array
/// - soap_new_req__base2__LegislationCitationType_date(soap*, ...) allocate, set required members
/// - soap_new_set__base2__LegislationCitationType_date(soap*, ...) allocate, set all public members
/// - int soap_read__base2__LegislationCitationType_date(soap*, _base2__LegislationCitationType_date*) deserialize from a stream
/// - int soap_write__base2__LegislationCitationType_date(soap, _base2__LegislationCitationType_date*) serialize to a stream
    class _base2__LegislationCitationType_date
    {
/// INHERITED FROM gml__AbstractMetadataPropertyType:
/// Attribute owns of type xs:boolean.
   @bool                                 owns                           0 = false;	///< Default value="false".
//  END OF INHERITED FROM gml__AbstractMetadataPropertyType
/// Element reference "http://www.isotc211.org/2005/gmd":CI_Date.
    gmd__CI_x005fDate_x005fType*         gmd__CI_x005fDate              1;	///< Required element.
/// Attribute nilReason of type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
    }                                   *date                          ;	///< Nillable pointer.
/// @brief -- Name -- link to online version -- Definition -- Link to an online version of the document
/// Vector of link with length 1..unbounded
    std::vector<
/// class _base2__LegislationCitationType_link operations:
/// - soap_new__base2__LegislationCitationType_link(soap*) allocate
/// - soap_new__base2__LegislationCitationType_link(soap*, int num) allocate array
/// - soap_new_req__base2__LegislationCitationType_link(soap*, ...) allocate, set required members
/// - soap_new_set__base2__LegislationCitationType_link(soap*, ...) allocate, set all public members
/// - int soap_read__base2__LegislationCitationType_link(soap*, _base2__LegislationCitationType_link*) deserialize from a stream
/// - int soap_write__base2__LegislationCitationType_link(soap, _base2__LegislationCitationType_link*) serialize to a stream
    class _base2__LegislationCitationType_link
    {
/// __item wraps 'xs:anyURI' simpleContent.
    xsd__anyURI                          __item                        ;
/// Attribute nilReason of type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
    }>                                  *link                          ;	///< Nillable pointer.
/// @brief -- Name -- specific reference -- Definition -- Reference to a specific part of the document. -- Description -- EXAMPLE For legal documents, this attribute can contain a reference to article(s) that specify a specific requirement or obligation.
/// Vector of specificReference with length 0..unbounded
    std::vector<
/// class _base2__LegislationCitationType_specificReference operations:
/// - soap_new__base2__LegislationCitationType_specificReference(soap*) allocate
/// - soap_new__base2__LegislationCitationType_specificReference(soap*, int num) allocate array
/// - soap_new_req__base2__LegislationCitationType_specificReference(soap*, ...) allocate, set required members
/// - soap_new_set__base2__LegislationCitationType_specificReference(soap*, ...) allocate, set all public members
/// - int soap_read__base2__LegislationCitationType_specificReference(soap*, _base2__LegislationCitationType_specificReference*) deserialize from a stream
/// - int soap_write__base2__LegislationCitationType_specificReference(soap, _base2__LegislationCitationType_specificReference*) serialize to a stream
    class _base2__LegislationCitationType_specificReference
    {
/// __item wraps 'xs:string' simpleContent.
    std::string                          __item                        ;
/// Attribute nilReason of type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
    }>                                  *specificReference              0;	///< Nillable pointer.
    END OF INHERITED FROM base2__DocumentCitationType */
/// @brief -- Name -- identification number -- Definition -- Code used to identify the legislative instrument -- Description -- EXAMPLE 1: 2007/2/EC is the identification number for the INSPIRE Directive EXAMPLE 2: 2008/50/EC is the identification number for the CAFE Directive EXAMPLE 3: 2000/60/EC is the identification number for the Water Framework Directive
/// Element identificationNumber of type xs:string.
    std::string*                         identificationNumber           0;	///< Optional element.
/// @brief -- Name -- official document number -- Definition -- Official document number used to uniquely identify the legislative instrument. -- Description -- NOTE: An official document number may be assigned to uniquely identify the legislative instrument. EXAMPLE: CELEX Number used to uniquely identify European Union Legislation
/// Element officialDocumentNumber of type xs:string.
    std::string*                         officialDocumentNumber         0;	///< Optional element.
/// @brief -- Name -- date entered into force -- Definition -- Date the legislative instrument entered into force.
/// Element dateEnteredIntoForce of type "http://www.opengis.net/gml/3.2":TimePositionType.
    gml__TimePositionType*               dateEnteredIntoForce           0;	///< Optional element.
/// @brief -- Name -- date repealed -- Definition -- Date the legislative instrument was repealed.
/// Element dateRepealed of type "http://www.opengis.net/gml/3.2":TimePositionType.
    gml__TimePositionType*               dateRepealed                   0;	///< Optional element.
/// @brief -- Name -- name -- Definition -- The level at which the legislative instrument is adopted.
/// Element level of type "http://www.opengis.net/gml/3.2":ReferenceType.
    gml__ReferenceType*                  level                          1;	///< Required element.
/// @brief -- Name -- journal citation -- Definition -- Citation of the official journal in which the legislation is published.
/// Element journalCitation of type "http://inspire.ec.europa.eu/schemas/base2/1.0":OfficialJournalInformationPropertyType.
    base2__OfficialJournalInformationPropertyType*  journalCitation                0;	///< Optional element.
};

/// "http://www.opengis.net/gml/3.2":DynamicFeatureType is a complexType with complexContent extension of "http://www.opengis.net/gml/3.2":AbstractFeatureType.
/// class gml__DynamicFeatureType operations:
/// - soap_new_gml__DynamicFeatureType(soap*) allocate
/// - soap_new_gml__DynamicFeatureType(soap*, int num) allocate array
/// - soap_new_req_gml__DynamicFeatureType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__DynamicFeatureType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__DynamicFeatureType(soap*, gml__DynamicFeatureType*) deserialize from a stream
/// - int soap_write_gml__DynamicFeatureType(soap, gml__DynamicFeatureType*) serialize to a stream
class gml__DynamicFeatureType : public gml__AbstractFeatureType
{ public:
/*  INHERITED FROM gml__AbstractGMLType:
/// GROUP <xs:group name="StandardObjectProperties">
/// Vector of gml__MetaDataPropertyType* element refs with length 0..unbounded
    std::vector<gml__MetaDataPropertyType*> metaDataProperty               0;
/// @brief The value of this property is a text description of the object. gml:description uses gml:StringOrRefType as its content model, so it may contain a simple text string content, or carry a reference to an external description. The use of gml:description to reference an external description has been deprecated and replaced by the gml:descriptionReference property.
/// Element reference "http://www.opengis.net/gml/3.2":description.
    gml__StringOrRefType*                description                    0;	///< Optional element.
/// @brief The value of this property is a remote text description of the object. The xlink:href attribute of the gml:descriptionReference property references the external description.
/// Element reference "http://www.opengis.net/gml/3.2":descriptionReference.
    gml__ReferenceType*                  descriptionReference           0;	///< Optional element.
/// @brief Often, a special identifier is assigned to an object by the maintaining authority with the intention that it is used in references to the object For such cases, the codeSpace shall be provided. That identifier is usually unique either globally or within an application domain. gml:identifier is a pre-defined property for such identifiers.
/// Element reference "http://www.opengis.net/gml/3.2":identifier.
    gml__CodeWithAuthorityType*          identifier                     0;	///< Optional element.
/// @brief The gml:name property provides a label or identifier for the object, commonly a descriptive name. An object may have several names, typically assigned by different authorities. gml:name uses the gml:CodeType content model. The authority for a name is indicated by the value of its (optional) codeSpace attribute. The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace. In common usage there will be one name per authority, so a processing application may select the name from its preferred codeSpace.
/// Vector of gml__CodeType* element refs with length 0..unbounded
    std::vector<gml__CodeType*         > name                           0;
//  END OF GROUP
/// Attribute reference "http://www.opengis.net/gml/3.2":id.
/// @brief The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.
   @xsd__ID                              id                             1;	///< Required attribute.
    END OF INHERITED FROM gml__AbstractGMLType */
/*  INHERITED FROM gml__AbstractFeatureType:
/// @brief This property describes the minimum bounding box or rectangle that encloses the entire feature.
/// Element reference "http://www.opengis.net/gml/3.2":boundedBy.
    gml__BoundingShapeType*              boundedBy                      0;	///< Optional element.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="location" minOccurs="0"> with elements <priorityLocation>
   $int                                  __unionlocation                0;	///< Union _gml__union_DynamicFeatureType selector: set to SOAP_UNION__gml__union_DynamicFeatureType_<fieldname> or 0
/// Union for substitutionGroup="location"
    union _gml__union_DynamicFeatureType
    {
/// Element reference "http://www.opengis.net/gml/3.2":location.
    gml__LocationPropertyType*           location                       0;	///< Optional element.
/// Element priorityLocation of type "http://www.opengis.net/gml/3.2":PriorityLocationPropertyType.
    gml__PriorityLocationPropertyType*   priorityLocation               1;	///< Required element.
    }                                    __union_DynamicFeatureType    ;
//  END OF CHOICE OF SUBSTITUTIONS
    END OF INHERITED FROM gml__AbstractFeatureType */
/// GROUP <xs:group name="dynamicProperties">
/// @brief A convenience group. This allows an application schema developer to include dynamic properties in a content model in a standard fashion.
/// @brief gml:validTime is a convenience property element.
/// Element reference "http://www.opengis.net/gml/3.2":validTime.
    gml__TimePrimitivePropertyType*      validTime                      0;	///< Optional element.
/// @brief A generic sequence of events constitute a gml:history of an object. The gml:history element contains a set of elements in the substitution group headed by the abstract element gml:AbstractTimeSlice, representing the time-varying properties of interest. The history property of a dynamic feature associates a feature instance with a sequence of time slices (i.e. change events) that encapsulate the evolution of the feature.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="history" minOccurs="0"> with elements <track>
   $int                                  __unionhistory                 0;	///< Union _gml__union_DynamicFeatureType_ selector: set to SOAP_UNION__gml__union_DynamicFeatureType__<fieldname> or 0
/// Union for substitutionGroup="history"
    union _gml__union_DynamicFeatureType_
    {
/// @brief A generic sequence of events constitute a gml:history of an object. The gml:history element contains a set of elements in the substitution group headed by the abstract element gml:AbstractTimeSlice, representing the time-varying properties of interest. The history property of a dynamic feature associates a feature instance with a sequence of time slices (i.e. change events) that encapsulate the evolution of the feature.
/// Element reference "http://www.opengis.net/gml/3.2":history.
    gml__HistoryPropertyType*            history                        0;	///< Optional element.
/// Element track of type "http://www.opengis.net/gml/3.2":HistoryPropertyType.
    gml__HistoryPropertyType*            track                          1;	///< Required element.
    }                                    __union_DynamicFeatureType_   ;
//  END OF CHOICE OF SUBSTITUTIONS
/// @brief Evidence is represented by a simple gml:dataSource or gml:dataSourceReference property that indicates the source of the temporal data. The remote link attributes of the gml:dataSource element have been deprecated along with its current type.
/// Element reference "http://www.opengis.net/gml/3.2":dataSource.
    gml__StringOrRefType*                dataSource                     0;	///< Optional element.
/// @brief Evidence is represented by a simple gml:dataSource or gml:dataSourceReference property that indicates the source of the temporal data.
/// Element reference "http://www.opengis.net/gml/3.2":dataSourceReference.
    gml__ReferenceType*                  dataSourceReference            0;	///< Optional element.
//  END OF GROUP
};

/// "http://www.opengis.net/gml/3.2":AbstractTopoPrimitiveType is an abstract complexType with complexContent extension of "http://www.opengis.net/gml/3.2":AbstractTopologyType.
/// class gml__AbstractTopoPrimitiveType operations:
/// - soap_new_gml__AbstractTopoPrimitiveType(soap*) allocate
/// - soap_new_gml__AbstractTopoPrimitiveType(soap*, int num) allocate array
/// - soap_new_req_gml__AbstractTopoPrimitiveType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__AbstractTopoPrimitiveType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__AbstractTopoPrimitiveType(soap*, gml__AbstractTopoPrimitiveType*) deserialize from a stream
/// - int soap_write_gml__AbstractTopoPrimitiveType(soap, gml__AbstractTopoPrimitiveType*) serialize to a stream
class gml__AbstractTopoPrimitiveType : public gml__AbstractTopologyType
{ public:
/*  INHERITED FROM gml__AbstractGMLType:
/// GROUP <xs:group name="StandardObjectProperties">
/// Vector of gml__MetaDataPropertyType* element refs with length 0..unbounded
    std::vector<gml__MetaDataPropertyType*> metaDataProperty               0;
/// @brief The value of this property is a text description of the object. gml:description uses gml:StringOrRefType as its content model, so it may contain a simple text string content, or carry a reference to an external description. The use of gml:description to reference an external description has been deprecated and replaced by the gml:descriptionReference property.
/// Element reference "http://www.opengis.net/gml/3.2":description.
    gml__StringOrRefType*                description                    0;	///< Optional element.
/// @brief The value of this property is a remote text description of the object. The xlink:href attribute of the gml:descriptionReference property references the external description.
/// Element reference "http://www.opengis.net/gml/3.2":descriptionReference.
    gml__ReferenceType*                  descriptionReference           0;	///< Optional element.
/// @brief Often, a special identifier is assigned to an object by the maintaining authority with the intention that it is used in references to the object For such cases, the codeSpace shall be provided. That identifier is usually unique either globally or within an application domain. gml:identifier is a pre-defined property for such identifiers.
/// Element reference "http://www.opengis.net/gml/3.2":identifier.
    gml__CodeWithAuthorityType*          identifier                     0;	///< Optional element.
/// @brief The gml:name property provides a label or identifier for the object, commonly a descriptive name. An object may have several names, typically assigned by different authorities. gml:name uses the gml:CodeType content model. The authority for a name is indicated by the value of its (optional) codeSpace attribute. The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace. In common usage there will be one name per authority, so a processing application may select the name from its preferred codeSpace.
/// Vector of gml__CodeType* element refs with length 0..unbounded
    std::vector<gml__CodeType*         > name                           0;
//  END OF GROUP
/// Attribute reference "http://www.opengis.net/gml/3.2":id.
/// @brief The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.
   @xsd__ID                              id                             1;	///< Required attribute.
    END OF INHERITED FROM gml__AbstractGMLType */
/*  INHERITED FROM gml__AbstractTopologyType:
    END OF INHERITED FROM gml__AbstractTopologyType */
};

/// "http://www.opengis.net/gml/3.2":TopoPointType is a complexType with complexContent extension of "http://www.opengis.net/gml/3.2":AbstractTopologyType.
/// class gml__TopoPointType operations:
/// - soap_new_gml__TopoPointType(soap*) allocate
/// - soap_new_gml__TopoPointType(soap*, int num) allocate array
/// - soap_new_req_gml__TopoPointType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__TopoPointType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__TopoPointType(soap*, gml__TopoPointType*) deserialize from a stream
/// - int soap_write_gml__TopoPointType(soap, gml__TopoPointType*) serialize to a stream
class gml__TopoPointType : public gml__AbstractTopologyType
{ public:
/*  INHERITED FROM gml__AbstractGMLType:
/// GROUP <xs:group name="StandardObjectProperties">
/// Vector of gml__MetaDataPropertyType* element refs with length 0..unbounded
    std::vector<gml__MetaDataPropertyType*> metaDataProperty               0;
/// @brief The value of this property is a text description of the object. gml:description uses gml:StringOrRefType as its content model, so it may contain a simple text string content, or carry a reference to an external description. The use of gml:description to reference an external description has been deprecated and replaced by the gml:descriptionReference property.
/// Element reference "http://www.opengis.net/gml/3.2":description.
    gml__StringOrRefType*                description                    0;	///< Optional element.
/// @brief The value of this property is a remote text description of the object. The xlink:href attribute of the gml:descriptionReference property references the external description.
/// Element reference "http://www.opengis.net/gml/3.2":descriptionReference.
    gml__ReferenceType*                  descriptionReference           0;	///< Optional element.
/// @brief Often, a special identifier is assigned to an object by the maintaining authority with the intention that it is used in references to the object For such cases, the codeSpace shall be provided. That identifier is usually unique either globally or within an application domain. gml:identifier is a pre-defined property for such identifiers.
/// Element reference "http://www.opengis.net/gml/3.2":identifier.
    gml__CodeWithAuthorityType*          identifier                     0;	///< Optional element.
/// @brief The gml:name property provides a label or identifier for the object, commonly a descriptive name. An object may have several names, typically assigned by different authorities. gml:name uses the gml:CodeType content model. The authority for a name is indicated by the value of its (optional) codeSpace attribute. The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace. In common usage there will be one name per authority, so a processing application may select the name from its preferred codeSpace.
/// Vector of gml__CodeType* element refs with length 0..unbounded
    std::vector<gml__CodeType*         > name                           0;
//  END OF GROUP
/// Attribute reference "http://www.opengis.net/gml/3.2":id.
/// @brief The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.
   @xsd__ID                              id                             1;	///< Required attribute.
    END OF INHERITED FROM gml__AbstractGMLType */
/*  INHERITED FROM gml__AbstractTopologyType:
    END OF INHERITED FROM gml__AbstractTopologyType */
/// @brief A gml:directedNode property element describes the boundary of topology edges and is used in the support of topological point features via the gml:TopoPoint expression, see below. The orientation attribute of type gml:SignType expresses the sense in which the included node is used: start ("-") or end ("+") node.
/// Element reference "http://www.opengis.net/gml/3.2":directedNode.
    gml__DirectedNodePropertyType*       directedNode                   1;	///< Required element.
};

/// "http://www.opengis.net/gml/3.2":TopoCurveType is a complexType with complexContent extension of "http://www.opengis.net/gml/3.2":AbstractTopologyType.
/// class gml__TopoCurveType operations:
/// - soap_new_gml__TopoCurveType(soap*) allocate
/// - soap_new_gml__TopoCurveType(soap*, int num) allocate array
/// - soap_new_req_gml__TopoCurveType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__TopoCurveType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__TopoCurveType(soap*, gml__TopoCurveType*) deserialize from a stream
/// - int soap_write_gml__TopoCurveType(soap, gml__TopoCurveType*) serialize to a stream
class gml__TopoCurveType : public gml__AbstractTopologyType
{ public:
/*  INHERITED FROM gml__AbstractGMLType:
/// GROUP <xs:group name="StandardObjectProperties">
/// Vector of gml__MetaDataPropertyType* element refs with length 0..unbounded
    std::vector<gml__MetaDataPropertyType*> metaDataProperty               0;
/// @brief The value of this property is a text description of the object. gml:description uses gml:StringOrRefType as its content model, so it may contain a simple text string content, or carry a reference to an external description. The use of gml:description to reference an external description has been deprecated and replaced by the gml:descriptionReference property.
/// Element reference "http://www.opengis.net/gml/3.2":description.
    gml__StringOrRefType*                description                    0;	///< Optional element.
/// @brief The value of this property is a remote text description of the object. The xlink:href attribute of the gml:descriptionReference property references the external description.
/// Element reference "http://www.opengis.net/gml/3.2":descriptionReference.
    gml__ReferenceType*                  descriptionReference           0;	///< Optional element.
/// @brief Often, a special identifier is assigned to an object by the maintaining authority with the intention that it is used in references to the object For such cases, the codeSpace shall be provided. That identifier is usually unique either globally or within an application domain. gml:identifier is a pre-defined property for such identifiers.
/// Element reference "http://www.opengis.net/gml/3.2":identifier.
    gml__CodeWithAuthorityType*          identifier                     0;	///< Optional element.
/// @brief The gml:name property provides a label or identifier for the object, commonly a descriptive name. An object may have several names, typically assigned by different authorities. gml:name uses the gml:CodeType content model. The authority for a name is indicated by the value of its (optional) codeSpace attribute. The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace. In common usage there will be one name per authority, so a processing application may select the name from its preferred codeSpace.
/// Vector of gml__CodeType* element refs with length 0..unbounded
    std::vector<gml__CodeType*         > name                           0;
//  END OF GROUP
/// Attribute reference "http://www.opengis.net/gml/3.2":id.
/// @brief The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.
   @xsd__ID                              id                             1;	///< Required attribute.
    END OF INHERITED FROM gml__AbstractGMLType */
/*  INHERITED FROM gml__AbstractTopologyType:
    END OF INHERITED FROM gml__AbstractTopologyType */
/// @brief A gml:directedEdge property element describes the boundary of topology faces, the coBoundary of topology nodes and is used in the support of topological line features via the gml:TopoCurve expression, see below. The orientation attribute of type gml:SignType expresses the sense in which the included edge is used, i.e. forward or reverse.
/// Vector of gml__DirectedEdgePropertyType* element refs with length 1..unbounded
    std::vector<gml__DirectedEdgePropertyType*> directedEdge                   1;
/// Attribute aggregationType of type "http://www.opengis.net/gml/3.2":AggregationType.
   @enum gml__AggregationType*           aggregationType                0;	///< Optional attribute.
};

/// "http://www.opengis.net/gml/3.2":TopoSurfaceType is a complexType with complexContent extension of "http://www.opengis.net/gml/3.2":AbstractTopologyType.
/// class gml__TopoSurfaceType operations:
/// - soap_new_gml__TopoSurfaceType(soap*) allocate
/// - soap_new_gml__TopoSurfaceType(soap*, int num) allocate array
/// - soap_new_req_gml__TopoSurfaceType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__TopoSurfaceType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__TopoSurfaceType(soap*, gml__TopoSurfaceType*) deserialize from a stream
/// - int soap_write_gml__TopoSurfaceType(soap, gml__TopoSurfaceType*) serialize to a stream
class gml__TopoSurfaceType : public gml__AbstractTopologyType
{ public:
/*  INHERITED FROM gml__AbstractGMLType:
/// GROUP <xs:group name="StandardObjectProperties">
/// Vector of gml__MetaDataPropertyType* element refs with length 0..unbounded
    std::vector<gml__MetaDataPropertyType*> metaDataProperty               0;
/// @brief The value of this property is a text description of the object. gml:description uses gml:StringOrRefType as its content model, so it may contain a simple text string content, or carry a reference to an external description. The use of gml:description to reference an external description has been deprecated and replaced by the gml:descriptionReference property.
/// Element reference "http://www.opengis.net/gml/3.2":description.
    gml__StringOrRefType*                description                    0;	///< Optional element.
/// @brief The value of this property is a remote text description of the object. The xlink:href attribute of the gml:descriptionReference property references the external description.
/// Element reference "http://www.opengis.net/gml/3.2":descriptionReference.
    gml__ReferenceType*                  descriptionReference           0;	///< Optional element.
/// @brief Often, a special identifier is assigned to an object by the maintaining authority with the intention that it is used in references to the object For such cases, the codeSpace shall be provided. That identifier is usually unique either globally or within an application domain. gml:identifier is a pre-defined property for such identifiers.
/// Element reference "http://www.opengis.net/gml/3.2":identifier.
    gml__CodeWithAuthorityType*          identifier                     0;	///< Optional element.
/// @brief The gml:name property provides a label or identifier for the object, commonly a descriptive name. An object may have several names, typically assigned by different authorities. gml:name uses the gml:CodeType content model. The authority for a name is indicated by the value of its (optional) codeSpace attribute. The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace. In common usage there will be one name per authority, so a processing application may select the name from its preferred codeSpace.
/// Vector of gml__CodeType* element refs with length 0..unbounded
    std::vector<gml__CodeType*         > name                           0;
//  END OF GROUP
/// Attribute reference "http://www.opengis.net/gml/3.2":id.
/// @brief The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.
   @xsd__ID                              id                             1;	///< Required attribute.
    END OF INHERITED FROM gml__AbstractGMLType */
/*  INHERITED FROM gml__AbstractTopologyType:
    END OF INHERITED FROM gml__AbstractTopologyType */
/// @brief The gml:directedFace property element describes the boundary of topology solids, in the coBoundary of topology edges and is used in the support of surface features via the gml:TopoSurface expression, see below. The orientation attribute of type gml:SignType expresses the sense in which the included face is used i.e. inward or outward with respect to the surface normal in any geometric realisation.
/// Vector of gml__DirectedFacePropertyType* element refs with length 1..unbounded
    std::vector<gml__DirectedFacePropertyType*> directedFace                   1;
/// Attribute aggregationType of type "http://www.opengis.net/gml/3.2":AggregationType.
   @enum gml__AggregationType*           aggregationType                0;	///< Optional attribute.
};

/// "http://www.opengis.net/gml/3.2":TopoVolumeType is a complexType with complexContent extension of "http://www.opengis.net/gml/3.2":AbstractTopologyType.
/// class gml__TopoVolumeType operations:
/// - soap_new_gml__TopoVolumeType(soap*) allocate
/// - soap_new_gml__TopoVolumeType(soap*, int num) allocate array
/// - soap_new_req_gml__TopoVolumeType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__TopoVolumeType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__TopoVolumeType(soap*, gml__TopoVolumeType*) deserialize from a stream
/// - int soap_write_gml__TopoVolumeType(soap, gml__TopoVolumeType*) serialize to a stream
class gml__TopoVolumeType : public gml__AbstractTopologyType
{ public:
/*  INHERITED FROM gml__AbstractGMLType:
/// GROUP <xs:group name="StandardObjectProperties">
/// Vector of gml__MetaDataPropertyType* element refs with length 0..unbounded
    std::vector<gml__MetaDataPropertyType*> metaDataProperty               0;
/// @brief The value of this property is a text description of the object. gml:description uses gml:StringOrRefType as its content model, so it may contain a simple text string content, or carry a reference to an external description. The use of gml:description to reference an external description has been deprecated and replaced by the gml:descriptionReference property.
/// Element reference "http://www.opengis.net/gml/3.2":description.
    gml__StringOrRefType*                description                    0;	///< Optional element.
/// @brief The value of this property is a remote text description of the object. The xlink:href attribute of the gml:descriptionReference property references the external description.
/// Element reference "http://www.opengis.net/gml/3.2":descriptionReference.
    gml__ReferenceType*                  descriptionReference           0;	///< Optional element.
/// @brief Often, a special identifier is assigned to an object by the maintaining authority with the intention that it is used in references to the object For such cases, the codeSpace shall be provided. That identifier is usually unique either globally or within an application domain. gml:identifier is a pre-defined property for such identifiers.
/// Element reference "http://www.opengis.net/gml/3.2":identifier.
    gml__CodeWithAuthorityType*          identifier                     0;	///< Optional element.
/// @brief The gml:name property provides a label or identifier for the object, commonly a descriptive name. An object may have several names, typically assigned by different authorities. gml:name uses the gml:CodeType content model. The authority for a name is indicated by the value of its (optional) codeSpace attribute. The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace. In common usage there will be one name per authority, so a processing application may select the name from its preferred codeSpace.
/// Vector of gml__CodeType* element refs with length 0..unbounded
    std::vector<gml__CodeType*         > name                           0;
//  END OF GROUP
/// Attribute reference "http://www.opengis.net/gml/3.2":id.
/// @brief The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.
   @xsd__ID                              id                             1;	///< Required attribute.
    END OF INHERITED FROM gml__AbstractGMLType */
/*  INHERITED FROM gml__AbstractTopologyType:
    END OF INHERITED FROM gml__AbstractTopologyType */
/// @brief The gml:directedSolid property element describes the coBoundary of topology faces and is used in the support of volume features via the gml:TopoVolume expression, see below. The orientation attribute of type gml:SignType expresses the sense in which the included solid appears in the face coboundary. In the context of a gml:TopoVolume the orientation attribute has no meaning.
/// Vector of gml__DirectedTopoSolidPropertyType* element refs with length 1..unbounded
    std::vector<gml__DirectedTopoSolidPropertyType*> directedTopoSolid              1;
/// Attribute aggregationType of type "http://www.opengis.net/gml/3.2":AggregationType.
   @enum gml__AggregationType*           aggregationType                0;	///< Optional attribute.
};

/// "http://www.opengis.net/gml/3.2":TopoComplexType is a complexType with complexContent extension of "http://www.opengis.net/gml/3.2":AbstractTopologyType.
/// class gml__TopoComplexType operations:
/// - soap_new_gml__TopoComplexType(soap*) allocate
/// - soap_new_gml__TopoComplexType(soap*, int num) allocate array
/// - soap_new_req_gml__TopoComplexType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__TopoComplexType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__TopoComplexType(soap*, gml__TopoComplexType*) deserialize from a stream
/// - int soap_write_gml__TopoComplexType(soap, gml__TopoComplexType*) serialize to a stream
class gml__TopoComplexType : public gml__AbstractTopologyType
{ public:
/*  INHERITED FROM gml__AbstractGMLType:
/// GROUP <xs:group name="StandardObjectProperties">
/// Vector of gml__MetaDataPropertyType* element refs with length 0..unbounded
    std::vector<gml__MetaDataPropertyType*> metaDataProperty               0;
/// @brief The value of this property is a text description of the object. gml:description uses gml:StringOrRefType as its content model, so it may contain a simple text string content, or carry a reference to an external description. The use of gml:description to reference an external description has been deprecated and replaced by the gml:descriptionReference property.
/// Element reference "http://www.opengis.net/gml/3.2":description.
    gml__StringOrRefType*                description                    0;	///< Optional element.
/// @brief The value of this property is a remote text description of the object. The xlink:href attribute of the gml:descriptionReference property references the external description.
/// Element reference "http://www.opengis.net/gml/3.2":descriptionReference.
    gml__ReferenceType*                  descriptionReference           0;	///< Optional element.
/// @brief Often, a special identifier is assigned to an object by the maintaining authority with the intention that it is used in references to the object For such cases, the codeSpace shall be provided. That identifier is usually unique either globally or within an application domain. gml:identifier is a pre-defined property for such identifiers.
/// Element reference "http://www.opengis.net/gml/3.2":identifier.
    gml__CodeWithAuthorityType*          identifier                     0;	///< Optional element.
/// @brief The gml:name property provides a label or identifier for the object, commonly a descriptive name. An object may have several names, typically assigned by different authorities. gml:name uses the gml:CodeType content model. The authority for a name is indicated by the value of its (optional) codeSpace attribute. The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace. In common usage there will be one name per authority, so a processing application may select the name from its preferred codeSpace.
/// Vector of gml__CodeType* element refs with length 0..unbounded
    std::vector<gml__CodeType*         > name                           0;
//  END OF GROUP
/// Attribute reference "http://www.opengis.net/gml/3.2":id.
/// @brief The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.
   @xsd__ID                              id                             1;	///< Required attribute.
    END OF INHERITED FROM gml__AbstractGMLType */
/*  INHERITED FROM gml__AbstractTopologyType:
    END OF INHERITED FROM gml__AbstractTopologyType */
/// @brief The property elements gml:subComplex, gml:superComplex and gml:maximalComplex provide an encoding for relationships between topology complexes as described for gml:TopoComplex above.
/// Element reference "http://www.opengis.net/gml/3.2":maximalComplex.
    gml__TopoComplexPropertyType*        maximalComplex                 1;	///< Required element.
/// @brief The property elements gml:subComplex, gml:superComplex and gml:maximalComplex provide an encoding for relationships between topology complexes as described for gml:TopoComplex above.
/// Vector of gml__TopoComplexPropertyType* element refs with length 0..unbounded
    std::vector<gml__TopoComplexPropertyType*> superComplex                   0;
/// @brief The property elements gml:subComplex, gml:superComplex and gml:maximalComplex provide an encoding for relationships between topology complexes as described for gml:TopoComplex above.
/// Vector of gml__TopoComplexPropertyType* element refs with length 0..unbounded
    std::vector<gml__TopoComplexPropertyType*> subComplex                     0;
/// @brief The gml:topoPrimitiveMember property element encodes for the relationship between a topology complex and a single topology primitive.
/// Vector of gml__TopoPrimitiveMemberType* element refs with length 0..unbounded
    std::vector<gml__TopoPrimitiveMemberType*> topoPrimitiveMember            0;
/// @brief The gml:topoPrimitiveMembers property element encodes the relationship between a topology complex and an arbitrary number of topology primitives.
/// Element reference "http://www.opengis.net/gml/3.2":topoPrimitiveMembers.
    gml__TopoPrimitiveArrayAssociationType*  topoPrimitiveMembers           0;	///< Optional element.
/// Attribute isMaximal of type xs:boolean.
   @bool                                 isMaximal                      0 = false;	///< Default value="false".
/// Attribute aggregationType of type "http://www.opengis.net/gml/3.2":AggregationType.
   @enum gml__AggregationType*           aggregationType                0;	///< Optional attribute.
};

/// "http://www.opengis.net/gml/3.2":GeometricComplexType is a complexType with complexContent extension of "http://www.opengis.net/gml/3.2":AbstractGeometryType.
/// class gml__GeometricComplexType operations:
/// - soap_new_gml__GeometricComplexType(soap*) allocate
/// - soap_new_gml__GeometricComplexType(soap*, int num) allocate array
/// - soap_new_req_gml__GeometricComplexType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__GeometricComplexType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__GeometricComplexType(soap*, gml__GeometricComplexType*) deserialize from a stream
/// - int soap_write_gml__GeometricComplexType(soap, gml__GeometricComplexType*) serialize to a stream
class gml__GeometricComplexType : public gml__AbstractGeometryType
{ public:
/*  INHERITED FROM gml__AbstractGMLType:
/// GROUP <xs:group name="StandardObjectProperties">
/// Vector of gml__MetaDataPropertyType* element refs with length 0..unbounded
    std::vector<gml__MetaDataPropertyType*> metaDataProperty               0;
/// @brief The value of this property is a text description of the object. gml:description uses gml:StringOrRefType as its content model, so it may contain a simple text string content, or carry a reference to an external description. The use of gml:description to reference an external description has been deprecated and replaced by the gml:descriptionReference property.
/// Element reference "http://www.opengis.net/gml/3.2":description.
    gml__StringOrRefType*                description                    0;	///< Optional element.
/// @brief The value of this property is a remote text description of the object. The xlink:href attribute of the gml:descriptionReference property references the external description.
/// Element reference "http://www.opengis.net/gml/3.2":descriptionReference.
    gml__ReferenceType*                  descriptionReference           0;	///< Optional element.
/// @brief Often, a special identifier is assigned to an object by the maintaining authority with the intention that it is used in references to the object For such cases, the codeSpace shall be provided. That identifier is usually unique either globally or within an application domain. gml:identifier is a pre-defined property for such identifiers.
/// Element reference "http://www.opengis.net/gml/3.2":identifier.
    gml__CodeWithAuthorityType*          identifier                     0;	///< Optional element.
/// @brief The gml:name property provides a label or identifier for the object, commonly a descriptive name. An object may have several names, typically assigned by different authorities. gml:name uses the gml:CodeType content model. The authority for a name is indicated by the value of its (optional) codeSpace attribute. The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace. In common usage there will be one name per authority, so a processing application may select the name from its preferred codeSpace.
/// Vector of gml__CodeType* element refs with length 0..unbounded
    std::vector<gml__CodeType*         > name                           0;
//  END OF GROUP
/// Attribute reference "http://www.opengis.net/gml/3.2":id.
/// @brief The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.
   @xsd__ID                              id                             1;	///< Required attribute.
    END OF INHERITED FROM gml__AbstractGMLType */
/*  INHERITED FROM gml__AbstractGeometryType:
/// Attribute srsName of type xs:anyURI.
   @xsd__anyURI*                         srsName                        0;	///< Optional attribute.
/// Attribute srsDimension of type xs:positiveInteger.
   @xsd__positiveInteger*                srsDimension                   0;	///< Optional attribute.
/// Attribute axisLabels of type "http://www.opengis.net/gml/3.2":NCNameList.
   @gml__NCNameList*                     axisLabels                     0;	///< Optional attribute.
/// Attribute uomLabels of type "http://www.opengis.net/gml/3.2":NCNameList.
   @gml__NCNameList*                     uomLabels                      0;	///< Optional attribute.
    END OF INHERITED FROM gml__AbstractGeometryType */
/// Vector of gml__GeometricPrimitivePropertyType* with length 1..unbounded
    std::vector<gml__GeometricPrimitivePropertyType*> element                        1;
/// Attribute aggregationType of type "http://www.opengis.net/gml/3.2":AggregationType.
   @enum gml__AggregationType*           aggregationType                0;	///< Optional attribute.
};

/// "http://www.opengis.net/gml/3.2":AbstractGeometricAggregateType is an abstract complexType with complexContent extension of "http://www.opengis.net/gml/3.2":AbstractGeometryType.
/// class gml__AbstractGeometricAggregateType operations:
/// - soap_new_gml__AbstractGeometricAggregateType(soap*) allocate
/// - soap_new_gml__AbstractGeometricAggregateType(soap*, int num) allocate array
/// - soap_new_req_gml__AbstractGeometricAggregateType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__AbstractGeometricAggregateType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__AbstractGeometricAggregateType(soap*, gml__AbstractGeometricAggregateType*) deserialize from a stream
/// - int soap_write_gml__AbstractGeometricAggregateType(soap, gml__AbstractGeometricAggregateType*) serialize to a stream
class gml__AbstractGeometricAggregateType : public gml__AbstractGeometryType
{ public:
/*  INHERITED FROM gml__AbstractGMLType:
/// GROUP <xs:group name="StandardObjectProperties">
/// Vector of gml__MetaDataPropertyType* element refs with length 0..unbounded
    std::vector<gml__MetaDataPropertyType*> metaDataProperty               0;
/// @brief The value of this property is a text description of the object. gml:description uses gml:StringOrRefType as its content model, so it may contain a simple text string content, or carry a reference to an external description. The use of gml:description to reference an external description has been deprecated and replaced by the gml:descriptionReference property.
/// Element reference "http://www.opengis.net/gml/3.2":description.
    gml__StringOrRefType*                description                    0;	///< Optional element.
/// @brief The value of this property is a remote text description of the object. The xlink:href attribute of the gml:descriptionReference property references the external description.
/// Element reference "http://www.opengis.net/gml/3.2":descriptionReference.
    gml__ReferenceType*                  descriptionReference           0;	///< Optional element.
/// @brief Often, a special identifier is assigned to an object by the maintaining authority with the intention that it is used in references to the object For such cases, the codeSpace shall be provided. That identifier is usually unique either globally or within an application domain. gml:identifier is a pre-defined property for such identifiers.
/// Element reference "http://www.opengis.net/gml/3.2":identifier.
    gml__CodeWithAuthorityType*          identifier                     0;	///< Optional element.
/// @brief The gml:name property provides a label or identifier for the object, commonly a descriptive name. An object may have several names, typically assigned by different authorities. gml:name uses the gml:CodeType content model. The authority for a name is indicated by the value of its (optional) codeSpace attribute. The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace. In common usage there will be one name per authority, so a processing application may select the name from its preferred codeSpace.
/// Vector of gml__CodeType* element refs with length 0..unbounded
    std::vector<gml__CodeType*         > name                           0;
//  END OF GROUP
/// Attribute reference "http://www.opengis.net/gml/3.2":id.
/// @brief The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.
   @xsd__ID                              id                             1;	///< Required attribute.
    END OF INHERITED FROM gml__AbstractGMLType */
/*  INHERITED FROM gml__AbstractGeometryType:
/// Attribute srsName of type xs:anyURI.
   @xsd__anyURI*                         srsName                        0;	///< Optional attribute.
/// Attribute srsDimension of type xs:positiveInteger.
   @xsd__positiveInteger*                srsDimension                   0;	///< Optional attribute.
/// Attribute axisLabels of type "http://www.opengis.net/gml/3.2":NCNameList.
   @gml__NCNameList*                     axisLabels                     0;	///< Optional attribute.
/// Attribute uomLabels of type "http://www.opengis.net/gml/3.2":NCNameList.
   @gml__NCNameList*                     uomLabels                      0;	///< Optional attribute.
    END OF INHERITED FROM gml__AbstractGeometryType */
/// Attribute aggregationType of type "http://www.opengis.net/gml/3.2":AggregationType.
   @enum gml__AggregationType*           aggregationType                0;	///< Optional attribute.
};

/// "http://www.opengis.net/gml/3.2":ArcType is a complexType with complexContent restriction of "http://www.opengis.net/gml/3.2":ArcStringType.
/// class gml__ArcType operations:
/// - soap_new_gml__ArcType(soap*) allocate
/// - soap_new_gml__ArcType(soap*, int num) allocate array
/// - soap_new_req_gml__ArcType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__ArcType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__ArcType(soap*, gml__ArcType*) deserialize from a stream
/// - int soap_write_gml__ArcType(soap, gml__ArcType*) serialize to a stream
class gml__ArcType : public xsd__anyType
{ public:
/// CHOICE <xs:choice>
   $int                                  __union_ArcType               ;	///< Union _gml__union_ArcType selector: set to SOAP_UNION__gml__union_ArcType_<fieldname>
    union _gml__union_ArcType
    {
/// CHOICE <xs:choice minOccurs="3" maxOccurs="3">
    struct ___gml__union_ArcType_
    {
   $int                                  __size_ArcType_                3:3;
    class __gml__union_ArcType_
    {
   $int                                  __union_ArcType_               3;	///< Union _gml__union_ArcType_ selector: set to SOAP_UNION__gml__union_ArcType__<fieldname>
    union _gml__union_ArcType_
    {
/// Element reference "http://www.opengis.net/gml/3.2":pos.
    gml__DirectPositionType*             pos                            1;	///< Required element.
/// @brief This property element either references a point via the XLink-attributes or contains the point element. pointProperty is the predefined property which may be used by GML Application Schemas whenever a GML feature has a property with a value that is substitutable for Point.
/// Element reference "http://www.opengis.net/gml/3.2":pointProperty.
    gml__PointPropertyType*              pointProperty                  1;	///< Required element.
/// Element reference "http://www.opengis.net/gml/3.2":pointRep.
    gml__PointPropertyType*              pointRep                       1;	///< Required element.
    }                                    union_ArcType_                ;
    }                                   *__union_ArcType_              ;
    }                                    __union_ArcType_              ;
//  END OF CHOICE
/// Element reference "http://www.opengis.net/gml/3.2":posList.
    gml__DirectPositionListType*         posList                        1;	///< Required element.
/// Element reference "http://www.opengis.net/gml/3.2":coordinates.
    gml__CoordinatesType*                coordinates                    1;	///< Required element.
    }                                    union_ArcType                 ;
//  END OF CHOICE
/// Attribute numArc of type xs:integer.
   @long*                                numArc                         0;	///< Fixed optional value="1".
/// Attribute interpolation of type "http://www.opengis.net/gml/3.2":CurveInterpolationType.
   @enum gml__CurveInterpolationType*    interpolation                  0;	///< Fixed optional value="circularArc3Points".
/// Attribute numArc of type xs:integer.
   //jld @long*                                numArc                         0;	///< Optional attribute.
/// Attribute numDerivativesAtStart of type xs:integer.
   @long                                 numDerivativesAtStart          0 = 0;	///< Default value="0".
/// Attribute numDerivativesAtEnd of type xs:integer.
   @long                                 numDerivativesAtEnd            0 = 0;	///< Default value="0".
/// Attribute numDerivativeInterior of type xs:integer.
   @long                                 numDerivativeInterior          0 = 0;	///< Default value="0".
};

/// "http://www.opengis.net/gml/3.2":ArcByBulgeType is a complexType with complexContent restriction of "http://www.opengis.net/gml/3.2":ArcStringByBulgeType.
/// class gml__ArcByBulgeType operations:
/// - soap_new_gml__ArcByBulgeType(soap*) allocate
/// - soap_new_gml__ArcByBulgeType(soap*, int num) allocate array
/// - soap_new_req_gml__ArcByBulgeType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__ArcByBulgeType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__ArcByBulgeType(soap*, gml__ArcByBulgeType*) deserialize from a stream
/// - int soap_write_gml__ArcByBulgeType(soap, gml__ArcByBulgeType*) serialize to a stream
class gml__ArcByBulgeType : public xsd__anyType
{ public:
/// CHOICE <xs:choice>
   $int                                  __union_ArcByBulgeType        ;	///< Union _gml__union_ArcByBulgeType selector: set to SOAP_UNION__gml__union_ArcByBulgeType_<fieldname>
    union _gml__union_ArcByBulgeType
    {
/// CHOICE <xs:choice minOccurs="2" maxOccurs="2">
    struct ___gml__union_ArcByBulgeType_
    {
   $int                                  __size_ArcByBulgeType_         2:2;
    class __gml__union_ArcByBulgeType_
    {
   $int                                  __union_ArcByBulgeType_        2;	///< Union _gml__union_ArcByBulgeType_ selector: set to SOAP_UNION__gml__union_ArcByBulgeType__<fieldname>
    union _gml__union_ArcByBulgeType_
    {
/// Element reference "http://www.opengis.net/gml/3.2":pos.
    gml__DirectPositionType*             pos                            1;	///< Required element.
/// @brief This property element either references a point via the XLink-attributes or contains the point element. pointProperty is the predefined property which may be used by GML Application Schemas whenever a GML feature has a property with a value that is substitutable for Point.
/// Element reference "http://www.opengis.net/gml/3.2":pointProperty.
    gml__PointPropertyType*              pointProperty                  1;	///< Required element.
/// Element reference "http://www.opengis.net/gml/3.2":pointRep.
    gml__PointPropertyType*              pointRep                       1;	///< Required element.
    }                                    union_ArcByBulgeType_         ;
    }                                   *__union_ArcByBulgeType_       ;
    }                                    __union_ArcByBulgeType_       ;
//  END OF CHOICE
/// Element reference "http://www.opengis.net/gml/3.2":posList.
    gml__DirectPositionListType*         posList                        1;	///< Required element.
/// Element reference "http://www.opengis.net/gml/3.2":coordinates.
    gml__CoordinatesType*                coordinates                    1;	///< Required element.
    }                                    union_ArcByBulgeType          ;
//  END OF CHOICE
/// Element bulge of type xs:double.
    double                               bulge                          1;	///< Required element.
/// Element normal of type "http://www.opengis.net/gml/3.2":VectorType.
    gml__VectorType*                     normal                         1;	///< Required element.
/// Attribute numArc of type xs:integer.
   @long*                                numArc                         0;	///< Fixed optional value="1".
/// Attribute interpolation of type "http://www.opengis.net/gml/3.2":CurveInterpolationType.
   @enum gml__CurveInterpolationType*    interpolation                  0;	///< Fixed optional value="circularArc2PointWithBulge".
/// Attribute numArc of type xs:integer.
   //jld @long*                                numArc                         0;	///< Optional attribute.
/// Attribute numDerivativesAtStart of type xs:integer.
   @long                                 numDerivativesAtStart          0 = 0;	///< Default value="0".
/// Attribute numDerivativesAtEnd of type xs:integer.
   @long                                 numDerivativesAtEnd            0 = 0;	///< Default value="0".
/// Attribute numDerivativeInterior of type xs:integer.
   @long                                 numDerivativeInterior          0 = 0;	///< Default value="0".
};

/// "http://www.opengis.net/gml/3.2":CircleByCenterPointType is a complexType with complexContent restriction of "http://www.opengis.net/gml/3.2":ArcByCenterPointType.
/// class gml__CircleByCenterPointType operations:
/// - soap_new_gml__CircleByCenterPointType(soap*) allocate
/// - soap_new_gml__CircleByCenterPointType(soap*, int num) allocate array
/// - soap_new_req_gml__CircleByCenterPointType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__CircleByCenterPointType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__CircleByCenterPointType(soap*, gml__CircleByCenterPointType*) deserialize from a stream
/// - int soap_write_gml__CircleByCenterPointType(soap, gml__CircleByCenterPointType*) serialize to a stream
class gml__CircleByCenterPointType : public xsd__anyType
{ public:
/// CHOICE <xs:choice>
   $int                                  __union_CircleByCenterPointType;	///< Union _gml__union_CircleByCenterPointType selector: set to SOAP_UNION__gml__union_CircleByCenterPointType_<fieldname>
    union _gml__union_CircleByCenterPointType
    {
/// CHOICE <xs:choice>
/// Element reference "http://www.opengis.net/gml/3.2":pos.
    gml__DirectPositionType*             pos                            1;	///< Required element.
/// @brief This property element either references a point via the XLink-attributes or contains the point element. pointProperty is the predefined property which may be used by GML Application Schemas whenever a GML feature has a property with a value that is substitutable for Point.
/// Element reference "http://www.opengis.net/gml/3.2":pointProperty.
    gml__PointPropertyType*              pointProperty                  1;	///< Required element.
/// Element reference "http://www.opengis.net/gml/3.2":pointRep.
    gml__PointPropertyType*              pointRep                       1;	///< Required element.
;
//  END OF CHOICE
/// Element reference "http://www.opengis.net/gml/3.2":posList.
    gml__DirectPositionListType*         posList                        1;	///< Required element.
/// Element reference "http://www.opengis.net/gml/3.2":coordinates.
    gml__CoordinatesType*                coordinates                    1;	///< Required element.
    }                                    union_CircleByCenterPointType ;
//  END OF CHOICE
/// Element radius of type "http://www.opengis.net/gml/3.2":LengthType.
    gml__LengthType*                     radius                         1;	///< Required element.
/// Attribute interpolation of type "http://www.opengis.net/gml/3.2":CurveInterpolationType.
   @enum gml__CurveInterpolationType*    interpolation                  0;	///< Fixed optional value="circularArcCenterPointWithRadius".
/// Attribute numArc of type xs:integer.
   @long                                 numArc                         1 = 1;	///< Fixed required value="1".
/// Attribute numDerivativesAtStart of type xs:integer.
   @long                                 numDerivativesAtStart          0 = 0;	///< Default value="0".
/// Attribute numDerivativesAtEnd of type xs:integer.
   @long                                 numDerivativesAtEnd            0 = 0;	///< Default value="0".
/// Attribute numDerivativeInterior of type xs:integer.
   @long                                 numDerivativeInterior          0 = 0;	///< Default value="0".
};

/// "http://www.opengis.net/gml/3.2":BezierType is a complexType with complexContent restriction of "http://www.opengis.net/gml/3.2":BSplineType.
/// class gml__BezierType operations:
/// - soap_new_gml__BezierType(soap*) allocate
/// - soap_new_gml__BezierType(soap*, int num) allocate array
/// - soap_new_req_gml__BezierType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__BezierType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__BezierType(soap*, gml__BezierType*) deserialize from a stream
/// - int soap_write_gml__BezierType(soap, gml__BezierType*) serialize to a stream
class gml__BezierType : public xsd__anyType
{ public:
/// CHOICE <xs:choice>
   $int                                  __union_BezierType            ;	///< Union _gml__union_BezierType selector: set to SOAP_UNION__gml__union_BezierType_<fieldname>
    union _gml__union_BezierType
    {
/// CHOICE <xs:choice minOccurs="0" maxOccurs="unbounded">
    struct ___gml__union_BezierType_
    {
   $int                                  __size_BezierType_             0;
    class __gml__union_BezierType_
    {
   $int                                  __union_BezierType_            0;	///< Union _gml__union_BezierType_ selector: set to SOAP_UNION__gml__union_BezierType__<fieldname> or 0
    union _gml__union_BezierType_
    {
/// Element reference "http://www.opengis.net/gml/3.2":pos.
    gml__DirectPositionType*             pos                            1;	///< Required element.
/// @brief This property element either references a point via the XLink-attributes or contains the point element. pointProperty is the predefined property which may be used by GML Application Schemas whenever a GML feature has a property with a value that is substitutable for Point.
/// Element reference "http://www.opengis.net/gml/3.2":pointProperty.
    gml__PointPropertyType*              pointProperty                  1;	///< Required element.
/// Element reference "http://www.opengis.net/gml/3.2":pointRep.
    gml__PointPropertyType*              pointRep                       1;	///< Required element.
    }                                    union_BezierType_             ;
    }                                   *__union_BezierType_           ;
    }                                    __union_BezierType_           ;
//  END OF CHOICE
/// Element reference "http://www.opengis.net/gml/3.2":posList.
    gml__DirectPositionListType*         posList                        1;	///< Required element.
/// Element reference "http://www.opengis.net/gml/3.2":coordinates.
    gml__CoordinatesType*                coordinates                    1;	///< Required element.
    }                                    union_BezierType              ;
//  END OF CHOICE
/// Element degree of type xs:nonNegativeInteger.
    xsd__nonNegativeInteger              degree                         1;	///< Required element.
/// Vector of gml__KnotPropertyType* with length 2..2
    std::vector<gml__KnotPropertyType* > knot                           2:2;
/// Attribute interpolation of type "http://www.opengis.net/gml/3.2":CurveInterpolationType.
   @enum gml__CurveInterpolationType*    interpolation                  0;	///< Fixed optional value="polynomialSpline".
/// Attribute isPolynomial of type xs:boolean.
   @bool*                                isPolynomial                   0;	///< Fixed optional value="true".
/// Attribute knotType of type "http://www.opengis.net/gml/3.2":KnotTypesType.
   @enum gml__KnotTypesType*             knotType                       0:0;	///< Prohibited attribute.
/// Attribute interpolation of type "http://www.opengis.net/gml/3.2":CurveInterpolationType.
   //jld @enum gml__CurveInterpolationType     interpolation                  0 = gml__CurveInterpolationType__polynomialSpline;	///< Default value="polynomialSpline".
/// Attribute isPolynomial of type xs:boolean.
   //jld @bool*                                isPolynomial                   0;	///< Optional attribute.
/// Attribute knotType of type "http://www.opengis.net/gml/3.2":KnotTypesType.
   //jld @enum gml__KnotTypesType*             knotType                       0;	///< Optional attribute.
/// Attribute numDerivativesAtStart of type xs:integer.
   @long                                 numDerivativesAtStart          0 = 0;	///< Default value="0".
/// Attribute numDerivativesAtEnd of type xs:integer.
   @long                                 numDerivativesAtEnd            0 = 0;	///< Default value="0".
/// Attribute numDerivativeInterior of type xs:integer.
   @long                                 numDerivativeInterior          0 = 0;	///< Default value="0".
};

/// "http://www.opengis.net/gml/3.2":GeodesicType is a complexType with complexContent extension of "http://www.opengis.net/gml/3.2":GeodesicStringType.
/// class gml__GeodesicType operations:
/// - soap_new_gml__GeodesicType(soap*) allocate
/// - soap_new_gml__GeodesicType(soap*, int num) allocate array
/// - soap_new_req_gml__GeodesicType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__GeodesicType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__GeodesicType(soap*, gml__GeodesicType*) deserialize from a stream
/// - int soap_write_gml__GeodesicType(soap, gml__GeodesicType*) serialize to a stream
class gml__GeodesicType : public gml__GeodesicStringType
{ public:
/*  INHERITED FROM gml__AbstractCurveSegmentType:
/// Attribute numDerivativesAtStart of type xs:integer.
   @long                                 numDerivativesAtStart          0 = 0;	///< Default value="0".
/// Attribute numDerivativesAtEnd of type xs:integer.
   @long                                 numDerivativesAtEnd            0 = 0;	///< Default value="0".
/// Attribute numDerivativeInterior of type xs:integer.
   @long                                 numDerivativeInterior          0 = 0;	///< Default value="0".
    END OF INHERITED FROM gml__AbstractCurveSegmentType */
/*  INHERITED FROM gml__GeodesicStringType:
/// CHOICE <xs:choice>
/// Note: <xs:choice> with embedded <xs:sequence> or <xs:group> prevents the use of a union
/// Element reference "http://www.opengis.net/gml/3.2":posList.
    gml__DirectPositionListType*         posList                       ;
/// GROUP <xs:group name="geometricPositionGroup" minOccurs="2" maxOccurs="unbounded">
/// @brief GML supports two different ways to specify a geometric position: either by a direct position (a data type) or a point (a geometric object). pos elements are positions that are "owned" by the geometric primitive encapsulating this geometric position. pointProperty elements contain a point that may be referenced from other geometry elements or reference another point defined elsewhere (reuse of existing points).
/// CHOICE <xs:choice minOccurs="2" maxOccurs="unbounded">
   $int                                  __size_GeodesicType_           2;
    class __gml__union_GeodesicType_
    {
   $int                                  __union_GeodesicType_          2;	///< Union _gml__union_GeodesicType_ selector: set to SOAP_UNION__gml__union_GeodesicType__<fieldname>
    union _gml__union_GeodesicType_
    {
/// Element reference "http://www.opengis.net/gml/3.2":pos.
    gml__DirectPositionType*             pos                           ;
/// @brief This property element either references a point via the XLink-attributes or contains the point element. pointProperty is the predefined property which may be used by GML Application Schemas whenever a GML feature has a property with a value that is substitutable for Point.
/// Element reference "http://www.opengis.net/gml/3.2":pointProperty.
    gml__PointPropertyType*              pointProperty                 ;
    }                                    union_GeodesicType_           ;
    }                                   *__union_GeodesicType_         ;
//  END OF CHOICE
//  END OF GROUP
;
//  END OF CHOICE
/// Attribute interpolation of type "http://www.opengis.net/gml/3.2":CurveInterpolationType.
   @enum gml__CurveInterpolationType*    interpolation                  0;	///< Fixed optional value="geodesic".
    END OF INHERITED FROM gml__GeodesicStringType */
};

/// "http://www.opengis.net/gml/3.2":AbstractGriddedSurfaceType is an abstract complexType with complexContent extension of "http://www.opengis.net/gml/3.2":AbstractParametricCurveSurfaceType.
/// class gml__AbstractGriddedSurfaceType operations:
/// - soap_new_gml__AbstractGriddedSurfaceType(soap*) allocate
/// - soap_new_gml__AbstractGriddedSurfaceType(soap*, int num) allocate array
/// - soap_new_req_gml__AbstractGriddedSurfaceType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__AbstractGriddedSurfaceType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__AbstractGriddedSurfaceType(soap*, gml__AbstractGriddedSurfaceType*) deserialize from a stream
/// - int soap_write_gml__AbstractGriddedSurfaceType(soap, gml__AbstractGriddedSurfaceType*) serialize to a stream
class gml__AbstractGriddedSurfaceType : public gml__AbstractParametricCurveSurfaceType
{ public:
/*  INHERITED FROM gml__AbstractSurfacePatchType:
    END OF INHERITED FROM gml__AbstractSurfacePatchType */
/*  INHERITED FROM gml__AbstractParametricCurveSurfaceType:
/// Attribute aggregationType of type "http://www.opengis.net/gml/3.2":AggregationType.
   @enum gml__AggregationType*           aggregationType                0;	///< Optional attribute.
    END OF INHERITED FROM gml__AbstractParametricCurveSurfaceType */
/// GROUP <xs:group name="PointGrid">
/// @brief A gml:PointGrid group contains or references points or positions which are organised into sequences or grids. All rows shall have the same number of positions (columns).
/// class _gml__AbstractGriddedSurfaceType_rows operations:
/// - soap_new__gml__AbstractGriddedSurfaceType_rows(soap*) allocate
/// - soap_new__gml__AbstractGriddedSurfaceType_rows(soap*, int num) allocate array
/// - soap_new_req__gml__AbstractGriddedSurfaceType_rows(soap*, ...) allocate, set required members
/// - soap_new_set__gml__AbstractGriddedSurfaceType_rows(soap*, ...) allocate, set all public members
/// - int soap_read__gml__AbstractGriddedSurfaceType_rows(soap*, _gml__AbstractGriddedSurfaceType_rows*) deserialize from a stream
/// - int soap_write__gml__AbstractGriddedSurfaceType_rows(soap, _gml__AbstractGriddedSurfaceType_rows*) serialize to a stream
    class _gml__AbstractGriddedSurfaceType_rows
    {
/// Vector of Row with length 1..unbounded
    std::vector<
/// class _gml__AbstractGriddedSurfaceType_rows_Row operations:
/// - soap_new__gml__AbstractGriddedSurfaceType_rows_Row(soap*) allocate
/// - soap_new__gml__AbstractGriddedSurfaceType_rows_Row(soap*, int num) allocate array
/// - soap_new_req__gml__AbstractGriddedSurfaceType_rows_Row(soap*, ...) allocate, set required members
/// - soap_new_set__gml__AbstractGriddedSurfaceType_rows_Row(soap*, ...) allocate, set all public members
/// - int soap_read__gml__AbstractGriddedSurfaceType_rows_Row(soap*, _gml__AbstractGriddedSurfaceType_rows_Row*) deserialize from a stream
/// - int soap_write__gml__AbstractGriddedSurfaceType_rows_Row(soap, _gml__AbstractGriddedSurfaceType_rows_Row*) serialize to a stream
    class _gml__AbstractGriddedSurfaceType_rows_Row
    {
    }>                                   Row                            1;
    }                                    rows                           1;	///< Required element.
//  END OF GROUP
/// Attribute rows of type xs:integer.
   @long*                                nrows                           0;	///< Optional attribute.
/// Attribute columns of type xs:integer.
   @long*                                ncolumns                        0;	///< Optional attribute.
};

/// "http://www.opengis.net/gml/3.2":VectorType is a complexType with simpleContent.
/// @brief For some applications the components of the position may be adjusted to yield a unit vector.
/// class gml__VectorType operations:
/// - soap_new_gml__VectorType(soap*) allocate
/// - soap_new_gml__VectorType(soap*, int num) allocate array
/// - soap_new_req_gml__VectorType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__VectorType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__VectorType(soap*, gml__VectorType*) deserialize from a stream
/// - int soap_write_gml__VectorType(soap, gml__VectorType*) serialize to a stream
class gml__VectorType : public xsd__anyType
{ public:
/// __item wraps '"http://www.opengis.net/gml/3.2":doubleList' simpleContent.
    gml__doubleList                      __item                        ;
/// Attribute srsName of type xs:anyURI.
   @xsd__anyURI*                         srsName                        0;	///< Optional attribute.
/// Attribute srsDimension of type xs:positiveInteger.
   @xsd__positiveInteger*                srsDimension                   0;	///< Optional attribute.
/// Attribute axisLabels of type "http://www.opengis.net/gml/3.2":NCNameList.
   @gml__NCNameList*                     axisLabels                     0;	///< Optional attribute.
/// Attribute uomLabels of type "http://www.opengis.net/gml/3.2":NCNameList.
   @gml__NCNameList*                     uomLabels                      0;	///< Optional attribute.
};

/// "http://www.opengis.net/gml/3.2":AbstractGeometricPrimitiveType is an abstract complexType with complexContent extension of "http://www.opengis.net/gml/3.2":AbstractGeometryType.
/// @brief gml:AbstractGeometricPrimitiveType is the abstract root type of the geometric primitives. A geometric primitive is a geometric object that is not decomposed further into other primitives in the system. All primitives are oriented in the direction implied by the sequence of their coordinate tuples.
/// class gml__AbstractGeometricPrimitiveType operations:
/// - soap_new_gml__AbstractGeometricPrimitiveType(soap*) allocate
/// - soap_new_gml__AbstractGeometricPrimitiveType(soap*, int num) allocate array
/// - soap_new_req_gml__AbstractGeometricPrimitiveType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__AbstractGeometricPrimitiveType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__AbstractGeometricPrimitiveType(soap*, gml__AbstractGeometricPrimitiveType*) deserialize from a stream
/// - int soap_write_gml__AbstractGeometricPrimitiveType(soap, gml__AbstractGeometricPrimitiveType*) serialize to a stream
class gml__AbstractGeometricPrimitiveType : public gml__AbstractGeometryType
{ public:
/*  INHERITED FROM gml__AbstractGMLType:
/// GROUP <xs:group name="StandardObjectProperties">
/// Vector of gml__MetaDataPropertyType* element refs with length 0..unbounded
    std::vector<gml__MetaDataPropertyType*> metaDataProperty               0;
/// @brief The value of this property is a text description of the object. gml:description uses gml:StringOrRefType as its content model, so it may contain a simple text string content, or carry a reference to an external description. The use of gml:description to reference an external description has been deprecated and replaced by the gml:descriptionReference property.
/// Element reference "http://www.opengis.net/gml/3.2":description.
    gml__StringOrRefType*                description                    0;	///< Optional element.
/// @brief The value of this property is a remote text description of the object. The xlink:href attribute of the gml:descriptionReference property references the external description.
/// Element reference "http://www.opengis.net/gml/3.2":descriptionReference.
    gml__ReferenceType*                  descriptionReference           0;	///< Optional element.
/// @brief Often, a special identifier is assigned to an object by the maintaining authority with the intention that it is used in references to the object For such cases, the codeSpace shall be provided. That identifier is usually unique either globally or within an application domain. gml:identifier is a pre-defined property for such identifiers.
/// Element reference "http://www.opengis.net/gml/3.2":identifier.
    gml__CodeWithAuthorityType*          identifier                     0;	///< Optional element.
/// @brief The gml:name property provides a label or identifier for the object, commonly a descriptive name. An object may have several names, typically assigned by different authorities. gml:name uses the gml:CodeType content model. The authority for a name is indicated by the value of its (optional) codeSpace attribute. The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace. In common usage there will be one name per authority, so a processing application may select the name from its preferred codeSpace.
/// Vector of gml__CodeType* element refs with length 0..unbounded
    std::vector<gml__CodeType*         > name                           0;
//  END OF GROUP
/// Attribute reference "http://www.opengis.net/gml/3.2":id.
/// @brief The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.
   @xsd__ID                              id                             1;	///< Required attribute.
    END OF INHERITED FROM gml__AbstractGMLType */
/*  INHERITED FROM gml__AbstractGeometryType:
/// Attribute srsName of type xs:anyURI.
   @xsd__anyURI*                         srsName                        0;	///< Optional attribute.
/// Attribute srsDimension of type xs:positiveInteger.
   @xsd__positiveInteger*                srsDimension                   0;	///< Optional attribute.
/// Attribute axisLabels of type "http://www.opengis.net/gml/3.2":NCNameList.
   @gml__NCNameList*                     axisLabels                     0;	///< Optional attribute.
/// Attribute uomLabels of type "http://www.opengis.net/gml/3.2":NCNameList.
   @gml__NCNameList*                     uomLabels                      0;	///< Optional attribute.
    END OF INHERITED FROM gml__AbstractGeometryType */
};

/// "http://www.opengis.net/gml/3.2":LengthType is a complexType with simpleContent.
/// @brief This is a prototypical definition for a specific measure type defined as a vacuous extension (i.e. aliases) of gml:MeasureType. In this case, the content model supports the description of a length (or distance) quantity, with its units. The unit of measure referenced by uom shall be suitable for a length, such as metres or feet.
/// class gml__LengthType operations:
/// - soap_new_gml__LengthType(soap*) allocate
/// - soap_new_gml__LengthType(soap*, int num) allocate array
/// - soap_new_req_gml__LengthType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__LengthType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__LengthType(soap*, gml__LengthType*) deserialize from a stream
/// - int soap_write_gml__LengthType(soap, gml__LengthType*) serialize to a stream
class gml__LengthType : public gml__MeasureType
{ public:
};

/// "http://www.opengis.net/gml/3.2":ScaleType is a complexType with simpleContent.
/// class gml__ScaleType operations:
/// - soap_new_gml__ScaleType(soap*) allocate
/// - soap_new_gml__ScaleType(soap*, int num) allocate array
/// - soap_new_req_gml__ScaleType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__ScaleType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__ScaleType(soap*, gml__ScaleType*) deserialize from a stream
/// - int soap_write_gml__ScaleType(soap, gml__ScaleType*) serialize to a stream
class gml__ScaleType : public gml__MeasureType
{ public:
};

/// "http://www.opengis.net/gml/3.2":TimeType is a complexType with simpleContent.
/// class gml__TimeType operations:
/// - soap_new_gml__TimeType(soap*) allocate
/// - soap_new_gml__TimeType(soap*, int num) allocate array
/// - soap_new_req_gml__TimeType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__TimeType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__TimeType(soap*, gml__TimeType*) deserialize from a stream
/// - int soap_write_gml__TimeType(soap, gml__TimeType*) serialize to a stream
class gml__TimeType : public gml__MeasureType
{ public:
};

/// "http://www.opengis.net/gml/3.2":GridLengthType is a complexType with simpleContent.
/// class gml__GridLengthType operations:
/// - soap_new_gml__GridLengthType(soap*) allocate
/// - soap_new_gml__GridLengthType(soap*, int num) allocate array
/// - soap_new_req_gml__GridLengthType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__GridLengthType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__GridLengthType(soap*, gml__GridLengthType*) deserialize from a stream
/// - int soap_write_gml__GridLengthType(soap, gml__GridLengthType*) serialize to a stream
class gml__GridLengthType : public gml__MeasureType
{ public:
};

/// "http://www.opengis.net/gml/3.2":AreaType is a complexType with simpleContent.
/// class gml__AreaType operations:
/// - soap_new_gml__AreaType(soap*) allocate
/// - soap_new_gml__AreaType(soap*, int num) allocate array
/// - soap_new_req_gml__AreaType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__AreaType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__AreaType(soap*, gml__AreaType*) deserialize from a stream
/// - int soap_write_gml__AreaType(soap, gml__AreaType*) serialize to a stream
class gml__AreaType : public gml__MeasureType
{ public:
};

/// "http://www.opengis.net/gml/3.2":VolumeType is a complexType with simpleContent.
/// class gml__VolumeType operations:
/// - soap_new_gml__VolumeType(soap*) allocate
/// - soap_new_gml__VolumeType(soap*, int num) allocate array
/// - soap_new_req_gml__VolumeType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__VolumeType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__VolumeType(soap*, gml__VolumeType*) deserialize from a stream
/// - int soap_write_gml__VolumeType(soap, gml__VolumeType*) serialize to a stream
class gml__VolumeType : public gml__MeasureType
{ public:
};

/// "http://www.opengis.net/gml/3.2":SpeedType is a complexType with simpleContent.
/// class gml__SpeedType operations:
/// - soap_new_gml__SpeedType(soap*) allocate
/// - soap_new_gml__SpeedType(soap*, int num) allocate array
/// - soap_new_req_gml__SpeedType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__SpeedType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__SpeedType(soap*, gml__SpeedType*) deserialize from a stream
/// - int soap_write_gml__SpeedType(soap, gml__SpeedType*) serialize to a stream
class gml__SpeedType : public gml__MeasureType
{ public:
};

/// "http://www.opengis.net/gml/3.2":AngleType is a complexType with simpleContent.
/// class gml__AngleType operations:
/// - soap_new_gml__AngleType(soap*) allocate
/// - soap_new_gml__AngleType(soap*, int num) allocate array
/// - soap_new_req_gml__AngleType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__AngleType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__AngleType(soap*, gml__AngleType*) deserialize from a stream
/// - int soap_write_gml__AngleType(soap, gml__AngleType*) serialize to a stream
class gml__AngleType : public gml__MeasureType
{ public:
};

/// "http://www.opengis.net/gml/3.2":DefinitionType is a complexType with complexContent extension of "http://www.opengis.net/gml/3.2":DefinitionBaseType.
/// class gml__DefinitionType operations:
/// - soap_new_gml__DefinitionType(soap*) allocate
/// - soap_new_gml__DefinitionType(soap*, int num) allocate array
/// - soap_new_req_gml__DefinitionType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__DefinitionType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__DefinitionType(soap*, gml__DefinitionType*) deserialize from a stream
/// - int soap_write_gml__DefinitionType(soap, gml__DefinitionType*) serialize to a stream
class gml__DefinitionType : public gml__DefinitionBaseType
{ public:
/*  INHERITED FROM gml__DefinitionBaseType:
    END OF INHERITED FROM gml__DefinitionBaseType */
/// Element reference "http://www.opengis.net/gml/3.2":remarks.
    std::string*                         remarks                        0;	///< Optional element.
};

/// "http://www.opengis.net/gml/3.2":CodeWithAuthorityType is a complexType with simpleContent.
/// @brief gml:CodeWithAuthorityType requires that the codeSpace attribute is provided in an instance.
/// class gml__CodeWithAuthorityType operations:
/// - soap_new_gml__CodeWithAuthorityType(soap*) allocate
/// - soap_new_gml__CodeWithAuthorityType(soap*, int num) allocate array
/// - soap_new_req_gml__CodeWithAuthorityType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__CodeWithAuthorityType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__CodeWithAuthorityType(soap*, gml__CodeWithAuthorityType*) deserialize from a stream
/// - int soap_write_gml__CodeWithAuthorityType(soap, gml__CodeWithAuthorityType*) serialize to a stream
class gml__CodeWithAuthorityType : public xsd__anyType
{ public:
/// __item wraps 'xs:string' simpleContent.
    std::string                          __item                        ;
/// Attribute codeSpace of type xs:anyURI.
   @xsd__anyURI                          codeSpace                      1;	///< Required attribute.
/// Attribute codeSpace of type xs:anyURI.
   //jld @xsd__anyURI*                         codeSpace                      0;	///< Optional attribute.
};

/// "http://www.opengis.net/gml/3.2":AbstractCoverageType is an abstract complexType with complexContent extension of "http://www.opengis.net/gml/3.2":AbstractFeatureType.
/// @brief The base type for coverages is gml:AbstractCoverageType. The basic elements of a coverage can be seen in this content model: the coverage contains gml:domainSet and gml:rangeSet properties. The gml:domainSet property describes the domain of the coverage and the gml:rangeSet property describes the range of the coverage.
/// class gml__AbstractCoverageType operations:
/// - soap_new_gml__AbstractCoverageType(soap*) allocate
/// - soap_new_gml__AbstractCoverageType(soap*, int num) allocate array
/// - soap_new_req_gml__AbstractCoverageType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__AbstractCoverageType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__AbstractCoverageType(soap*, gml__AbstractCoverageType*) deserialize from a stream
/// - int soap_write_gml__AbstractCoverageType(soap, gml__AbstractCoverageType*) serialize to a stream
class gml__AbstractCoverageType : public gml__AbstractFeatureType
{ public:
/*  INHERITED FROM gml__AbstractGMLType:
/// GROUP <xs:group name="StandardObjectProperties">
/// Vector of gml__MetaDataPropertyType* element refs with length 0..unbounded
    std::vector<gml__MetaDataPropertyType*> metaDataProperty               0;
/// @brief The value of this property is a text description of the object. gml:description uses gml:StringOrRefType as its content model, so it may contain a simple text string content, or carry a reference to an external description. The use of gml:description to reference an external description has been deprecated and replaced by the gml:descriptionReference property.
/// Element reference "http://www.opengis.net/gml/3.2":description.
    gml__StringOrRefType*                description                    0;	///< Optional element.
/// @brief The value of this property is a remote text description of the object. The xlink:href attribute of the gml:descriptionReference property references the external description.
/// Element reference "http://www.opengis.net/gml/3.2":descriptionReference.
    gml__ReferenceType*                  descriptionReference           0;	///< Optional element.
/// @brief Often, a special identifier is assigned to an object by the maintaining authority with the intention that it is used in references to the object For such cases, the codeSpace shall be provided. That identifier is usually unique either globally or within an application domain. gml:identifier is a pre-defined property for such identifiers.
/// Element reference "http://www.opengis.net/gml/3.2":identifier.
    gml__CodeWithAuthorityType*          identifier                     0;	///< Optional element.
/// @brief The gml:name property provides a label or identifier for the object, commonly a descriptive name. An object may have several names, typically assigned by different authorities. gml:name uses the gml:CodeType content model. The authority for a name is indicated by the value of its (optional) codeSpace attribute. The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace. In common usage there will be one name per authority, so a processing application may select the name from its preferred codeSpace.
/// Vector of gml__CodeType* element refs with length 0..unbounded
    std::vector<gml__CodeType*         > name                           0;
//  END OF GROUP
/// Attribute reference "http://www.opengis.net/gml/3.2":id.
/// @brief The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.
   @xsd__ID                              id                             1;	///< Required attribute.
    END OF INHERITED FROM gml__AbstractGMLType */
/*  INHERITED FROM gml__AbstractFeatureType:
/// @brief This property describes the minimum bounding box or rectangle that encloses the entire feature.
/// Element reference "http://www.opengis.net/gml/3.2":boundedBy.
    gml__BoundingShapeType*              boundedBy                      0;	///< Optional element.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="location" minOccurs="0"> with elements <priorityLocation>
   $int                                  __unionlocation                0;	///< Union _gml__union_AbstractCoverageType selector: set to SOAP_UNION__gml__union_AbstractCoverageType_<fieldname> or 0
/// Union for substitutionGroup="location"
    union _gml__union_AbstractCoverageType
    {
/// Element reference "http://www.opengis.net/gml/3.2":location.
    gml__LocationPropertyType*           location                       0;	///< Optional element.
/// Element priorityLocation of type "http://www.opengis.net/gml/3.2":PriorityLocationPropertyType.
    gml__PriorityLocationPropertyType*   priorityLocation               1;	///< Required element.
    }                                    __union_AbstractCoverageType  ;
//  END OF CHOICE OF SUBSTITUTIONS
    END OF INHERITED FROM gml__AbstractFeatureType */
/// @brief The gml:domainSet property element describes the spatio-temporal region of interest, within which the coverage is defined. Its content model is given by gml:DomainSetType. The value of the domain is thus a choice between a gml:AbstractGeometry and a gml:AbstractTimeObject. In the instance these abstract elements will normally be substituted by a geometry complex or temporal complex, to represent spatial coverages and time-series, respectively. The presence of the gml:AssociationAttributeGroup means that domainSet follows the usual GML property model and may use the xlink:href attribute to point to the domain, as an alternative to describing the domain inline. Ownership semantics may be provided using the gml:OwnershipAttributeGroup.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="domainSet"> with elements <multiPointDomain> <multiCurveDomain> <multiSurfaceDomain> <multiSolidDomain> <gridDomain> <rectifiedGridDomain>
   $int                                  __uniondomainSet               0;	///< Union _gml__union_AbstractCoverageType_ selector: set to SOAP_UNION__gml__union_AbstractCoverageType__<fieldname>
/// Union for substitutionGroup="domainSet"
    union _gml__union_AbstractCoverageType_
    {
/// @brief The gml:domainSet property element describes the spatio-temporal region of interest, within which the coverage is defined. Its content model is given by gml:DomainSetType. The value of the domain is thus a choice between a gml:AbstractGeometry and a gml:AbstractTimeObject. In the instance these abstract elements will normally be substituted by a geometry complex or temporal complex, to represent spatial coverages and time-series, respectively. The presence of the gml:AssociationAttributeGroup means that domainSet follows the usual GML property model and may use the xlink:href attribute to point to the domain, as an alternative to describing the domain inline. Ownership semantics may be provided using the gml:OwnershipAttributeGroup.
/// Element reference "http://www.opengis.net/gml/3.2":domainSet.
    gml__DomainSetType*                  domainSet                      1;	///< Required element.
/// Element multiPointDomain of type "http://www.opengis.net/gml/3.2":DomainSetType.
    gml__DomainSetType*                  multiPointDomain               1;	///< Required element.
/// Element multiCurveDomain of type "http://www.opengis.net/gml/3.2":DomainSetType.
    gml__DomainSetType*                  multiCurveDomain               1;	///< Required element.
/// Element multiSurfaceDomain of type "http://www.opengis.net/gml/3.2":DomainSetType.
    gml__DomainSetType*                  multiSurfaceDomain             1;	///< Required element.
/// Element multiSolidDomain of type "http://www.opengis.net/gml/3.2":DomainSetType.
    gml__DomainSetType*                  multiSolidDomain               1;	///< Required element.
/// Element gridDomain of type "http://www.opengis.net/gml/3.2":DomainSetType.
    gml__DomainSetType*                  gridDomain                     1;	///< Required element.
/// Element rectifiedGridDomain of type "http://www.opengis.net/gml/3.2":DomainSetType.
    gml__DomainSetType*                  rectifiedGridDomain            1;	///< Required element.
    }                                    __union_AbstractCoverageType_ ;
//  END OF CHOICE OF SUBSTITUTIONS
/// @brief The gml:rangeSet property element contains the values of the coverage (sometimes called the attribute values). Its content model is given by gml:RangeSetType. This content model supports a structural description of the range. The semantic information describing the range set is embedded using a uniform method, as part of the explicit values, or as a template value accompanying the representation using gml:DataBlock and gml:File. The values from each component (or "band") in the range may be encoded within a gml:ValueArray element or a concrete member of the gml:AbstractScalarValueList substitution group . Use of these elements satisfies the value-type homogeneity requirement.
/// Element reference "http://www.opengis.net/gml/3.2":rangeSet.
    gml__RangeSetType*                   rangeSet                       1;	///< Required element.
};

/// "http://www.opengis.net/gml/3.2":SequenceRuleType is a complexType with simpleContent.
/// @brief The gml:SequenceRuleType is derived from the gml:SequenceRuleEnumeration through the addition of an axisOrder attribute. The gml:SequenceRuleEnumeration is an enumerated type. The rule names are defined in ISO 19123. If no rule name is specified the default is "Linear".
/// class gml__SequenceRuleType operations:
/// - soap_new_gml__SequenceRuleType(soap*) allocate
/// - soap_new_gml__SequenceRuleType(soap*, int num) allocate array
/// - soap_new_req_gml__SequenceRuleType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__SequenceRuleType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__SequenceRuleType(soap*, gml__SequenceRuleType*) deserialize from a stream
/// - int soap_write_gml__SequenceRuleType(soap, gml__SequenceRuleType*) serialize to a stream
class gml__SequenceRuleType : public xsd__anyType
{ public:
/// __item wraps '"http://www.opengis.net/gml/3.2":SequenceRuleEnumeration' simpleContent.
    enum gml__SequenceRuleEnumeration    __item                        ;
/// Attribute order of type "http://www.opengis.net/gml/3.2":IncrementOrder.
   @enum gml__IncrementOrder*            order                          0;	///< Optional attribute.
/// Attribute axisOrder of type "http://www.opengis.net/gml/3.2":AxisDirectionList.
   @gml__AxisDirectionList*              axisOrder                      0;	///< Optional attribute.
};

/// "http://www.opengis.net/gml/3.2":AbstractTimePrimitiveType is an abstract complexType with complexContent extension of "http://www.opengis.net/gml/3.2":AbstractTimeObjectType.
/// class gml__AbstractTimePrimitiveType operations:
/// - soap_new_gml__AbstractTimePrimitiveType(soap*) allocate
/// - soap_new_gml__AbstractTimePrimitiveType(soap*, int num) allocate array
/// - soap_new_req_gml__AbstractTimePrimitiveType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__AbstractTimePrimitiveType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__AbstractTimePrimitiveType(soap*, gml__AbstractTimePrimitiveType*) deserialize from a stream
/// - int soap_write_gml__AbstractTimePrimitiveType(soap, gml__AbstractTimePrimitiveType*) serialize to a stream
class gml__AbstractTimePrimitiveType : public gml__AbstractTimeObjectType
{ public:
/*  INHERITED FROM gml__AbstractGMLType:
/// GROUP <xs:group name="StandardObjectProperties">
/// Vector of gml__MetaDataPropertyType* element refs with length 0..unbounded
    std::vector<gml__MetaDataPropertyType*> metaDataProperty               0;
/// @brief The value of this property is a text description of the object. gml:description uses gml:StringOrRefType as its content model, so it may contain a simple text string content, or carry a reference to an external description. The use of gml:description to reference an external description has been deprecated and replaced by the gml:descriptionReference property.
/// Element reference "http://www.opengis.net/gml/3.2":description.
    gml__StringOrRefType*                description                    0;	///< Optional element.
/// @brief The value of this property is a remote text description of the object. The xlink:href attribute of the gml:descriptionReference property references the external description.
/// Element reference "http://www.opengis.net/gml/3.2":descriptionReference.
    gml__ReferenceType*                  descriptionReference           0;	///< Optional element.
/// @brief Often, a special identifier is assigned to an object by the maintaining authority with the intention that it is used in references to the object For such cases, the codeSpace shall be provided. That identifier is usually unique either globally or within an application domain. gml:identifier is a pre-defined property for such identifiers.
/// Element reference "http://www.opengis.net/gml/3.2":identifier.
    gml__CodeWithAuthorityType*          identifier                     0;	///< Optional element.
/// @brief The gml:name property provides a label or identifier for the object, commonly a descriptive name. An object may have several names, typically assigned by different authorities. gml:name uses the gml:CodeType content model. The authority for a name is indicated by the value of its (optional) codeSpace attribute. The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace. In common usage there will be one name per authority, so a processing application may select the name from its preferred codeSpace.
/// Vector of gml__CodeType* element refs with length 0..unbounded
    std::vector<gml__CodeType*         > name                           0;
//  END OF GROUP
/// Attribute reference "http://www.opengis.net/gml/3.2":id.
/// @brief The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.
   @xsd__ID                              id                             1;	///< Required attribute.
    END OF INHERITED FROM gml__AbstractGMLType */
/*  INHERITED FROM gml__AbstractTimeObjectType:
    END OF INHERITED FROM gml__AbstractTimeObjectType */
/// Vector of gml__RelatedTimeType* with length 0..unbounded
    std::vector<gml__RelatedTimeType*  > relatedTime                    0;
};

/// "http://www.opengis.net/gml/3.2":AbstractTimeComplexType is an abstract complexType with complexContent extension of "http://www.opengis.net/gml/3.2":AbstractTimeObjectType.
/// class gml__AbstractTimeComplexType operations:
/// - soap_new_gml__AbstractTimeComplexType(soap*) allocate
/// - soap_new_gml__AbstractTimeComplexType(soap*, int num) allocate array
/// - soap_new_req_gml__AbstractTimeComplexType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__AbstractTimeComplexType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__AbstractTimeComplexType(soap*, gml__AbstractTimeComplexType*) deserialize from a stream
/// - int soap_write_gml__AbstractTimeComplexType(soap, gml__AbstractTimeComplexType*) serialize to a stream
class gml__AbstractTimeComplexType : public gml__AbstractTimeObjectType
{ public:
/*  INHERITED FROM gml__AbstractGMLType:
/// GROUP <xs:group name="StandardObjectProperties">
/// Vector of gml__MetaDataPropertyType* element refs with length 0..unbounded
    std::vector<gml__MetaDataPropertyType*> metaDataProperty               0;
/// @brief The value of this property is a text description of the object. gml:description uses gml:StringOrRefType as its content model, so it may contain a simple text string content, or carry a reference to an external description. The use of gml:description to reference an external description has been deprecated and replaced by the gml:descriptionReference property.
/// Element reference "http://www.opengis.net/gml/3.2":description.
    gml__StringOrRefType*                description                    0;	///< Optional element.
/// @brief The value of this property is a remote text description of the object. The xlink:href attribute of the gml:descriptionReference property references the external description.
/// Element reference "http://www.opengis.net/gml/3.2":descriptionReference.
    gml__ReferenceType*                  descriptionReference           0;	///< Optional element.
/// @brief Often, a special identifier is assigned to an object by the maintaining authority with the intention that it is used in references to the object For such cases, the codeSpace shall be provided. That identifier is usually unique either globally or within an application domain. gml:identifier is a pre-defined property for such identifiers.
/// Element reference "http://www.opengis.net/gml/3.2":identifier.
    gml__CodeWithAuthorityType*          identifier                     0;	///< Optional element.
/// @brief The gml:name property provides a label or identifier for the object, commonly a descriptive name. An object may have several names, typically assigned by different authorities. gml:name uses the gml:CodeType content model. The authority for a name is indicated by the value of its (optional) codeSpace attribute. The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace. In common usage there will be one name per authority, so a processing application may select the name from its preferred codeSpace.
/// Vector of gml__CodeType* element refs with length 0..unbounded
    std::vector<gml__CodeType*         > name                           0;
//  END OF GROUP
/// Attribute reference "http://www.opengis.net/gml/3.2":id.
/// @brief The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.
   @xsd__ID                              id                             1;	///< Required attribute.
    END OF INHERITED FROM gml__AbstractGMLType */
/*  INHERITED FROM gml__AbstractTimeObjectType:
    END OF INHERITED FROM gml__AbstractTimeObjectType */
};

/// "http://www.opengis.net/gml/3.2":ValueArrayType is a complexType with complexContent extension of "http://www.opengis.net/gml/3.2":CompositeValueType.
/// class gml__ValueArrayType operations:
/// - soap_new_gml__ValueArrayType(soap*) allocate
/// - soap_new_gml__ValueArrayType(soap*, int num) allocate array
/// - soap_new_req_gml__ValueArrayType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__ValueArrayType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__ValueArrayType(soap*, gml__ValueArrayType*) deserialize from a stream
/// - int soap_write_gml__ValueArrayType(soap, gml__ValueArrayType*) serialize to a stream
class gml__ValueArrayType : public gml__CompositeValueType
{ public:
/*  INHERITED FROM gml__AbstractGMLType:
/// GROUP <xs:group name="StandardObjectProperties">
/// Vector of gml__MetaDataPropertyType* element refs with length 0..unbounded
    std::vector<gml__MetaDataPropertyType*> metaDataProperty               0;
/// @brief The value of this property is a text description of the object. gml:description uses gml:StringOrRefType as its content model, so it may contain a simple text string content, or carry a reference to an external description. The use of gml:description to reference an external description has been deprecated and replaced by the gml:descriptionReference property.
/// Element reference "http://www.opengis.net/gml/3.2":description.
    gml__StringOrRefType*                description                    0;	///< Optional element.
/// @brief The value of this property is a remote text description of the object. The xlink:href attribute of the gml:descriptionReference property references the external description.
/// Element reference "http://www.opengis.net/gml/3.2":descriptionReference.
    gml__ReferenceType*                  descriptionReference           0;	///< Optional element.
/// @brief Often, a special identifier is assigned to an object by the maintaining authority with the intention that it is used in references to the object For such cases, the codeSpace shall be provided. That identifier is usually unique either globally or within an application domain. gml:identifier is a pre-defined property for such identifiers.
/// Element reference "http://www.opengis.net/gml/3.2":identifier.
    gml__CodeWithAuthorityType*          identifier                     0;	///< Optional element.
/// @brief The gml:name property provides a label or identifier for the object, commonly a descriptive name. An object may have several names, typically assigned by different authorities. gml:name uses the gml:CodeType content model. The authority for a name is indicated by the value of its (optional) codeSpace attribute. The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace. In common usage there will be one name per authority, so a processing application may select the name from its preferred codeSpace.
/// Vector of gml__CodeType* element refs with length 0..unbounded
    std::vector<gml__CodeType*         > name                           0;
//  END OF GROUP
/// Attribute reference "http://www.opengis.net/gml/3.2":id.
/// @brief The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.
   @xsd__ID                              id                             1;	///< Required attribute.
    END OF INHERITED FROM gml__AbstractGMLType */
/*  INHERITED FROM gml__CompositeValueType:
/// @brief Property that refers to, or contains, a Value.
/// Vector of gml__ValuePropertyType* element refs with length 0..unbounded
    std::vector<gml__ValuePropertyType*> valueComponent                 0;
/// @brief Property that contains Values.
/// Element reference "http://www.opengis.net/gml/3.2":valueComponents.
    gml__ValueArrayPropertyType*         valueComponents                0;	///< Optional element.
/// Attribute aggregationType of type "http://www.opengis.net/gml/3.2":AggregationType.
   @enum gml__AggregationType*           aggregationType                0;	///< Optional attribute.
    END OF INHERITED FROM gml__CompositeValueType */
/// Attribute codeSpace of type xs:anyURI.
   @xsd__anyURI*                         codeSpace                      0;	///< Optional attribute.
/// Attribute uom of type "http://www.opengis.net/gml/3.2":UomIdentifier.
   @gml__UomIdentifier*                  uom                            0;	///< Optional attribute.
};

/// "http://www.opengis.net/gml/3.2":CategoryExtentType is a complexType with simpleContent.
/// class gml__CategoryExtentType operations:
/// - soap_new_gml__CategoryExtentType(soap*) allocate
/// - soap_new_gml__CategoryExtentType(soap*, int num) allocate array
/// - soap_new_req_gml__CategoryExtentType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__CategoryExtentType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__CategoryExtentType(soap*, gml__CategoryExtentType*) deserialize from a stream
/// - int soap_write_gml__CategoryExtentType(soap, gml__CategoryExtentType*) serialize to a stream
class gml__CategoryExtentType : public xsd__anyType
{ public:
/// __item wraps '"http://www.opengis.net/gml/3.2":NameOrNilReasonList' simpleContent.
    gml__NameOrNilReasonList             __item                        ;
/// Attribute codeSpace of type xs:anyURI.
   @xsd__anyURI*                         codeSpace                      0;	///< Optional attribute.
};

/// "http://www.opengis.net/gml/3.2":QuantityExtentType is a complexType with simpleContent.
/// class gml__QuantityExtentType operations:
/// - soap_new_gml__QuantityExtentType(soap*) allocate
/// - soap_new_gml__QuantityExtentType(soap*, int num) allocate array
/// - soap_new_req_gml__QuantityExtentType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__QuantityExtentType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__QuantityExtentType(soap*, gml__QuantityExtentType*) deserialize from a stream
/// - int soap_write_gml__QuantityExtentType(soap, gml__QuantityExtentType*) serialize to a stream
class gml__QuantityExtentType : public xsd__anyType
{ public:
/// __item wraps '"http://www.opengis.net/gml/3.2":doubleOrNilReasonList' simpleContent.
    gml__doubleOrNilReasonList           __item                        ;
/// Attribute uom of type "http://www.opengis.net/gml/3.2":UomIdentifier.
   @gml__UomIdentifier                   uom                            1;	///< Required attribute.
};

/// "http://www.opengis.net/gml/3.2":GridType is a complexType with complexContent extension of "http://www.opengis.net/gml/3.2":AbstractGeometryType.
/// class gml__GridType operations:
/// - soap_new_gml__GridType(soap*) allocate
/// - soap_new_gml__GridType(soap*, int num) allocate array
/// - soap_new_req_gml__GridType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__GridType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__GridType(soap*, gml__GridType*) deserialize from a stream
/// - int soap_write_gml__GridType(soap, gml__GridType*) serialize to a stream
class gml__GridType : public gml__AbstractGeometryType
{ public:
/*  INHERITED FROM gml__AbstractGMLType:
/// GROUP <xs:group name="StandardObjectProperties">
/// Vector of gml__MetaDataPropertyType* element refs with length 0..unbounded
    std::vector<gml__MetaDataPropertyType*> metaDataProperty               0;
/// @brief The value of this property is a text description of the object. gml:description uses gml:StringOrRefType as its content model, so it may contain a simple text string content, or carry a reference to an external description. The use of gml:description to reference an external description has been deprecated and replaced by the gml:descriptionReference property.
/// Element reference "http://www.opengis.net/gml/3.2":description.
    gml__StringOrRefType*                description                    0;	///< Optional element.
/// @brief The value of this property is a remote text description of the object. The xlink:href attribute of the gml:descriptionReference property references the external description.
/// Element reference "http://www.opengis.net/gml/3.2":descriptionReference.
    gml__ReferenceType*                  descriptionReference           0;	///< Optional element.
/// @brief Often, a special identifier is assigned to an object by the maintaining authority with the intention that it is used in references to the object For such cases, the codeSpace shall be provided. That identifier is usually unique either globally or within an application domain. gml:identifier is a pre-defined property for such identifiers.
/// Element reference "http://www.opengis.net/gml/3.2":identifier.
    gml__CodeWithAuthorityType*          identifier                     0;	///< Optional element.
/// @brief The gml:name property provides a label or identifier for the object, commonly a descriptive name. An object may have several names, typically assigned by different authorities. gml:name uses the gml:CodeType content model. The authority for a name is indicated by the value of its (optional) codeSpace attribute. The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace. In common usage there will be one name per authority, so a processing application may select the name from its preferred codeSpace.
/// Vector of gml__CodeType* element refs with length 0..unbounded
    std::vector<gml__CodeType*         > name                           0;
//  END OF GROUP
/// Attribute reference "http://www.opengis.net/gml/3.2":id.
/// @brief The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.
   @xsd__ID                              id                             1;	///< Required attribute.
    END OF INHERITED FROM gml__AbstractGMLType */
/*  INHERITED FROM gml__AbstractGeometryType:
/// Attribute srsName of type xs:anyURI.
   @xsd__anyURI*                         srsName                        0;	///< Optional attribute.
/// Attribute srsDimension of type xs:positiveInteger.
   @xsd__positiveInteger*                srsDimension                   0;	///< Optional attribute.
/// Attribute axisLabels of type "http://www.opengis.net/gml/3.2":NCNameList.
   @gml__NCNameList*                     axisLabels                     0;	///< Optional attribute.
/// Attribute uomLabels of type "http://www.opengis.net/gml/3.2":NCNameList.
   @gml__NCNameList*                     uomLabels                      0;	///< Optional attribute.
    END OF INHERITED FROM gml__AbstractGeometryType */
/// Element limits of type "http://www.opengis.net/gml/3.2":GridLimitsType.
    gml__GridLimitsType*                 limits                         1;	///< Required element.
/// CHOICE <xs:choice>
   $int                                  __union_GridType              ;	///< Union _gml__union_GridType selector: set to SOAP_UNION__gml__union_GridType_<fieldname>
    union _gml__union_GridType
    {
/// Element axisLabels of type "http://www.opengis.net/gml/3.2":NCNameList.
    gml__NCNameList*                     axisLabels                     1;	///< Required element.
/// Vector of std::string with length 1..unbounded
    std::vector<std::string           > *axisName                       1;
    }                                    union_GridType                ;
//  END OF CHOICE
/// Attribute dimension of type xs:positiveInteger.
   @xsd__positiveInteger                 dimension                      1;	///< Required attribute.
};

/// "http://www.opengis.net/gml/3.2":ObservationType is a complexType with complexContent extension of "http://www.opengis.net/gml/3.2":AbstractFeatureType.
/// class gml__ObservationType operations:
/// - soap_new_gml__ObservationType(soap*) allocate
/// - soap_new_gml__ObservationType(soap*, int num) allocate array
/// - soap_new_req_gml__ObservationType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__ObservationType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__ObservationType(soap*, gml__ObservationType*) deserialize from a stream
/// - int soap_write_gml__ObservationType(soap, gml__ObservationType*) serialize to a stream
class gml__ObservationType : public gml__AbstractFeatureType
{ public:
/*  INHERITED FROM gml__AbstractGMLType:
/// GROUP <xs:group name="StandardObjectProperties">
/// Vector of gml__MetaDataPropertyType* element refs with length 0..unbounded
    std::vector<gml__MetaDataPropertyType*> metaDataProperty               0;
/// @brief The value of this property is a text description of the object. gml:description uses gml:StringOrRefType as its content model, so it may contain a simple text string content, or carry a reference to an external description. The use of gml:description to reference an external description has been deprecated and replaced by the gml:descriptionReference property.
/// Element reference "http://www.opengis.net/gml/3.2":description.
    gml__StringOrRefType*                description                    0;	///< Optional element.
/// @brief The value of this property is a remote text description of the object. The xlink:href attribute of the gml:descriptionReference property references the external description.
/// Element reference "http://www.opengis.net/gml/3.2":descriptionReference.
    gml__ReferenceType*                  descriptionReference           0;	///< Optional element.
/// @brief Often, a special identifier is assigned to an object by the maintaining authority with the intention that it is used in references to the object For such cases, the codeSpace shall be provided. That identifier is usually unique either globally or within an application domain. gml:identifier is a pre-defined property for such identifiers.
/// Element reference "http://www.opengis.net/gml/3.2":identifier.
    gml__CodeWithAuthorityType*          identifier                     0;	///< Optional element.
/// @brief The gml:name property provides a label or identifier for the object, commonly a descriptive name. An object may have several names, typically assigned by different authorities. gml:name uses the gml:CodeType content model. The authority for a name is indicated by the value of its (optional) codeSpace attribute. The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace. In common usage there will be one name per authority, so a processing application may select the name from its preferred codeSpace.
/// Vector of gml__CodeType* element refs with length 0..unbounded
    std::vector<gml__CodeType*         > name                           0;
//  END OF GROUP
/// Attribute reference "http://www.opengis.net/gml/3.2":id.
/// @brief The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.
   @xsd__ID                              id                             1;	///< Required attribute.
    END OF INHERITED FROM gml__AbstractGMLType */
/*  INHERITED FROM gml__AbstractFeatureType:
/// @brief This property describes the minimum bounding box or rectangle that encloses the entire feature.
/// Element reference "http://www.opengis.net/gml/3.2":boundedBy.
    gml__BoundingShapeType*              boundedBy                      0;	///< Optional element.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="location" minOccurs="0"> with elements <priorityLocation>
   $int                                  __unionlocation                0;	///< Union _gml__union_ObservationType selector: set to SOAP_UNION__gml__union_ObservationType_<fieldname> or 0
/// Union for substitutionGroup="location"
    union _gml__union_ObservationType
    {
/// Element reference "http://www.opengis.net/gml/3.2":location.
    gml__LocationPropertyType*           location                       0;	///< Optional element.
/// Element priorityLocation of type "http://www.opengis.net/gml/3.2":PriorityLocationPropertyType.
    gml__PriorityLocationPropertyType*   priorityLocation               1;	///< Required element.
    }                                    __union_ObservationType       ;
//  END OF CHOICE OF SUBSTITUTIONS
    END OF INHERITED FROM gml__AbstractFeatureType */
/// @brief gml:validTime is a convenience property element.
/// Element reference "http://www.opengis.net/gml/3.2":validTime.
    gml__TimePrimitivePropertyType*      validTime                      1;	///< Required element.
/// Element reference "http://www.opengis.net/gml/3.2":using.
    gml__ProcedurePropertyType*          using_                         0;	///< Optional element.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="target" minOccurs="0"> with elements <subject>
   $int                                  __uniontarget                  0;	///< Union _gml__union_ObservationType_ selector: set to SOAP_UNION__gml__union_ObservationType__<fieldname> or 0
/// Union for substitutionGroup="target"
    union _gml__union_ObservationType_
    {
/// Element reference "http://www.opengis.net/gml/3.2":target.
    gml__TargetPropertyType*             target                         0;	///< Optional element.
/// Element subject of type "http://www.opengis.net/gml/3.2":TargetPropertyType.
    gml__TargetPropertyType*             subject                        1;	///< Required element.
    }                                    __union_ObservationType_      ;
//  END OF CHOICE OF SUBSTITUTIONS
/// Element reference "http://www.opengis.net/gml/3.2":resultOf.
    gml__ResultType*                     resultOf                       1;	///< Required element.
};

/// "http://www.opengis.net/gml/3.2":DegreesType is a complexType with simpleContent.
/// class gml__DegreesType operations:
/// - soap_new_gml__DegreesType(soap*) allocate
/// - soap_new_gml__DegreesType(soap*, int num) allocate array
/// - soap_new_req_gml__DegreesType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__DegreesType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__DegreesType(soap*, gml__DegreesType*) deserialize from a stream
/// - int soap_write_gml__DegreesType(soap, gml__DegreesType*) serialize to a stream
class gml__DegreesType : public xsd__anyType
{ public:
/// __item wraps '"http://www.opengis.net/gml/3.2":DegreeValueType' simpleContent.
    gml__DegreeValueType                 __item                        ;
@    enum _gml__DegreesType_direction
    {
	_gml__DegreesType_direction__N,	///< xs:string value="N"
	_gml__DegreesType_direction__E,	///< xs:string value="E"
	_gml__DegreesType_direction__S,	///< xs:string value="S"
	_gml__DegreesType_direction__W,	///< xs:string value="W"
	_gml__DegreesType_direction___x002b,	///< xs:string value="+"
	_gml__DegreesType_direction___x002d,	///< xs:string value="-"
    }
                                        *direction                      0;	///< Optional attribute.
};

/// "http://www.opengis.net/gml/3.2":BoundedFeatureType is an abstract complexType with complexContent restriction of "http://www.opengis.net/gml/3.2":AbstractFeatureType.
/// class gml__BoundedFeatureType operations:
/// - soap_new_gml__BoundedFeatureType(soap*) allocate
/// - soap_new_gml__BoundedFeatureType(soap*, int num) allocate array
/// - soap_new_req_gml__BoundedFeatureType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__BoundedFeatureType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__BoundedFeatureType(soap*, gml__BoundedFeatureType*) deserialize from a stream
/// - int soap_write_gml__BoundedFeatureType(soap, gml__BoundedFeatureType*) serialize to a stream
class gml__BoundedFeatureType : public xsd__anyType
{ public:
/// GROUP <xs:group name="StandardObjectProperties">
/// Vector of gml__MetaDataPropertyType* element refs with length 0..unbounded
    std::vector<gml__MetaDataPropertyType*> metaDataProperty               0;
/// @brief The value of this property is a text description of the object. gml:description uses gml:StringOrRefType as its content model, so it may contain a simple text string content, or carry a reference to an external description. The use of gml:description to reference an external description has been deprecated and replaced by the gml:descriptionReference property.
/// Element reference "http://www.opengis.net/gml/3.2":description.
    gml__StringOrRefType*                description                    0;	///< Optional element.
/// @brief The value of this property is a remote text description of the object. The xlink:href attribute of the gml:descriptionReference property references the external description.
/// Element reference "http://www.opengis.net/gml/3.2":descriptionReference.
    gml__ReferenceType*                  descriptionReference           0;	///< Optional element.
/// @brief Often, a special identifier is assigned to an object by the maintaining authority with the intention that it is used in references to the object For such cases, the codeSpace shall be provided. That identifier is usually unique either globally or within an application domain. gml:identifier is a pre-defined property for such identifiers.
/// Element reference "http://www.opengis.net/gml/3.2":identifier.
    gml__CodeWithAuthorityType*          identifier                     0;	///< Optional element.
/// @brief The gml:name property provides a label or identifier for the object, commonly a descriptive name. An object may have several names, typically assigned by different authorities. gml:name uses the gml:CodeType content model. The authority for a name is indicated by the value of its (optional) codeSpace attribute. The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace. In common usage there will be one name per authority, so a processing application may select the name from its preferred codeSpace.
/// Vector of gml__CodeType* element refs with length 0..unbounded
    std::vector<gml__CodeType*         > name                           0;
//  END OF GROUP
/// @brief This property describes the minimum bounding box or rectangle that encloses the entire feature.
/// Element reference "http://www.opengis.net/gml/3.2":boundedBy.
    gml__BoundingShapeType*              boundedBy                      1;	///< Required element.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="location" minOccurs="0"> with elements <priorityLocation>
   $int                                  __unionlocation                0;	///< Union _gml__union_BoundedFeatureType selector: set to SOAP_UNION__gml__union_BoundedFeatureType_<fieldname> or 0
/// Union for substitutionGroup="location"
    union _gml__union_BoundedFeatureType
    {
/// Element reference "http://www.opengis.net/gml/3.2":location.
    gml__LocationPropertyType*           location                       0;	///< Optional element.
/// Element priorityLocation of type "http://www.opengis.net/gml/3.2":PriorityLocationPropertyType.
    gml__PriorityLocationPropertyType*   priorityLocation               1;	///< Required element.
    }                                    __union_BoundedFeatureType    ;
//  END OF CHOICE OF SUBSTITUTIONS
/// Attribute reference "http://www.opengis.net/gml/3.2":id.
/// @brief The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.
   @xsd__ID                              id                             1;	///< Required attribute.
};

/// "http://www.opengis.net/gml/3.2":AbstractFeatureCollectionType is an abstract complexType with complexContent extension of "http://www.opengis.net/gml/3.2":AbstractFeatureType.
/// class gml__AbstractFeatureCollectionType operations:
/// - soap_new_gml__AbstractFeatureCollectionType(soap*) allocate
/// - soap_new_gml__AbstractFeatureCollectionType(soap*, int num) allocate array
/// - soap_new_req_gml__AbstractFeatureCollectionType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__AbstractFeatureCollectionType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__AbstractFeatureCollectionType(soap*, gml__AbstractFeatureCollectionType*) deserialize from a stream
/// - int soap_write_gml__AbstractFeatureCollectionType(soap, gml__AbstractFeatureCollectionType*) serialize to a stream
class gml__AbstractFeatureCollectionType : public gml__AbstractFeatureType
{ public:
/*  INHERITED FROM gml__AbstractGMLType:
/// GROUP <xs:group name="StandardObjectProperties">
/// Vector of gml__MetaDataPropertyType* element refs with length 0..unbounded
    std::vector<gml__MetaDataPropertyType*> metaDataProperty               0;
/// @brief The value of this property is a text description of the object. gml:description uses gml:StringOrRefType as its content model, so it may contain a simple text string content, or carry a reference to an external description. The use of gml:description to reference an external description has been deprecated and replaced by the gml:descriptionReference property.
/// Element reference "http://www.opengis.net/gml/3.2":description.
    gml__StringOrRefType*                description                    0;	///< Optional element.
/// @brief The value of this property is a remote text description of the object. The xlink:href attribute of the gml:descriptionReference property references the external description.
/// Element reference "http://www.opengis.net/gml/3.2":descriptionReference.
    gml__ReferenceType*                  descriptionReference           0;	///< Optional element.
/// @brief Often, a special identifier is assigned to an object by the maintaining authority with the intention that it is used in references to the object For such cases, the codeSpace shall be provided. That identifier is usually unique either globally or within an application domain. gml:identifier is a pre-defined property for such identifiers.
/// Element reference "http://www.opengis.net/gml/3.2":identifier.
    gml__CodeWithAuthorityType*          identifier                     0;	///< Optional element.
/// @brief The gml:name property provides a label or identifier for the object, commonly a descriptive name. An object may have several names, typically assigned by different authorities. gml:name uses the gml:CodeType content model. The authority for a name is indicated by the value of its (optional) codeSpace attribute. The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace. In common usage there will be one name per authority, so a processing application may select the name from its preferred codeSpace.
/// Vector of gml__CodeType* element refs with length 0..unbounded
    std::vector<gml__CodeType*         > name                           0;
//  END OF GROUP
/// Attribute reference "http://www.opengis.net/gml/3.2":id.
/// @brief The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.
   @xsd__ID                              id                             1;	///< Required attribute.
    END OF INHERITED FROM gml__AbstractGMLType */
/*  INHERITED FROM gml__AbstractFeatureType:
/// @brief This property describes the minimum bounding box or rectangle that encloses the entire feature.
/// Element reference "http://www.opengis.net/gml/3.2":boundedBy.
    gml__BoundingShapeType*              boundedBy                      0;	///< Optional element.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="location" minOccurs="0"> with elements <priorityLocation>
   $int                                  __unionlocation                0;	///< Union _gml__union_AbstractFeatureCollectionType selector: set to SOAP_UNION__gml__union_AbstractFeatureCollectionType_<fieldname> or 0
/// Union for substitutionGroup="location"
    union _gml__union_AbstractFeatureCollectionType
    {
/// Element reference "http://www.opengis.net/gml/3.2":location.
    gml__LocationPropertyType*           location                       0;	///< Optional element.
/// Element priorityLocation of type "http://www.opengis.net/gml/3.2":PriorityLocationPropertyType.
    gml__PriorityLocationPropertyType*   priorityLocation               1;	///< Required element.
    }                                    __union_AbstractFeatureCollectionType;
//  END OF CHOICE OF SUBSTITUTIONS
    END OF INHERITED FROM gml__AbstractFeatureType */
/// Vector of gml__FeaturePropertyType* element refs with length 0..unbounded
    std::vector<gml__FeaturePropertyType*> featureMember                  0;
/// Element reference "http://www.opengis.net/gml/3.2":featureMembers.
    gml__FeatureArrayPropertyType*       featureMembers                 0;	///< Optional element.
};

/// "http://www.opengis.net/gml/3.2":MovingObjectStatusType is a complexType with complexContent extension of "http://www.opengis.net/gml/3.2":AbstractTimeSliceType.
/// class gml__MovingObjectStatusType operations:
/// - soap_new_gml__MovingObjectStatusType(soap*) allocate
/// - soap_new_gml__MovingObjectStatusType(soap*, int num) allocate array
/// - soap_new_req_gml__MovingObjectStatusType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__MovingObjectStatusType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__MovingObjectStatusType(soap*, gml__MovingObjectStatusType*) deserialize from a stream
/// - int soap_write_gml__MovingObjectStatusType(soap, gml__MovingObjectStatusType*) serialize to a stream
class gml__MovingObjectStatusType : public gml__AbstractTimeSliceType
{ public:
/*  INHERITED FROM gml__AbstractGMLType:
/// GROUP <xs:group name="StandardObjectProperties">
/// Vector of gml__MetaDataPropertyType* element refs with length 0..unbounded
    std::vector<gml__MetaDataPropertyType*> metaDataProperty               0;
/// @brief The value of this property is a text description of the object. gml:description uses gml:StringOrRefType as its content model, so it may contain a simple text string content, or carry a reference to an external description. The use of gml:description to reference an external description has been deprecated and replaced by the gml:descriptionReference property.
/// Element reference "http://www.opengis.net/gml/3.2":description.
    gml__StringOrRefType*                description                    0;	///< Optional element.
/// @brief The value of this property is a remote text description of the object. The xlink:href attribute of the gml:descriptionReference property references the external description.
/// Element reference "http://www.opengis.net/gml/3.2":descriptionReference.
    gml__ReferenceType*                  descriptionReference           0;	///< Optional element.
/// @brief Often, a special identifier is assigned to an object by the maintaining authority with the intention that it is used in references to the object For such cases, the codeSpace shall be provided. That identifier is usually unique either globally or within an application domain. gml:identifier is a pre-defined property for such identifiers.
/// Element reference "http://www.opengis.net/gml/3.2":identifier.
    gml__CodeWithAuthorityType*          identifier                     0;	///< Optional element.
/// @brief The gml:name property provides a label or identifier for the object, commonly a descriptive name. An object may have several names, typically assigned by different authorities. gml:name uses the gml:CodeType content model. The authority for a name is indicated by the value of its (optional) codeSpace attribute. The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace. In common usage there will be one name per authority, so a processing application may select the name from its preferred codeSpace.
/// Vector of gml__CodeType* element refs with length 0..unbounded
    std::vector<gml__CodeType*         > name                           0;
//  END OF GROUP
/// Attribute reference "http://www.opengis.net/gml/3.2":id.
/// @brief The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.
   @xsd__ID                              id                             1;	///< Required attribute.
    END OF INHERITED FROM gml__AbstractGMLType */
/*  INHERITED FROM gml__AbstractTimeSliceType:
/// @brief gml:validTime is a convenience property element.
/// Element reference "http://www.opengis.net/gml/3.2":validTime.
    gml__TimePrimitivePropertyType*      validTime                      1;	///< Required element.
/// @brief Evidence is represented by a simple gml:dataSource or gml:dataSourceReference property that indicates the source of the temporal data. The remote link attributes of the gml:dataSource element have been deprecated along with its current type.
/// Element reference "http://www.opengis.net/gml/3.2":dataSource.
    gml__StringOrRefType*                dataSource                     0;	///< Optional element.
    END OF INHERITED FROM gml__AbstractTimeSliceType */
/// CHOICE <xs:choice>
   $int                                  __union_MovingObjectStatusType;	///< Union _gml__union_MovingObjectStatusType selector: set to SOAP_UNION__gml__union_MovingObjectStatusType_<fieldname>
    union _gml__union_MovingObjectStatusType
    {
/// Element position of type "http://www.opengis.net/gml/3.2":GeometryPropertyType.
    gml__GeometryPropertyType*           position                       1;	///< Required element.
/// Element reference "http://www.opengis.net/gml/3.2":pos.
    gml__DirectPositionType*             pos                            1;	///< Required element.
/// @brief The gml:locationName property element is a convenience property where the text value describes the location of the feature. If the location names are selected from a controlled list, then the list shall be identified in the codeSpace attribute.
/// Element reference "http://www.opengis.net/gml/3.2":locationName.
    gml__CodeType*                       locationName                   1;	///< Required element.
/// @brief The gml:locationReference property element is a convenience property where the text value referenced by the xlink:href attribute describes the location of the feature.
/// Element reference "http://www.opengis.net/gml/3.2":locationReference.
    gml__ReferenceType*                  locationReference              1;	///< Required element.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="location"> with elements <priorityLocation>
/// Element reference "http://www.opengis.net/gml/3.2":location.
    gml__LocationPropertyType*           location                       1;	///< Required element.
/// Element priorityLocation of type "http://www.opengis.net/gml/3.2":PriorityLocationPropertyType.
    gml__PriorityLocationPropertyType*   priorityLocation               1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
    }                                    union_MovingObjectStatusType  ;
//  END OF CHOICE
/// Element speed of type "http://www.opengis.net/gml/3.2":MeasureType.
    gml__MeasureType*                    speed                          0;	///< Optional element.
/// Element bearing of type "http://www.opengis.net/gml/3.2":DirectionPropertyType.
    gml__DirectionPropertyType*          bearing                        0;	///< Optional element.
/// Element acceleration of type "http://www.opengis.net/gml/3.2":MeasureType.
    gml__MeasureType*                    acceleration                   0;	///< Optional element.
/// Element elevation of type "http://www.opengis.net/gml/3.2":MeasureType.
    gml__MeasureType*                    elevation                      0;	///< Optional element.
/// Element reference "http://www.opengis.net/gml/3.2":status.
    gml__StringOrRefType*                status                         0;	///< Optional element.
/// Element reference "http://www.opengis.net/gml/3.2":statusReference.
    gml__ReferenceType*                  statusReference                0;	///< Optional element.
};


/// Top-level root element "http://www.opengis.net/gml/3.2":Category
/// @brief A gml:Category has an optional XML attribute codeSpace, whose value is a URI which identifies a dictionary, codelist or authority for the term.

/// "http://www.opengis.net/gml/3.2":Category is a complexType with simpleContent.
/// class _gml__Category operations:
/// - soap_new__gml__Category(soap*) allocate
/// - soap_new__gml__Category(soap*, int num) allocate array
/// - soap_new_req__gml__Category(soap*, ...) allocate, set required members
/// - soap_new_set__gml__Category(soap*, ...) allocate, set all public members
/// - int soap_read__gml__Category(soap*, _gml__Category*) deserialize from a stream
/// - int soap_write__gml__Category(soap, _gml__Category*) serialize to a stream
class _gml__Category : public gml__CodeType
{ public:
/// Attribute nilReason of type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
};


/// Top-level root element "http://www.opengis.net/gml/3.2":Quantity
/// @brief An XML attribute uom ("unit of measure") is required, whose value is a URI which identifies the definition of a ratio scale or units by which the numeric value shall be multiplied, or an interval or position scale on which the value occurs.

/// "http://www.opengis.net/gml/3.2":Quantity is a complexType with simpleContent.
/// class _gml__Quantity operations:
/// - soap_new__gml__Quantity(soap*) allocate
/// - soap_new__gml__Quantity(soap*, int num) allocate array
/// - soap_new_req__gml__Quantity(soap*, ...) allocate, set required members
/// - soap_new_set__gml__Quantity(soap*, ...) allocate, set all public members
/// - int soap_read__gml__Quantity(soap*, _gml__Quantity*) deserialize from a stream
/// - int soap_write__gml__Quantity(soap, _gml__Quantity*) serialize to a stream
class _gml__Quantity : public gml__MeasureType
{ public:
/// Attribute nilReason of type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
};

/// "http://www.isotc211.org/2005/gmd":DS_OtherAggregate_Type is a complexType with complexContent extension of "http://www.isotc211.org/2005/gmd":AbstractDS_Aggregate_Type.
/// class gmd__DS_x005fOtherAggregate_x005fType operations:
/// - soap_new_gmd__DS_x005fOtherAggregate_x005fType(soap*) allocate
/// - soap_new_gmd__DS_x005fOtherAggregate_x005fType(soap*, int num) allocate array
/// - soap_new_req_gmd__DS_x005fOtherAggregate_x005fType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__DS_x005fOtherAggregate_x005fType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__DS_x005fOtherAggregate_x005fType(soap*, gmd__DS_x005fOtherAggregate_x005fType*) deserialize from a stream
/// - int soap_write_gmd__DS_x005fOtherAggregate_x005fType(soap, gmd__DS_x005fOtherAggregate_x005fType*) serialize to a stream
class gmd__DS_x005fOtherAggregate_x005fType : public gmd__AbstractDS_x005fAggregate_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
/// Attribute id of type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute uuid of type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/*  INHERITED FROM gmd__AbstractDS_x005fAggregate_x005fType:
/// Vector of gmd__DS_x005fDataSet_x005fPropertyType* with length 1..unbounded
    std::vector<gmd__DS_x005fDataSet_x005fPropertyType*> composedOf                     1;
/// Vector of gmd__MD_x005fMetadata_x005fPropertyType* with length 1..unbounded
    std::vector<gmd__MD_x005fMetadata_x005fPropertyType*> seriesMetadata                 1;
/// Vector of gmd__DS_x005fAggregate_x005fPropertyType* with length 0..unbounded
    std::vector<gmd__DS_x005fAggregate_x005fPropertyType*> subset                         0;
/// Vector of gmd__DS_x005fAggregate_x005fPropertyType* with length 0..unbounded
    std::vector<gmd__DS_x005fAggregate_x005fPropertyType*> superset                       0;
    END OF INHERITED FROM gmd__AbstractDS_x005fAggregate_x005fType */
};

/// "http://www.isotc211.org/2005/gmd":DS_Series_Type is a complexType with complexContent extension of "http://www.isotc211.org/2005/gmd":AbstractDS_Aggregate_Type.
/// class gmd__DS_x005fSeries_x005fType operations:
/// - soap_new_gmd__DS_x005fSeries_x005fType(soap*) allocate
/// - soap_new_gmd__DS_x005fSeries_x005fType(soap*, int num) allocate array
/// - soap_new_req_gmd__DS_x005fSeries_x005fType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__DS_x005fSeries_x005fType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__DS_x005fSeries_x005fType(soap*, gmd__DS_x005fSeries_x005fType*) deserialize from a stream
/// - int soap_write_gmd__DS_x005fSeries_x005fType(soap, gmd__DS_x005fSeries_x005fType*) serialize to a stream
class gmd__DS_x005fSeries_x005fType : public gmd__AbstractDS_x005fAggregate_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
/// Attribute id of type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute uuid of type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/*  INHERITED FROM gmd__AbstractDS_x005fAggregate_x005fType:
/// Vector of gmd__DS_x005fDataSet_x005fPropertyType* with length 1..unbounded
    std::vector<gmd__DS_x005fDataSet_x005fPropertyType*> composedOf                     1;
/// Vector of gmd__MD_x005fMetadata_x005fPropertyType* with length 1..unbounded
    std::vector<gmd__MD_x005fMetadata_x005fPropertyType*> seriesMetadata                 1;
/// Vector of gmd__DS_x005fAggregate_x005fPropertyType* with length 0..unbounded
    std::vector<gmd__DS_x005fAggregate_x005fPropertyType*> subset                         0;
/// Vector of gmd__DS_x005fAggregate_x005fPropertyType* with length 0..unbounded
    std::vector<gmd__DS_x005fAggregate_x005fPropertyType*> superset                       0;
    END OF INHERITED FROM gmd__AbstractDS_x005fAggregate_x005fType */
};

/// "http://www.isotc211.org/2005/gmd":DS_Initiative_Type is a complexType with complexContent extension of "http://www.isotc211.org/2005/gmd":AbstractDS_Aggregate_Type.
/// class gmd__DS_x005fInitiative_x005fType operations:
/// - soap_new_gmd__DS_x005fInitiative_x005fType(soap*) allocate
/// - soap_new_gmd__DS_x005fInitiative_x005fType(soap*, int num) allocate array
/// - soap_new_req_gmd__DS_x005fInitiative_x005fType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__DS_x005fInitiative_x005fType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__DS_x005fInitiative_x005fType(soap*, gmd__DS_x005fInitiative_x005fType*) deserialize from a stream
/// - int soap_write_gmd__DS_x005fInitiative_x005fType(soap, gmd__DS_x005fInitiative_x005fType*) serialize to a stream
class gmd__DS_x005fInitiative_x005fType : public gmd__AbstractDS_x005fAggregate_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
/// Attribute id of type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute uuid of type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/*  INHERITED FROM gmd__AbstractDS_x005fAggregate_x005fType:
/// Vector of gmd__DS_x005fDataSet_x005fPropertyType* with length 1..unbounded
    std::vector<gmd__DS_x005fDataSet_x005fPropertyType*> composedOf                     1;
/// Vector of gmd__MD_x005fMetadata_x005fPropertyType* with length 1..unbounded
    std::vector<gmd__MD_x005fMetadata_x005fPropertyType*> seriesMetadata                 1;
/// Vector of gmd__DS_x005fAggregate_x005fPropertyType* with length 0..unbounded
    std::vector<gmd__DS_x005fAggregate_x005fPropertyType*> subset                         0;
/// Vector of gmd__DS_x005fAggregate_x005fPropertyType* with length 0..unbounded
    std::vector<gmd__DS_x005fAggregate_x005fPropertyType*> superset                       0;
    END OF INHERITED FROM gmd__AbstractDS_x005fAggregate_x005fType */
};

/// "http://www.isotc211.org/2005/gmd":MD_GridSpatialRepresentation_Type is a complexType with complexContent extension of "http://www.isotc211.org/2005/gmd":AbstractMD_SpatialRepresentation_Type.
/// @brief Types and numbers of raster spatial objects in the dataset
/// class gmd__MD_x005fGridSpatialRepresentation_x005fType operations:
/// - soap_new_gmd__MD_x005fGridSpatialRepresentation_x005fType(soap*) allocate
/// - soap_new_gmd__MD_x005fGridSpatialRepresentation_x005fType(soap*, int num) allocate array
/// - soap_new_req_gmd__MD_x005fGridSpatialRepresentation_x005fType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__MD_x005fGridSpatialRepresentation_x005fType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__MD_x005fGridSpatialRepresentation_x005fType(soap*, gmd__MD_x005fGridSpatialRepresentation_x005fType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fGridSpatialRepresentation_x005fType(soap, gmd__MD_x005fGridSpatialRepresentation_x005fType*) serialize to a stream
class gmd__MD_x005fGridSpatialRepresentation_x005fType : public gmd__AbstractMD_x005fSpatialRepresentation_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
/// Attribute id of type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute uuid of type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/*  INHERITED FROM gmd__AbstractMD_x005fSpatialRepresentation_x005fType:
    END OF INHERITED FROM gmd__AbstractMD_x005fSpatialRepresentation_x005fType */
/// Element numberOfDimensions of type "http://www.isotc211.org/2005/gco":Integer_PropertyType.
    gco__Integer_x005fPropertyType*      numberOfDimensions             1;	///< Required element.
/// Vector of gmd__MD_x005fDimension_x005fPropertyType* with length 0..unbounded
    std::vector<gmd__MD_x005fDimension_x005fPropertyType*> axisDimensionProperties        0;
/// Element cellGeometry of type "http://www.isotc211.org/2005/gmd":MD_CellGeometryCode_PropertyType.
    gmd__MD_x005fCellGeometryCode_x005fPropertyType*  cellGeometry                   1;	///< Required element.
/// Element transformationParameterAvailability of type "http://www.isotc211.org/2005/gco":Boolean_PropertyType.
    gco__Boolean_x005fPropertyType*      transformationParameterAvailability 1;	///< Required element.
};

/// "http://www.isotc211.org/2005/gmd":MD_VectorSpatialRepresentation_Type is a complexType with complexContent extension of "http://www.isotc211.org/2005/gmd":AbstractMD_SpatialRepresentation_Type.
/// @brief Information about the vector spatial objects in the dataset
/// class gmd__MD_x005fVectorSpatialRepresentation_x005fType operations:
/// - soap_new_gmd__MD_x005fVectorSpatialRepresentation_x005fType(soap*) allocate
/// - soap_new_gmd__MD_x005fVectorSpatialRepresentation_x005fType(soap*, int num) allocate array
/// - soap_new_req_gmd__MD_x005fVectorSpatialRepresentation_x005fType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__MD_x005fVectorSpatialRepresentation_x005fType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__MD_x005fVectorSpatialRepresentation_x005fType(soap*, gmd__MD_x005fVectorSpatialRepresentation_x005fType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fVectorSpatialRepresentation_x005fType(soap, gmd__MD_x005fVectorSpatialRepresentation_x005fType*) serialize to a stream
class gmd__MD_x005fVectorSpatialRepresentation_x005fType : public gmd__AbstractMD_x005fSpatialRepresentation_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
/// Attribute id of type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute uuid of type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/*  INHERITED FROM gmd__AbstractMD_x005fSpatialRepresentation_x005fType:
    END OF INHERITED FROM gmd__AbstractMD_x005fSpatialRepresentation_x005fType */
/// Element topologyLevel of type "http://www.isotc211.org/2005/gmd":MD_TopologyLevelCode_PropertyType.
    gmd__MD_x005fTopologyLevelCode_x005fPropertyType*  topologyLevel                  0;	///< Optional element.
/// Vector of gmd__MD_x005fGeometricObjects_x005fPropertyType* with length 0..unbounded
    std::vector<gmd__MD_x005fGeometricObjects_x005fPropertyType*> geometricObjects               0;
};

/// "http://www.isotc211.org/2005/gmd":RS_Identifier_Type is a complexType with complexContent extension of "http://www.isotc211.org/2005/gmd":MD_Identifier_Type.
/// class gmd__RS_x005fIdentifier_x005fType operations:
/// - soap_new_gmd__RS_x005fIdentifier_x005fType(soap*) allocate
/// - soap_new_gmd__RS_x005fIdentifier_x005fType(soap*, int num) allocate array
/// - soap_new_req_gmd__RS_x005fIdentifier_x005fType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__RS_x005fIdentifier_x005fType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__RS_x005fIdentifier_x005fType(soap*, gmd__RS_x005fIdentifier_x005fType*) deserialize from a stream
/// - int soap_write_gmd__RS_x005fIdentifier_x005fType(soap, gmd__RS_x005fIdentifier_x005fType*) serialize to a stream
class gmd__RS_x005fIdentifier_x005fType : public gmd__MD_x005fIdentifier_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
/// Attribute id of type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute uuid of type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/*  INHERITED FROM gmd__MD_x005fIdentifier_x005fType:
/// Element authority of type "http://www.isotc211.org/2005/gmd":CI_Citation_PropertyType.
    gmd__CI_x005fCitation_x005fPropertyType*  authority                      0;	///< Optional element.
/// Element code of type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  code                           1;	///< Required element.
    END OF INHERITED FROM gmd__MD_x005fIdentifier_x005fType */
/// Element codeSpace of type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  codeSpace                      0;	///< Optional element.
/// Element version of type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  version                        0;	///< Optional element.
};

/// "http://www.isotc211.org/2005/gmd":EX_BoundingPolygon_Type is a complexType with complexContent extension of "http://www.isotc211.org/2005/gmd":AbstractEX_GeographicExtent_Type.
/// @brief Boundary enclosing the dataset expressed as the closed set of (x,y) coordinates of the polygon (last point replicates first point)
/// class gmd__EX_x005fBoundingPolygon_x005fType operations:
/// - soap_new_gmd__EX_x005fBoundingPolygon_x005fType(soap*) allocate
/// - soap_new_gmd__EX_x005fBoundingPolygon_x005fType(soap*, int num) allocate array
/// - soap_new_req_gmd__EX_x005fBoundingPolygon_x005fType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__EX_x005fBoundingPolygon_x005fType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__EX_x005fBoundingPolygon_x005fType(soap*, gmd__EX_x005fBoundingPolygon_x005fType*) deserialize from a stream
/// - int soap_write_gmd__EX_x005fBoundingPolygon_x005fType(soap, gmd__EX_x005fBoundingPolygon_x005fType*) serialize to a stream
class gmd__EX_x005fBoundingPolygon_x005fType : public gmd__AbstractEX_x005fGeographicExtent_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
/// Attribute id of type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute uuid of type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/*  INHERITED FROM gmd__AbstractEX_x005fGeographicExtent_x005fType:
/// Element extentTypeCode of type "http://www.isotc211.org/2005/gco":Boolean_PropertyType.
    gco__Boolean_x005fPropertyType*      extentTypeCode                 0;	///< Optional element.
    END OF INHERITED FROM gmd__AbstractEX_x005fGeographicExtent_x005fType */
/// Vector of gss__GM_x005fObject_x005fPropertyType* with length 1..unbounded
    std::vector<gss__GM_x005fObject_x005fPropertyType*> polygon                        1;
};

/// "http://www.isotc211.org/2005/gmd":EX_GeographicBoundingBox_Type is a complexType with complexContent extension of "http://www.isotc211.org/2005/gmd":AbstractEX_GeographicExtent_Type.
/// @brief Geographic area of the entire dataset referenced to WGS 84
/// class gmd__EX_x005fGeographicBoundingBox_x005fType operations:
/// - soap_new_gmd__EX_x005fGeographicBoundingBox_x005fType(soap*) allocate
/// - soap_new_gmd__EX_x005fGeographicBoundingBox_x005fType(soap*, int num) allocate array
/// - soap_new_req_gmd__EX_x005fGeographicBoundingBox_x005fType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__EX_x005fGeographicBoundingBox_x005fType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__EX_x005fGeographicBoundingBox_x005fType(soap*, gmd__EX_x005fGeographicBoundingBox_x005fType*) deserialize from a stream
/// - int soap_write_gmd__EX_x005fGeographicBoundingBox_x005fType(soap, gmd__EX_x005fGeographicBoundingBox_x005fType*) serialize to a stream
class gmd__EX_x005fGeographicBoundingBox_x005fType : public gmd__AbstractEX_x005fGeographicExtent_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
/// Attribute id of type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute uuid of type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/*  INHERITED FROM gmd__AbstractEX_x005fGeographicExtent_x005fType:
/// Element extentTypeCode of type "http://www.isotc211.org/2005/gco":Boolean_PropertyType.
    gco__Boolean_x005fPropertyType*      extentTypeCode                 0;	///< Optional element.
    END OF INHERITED FROM gmd__AbstractEX_x005fGeographicExtent_x005fType */
/// Element westBoundLongitude of type "http://www.isotc211.org/2005/gco":Decimal_PropertyType.
    gco__Decimal_x005fPropertyType*      westBoundLongitude             1;	///< Required element.
/// Element eastBoundLongitude of type "http://www.isotc211.org/2005/gco":Decimal_PropertyType.
    gco__Decimal_x005fPropertyType*      eastBoundLongitude             1;	///< Required element.
/// Element southBoundLatitude of type "http://www.isotc211.org/2005/gco":Decimal_PropertyType.
    gco__Decimal_x005fPropertyType*      southBoundLatitude             1;	///< Required element.
/// Element northBoundLatitude of type "http://www.isotc211.org/2005/gco":Decimal_PropertyType.
    gco__Decimal_x005fPropertyType*      northBoundLatitude             1;	///< Required element.
};

/// "http://www.isotc211.org/2005/gmd":EX_SpatialTemporalExtent_Type is a complexType with complexContent extension of "http://www.isotc211.org/2005/gmd":EX_TemporalExtent_Type.
/// @brief Extent with respect to date and time
/// class gmd__EX_x005fSpatialTemporalExtent_x005fType operations:
/// - soap_new_gmd__EX_x005fSpatialTemporalExtent_x005fType(soap*) allocate
/// - soap_new_gmd__EX_x005fSpatialTemporalExtent_x005fType(soap*, int num) allocate array
/// - soap_new_req_gmd__EX_x005fSpatialTemporalExtent_x005fType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__EX_x005fSpatialTemporalExtent_x005fType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__EX_x005fSpatialTemporalExtent_x005fType(soap*, gmd__EX_x005fSpatialTemporalExtent_x005fType*) deserialize from a stream
/// - int soap_write_gmd__EX_x005fSpatialTemporalExtent_x005fType(soap, gmd__EX_x005fSpatialTemporalExtent_x005fType*) serialize to a stream
class gmd__EX_x005fSpatialTemporalExtent_x005fType : public gmd__EX_x005fTemporalExtent_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
/// Attribute id of type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute uuid of type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/*  INHERITED FROM gmd__EX_x005fTemporalExtent_x005fType:
/// Element extent of type "http://www.isotc211.org/2005/gts":TM_Primitive_PropertyType.
    gts__TM_x005fPrimitive_x005fPropertyType*  extent                         1;	///< Required element.
    END OF INHERITED FROM gmd__EX_x005fTemporalExtent_x005fType */
/// Vector of gmd__EX_x005fGeographicExtent_x005fPropertyType* with length 1..unbounded
    std::vector<gmd__EX_x005fGeographicExtent_x005fPropertyType*> spatialExtent                  1;
};

/// "http://www.isotc211.org/2005/gmd":EX_GeographicDescription_Type is a complexType with complexContent extension of "http://www.isotc211.org/2005/gmd":AbstractEX_GeographicExtent_Type.
/// class gmd__EX_x005fGeographicDescription_x005fType operations:
/// - soap_new_gmd__EX_x005fGeographicDescription_x005fType(soap*) allocate
/// - soap_new_gmd__EX_x005fGeographicDescription_x005fType(soap*, int num) allocate array
/// - soap_new_req_gmd__EX_x005fGeographicDescription_x005fType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__EX_x005fGeographicDescription_x005fType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__EX_x005fGeographicDescription_x005fType(soap*, gmd__EX_x005fGeographicDescription_x005fType*) deserialize from a stream
/// - int soap_write_gmd__EX_x005fGeographicDescription_x005fType(soap, gmd__EX_x005fGeographicDescription_x005fType*) serialize to a stream
class gmd__EX_x005fGeographicDescription_x005fType : public gmd__AbstractEX_x005fGeographicExtent_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
/// Attribute id of type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute uuid of type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/*  INHERITED FROM gmd__AbstractEX_x005fGeographicExtent_x005fType:
/// Element extentTypeCode of type "http://www.isotc211.org/2005/gco":Boolean_PropertyType.
    gco__Boolean_x005fPropertyType*      extentTypeCode                 0;	///< Optional element.
    END OF INHERITED FROM gmd__AbstractEX_x005fGeographicExtent_x005fType */
/// Element geographicIdentifier of type "http://www.isotc211.org/2005/gmd":MD_Identifier_PropertyType.
    gmd__MD_x005fIdentifier_x005fPropertyType*  geographicIdentifier           1;	///< Required element.
};

/// "http://www.isotc211.org/2005/gmd":MD_FeatureCatalogueDescription_Type is a complexType with complexContent extension of "http://www.isotc211.org/2005/gmd":AbstractMD_ContentInformation_Type.
/// @brief Information identifing the feature catalogue
/// class gmd__MD_x005fFeatureCatalogueDescription_x005fType operations:
/// - soap_new_gmd__MD_x005fFeatureCatalogueDescription_x005fType(soap*) allocate
/// - soap_new_gmd__MD_x005fFeatureCatalogueDescription_x005fType(soap*, int num) allocate array
/// - soap_new_req_gmd__MD_x005fFeatureCatalogueDescription_x005fType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__MD_x005fFeatureCatalogueDescription_x005fType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__MD_x005fFeatureCatalogueDescription_x005fType(soap*, gmd__MD_x005fFeatureCatalogueDescription_x005fType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fFeatureCatalogueDescription_x005fType(soap, gmd__MD_x005fFeatureCatalogueDescription_x005fType*) serialize to a stream
class gmd__MD_x005fFeatureCatalogueDescription_x005fType : public gmd__AbstractMD_x005fContentInformation_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
/// Attribute id of type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute uuid of type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/*  INHERITED FROM gmd__AbstractMD_x005fContentInformation_x005fType:
    END OF INHERITED FROM gmd__AbstractMD_x005fContentInformation_x005fType */
/// Element complianceCode of type "http://www.isotc211.org/2005/gco":Boolean_PropertyType.
    gco__Boolean_x005fPropertyType*      complianceCode                 0;	///< Optional element.
/// Vector of gco__CharacterString_x005fPropertyType* with length 0..unbounded
    std::vector<gco__CharacterString_x005fPropertyType*> language                       0;
/// Element includedWithDataset of type "http://www.isotc211.org/2005/gco":Boolean_PropertyType.
    gco__Boolean_x005fPropertyType*      includedWithDataset            1;	///< Required element.
/// Vector of gco__GenericName_x005fPropertyType* with length 0..unbounded
    std::vector<gco__GenericName_x005fPropertyType*> featureTypes                   0;
/// Vector of gmd__CI_x005fCitation_x005fPropertyType* with length 1..unbounded
    std::vector<gmd__CI_x005fCitation_x005fPropertyType*> featureCatalogueCitation       1;
};

/// "http://www.isotc211.org/2005/gmd":MD_CoverageDescription_Type is a complexType with complexContent extension of "http://www.isotc211.org/2005/gmd":AbstractMD_ContentInformation_Type.
/// @brief Information about the domain of the raster cell
/// class gmd__MD_x005fCoverageDescription_x005fType operations:
/// - soap_new_gmd__MD_x005fCoverageDescription_x005fType(soap*) allocate
/// - soap_new_gmd__MD_x005fCoverageDescription_x005fType(soap*, int num) allocate array
/// - soap_new_req_gmd__MD_x005fCoverageDescription_x005fType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__MD_x005fCoverageDescription_x005fType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__MD_x005fCoverageDescription_x005fType(soap*, gmd__MD_x005fCoverageDescription_x005fType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fCoverageDescription_x005fType(soap, gmd__MD_x005fCoverageDescription_x005fType*) serialize to a stream
class gmd__MD_x005fCoverageDescription_x005fType : public gmd__AbstractMD_x005fContentInformation_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
/// Attribute id of type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute uuid of type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/*  INHERITED FROM gmd__AbstractMD_x005fContentInformation_x005fType:
    END OF INHERITED FROM gmd__AbstractMD_x005fContentInformation_x005fType */
/// Element attributeDescription of type "http://www.isotc211.org/2005/gco":RecordType_PropertyType.
    gco__RecordType_x005fPropertyType*   attributeDescription           1;	///< Required element.
/// Element contentType of type "http://www.isotc211.org/2005/gmd":MD_CoverageContentTypeCode_PropertyType.
    gmd__MD_x005fCoverageContentTypeCode_x005fPropertyType*  contentType                    1;	///< Required element.
/// Vector of gmd__MD_x005fRangeDimension_x005fPropertyType* with length 0..unbounded
    std::vector<gmd__MD_x005fRangeDimension_x005fPropertyType*> dimension                      0;
};

/// "http://www.isotc211.org/2005/gmd":MD_Band_Type is a complexType with complexContent extension of "http://www.isotc211.org/2005/gmd":MD_RangeDimension_Type.
/// class gmd__MD_x005fBand_x005fType operations:
/// - soap_new_gmd__MD_x005fBand_x005fType(soap*) allocate
/// - soap_new_gmd__MD_x005fBand_x005fType(soap*, int num) allocate array
/// - soap_new_req_gmd__MD_x005fBand_x005fType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__MD_x005fBand_x005fType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__MD_x005fBand_x005fType(soap*, gmd__MD_x005fBand_x005fType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fBand_x005fType(soap, gmd__MD_x005fBand_x005fType*) serialize to a stream
class gmd__MD_x005fBand_x005fType : public gmd__MD_x005fRangeDimension_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
/// Attribute id of type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute uuid of type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/*  INHERITED FROM gmd__MD_x005fRangeDimension_x005fType:
/// Element sequenceIdentifier of type "http://www.isotc211.org/2005/gco":MemberName_PropertyType.
    gco__MemberName_x005fPropertyType*   sequenceIdentifier             0;	///< Optional element.
/// Element descriptor of type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  descriptor                     0;	///< Optional element.
    END OF INHERITED FROM gmd__MD_x005fRangeDimension_x005fType */
/// Element maxValue of type "http://www.isotc211.org/2005/gco":Real_PropertyType.
    gco__Real_x005fPropertyType*         maxValue                       0;	///< Optional element.
/// Element minValue of type "http://www.isotc211.org/2005/gco":Real_PropertyType.
    gco__Real_x005fPropertyType*         minValue                       0;	///< Optional element.
/// Element units of type "http://www.isotc211.org/2005/gco":UomLength_PropertyType.
    gco__UomLength_x005fPropertyType*    units                          0;	///< Optional element.
/// Element peakResponse of type "http://www.isotc211.org/2005/gco":Real_PropertyType.
    gco__Real_x005fPropertyType*         peakResponse                   0;	///< Optional element.
/// Element bitsPerValue of type "http://www.isotc211.org/2005/gco":Integer_PropertyType.
    gco__Integer_x005fPropertyType*      bitsPerValue                   0;	///< Optional element.
/// Element toneGradation of type "http://www.isotc211.org/2005/gco":Integer_PropertyType.
    gco__Integer_x005fPropertyType*      toneGradation                  0;	///< Optional element.
/// Element scaleFactor of type "http://www.isotc211.org/2005/gco":Real_PropertyType.
    gco__Real_x005fPropertyType*         scaleFactor                    0;	///< Optional element.
/// Element offset of type "http://www.isotc211.org/2005/gco":Real_PropertyType.
    gco__Real_x005fPropertyType*         offset                         0;	///< Optional element.
};

/// "http://www.isotc211.org/2005/gmd":DQ_ConformanceResult_Type is a complexType with complexContent extension of "http://www.isotc211.org/2005/gmd":AbstractDQ_Result_Type.
/// @brief quantitative_result from Quality Procedures - - renamed to remove implied use limitiation.
/// class gmd__DQ_x005fConformanceResult_x005fType operations:
/// - soap_new_gmd__DQ_x005fConformanceResult_x005fType(soap*) allocate
/// - soap_new_gmd__DQ_x005fConformanceResult_x005fType(soap*, int num) allocate array
/// - soap_new_req_gmd__DQ_x005fConformanceResult_x005fType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__DQ_x005fConformanceResult_x005fType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__DQ_x005fConformanceResult_x005fType(soap*, gmd__DQ_x005fConformanceResult_x005fType*) deserialize from a stream
/// - int soap_write_gmd__DQ_x005fConformanceResult_x005fType(soap, gmd__DQ_x005fConformanceResult_x005fType*) serialize to a stream
class gmd__DQ_x005fConformanceResult_x005fType : public gmd__AbstractDQ_x005fResult_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
/// Attribute id of type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute uuid of type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/*  INHERITED FROM gmd__AbstractDQ_x005fResult_x005fType:
    END OF INHERITED FROM gmd__AbstractDQ_x005fResult_x005fType */
/// Element specification of type "http://www.isotc211.org/2005/gmd":CI_Citation_PropertyType.
    gmd__CI_x005fCitation_x005fPropertyType*  specification                  1;	///< Required element.
/// Element explanation of type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  explanation                    1;	///< Required element.
/// Element pass of type "http://www.isotc211.org/2005/gco":Boolean_PropertyType.
    gco__Boolean_x005fPropertyType*      pass                           1;	///< Required element.
};

/// "http://www.isotc211.org/2005/gmd":DQ_QuantitativeResult_Type is a complexType with complexContent extension of "http://www.isotc211.org/2005/gmd":AbstractDQ_Result_Type.
/// @brief Quantitative_conformance_measure from Quality Procedures. - - Renamed to remove implied use limitation - - OCL - -- result is type specified by valueDomain - result.tupleType = valueDomain
/// class gmd__DQ_x005fQuantitativeResult_x005fType operations:
/// - soap_new_gmd__DQ_x005fQuantitativeResult_x005fType(soap*) allocate
/// - soap_new_gmd__DQ_x005fQuantitativeResult_x005fType(soap*, int num) allocate array
/// - soap_new_req_gmd__DQ_x005fQuantitativeResult_x005fType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__DQ_x005fQuantitativeResult_x005fType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__DQ_x005fQuantitativeResult_x005fType(soap*, gmd__DQ_x005fQuantitativeResult_x005fType*) deserialize from a stream
/// - int soap_write_gmd__DQ_x005fQuantitativeResult_x005fType(soap, gmd__DQ_x005fQuantitativeResult_x005fType*) serialize to a stream
class gmd__DQ_x005fQuantitativeResult_x005fType : public gmd__AbstractDQ_x005fResult_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
/// Attribute id of type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute uuid of type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/*  INHERITED FROM gmd__AbstractDQ_x005fResult_x005fType:
    END OF INHERITED FROM gmd__AbstractDQ_x005fResult_x005fType */
/// Element valueType of type "http://www.isotc211.org/2005/gco":RecordType_PropertyType.
    gco__RecordType_x005fPropertyType*   valueType                      0;	///< Optional element.
/// Element valueUnit of type "http://www.isotc211.org/2005/gco":UnitOfMeasure_PropertyType.
    gco__UnitOfMeasure_x005fPropertyType*  valueUnit                      1;	///< Required element.
/// Element errorStatistic of type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  errorStatistic                 0;	///< Optional element.
/// Vector of gco__Record_x005fPropertyType* with length 1..unbounded
    std::vector<gco__Record_x005fPropertyType*> value                          1;
};

/// "http://www.isotc211.org/2005/gmd":AbstractDQ_TemporalAccuracy_Type is an abstract complexType with complexContent extension of "http://www.isotc211.org/2005/gmd":AbstractDQ_Element_Type.
/// class gmd__AbstractDQ_x005fTemporalAccuracy_x005fType operations:
/// - soap_new_gmd__AbstractDQ_x005fTemporalAccuracy_x005fType(soap*) allocate
/// - soap_new_gmd__AbstractDQ_x005fTemporalAccuracy_x005fType(soap*, int num) allocate array
/// - soap_new_req_gmd__AbstractDQ_x005fTemporalAccuracy_x005fType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__AbstractDQ_x005fTemporalAccuracy_x005fType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__AbstractDQ_x005fTemporalAccuracy_x005fType(soap*, gmd__AbstractDQ_x005fTemporalAccuracy_x005fType*) deserialize from a stream
/// - int soap_write_gmd__AbstractDQ_x005fTemporalAccuracy_x005fType(soap, gmd__AbstractDQ_x005fTemporalAccuracy_x005fType*) serialize to a stream
class gmd__AbstractDQ_x005fTemporalAccuracy_x005fType : public gmd__AbstractDQ_x005fElement_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
/// Attribute id of type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute uuid of type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/*  INHERITED FROM gmd__AbstractDQ_x005fElement_x005fType:
/// Vector of gco__CharacterString_x005fPropertyType* with length 0..unbounded
    std::vector<gco__CharacterString_x005fPropertyType*> nameOfMeasure                  0;
/// Element measureIdentification of type "http://www.isotc211.org/2005/gmd":MD_Identifier_PropertyType.
    gmd__MD_x005fIdentifier_x005fPropertyType*  measureIdentification          0;	///< Optional element.
/// Element measureDescription of type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  measureDescription             0;	///< Optional element.
/// Element evaluationMethodType of type "http://www.isotc211.org/2005/gmd":DQ_EvaluationMethodTypeCode_PropertyType.
    gmd__DQ_x005fEvaluationMethodTypeCode_x005fPropertyType*  evaluationMethodType           0;	///< Optional element.
/// Element evaluationMethodDescription of type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  evaluationMethodDescription    0;	///< Optional element.
/// Element evaluationProcedure of type "http://www.isotc211.org/2005/gmd":CI_Citation_PropertyType.
    gmd__CI_x005fCitation_x005fPropertyType*  evaluationProcedure            0;	///< Optional element.
/// Vector of gco__DateTime_x005fPropertyType* with length 0..unbounded
    std::vector<gco__DateTime_x005fPropertyType*> dateTime                       0;
/// Vector of gmd__DQ_x005fResult_x005fPropertyType* with length 1..2
    std::vector<gmd__DQ_x005fResult_x005fPropertyType*> result                         1:2;
    END OF INHERITED FROM gmd__AbstractDQ_x005fElement_x005fType */
};

/// "http://www.isotc211.org/2005/gmd":AbstractDQ_ThematicAccuracy_Type is an abstract complexType with complexContent extension of "http://www.isotc211.org/2005/gmd":AbstractDQ_Element_Type.
/// class gmd__AbstractDQ_x005fThematicAccuracy_x005fType operations:
/// - soap_new_gmd__AbstractDQ_x005fThematicAccuracy_x005fType(soap*) allocate
/// - soap_new_gmd__AbstractDQ_x005fThematicAccuracy_x005fType(soap*, int num) allocate array
/// - soap_new_req_gmd__AbstractDQ_x005fThematicAccuracy_x005fType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__AbstractDQ_x005fThematicAccuracy_x005fType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__AbstractDQ_x005fThematicAccuracy_x005fType(soap*, gmd__AbstractDQ_x005fThematicAccuracy_x005fType*) deserialize from a stream
/// - int soap_write_gmd__AbstractDQ_x005fThematicAccuracy_x005fType(soap, gmd__AbstractDQ_x005fThematicAccuracy_x005fType*) serialize to a stream
class gmd__AbstractDQ_x005fThematicAccuracy_x005fType : public gmd__AbstractDQ_x005fElement_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
/// Attribute id of type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute uuid of type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/*  INHERITED FROM gmd__AbstractDQ_x005fElement_x005fType:
/// Vector of gco__CharacterString_x005fPropertyType* with length 0..unbounded
    std::vector<gco__CharacterString_x005fPropertyType*> nameOfMeasure                  0;
/// Element measureIdentification of type "http://www.isotc211.org/2005/gmd":MD_Identifier_PropertyType.
    gmd__MD_x005fIdentifier_x005fPropertyType*  measureIdentification          0;	///< Optional element.
/// Element measureDescription of type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  measureDescription             0;	///< Optional element.
/// Element evaluationMethodType of type "http://www.isotc211.org/2005/gmd":DQ_EvaluationMethodTypeCode_PropertyType.
    gmd__DQ_x005fEvaluationMethodTypeCode_x005fPropertyType*  evaluationMethodType           0;	///< Optional element.
/// Element evaluationMethodDescription of type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  evaluationMethodDescription    0;	///< Optional element.
/// Element evaluationProcedure of type "http://www.isotc211.org/2005/gmd":CI_Citation_PropertyType.
    gmd__CI_x005fCitation_x005fPropertyType*  evaluationProcedure            0;	///< Optional element.
/// Vector of gco__DateTime_x005fPropertyType* with length 0..unbounded
    std::vector<gco__DateTime_x005fPropertyType*> dateTime                       0;
/// Vector of gmd__DQ_x005fResult_x005fPropertyType* with length 1..2
    std::vector<gmd__DQ_x005fResult_x005fPropertyType*> result                         1:2;
    END OF INHERITED FROM gmd__AbstractDQ_x005fElement_x005fType */
};

/// "http://www.isotc211.org/2005/gmd":AbstractDQ_PositionalAccuracy_Type is an abstract complexType with complexContent extension of "http://www.isotc211.org/2005/gmd":AbstractDQ_Element_Type.
/// class gmd__AbstractDQ_x005fPositionalAccuracy_x005fType operations:
/// - soap_new_gmd__AbstractDQ_x005fPositionalAccuracy_x005fType(soap*) allocate
/// - soap_new_gmd__AbstractDQ_x005fPositionalAccuracy_x005fType(soap*, int num) allocate array
/// - soap_new_req_gmd__AbstractDQ_x005fPositionalAccuracy_x005fType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__AbstractDQ_x005fPositionalAccuracy_x005fType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__AbstractDQ_x005fPositionalAccuracy_x005fType(soap*, gmd__AbstractDQ_x005fPositionalAccuracy_x005fType*) deserialize from a stream
/// - int soap_write_gmd__AbstractDQ_x005fPositionalAccuracy_x005fType(soap, gmd__AbstractDQ_x005fPositionalAccuracy_x005fType*) serialize to a stream
class gmd__AbstractDQ_x005fPositionalAccuracy_x005fType : public gmd__AbstractDQ_x005fElement_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
/// Attribute id of type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute uuid of type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/*  INHERITED FROM gmd__AbstractDQ_x005fElement_x005fType:
/// Vector of gco__CharacterString_x005fPropertyType* with length 0..unbounded
    std::vector<gco__CharacterString_x005fPropertyType*> nameOfMeasure                  0;
/// Element measureIdentification of type "http://www.isotc211.org/2005/gmd":MD_Identifier_PropertyType.
    gmd__MD_x005fIdentifier_x005fPropertyType*  measureIdentification          0;	///< Optional element.
/// Element measureDescription of type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  measureDescription             0;	///< Optional element.
/// Element evaluationMethodType of type "http://www.isotc211.org/2005/gmd":DQ_EvaluationMethodTypeCode_PropertyType.
    gmd__DQ_x005fEvaluationMethodTypeCode_x005fPropertyType*  evaluationMethodType           0;	///< Optional element.
/// Element evaluationMethodDescription of type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  evaluationMethodDescription    0;	///< Optional element.
/// Element evaluationProcedure of type "http://www.isotc211.org/2005/gmd":CI_Citation_PropertyType.
    gmd__CI_x005fCitation_x005fPropertyType*  evaluationProcedure            0;	///< Optional element.
/// Vector of gco__DateTime_x005fPropertyType* with length 0..unbounded
    std::vector<gco__DateTime_x005fPropertyType*> dateTime                       0;
/// Vector of gmd__DQ_x005fResult_x005fPropertyType* with length 1..2
    std::vector<gmd__DQ_x005fResult_x005fPropertyType*> result                         1:2;
    END OF INHERITED FROM gmd__AbstractDQ_x005fElement_x005fType */
};

/// "http://www.isotc211.org/2005/gmd":AbstractDQ_LogicalConsistency_Type is an abstract complexType with complexContent extension of "http://www.isotc211.org/2005/gmd":AbstractDQ_Element_Type.
/// class gmd__AbstractDQ_x005fLogicalConsistency_x005fType operations:
/// - soap_new_gmd__AbstractDQ_x005fLogicalConsistency_x005fType(soap*) allocate
/// - soap_new_gmd__AbstractDQ_x005fLogicalConsistency_x005fType(soap*, int num) allocate array
/// - soap_new_req_gmd__AbstractDQ_x005fLogicalConsistency_x005fType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__AbstractDQ_x005fLogicalConsistency_x005fType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__AbstractDQ_x005fLogicalConsistency_x005fType(soap*, gmd__AbstractDQ_x005fLogicalConsistency_x005fType*) deserialize from a stream
/// - int soap_write_gmd__AbstractDQ_x005fLogicalConsistency_x005fType(soap, gmd__AbstractDQ_x005fLogicalConsistency_x005fType*) serialize to a stream
class gmd__AbstractDQ_x005fLogicalConsistency_x005fType : public gmd__AbstractDQ_x005fElement_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
/// Attribute id of type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute uuid of type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/*  INHERITED FROM gmd__AbstractDQ_x005fElement_x005fType:
/// Vector of gco__CharacterString_x005fPropertyType* with length 0..unbounded
    std::vector<gco__CharacterString_x005fPropertyType*> nameOfMeasure                  0;
/// Element measureIdentification of type "http://www.isotc211.org/2005/gmd":MD_Identifier_PropertyType.
    gmd__MD_x005fIdentifier_x005fPropertyType*  measureIdentification          0;	///< Optional element.
/// Element measureDescription of type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  measureDescription             0;	///< Optional element.
/// Element evaluationMethodType of type "http://www.isotc211.org/2005/gmd":DQ_EvaluationMethodTypeCode_PropertyType.
    gmd__DQ_x005fEvaluationMethodTypeCode_x005fPropertyType*  evaluationMethodType           0;	///< Optional element.
/// Element evaluationMethodDescription of type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  evaluationMethodDescription    0;	///< Optional element.
/// Element evaluationProcedure of type "http://www.isotc211.org/2005/gmd":CI_Citation_PropertyType.
    gmd__CI_x005fCitation_x005fPropertyType*  evaluationProcedure            0;	///< Optional element.
/// Vector of gco__DateTime_x005fPropertyType* with length 0..unbounded
    std::vector<gco__DateTime_x005fPropertyType*> dateTime                       0;
/// Vector of gmd__DQ_x005fResult_x005fPropertyType* with length 1..2
    std::vector<gmd__DQ_x005fResult_x005fPropertyType*> result                         1:2;
    END OF INHERITED FROM gmd__AbstractDQ_x005fElement_x005fType */
};

/// "http://www.isotc211.org/2005/gmd":AbstractDQ_Completeness_Type is an abstract complexType with complexContent extension of "http://www.isotc211.org/2005/gmd":AbstractDQ_Element_Type.
/// class gmd__AbstractDQ_x005fCompleteness_x005fType operations:
/// - soap_new_gmd__AbstractDQ_x005fCompleteness_x005fType(soap*) allocate
/// - soap_new_gmd__AbstractDQ_x005fCompleteness_x005fType(soap*, int num) allocate array
/// - soap_new_req_gmd__AbstractDQ_x005fCompleteness_x005fType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__AbstractDQ_x005fCompleteness_x005fType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__AbstractDQ_x005fCompleteness_x005fType(soap*, gmd__AbstractDQ_x005fCompleteness_x005fType*) deserialize from a stream
/// - int soap_write_gmd__AbstractDQ_x005fCompleteness_x005fType(soap, gmd__AbstractDQ_x005fCompleteness_x005fType*) serialize to a stream
class gmd__AbstractDQ_x005fCompleteness_x005fType : public gmd__AbstractDQ_x005fElement_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
/// Attribute id of type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute uuid of type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/*  INHERITED FROM gmd__AbstractDQ_x005fElement_x005fType:
/// Vector of gco__CharacterString_x005fPropertyType* with length 0..unbounded
    std::vector<gco__CharacterString_x005fPropertyType*> nameOfMeasure                  0;
/// Element measureIdentification of type "http://www.isotc211.org/2005/gmd":MD_Identifier_PropertyType.
    gmd__MD_x005fIdentifier_x005fPropertyType*  measureIdentification          0;	///< Optional element.
/// Element measureDescription of type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  measureDescription             0;	///< Optional element.
/// Element evaluationMethodType of type "http://www.isotc211.org/2005/gmd":DQ_EvaluationMethodTypeCode_PropertyType.
    gmd__DQ_x005fEvaluationMethodTypeCode_x005fPropertyType*  evaluationMethodType           0;	///< Optional element.
/// Element evaluationMethodDescription of type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  evaluationMethodDescription    0;	///< Optional element.
/// Element evaluationProcedure of type "http://www.isotc211.org/2005/gmd":CI_Citation_PropertyType.
    gmd__CI_x005fCitation_x005fPropertyType*  evaluationProcedure            0;	///< Optional element.
/// Vector of gco__DateTime_x005fPropertyType* with length 0..unbounded
    std::vector<gco__DateTime_x005fPropertyType*> dateTime                       0;
/// Vector of gmd__DQ_x005fResult_x005fPropertyType* with length 1..2
    std::vector<gmd__DQ_x005fResult_x005fPropertyType*> result                         1:2;
    END OF INHERITED FROM gmd__AbstractDQ_x005fElement_x005fType */
};

/// "http://www.isotc211.org/2005/gmd":MD_DataIdentification_Type is a complexType with complexContent extension of "http://www.isotc211.org/2005/gmd":AbstractMD_Identification_Type.
/// class gmd__MD_x005fDataIdentification_x005fType operations:
/// - soap_new_gmd__MD_x005fDataIdentification_x005fType(soap*) allocate
/// - soap_new_gmd__MD_x005fDataIdentification_x005fType(soap*, int num) allocate array
/// - soap_new_req_gmd__MD_x005fDataIdentification_x005fType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__MD_x005fDataIdentification_x005fType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__MD_x005fDataIdentification_x005fType(soap*, gmd__MD_x005fDataIdentification_x005fType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fDataIdentification_x005fType(soap, gmd__MD_x005fDataIdentification_x005fType*) serialize to a stream
class gmd__MD_x005fDataIdentification_x005fType : public gmd__AbstractMD_x005fIdentification_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
/// Attribute id of type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute uuid of type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/*  INHERITED FROM gmd__AbstractMD_x005fIdentification_x005fType:
/// Element citation of type "http://www.isotc211.org/2005/gmd":CI_Citation_PropertyType.
    gmd__CI_x005fCitation_x005fPropertyType*  citation                       1;	///< Required element.
/// Element abstract of type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  abstract                       1;	///< Required element.
/// Element purpose of type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  purpose                        0;	///< Optional element.
/// Vector of gco__CharacterString_x005fPropertyType* with length 0..unbounded
    std::vector<gco__CharacterString_x005fPropertyType*> credit                         0;
/// Vector of gmd__MD_x005fProgressCode_x005fPropertyType* with length 0..unbounded
    std::vector<gmd__MD_x005fProgressCode_x005fPropertyType*> status                         0;
/// Vector of gmd__CI_x005fResponsibleParty_x005fPropertyType* with length 0..unbounded
    std::vector<gmd__CI_x005fResponsibleParty_x005fPropertyType*> pointOfContact                 0;
/// Vector of gmd__MD_x005fMaintenanceInformation_x005fPropertyType* with length 0..unbounded
    std::vector<gmd__MD_x005fMaintenanceInformation_x005fPropertyType*> resourceMaintenance            0;
/// Vector of gmd__MD_x005fBrowseGraphic_x005fPropertyType* with length 0..unbounded
    std::vector<gmd__MD_x005fBrowseGraphic_x005fPropertyType*> graphicOverview                0;
/// Vector of gmd__MD_x005fFormat_x005fPropertyType* with length 0..unbounded
    std::vector<gmd__MD_x005fFormat_x005fPropertyType*> resourceFormat                 0;
/// Vector of gmd__MD_x005fKeywords_x005fPropertyType* with length 0..unbounded
    std::vector<gmd__MD_x005fKeywords_x005fPropertyType*> descriptiveKeywords            0;
/// Vector of gmd__MD_x005fUsage_x005fPropertyType* with length 0..unbounded
    std::vector<gmd__MD_x005fUsage_x005fPropertyType*> resourceSpecificUsage          0;
/// Vector of gmd__MD_x005fConstraints_x005fPropertyType* with length 0..unbounded
    std::vector<gmd__MD_x005fConstraints_x005fPropertyType*> resourceConstraints            0;
/// Vector of gmd__MD_x005fAggregateInformation_x005fPropertyType* with length 0..unbounded
    std::vector<gmd__MD_x005fAggregateInformation_x005fPropertyType*> aggregationInfo                0;
    END OF INHERITED FROM gmd__AbstractMD_x005fIdentification_x005fType */
/// Vector of gmd__MD_x005fSpatialRepresentationTypeCode_x005fPropertyType* with length 0..unbounded
    std::vector<gmd__MD_x005fSpatialRepresentationTypeCode_x005fPropertyType*> spatialRepresentationType      0;
/// Vector of gmd__MD_x005fResolution_x005fPropertyType* with length 0..unbounded
    std::vector<gmd__MD_x005fResolution_x005fPropertyType*> spatialResolution              0;
/// Vector of gco__CharacterString_x005fPropertyType* with length 1..unbounded
    std::vector<gco__CharacterString_x005fPropertyType*> language                       1;
/// Vector of gmd__MD_x005fCharacterSetCode_x005fPropertyType* with length 0..unbounded
    std::vector<gmd__MD_x005fCharacterSetCode_x005fPropertyType*> characterSet                   0;
/// Vector of gmd__MD_x005fTopicCategoryCode_x005fPropertyType* with length 0..unbounded
    std::vector<gmd__MD_x005fTopicCategoryCode_x005fPropertyType*> topicCategory                  0;
/// Element environmentDescription of type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  environmentDescription         0;	///< Optional element.
/// Vector of gmd__EX_x005fExtent_x005fPropertyType* with length 0..unbounded
    std::vector<gmd__EX_x005fExtent_x005fPropertyType*> extent                         0;
/// Element supplementalInformation of type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  supplementalInformation        0;	///< Optional element.
};

/// "http://www.isotc211.org/2005/gmd":MD_ServiceIdentification_Type is a complexType with complexContent extension of "http://www.isotc211.org/2005/gmd":AbstractMD_Identification_Type.
/// @brief See 19119 for further info
/// class gmd__MD_x005fServiceIdentification_x005fType operations:
/// - soap_new_gmd__MD_x005fServiceIdentification_x005fType(soap*) allocate
/// - soap_new_gmd__MD_x005fServiceIdentification_x005fType(soap*, int num) allocate array
/// - soap_new_req_gmd__MD_x005fServiceIdentification_x005fType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__MD_x005fServiceIdentification_x005fType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__MD_x005fServiceIdentification_x005fType(soap*, gmd__MD_x005fServiceIdentification_x005fType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fServiceIdentification_x005fType(soap, gmd__MD_x005fServiceIdentification_x005fType*) serialize to a stream
class gmd__MD_x005fServiceIdentification_x005fType : public gmd__AbstractMD_x005fIdentification_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
/// Attribute id of type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute uuid of type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/*  INHERITED FROM gmd__AbstractMD_x005fIdentification_x005fType:
/// Element citation of type "http://www.isotc211.org/2005/gmd":CI_Citation_PropertyType.
    gmd__CI_x005fCitation_x005fPropertyType*  citation                       1;	///< Required element.
/// Element abstract of type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  abstract                       1;	///< Required element.
/// Element purpose of type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  purpose                        0;	///< Optional element.
/// Vector of gco__CharacterString_x005fPropertyType* with length 0..unbounded
    std::vector<gco__CharacterString_x005fPropertyType*> credit                         0;
/// Vector of gmd__MD_x005fProgressCode_x005fPropertyType* with length 0..unbounded
    std::vector<gmd__MD_x005fProgressCode_x005fPropertyType*> status                         0;
/// Vector of gmd__CI_x005fResponsibleParty_x005fPropertyType* with length 0..unbounded
    std::vector<gmd__CI_x005fResponsibleParty_x005fPropertyType*> pointOfContact                 0;
/// Vector of gmd__MD_x005fMaintenanceInformation_x005fPropertyType* with length 0..unbounded
    std::vector<gmd__MD_x005fMaintenanceInformation_x005fPropertyType*> resourceMaintenance            0;
/// Vector of gmd__MD_x005fBrowseGraphic_x005fPropertyType* with length 0..unbounded
    std::vector<gmd__MD_x005fBrowseGraphic_x005fPropertyType*> graphicOverview                0;
/// Vector of gmd__MD_x005fFormat_x005fPropertyType* with length 0..unbounded
    std::vector<gmd__MD_x005fFormat_x005fPropertyType*> resourceFormat                 0;
/// Vector of gmd__MD_x005fKeywords_x005fPropertyType* with length 0..unbounded
    std::vector<gmd__MD_x005fKeywords_x005fPropertyType*> descriptiveKeywords            0;
/// Vector of gmd__MD_x005fUsage_x005fPropertyType* with length 0..unbounded
    std::vector<gmd__MD_x005fUsage_x005fPropertyType*> resourceSpecificUsage          0;
/// Vector of gmd__MD_x005fConstraints_x005fPropertyType* with length 0..unbounded
    std::vector<gmd__MD_x005fConstraints_x005fPropertyType*> resourceConstraints            0;
/// Vector of gmd__MD_x005fAggregateInformation_x005fPropertyType* with length 0..unbounded
    std::vector<gmd__MD_x005fAggregateInformation_x005fPropertyType*> aggregationInfo                0;
    END OF INHERITED FROM gmd__AbstractMD_x005fIdentification_x005fType */
};

/// "http://www.isotc211.org/2005/gmd":MD_LegalConstraints_Type is a complexType with complexContent extension of "http://www.isotc211.org/2005/gmd":MD_Constraints_Type.
/// @brief Restrictions and legal prerequisites for accessing and using the dataset.
/// class gmd__MD_x005fLegalConstraints_x005fType operations:
/// - soap_new_gmd__MD_x005fLegalConstraints_x005fType(soap*) allocate
/// - soap_new_gmd__MD_x005fLegalConstraints_x005fType(soap*, int num) allocate array
/// - soap_new_req_gmd__MD_x005fLegalConstraints_x005fType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__MD_x005fLegalConstraints_x005fType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__MD_x005fLegalConstraints_x005fType(soap*, gmd__MD_x005fLegalConstraints_x005fType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fLegalConstraints_x005fType(soap, gmd__MD_x005fLegalConstraints_x005fType*) serialize to a stream
class gmd__MD_x005fLegalConstraints_x005fType : public gmd__MD_x005fConstraints_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
/// Attribute id of type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute uuid of type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/*  INHERITED FROM gmd__MD_x005fConstraints_x005fType:
/// Vector of gco__CharacterString_x005fPropertyType* with length 0..unbounded
    std::vector<gco__CharacterString_x005fPropertyType*> useLimitation                  0;
    END OF INHERITED FROM gmd__MD_x005fConstraints_x005fType */
/// Vector of gmd__MD_x005fRestrictionCode_x005fPropertyType* with length 0..unbounded
    std::vector<gmd__MD_x005fRestrictionCode_x005fPropertyType*> accessConstraints              0;
/// Vector of gmd__MD_x005fRestrictionCode_x005fPropertyType* with length 0..unbounded
    std::vector<gmd__MD_x005fRestrictionCode_x005fPropertyType*> useConstraints                 0;
/// Vector of gco__CharacterString_x005fPropertyType* with length 0..unbounded
    std::vector<gco__CharacterString_x005fPropertyType*> otherConstraints               0;
};

/// "http://www.isotc211.org/2005/gmd":MD_SecurityConstraints_Type is a complexType with complexContent extension of "http://www.isotc211.org/2005/gmd":MD_Constraints_Type.
/// @brief Handling restrictions imposed on the dataset because of national security, privacy, or other concerns
/// class gmd__MD_x005fSecurityConstraints_x005fType operations:
/// - soap_new_gmd__MD_x005fSecurityConstraints_x005fType(soap*) allocate
/// - soap_new_gmd__MD_x005fSecurityConstraints_x005fType(soap*, int num) allocate array
/// - soap_new_req_gmd__MD_x005fSecurityConstraints_x005fType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__MD_x005fSecurityConstraints_x005fType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__MD_x005fSecurityConstraints_x005fType(soap*, gmd__MD_x005fSecurityConstraints_x005fType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fSecurityConstraints_x005fType(soap, gmd__MD_x005fSecurityConstraints_x005fType*) serialize to a stream
class gmd__MD_x005fSecurityConstraints_x005fType : public gmd__MD_x005fConstraints_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
/// Attribute id of type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute uuid of type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/*  INHERITED FROM gmd__MD_x005fConstraints_x005fType:
/// Vector of gco__CharacterString_x005fPropertyType* with length 0..unbounded
    std::vector<gco__CharacterString_x005fPropertyType*> useLimitation                  0;
    END OF INHERITED FROM gmd__MD_x005fConstraints_x005fType */
/// Element classification of type "http://www.isotc211.org/2005/gmd":MD_ClassificationCode_PropertyType.
    gmd__MD_x005fClassificationCode_x005fPropertyType*  classification                 1;	///< Required element.
/// Element userNote of type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  userNote                       0;	///< Optional element.
/// Element classificationSystem of type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  classificationSystem           0;	///< Optional element.
/// Element handlingDescription of type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  handlingDescription            0;	///< Optional element.
};

/// "http://www.opengis.net/gml/3.2":DynamicFeatureCollectionType is a complexType with complexContent extension of "http://www.opengis.net/gml/3.2":DynamicFeatureType.
/// class gml__DynamicFeatureCollectionType operations:
/// - soap_new_gml__DynamicFeatureCollectionType(soap*) allocate
/// - soap_new_gml__DynamicFeatureCollectionType(soap*, int num) allocate array
/// - soap_new_req_gml__DynamicFeatureCollectionType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__DynamicFeatureCollectionType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__DynamicFeatureCollectionType(soap*, gml__DynamicFeatureCollectionType*) deserialize from a stream
/// - int soap_write_gml__DynamicFeatureCollectionType(soap, gml__DynamicFeatureCollectionType*) serialize to a stream
class gml__DynamicFeatureCollectionType : public gml__DynamicFeatureType
{ public:
/*  INHERITED FROM gml__AbstractGMLType:
/// GROUP <xs:group name="StandardObjectProperties">
/// Vector of gml__MetaDataPropertyType* element refs with length 0..unbounded
    std::vector<gml__MetaDataPropertyType*> metaDataProperty               0;
/// @brief The value of this property is a text description of the object. gml:description uses gml:StringOrRefType as its content model, so it may contain a simple text string content, or carry a reference to an external description. The use of gml:description to reference an external description has been deprecated and replaced by the gml:descriptionReference property.
/// Element reference "http://www.opengis.net/gml/3.2":description.
    gml__StringOrRefType*                description                    0;	///< Optional element.
/// @brief The value of this property is a remote text description of the object. The xlink:href attribute of the gml:descriptionReference property references the external description.
/// Element reference "http://www.opengis.net/gml/3.2":descriptionReference.
    gml__ReferenceType*                  descriptionReference           0;	///< Optional element.
/// @brief Often, a special identifier is assigned to an object by the maintaining authority with the intention that it is used in references to the object For such cases, the codeSpace shall be provided. That identifier is usually unique either globally or within an application domain. gml:identifier is a pre-defined property for such identifiers.
/// Element reference "http://www.opengis.net/gml/3.2":identifier.
    gml__CodeWithAuthorityType*          identifier                     0;	///< Optional element.
/// @brief The gml:name property provides a label or identifier for the object, commonly a descriptive name. An object may have several names, typically assigned by different authorities. gml:name uses the gml:CodeType content model. The authority for a name is indicated by the value of its (optional) codeSpace attribute. The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace. In common usage there will be one name per authority, so a processing application may select the name from its preferred codeSpace.
/// Vector of gml__CodeType* element refs with length 0..unbounded
    std::vector<gml__CodeType*         > name                           0;
//  END OF GROUP
/// Attribute reference "http://www.opengis.net/gml/3.2":id.
/// @brief The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.
   @xsd__ID                              id                             1;	///< Required attribute.
    END OF INHERITED FROM gml__AbstractGMLType */
/*  INHERITED FROM gml__AbstractFeatureType:
/// @brief This property describes the minimum bounding box or rectangle that encloses the entire feature.
/// Element reference "http://www.opengis.net/gml/3.2":boundedBy.
    gml__BoundingShapeType*              boundedBy                      0;	///< Optional element.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="location" minOccurs="0"> with elements <priorityLocation>
   $int                                  __unionlocation                0;	///< Union _gml__union_DynamicFeatureCollectionType selector: set to SOAP_UNION__gml__union_DynamicFeatureCollectionType_<fieldname> or 0
/// Union for substitutionGroup="location"
    union _gml__union_DynamicFeatureCollectionType
    {
/// Element reference "http://www.opengis.net/gml/3.2":location.
    gml__LocationPropertyType*           location                       0;	///< Optional element.
/// Element priorityLocation of type "http://www.opengis.net/gml/3.2":PriorityLocationPropertyType.
    gml__PriorityLocationPropertyType*   priorityLocation               1;	///< Required element.
    }                                    __union_DynamicFeatureCollectionType;
//  END OF CHOICE OF SUBSTITUTIONS
    END OF INHERITED FROM gml__AbstractFeatureType */
/*  INHERITED FROM gml__DynamicFeatureType:
/// GROUP <xs:group name="dynamicProperties">
/// @brief A convenience group. This allows an application schema developer to include dynamic properties in a content model in a standard fashion.
/// @brief gml:validTime is a convenience property element.
/// Element reference "http://www.opengis.net/gml/3.2":validTime.
    gml__TimePrimitivePropertyType*      validTime                      0;	///< Optional element.
/// @brief A generic sequence of events constitute a gml:history of an object. The gml:history element contains a set of elements in the substitution group headed by the abstract element gml:AbstractTimeSlice, representing the time-varying properties of interest. The history property of a dynamic feature associates a feature instance with a sequence of time slices (i.e. change events) that encapsulate the evolution of the feature.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="history" minOccurs="0"> with elements <track>
   $int                                  __unionhistory                 0;	///< Union _gml__union_DynamicFeatureCollectionType_ selector: set to SOAP_UNION__gml__union_DynamicFeatureCollectionType__<fieldname> or 0
/// Union for substitutionGroup="history"
    union _gml__union_DynamicFeatureCollectionType_
    {
/// @brief A generic sequence of events constitute a gml:history of an object. The gml:history element contains a set of elements in the substitution group headed by the abstract element gml:AbstractTimeSlice, representing the time-varying properties of interest. The history property of a dynamic feature associates a feature instance with a sequence of time slices (i.e. change events) that encapsulate the evolution of the feature.
/// Element reference "http://www.opengis.net/gml/3.2":history.
    gml__HistoryPropertyType*            history                        0;	///< Optional element.
/// Element track of type "http://www.opengis.net/gml/3.2":HistoryPropertyType.
    gml__HistoryPropertyType*            track                          1;	///< Required element.
    }                                    __union_DynamicFeatureCollectionType_;
//  END OF CHOICE OF SUBSTITUTIONS
/// @brief Evidence is represented by a simple gml:dataSource or gml:dataSourceReference property that indicates the source of the temporal data. The remote link attributes of the gml:dataSource element have been deprecated along with its current type.
/// Element reference "http://www.opengis.net/gml/3.2":dataSource.
    gml__StringOrRefType*                dataSource                     0;	///< Optional element.
/// @brief Evidence is represented by a simple gml:dataSource or gml:dataSourceReference property that indicates the source of the temporal data.
/// Element reference "http://www.opengis.net/gml/3.2":dataSourceReference.
    gml__ReferenceType*                  dataSourceReference            0;	///< Optional element.
//  END OF GROUP
    END OF INHERITED FROM gml__DynamicFeatureType */
/// Element reference "http://www.opengis.net/gml/3.2":dynamicMembers.
    gml__DynamicFeatureMemberType*       dynamicMembers                 1;	///< Required element.
};

/// "http://www.opengis.net/gml/3.2":NodeType is a complexType with complexContent extension of "http://www.opengis.net/gml/3.2":AbstractTopoPrimitiveType.
/// class gml__NodeType operations:
/// - soap_new_gml__NodeType(soap*) allocate
/// - soap_new_gml__NodeType(soap*, int num) allocate array
/// - soap_new_req_gml__NodeType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__NodeType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__NodeType(soap*, gml__NodeType*) deserialize from a stream
/// - int soap_write_gml__NodeType(soap, gml__NodeType*) serialize to a stream
class gml__NodeType : public gml__AbstractTopoPrimitiveType
{ public:
/*  INHERITED FROM gml__AbstractGMLType:
/// GROUP <xs:group name="StandardObjectProperties">
/// Vector of gml__MetaDataPropertyType* element refs with length 0..unbounded
    std::vector<gml__MetaDataPropertyType*> metaDataProperty               0;
/// @brief The value of this property is a text description of the object. gml:description uses gml:StringOrRefType as its content model, so it may contain a simple text string content, or carry a reference to an external description. The use of gml:description to reference an external description has been deprecated and replaced by the gml:descriptionReference property.
/// Element reference "http://www.opengis.net/gml/3.2":description.
    gml__StringOrRefType*                description                    0;	///< Optional element.
/// @brief The value of this property is a remote text description of the object. The xlink:href attribute of the gml:descriptionReference property references the external description.
/// Element reference "http://www.opengis.net/gml/3.2":descriptionReference.
    gml__ReferenceType*                  descriptionReference           0;	///< Optional element.
/// @brief Often, a special identifier is assigned to an object by the maintaining authority with the intention that it is used in references to the object For such cases, the codeSpace shall be provided. That identifier is usually unique either globally or within an application domain. gml:identifier is a pre-defined property for such identifiers.
/// Element reference "http://www.opengis.net/gml/3.2":identifier.
    gml__CodeWithAuthorityType*          identifier                     0;	///< Optional element.
/// @brief The gml:name property provides a label or identifier for the object, commonly a descriptive name. An object may have several names, typically assigned by different authorities. gml:name uses the gml:CodeType content model. The authority for a name is indicated by the value of its (optional) codeSpace attribute. The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace. In common usage there will be one name per authority, so a processing application may select the name from its preferred codeSpace.
/// Vector of gml__CodeType* element refs with length 0..unbounded
    std::vector<gml__CodeType*         > name                           0;
//  END OF GROUP
/// Attribute reference "http://www.opengis.net/gml/3.2":id.
/// @brief The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.
   @xsd__ID                              id                             1;	///< Required attribute.
    END OF INHERITED FROM gml__AbstractGMLType */
/*  INHERITED FROM gml__AbstractTopologyType:
    END OF INHERITED FROM gml__AbstractTopologyType */
/*  INHERITED FROM gml__AbstractTopoPrimitiveType:
    END OF INHERITED FROM gml__AbstractTopoPrimitiveType */
/// Element container of type "http://www.opengis.net/gml/3.2":FaceOrTopoSolidPropertyType.
    gml__FaceOrTopoSolidPropertyType*    container                      0;	///< Optional element.
/// @brief In the case of planar topology, a gml:Node must have a clockwise sequence of gml:directedEdge properties, to ensure a lossless topology representation as defined by Kuijpers, et. al. (see OGC 05-102 Topology IPR).
/// @brief A gml:directedEdge property element describes the boundary of topology faces, the coBoundary of topology nodes and is used in the support of topological line features via the gml:TopoCurve expression, see below. The orientation attribute of type gml:SignType expresses the sense in which the included edge is used, i.e. forward or reverse.
/// Vector of gml__DirectedEdgePropertyType* element refs with length 0..unbounded
    std::vector<gml__DirectedEdgePropertyType*> directedEdge                   0;
/// @brief This property element either references a point via the XLink-attributes or contains the point element. pointProperty is the predefined property which may be used by GML Application Schemas whenever a GML feature has a property with a value that is substitutable for Point.
/// Element reference "http://www.opengis.net/gml/3.2":pointProperty.
    gml__PointPropertyType*              pointProperty                  0;	///< Optional element.
/// Attribute aggregationType of type "http://www.opengis.net/gml/3.2":AggregationType.
   @enum gml__AggregationType*           aggregationType                0;	///< Optional attribute.
};

/// "http://www.opengis.net/gml/3.2":EdgeType is a complexType with complexContent extension of "http://www.opengis.net/gml/3.2":AbstractTopoPrimitiveType.
/// class gml__EdgeType operations:
/// - soap_new_gml__EdgeType(soap*) allocate
/// - soap_new_gml__EdgeType(soap*, int num) allocate array
/// - soap_new_req_gml__EdgeType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__EdgeType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__EdgeType(soap*, gml__EdgeType*) deserialize from a stream
/// - int soap_write_gml__EdgeType(soap, gml__EdgeType*) serialize to a stream
class gml__EdgeType : public gml__AbstractTopoPrimitiveType
{ public:
/*  INHERITED FROM gml__AbstractGMLType:
/// GROUP <xs:group name="StandardObjectProperties">
/// Vector of gml__MetaDataPropertyType* element refs with length 0..unbounded
    std::vector<gml__MetaDataPropertyType*> metaDataProperty               0;
/// @brief The value of this property is a text description of the object. gml:description uses gml:StringOrRefType as its content model, so it may contain a simple text string content, or carry a reference to an external description. The use of gml:description to reference an external description has been deprecated and replaced by the gml:descriptionReference property.
/// Element reference "http://www.opengis.net/gml/3.2":description.
    gml__StringOrRefType*                description                    0;	///< Optional element.
/// @brief The value of this property is a remote text description of the object. The xlink:href attribute of the gml:descriptionReference property references the external description.
/// Element reference "http://www.opengis.net/gml/3.2":descriptionReference.
    gml__ReferenceType*                  descriptionReference           0;	///< Optional element.
/// @brief Often, a special identifier is assigned to an object by the maintaining authority with the intention that it is used in references to the object For such cases, the codeSpace shall be provided. That identifier is usually unique either globally or within an application domain. gml:identifier is a pre-defined property for such identifiers.
/// Element reference "http://www.opengis.net/gml/3.2":identifier.
    gml__CodeWithAuthorityType*          identifier                     0;	///< Optional element.
/// @brief The gml:name property provides a label or identifier for the object, commonly a descriptive name. An object may have several names, typically assigned by different authorities. gml:name uses the gml:CodeType content model. The authority for a name is indicated by the value of its (optional) codeSpace attribute. The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace. In common usage there will be one name per authority, so a processing application may select the name from its preferred codeSpace.
/// Vector of gml__CodeType* element refs with length 0..unbounded
    std::vector<gml__CodeType*         > name                           0;
//  END OF GROUP
/// Attribute reference "http://www.opengis.net/gml/3.2":id.
/// @brief The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.
   @xsd__ID                              id                             1;	///< Required attribute.
    END OF INHERITED FROM gml__AbstractGMLType */
/*  INHERITED FROM gml__AbstractTopologyType:
    END OF INHERITED FROM gml__AbstractTopologyType */
/*  INHERITED FROM gml__AbstractTopoPrimitiveType:
    END OF INHERITED FROM gml__AbstractTopoPrimitiveType */
/// Element container of type "http://www.opengis.net/gml/3.2":TopoSolidPropertyType.
    gml__TopoSolidPropertyType*          container                      0;	///< Optional element.
/// @brief A gml:directedNode property element describes the boundary of topology edges and is used in the support of topological point features via the gml:TopoPoint expression, see below. The orientation attribute of type gml:SignType expresses the sense in which the included node is used: start ("-") or end ("+") node.
/// Vector of gml__DirectedNodePropertyType* element refs with length 2..2
    std::vector<gml__DirectedNodePropertyType*> directedNode                   2:2;
/// @brief The gml:directedFace property element describes the boundary of topology solids, in the coBoundary of topology edges and is used in the support of surface features via the gml:TopoSurface expression, see below. The orientation attribute of type gml:SignType expresses the sense in which the included face is used i.e. inward or outward with respect to the surface normal in any geometric realisation.
/// Vector of gml__DirectedFacePropertyType* element refs with length 0..unbounded
    std::vector<gml__DirectedFacePropertyType*> directedFace                   0;
/// @brief This property element either references a curve via the XLink-attributes or contains the curve element. curveProperty is the predefined property which may be used by GML Application Schemas whenever a GML feature has a property with a value that is substitutable for AbstractCurve.
/// Element reference "http://www.opengis.net/gml/3.2":curveProperty.
    gml__CurvePropertyType*              curveProperty                  0;	///< Optional element.
/// Attribute aggregationType of type "http://www.opengis.net/gml/3.2":AggregationType.
   @enum gml__AggregationType*           aggregationType                0;	///< Optional attribute.
};

/// "http://www.opengis.net/gml/3.2":FaceType is a complexType with complexContent extension of "http://www.opengis.net/gml/3.2":AbstractTopoPrimitiveType.
/// class gml__FaceType operations:
/// - soap_new_gml__FaceType(soap*) allocate
/// - soap_new_gml__FaceType(soap*, int num) allocate array
/// - soap_new_req_gml__FaceType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__FaceType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__FaceType(soap*, gml__FaceType*) deserialize from a stream
/// - int soap_write_gml__FaceType(soap, gml__FaceType*) serialize to a stream
class gml__FaceType : public gml__AbstractTopoPrimitiveType
{ public:
/*  INHERITED FROM gml__AbstractGMLType:
/// GROUP <xs:group name="StandardObjectProperties">
/// Vector of gml__MetaDataPropertyType* element refs with length 0..unbounded
    std::vector<gml__MetaDataPropertyType*> metaDataProperty               0;
/// @brief The value of this property is a text description of the object. gml:description uses gml:StringOrRefType as its content model, so it may contain a simple text string content, or carry a reference to an external description. The use of gml:description to reference an external description has been deprecated and replaced by the gml:descriptionReference property.
/// Element reference "http://www.opengis.net/gml/3.2":description.
    gml__StringOrRefType*                description                    0;	///< Optional element.
/// @brief The value of this property is a remote text description of the object. The xlink:href attribute of the gml:descriptionReference property references the external description.
/// Element reference "http://www.opengis.net/gml/3.2":descriptionReference.
    gml__ReferenceType*                  descriptionReference           0;	///< Optional element.
/// @brief Often, a special identifier is assigned to an object by the maintaining authority with the intention that it is used in references to the object For such cases, the codeSpace shall be provided. That identifier is usually unique either globally or within an application domain. gml:identifier is a pre-defined property for such identifiers.
/// Element reference "http://www.opengis.net/gml/3.2":identifier.
    gml__CodeWithAuthorityType*          identifier                     0;	///< Optional element.
/// @brief The gml:name property provides a label or identifier for the object, commonly a descriptive name. An object may have several names, typically assigned by different authorities. gml:name uses the gml:CodeType content model. The authority for a name is indicated by the value of its (optional) codeSpace attribute. The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace. In common usage there will be one name per authority, so a processing application may select the name from its preferred codeSpace.
/// Vector of gml__CodeType* element refs with length 0..unbounded
    std::vector<gml__CodeType*         > name                           0;
//  END OF GROUP
/// Attribute reference "http://www.opengis.net/gml/3.2":id.
/// @brief The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.
   @xsd__ID                              id                             1;	///< Required attribute.
    END OF INHERITED FROM gml__AbstractGMLType */
/*  INHERITED FROM gml__AbstractTopologyType:
    END OF INHERITED FROM gml__AbstractTopologyType */
/*  INHERITED FROM gml__AbstractTopoPrimitiveType:
    END OF INHERITED FROM gml__AbstractTopoPrimitiveType */
/// Vector of gml__NodePropertyType* with length 0..unbounded
    std::vector<gml__NodePropertyType* > isolated                       0;
/// @brief A gml:directedEdge property element describes the boundary of topology faces, the coBoundary of topology nodes and is used in the support of topological line features via the gml:TopoCurve expression, see below. The orientation attribute of type gml:SignType expresses the sense in which the included edge is used, i.e. forward or reverse.
/// Vector of gml__DirectedEdgePropertyType* element refs with length 1..unbounded
    std::vector<gml__DirectedEdgePropertyType*> directedEdge                   1;
/// @brief The gml:directedSolid property element describes the coBoundary of topology faces and is used in the support of volume features via the gml:TopoVolume expression, see below. The orientation attribute of type gml:SignType expresses the sense in which the included solid appears in the face coboundary. In the context of a gml:TopoVolume the orientation attribute has no meaning.
/// Vector of gml__DirectedTopoSolidPropertyType* element refs with length 0..2
    std::vector<gml__DirectedTopoSolidPropertyType*> directedTopoSolid              0:2;
/// @brief This property element either references a surface via the XLink-attributes or contains the surface element. surfaceProperty is the predefined property which may be used by GML Application Schemas whenever a GML feature has a property with a value that is substitutable for AbstractSurface.
/// Element reference "http://www.opengis.net/gml/3.2":surfaceProperty.
    gml__SurfacePropertyType*            surfaceProperty                0;	///< Optional element.
/// @brief If the topological representation exists an unbounded manifold (e.g. Euclidean plane), a gml:Face must indicate whether it is a universal face or not, to ensure a lossless topology representation as defined by Kuijpers, et. al. (see OGC 05-102 Topology IPR). The optional universal attribute of type boolean is used to indicate this. NOTE The universal face is normally not part of any feature, and is used to represent the unbounded portion of the data set. Its interior boundary (it has no exterior boundary) would normally be considered the exterior boundary of the map represented by the data set.
/// Attribute universal of type xs:boolean.
   @bool                                 universal                      0 = false;	///< Default value="false".
/// Attribute aggregationType of type "http://www.opengis.net/gml/3.2":AggregationType.
   @enum gml__AggregationType*           aggregationType                0;	///< Optional attribute.
};

/// "http://www.opengis.net/gml/3.2":TopoSolidType is a complexType with complexContent extension of "http://www.opengis.net/gml/3.2":AbstractTopoPrimitiveType.
/// class gml__TopoSolidType operations:
/// - soap_new_gml__TopoSolidType(soap*) allocate
/// - soap_new_gml__TopoSolidType(soap*, int num) allocate array
/// - soap_new_req_gml__TopoSolidType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__TopoSolidType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__TopoSolidType(soap*, gml__TopoSolidType*) deserialize from a stream
/// - int soap_write_gml__TopoSolidType(soap, gml__TopoSolidType*) serialize to a stream
class gml__TopoSolidType : public gml__AbstractTopoPrimitiveType
{ public:
/*  INHERITED FROM gml__AbstractGMLType:
/// GROUP <xs:group name="StandardObjectProperties">
/// Vector of gml__MetaDataPropertyType* element refs with length 0..unbounded
    std::vector<gml__MetaDataPropertyType*> metaDataProperty               0;
/// @brief The value of this property is a text description of the object. gml:description uses gml:StringOrRefType as its content model, so it may contain a simple text string content, or carry a reference to an external description. The use of gml:description to reference an external description has been deprecated and replaced by the gml:descriptionReference property.
/// Element reference "http://www.opengis.net/gml/3.2":description.
    gml__StringOrRefType*                description                    0;	///< Optional element.
/// @brief The value of this property is a remote text description of the object. The xlink:href attribute of the gml:descriptionReference property references the external description.
/// Element reference "http://www.opengis.net/gml/3.2":descriptionReference.
    gml__ReferenceType*                  descriptionReference           0;	///< Optional element.
/// @brief Often, a special identifier is assigned to an object by the maintaining authority with the intention that it is used in references to the object For such cases, the codeSpace shall be provided. That identifier is usually unique either globally or within an application domain. gml:identifier is a pre-defined property for such identifiers.
/// Element reference "http://www.opengis.net/gml/3.2":identifier.
    gml__CodeWithAuthorityType*          identifier                     0;	///< Optional element.
/// @brief The gml:name property provides a label or identifier for the object, commonly a descriptive name. An object may have several names, typically assigned by different authorities. gml:name uses the gml:CodeType content model. The authority for a name is indicated by the value of its (optional) codeSpace attribute. The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace. In common usage there will be one name per authority, so a processing application may select the name from its preferred codeSpace.
/// Vector of gml__CodeType* element refs with length 0..unbounded
    std::vector<gml__CodeType*         > name                           0;
//  END OF GROUP
/// Attribute reference "http://www.opengis.net/gml/3.2":id.
/// @brief The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.
   @xsd__ID                              id                             1;	///< Required attribute.
    END OF INHERITED FROM gml__AbstractGMLType */
/*  INHERITED FROM gml__AbstractTopologyType:
    END OF INHERITED FROM gml__AbstractTopologyType */
/*  INHERITED FROM gml__AbstractTopoPrimitiveType:
    END OF INHERITED FROM gml__AbstractTopoPrimitiveType */
/// Vector of gml__NodeOrEdgePropertyType* with length 0..unbounded
    std::vector<gml__NodeOrEdgePropertyType*> isolated                       0;
/// @brief The gml:directedFace property element describes the boundary of topology solids, in the coBoundary of topology edges and is used in the support of surface features via the gml:TopoSurface expression, see below. The orientation attribute of type gml:SignType expresses the sense in which the included face is used i.e. inward or outward with respect to the surface normal in any geometric realisation.
/// Vector of gml__DirectedFacePropertyType* element refs with length 1..unbounded
    std::vector<gml__DirectedFacePropertyType*> directedFace                   1;
/// @brief This property element either references a solid via the XLink-attributes or contains the solid element. solidProperty is the predefined property which may be used by GML Application Schemas whenever a GML feature has a property with a value that is substitutable for AbstractSolid.
/// Element reference "http://www.opengis.net/gml/3.2":solidProperty.
    gml__SolidPropertyType*              solidProperty                  0;	///< Optional element.
/// @brief A gml:TopoSolid must indicate whether it is a universal topo-solid or not, to ensure a lossless topology representation as defined by Kuijpers, et. al. (see OGC 05-102 Topology IPR). The optional universal attribute of type boolean is used to indicate this and the default is fault. NOTE The universal topo-solid is normally not part of any feature, and is used to represent the unbounded portion of the data set. Its interior boundary (it has no exterior boundary) would normally be considered the exterior boundary of the data set.
/// Attribute universal of type xs:boolean.
   @bool                                 universal                      0 = false;	///< Default value="false".
/// Attribute aggregationType of type "http://www.opengis.net/gml/3.2":AggregationType.
   @enum gml__AggregationType*           aggregationType                0;	///< Optional attribute.
};

/// "http://www.opengis.net/gml/3.2":MultiGeometryType is a complexType with complexContent extension of "http://www.opengis.net/gml/3.2":AbstractGeometricAggregateType.
/// class gml__MultiGeometryType operations:
/// - soap_new_gml__MultiGeometryType(soap*) allocate
/// - soap_new_gml__MultiGeometryType(soap*, int num) allocate array
/// - soap_new_req_gml__MultiGeometryType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__MultiGeometryType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__MultiGeometryType(soap*, gml__MultiGeometryType*) deserialize from a stream
/// - int soap_write_gml__MultiGeometryType(soap, gml__MultiGeometryType*) serialize to a stream
class gml__MultiGeometryType : public gml__AbstractGeometricAggregateType
{ public:
/*  INHERITED FROM gml__AbstractGMLType:
/// GROUP <xs:group name="StandardObjectProperties">
/// Vector of gml__MetaDataPropertyType* element refs with length 0..unbounded
    std::vector<gml__MetaDataPropertyType*> metaDataProperty               0;
/// @brief The value of this property is a text description of the object. gml:description uses gml:StringOrRefType as its content model, so it may contain a simple text string content, or carry a reference to an external description. The use of gml:description to reference an external description has been deprecated and replaced by the gml:descriptionReference property.
/// Element reference "http://www.opengis.net/gml/3.2":description.
    gml__StringOrRefType*                description                    0;	///< Optional element.
/// @brief The value of this property is a remote text description of the object. The xlink:href attribute of the gml:descriptionReference property references the external description.
/// Element reference "http://www.opengis.net/gml/3.2":descriptionReference.
    gml__ReferenceType*                  descriptionReference           0;	///< Optional element.
/// @brief Often, a special identifier is assigned to an object by the maintaining authority with the intention that it is used in references to the object For such cases, the codeSpace shall be provided. That identifier is usually unique either globally or within an application domain. gml:identifier is a pre-defined property for such identifiers.
/// Element reference "http://www.opengis.net/gml/3.2":identifier.
    gml__CodeWithAuthorityType*          identifier                     0;	///< Optional element.
/// @brief The gml:name property provides a label or identifier for the object, commonly a descriptive name. An object may have several names, typically assigned by different authorities. gml:name uses the gml:CodeType content model. The authority for a name is indicated by the value of its (optional) codeSpace attribute. The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace. In common usage there will be one name per authority, so a processing application may select the name from its preferred codeSpace.
/// Vector of gml__CodeType* element refs with length 0..unbounded
    std::vector<gml__CodeType*         > name                           0;
//  END OF GROUP
/// Attribute reference "http://www.opengis.net/gml/3.2":id.
/// @brief The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.
   @xsd__ID                              id                             1;	///< Required attribute.
    END OF INHERITED FROM gml__AbstractGMLType */
/*  INHERITED FROM gml__AbstractGeometryType:
/// Attribute srsName of type xs:anyURI.
   @xsd__anyURI*                         srsName                        0;	///< Optional attribute.
/// Attribute srsDimension of type xs:positiveInteger.
   @xsd__positiveInteger*                srsDimension                   0;	///< Optional attribute.
/// Attribute axisLabels of type "http://www.opengis.net/gml/3.2":NCNameList.
   @gml__NCNameList*                     axisLabels                     0;	///< Optional attribute.
/// Attribute uomLabels of type "http://www.opengis.net/gml/3.2":NCNameList.
   @gml__NCNameList*                     uomLabels                      0;	///< Optional attribute.
    END OF INHERITED FROM gml__AbstractGeometryType */
/*  INHERITED FROM gml__AbstractGeometricAggregateType:
/// Attribute aggregationType of type "http://www.opengis.net/gml/3.2":AggregationType.
   @enum gml__AggregationType*           aggregationType                0;	///< Optional attribute.
    END OF INHERITED FROM gml__AbstractGeometricAggregateType */
/// @brief This property element either references a geometry element via the XLink-attributes or contains the geometry element.
/// Vector of gml__GeometryPropertyType* element refs with length 0..unbounded
    std::vector<gml__GeometryPropertyType*> geometryMember                 0;
/// @brief This property element contains a list of geometry elements. The order of the elements is significant and shall be preserved when processing the array.
/// Element reference "http://www.opengis.net/gml/3.2":geometryMembers.
    gml__GeometryArrayPropertyType*      geometryMembers                0;	///< Optional element.
};

/// "http://www.opengis.net/gml/3.2":MultiPointType is a complexType with complexContent extension of "http://www.opengis.net/gml/3.2":AbstractGeometricAggregateType.
/// class gml__MultiPointType operations:
/// - soap_new_gml__MultiPointType(soap*) allocate
/// - soap_new_gml__MultiPointType(soap*, int num) allocate array
/// - soap_new_req_gml__MultiPointType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__MultiPointType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__MultiPointType(soap*, gml__MultiPointType*) deserialize from a stream
/// - int soap_write_gml__MultiPointType(soap, gml__MultiPointType*) serialize to a stream
class gml__MultiPointType : public gml__AbstractGeometricAggregateType
{ public:
/*  INHERITED FROM gml__AbstractGMLType:
/// GROUP <xs:group name="StandardObjectProperties">
/// Vector of gml__MetaDataPropertyType* element refs with length 0..unbounded
    std::vector<gml__MetaDataPropertyType*> metaDataProperty               0;
/// @brief The value of this property is a text description of the object. gml:description uses gml:StringOrRefType as its content model, so it may contain a simple text string content, or carry a reference to an external description. The use of gml:description to reference an external description has been deprecated and replaced by the gml:descriptionReference property.
/// Element reference "http://www.opengis.net/gml/3.2":description.
    gml__StringOrRefType*                description                    0;	///< Optional element.
/// @brief The value of this property is a remote text description of the object. The xlink:href attribute of the gml:descriptionReference property references the external description.
/// Element reference "http://www.opengis.net/gml/3.2":descriptionReference.
    gml__ReferenceType*                  descriptionReference           0;	///< Optional element.
/// @brief Often, a special identifier is assigned to an object by the maintaining authority with the intention that it is used in references to the object For such cases, the codeSpace shall be provided. That identifier is usually unique either globally or within an application domain. gml:identifier is a pre-defined property for such identifiers.
/// Element reference "http://www.opengis.net/gml/3.2":identifier.
    gml__CodeWithAuthorityType*          identifier                     0;	///< Optional element.
/// @brief The gml:name property provides a label or identifier for the object, commonly a descriptive name. An object may have several names, typically assigned by different authorities. gml:name uses the gml:CodeType content model. The authority for a name is indicated by the value of its (optional) codeSpace attribute. The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace. In common usage there will be one name per authority, so a processing application may select the name from its preferred codeSpace.
/// Vector of gml__CodeType* element refs with length 0..unbounded
    std::vector<gml__CodeType*         > name                           0;
//  END OF GROUP
/// Attribute reference "http://www.opengis.net/gml/3.2":id.
/// @brief The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.
   @xsd__ID                              id                             1;	///< Required attribute.
    END OF INHERITED FROM gml__AbstractGMLType */
/*  INHERITED FROM gml__AbstractGeometryType:
/// Attribute srsName of type xs:anyURI.
   @xsd__anyURI*                         srsName                        0;	///< Optional attribute.
/// Attribute srsDimension of type xs:positiveInteger.
   @xsd__positiveInteger*                srsDimension                   0;	///< Optional attribute.
/// Attribute axisLabels of type "http://www.opengis.net/gml/3.2":NCNameList.
   @gml__NCNameList*                     axisLabels                     0;	///< Optional attribute.
/// Attribute uomLabels of type "http://www.opengis.net/gml/3.2":NCNameList.
   @gml__NCNameList*                     uomLabels                      0;	///< Optional attribute.
    END OF INHERITED FROM gml__AbstractGeometryType */
/*  INHERITED FROM gml__AbstractGeometricAggregateType:
/// Attribute aggregationType of type "http://www.opengis.net/gml/3.2":AggregationType.
   @enum gml__AggregationType*           aggregationType                0;	///< Optional attribute.
    END OF INHERITED FROM gml__AbstractGeometricAggregateType */
/// @brief This property element either references a Point via the XLink-attributes or contains the Point element.
/// Vector of gml__PointPropertyType* element refs with length 0..unbounded
    std::vector<gml__PointPropertyType*> pointMember                    0;
/// @brief This property element contains a list of points. The order of the elements is significant and shall be preserved when processing the array.
/// Element reference "http://www.opengis.net/gml/3.2":pointMembers.
    gml__PointArrayPropertyType*         pointMembers                   0;	///< Optional element.
};

/// "http://www.opengis.net/gml/3.2":MultiCurveType is a complexType with complexContent extension of "http://www.opengis.net/gml/3.2":AbstractGeometricAggregateType.
/// class gml__MultiCurveType operations:
/// - soap_new_gml__MultiCurveType(soap*) allocate
/// - soap_new_gml__MultiCurveType(soap*, int num) allocate array
/// - soap_new_req_gml__MultiCurveType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__MultiCurveType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__MultiCurveType(soap*, gml__MultiCurveType*) deserialize from a stream
/// - int soap_write_gml__MultiCurveType(soap, gml__MultiCurveType*) serialize to a stream
class gml__MultiCurveType : public gml__AbstractGeometricAggregateType
{ public:
/*  INHERITED FROM gml__AbstractGMLType:
/// GROUP <xs:group name="StandardObjectProperties">
/// Vector of gml__MetaDataPropertyType* element refs with length 0..unbounded
    std::vector<gml__MetaDataPropertyType*> metaDataProperty               0;
/// @brief The value of this property is a text description of the object. gml:description uses gml:StringOrRefType as its content model, so it may contain a simple text string content, or carry a reference to an external description. The use of gml:description to reference an external description has been deprecated and replaced by the gml:descriptionReference property.
/// Element reference "http://www.opengis.net/gml/3.2":description.
    gml__StringOrRefType*                description                    0;	///< Optional element.
/// @brief The value of this property is a remote text description of the object. The xlink:href attribute of the gml:descriptionReference property references the external description.
/// Element reference "http://www.opengis.net/gml/3.2":descriptionReference.
    gml__ReferenceType*                  descriptionReference           0;	///< Optional element.
/// @brief Often, a special identifier is assigned to an object by the maintaining authority with the intention that it is used in references to the object For such cases, the codeSpace shall be provided. That identifier is usually unique either globally or within an application domain. gml:identifier is a pre-defined property for such identifiers.
/// Element reference "http://www.opengis.net/gml/3.2":identifier.
    gml__CodeWithAuthorityType*          identifier                     0;	///< Optional element.
/// @brief The gml:name property provides a label or identifier for the object, commonly a descriptive name. An object may have several names, typically assigned by different authorities. gml:name uses the gml:CodeType content model. The authority for a name is indicated by the value of its (optional) codeSpace attribute. The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace. In common usage there will be one name per authority, so a processing application may select the name from its preferred codeSpace.
/// Vector of gml__CodeType* element refs with length 0..unbounded
    std::vector<gml__CodeType*         > name                           0;
//  END OF GROUP
/// Attribute reference "http://www.opengis.net/gml/3.2":id.
/// @brief The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.
   @xsd__ID                              id                             1;	///< Required attribute.
    END OF INHERITED FROM gml__AbstractGMLType */
/*  INHERITED FROM gml__AbstractGeometryType:
/// Attribute srsName of type xs:anyURI.
   @xsd__anyURI*                         srsName                        0;	///< Optional attribute.
/// Attribute srsDimension of type xs:positiveInteger.
   @xsd__positiveInteger*                srsDimension                   0;	///< Optional attribute.
/// Attribute axisLabels of type "http://www.opengis.net/gml/3.2":NCNameList.
   @gml__NCNameList*                     axisLabels                     0;	///< Optional attribute.
/// Attribute uomLabels of type "http://www.opengis.net/gml/3.2":NCNameList.
   @gml__NCNameList*                     uomLabels                      0;	///< Optional attribute.
    END OF INHERITED FROM gml__AbstractGeometryType */
/*  INHERITED FROM gml__AbstractGeometricAggregateType:
/// Attribute aggregationType of type "http://www.opengis.net/gml/3.2":AggregationType.
   @enum gml__AggregationType*           aggregationType                0;	///< Optional attribute.
    END OF INHERITED FROM gml__AbstractGeometricAggregateType */
/// Vector of gml__CurvePropertyType* element refs with length 0..unbounded
    std::vector<gml__CurvePropertyType*> curveMember                    0;
/// @brief This property element contains a list of curves. The order of the elements is significant and shall be preserved when processing the array.
/// Element reference "http://www.opengis.net/gml/3.2":curveMembers.
    gml__CurveArrayPropertyType*         curveMembers                   0;	///< Optional element.
};

/// "http://www.opengis.net/gml/3.2":MultiSurfaceType is a complexType with complexContent extension of "http://www.opengis.net/gml/3.2":AbstractGeometricAggregateType.
/// class gml__MultiSurfaceType operations:
/// - soap_new_gml__MultiSurfaceType(soap*) allocate
/// - soap_new_gml__MultiSurfaceType(soap*, int num) allocate array
/// - soap_new_req_gml__MultiSurfaceType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__MultiSurfaceType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__MultiSurfaceType(soap*, gml__MultiSurfaceType*) deserialize from a stream
/// - int soap_write_gml__MultiSurfaceType(soap, gml__MultiSurfaceType*) serialize to a stream
class gml__MultiSurfaceType : public gml__AbstractGeometricAggregateType
{ public:
/*  INHERITED FROM gml__AbstractGMLType:
/// GROUP <xs:group name="StandardObjectProperties">
/// Vector of gml__MetaDataPropertyType* element refs with length 0..unbounded
    std::vector<gml__MetaDataPropertyType*> metaDataProperty               0;
/// @brief The value of this property is a text description of the object. gml:description uses gml:StringOrRefType as its content model, so it may contain a simple text string content, or carry a reference to an external description. The use of gml:description to reference an external description has been deprecated and replaced by the gml:descriptionReference property.
/// Element reference "http://www.opengis.net/gml/3.2":description.
    gml__StringOrRefType*                description                    0;	///< Optional element.
/// @brief The value of this property is a remote text description of the object. The xlink:href attribute of the gml:descriptionReference property references the external description.
/// Element reference "http://www.opengis.net/gml/3.2":descriptionReference.
    gml__ReferenceType*                  descriptionReference           0;	///< Optional element.
/// @brief Often, a special identifier is assigned to an object by the maintaining authority with the intention that it is used in references to the object For such cases, the codeSpace shall be provided. That identifier is usually unique either globally or within an application domain. gml:identifier is a pre-defined property for such identifiers.
/// Element reference "http://www.opengis.net/gml/3.2":identifier.
    gml__CodeWithAuthorityType*          identifier                     0;	///< Optional element.
/// @brief The gml:name property provides a label or identifier for the object, commonly a descriptive name. An object may have several names, typically assigned by different authorities. gml:name uses the gml:CodeType content model. The authority for a name is indicated by the value of its (optional) codeSpace attribute. The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace. In common usage there will be one name per authority, so a processing application may select the name from its preferred codeSpace.
/// Vector of gml__CodeType* element refs with length 0..unbounded
    std::vector<gml__CodeType*         > name                           0;
//  END OF GROUP
/// Attribute reference "http://www.opengis.net/gml/3.2":id.
/// @brief The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.
   @xsd__ID                              id                             1;	///< Required attribute.
    END OF INHERITED FROM gml__AbstractGMLType */
/*  INHERITED FROM gml__AbstractGeometryType:
/// Attribute srsName of type xs:anyURI.
   @xsd__anyURI*                         srsName                        0;	///< Optional attribute.
/// Attribute srsDimension of type xs:positiveInteger.
   @xsd__positiveInteger*                srsDimension                   0;	///< Optional attribute.
/// Attribute axisLabels of type "http://www.opengis.net/gml/3.2":NCNameList.
   @gml__NCNameList*                     axisLabels                     0;	///< Optional attribute.
/// Attribute uomLabels of type "http://www.opengis.net/gml/3.2":NCNameList.
   @gml__NCNameList*                     uomLabels                      0;	///< Optional attribute.
    END OF INHERITED FROM gml__AbstractGeometryType */
/*  INHERITED FROM gml__AbstractGeometricAggregateType:
/// Attribute aggregationType of type "http://www.opengis.net/gml/3.2":AggregationType.
   @enum gml__AggregationType*           aggregationType                0;	///< Optional attribute.
    END OF INHERITED FROM gml__AbstractGeometricAggregateType */
/// @brief This property element either references a surface via the XLink-attributes or contains the surface element. A surface element is any element, which is substitutable for gml:AbstractSurface.
/// Vector of gml__SurfacePropertyType* element refs with length 0..unbounded
    std::vector<gml__SurfacePropertyType*> surfaceMember                  0;
/// @brief This property element contains a list of surfaces. The order of the elements is significant and shall be preserved when processing the array.
/// Element reference "http://www.opengis.net/gml/3.2":surfaceMembers.
    gml__SurfaceArrayPropertyType*       surfaceMembers                 0;	///< Optional element.
};

/// "http://www.opengis.net/gml/3.2":MultiSolidType is a complexType with complexContent extension of "http://www.opengis.net/gml/3.2":AbstractGeometricAggregateType.
/// class gml__MultiSolidType operations:
/// - soap_new_gml__MultiSolidType(soap*) allocate
/// - soap_new_gml__MultiSolidType(soap*, int num) allocate array
/// - soap_new_req_gml__MultiSolidType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__MultiSolidType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__MultiSolidType(soap*, gml__MultiSolidType*) deserialize from a stream
/// - int soap_write_gml__MultiSolidType(soap, gml__MultiSolidType*) serialize to a stream
class gml__MultiSolidType : public gml__AbstractGeometricAggregateType
{ public:
/*  INHERITED FROM gml__AbstractGMLType:
/// GROUP <xs:group name="StandardObjectProperties">
/// Vector of gml__MetaDataPropertyType* element refs with length 0..unbounded
    std::vector<gml__MetaDataPropertyType*> metaDataProperty               0;
/// @brief The value of this property is a text description of the object. gml:description uses gml:StringOrRefType as its content model, so it may contain a simple text string content, or carry a reference to an external description. The use of gml:description to reference an external description has been deprecated and replaced by the gml:descriptionReference property.
/// Element reference "http://www.opengis.net/gml/3.2":description.
    gml__StringOrRefType*                description                    0;	///< Optional element.
/// @brief The value of this property is a remote text description of the object. The xlink:href attribute of the gml:descriptionReference property references the external description.
/// Element reference "http://www.opengis.net/gml/3.2":descriptionReference.
    gml__ReferenceType*                  descriptionReference           0;	///< Optional element.
/// @brief Often, a special identifier is assigned to an object by the maintaining authority with the intention that it is used in references to the object For such cases, the codeSpace shall be provided. That identifier is usually unique either globally or within an application domain. gml:identifier is a pre-defined property for such identifiers.
/// Element reference "http://www.opengis.net/gml/3.2":identifier.
    gml__CodeWithAuthorityType*          identifier                     0;	///< Optional element.
/// @brief The gml:name property provides a label or identifier for the object, commonly a descriptive name. An object may have several names, typically assigned by different authorities. gml:name uses the gml:CodeType content model. The authority for a name is indicated by the value of its (optional) codeSpace attribute. The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace. In common usage there will be one name per authority, so a processing application may select the name from its preferred codeSpace.
/// Vector of gml__CodeType* element refs with length 0..unbounded
    std::vector<gml__CodeType*         > name                           0;
//  END OF GROUP
/// Attribute reference "http://www.opengis.net/gml/3.2":id.
/// @brief The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.
   @xsd__ID                              id                             1;	///< Required attribute.
    END OF INHERITED FROM gml__AbstractGMLType */
/*  INHERITED FROM gml__AbstractGeometryType:
/// Attribute srsName of type xs:anyURI.
   @xsd__anyURI*                         srsName                        0;	///< Optional attribute.
/// Attribute srsDimension of type xs:positiveInteger.
   @xsd__positiveInteger*                srsDimension                   0;	///< Optional attribute.
/// Attribute axisLabels of type "http://www.opengis.net/gml/3.2":NCNameList.
   @gml__NCNameList*                     axisLabels                     0;	///< Optional attribute.
/// Attribute uomLabels of type "http://www.opengis.net/gml/3.2":NCNameList.
   @gml__NCNameList*                     uomLabels                      0;	///< Optional attribute.
    END OF INHERITED FROM gml__AbstractGeometryType */
/*  INHERITED FROM gml__AbstractGeometricAggregateType:
/// Attribute aggregationType of type "http://www.opengis.net/gml/3.2":AggregationType.
   @enum gml__AggregationType*           aggregationType                0;	///< Optional attribute.
    END OF INHERITED FROM gml__AbstractGeometricAggregateType */
/// @brief This property element either references a solid via the XLink-attributes or contains the solid element. A solid element is any element, which is substitutable for gml:AbstractSolid.
/// Vector of gml__SolidPropertyType* element refs with length 0..unbounded
    std::vector<gml__SolidPropertyType*> solidMember                    0;
/// @brief This property element contains a list of solids. The order of the elements is significant and shall be preserved when processing the array.
/// Element reference "http://www.opengis.net/gml/3.2":solidMembers.
    gml__SolidArrayPropertyType*         solidMembers                   0;	///< Optional element.
};

/// "http://www.opengis.net/gml/3.2":CircleType is a complexType with complexContent extension of "http://www.opengis.net/gml/3.2":ArcType.
/// class gml__CircleType operations:
/// - soap_new_gml__CircleType(soap*) allocate
/// - soap_new_gml__CircleType(soap*, int num) allocate array
/// - soap_new_req_gml__CircleType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__CircleType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__CircleType(soap*, gml__CircleType*) deserialize from a stream
/// - int soap_write_gml__CircleType(soap, gml__CircleType*) serialize to a stream
class gml__CircleType : public gml__ArcType
{ public:
/*  INHERITED FROM gml__ArcType:
    END OF INHERITED FROM gml__ArcType */
};

/// "http://www.opengis.net/gml/3.2":ConeType is a complexType with complexContent extension of "http://www.opengis.net/gml/3.2":AbstractGriddedSurfaceType.
/// class gml__ConeType operations:
/// - soap_new_gml__ConeType(soap*) allocate
/// - soap_new_gml__ConeType(soap*, int num) allocate array
/// - soap_new_req_gml__ConeType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__ConeType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__ConeType(soap*, gml__ConeType*) deserialize from a stream
/// - int soap_write_gml__ConeType(soap, gml__ConeType*) serialize to a stream
class gml__ConeType : public gml__AbstractGriddedSurfaceType
{ public:
/*  INHERITED FROM gml__AbstractSurfacePatchType:
    END OF INHERITED FROM gml__AbstractSurfacePatchType */
/*  INHERITED FROM gml__AbstractParametricCurveSurfaceType:
/// Attribute aggregationType of type "http://www.opengis.net/gml/3.2":AggregationType.
   @enum gml__AggregationType*           aggregationType                0;	///< Optional attribute.
    END OF INHERITED FROM gml__AbstractParametricCurveSurfaceType */
/*  INHERITED FROM gml__AbstractGriddedSurfaceType:
/// GROUP <xs:group name="PointGrid">
/// @brief A gml:PointGrid group contains or references points or positions which are organised into sequences or grids. All rows shall have the same number of positions (columns).
/// class _gml__ConeType_rows operations:
/// - soap_new__gml__ConeType_rows(soap*) allocate
/// - soap_new__gml__ConeType_rows(soap*, int num) allocate array
/// - soap_new_req__gml__ConeType_rows(soap*, ...) allocate, set required members
/// - soap_new_set__gml__ConeType_rows(soap*, ...) allocate, set all public members
/// - int soap_read__gml__ConeType_rows(soap*, _gml__ConeType_rows*) deserialize from a stream
/// - int soap_write__gml__ConeType_rows(soap, _gml__ConeType_rows*) serialize to a stream
    class _gml__ConeType_rows
    {
/// Vector of Row with length 1..unbounded
    std::vector<
/// class _gml__ConeType_rows_Row operations:
/// - soap_new__gml__ConeType_rows_Row(soap*) allocate
/// - soap_new__gml__ConeType_rows_Row(soap*, int num) allocate array
/// - soap_new_req__gml__ConeType_rows_Row(soap*, ...) allocate, set required members
/// - soap_new_set__gml__ConeType_rows_Row(soap*, ...) allocate, set all public members
/// - int soap_read__gml__ConeType_rows_Row(soap*, _gml__ConeType_rows_Row*) deserialize from a stream
/// - int soap_write__gml__ConeType_rows_Row(soap, _gml__ConeType_rows_Row*) serialize to a stream
    class _gml__ConeType_rows_Row
    {
    }>                                   Row                            1;
    }                                    rows                           1;	///< Required element.
//  END OF GROUP
/// Attribute rows of type xs:integer.
   @long*                                rows                           0;	///< Optional attribute.
/// Attribute columns of type xs:integer.
   @long*                                columns                        0;	///< Optional attribute.
    END OF INHERITED FROM gml__AbstractGriddedSurfaceType */
/// Attribute horizontalCurveType of type "http://www.opengis.net/gml/3.2":CurveInterpolationType.
   @enum gml__CurveInterpolationType*    horizontalCurveType            0;	///< Fixed optional value="circularArc3Points".
/// Attribute verticalCurveType of type "http://www.opengis.net/gml/3.2":CurveInterpolationType.
   @enum gml__CurveInterpolationType*    verticalCurveType              0;	///< Fixed optional value="linear".
};

/// "http://www.opengis.net/gml/3.2":CylinderType is a complexType with complexContent extension of "http://www.opengis.net/gml/3.2":AbstractGriddedSurfaceType.
/// class gml__CylinderType operations:
/// - soap_new_gml__CylinderType(soap*) allocate
/// - soap_new_gml__CylinderType(soap*, int num) allocate array
/// - soap_new_req_gml__CylinderType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__CylinderType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__CylinderType(soap*, gml__CylinderType*) deserialize from a stream
/// - int soap_write_gml__CylinderType(soap, gml__CylinderType*) serialize to a stream
class gml__CylinderType : public gml__AbstractGriddedSurfaceType
{ public:
/*  INHERITED FROM gml__AbstractSurfacePatchType:
    END OF INHERITED FROM gml__AbstractSurfacePatchType */
/*  INHERITED FROM gml__AbstractParametricCurveSurfaceType:
/// Attribute aggregationType of type "http://www.opengis.net/gml/3.2":AggregationType.
   @enum gml__AggregationType*           aggregationType                0;	///< Optional attribute.
    END OF INHERITED FROM gml__AbstractParametricCurveSurfaceType */
/*  INHERITED FROM gml__AbstractGriddedSurfaceType:
/// GROUP <xs:group name="PointGrid">
/// @brief A gml:PointGrid group contains or references points or positions which are organised into sequences or grids. All rows shall have the same number of positions (columns).
/// class _gml__CylinderType_rows operations:
/// - soap_new__gml__CylinderType_rows(soap*) allocate
/// - soap_new__gml__CylinderType_rows(soap*, int num) allocate array
/// - soap_new_req__gml__CylinderType_rows(soap*, ...) allocate, set required members
/// - soap_new_set__gml__CylinderType_rows(soap*, ...) allocate, set all public members
/// - int soap_read__gml__CylinderType_rows(soap*, _gml__CylinderType_rows*) deserialize from a stream
/// - int soap_write__gml__CylinderType_rows(soap, _gml__CylinderType_rows*) serialize to a stream
    class _gml__CylinderType_rows
    {
/// Vector of Row with length 1..unbounded
    std::vector<
/// class _gml__CylinderType_rows_Row operations:
/// - soap_new__gml__CylinderType_rows_Row(soap*) allocate
/// - soap_new__gml__CylinderType_rows_Row(soap*, int num) allocate array
/// - soap_new_req__gml__CylinderType_rows_Row(soap*, ...) allocate, set required members
/// - soap_new_set__gml__CylinderType_rows_Row(soap*, ...) allocate, set all public members
/// - int soap_read__gml__CylinderType_rows_Row(soap*, _gml__CylinderType_rows_Row*) deserialize from a stream
/// - int soap_write__gml__CylinderType_rows_Row(soap, _gml__CylinderType_rows_Row*) serialize to a stream
    class _gml__CylinderType_rows_Row
    {
    }>                                   Row                            1;
    }                                    rows                           1;	///< Required element.
//  END OF GROUP
/// Attribute rows of type xs:integer.
   @long*                                rows                           0;	///< Optional attribute.
/// Attribute columns of type xs:integer.
   @long*                                columns                        0;	///< Optional attribute.
    END OF INHERITED FROM gml__AbstractGriddedSurfaceType */
/// Attribute horizontalCurveType of type "http://www.opengis.net/gml/3.2":CurveInterpolationType.
   @enum gml__CurveInterpolationType*    horizontalCurveType            0;	///< Fixed optional value="circularArc3Points".
/// Attribute verticalCurveType of type "http://www.opengis.net/gml/3.2":CurveInterpolationType.
   @enum gml__CurveInterpolationType*    verticalCurveType              0;	///< Fixed optional value="linear".
};

/// "http://www.opengis.net/gml/3.2":SphereType is a complexType with complexContent extension of "http://www.opengis.net/gml/3.2":AbstractGriddedSurfaceType.
/// class gml__SphereType operations:
/// - soap_new_gml__SphereType(soap*) allocate
/// - soap_new_gml__SphereType(soap*, int num) allocate array
/// - soap_new_req_gml__SphereType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__SphereType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__SphereType(soap*, gml__SphereType*) deserialize from a stream
/// - int soap_write_gml__SphereType(soap, gml__SphereType*) serialize to a stream
class gml__SphereType : public gml__AbstractGriddedSurfaceType
{ public:
/*  INHERITED FROM gml__AbstractSurfacePatchType:
    END OF INHERITED FROM gml__AbstractSurfacePatchType */
/*  INHERITED FROM gml__AbstractParametricCurveSurfaceType:
/// Attribute aggregationType of type "http://www.opengis.net/gml/3.2":AggregationType.
   @enum gml__AggregationType*           aggregationType                0;	///< Optional attribute.
    END OF INHERITED FROM gml__AbstractParametricCurveSurfaceType */
/*  INHERITED FROM gml__AbstractGriddedSurfaceType:
/// GROUP <xs:group name="PointGrid">
/// @brief A gml:PointGrid group contains or references points or positions which are organised into sequences or grids. All rows shall have the same number of positions (columns).
/// class _gml__SphereType_rows operations:
/// - soap_new__gml__SphereType_rows(soap*) allocate
/// - soap_new__gml__SphereType_rows(soap*, int num) allocate array
/// - soap_new_req__gml__SphereType_rows(soap*, ...) allocate, set required members
/// - soap_new_set__gml__SphereType_rows(soap*, ...) allocate, set all public members
/// - int soap_read__gml__SphereType_rows(soap*, _gml__SphereType_rows*) deserialize from a stream
/// - int soap_write__gml__SphereType_rows(soap, _gml__SphereType_rows*) serialize to a stream
    class _gml__SphereType_rows
    {
/// Vector of Row with length 1..unbounded
    std::vector<
/// class _gml__SphereType_rows_Row operations:
/// - soap_new__gml__SphereType_rows_Row(soap*) allocate
/// - soap_new__gml__SphereType_rows_Row(soap*, int num) allocate array
/// - soap_new_req__gml__SphereType_rows_Row(soap*, ...) allocate, set required members
/// - soap_new_set__gml__SphereType_rows_Row(soap*, ...) allocate, set all public members
/// - int soap_read__gml__SphereType_rows_Row(soap*, _gml__SphereType_rows_Row*) deserialize from a stream
/// - int soap_write__gml__SphereType_rows_Row(soap, _gml__SphereType_rows_Row*) serialize to a stream
    class _gml__SphereType_rows_Row
    {
    }>                                   Row                            1;
    }                                    rows                           1;	///< Required element.
//  END OF GROUP
/// Attribute rows of type xs:integer.
   @long*                                rows                           0;	///< Optional attribute.
/// Attribute columns of type xs:integer.
   @long*                                columns                        0;	///< Optional attribute.
    END OF INHERITED FROM gml__AbstractGriddedSurfaceType */
/// Attribute horizontalCurveType of type "http://www.opengis.net/gml/3.2":CurveInterpolationType.
   @enum gml__CurveInterpolationType*    horizontalCurveType            0;	///< Fixed optional value="circularArc3Points".
/// Attribute verticalCurveType of type "http://www.opengis.net/gml/3.2":CurveInterpolationType.
   @enum gml__CurveInterpolationType*    verticalCurveType              0;	///< Fixed optional value="circularArc3Points".
};

/// "http://www.opengis.net/gml/3.2":AbstractSolidType is a complexType with complexContent extension of "http://www.opengis.net/gml/3.2":AbstractGeometricPrimitiveType.
/// @brief gml:AbstractSolidType is an abstraction of a solid to support the different levels of complexity. The solid may always be viewed as a geometric primitive, i.e. is contiguous.
/// class gml__AbstractSolidType operations:
/// - soap_new_gml__AbstractSolidType(soap*) allocate
/// - soap_new_gml__AbstractSolidType(soap*, int num) allocate array
/// - soap_new_req_gml__AbstractSolidType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__AbstractSolidType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__AbstractSolidType(soap*, gml__AbstractSolidType*) deserialize from a stream
/// - int soap_write_gml__AbstractSolidType(soap, gml__AbstractSolidType*) serialize to a stream
class gml__AbstractSolidType : public gml__AbstractGeometricPrimitiveType
{ public:
/*  INHERITED FROM gml__AbstractGMLType:
/// GROUP <xs:group name="StandardObjectProperties">
/// Vector of gml__MetaDataPropertyType* element refs with length 0..unbounded
    std::vector<gml__MetaDataPropertyType*> metaDataProperty               0;
/// @brief The value of this property is a text description of the object. gml:description uses gml:StringOrRefType as its content model, so it may contain a simple text string content, or carry a reference to an external description. The use of gml:description to reference an external description has been deprecated and replaced by the gml:descriptionReference property.
/// Element reference "http://www.opengis.net/gml/3.2":description.
    gml__StringOrRefType*                description                    0;	///< Optional element.
/// @brief The value of this property is a remote text description of the object. The xlink:href attribute of the gml:descriptionReference property references the external description.
/// Element reference "http://www.opengis.net/gml/3.2":descriptionReference.
    gml__ReferenceType*                  descriptionReference           0;	///< Optional element.
/// @brief Often, a special identifier is assigned to an object by the maintaining authority with the intention that it is used in references to the object For such cases, the codeSpace shall be provided. That identifier is usually unique either globally or within an application domain. gml:identifier is a pre-defined property for such identifiers.
/// Element reference "http://www.opengis.net/gml/3.2":identifier.
    gml__CodeWithAuthorityType*          identifier                     0;	///< Optional element.
/// @brief The gml:name property provides a label or identifier for the object, commonly a descriptive name. An object may have several names, typically assigned by different authorities. gml:name uses the gml:CodeType content model. The authority for a name is indicated by the value of its (optional) codeSpace attribute. The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace. In common usage there will be one name per authority, so a processing application may select the name from its preferred codeSpace.
/// Vector of gml__CodeType* element refs with length 0..unbounded
    std::vector<gml__CodeType*         > name                           0;
//  END OF GROUP
/// Attribute reference "http://www.opengis.net/gml/3.2":id.
/// @brief The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.
   @xsd__ID                              id                             1;	///< Required attribute.
    END OF INHERITED FROM gml__AbstractGMLType */
/*  INHERITED FROM gml__AbstractGeometryType:
/// Attribute srsName of type xs:anyURI.
   @xsd__anyURI*                         srsName                        0;	///< Optional attribute.
/// Attribute srsDimension of type xs:positiveInteger.
   @xsd__positiveInteger*                srsDimension                   0;	///< Optional attribute.
/// Attribute axisLabels of type "http://www.opengis.net/gml/3.2":NCNameList.
   @gml__NCNameList*                     axisLabels                     0;	///< Optional attribute.
/// Attribute uomLabels of type "http://www.opengis.net/gml/3.2":NCNameList.
   @gml__NCNameList*                     uomLabels                      0;	///< Optional attribute.
    END OF INHERITED FROM gml__AbstractGeometryType */
/*  INHERITED FROM gml__AbstractGeometricPrimitiveType:
    END OF INHERITED FROM gml__AbstractGeometricPrimitiveType */
};

/// "http://www.opengis.net/gml/3.2":AbstractSurfaceType is an abstract complexType with complexContent extension of "http://www.opengis.net/gml/3.2":AbstractGeometricPrimitiveType.
/// @brief gml:AbstractSurfaceType is an abstraction of a surface to support the different levels of complexity. A surface is always a continuous region of a plane.
/// class gml__AbstractSurfaceType operations:
/// - soap_new_gml__AbstractSurfaceType(soap*) allocate
/// - soap_new_gml__AbstractSurfaceType(soap*, int num) allocate array
/// - soap_new_req_gml__AbstractSurfaceType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__AbstractSurfaceType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__AbstractSurfaceType(soap*, gml__AbstractSurfaceType*) deserialize from a stream
/// - int soap_write_gml__AbstractSurfaceType(soap, gml__AbstractSurfaceType*) serialize to a stream
class gml__AbstractSurfaceType : public gml__AbstractGeometricPrimitiveType
{ public:
/*  INHERITED FROM gml__AbstractGMLType:
/// GROUP <xs:group name="StandardObjectProperties">
/// Vector of gml__MetaDataPropertyType* element refs with length 0..unbounded
    std::vector<gml__MetaDataPropertyType*> metaDataProperty               0;
/// @brief The value of this property is a text description of the object. gml:description uses gml:StringOrRefType as its content model, so it may contain a simple text string content, or carry a reference to an external description. The use of gml:description to reference an external description has been deprecated and replaced by the gml:descriptionReference property.
/// Element reference "http://www.opengis.net/gml/3.2":description.
    gml__StringOrRefType*                description                    0;	///< Optional element.
/// @brief The value of this property is a remote text description of the object. The xlink:href attribute of the gml:descriptionReference property references the external description.
/// Element reference "http://www.opengis.net/gml/3.2":descriptionReference.
    gml__ReferenceType*                  descriptionReference           0;	///< Optional element.
/// @brief Often, a special identifier is assigned to an object by the maintaining authority with the intention that it is used in references to the object For such cases, the codeSpace shall be provided. That identifier is usually unique either globally or within an application domain. gml:identifier is a pre-defined property for such identifiers.
/// Element reference "http://www.opengis.net/gml/3.2":identifier.
    gml__CodeWithAuthorityType*          identifier                     0;	///< Optional element.
/// @brief The gml:name property provides a label or identifier for the object, commonly a descriptive name. An object may have several names, typically assigned by different authorities. gml:name uses the gml:CodeType content model. The authority for a name is indicated by the value of its (optional) codeSpace attribute. The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace. In common usage there will be one name per authority, so a processing application may select the name from its preferred codeSpace.
/// Vector of gml__CodeType* element refs with length 0..unbounded
    std::vector<gml__CodeType*         > name                           0;
//  END OF GROUP
/// Attribute reference "http://www.opengis.net/gml/3.2":id.
/// @brief The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.
   @xsd__ID                              id                             1;	///< Required attribute.
    END OF INHERITED FROM gml__AbstractGMLType */
/*  INHERITED FROM gml__AbstractGeometryType:
/// Attribute srsName of type xs:anyURI.
   @xsd__anyURI*                         srsName                        0;	///< Optional attribute.
/// Attribute srsDimension of type xs:positiveInteger.
   @xsd__positiveInteger*                srsDimension                   0;	///< Optional attribute.
/// Attribute axisLabels of type "http://www.opengis.net/gml/3.2":NCNameList.
   @gml__NCNameList*                     axisLabels                     0;	///< Optional attribute.
/// Attribute uomLabels of type "http://www.opengis.net/gml/3.2":NCNameList.
   @gml__NCNameList*                     uomLabels                      0;	///< Optional attribute.
    END OF INHERITED FROM gml__AbstractGeometryType */
/*  INHERITED FROM gml__AbstractGeometricPrimitiveType:
    END OF INHERITED FROM gml__AbstractGeometricPrimitiveType */
};

/// "http://www.opengis.net/gml/3.2":PointType is a complexType with complexContent extension of "http://www.opengis.net/gml/3.2":AbstractGeometricPrimitiveType.
/// class gml__PointType operations:
/// - soap_new_gml__PointType(soap*) allocate
/// - soap_new_gml__PointType(soap*, int num) allocate array
/// - soap_new_req_gml__PointType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__PointType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__PointType(soap*, gml__PointType*) deserialize from a stream
/// - int soap_write_gml__PointType(soap, gml__PointType*) serialize to a stream
class gml__PointType : public gml__AbstractGeometricPrimitiveType
{ public:
/*  INHERITED FROM gml__AbstractGMLType:
/// GROUP <xs:group name="StandardObjectProperties">
/// Vector of gml__MetaDataPropertyType* element refs with length 0..unbounded
    std::vector<gml__MetaDataPropertyType*> metaDataProperty               0;
/// @brief The value of this property is a text description of the object. gml:description uses gml:StringOrRefType as its content model, so it may contain a simple text string content, or carry a reference to an external description. The use of gml:description to reference an external description has been deprecated and replaced by the gml:descriptionReference property.
/// Element reference "http://www.opengis.net/gml/3.2":description.
    gml__StringOrRefType*                description                    0;	///< Optional element.
/// @brief The value of this property is a remote text description of the object. The xlink:href attribute of the gml:descriptionReference property references the external description.
/// Element reference "http://www.opengis.net/gml/3.2":descriptionReference.
    gml__ReferenceType*                  descriptionReference           0;	///< Optional element.
/// @brief Often, a special identifier is assigned to an object by the maintaining authority with the intention that it is used in references to the object For such cases, the codeSpace shall be provided. That identifier is usually unique either globally or within an application domain. gml:identifier is a pre-defined property for such identifiers.
/// Element reference "http://www.opengis.net/gml/3.2":identifier.
    gml__CodeWithAuthorityType*          identifier                     0;	///< Optional element.
/// @brief The gml:name property provides a label or identifier for the object, commonly a descriptive name. An object may have several names, typically assigned by different authorities. gml:name uses the gml:CodeType content model. The authority for a name is indicated by the value of its (optional) codeSpace attribute. The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace. In common usage there will be one name per authority, so a processing application may select the name from its preferred codeSpace.
/// Vector of gml__CodeType* element refs with length 0..unbounded
    std::vector<gml__CodeType*         > name                           0;
//  END OF GROUP
/// Attribute reference "http://www.opengis.net/gml/3.2":id.
/// @brief The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.
   @xsd__ID                              id                             1;	///< Required attribute.
    END OF INHERITED FROM gml__AbstractGMLType */
/*  INHERITED FROM gml__AbstractGeometryType:
/// Attribute srsName of type xs:anyURI.
   @xsd__anyURI*                         srsName                        0;	///< Optional attribute.
/// Attribute srsDimension of type xs:positiveInteger.
   @xsd__positiveInteger*                srsDimension                   0;	///< Optional attribute.
/// Attribute axisLabels of type "http://www.opengis.net/gml/3.2":NCNameList.
   @gml__NCNameList*                     axisLabels                     0;	///< Optional attribute.
/// Attribute uomLabels of type "http://www.opengis.net/gml/3.2":NCNameList.
   @gml__NCNameList*                     uomLabels                      0;	///< Optional attribute.
    END OF INHERITED FROM gml__AbstractGeometryType */
/*  INHERITED FROM gml__AbstractGeometricPrimitiveType:
    END OF INHERITED FROM gml__AbstractGeometricPrimitiveType */
/// CHOICE <xs:choice>
   $int                                  __union_PointType             ;	///< Union _gml__union_PointType selector: set to SOAP_UNION__gml__union_PointType_<fieldname>
    union _gml__union_PointType
    {
/// Element reference "http://www.opengis.net/gml/3.2":pos.
    gml__DirectPositionType*             pos                            1;	///< Required element.
/// Element reference "http://www.opengis.net/gml/3.2":coordinates.
    gml__CoordinatesType*                coordinates                    1;	///< Required element.
    }                                    union_PointType               ;
//  END OF CHOICE
};

/// "http://www.opengis.net/gml/3.2":AbstractCurveType is an abstract complexType with complexContent extension of "http://www.opengis.net/gml/3.2":AbstractGeometricPrimitiveType.
/// @brief gml:AbstractCurveType is an abstraction of a curve to support the different levels of complexity. The curve may always be viewed as a geometric primitive, i.e. is continuous.
/// class gml__AbstractCurveType operations:
/// - soap_new_gml__AbstractCurveType(soap*) allocate
/// - soap_new_gml__AbstractCurveType(soap*, int num) allocate array
/// - soap_new_req_gml__AbstractCurveType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__AbstractCurveType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__AbstractCurveType(soap*, gml__AbstractCurveType*) deserialize from a stream
/// - int soap_write_gml__AbstractCurveType(soap, gml__AbstractCurveType*) serialize to a stream
class gml__AbstractCurveType : public gml__AbstractGeometricPrimitiveType
{ public:
/*  INHERITED FROM gml__AbstractGMLType:
/// GROUP <xs:group name="StandardObjectProperties">
/// Vector of gml__MetaDataPropertyType* element refs with length 0..unbounded
    std::vector<gml__MetaDataPropertyType*> metaDataProperty               0;
/// @brief The value of this property is a text description of the object. gml:description uses gml:StringOrRefType as its content model, so it may contain a simple text string content, or carry a reference to an external description. The use of gml:description to reference an external description has been deprecated and replaced by the gml:descriptionReference property.
/// Element reference "http://www.opengis.net/gml/3.2":description.
    gml__StringOrRefType*                description                    0;	///< Optional element.
/// @brief The value of this property is a remote text description of the object. The xlink:href attribute of the gml:descriptionReference property references the external description.
/// Element reference "http://www.opengis.net/gml/3.2":descriptionReference.
    gml__ReferenceType*                  descriptionReference           0;	///< Optional element.
/// @brief Often, a special identifier is assigned to an object by the maintaining authority with the intention that it is used in references to the object For such cases, the codeSpace shall be provided. That identifier is usually unique either globally or within an application domain. gml:identifier is a pre-defined property for such identifiers.
/// Element reference "http://www.opengis.net/gml/3.2":identifier.
    gml__CodeWithAuthorityType*          identifier                     0;	///< Optional element.
/// @brief The gml:name property provides a label or identifier for the object, commonly a descriptive name. An object may have several names, typically assigned by different authorities. gml:name uses the gml:CodeType content model. The authority for a name is indicated by the value of its (optional) codeSpace attribute. The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace. In common usage there will be one name per authority, so a processing application may select the name from its preferred codeSpace.
/// Vector of gml__CodeType* element refs with length 0..unbounded
    std::vector<gml__CodeType*         > name                           0;
//  END OF GROUP
/// Attribute reference "http://www.opengis.net/gml/3.2":id.
/// @brief The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.
   @xsd__ID                              id                             1;	///< Required attribute.
    END OF INHERITED FROM gml__AbstractGMLType */
/*  INHERITED FROM gml__AbstractGeometryType:
/// Attribute srsName of type xs:anyURI.
   @xsd__anyURI*                         srsName                        0;	///< Optional attribute.
/// Attribute srsDimension of type xs:positiveInteger.
   @xsd__positiveInteger*                srsDimension                   0;	///< Optional attribute.
/// Attribute axisLabels of type "http://www.opengis.net/gml/3.2":NCNameList.
   @gml__NCNameList*                     axisLabels                     0;	///< Optional attribute.
/// Attribute uomLabels of type "http://www.opengis.net/gml/3.2":NCNameList.
   @gml__NCNameList*                     uomLabels                      0;	///< Optional attribute.
    END OF INHERITED FROM gml__AbstractGeometryType */
/*  INHERITED FROM gml__AbstractGeometricPrimitiveType:
    END OF INHERITED FROM gml__AbstractGeometricPrimitiveType */
};

/// "http://www.opengis.net/gml/3.2":UnitDefinitionType is a complexType with complexContent extension of "http://www.opengis.net/gml/3.2":DefinitionType.
/// class gml__UnitDefinitionType operations:
/// - soap_new_gml__UnitDefinitionType(soap*) allocate
/// - soap_new_gml__UnitDefinitionType(soap*, int num) allocate array
/// - soap_new_req_gml__UnitDefinitionType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__UnitDefinitionType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__UnitDefinitionType(soap*, gml__UnitDefinitionType*) deserialize from a stream
/// - int soap_write_gml__UnitDefinitionType(soap, gml__UnitDefinitionType*) serialize to a stream
class gml__UnitDefinitionType : public gml__DefinitionType
{ public:
/*  INHERITED FROM gml__DefinitionBaseType:
    END OF INHERITED FROM gml__DefinitionBaseType */
/*  INHERITED FROM gml__DefinitionType:
/// Element reference "http://www.opengis.net/gml/3.2":remarks.
    std::string*                         remarks                        0;	///< Optional element.
    END OF INHERITED FROM gml__DefinitionType */
/// @brief The gml:quantityType property indicates the phenomenon to which the units apply. This element contains an informal description of the phenomenon or type of physical quantity that is measured or observed. When the physical quantity is the result of an observation or measurement, this term is known as observable type or measurand. The use of gml:quantityType for references to remote values is deprecated.
/// Element reference "http://www.opengis.net/gml/3.2":quantityType.
    gml__StringOrRefType*                quantityType                   0;	///< Optional element.
/// @brief The gml:quantityTypeReference property indicates the phenomenon to which the units apply. The content is a reference to a remote value.
/// Element reference "http://www.opengis.net/gml/3.2":quantityTypeReference.
    gml__ReferenceType*                  quantityTypeReference          0;	///< Optional element.
/// @brief The catalogSymbol is the preferred lexical symbol used for this unit of measure. The codeSpace attribute in gml:CodeType identifies a namespace for the catalog symbol value, and might reference the external catalog. The string value in gml:CodeType contains the value of a symbol that should be unique within this catalog namespace. This symbol often appears explicitly in the catalog, but it could be a combination of symbols using a specified algebra of units.
/// Element reference "http://www.opengis.net/gml/3.2":catalogSymbol.
    gml__CodeType*                       catalogSymbol                  0;	///< Optional element.
};

/// "http://www.opengis.net/gml/3.2":DictionaryType is a complexType with complexContent extension of "http://www.opengis.net/gml/3.2":DefinitionType.
/// class gml__DictionaryType operations:
/// - soap_new_gml__DictionaryType(soap*) allocate
/// - soap_new_gml__DictionaryType(soap*, int num) allocate array
/// - soap_new_req_gml__DictionaryType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__DictionaryType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__DictionaryType(soap*, gml__DictionaryType*) deserialize from a stream
/// - int soap_write_gml__DictionaryType(soap, gml__DictionaryType*) serialize to a stream
class gml__DictionaryType : public gml__DefinitionType
{ public:
/*  INHERITED FROM gml__DefinitionBaseType:
    END OF INHERITED FROM gml__DefinitionBaseType */
/*  INHERITED FROM gml__DefinitionType:
/// Element reference "http://www.opengis.net/gml/3.2":remarks.
    std::string*                         remarks                        0;	///< Optional element.
    END OF INHERITED FROM gml__DefinitionType */
/// CHOICE <xs:choice minOccurs="0" maxOccurs="unbounded">
   $int                                  __size_DictionaryType          0;
    class __gml__union_DictionaryType
    {
   $int                                  __union_DictionaryType         0;	///< Union _gml__union_DictionaryType selector: set to SOAP_UNION__gml__union_DictionaryType_<fieldname> or 0
/// Union for choice in type gml__DictionaryType
    union _gml__union_DictionaryType
    {
/// @brief This property element contains or refers to the definitions which are members of a dictionary. The content model follows the standard GML property pattern, so a gml:dictionaryEntry may either contain or refer to a single gml:Definition. Since gml:Dictionary is substitutable for gml:Definition, the content of an entry may itself be a lower level dictionary. Note that if the value is provided by reference, this definition does not carry a handle (gml:id) in this context, so does not allow external references to this specific definition in this context. When used in this way the referenced definition will usually be in a dictionary in the same XML document.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="dictionaryEntry"> with elements <definitionMember>
/// @brief This property element contains or refers to the definitions which are members of a dictionary. The content model follows the standard GML property pattern, so a gml:dictionaryEntry may either contain or refer to a single gml:Definition. Since gml:Dictionary is substitutable for gml:Definition, the content of an entry may itself be a lower level dictionary. Note that if the value is provided by reference, this definition does not carry a handle (gml:id) in this context, so does not allow external references to this specific definition in this context. When used in this way the referenced definition will usually be in a dictionary in the same XML document.
/// Element reference "http://www.opengis.net/gml/3.2":dictionaryEntry.
    gml__DictionaryEntryType*            dictionaryEntry                1;	///< Required element.
/// Element definitionMember of type "http://www.opengis.net/gml/3.2":DictionaryEntryType.
    gml__DictionaryEntryType*            definitionMember               1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
/// Element reference "http://www.opengis.net/gml/3.2":indirectEntry.
    gml__IndirectEntryType*              indirectEntry                  1;	///< Required element.
    }                                    union_DictionaryType          ;
    }                                   *__union_DictionaryType        ;
//  END OF CHOICE
/// Attribute aggregationType of type "http://www.opengis.net/gml/3.2":AggregationType.
   @enum gml__AggregationType*           aggregationType                0;	///< Optional attribute.
};

/// "http://www.opengis.net/gml/3.2":DiscreteCoverageType is a complexType with complexContent extension of "http://www.opengis.net/gml/3.2":AbstractCoverageType.
/// class gml__DiscreteCoverageType operations:
/// - soap_new_gml__DiscreteCoverageType(soap*) allocate
/// - soap_new_gml__DiscreteCoverageType(soap*, int num) allocate array
/// - soap_new_req_gml__DiscreteCoverageType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__DiscreteCoverageType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__DiscreteCoverageType(soap*, gml__DiscreteCoverageType*) deserialize from a stream
/// - int soap_write_gml__DiscreteCoverageType(soap, gml__DiscreteCoverageType*) serialize to a stream
class gml__DiscreteCoverageType : public gml__AbstractCoverageType
{ public:
/*  INHERITED FROM gml__AbstractGMLType:
/// GROUP <xs:group name="StandardObjectProperties">
/// Vector of gml__MetaDataPropertyType* element refs with length 0..unbounded
    std::vector<gml__MetaDataPropertyType*> metaDataProperty               0;
/// @brief The value of this property is a text description of the object. gml:description uses gml:StringOrRefType as its content model, so it may contain a simple text string content, or carry a reference to an external description. The use of gml:description to reference an external description has been deprecated and replaced by the gml:descriptionReference property.
/// Element reference "http://www.opengis.net/gml/3.2":description.
    gml__StringOrRefType*                description                    0;	///< Optional element.
/// @brief The value of this property is a remote text description of the object. The xlink:href attribute of the gml:descriptionReference property references the external description.
/// Element reference "http://www.opengis.net/gml/3.2":descriptionReference.
    gml__ReferenceType*                  descriptionReference           0;	///< Optional element.
/// @brief Often, a special identifier is assigned to an object by the maintaining authority with the intention that it is used in references to the object For such cases, the codeSpace shall be provided. That identifier is usually unique either globally or within an application domain. gml:identifier is a pre-defined property for such identifiers.
/// Element reference "http://www.opengis.net/gml/3.2":identifier.
    gml__CodeWithAuthorityType*          identifier                     0;	///< Optional element.
/// @brief The gml:name property provides a label or identifier for the object, commonly a descriptive name. An object may have several names, typically assigned by different authorities. gml:name uses the gml:CodeType content model. The authority for a name is indicated by the value of its (optional) codeSpace attribute. The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace. In common usage there will be one name per authority, so a processing application may select the name from its preferred codeSpace.
/// Vector of gml__CodeType* element refs with length 0..unbounded
    std::vector<gml__CodeType*         > name                           0;
//  END OF GROUP
/// Attribute reference "http://www.opengis.net/gml/3.2":id.
/// @brief The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.
   @xsd__ID                              id                             1;	///< Required attribute.
    END OF INHERITED FROM gml__AbstractGMLType */
/*  INHERITED FROM gml__AbstractFeatureType:
/// @brief This property describes the minimum bounding box or rectangle that encloses the entire feature.
/// Element reference "http://www.opengis.net/gml/3.2":boundedBy.
    gml__BoundingShapeType*              boundedBy                      0;	///< Optional element.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="location" minOccurs="0"> with elements <priorityLocation>
   $int                                  __unionlocation                0;	///< Union _gml__union_DiscreteCoverageType selector: set to SOAP_UNION__gml__union_DiscreteCoverageType_<fieldname> or 0
/// Union for substitutionGroup="location"
    union _gml__union_DiscreteCoverageType
    {
/// Element reference "http://www.opengis.net/gml/3.2":location.
    gml__LocationPropertyType*           location                       0;	///< Optional element.
/// Element priorityLocation of type "http://www.opengis.net/gml/3.2":PriorityLocationPropertyType.
    gml__PriorityLocationPropertyType*   priorityLocation               1;	///< Required element.
    }                                    __union_DiscreteCoverageType  ;
//  END OF CHOICE OF SUBSTITUTIONS
    END OF INHERITED FROM gml__AbstractFeatureType */
/*  INHERITED FROM gml__AbstractCoverageType:
/// @brief The gml:domainSet property element describes the spatio-temporal region of interest, within which the coverage is defined. Its content model is given by gml:DomainSetType. The value of the domain is thus a choice between a gml:AbstractGeometry and a gml:AbstractTimeObject. In the instance these abstract elements will normally be substituted by a geometry complex or temporal complex, to represent spatial coverages and time-series, respectively. The presence of the gml:AssociationAttributeGroup means that domainSet follows the usual GML property model and may use the xlink:href attribute to point to the domain, as an alternative to describing the domain inline. Ownership semantics may be provided using the gml:OwnershipAttributeGroup.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="domainSet"> with elements <multiPointDomain> <multiCurveDomain> <multiSurfaceDomain> <multiSolidDomain> <gridDomain> <rectifiedGridDomain>
   $int                                  __uniondomainSet               0;	///< Union _gml__union_DiscreteCoverageType_ selector: set to SOAP_UNION__gml__union_DiscreteCoverageType__<fieldname>
/// Union for substitutionGroup="domainSet"
    union _gml__union_DiscreteCoverageType_
    {
/// @brief The gml:domainSet property element describes the spatio-temporal region of interest, within which the coverage is defined. Its content model is given by gml:DomainSetType. The value of the domain is thus a choice between a gml:AbstractGeometry and a gml:AbstractTimeObject. In the instance these abstract elements will normally be substituted by a geometry complex or temporal complex, to represent spatial coverages and time-series, respectively. The presence of the gml:AssociationAttributeGroup means that domainSet follows the usual GML property model and may use the xlink:href attribute to point to the domain, as an alternative to describing the domain inline. Ownership semantics may be provided using the gml:OwnershipAttributeGroup.
/// Element reference "http://www.opengis.net/gml/3.2":domainSet.
    gml__DomainSetType*                  domainSet                      1;	///< Required element.
/// Element multiPointDomain of type "http://www.opengis.net/gml/3.2":DomainSetType.
    gml__DomainSetType*                  multiPointDomain               1;	///< Required element.
/// Element multiCurveDomain of type "http://www.opengis.net/gml/3.2":DomainSetType.
    gml__DomainSetType*                  multiCurveDomain               1;	///< Required element.
/// Element multiSurfaceDomain of type "http://www.opengis.net/gml/3.2":DomainSetType.
    gml__DomainSetType*                  multiSurfaceDomain             1;	///< Required element.
/// Element multiSolidDomain of type "http://www.opengis.net/gml/3.2":DomainSetType.
    gml__DomainSetType*                  multiSolidDomain               1;	///< Required element.
/// Element gridDomain of type "http://www.opengis.net/gml/3.2":DomainSetType.
    gml__DomainSetType*                  gridDomain                     1;	///< Required element.
/// Element rectifiedGridDomain of type "http://www.opengis.net/gml/3.2":DomainSetType.
    gml__DomainSetType*                  rectifiedGridDomain            1;	///< Required element.
    }                                    __union_DiscreteCoverageType_ ;
//  END OF CHOICE OF SUBSTITUTIONS
/// @brief The gml:rangeSet property element contains the values of the coverage (sometimes called the attribute values). Its content model is given by gml:RangeSetType. This content model supports a structural description of the range. The semantic information describing the range set is embedded using a uniform method, as part of the explicit values, or as a template value accompanying the representation using gml:DataBlock and gml:File. The values from each component (or "band") in the range may be encoded within a gml:ValueArray element or a concrete member of the gml:AbstractScalarValueList substitution group . Use of these elements satisfies the value-type homogeneity requirement.
/// Element reference "http://www.opengis.net/gml/3.2":rangeSet.
    gml__RangeSetType*                   rangeSet                       1;	///< Required element.
    END OF INHERITED FROM gml__AbstractCoverageType */
/// @brief The gml:coverageFunction property describes the mapping function from the domain to the range of the coverage. The value of the CoverageFunction is one of gml:CoverageMappingRule and gml:GridFunction. If the gml:coverageFunction property is omitted for a gridded coverage (including rectified gridded coverages) the gml:startPoint is assumed to be the value of the gml:low property in the gml:Grid geometry, and the gml:sequenceRule is assumed to be linear and the gml:axisOrder property is assumed to be "+1 +2".
/// Element reference "http://www.opengis.net/gml/3.2":coverageFunction.
    gml__CoverageFunctionType*           coverageFunction               0;	///< Optional element.
};

/// "http://www.opengis.net/gml/3.2":AbstractContinuousCoverageType is an abstract complexType with complexContent extension of "http://www.opengis.net/gml/3.2":AbstractCoverageType.
/// class gml__AbstractContinuousCoverageType operations:
/// - soap_new_gml__AbstractContinuousCoverageType(soap*) allocate
/// - soap_new_gml__AbstractContinuousCoverageType(soap*, int num) allocate array
/// - soap_new_req_gml__AbstractContinuousCoverageType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__AbstractContinuousCoverageType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__AbstractContinuousCoverageType(soap*, gml__AbstractContinuousCoverageType*) deserialize from a stream
/// - int soap_write_gml__AbstractContinuousCoverageType(soap, gml__AbstractContinuousCoverageType*) serialize to a stream
class gml__AbstractContinuousCoverageType : public gml__AbstractCoverageType
{ public:
/*  INHERITED FROM gml__AbstractGMLType:
/// GROUP <xs:group name="StandardObjectProperties">
/// Vector of gml__MetaDataPropertyType* element refs with length 0..unbounded
    std::vector<gml__MetaDataPropertyType*> metaDataProperty               0;
/// @brief The value of this property is a text description of the object. gml:description uses gml:StringOrRefType as its content model, so it may contain a simple text string content, or carry a reference to an external description. The use of gml:description to reference an external description has been deprecated and replaced by the gml:descriptionReference property.
/// Element reference "http://www.opengis.net/gml/3.2":description.
    gml__StringOrRefType*                description                    0;	///< Optional element.
/// @brief The value of this property is a remote text description of the object. The xlink:href attribute of the gml:descriptionReference property references the external description.
/// Element reference "http://www.opengis.net/gml/3.2":descriptionReference.
    gml__ReferenceType*                  descriptionReference           0;	///< Optional element.
/// @brief Often, a special identifier is assigned to an object by the maintaining authority with the intention that it is used in references to the object For such cases, the codeSpace shall be provided. That identifier is usually unique either globally or within an application domain. gml:identifier is a pre-defined property for such identifiers.
/// Element reference "http://www.opengis.net/gml/3.2":identifier.
    gml__CodeWithAuthorityType*          identifier                     0;	///< Optional element.
/// @brief The gml:name property provides a label or identifier for the object, commonly a descriptive name. An object may have several names, typically assigned by different authorities. gml:name uses the gml:CodeType content model. The authority for a name is indicated by the value of its (optional) codeSpace attribute. The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace. In common usage there will be one name per authority, so a processing application may select the name from its preferred codeSpace.
/// Vector of gml__CodeType* element refs with length 0..unbounded
    std::vector<gml__CodeType*         > name                           0;
//  END OF GROUP
/// Attribute reference "http://www.opengis.net/gml/3.2":id.
/// @brief The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.
   @xsd__ID                              id                             1;	///< Required attribute.
    END OF INHERITED FROM gml__AbstractGMLType */
/*  INHERITED FROM gml__AbstractFeatureType:
/// @brief This property describes the minimum bounding box or rectangle that encloses the entire feature.
/// Element reference "http://www.opengis.net/gml/3.2":boundedBy.
    gml__BoundingShapeType*              boundedBy                      0;	///< Optional element.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="location" minOccurs="0"> with elements <priorityLocation>
   $int                                  __unionlocation                0;	///< Union _gml__union_AbstractContinuousCoverageType selector: set to SOAP_UNION__gml__union_AbstractContinuousCoverageType_<fieldname> or 0
/// Union for substitutionGroup="location"
    union _gml__union_AbstractContinuousCoverageType
    {
/// Element reference "http://www.opengis.net/gml/3.2":location.
    gml__LocationPropertyType*           location                       0;	///< Optional element.
/// Element priorityLocation of type "http://www.opengis.net/gml/3.2":PriorityLocationPropertyType.
    gml__PriorityLocationPropertyType*   priorityLocation               1;	///< Required element.
    }                                    __union_AbstractContinuousCoverageType;
//  END OF CHOICE OF SUBSTITUTIONS
    END OF INHERITED FROM gml__AbstractFeatureType */
/*  INHERITED FROM gml__AbstractCoverageType:
/// @brief The gml:domainSet property element describes the spatio-temporal region of interest, within which the coverage is defined. Its content model is given by gml:DomainSetType. The value of the domain is thus a choice between a gml:AbstractGeometry and a gml:AbstractTimeObject. In the instance these abstract elements will normally be substituted by a geometry complex or temporal complex, to represent spatial coverages and time-series, respectively. The presence of the gml:AssociationAttributeGroup means that domainSet follows the usual GML property model and may use the xlink:href attribute to point to the domain, as an alternative to describing the domain inline. Ownership semantics may be provided using the gml:OwnershipAttributeGroup.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="domainSet"> with elements <multiPointDomain> <multiCurveDomain> <multiSurfaceDomain> <multiSolidDomain> <gridDomain> <rectifiedGridDomain>
   $int                                  __uniondomainSet               0;	///< Union _gml__union_AbstractContinuousCoverageType_ selector: set to SOAP_UNION__gml__union_AbstractContinuousCoverageType__<fieldname>
/// Union for substitutionGroup="domainSet"
    union _gml__union_AbstractContinuousCoverageType_
    {
/// @brief The gml:domainSet property element describes the spatio-temporal region of interest, within which the coverage is defined. Its content model is given by gml:DomainSetType. The value of the domain is thus a choice between a gml:AbstractGeometry and a gml:AbstractTimeObject. In the instance these abstract elements will normally be substituted by a geometry complex or temporal complex, to represent spatial coverages and time-series, respectively. The presence of the gml:AssociationAttributeGroup means that domainSet follows the usual GML property model and may use the xlink:href attribute to point to the domain, as an alternative to describing the domain inline. Ownership semantics may be provided using the gml:OwnershipAttributeGroup.
/// Element reference "http://www.opengis.net/gml/3.2":domainSet.
    gml__DomainSetType*                  domainSet                      1;	///< Required element.
/// Element multiPointDomain of type "http://www.opengis.net/gml/3.2":DomainSetType.
    gml__DomainSetType*                  multiPointDomain               1;	///< Required element.
/// Element multiCurveDomain of type "http://www.opengis.net/gml/3.2":DomainSetType.
    gml__DomainSetType*                  multiCurveDomain               1;	///< Required element.
/// Element multiSurfaceDomain of type "http://www.opengis.net/gml/3.2":DomainSetType.
    gml__DomainSetType*                  multiSurfaceDomain             1;	///< Required element.
/// Element multiSolidDomain of type "http://www.opengis.net/gml/3.2":DomainSetType.
    gml__DomainSetType*                  multiSolidDomain               1;	///< Required element.
/// Element gridDomain of type "http://www.opengis.net/gml/3.2":DomainSetType.
    gml__DomainSetType*                  gridDomain                     1;	///< Required element.
/// Element rectifiedGridDomain of type "http://www.opengis.net/gml/3.2":DomainSetType.
    gml__DomainSetType*                  rectifiedGridDomain            1;	///< Required element.
    }                                    __union_AbstractContinuousCoverageType_;
//  END OF CHOICE OF SUBSTITUTIONS
/// @brief The gml:rangeSet property element contains the values of the coverage (sometimes called the attribute values). Its content model is given by gml:RangeSetType. This content model supports a structural description of the range. The semantic information describing the range set is embedded using a uniform method, as part of the explicit values, or as a template value accompanying the representation using gml:DataBlock and gml:File. The values from each component (or "band") in the range may be encoded within a gml:ValueArray element or a concrete member of the gml:AbstractScalarValueList substitution group . Use of these elements satisfies the value-type homogeneity requirement.
/// Element reference "http://www.opengis.net/gml/3.2":rangeSet.
    gml__RangeSetType*                   rangeSet                       1;	///< Required element.
    END OF INHERITED FROM gml__AbstractCoverageType */
/// @brief The gml:coverageFunction property describes the mapping function from the domain to the range of the coverage. The value of the CoverageFunction is one of gml:CoverageMappingRule and gml:GridFunction. If the gml:coverageFunction property is omitted for a gridded coverage (including rectified gridded coverages) the gml:startPoint is assumed to be the value of the gml:low property in the gml:Grid geometry, and the gml:sequenceRule is assumed to be linear and the gml:axisOrder property is assumed to be "+1 +2".
/// Element reference "http://www.opengis.net/gml/3.2":coverageFunction.
    gml__CoverageFunctionType*           coverageFunction               0;	///< Optional element.
};

/// "http://www.opengis.net/gml/3.2":AbstractTimeGeometricPrimitiveType is an abstract complexType with complexContent extension of "http://www.opengis.net/gml/3.2":AbstractTimePrimitiveType.
/// class gml__AbstractTimeGeometricPrimitiveType operations:
/// - soap_new_gml__AbstractTimeGeometricPrimitiveType(soap*) allocate
/// - soap_new_gml__AbstractTimeGeometricPrimitiveType(soap*, int num) allocate array
/// - soap_new_req_gml__AbstractTimeGeometricPrimitiveType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__AbstractTimeGeometricPrimitiveType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__AbstractTimeGeometricPrimitiveType(soap*, gml__AbstractTimeGeometricPrimitiveType*) deserialize from a stream
/// - int soap_write_gml__AbstractTimeGeometricPrimitiveType(soap, gml__AbstractTimeGeometricPrimitiveType*) serialize to a stream
class gml__AbstractTimeGeometricPrimitiveType : public gml__AbstractTimePrimitiveType
{ public:
/*  INHERITED FROM gml__AbstractGMLType:
/// GROUP <xs:group name="StandardObjectProperties">
/// Vector of gml__MetaDataPropertyType* element refs with length 0..unbounded
    std::vector<gml__MetaDataPropertyType*> metaDataProperty               0;
/// @brief The value of this property is a text description of the object. gml:description uses gml:StringOrRefType as its content model, so it may contain a simple text string content, or carry a reference to an external description. The use of gml:description to reference an external description has been deprecated and replaced by the gml:descriptionReference property.
/// Element reference "http://www.opengis.net/gml/3.2":description.
    gml__StringOrRefType*                description                    0;	///< Optional element.
/// @brief The value of this property is a remote text description of the object. The xlink:href attribute of the gml:descriptionReference property references the external description.
/// Element reference "http://www.opengis.net/gml/3.2":descriptionReference.
    gml__ReferenceType*                  descriptionReference           0;	///< Optional element.
/// @brief Often, a special identifier is assigned to an object by the maintaining authority with the intention that it is used in references to the object For such cases, the codeSpace shall be provided. That identifier is usually unique either globally or within an application domain. gml:identifier is a pre-defined property for such identifiers.
/// Element reference "http://www.opengis.net/gml/3.2":identifier.
    gml__CodeWithAuthorityType*          identifier                     0;	///< Optional element.
/// @brief The gml:name property provides a label or identifier for the object, commonly a descriptive name. An object may have several names, typically assigned by different authorities. gml:name uses the gml:CodeType content model. The authority for a name is indicated by the value of its (optional) codeSpace attribute. The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace. In common usage there will be one name per authority, so a processing application may select the name from its preferred codeSpace.
/// Vector of gml__CodeType* element refs with length 0..unbounded
    std::vector<gml__CodeType*         > name                           0;
//  END OF GROUP
/// Attribute reference "http://www.opengis.net/gml/3.2":id.
/// @brief The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.
   @xsd__ID                              id                             1;	///< Required attribute.
    END OF INHERITED FROM gml__AbstractGMLType */
/*  INHERITED FROM gml__AbstractTimeObjectType:
    END OF INHERITED FROM gml__AbstractTimeObjectType */
/*  INHERITED FROM gml__AbstractTimePrimitiveType:
/// Vector of gml__RelatedTimeType* with length 0..unbounded
    std::vector<gml__RelatedTimeType*  > relatedTime                    0;
    END OF INHERITED FROM gml__AbstractTimePrimitiveType */
/// Attribute frame of type xs:anyURI.
   @xsd__anyURI                          frame                          0;	///< Default value="#ISO-8601".
};

/// "http://www.opengis.net/gml/3.2":RectifiedGridType is a complexType with complexContent extension of "http://www.opengis.net/gml/3.2":GridType.
/// class gml__RectifiedGridType operations:
/// - soap_new_gml__RectifiedGridType(soap*) allocate
/// - soap_new_gml__RectifiedGridType(soap*, int num) allocate array
/// - soap_new_req_gml__RectifiedGridType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__RectifiedGridType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__RectifiedGridType(soap*, gml__RectifiedGridType*) deserialize from a stream
/// - int soap_write_gml__RectifiedGridType(soap, gml__RectifiedGridType*) serialize to a stream
class gml__RectifiedGridType : public gml__GridType
{ public:
/*  INHERITED FROM gml__AbstractGMLType:
/// GROUP <xs:group name="StandardObjectProperties">
/// Vector of gml__MetaDataPropertyType* element refs with length 0..unbounded
    std::vector<gml__MetaDataPropertyType*> metaDataProperty               0;
/// @brief The value of this property is a text description of the object. gml:description uses gml:StringOrRefType as its content model, so it may contain a simple text string content, or carry a reference to an external description. The use of gml:description to reference an external description has been deprecated and replaced by the gml:descriptionReference property.
/// Element reference "http://www.opengis.net/gml/3.2":description.
    gml__StringOrRefType*                description                    0;	///< Optional element.
/// @brief The value of this property is a remote text description of the object. The xlink:href attribute of the gml:descriptionReference property references the external description.
/// Element reference "http://www.opengis.net/gml/3.2":descriptionReference.
    gml__ReferenceType*                  descriptionReference           0;	///< Optional element.
/// @brief Often, a special identifier is assigned to an object by the maintaining authority with the intention that it is used in references to the object For such cases, the codeSpace shall be provided. That identifier is usually unique either globally or within an application domain. gml:identifier is a pre-defined property for such identifiers.
/// Element reference "http://www.opengis.net/gml/3.2":identifier.
    gml__CodeWithAuthorityType*          identifier                     0;	///< Optional element.
/// @brief The gml:name property provides a label or identifier for the object, commonly a descriptive name. An object may have several names, typically assigned by different authorities. gml:name uses the gml:CodeType content model. The authority for a name is indicated by the value of its (optional) codeSpace attribute. The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace. In common usage there will be one name per authority, so a processing application may select the name from its preferred codeSpace.
/// Vector of gml__CodeType* element refs with length 0..unbounded
    std::vector<gml__CodeType*         > name                           0;
//  END OF GROUP
/// Attribute reference "http://www.opengis.net/gml/3.2":id.
/// @brief The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.
   @xsd__ID                              id                             1;	///< Required attribute.
    END OF INHERITED FROM gml__AbstractGMLType */
/*  INHERITED FROM gml__AbstractGeometryType:
/// Attribute srsName of type xs:anyURI.
   @xsd__anyURI*                         srsName                        0;	///< Optional attribute.
/// Attribute srsDimension of type xs:positiveInteger.
   @xsd__positiveInteger*                srsDimension                   0;	///< Optional attribute.
/// Attribute axisLabels of type "http://www.opengis.net/gml/3.2":NCNameList.
   @gml__NCNameList*                     axisLabels                     0;	///< Optional attribute.
/// Attribute uomLabels of type "http://www.opengis.net/gml/3.2":NCNameList.
   @gml__NCNameList*                     uomLabels                      0;	///< Optional attribute.
    END OF INHERITED FROM gml__AbstractGeometryType */
/*  INHERITED FROM gml__GridType:
/// Element limits of type "http://www.opengis.net/gml/3.2":GridLimitsType.
    gml__GridLimitsType*                 limits                         1;	///< Required element.
/// CHOICE <xs:choice>
   $int                                  __union_RectifiedGridType     ;	///< Union _gml__union_RectifiedGridType selector: set to SOAP_UNION__gml__union_RectifiedGridType_<fieldname>
    union _gml__union_RectifiedGridType
    {
/// Element axisLabels of type "http://www.opengis.net/gml/3.2":NCNameList.
    gml__NCNameList*                     axisLabels                     1;	///< Required element.
/// Vector of std::string with length 1..unbounded
    std::vector<std::string           > *axisName                       1;
    }                                    union_RectifiedGridType       ;
//  END OF CHOICE
/// Attribute dimension of type xs:positiveInteger.
   @xsd__positiveInteger                 dimension                      1;	///< Required attribute.
    END OF INHERITED FROM gml__GridType */
/// Element origin of type "http://www.opengis.net/gml/3.2":PointPropertyType.
    gml__PointPropertyType*              origin                         1;	///< Required element.
/// Vector of gml__VectorType* with length 1..unbounded
    std::vector<gml__VectorType*       > offsetVector                   1;
};

/// "http://www.opengis.net/gml/3.2":IdentifiedObjectType is an abstract complexType with complexContent extension of "http://www.opengis.net/gml/3.2":DefinitionType.
/// @brief gml:IdentifiedObjectType provides identification properties of a CRS-related object. In gml:DefinitionType, the gml:identifier element shall be the primary name by which this object is identified, encoding the "name" attribute in the UML model. Zero or more of the gml:name elements can be an unordered set of "identifiers", encoding the "identifier" attribute in the UML model. Each of these gml:name elements can reference elsewhere the object's defining information or be an identifier by which this object can be referenced. Zero or more other gml:name elements can be an unordered set of "alias" alternative names by which this CRS related object is identified, encoding the "alias" attributes in the UML model. An object may have several aliases, typically used in different contexts. The context for an alias is indicated by the value of its (optional) codeSpace attribute. Any needed version information shall be included in the codeSpace attribute of a gml:identifier and gml:name elements. In this use, the gml:remarks element in the gml:DefinitionType shall contain comments on or information about this object, including data source information.
/// class gml__IdentifiedObjectType operations:
/// - soap_new_gml__IdentifiedObjectType(soap*) allocate
/// - soap_new_gml__IdentifiedObjectType(soap*, int num) allocate array
/// - soap_new_req_gml__IdentifiedObjectType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__IdentifiedObjectType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__IdentifiedObjectType(soap*, gml__IdentifiedObjectType*) deserialize from a stream
/// - int soap_write_gml__IdentifiedObjectType(soap, gml__IdentifiedObjectType*) serialize to a stream
class gml__IdentifiedObjectType : public gml__DefinitionType
{ public:
/*  INHERITED FROM gml__DefinitionBaseType:
    END OF INHERITED FROM gml__DefinitionBaseType */
/*  INHERITED FROM gml__DefinitionType:
/// Element reference "http://www.opengis.net/gml/3.2":remarks.
    std::string*                         remarks                        0;	///< Optional element.
    END OF INHERITED FROM gml__DefinitionType */
};

/// "http://www.opengis.net/gml/3.2":DirectedObservationType is a complexType with complexContent extension of "http://www.opengis.net/gml/3.2":ObservationType.
/// class gml__DirectedObservationType operations:
/// - soap_new_gml__DirectedObservationType(soap*) allocate
/// - soap_new_gml__DirectedObservationType(soap*, int num) allocate array
/// - soap_new_req_gml__DirectedObservationType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__DirectedObservationType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__DirectedObservationType(soap*, gml__DirectedObservationType*) deserialize from a stream
/// - int soap_write_gml__DirectedObservationType(soap, gml__DirectedObservationType*) serialize to a stream
class gml__DirectedObservationType : public gml__ObservationType
{ public:
/*  INHERITED FROM gml__AbstractGMLType:
/// GROUP <xs:group name="StandardObjectProperties">
/// Vector of gml__MetaDataPropertyType* element refs with length 0..unbounded
    std::vector<gml__MetaDataPropertyType*> metaDataProperty               0;
/// @brief The value of this property is a text description of the object. gml:description uses gml:StringOrRefType as its content model, so it may contain a simple text string content, or carry a reference to an external description. The use of gml:description to reference an external description has been deprecated and replaced by the gml:descriptionReference property.
/// Element reference "http://www.opengis.net/gml/3.2":description.
    gml__StringOrRefType*                description                    0;	///< Optional element.
/// @brief The value of this property is a remote text description of the object. The xlink:href attribute of the gml:descriptionReference property references the external description.
/// Element reference "http://www.opengis.net/gml/3.2":descriptionReference.
    gml__ReferenceType*                  descriptionReference           0;	///< Optional element.
/// @brief Often, a special identifier is assigned to an object by the maintaining authority with the intention that it is used in references to the object For such cases, the codeSpace shall be provided. That identifier is usually unique either globally or within an application domain. gml:identifier is a pre-defined property for such identifiers.
/// Element reference "http://www.opengis.net/gml/3.2":identifier.
    gml__CodeWithAuthorityType*          identifier                     0;	///< Optional element.
/// @brief The gml:name property provides a label or identifier for the object, commonly a descriptive name. An object may have several names, typically assigned by different authorities. gml:name uses the gml:CodeType content model. The authority for a name is indicated by the value of its (optional) codeSpace attribute. The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace. In common usage there will be one name per authority, so a processing application may select the name from its preferred codeSpace.
/// Vector of gml__CodeType* element refs with length 0..unbounded
    std::vector<gml__CodeType*         > name                           0;
//  END OF GROUP
/// Attribute reference "http://www.opengis.net/gml/3.2":id.
/// @brief The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.
   @xsd__ID                              id                             1;	///< Required attribute.
    END OF INHERITED FROM gml__AbstractGMLType */
/*  INHERITED FROM gml__AbstractFeatureType:
/// @brief This property describes the minimum bounding box or rectangle that encloses the entire feature.
/// Element reference "http://www.opengis.net/gml/3.2":boundedBy.
    gml__BoundingShapeType*              boundedBy                      0;	///< Optional element.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="location" minOccurs="0"> with elements <priorityLocation>
   $int                                  __unionlocation                0;	///< Union _gml__union_DirectedObservationType selector: set to SOAP_UNION__gml__union_DirectedObservationType_<fieldname> or 0
/// Union for substitutionGroup="location"
    union _gml__union_DirectedObservationType
    {
/// Element reference "http://www.opengis.net/gml/3.2":location.
    gml__LocationPropertyType*           location                       0;	///< Optional element.
/// Element priorityLocation of type "http://www.opengis.net/gml/3.2":PriorityLocationPropertyType.
    gml__PriorityLocationPropertyType*   priorityLocation               1;	///< Required element.
    }                                    __union_DirectedObservationType;
//  END OF CHOICE OF SUBSTITUTIONS
    END OF INHERITED FROM gml__AbstractFeatureType */
/*  INHERITED FROM gml__ObservationType:
/// @brief gml:validTime is a convenience property element.
/// Element reference "http://www.opengis.net/gml/3.2":validTime.
    gml__TimePrimitivePropertyType*      validTime                      1;	///< Required element.
/// Element reference "http://www.opengis.net/gml/3.2":using.
    gml__ProcedurePropertyType*          using_                         0;	///< Optional element.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="target" minOccurs="0"> with elements <subject>
   $int                                  __uniontarget                  0;	///< Union _gml__union_DirectedObservationType_ selector: set to SOAP_UNION__gml__union_DirectedObservationType__<fieldname> or 0
/// Union for substitutionGroup="target"
    union _gml__union_DirectedObservationType_
    {
/// Element reference "http://www.opengis.net/gml/3.2":target.
    gml__TargetPropertyType*             target                         0;	///< Optional element.
/// Element subject of type "http://www.opengis.net/gml/3.2":TargetPropertyType.
    gml__TargetPropertyType*             subject                        1;	///< Required element.
    }                                    __union_DirectedObservationType_;
//  END OF CHOICE OF SUBSTITUTIONS
/// Element reference "http://www.opengis.net/gml/3.2":resultOf.
    gml__ResultType*                     resultOf                       1;	///< Required element.
    END OF INHERITED FROM gml__ObservationType */
/// @brief The property gml:direction is intended as a pre-defined property expressing a direction to be assigned to features defined in a GML application schema.
/// Element reference "http://www.opengis.net/gml/3.2":direction.
    gml__DirectionPropertyType*          direction                      1;	///< Required element.
};

/// "http://www.opengis.net/gml/3.2":TimeReferenceSystemType is a complexType with complexContent extension of "http://www.opengis.net/gml/3.2":DefinitionType.
/// class gml__TimeReferenceSystemType operations:
/// - soap_new_gml__TimeReferenceSystemType(soap*) allocate
/// - soap_new_gml__TimeReferenceSystemType(soap*, int num) allocate array
/// - soap_new_req_gml__TimeReferenceSystemType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__TimeReferenceSystemType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__TimeReferenceSystemType(soap*, gml__TimeReferenceSystemType*) deserialize from a stream
/// - int soap_write_gml__TimeReferenceSystemType(soap, gml__TimeReferenceSystemType*) serialize to a stream
class gml__TimeReferenceSystemType : public gml__DefinitionType
{ public:
/*  INHERITED FROM gml__DefinitionBaseType:
    END OF INHERITED FROM gml__DefinitionBaseType */
/*  INHERITED FROM gml__DefinitionType:
/// Element reference "http://www.opengis.net/gml/3.2":remarks.
    std::string*                         remarks                        0;	///< Optional element.
    END OF INHERITED FROM gml__DefinitionType */
/// Element domainOfValidity of type xs:string.
    std::string                          domainOfValidity               1;	///< Required element.
};

/// "http://www.opengis.net/gml/3.2":TimeCalendarEraType is a complexType with complexContent extension of "http://www.opengis.net/gml/3.2":DefinitionType.
/// class gml__TimeCalendarEraType operations:
/// - soap_new_gml__TimeCalendarEraType(soap*) allocate
/// - soap_new_gml__TimeCalendarEraType(soap*, int num) allocate array
/// - soap_new_req_gml__TimeCalendarEraType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__TimeCalendarEraType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__TimeCalendarEraType(soap*, gml__TimeCalendarEraType*) deserialize from a stream
/// - int soap_write_gml__TimeCalendarEraType(soap, gml__TimeCalendarEraType*) serialize to a stream
class gml__TimeCalendarEraType : public gml__DefinitionType
{ public:
/*  INHERITED FROM gml__DefinitionBaseType:
    END OF INHERITED FROM gml__DefinitionBaseType */
/*  INHERITED FROM gml__DefinitionType:
/// Element reference "http://www.opengis.net/gml/3.2":remarks.
    std::string*                         remarks                        0;	///< Optional element.
    END OF INHERITED FROM gml__DefinitionType */
/// Element referenceEvent of type "http://www.opengis.net/gml/3.2":StringOrRefType.
    gml__StringOrRefType*                referenceEvent                 1;	///< Required element.
/// Element referenceDate of type "http://www.opengis.net/gml/3.2":CalDate.
    gml__CalDate                         referenceDate                  1;	///< Required element.
/// Element julianReference of type xs:decimal.
    xsd__decimal                         julianReference                1;	///< Required element.
/// Element epochOfUse of type "http://www.opengis.net/gml/3.2":TimePeriodPropertyType.
    gml__TimePeriodPropertyType*         epochOfUse                     1;	///< Required element.
};

/// "http://www.opengis.net/gml/3.2":TimeOrdinalEraType is a complexType with complexContent extension of "http://www.opengis.net/gml/3.2":DefinitionType.
/// class gml__TimeOrdinalEraType operations:
/// - soap_new_gml__TimeOrdinalEraType(soap*) allocate
/// - soap_new_gml__TimeOrdinalEraType(soap*, int num) allocate array
/// - soap_new_req_gml__TimeOrdinalEraType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__TimeOrdinalEraType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__TimeOrdinalEraType(soap*, gml__TimeOrdinalEraType*) deserialize from a stream
/// - int soap_write_gml__TimeOrdinalEraType(soap, gml__TimeOrdinalEraType*) serialize to a stream
class gml__TimeOrdinalEraType : public gml__DefinitionType
{ public:
/*  INHERITED FROM gml__DefinitionBaseType:
    END OF INHERITED FROM gml__DefinitionBaseType */
/*  INHERITED FROM gml__DefinitionType:
/// Element reference "http://www.opengis.net/gml/3.2":remarks.
    std::string*                         remarks                        0;	///< Optional element.
    END OF INHERITED FROM gml__DefinitionType */
/// Vector of gml__RelatedTimeType* with length 0..unbounded
    std::vector<gml__RelatedTimeType*  > relatedTime                    0;
/// Element start of type "http://www.opengis.net/gml/3.2":TimeNodePropertyType.
    gml__TimeNodePropertyType*           start                          0;	///< Optional element.
/// Element end of type "http://www.opengis.net/gml/3.2":TimeNodePropertyType.
    gml__TimeNodePropertyType*           end                            0;	///< Optional element.
/// Element extent of type "http://www.opengis.net/gml/3.2":TimePeriodPropertyType.
    gml__TimePeriodPropertyType*         extent                         0;	///< Optional element.
/// Vector of gml__TimeOrdinalEraPropertyType* with length 0..unbounded
    std::vector<gml__TimeOrdinalEraPropertyType*> member                         0;
/// Element group of type "http://www.opengis.net/gml/3.2":ReferenceType.
    gml__ReferenceType*                  group                          0;	///< Optional element.
};

/// "http://www.opengis.net/gml/3.2":AbstractTimeTopologyPrimitiveType is an abstract complexType with complexContent extension of "http://www.opengis.net/gml/3.2":AbstractTimePrimitiveType.
/// class gml__AbstractTimeTopologyPrimitiveType operations:
/// - soap_new_gml__AbstractTimeTopologyPrimitiveType(soap*) allocate
/// - soap_new_gml__AbstractTimeTopologyPrimitiveType(soap*, int num) allocate array
/// - soap_new_req_gml__AbstractTimeTopologyPrimitiveType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__AbstractTimeTopologyPrimitiveType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__AbstractTimeTopologyPrimitiveType(soap*, gml__AbstractTimeTopologyPrimitiveType*) deserialize from a stream
/// - int soap_write_gml__AbstractTimeTopologyPrimitiveType(soap, gml__AbstractTimeTopologyPrimitiveType*) serialize to a stream
class gml__AbstractTimeTopologyPrimitiveType : public gml__AbstractTimePrimitiveType
{ public:
/*  INHERITED FROM gml__AbstractGMLType:
/// GROUP <xs:group name="StandardObjectProperties">
/// Vector of gml__MetaDataPropertyType* element refs with length 0..unbounded
    std::vector<gml__MetaDataPropertyType*> metaDataProperty               0;
/// @brief The value of this property is a text description of the object. gml:description uses gml:StringOrRefType as its content model, so it may contain a simple text string content, or carry a reference to an external description. The use of gml:description to reference an external description has been deprecated and replaced by the gml:descriptionReference property.
/// Element reference "http://www.opengis.net/gml/3.2":description.
    gml__StringOrRefType*                description                    0;	///< Optional element.
/// @brief The value of this property is a remote text description of the object. The xlink:href attribute of the gml:descriptionReference property references the external description.
/// Element reference "http://www.opengis.net/gml/3.2":descriptionReference.
    gml__ReferenceType*                  descriptionReference           0;	///< Optional element.
/// @brief Often, a special identifier is assigned to an object by the maintaining authority with the intention that it is used in references to the object For such cases, the codeSpace shall be provided. That identifier is usually unique either globally or within an application domain. gml:identifier is a pre-defined property for such identifiers.
/// Element reference "http://www.opengis.net/gml/3.2":identifier.
    gml__CodeWithAuthorityType*          identifier                     0;	///< Optional element.
/// @brief The gml:name property provides a label or identifier for the object, commonly a descriptive name. An object may have several names, typically assigned by different authorities. gml:name uses the gml:CodeType content model. The authority for a name is indicated by the value of its (optional) codeSpace attribute. The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace. In common usage there will be one name per authority, so a processing application may select the name from its preferred codeSpace.
/// Vector of gml__CodeType* element refs with length 0..unbounded
    std::vector<gml__CodeType*         > name                           0;
//  END OF GROUP
/// Attribute reference "http://www.opengis.net/gml/3.2":id.
/// @brief The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.
   @xsd__ID                              id                             1;	///< Required attribute.
    END OF INHERITED FROM gml__AbstractGMLType */
/*  INHERITED FROM gml__AbstractTimeObjectType:
    END OF INHERITED FROM gml__AbstractTimeObjectType */
/*  INHERITED FROM gml__AbstractTimePrimitiveType:
/// Vector of gml__RelatedTimeType* with length 0..unbounded
    std::vector<gml__RelatedTimeType*  > relatedTime                    0;
    END OF INHERITED FROM gml__AbstractTimePrimitiveType */
/// Element complex of type "http://www.opengis.net/gml/3.2":ReferenceType.
    gml__ReferenceType*                  complex                        0;	///< Optional element.
};

/// "http://www.opengis.net/gml/3.2":TimeTopologyComplexType is an abstract complexType with complexContent extension of "http://www.opengis.net/gml/3.2":AbstractTimeComplexType.
/// class gml__TimeTopologyComplexType operations:
/// - soap_new_gml__TimeTopologyComplexType(soap*) allocate
/// - soap_new_gml__TimeTopologyComplexType(soap*, int num) allocate array
/// - soap_new_req_gml__TimeTopologyComplexType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__TimeTopologyComplexType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__TimeTopologyComplexType(soap*, gml__TimeTopologyComplexType*) deserialize from a stream
/// - int soap_write_gml__TimeTopologyComplexType(soap, gml__TimeTopologyComplexType*) serialize to a stream
class gml__TimeTopologyComplexType : public gml__AbstractTimeComplexType
{ public:
/*  INHERITED FROM gml__AbstractGMLType:
/// GROUP <xs:group name="StandardObjectProperties">
/// Vector of gml__MetaDataPropertyType* element refs with length 0..unbounded
    std::vector<gml__MetaDataPropertyType*> metaDataProperty               0;
/// @brief The value of this property is a text description of the object. gml:description uses gml:StringOrRefType as its content model, so it may contain a simple text string content, or carry a reference to an external description. The use of gml:description to reference an external description has been deprecated and replaced by the gml:descriptionReference property.
/// Element reference "http://www.opengis.net/gml/3.2":description.
    gml__StringOrRefType*                description                    0;	///< Optional element.
/// @brief The value of this property is a remote text description of the object. The xlink:href attribute of the gml:descriptionReference property references the external description.
/// Element reference "http://www.opengis.net/gml/3.2":descriptionReference.
    gml__ReferenceType*                  descriptionReference           0;	///< Optional element.
/// @brief Often, a special identifier is assigned to an object by the maintaining authority with the intention that it is used in references to the object For such cases, the codeSpace shall be provided. That identifier is usually unique either globally or within an application domain. gml:identifier is a pre-defined property for such identifiers.
/// Element reference "http://www.opengis.net/gml/3.2":identifier.
    gml__CodeWithAuthorityType*          identifier                     0;	///< Optional element.
/// @brief The gml:name property provides a label or identifier for the object, commonly a descriptive name. An object may have several names, typically assigned by different authorities. gml:name uses the gml:CodeType content model. The authority for a name is indicated by the value of its (optional) codeSpace attribute. The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace. In common usage there will be one name per authority, so a processing application may select the name from its preferred codeSpace.
/// Vector of gml__CodeType* element refs with length 0..unbounded
    std::vector<gml__CodeType*         > name                           0;
//  END OF GROUP
/// Attribute reference "http://www.opengis.net/gml/3.2":id.
/// @brief The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.
   @xsd__ID                              id                             1;	///< Required attribute.
    END OF INHERITED FROM gml__AbstractGMLType */
/*  INHERITED FROM gml__AbstractTimeObjectType:
    END OF INHERITED FROM gml__AbstractTimeObjectType */
/*  INHERITED FROM gml__AbstractTimeComplexType:
    END OF INHERITED FROM gml__AbstractTimeComplexType */
/// Vector of gml__TimeTopologyPrimitivePropertyType* with length 1..unbounded
    std::vector<gml__TimeTopologyPrimitivePropertyType*> primitive                      1;
};

/// "http://www.opengis.net/gml/3.2":FeatureCollectionType is a complexType with complexContent extension of "http://www.opengis.net/gml/3.2":AbstractFeatureCollectionType.
/// class gml__FeatureCollectionType operations:
/// - soap_new_gml__FeatureCollectionType(soap*) allocate
/// - soap_new_gml__FeatureCollectionType(soap*, int num) allocate array
/// - soap_new_req_gml__FeatureCollectionType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__FeatureCollectionType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__FeatureCollectionType(soap*, gml__FeatureCollectionType*) deserialize from a stream
/// - int soap_write_gml__FeatureCollectionType(soap, gml__FeatureCollectionType*) serialize to a stream
class gml__FeatureCollectionType : public gml__AbstractFeatureCollectionType
{ public:
/*  INHERITED FROM gml__AbstractGMLType:
/// GROUP <xs:group name="StandardObjectProperties">
/// Vector of gml__MetaDataPropertyType* element refs with length 0..unbounded
    std::vector<gml__MetaDataPropertyType*> metaDataProperty               0;
/// @brief The value of this property is a text description of the object. gml:description uses gml:StringOrRefType as its content model, so it may contain a simple text string content, or carry a reference to an external description. The use of gml:description to reference an external description has been deprecated and replaced by the gml:descriptionReference property.
/// Element reference "http://www.opengis.net/gml/3.2":description.
    gml__StringOrRefType*                description                    0;	///< Optional element.
/// @brief The value of this property is a remote text description of the object. The xlink:href attribute of the gml:descriptionReference property references the external description.
/// Element reference "http://www.opengis.net/gml/3.2":descriptionReference.
    gml__ReferenceType*                  descriptionReference           0;	///< Optional element.
/// @brief Often, a special identifier is assigned to an object by the maintaining authority with the intention that it is used in references to the object For such cases, the codeSpace shall be provided. That identifier is usually unique either globally or within an application domain. gml:identifier is a pre-defined property for such identifiers.
/// Element reference "http://www.opengis.net/gml/3.2":identifier.
    gml__CodeWithAuthorityType*          identifier                     0;	///< Optional element.
/// @brief The gml:name property provides a label or identifier for the object, commonly a descriptive name. An object may have several names, typically assigned by different authorities. gml:name uses the gml:CodeType content model. The authority for a name is indicated by the value of its (optional) codeSpace attribute. The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace. In common usage there will be one name per authority, so a processing application may select the name from its preferred codeSpace.
/// Vector of gml__CodeType* element refs with length 0..unbounded
    std::vector<gml__CodeType*         > name                           0;
//  END OF GROUP
/// Attribute reference "http://www.opengis.net/gml/3.2":id.
/// @brief The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.
   @xsd__ID                              id                             1;	///< Required attribute.
    END OF INHERITED FROM gml__AbstractGMLType */
/*  INHERITED FROM gml__AbstractFeatureType:
/// @brief This property describes the minimum bounding box or rectangle that encloses the entire feature.
/// Element reference "http://www.opengis.net/gml/3.2":boundedBy.
    gml__BoundingShapeType*              boundedBy                      0;	///< Optional element.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="location" minOccurs="0"> with elements <priorityLocation>
   $int                                  __unionlocation                0;	///< Union _gml__union_FeatureCollectionType selector: set to SOAP_UNION__gml__union_FeatureCollectionType_<fieldname> or 0
/// Union for substitutionGroup="location"
    union _gml__union_FeatureCollectionType
    {
/// Element reference "http://www.opengis.net/gml/3.2":location.
    gml__LocationPropertyType*           location                       0;	///< Optional element.
/// Element priorityLocation of type "http://www.opengis.net/gml/3.2":PriorityLocationPropertyType.
    gml__PriorityLocationPropertyType*   priorityLocation               1;	///< Required element.
    }                                    __union_FeatureCollectionType ;
//  END OF CHOICE OF SUBSTITUTIONS
    END OF INHERITED FROM gml__AbstractFeatureType */
/*  INHERITED FROM gml__AbstractFeatureCollectionType:
/// Vector of gml__FeaturePropertyType* element refs with length 0..unbounded
    std::vector<gml__FeaturePropertyType*> featureMember                  0;
/// Element reference "http://www.opengis.net/gml/3.2":featureMembers.
    gml__FeatureArrayPropertyType*       featureMembers                 0;	///< Optional element.
    END OF INHERITED FROM gml__AbstractFeatureCollectionType */
};

/// "http://www.opengis.net/gml/3.2":DefinitionProxyType is a complexType with complexContent extension of "http://www.opengis.net/gml/3.2":DefinitionType.
/// class gml__DefinitionProxyType operations:
/// - soap_new_gml__DefinitionProxyType(soap*) allocate
/// - soap_new_gml__DefinitionProxyType(soap*, int num) allocate array
/// - soap_new_req_gml__DefinitionProxyType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__DefinitionProxyType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__DefinitionProxyType(soap*, gml__DefinitionProxyType*) deserialize from a stream
/// - int soap_write_gml__DefinitionProxyType(soap, gml__DefinitionProxyType*) serialize to a stream
class gml__DefinitionProxyType : public gml__DefinitionType
{ public:
/*  INHERITED FROM gml__DefinitionBaseType:
    END OF INHERITED FROM gml__DefinitionBaseType */
/*  INHERITED FROM gml__DefinitionType:
/// Element reference "http://www.opengis.net/gml/3.2":remarks.
    std::string*                         remarks                        0;	///< Optional element.
    END OF INHERITED FROM gml__DefinitionType */
/// Element reference "http://www.opengis.net/gml/3.2":definitionRef.
    gml__ReferenceType*                  definitionRef                  1;	///< Required element.
};

/// "http://www.isotc211.org/2005/gmd":DS_Platform_Type is a complexType with complexContent extension of "http://www.isotc211.org/2005/gmd":DS_Series_Type.
/// class gmd__DS_x005fPlatform_x005fType operations:
/// - soap_new_gmd__DS_x005fPlatform_x005fType(soap*) allocate
/// - soap_new_gmd__DS_x005fPlatform_x005fType(soap*, int num) allocate array
/// - soap_new_req_gmd__DS_x005fPlatform_x005fType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__DS_x005fPlatform_x005fType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__DS_x005fPlatform_x005fType(soap*, gmd__DS_x005fPlatform_x005fType*) deserialize from a stream
/// - int soap_write_gmd__DS_x005fPlatform_x005fType(soap, gmd__DS_x005fPlatform_x005fType*) serialize to a stream
class gmd__DS_x005fPlatform_x005fType : public gmd__DS_x005fSeries_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
/// Attribute id of type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute uuid of type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/*  INHERITED FROM gmd__AbstractDS_x005fAggregate_x005fType:
/// Vector of gmd__DS_x005fDataSet_x005fPropertyType* with length 1..unbounded
    std::vector<gmd__DS_x005fDataSet_x005fPropertyType*> composedOf                     1;
/// Vector of gmd__MD_x005fMetadata_x005fPropertyType* with length 1..unbounded
    std::vector<gmd__MD_x005fMetadata_x005fPropertyType*> seriesMetadata                 1;
/// Vector of gmd__DS_x005fAggregate_x005fPropertyType* with length 0..unbounded
    std::vector<gmd__DS_x005fAggregate_x005fPropertyType*> subset                         0;
/// Vector of gmd__DS_x005fAggregate_x005fPropertyType* with length 0..unbounded
    std::vector<gmd__DS_x005fAggregate_x005fPropertyType*> superset                       0;
    END OF INHERITED FROM gmd__AbstractDS_x005fAggregate_x005fType */
/*  INHERITED FROM gmd__DS_x005fSeries_x005fType:
    END OF INHERITED FROM gmd__DS_x005fSeries_x005fType */
};

/// "http://www.isotc211.org/2005/gmd":DS_Sensor_Type is a complexType with complexContent extension of "http://www.isotc211.org/2005/gmd":DS_Series_Type.
/// class gmd__DS_x005fSensor_x005fType operations:
/// - soap_new_gmd__DS_x005fSensor_x005fType(soap*) allocate
/// - soap_new_gmd__DS_x005fSensor_x005fType(soap*, int num) allocate array
/// - soap_new_req_gmd__DS_x005fSensor_x005fType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__DS_x005fSensor_x005fType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__DS_x005fSensor_x005fType(soap*, gmd__DS_x005fSensor_x005fType*) deserialize from a stream
/// - int soap_write_gmd__DS_x005fSensor_x005fType(soap, gmd__DS_x005fSensor_x005fType*) serialize to a stream
class gmd__DS_x005fSensor_x005fType : public gmd__DS_x005fSeries_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
/// Attribute id of type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute uuid of type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/*  INHERITED FROM gmd__AbstractDS_x005fAggregate_x005fType:
/// Vector of gmd__DS_x005fDataSet_x005fPropertyType* with length 1..unbounded
    std::vector<gmd__DS_x005fDataSet_x005fPropertyType*> composedOf                     1;
/// Vector of gmd__MD_x005fMetadata_x005fPropertyType* with length 1..unbounded
    std::vector<gmd__MD_x005fMetadata_x005fPropertyType*> seriesMetadata                 1;
/// Vector of gmd__DS_x005fAggregate_x005fPropertyType* with length 0..unbounded
    std::vector<gmd__DS_x005fAggregate_x005fPropertyType*> subset                         0;
/// Vector of gmd__DS_x005fAggregate_x005fPropertyType* with length 0..unbounded
    std::vector<gmd__DS_x005fAggregate_x005fPropertyType*> superset                       0;
    END OF INHERITED FROM gmd__AbstractDS_x005fAggregate_x005fType */
/*  INHERITED FROM gmd__DS_x005fSeries_x005fType:
    END OF INHERITED FROM gmd__DS_x005fSeries_x005fType */
};

/// "http://www.isotc211.org/2005/gmd":DS_ProductionSeries_Type is a complexType with complexContent extension of "http://www.isotc211.org/2005/gmd":DS_Series_Type.
/// class gmd__DS_x005fProductionSeries_x005fType operations:
/// - soap_new_gmd__DS_x005fProductionSeries_x005fType(soap*) allocate
/// - soap_new_gmd__DS_x005fProductionSeries_x005fType(soap*, int num) allocate array
/// - soap_new_req_gmd__DS_x005fProductionSeries_x005fType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__DS_x005fProductionSeries_x005fType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__DS_x005fProductionSeries_x005fType(soap*, gmd__DS_x005fProductionSeries_x005fType*) deserialize from a stream
/// - int soap_write_gmd__DS_x005fProductionSeries_x005fType(soap, gmd__DS_x005fProductionSeries_x005fType*) serialize to a stream
class gmd__DS_x005fProductionSeries_x005fType : public gmd__DS_x005fSeries_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
/// Attribute id of type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute uuid of type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/*  INHERITED FROM gmd__AbstractDS_x005fAggregate_x005fType:
/// Vector of gmd__DS_x005fDataSet_x005fPropertyType* with length 1..unbounded
    std::vector<gmd__DS_x005fDataSet_x005fPropertyType*> composedOf                     1;
/// Vector of gmd__MD_x005fMetadata_x005fPropertyType* with length 1..unbounded
    std::vector<gmd__MD_x005fMetadata_x005fPropertyType*> seriesMetadata                 1;
/// Vector of gmd__DS_x005fAggregate_x005fPropertyType* with length 0..unbounded
    std::vector<gmd__DS_x005fAggregate_x005fPropertyType*> subset                         0;
/// Vector of gmd__DS_x005fAggregate_x005fPropertyType* with length 0..unbounded
    std::vector<gmd__DS_x005fAggregate_x005fPropertyType*> superset                       0;
    END OF INHERITED FROM gmd__AbstractDS_x005fAggregate_x005fType */
/*  INHERITED FROM gmd__DS_x005fSeries_x005fType:
    END OF INHERITED FROM gmd__DS_x005fSeries_x005fType */
};

/// "http://www.isotc211.org/2005/gmd":DS_StereoMate_Type is a complexType with complexContent extension of "http://www.isotc211.org/2005/gmd":DS_OtherAggregate_Type.
/// class gmd__DS_x005fStereoMate_x005fType operations:
/// - soap_new_gmd__DS_x005fStereoMate_x005fType(soap*) allocate
/// - soap_new_gmd__DS_x005fStereoMate_x005fType(soap*, int num) allocate array
/// - soap_new_req_gmd__DS_x005fStereoMate_x005fType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__DS_x005fStereoMate_x005fType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__DS_x005fStereoMate_x005fType(soap*, gmd__DS_x005fStereoMate_x005fType*) deserialize from a stream
/// - int soap_write_gmd__DS_x005fStereoMate_x005fType(soap, gmd__DS_x005fStereoMate_x005fType*) serialize to a stream
class gmd__DS_x005fStereoMate_x005fType : public gmd__DS_x005fOtherAggregate_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
/// Attribute id of type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute uuid of type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/*  INHERITED FROM gmd__AbstractDS_x005fAggregate_x005fType:
/// Vector of gmd__DS_x005fDataSet_x005fPropertyType* with length 1..unbounded
    std::vector<gmd__DS_x005fDataSet_x005fPropertyType*> composedOf                     1;
/// Vector of gmd__MD_x005fMetadata_x005fPropertyType* with length 1..unbounded
    std::vector<gmd__MD_x005fMetadata_x005fPropertyType*> seriesMetadata                 1;
/// Vector of gmd__DS_x005fAggregate_x005fPropertyType* with length 0..unbounded
    std::vector<gmd__DS_x005fAggregate_x005fPropertyType*> subset                         0;
/// Vector of gmd__DS_x005fAggregate_x005fPropertyType* with length 0..unbounded
    std::vector<gmd__DS_x005fAggregate_x005fPropertyType*> superset                       0;
    END OF INHERITED FROM gmd__AbstractDS_x005fAggregate_x005fType */
/*  INHERITED FROM gmd__DS_x005fOtherAggregate_x005fType:
    END OF INHERITED FROM gmd__DS_x005fOtherAggregate_x005fType */
};

/// "http://www.isotc211.org/2005/gmd":MD_Georeferenceable_Type is a complexType with complexContent extension of "http://www.isotc211.org/2005/gmd":MD_GridSpatialRepresentation_Type.
/// class gmd__MD_x005fGeoreferenceable_x005fType operations:
/// - soap_new_gmd__MD_x005fGeoreferenceable_x005fType(soap*) allocate
/// - soap_new_gmd__MD_x005fGeoreferenceable_x005fType(soap*, int num) allocate array
/// - soap_new_req_gmd__MD_x005fGeoreferenceable_x005fType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__MD_x005fGeoreferenceable_x005fType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__MD_x005fGeoreferenceable_x005fType(soap*, gmd__MD_x005fGeoreferenceable_x005fType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fGeoreferenceable_x005fType(soap, gmd__MD_x005fGeoreferenceable_x005fType*) serialize to a stream
class gmd__MD_x005fGeoreferenceable_x005fType : public gmd__MD_x005fGridSpatialRepresentation_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
/// Attribute id of type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute uuid of type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/*  INHERITED FROM gmd__AbstractMD_x005fSpatialRepresentation_x005fType:
    END OF INHERITED FROM gmd__AbstractMD_x005fSpatialRepresentation_x005fType */
/*  INHERITED FROM gmd__MD_x005fGridSpatialRepresentation_x005fType:
/// Element numberOfDimensions of type "http://www.isotc211.org/2005/gco":Integer_PropertyType.
    gco__Integer_x005fPropertyType*      numberOfDimensions             1;	///< Required element.
/// Vector of gmd__MD_x005fDimension_x005fPropertyType* with length 0..unbounded
    std::vector<gmd__MD_x005fDimension_x005fPropertyType*> axisDimensionProperties        0;
/// Element cellGeometry of type "http://www.isotc211.org/2005/gmd":MD_CellGeometryCode_PropertyType.
    gmd__MD_x005fCellGeometryCode_x005fPropertyType*  cellGeometry                   1;	///< Required element.
/// Element transformationParameterAvailability of type "http://www.isotc211.org/2005/gco":Boolean_PropertyType.
    gco__Boolean_x005fPropertyType*      transformationParameterAvailability 1;	///< Required element.
    END OF INHERITED FROM gmd__MD_x005fGridSpatialRepresentation_x005fType */
/// Element controlPointAvailability of type "http://www.isotc211.org/2005/gco":Boolean_PropertyType.
    gco__Boolean_x005fPropertyType*      controlPointAvailability       1;	///< Required element.
/// Element orientationParameterAvailability of type "http://www.isotc211.org/2005/gco":Boolean_PropertyType.
    gco__Boolean_x005fPropertyType*      orientationParameterAvailability 1;	///< Required element.
/// Element orientationParameterDescription of type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  orientationParameterDescription 0;	///< Optional element.
/// Element georeferencedParameters of type "http://www.isotc211.org/2005/gco":Record_PropertyType.
    gco__Record_x005fPropertyType*       georeferencedParameters        1;	///< Required element.
/// Vector of gmd__CI_x005fCitation_x005fPropertyType* with length 0..unbounded
    std::vector<gmd__CI_x005fCitation_x005fPropertyType*> parameterCitation              0;
};

/// "http://www.isotc211.org/2005/gmd":MD_Georectified_Type is a complexType with complexContent extension of "http://www.isotc211.org/2005/gmd":MD_GridSpatialRepresentation_Type.
/// class gmd__MD_x005fGeorectified_x005fType operations:
/// - soap_new_gmd__MD_x005fGeorectified_x005fType(soap*) allocate
/// - soap_new_gmd__MD_x005fGeorectified_x005fType(soap*, int num) allocate array
/// - soap_new_req_gmd__MD_x005fGeorectified_x005fType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__MD_x005fGeorectified_x005fType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__MD_x005fGeorectified_x005fType(soap*, gmd__MD_x005fGeorectified_x005fType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fGeorectified_x005fType(soap, gmd__MD_x005fGeorectified_x005fType*) serialize to a stream
class gmd__MD_x005fGeorectified_x005fType : public gmd__MD_x005fGridSpatialRepresentation_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
/// Attribute id of type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute uuid of type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/*  INHERITED FROM gmd__AbstractMD_x005fSpatialRepresentation_x005fType:
    END OF INHERITED FROM gmd__AbstractMD_x005fSpatialRepresentation_x005fType */
/*  INHERITED FROM gmd__MD_x005fGridSpatialRepresentation_x005fType:
/// Element numberOfDimensions of type "http://www.isotc211.org/2005/gco":Integer_PropertyType.
    gco__Integer_x005fPropertyType*      numberOfDimensions             1;	///< Required element.
/// Vector of gmd__MD_x005fDimension_x005fPropertyType* with length 0..unbounded
    std::vector<gmd__MD_x005fDimension_x005fPropertyType*> axisDimensionProperties        0;
/// Element cellGeometry of type "http://www.isotc211.org/2005/gmd":MD_CellGeometryCode_PropertyType.
    gmd__MD_x005fCellGeometryCode_x005fPropertyType*  cellGeometry                   1;	///< Required element.
/// Element transformationParameterAvailability of type "http://www.isotc211.org/2005/gco":Boolean_PropertyType.
    gco__Boolean_x005fPropertyType*      transformationParameterAvailability 1;	///< Required element.
    END OF INHERITED FROM gmd__MD_x005fGridSpatialRepresentation_x005fType */
/// Element checkPointAvailability of type "http://www.isotc211.org/2005/gco":Boolean_PropertyType.
    gco__Boolean_x005fPropertyType*      checkPointAvailability         1;	///< Required element.
/// Element checkPointDescription of type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  checkPointDescription          0;	///< Optional element.
/// Vector of gss__GM_x005fPoint_x005fPropertyType* with length 0..unbounded
    std::vector<gss__GM_x005fPoint_x005fPropertyType*> cornerPoints                   0;
/// Element centerPoint of type "http://www.isotc211.org/2005/gss":GM_Point_PropertyType.
    gss__GM_x005fPoint_x005fPropertyType*  centerPoint                    0;	///< Optional element.
/// Element pointInPixel of type "http://www.isotc211.org/2005/gmd":MD_PixelOrientationCode_PropertyType.
    gmd__MD_x005fPixelOrientationCode_x005fPropertyType*  pointInPixel                   1;	///< Required element.
/// Element transformationDimensionDescription of type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  transformationDimensionDescription 0;	///< Optional element.
/// Vector of gco__CharacterString_x005fPropertyType* with length 0..2
    std::vector<gco__CharacterString_x005fPropertyType*> transformationDimensionMapping 0:2;
};

/// "http://www.isotc211.org/2005/gmd":MD_ImageDescription_Type is a complexType with complexContent extension of "http://www.isotc211.org/2005/gmd":MD_CoverageDescription_Type.
/// @brief Information about an image's suitability for use
/// class gmd__MD_x005fImageDescription_x005fType operations:
/// - soap_new_gmd__MD_x005fImageDescription_x005fType(soap*) allocate
/// - soap_new_gmd__MD_x005fImageDescription_x005fType(soap*, int num) allocate array
/// - soap_new_req_gmd__MD_x005fImageDescription_x005fType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__MD_x005fImageDescription_x005fType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__MD_x005fImageDescription_x005fType(soap*, gmd__MD_x005fImageDescription_x005fType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fImageDescription_x005fType(soap, gmd__MD_x005fImageDescription_x005fType*) serialize to a stream
class gmd__MD_x005fImageDescription_x005fType : public gmd__MD_x005fCoverageDescription_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
/// Attribute id of type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute uuid of type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/*  INHERITED FROM gmd__AbstractMD_x005fContentInformation_x005fType:
    END OF INHERITED FROM gmd__AbstractMD_x005fContentInformation_x005fType */
/*  INHERITED FROM gmd__MD_x005fCoverageDescription_x005fType:
/// Element attributeDescription of type "http://www.isotc211.org/2005/gco":RecordType_PropertyType.
    gco__RecordType_x005fPropertyType*   attributeDescription           1;	///< Required element.
/// Element contentType of type "http://www.isotc211.org/2005/gmd":MD_CoverageContentTypeCode_PropertyType.
    gmd__MD_x005fCoverageContentTypeCode_x005fPropertyType*  contentType                    1;	///< Required element.
/// Vector of gmd__MD_x005fRangeDimension_x005fPropertyType* with length 0..unbounded
    std::vector<gmd__MD_x005fRangeDimension_x005fPropertyType*> dimension                      0;
    END OF INHERITED FROM gmd__MD_x005fCoverageDescription_x005fType */
/// Element illuminationElevationAngle of type "http://www.isotc211.org/2005/gco":Real_PropertyType.
    gco__Real_x005fPropertyType*         illuminationElevationAngle     0;	///< Optional element.
/// Element illuminationAzimuthAngle of type "http://www.isotc211.org/2005/gco":Real_PropertyType.
    gco__Real_x005fPropertyType*         illuminationAzimuthAngle       0;	///< Optional element.
/// Element imagingCondition of type "http://www.isotc211.org/2005/gmd":MD_ImagingConditionCode_PropertyType.
    gmd__MD_x005fImagingConditionCode_x005fPropertyType*  imagingCondition               0;	///< Optional element.
/// Element imageQualityCode of type "http://www.isotc211.org/2005/gmd":MD_Identifier_PropertyType.
    gmd__MD_x005fIdentifier_x005fPropertyType*  imageQualityCode               0;	///< Optional element.
/// Element cloudCoverPercentage of type "http://www.isotc211.org/2005/gco":Real_PropertyType.
    gco__Real_x005fPropertyType*         cloudCoverPercentage           0;	///< Optional element.
/// Element processingLevelCode of type "http://www.isotc211.org/2005/gmd":MD_Identifier_PropertyType.
    gmd__MD_x005fIdentifier_x005fPropertyType*  processingLevelCode            0;	///< Optional element.
/// Element compressionGenerationQuantity of type "http://www.isotc211.org/2005/gco":Integer_PropertyType.
    gco__Integer_x005fPropertyType*      compressionGenerationQuantity  0;	///< Optional element.
/// Element triangulationIndicator of type "http://www.isotc211.org/2005/gco":Boolean_PropertyType.
    gco__Boolean_x005fPropertyType*      triangulationIndicator         0;	///< Optional element.
/// Element radiometricCalibrationDataAvailability of type "http://www.isotc211.org/2005/gco":Boolean_PropertyType.
    gco__Boolean_x005fPropertyType*      radiometricCalibrationDataAvailability 0;	///< Optional element.
/// Element cameraCalibrationInformationAvailability of type "http://www.isotc211.org/2005/gco":Boolean_PropertyType.
    gco__Boolean_x005fPropertyType*      cameraCalibrationInformationAvailability 0;	///< Optional element.
/// Element filmDistortionInformationAvailability of type "http://www.isotc211.org/2005/gco":Boolean_PropertyType.
    gco__Boolean_x005fPropertyType*      filmDistortionInformationAvailability 0;	///< Optional element.
/// Element lensDistortionInformationAvailability of type "http://www.isotc211.org/2005/gco":Boolean_PropertyType.
    gco__Boolean_x005fPropertyType*      lensDistortionInformationAvailability 0;	///< Optional element.
};

/// "http://www.isotc211.org/2005/gmd":DQ_TemporalValidity_Type is a complexType with complexContent extension of "http://www.isotc211.org/2005/gmd":AbstractDQ_TemporalAccuracy_Type.
/// class gmd__DQ_x005fTemporalValidity_x005fType operations:
/// - soap_new_gmd__DQ_x005fTemporalValidity_x005fType(soap*) allocate
/// - soap_new_gmd__DQ_x005fTemporalValidity_x005fType(soap*, int num) allocate array
/// - soap_new_req_gmd__DQ_x005fTemporalValidity_x005fType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__DQ_x005fTemporalValidity_x005fType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__DQ_x005fTemporalValidity_x005fType(soap*, gmd__DQ_x005fTemporalValidity_x005fType*) deserialize from a stream
/// - int soap_write_gmd__DQ_x005fTemporalValidity_x005fType(soap, gmd__DQ_x005fTemporalValidity_x005fType*) serialize to a stream
class gmd__DQ_x005fTemporalValidity_x005fType : public gmd__AbstractDQ_x005fTemporalAccuracy_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
/// Attribute id of type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute uuid of type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/*  INHERITED FROM gmd__AbstractDQ_x005fElement_x005fType:
/// Vector of gco__CharacterString_x005fPropertyType* with length 0..unbounded
    std::vector<gco__CharacterString_x005fPropertyType*> nameOfMeasure                  0;
/// Element measureIdentification of type "http://www.isotc211.org/2005/gmd":MD_Identifier_PropertyType.
    gmd__MD_x005fIdentifier_x005fPropertyType*  measureIdentification          0;	///< Optional element.
/// Element measureDescription of type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  measureDescription             0;	///< Optional element.
/// Element evaluationMethodType of type "http://www.isotc211.org/2005/gmd":DQ_EvaluationMethodTypeCode_PropertyType.
    gmd__DQ_x005fEvaluationMethodTypeCode_x005fPropertyType*  evaluationMethodType           0;	///< Optional element.
/// Element evaluationMethodDescription of type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  evaluationMethodDescription    0;	///< Optional element.
/// Element evaluationProcedure of type "http://www.isotc211.org/2005/gmd":CI_Citation_PropertyType.
    gmd__CI_x005fCitation_x005fPropertyType*  evaluationProcedure            0;	///< Optional element.
/// Vector of gco__DateTime_x005fPropertyType* with length 0..unbounded
    std::vector<gco__DateTime_x005fPropertyType*> dateTime                       0;
/// Vector of gmd__DQ_x005fResult_x005fPropertyType* with length 1..2
    std::vector<gmd__DQ_x005fResult_x005fPropertyType*> result                         1:2;
    END OF INHERITED FROM gmd__AbstractDQ_x005fElement_x005fType */
/*  INHERITED FROM gmd__AbstractDQ_x005fTemporalAccuracy_x005fType:
    END OF INHERITED FROM gmd__AbstractDQ_x005fTemporalAccuracy_x005fType */
};

/// "http://www.isotc211.org/2005/gmd":DQ_TemporalConsistency_Type is a complexType with complexContent extension of "http://www.isotc211.org/2005/gmd":AbstractDQ_TemporalAccuracy_Type.
/// class gmd__DQ_x005fTemporalConsistency_x005fType operations:
/// - soap_new_gmd__DQ_x005fTemporalConsistency_x005fType(soap*) allocate
/// - soap_new_gmd__DQ_x005fTemporalConsistency_x005fType(soap*, int num) allocate array
/// - soap_new_req_gmd__DQ_x005fTemporalConsistency_x005fType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__DQ_x005fTemporalConsistency_x005fType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__DQ_x005fTemporalConsistency_x005fType(soap*, gmd__DQ_x005fTemporalConsistency_x005fType*) deserialize from a stream
/// - int soap_write_gmd__DQ_x005fTemporalConsistency_x005fType(soap, gmd__DQ_x005fTemporalConsistency_x005fType*) serialize to a stream
class gmd__DQ_x005fTemporalConsistency_x005fType : public gmd__AbstractDQ_x005fTemporalAccuracy_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
/// Attribute id of type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute uuid of type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/*  INHERITED FROM gmd__AbstractDQ_x005fElement_x005fType:
/// Vector of gco__CharacterString_x005fPropertyType* with length 0..unbounded
    std::vector<gco__CharacterString_x005fPropertyType*> nameOfMeasure                  0;
/// Element measureIdentification of type "http://www.isotc211.org/2005/gmd":MD_Identifier_PropertyType.
    gmd__MD_x005fIdentifier_x005fPropertyType*  measureIdentification          0;	///< Optional element.
/// Element measureDescription of type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  measureDescription             0;	///< Optional element.
/// Element evaluationMethodType of type "http://www.isotc211.org/2005/gmd":DQ_EvaluationMethodTypeCode_PropertyType.
    gmd__DQ_x005fEvaluationMethodTypeCode_x005fPropertyType*  evaluationMethodType           0;	///< Optional element.
/// Element evaluationMethodDescription of type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  evaluationMethodDescription    0;	///< Optional element.
/// Element evaluationProcedure of type "http://www.isotc211.org/2005/gmd":CI_Citation_PropertyType.
    gmd__CI_x005fCitation_x005fPropertyType*  evaluationProcedure            0;	///< Optional element.
/// Vector of gco__DateTime_x005fPropertyType* with length 0..unbounded
    std::vector<gco__DateTime_x005fPropertyType*> dateTime                       0;
/// Vector of gmd__DQ_x005fResult_x005fPropertyType* with length 1..2
    std::vector<gmd__DQ_x005fResult_x005fPropertyType*> result                         1:2;
    END OF INHERITED FROM gmd__AbstractDQ_x005fElement_x005fType */
/*  INHERITED FROM gmd__AbstractDQ_x005fTemporalAccuracy_x005fType:
    END OF INHERITED FROM gmd__AbstractDQ_x005fTemporalAccuracy_x005fType */
};

/// "http://www.isotc211.org/2005/gmd":DQ_AccuracyOfATimeMeasurement_Type is a complexType with complexContent extension of "http://www.isotc211.org/2005/gmd":AbstractDQ_TemporalAccuracy_Type.
/// class gmd__DQ_x005fAccuracyOfATimeMeasurement_x005fType operations:
/// - soap_new_gmd__DQ_x005fAccuracyOfATimeMeasurement_x005fType(soap*) allocate
/// - soap_new_gmd__DQ_x005fAccuracyOfATimeMeasurement_x005fType(soap*, int num) allocate array
/// - soap_new_req_gmd__DQ_x005fAccuracyOfATimeMeasurement_x005fType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__DQ_x005fAccuracyOfATimeMeasurement_x005fType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__DQ_x005fAccuracyOfATimeMeasurement_x005fType(soap*, gmd__DQ_x005fAccuracyOfATimeMeasurement_x005fType*) deserialize from a stream
/// - int soap_write_gmd__DQ_x005fAccuracyOfATimeMeasurement_x005fType(soap, gmd__DQ_x005fAccuracyOfATimeMeasurement_x005fType*) serialize to a stream
class gmd__DQ_x005fAccuracyOfATimeMeasurement_x005fType : public gmd__AbstractDQ_x005fTemporalAccuracy_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
/// Attribute id of type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute uuid of type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/*  INHERITED FROM gmd__AbstractDQ_x005fElement_x005fType:
/// Vector of gco__CharacterString_x005fPropertyType* with length 0..unbounded
    std::vector<gco__CharacterString_x005fPropertyType*> nameOfMeasure                  0;
/// Element measureIdentification of type "http://www.isotc211.org/2005/gmd":MD_Identifier_PropertyType.
    gmd__MD_x005fIdentifier_x005fPropertyType*  measureIdentification          0;	///< Optional element.
/// Element measureDescription of type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  measureDescription             0;	///< Optional element.
/// Element evaluationMethodType of type "http://www.isotc211.org/2005/gmd":DQ_EvaluationMethodTypeCode_PropertyType.
    gmd__DQ_x005fEvaluationMethodTypeCode_x005fPropertyType*  evaluationMethodType           0;	///< Optional element.
/// Element evaluationMethodDescription of type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  evaluationMethodDescription    0;	///< Optional element.
/// Element evaluationProcedure of type "http://www.isotc211.org/2005/gmd":CI_Citation_PropertyType.
    gmd__CI_x005fCitation_x005fPropertyType*  evaluationProcedure            0;	///< Optional element.
/// Vector of gco__DateTime_x005fPropertyType* with length 0..unbounded
    std::vector<gco__DateTime_x005fPropertyType*> dateTime                       0;
/// Vector of gmd__DQ_x005fResult_x005fPropertyType* with length 1..2
    std::vector<gmd__DQ_x005fResult_x005fPropertyType*> result                         1:2;
    END OF INHERITED FROM gmd__AbstractDQ_x005fElement_x005fType */
/*  INHERITED FROM gmd__AbstractDQ_x005fTemporalAccuracy_x005fType:
    END OF INHERITED FROM gmd__AbstractDQ_x005fTemporalAccuracy_x005fType */
};

/// "http://www.isotc211.org/2005/gmd":DQ_QuantitativeAttributeAccuracy_Type is a complexType with complexContent extension of "http://www.isotc211.org/2005/gmd":AbstractDQ_ThematicAccuracy_Type.
/// class gmd__DQ_x005fQuantitativeAttributeAccuracy_x005fType operations:
/// - soap_new_gmd__DQ_x005fQuantitativeAttributeAccuracy_x005fType(soap*) allocate
/// - soap_new_gmd__DQ_x005fQuantitativeAttributeAccuracy_x005fType(soap*, int num) allocate array
/// - soap_new_req_gmd__DQ_x005fQuantitativeAttributeAccuracy_x005fType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__DQ_x005fQuantitativeAttributeAccuracy_x005fType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__DQ_x005fQuantitativeAttributeAccuracy_x005fType(soap*, gmd__DQ_x005fQuantitativeAttributeAccuracy_x005fType*) deserialize from a stream
/// - int soap_write_gmd__DQ_x005fQuantitativeAttributeAccuracy_x005fType(soap, gmd__DQ_x005fQuantitativeAttributeAccuracy_x005fType*) serialize to a stream
class gmd__DQ_x005fQuantitativeAttributeAccuracy_x005fType : public gmd__AbstractDQ_x005fThematicAccuracy_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
/// Attribute id of type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute uuid of type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/*  INHERITED FROM gmd__AbstractDQ_x005fElement_x005fType:
/// Vector of gco__CharacterString_x005fPropertyType* with length 0..unbounded
    std::vector<gco__CharacterString_x005fPropertyType*> nameOfMeasure                  0;
/// Element measureIdentification of type "http://www.isotc211.org/2005/gmd":MD_Identifier_PropertyType.
    gmd__MD_x005fIdentifier_x005fPropertyType*  measureIdentification          0;	///< Optional element.
/// Element measureDescription of type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  measureDescription             0;	///< Optional element.
/// Element evaluationMethodType of type "http://www.isotc211.org/2005/gmd":DQ_EvaluationMethodTypeCode_PropertyType.
    gmd__DQ_x005fEvaluationMethodTypeCode_x005fPropertyType*  evaluationMethodType           0;	///< Optional element.
/// Element evaluationMethodDescription of type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  evaluationMethodDescription    0;	///< Optional element.
/// Element evaluationProcedure of type "http://www.isotc211.org/2005/gmd":CI_Citation_PropertyType.
    gmd__CI_x005fCitation_x005fPropertyType*  evaluationProcedure            0;	///< Optional element.
/// Vector of gco__DateTime_x005fPropertyType* with length 0..unbounded
    std::vector<gco__DateTime_x005fPropertyType*> dateTime                       0;
/// Vector of gmd__DQ_x005fResult_x005fPropertyType* with length 1..2
    std::vector<gmd__DQ_x005fResult_x005fPropertyType*> result                         1:2;
    END OF INHERITED FROM gmd__AbstractDQ_x005fElement_x005fType */
/*  INHERITED FROM gmd__AbstractDQ_x005fThematicAccuracy_x005fType:
    END OF INHERITED FROM gmd__AbstractDQ_x005fThematicAccuracy_x005fType */
};

/// "http://www.isotc211.org/2005/gmd":DQ_NonQuantitativeAttributeAccuracy_Type is a complexType with complexContent extension of "http://www.isotc211.org/2005/gmd":AbstractDQ_ThematicAccuracy_Type.
/// class gmd__DQ_x005fNonQuantitativeAttributeAccuracy_x005fType operations:
/// - soap_new_gmd__DQ_x005fNonQuantitativeAttributeAccuracy_x005fType(soap*) allocate
/// - soap_new_gmd__DQ_x005fNonQuantitativeAttributeAccuracy_x005fType(soap*, int num) allocate array
/// - soap_new_req_gmd__DQ_x005fNonQuantitativeAttributeAccuracy_x005fType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__DQ_x005fNonQuantitativeAttributeAccuracy_x005fType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__DQ_x005fNonQuantitativeAttributeAccuracy_x005fType(soap*, gmd__DQ_x005fNonQuantitativeAttributeAccuracy_x005fType*) deserialize from a stream
/// - int soap_write_gmd__DQ_x005fNonQuantitativeAttributeAccuracy_x005fType(soap, gmd__DQ_x005fNonQuantitativeAttributeAccuracy_x005fType*) serialize to a stream
class gmd__DQ_x005fNonQuantitativeAttributeAccuracy_x005fType : public gmd__AbstractDQ_x005fThematicAccuracy_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
/// Attribute id of type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute uuid of type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/*  INHERITED FROM gmd__AbstractDQ_x005fElement_x005fType:
/// Vector of gco__CharacterString_x005fPropertyType* with length 0..unbounded
    std::vector<gco__CharacterString_x005fPropertyType*> nameOfMeasure                  0;
/// Element measureIdentification of type "http://www.isotc211.org/2005/gmd":MD_Identifier_PropertyType.
    gmd__MD_x005fIdentifier_x005fPropertyType*  measureIdentification          0;	///< Optional element.
/// Element measureDescription of type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  measureDescription             0;	///< Optional element.
/// Element evaluationMethodType of type "http://www.isotc211.org/2005/gmd":DQ_EvaluationMethodTypeCode_PropertyType.
    gmd__DQ_x005fEvaluationMethodTypeCode_x005fPropertyType*  evaluationMethodType           0;	///< Optional element.
/// Element evaluationMethodDescription of type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  evaluationMethodDescription    0;	///< Optional element.
/// Element evaluationProcedure of type "http://www.isotc211.org/2005/gmd":CI_Citation_PropertyType.
    gmd__CI_x005fCitation_x005fPropertyType*  evaluationProcedure            0;	///< Optional element.
/// Vector of gco__DateTime_x005fPropertyType* with length 0..unbounded
    std::vector<gco__DateTime_x005fPropertyType*> dateTime                       0;
/// Vector of gmd__DQ_x005fResult_x005fPropertyType* with length 1..2
    std::vector<gmd__DQ_x005fResult_x005fPropertyType*> result                         1:2;
    END OF INHERITED FROM gmd__AbstractDQ_x005fElement_x005fType */
/*  INHERITED FROM gmd__AbstractDQ_x005fThematicAccuracy_x005fType:
    END OF INHERITED FROM gmd__AbstractDQ_x005fThematicAccuracy_x005fType */
};

/// "http://www.isotc211.org/2005/gmd":DQ_ThematicClassificationCorrectness_Type is a complexType with complexContent extension of "http://www.isotc211.org/2005/gmd":AbstractDQ_ThematicAccuracy_Type.
/// class gmd__DQ_x005fThematicClassificationCorrectness_x005fType operations:
/// - soap_new_gmd__DQ_x005fThematicClassificationCorrectness_x005fType(soap*) allocate
/// - soap_new_gmd__DQ_x005fThematicClassificationCorrectness_x005fType(soap*, int num) allocate array
/// - soap_new_req_gmd__DQ_x005fThematicClassificationCorrectness_x005fType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__DQ_x005fThematicClassificationCorrectness_x005fType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__DQ_x005fThematicClassificationCorrectness_x005fType(soap*, gmd__DQ_x005fThematicClassificationCorrectness_x005fType*) deserialize from a stream
/// - int soap_write_gmd__DQ_x005fThematicClassificationCorrectness_x005fType(soap, gmd__DQ_x005fThematicClassificationCorrectness_x005fType*) serialize to a stream
class gmd__DQ_x005fThematicClassificationCorrectness_x005fType : public gmd__AbstractDQ_x005fThematicAccuracy_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
/// Attribute id of type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute uuid of type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/*  INHERITED FROM gmd__AbstractDQ_x005fElement_x005fType:
/// Vector of gco__CharacterString_x005fPropertyType* with length 0..unbounded
    std::vector<gco__CharacterString_x005fPropertyType*> nameOfMeasure                  0;
/// Element measureIdentification of type "http://www.isotc211.org/2005/gmd":MD_Identifier_PropertyType.
    gmd__MD_x005fIdentifier_x005fPropertyType*  measureIdentification          0;	///< Optional element.
/// Element measureDescription of type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  measureDescription             0;	///< Optional element.
/// Element evaluationMethodType of type "http://www.isotc211.org/2005/gmd":DQ_EvaluationMethodTypeCode_PropertyType.
    gmd__DQ_x005fEvaluationMethodTypeCode_x005fPropertyType*  evaluationMethodType           0;	///< Optional element.
/// Element evaluationMethodDescription of type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  evaluationMethodDescription    0;	///< Optional element.
/// Element evaluationProcedure of type "http://www.isotc211.org/2005/gmd":CI_Citation_PropertyType.
    gmd__CI_x005fCitation_x005fPropertyType*  evaluationProcedure            0;	///< Optional element.
/// Vector of gco__DateTime_x005fPropertyType* with length 0..unbounded
    std::vector<gco__DateTime_x005fPropertyType*> dateTime                       0;
/// Vector of gmd__DQ_x005fResult_x005fPropertyType* with length 1..2
    std::vector<gmd__DQ_x005fResult_x005fPropertyType*> result                         1:2;
    END OF INHERITED FROM gmd__AbstractDQ_x005fElement_x005fType */
/*  INHERITED FROM gmd__AbstractDQ_x005fThematicAccuracy_x005fType:
    END OF INHERITED FROM gmd__AbstractDQ_x005fThematicAccuracy_x005fType */
};

/// "http://www.isotc211.org/2005/gmd":DQ_RelativeInternalPositionalAccuracy_Type is a complexType with complexContent extension of "http://www.isotc211.org/2005/gmd":AbstractDQ_PositionalAccuracy_Type.
/// class gmd__DQ_x005fRelativeInternalPositionalAccuracy_x005fType operations:
/// - soap_new_gmd__DQ_x005fRelativeInternalPositionalAccuracy_x005fType(soap*) allocate
/// - soap_new_gmd__DQ_x005fRelativeInternalPositionalAccuracy_x005fType(soap*, int num) allocate array
/// - soap_new_req_gmd__DQ_x005fRelativeInternalPositionalAccuracy_x005fType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__DQ_x005fRelativeInternalPositionalAccuracy_x005fType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__DQ_x005fRelativeInternalPositionalAccuracy_x005fType(soap*, gmd__DQ_x005fRelativeInternalPositionalAccuracy_x005fType*) deserialize from a stream
/// - int soap_write_gmd__DQ_x005fRelativeInternalPositionalAccuracy_x005fType(soap, gmd__DQ_x005fRelativeInternalPositionalAccuracy_x005fType*) serialize to a stream
class gmd__DQ_x005fRelativeInternalPositionalAccuracy_x005fType : public gmd__AbstractDQ_x005fPositionalAccuracy_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
/// Attribute id of type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute uuid of type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/*  INHERITED FROM gmd__AbstractDQ_x005fElement_x005fType:
/// Vector of gco__CharacterString_x005fPropertyType* with length 0..unbounded
    std::vector<gco__CharacterString_x005fPropertyType*> nameOfMeasure                  0;
/// Element measureIdentification of type "http://www.isotc211.org/2005/gmd":MD_Identifier_PropertyType.
    gmd__MD_x005fIdentifier_x005fPropertyType*  measureIdentification          0;	///< Optional element.
/// Element measureDescription of type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  measureDescription             0;	///< Optional element.
/// Element evaluationMethodType of type "http://www.isotc211.org/2005/gmd":DQ_EvaluationMethodTypeCode_PropertyType.
    gmd__DQ_x005fEvaluationMethodTypeCode_x005fPropertyType*  evaluationMethodType           0;	///< Optional element.
/// Element evaluationMethodDescription of type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  evaluationMethodDescription    0;	///< Optional element.
/// Element evaluationProcedure of type "http://www.isotc211.org/2005/gmd":CI_Citation_PropertyType.
    gmd__CI_x005fCitation_x005fPropertyType*  evaluationProcedure            0;	///< Optional element.
/// Vector of gco__DateTime_x005fPropertyType* with length 0..unbounded
    std::vector<gco__DateTime_x005fPropertyType*> dateTime                       0;
/// Vector of gmd__DQ_x005fResult_x005fPropertyType* with length 1..2
    std::vector<gmd__DQ_x005fResult_x005fPropertyType*> result                         1:2;
    END OF INHERITED FROM gmd__AbstractDQ_x005fElement_x005fType */
/*  INHERITED FROM gmd__AbstractDQ_x005fPositionalAccuracy_x005fType:
    END OF INHERITED FROM gmd__AbstractDQ_x005fPositionalAccuracy_x005fType */
};

/// "http://www.isotc211.org/2005/gmd":DQ_GriddedDataPositionalAccuracy_Type is a complexType with complexContent extension of "http://www.isotc211.org/2005/gmd":AbstractDQ_PositionalAccuracy_Type.
/// class gmd__DQ_x005fGriddedDataPositionalAccuracy_x005fType operations:
/// - soap_new_gmd__DQ_x005fGriddedDataPositionalAccuracy_x005fType(soap*) allocate
/// - soap_new_gmd__DQ_x005fGriddedDataPositionalAccuracy_x005fType(soap*, int num) allocate array
/// - soap_new_req_gmd__DQ_x005fGriddedDataPositionalAccuracy_x005fType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__DQ_x005fGriddedDataPositionalAccuracy_x005fType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__DQ_x005fGriddedDataPositionalAccuracy_x005fType(soap*, gmd__DQ_x005fGriddedDataPositionalAccuracy_x005fType*) deserialize from a stream
/// - int soap_write_gmd__DQ_x005fGriddedDataPositionalAccuracy_x005fType(soap, gmd__DQ_x005fGriddedDataPositionalAccuracy_x005fType*) serialize to a stream
class gmd__DQ_x005fGriddedDataPositionalAccuracy_x005fType : public gmd__AbstractDQ_x005fPositionalAccuracy_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
/// Attribute id of type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute uuid of type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/*  INHERITED FROM gmd__AbstractDQ_x005fElement_x005fType:
/// Vector of gco__CharacterString_x005fPropertyType* with length 0..unbounded
    std::vector<gco__CharacterString_x005fPropertyType*> nameOfMeasure                  0;
/// Element measureIdentification of type "http://www.isotc211.org/2005/gmd":MD_Identifier_PropertyType.
    gmd__MD_x005fIdentifier_x005fPropertyType*  measureIdentification          0;	///< Optional element.
/// Element measureDescription of type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  measureDescription             0;	///< Optional element.
/// Element evaluationMethodType of type "http://www.isotc211.org/2005/gmd":DQ_EvaluationMethodTypeCode_PropertyType.
    gmd__DQ_x005fEvaluationMethodTypeCode_x005fPropertyType*  evaluationMethodType           0;	///< Optional element.
/// Element evaluationMethodDescription of type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  evaluationMethodDescription    0;	///< Optional element.
/// Element evaluationProcedure of type "http://www.isotc211.org/2005/gmd":CI_Citation_PropertyType.
    gmd__CI_x005fCitation_x005fPropertyType*  evaluationProcedure            0;	///< Optional element.
/// Vector of gco__DateTime_x005fPropertyType* with length 0..unbounded
    std::vector<gco__DateTime_x005fPropertyType*> dateTime                       0;
/// Vector of gmd__DQ_x005fResult_x005fPropertyType* with length 1..2
    std::vector<gmd__DQ_x005fResult_x005fPropertyType*> result                         1:2;
    END OF INHERITED FROM gmd__AbstractDQ_x005fElement_x005fType */
/*  INHERITED FROM gmd__AbstractDQ_x005fPositionalAccuracy_x005fType:
    END OF INHERITED FROM gmd__AbstractDQ_x005fPositionalAccuracy_x005fType */
};

/// "http://www.isotc211.org/2005/gmd":DQ_AbsoluteExternalPositionalAccuracy_Type is a complexType with complexContent extension of "http://www.isotc211.org/2005/gmd":AbstractDQ_PositionalAccuracy_Type.
/// class gmd__DQ_x005fAbsoluteExternalPositionalAccuracy_x005fType operations:
/// - soap_new_gmd__DQ_x005fAbsoluteExternalPositionalAccuracy_x005fType(soap*) allocate
/// - soap_new_gmd__DQ_x005fAbsoluteExternalPositionalAccuracy_x005fType(soap*, int num) allocate array
/// - soap_new_req_gmd__DQ_x005fAbsoluteExternalPositionalAccuracy_x005fType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__DQ_x005fAbsoluteExternalPositionalAccuracy_x005fType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__DQ_x005fAbsoluteExternalPositionalAccuracy_x005fType(soap*, gmd__DQ_x005fAbsoluteExternalPositionalAccuracy_x005fType*) deserialize from a stream
/// - int soap_write_gmd__DQ_x005fAbsoluteExternalPositionalAccuracy_x005fType(soap, gmd__DQ_x005fAbsoluteExternalPositionalAccuracy_x005fType*) serialize to a stream
class gmd__DQ_x005fAbsoluteExternalPositionalAccuracy_x005fType : public gmd__AbstractDQ_x005fPositionalAccuracy_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
/// Attribute id of type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute uuid of type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/*  INHERITED FROM gmd__AbstractDQ_x005fElement_x005fType:
/// Vector of gco__CharacterString_x005fPropertyType* with length 0..unbounded
    std::vector<gco__CharacterString_x005fPropertyType*> nameOfMeasure                  0;
/// Element measureIdentification of type "http://www.isotc211.org/2005/gmd":MD_Identifier_PropertyType.
    gmd__MD_x005fIdentifier_x005fPropertyType*  measureIdentification          0;	///< Optional element.
/// Element measureDescription of type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  measureDescription             0;	///< Optional element.
/// Element evaluationMethodType of type "http://www.isotc211.org/2005/gmd":DQ_EvaluationMethodTypeCode_PropertyType.
    gmd__DQ_x005fEvaluationMethodTypeCode_x005fPropertyType*  evaluationMethodType           0;	///< Optional element.
/// Element evaluationMethodDescription of type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  evaluationMethodDescription    0;	///< Optional element.
/// Element evaluationProcedure of type "http://www.isotc211.org/2005/gmd":CI_Citation_PropertyType.
    gmd__CI_x005fCitation_x005fPropertyType*  evaluationProcedure            0;	///< Optional element.
/// Vector of gco__DateTime_x005fPropertyType* with length 0..unbounded
    std::vector<gco__DateTime_x005fPropertyType*> dateTime                       0;
/// Vector of gmd__DQ_x005fResult_x005fPropertyType* with length 1..2
    std::vector<gmd__DQ_x005fResult_x005fPropertyType*> result                         1:2;
    END OF INHERITED FROM gmd__AbstractDQ_x005fElement_x005fType */
/*  INHERITED FROM gmd__AbstractDQ_x005fPositionalAccuracy_x005fType:
    END OF INHERITED FROM gmd__AbstractDQ_x005fPositionalAccuracy_x005fType */
};

/// "http://www.isotc211.org/2005/gmd":DQ_TopologicalConsistency_Type is a complexType with complexContent extension of "http://www.isotc211.org/2005/gmd":AbstractDQ_LogicalConsistency_Type.
/// class gmd__DQ_x005fTopologicalConsistency_x005fType operations:
/// - soap_new_gmd__DQ_x005fTopologicalConsistency_x005fType(soap*) allocate
/// - soap_new_gmd__DQ_x005fTopologicalConsistency_x005fType(soap*, int num) allocate array
/// - soap_new_req_gmd__DQ_x005fTopologicalConsistency_x005fType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__DQ_x005fTopologicalConsistency_x005fType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__DQ_x005fTopologicalConsistency_x005fType(soap*, gmd__DQ_x005fTopologicalConsistency_x005fType*) deserialize from a stream
/// - int soap_write_gmd__DQ_x005fTopologicalConsistency_x005fType(soap, gmd__DQ_x005fTopologicalConsistency_x005fType*) serialize to a stream
class gmd__DQ_x005fTopologicalConsistency_x005fType : public gmd__AbstractDQ_x005fLogicalConsistency_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
/// Attribute id of type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute uuid of type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/*  INHERITED FROM gmd__AbstractDQ_x005fElement_x005fType:
/// Vector of gco__CharacterString_x005fPropertyType* with length 0..unbounded
    std::vector<gco__CharacterString_x005fPropertyType*> nameOfMeasure                  0;
/// Element measureIdentification of type "http://www.isotc211.org/2005/gmd":MD_Identifier_PropertyType.
    gmd__MD_x005fIdentifier_x005fPropertyType*  measureIdentification          0;	///< Optional element.
/// Element measureDescription of type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  measureDescription             0;	///< Optional element.
/// Element evaluationMethodType of type "http://www.isotc211.org/2005/gmd":DQ_EvaluationMethodTypeCode_PropertyType.
    gmd__DQ_x005fEvaluationMethodTypeCode_x005fPropertyType*  evaluationMethodType           0;	///< Optional element.
/// Element evaluationMethodDescription of type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  evaluationMethodDescription    0;	///< Optional element.
/// Element evaluationProcedure of type "http://www.isotc211.org/2005/gmd":CI_Citation_PropertyType.
    gmd__CI_x005fCitation_x005fPropertyType*  evaluationProcedure            0;	///< Optional element.
/// Vector of gco__DateTime_x005fPropertyType* with length 0..unbounded
    std::vector<gco__DateTime_x005fPropertyType*> dateTime                       0;
/// Vector of gmd__DQ_x005fResult_x005fPropertyType* with length 1..2
    std::vector<gmd__DQ_x005fResult_x005fPropertyType*> result                         1:2;
    END OF INHERITED FROM gmd__AbstractDQ_x005fElement_x005fType */
/*  INHERITED FROM gmd__AbstractDQ_x005fLogicalConsistency_x005fType:
    END OF INHERITED FROM gmd__AbstractDQ_x005fLogicalConsistency_x005fType */
};

/// "http://www.isotc211.org/2005/gmd":DQ_FormatConsistency_Type is a complexType with complexContent extension of "http://www.isotc211.org/2005/gmd":AbstractDQ_LogicalConsistency_Type.
/// class gmd__DQ_x005fFormatConsistency_x005fType operations:
/// - soap_new_gmd__DQ_x005fFormatConsistency_x005fType(soap*) allocate
/// - soap_new_gmd__DQ_x005fFormatConsistency_x005fType(soap*, int num) allocate array
/// - soap_new_req_gmd__DQ_x005fFormatConsistency_x005fType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__DQ_x005fFormatConsistency_x005fType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__DQ_x005fFormatConsistency_x005fType(soap*, gmd__DQ_x005fFormatConsistency_x005fType*) deserialize from a stream
/// - int soap_write_gmd__DQ_x005fFormatConsistency_x005fType(soap, gmd__DQ_x005fFormatConsistency_x005fType*) serialize to a stream
class gmd__DQ_x005fFormatConsistency_x005fType : public gmd__AbstractDQ_x005fLogicalConsistency_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
/// Attribute id of type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute uuid of type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/*  INHERITED FROM gmd__AbstractDQ_x005fElement_x005fType:
/// Vector of gco__CharacterString_x005fPropertyType* with length 0..unbounded
    std::vector<gco__CharacterString_x005fPropertyType*> nameOfMeasure                  0;
/// Element measureIdentification of type "http://www.isotc211.org/2005/gmd":MD_Identifier_PropertyType.
    gmd__MD_x005fIdentifier_x005fPropertyType*  measureIdentification          0;	///< Optional element.
/// Element measureDescription of type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  measureDescription             0;	///< Optional element.
/// Element evaluationMethodType of type "http://www.isotc211.org/2005/gmd":DQ_EvaluationMethodTypeCode_PropertyType.
    gmd__DQ_x005fEvaluationMethodTypeCode_x005fPropertyType*  evaluationMethodType           0;	///< Optional element.
/// Element evaluationMethodDescription of type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  evaluationMethodDescription    0;	///< Optional element.
/// Element evaluationProcedure of type "http://www.isotc211.org/2005/gmd":CI_Citation_PropertyType.
    gmd__CI_x005fCitation_x005fPropertyType*  evaluationProcedure            0;	///< Optional element.
/// Vector of gco__DateTime_x005fPropertyType* with length 0..unbounded
    std::vector<gco__DateTime_x005fPropertyType*> dateTime                       0;
/// Vector of gmd__DQ_x005fResult_x005fPropertyType* with length 1..2
    std::vector<gmd__DQ_x005fResult_x005fPropertyType*> result                         1:2;
    END OF INHERITED FROM gmd__AbstractDQ_x005fElement_x005fType */
/*  INHERITED FROM gmd__AbstractDQ_x005fLogicalConsistency_x005fType:
    END OF INHERITED FROM gmd__AbstractDQ_x005fLogicalConsistency_x005fType */
};

/// "http://www.isotc211.org/2005/gmd":DQ_DomainConsistency_Type is a complexType with complexContent extension of "http://www.isotc211.org/2005/gmd":AbstractDQ_LogicalConsistency_Type.
/// class gmd__DQ_x005fDomainConsistency_x005fType operations:
/// - soap_new_gmd__DQ_x005fDomainConsistency_x005fType(soap*) allocate
/// - soap_new_gmd__DQ_x005fDomainConsistency_x005fType(soap*, int num) allocate array
/// - soap_new_req_gmd__DQ_x005fDomainConsistency_x005fType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__DQ_x005fDomainConsistency_x005fType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__DQ_x005fDomainConsistency_x005fType(soap*, gmd__DQ_x005fDomainConsistency_x005fType*) deserialize from a stream
/// - int soap_write_gmd__DQ_x005fDomainConsistency_x005fType(soap, gmd__DQ_x005fDomainConsistency_x005fType*) serialize to a stream
class gmd__DQ_x005fDomainConsistency_x005fType : public gmd__AbstractDQ_x005fLogicalConsistency_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
/// Attribute id of type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute uuid of type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/*  INHERITED FROM gmd__AbstractDQ_x005fElement_x005fType:
/// Vector of gco__CharacterString_x005fPropertyType* with length 0..unbounded
    std::vector<gco__CharacterString_x005fPropertyType*> nameOfMeasure                  0;
/// Element measureIdentification of type "http://www.isotc211.org/2005/gmd":MD_Identifier_PropertyType.
    gmd__MD_x005fIdentifier_x005fPropertyType*  measureIdentification          0;	///< Optional element.
/// Element measureDescription of type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  measureDescription             0;	///< Optional element.
/// Element evaluationMethodType of type "http://www.isotc211.org/2005/gmd":DQ_EvaluationMethodTypeCode_PropertyType.
    gmd__DQ_x005fEvaluationMethodTypeCode_x005fPropertyType*  evaluationMethodType           0;	///< Optional element.
/// Element evaluationMethodDescription of type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  evaluationMethodDescription    0;	///< Optional element.
/// Element evaluationProcedure of type "http://www.isotc211.org/2005/gmd":CI_Citation_PropertyType.
    gmd__CI_x005fCitation_x005fPropertyType*  evaluationProcedure            0;	///< Optional element.
/// Vector of gco__DateTime_x005fPropertyType* with length 0..unbounded
    std::vector<gco__DateTime_x005fPropertyType*> dateTime                       0;
/// Vector of gmd__DQ_x005fResult_x005fPropertyType* with length 1..2
    std::vector<gmd__DQ_x005fResult_x005fPropertyType*> result                         1:2;
    END OF INHERITED FROM gmd__AbstractDQ_x005fElement_x005fType */
/*  INHERITED FROM gmd__AbstractDQ_x005fLogicalConsistency_x005fType:
    END OF INHERITED FROM gmd__AbstractDQ_x005fLogicalConsistency_x005fType */
};

/// "http://www.isotc211.org/2005/gmd":DQ_ConceptualConsistency_Type is a complexType with complexContent extension of "http://www.isotc211.org/2005/gmd":AbstractDQ_LogicalConsistency_Type.
/// class gmd__DQ_x005fConceptualConsistency_x005fType operations:
/// - soap_new_gmd__DQ_x005fConceptualConsistency_x005fType(soap*) allocate
/// - soap_new_gmd__DQ_x005fConceptualConsistency_x005fType(soap*, int num) allocate array
/// - soap_new_req_gmd__DQ_x005fConceptualConsistency_x005fType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__DQ_x005fConceptualConsistency_x005fType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__DQ_x005fConceptualConsistency_x005fType(soap*, gmd__DQ_x005fConceptualConsistency_x005fType*) deserialize from a stream
/// - int soap_write_gmd__DQ_x005fConceptualConsistency_x005fType(soap, gmd__DQ_x005fConceptualConsistency_x005fType*) serialize to a stream
class gmd__DQ_x005fConceptualConsistency_x005fType : public gmd__AbstractDQ_x005fLogicalConsistency_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
/// Attribute id of type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute uuid of type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/*  INHERITED FROM gmd__AbstractDQ_x005fElement_x005fType:
/// Vector of gco__CharacterString_x005fPropertyType* with length 0..unbounded
    std::vector<gco__CharacterString_x005fPropertyType*> nameOfMeasure                  0;
/// Element measureIdentification of type "http://www.isotc211.org/2005/gmd":MD_Identifier_PropertyType.
    gmd__MD_x005fIdentifier_x005fPropertyType*  measureIdentification          0;	///< Optional element.
/// Element measureDescription of type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  measureDescription             0;	///< Optional element.
/// Element evaluationMethodType of type "http://www.isotc211.org/2005/gmd":DQ_EvaluationMethodTypeCode_PropertyType.
    gmd__DQ_x005fEvaluationMethodTypeCode_x005fPropertyType*  evaluationMethodType           0;	///< Optional element.
/// Element evaluationMethodDescription of type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  evaluationMethodDescription    0;	///< Optional element.
/// Element evaluationProcedure of type "http://www.isotc211.org/2005/gmd":CI_Citation_PropertyType.
    gmd__CI_x005fCitation_x005fPropertyType*  evaluationProcedure            0;	///< Optional element.
/// Vector of gco__DateTime_x005fPropertyType* with length 0..unbounded
    std::vector<gco__DateTime_x005fPropertyType*> dateTime                       0;
/// Vector of gmd__DQ_x005fResult_x005fPropertyType* with length 1..2
    std::vector<gmd__DQ_x005fResult_x005fPropertyType*> result                         1:2;
    END OF INHERITED FROM gmd__AbstractDQ_x005fElement_x005fType */
/*  INHERITED FROM gmd__AbstractDQ_x005fLogicalConsistency_x005fType:
    END OF INHERITED FROM gmd__AbstractDQ_x005fLogicalConsistency_x005fType */
};

/// "http://www.isotc211.org/2005/gmd":DQ_CompletenessOmission_Type is a complexType with complexContent extension of "http://www.isotc211.org/2005/gmd":AbstractDQ_Completeness_Type.
/// class gmd__DQ_x005fCompletenessOmission_x005fType operations:
/// - soap_new_gmd__DQ_x005fCompletenessOmission_x005fType(soap*) allocate
/// - soap_new_gmd__DQ_x005fCompletenessOmission_x005fType(soap*, int num) allocate array
/// - soap_new_req_gmd__DQ_x005fCompletenessOmission_x005fType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__DQ_x005fCompletenessOmission_x005fType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__DQ_x005fCompletenessOmission_x005fType(soap*, gmd__DQ_x005fCompletenessOmission_x005fType*) deserialize from a stream
/// - int soap_write_gmd__DQ_x005fCompletenessOmission_x005fType(soap, gmd__DQ_x005fCompletenessOmission_x005fType*) serialize to a stream
class gmd__DQ_x005fCompletenessOmission_x005fType : public gmd__AbstractDQ_x005fCompleteness_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
/// Attribute id of type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute uuid of type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/*  INHERITED FROM gmd__AbstractDQ_x005fElement_x005fType:
/// Vector of gco__CharacterString_x005fPropertyType* with length 0..unbounded
    std::vector<gco__CharacterString_x005fPropertyType*> nameOfMeasure                  0;
/// Element measureIdentification of type "http://www.isotc211.org/2005/gmd":MD_Identifier_PropertyType.
    gmd__MD_x005fIdentifier_x005fPropertyType*  measureIdentification          0;	///< Optional element.
/// Element measureDescription of type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  measureDescription             0;	///< Optional element.
/// Element evaluationMethodType of type "http://www.isotc211.org/2005/gmd":DQ_EvaluationMethodTypeCode_PropertyType.
    gmd__DQ_x005fEvaluationMethodTypeCode_x005fPropertyType*  evaluationMethodType           0;	///< Optional element.
/// Element evaluationMethodDescription of type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  evaluationMethodDescription    0;	///< Optional element.
/// Element evaluationProcedure of type "http://www.isotc211.org/2005/gmd":CI_Citation_PropertyType.
    gmd__CI_x005fCitation_x005fPropertyType*  evaluationProcedure            0;	///< Optional element.
/// Vector of gco__DateTime_x005fPropertyType* with length 0..unbounded
    std::vector<gco__DateTime_x005fPropertyType*> dateTime                       0;
/// Vector of gmd__DQ_x005fResult_x005fPropertyType* with length 1..2
    std::vector<gmd__DQ_x005fResult_x005fPropertyType*> result                         1:2;
    END OF INHERITED FROM gmd__AbstractDQ_x005fElement_x005fType */
/*  INHERITED FROM gmd__AbstractDQ_x005fCompleteness_x005fType:
    END OF INHERITED FROM gmd__AbstractDQ_x005fCompleteness_x005fType */
};

/// "http://www.isotc211.org/2005/gmd":DQ_CompletenessCommission_Type is a complexType with complexContent extension of "http://www.isotc211.org/2005/gmd":AbstractDQ_Completeness_Type.
/// class gmd__DQ_x005fCompletenessCommission_x005fType operations:
/// - soap_new_gmd__DQ_x005fCompletenessCommission_x005fType(soap*) allocate
/// - soap_new_gmd__DQ_x005fCompletenessCommission_x005fType(soap*, int num) allocate array
/// - soap_new_req_gmd__DQ_x005fCompletenessCommission_x005fType(soap*, ...) allocate, set required members
/// - soap_new_set_gmd__DQ_x005fCompletenessCommission_x005fType(soap*, ...) allocate, set all public members
/// - int soap_read_gmd__DQ_x005fCompletenessCommission_x005fType(soap*, gmd__DQ_x005fCompletenessCommission_x005fType*) deserialize from a stream
/// - int soap_write_gmd__DQ_x005fCompletenessCommission_x005fType(soap, gmd__DQ_x005fCompletenessCommission_x005fType*) serialize to a stream
class gmd__DQ_x005fCompletenessCommission_x005fType : public gmd__AbstractDQ_x005fCompleteness_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
/// Attribute id of type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute uuid of type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/*  INHERITED FROM gmd__AbstractDQ_x005fElement_x005fType:
/// Vector of gco__CharacterString_x005fPropertyType* with length 0..unbounded
    std::vector<gco__CharacterString_x005fPropertyType*> nameOfMeasure                  0;
/// Element measureIdentification of type "http://www.isotc211.org/2005/gmd":MD_Identifier_PropertyType.
    gmd__MD_x005fIdentifier_x005fPropertyType*  measureIdentification          0;	///< Optional element.
/// Element measureDescription of type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  measureDescription             0;	///< Optional element.
/// Element evaluationMethodType of type "http://www.isotc211.org/2005/gmd":DQ_EvaluationMethodTypeCode_PropertyType.
    gmd__DQ_x005fEvaluationMethodTypeCode_x005fPropertyType*  evaluationMethodType           0;	///< Optional element.
/// Element evaluationMethodDescription of type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  evaluationMethodDescription    0;	///< Optional element.
/// Element evaluationProcedure of type "http://www.isotc211.org/2005/gmd":CI_Citation_PropertyType.
    gmd__CI_x005fCitation_x005fPropertyType*  evaluationProcedure            0;	///< Optional element.
/// Vector of gco__DateTime_x005fPropertyType* with length 0..unbounded
    std::vector<gco__DateTime_x005fPropertyType*> dateTime                       0;
/// Vector of gmd__DQ_x005fResult_x005fPropertyType* with length 1..2
    std::vector<gmd__DQ_x005fResult_x005fPropertyType*> result                         1:2;
    END OF INHERITED FROM gmd__AbstractDQ_x005fElement_x005fType */
/*  INHERITED FROM gmd__AbstractDQ_x005fCompleteness_x005fType:
    END OF INHERITED FROM gmd__AbstractDQ_x005fCompleteness_x005fType */
};

/// "http://www.opengis.net/gml/3.2":CompositeCurveType is a complexType with complexContent extension of "http://www.opengis.net/gml/3.2":AbstractCurveType.
/// class gml__CompositeCurveType operations:
/// - soap_new_gml__CompositeCurveType(soap*) allocate
/// - soap_new_gml__CompositeCurveType(soap*, int num) allocate array
/// - soap_new_req_gml__CompositeCurveType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__CompositeCurveType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__CompositeCurveType(soap*, gml__CompositeCurveType*) deserialize from a stream
/// - int soap_write_gml__CompositeCurveType(soap, gml__CompositeCurveType*) serialize to a stream
class gml__CompositeCurveType : public gml__AbstractCurveType
{ public:
/*  INHERITED FROM gml__AbstractGMLType:
/// GROUP <xs:group name="StandardObjectProperties">
/// Vector of gml__MetaDataPropertyType* element refs with length 0..unbounded
    std::vector<gml__MetaDataPropertyType*> metaDataProperty               0;
/// @brief The value of this property is a text description of the object. gml:description uses gml:StringOrRefType as its content model, so it may contain a simple text string content, or carry a reference to an external description. The use of gml:description to reference an external description has been deprecated and replaced by the gml:descriptionReference property.
/// Element reference "http://www.opengis.net/gml/3.2":description.
    gml__StringOrRefType*                description                    0;	///< Optional element.
/// @brief The value of this property is a remote text description of the object. The xlink:href attribute of the gml:descriptionReference property references the external description.
/// Element reference "http://www.opengis.net/gml/3.2":descriptionReference.
    gml__ReferenceType*                  descriptionReference           0;	///< Optional element.
/// @brief Often, a special identifier is assigned to an object by the maintaining authority with the intention that it is used in references to the object For such cases, the codeSpace shall be provided. That identifier is usually unique either globally or within an application domain. gml:identifier is a pre-defined property for such identifiers.
/// Element reference "http://www.opengis.net/gml/3.2":identifier.
    gml__CodeWithAuthorityType*          identifier                     0;	///< Optional element.
/// @brief The gml:name property provides a label or identifier for the object, commonly a descriptive name. An object may have several names, typically assigned by different authorities. gml:name uses the gml:CodeType content model. The authority for a name is indicated by the value of its (optional) codeSpace attribute. The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace. In common usage there will be one name per authority, so a processing application may select the name from its preferred codeSpace.
/// Vector of gml__CodeType* element refs with length 0..unbounded
    std::vector<gml__CodeType*         > name                           0;
//  END OF GROUP
/// Attribute reference "http://www.opengis.net/gml/3.2":id.
/// @brief The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.
   @xsd__ID                              id                             1;	///< Required attribute.
    END OF INHERITED FROM gml__AbstractGMLType */
/*  INHERITED FROM gml__AbstractGeometryType:
/// Attribute srsName of type xs:anyURI.
   @xsd__anyURI*                         srsName                        0;	///< Optional attribute.
/// Attribute srsDimension of type xs:positiveInteger.
   @xsd__positiveInteger*                srsDimension                   0;	///< Optional attribute.
/// Attribute axisLabels of type "http://www.opengis.net/gml/3.2":NCNameList.
   @gml__NCNameList*                     axisLabels                     0;	///< Optional attribute.
/// Attribute uomLabels of type "http://www.opengis.net/gml/3.2":NCNameList.
   @gml__NCNameList*                     uomLabels                      0;	///< Optional attribute.
    END OF INHERITED FROM gml__AbstractGeometryType */
/*  INHERITED FROM gml__AbstractGeometricPrimitiveType:
    END OF INHERITED FROM gml__AbstractGeometricPrimitiveType */
/*  INHERITED FROM gml__AbstractCurveType:
    END OF INHERITED FROM gml__AbstractCurveType */
/// Vector of gml__CurvePropertyType* element refs with length 1..unbounded
    std::vector<gml__CurvePropertyType*> curveMember                    1;
/// Attribute aggregationType of type "http://www.opengis.net/gml/3.2":AggregationType.
   @enum gml__AggregationType*           aggregationType                0;	///< Optional attribute.
};

/// "http://www.opengis.net/gml/3.2":CompositeSurfaceType is a complexType with complexContent extension of "http://www.opengis.net/gml/3.2":AbstractSurfaceType.
/// class gml__CompositeSurfaceType operations:
/// - soap_new_gml__CompositeSurfaceType(soap*) allocate
/// - soap_new_gml__CompositeSurfaceType(soap*, int num) allocate array
/// - soap_new_req_gml__CompositeSurfaceType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__CompositeSurfaceType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__CompositeSurfaceType(soap*, gml__CompositeSurfaceType*) deserialize from a stream
/// - int soap_write_gml__CompositeSurfaceType(soap, gml__CompositeSurfaceType*) serialize to a stream
class gml__CompositeSurfaceType : public gml__AbstractSurfaceType
{ public:
/*  INHERITED FROM gml__AbstractGMLType:
/// GROUP <xs:group name="StandardObjectProperties">
/// Vector of gml__MetaDataPropertyType* element refs with length 0..unbounded
    std::vector<gml__MetaDataPropertyType*> metaDataProperty               0;
/// @brief The value of this property is a text description of the object. gml:description uses gml:StringOrRefType as its content model, so it may contain a simple text string content, or carry a reference to an external description. The use of gml:description to reference an external description has been deprecated and replaced by the gml:descriptionReference property.
/// Element reference "http://www.opengis.net/gml/3.2":description.
    gml__StringOrRefType*                description                    0;	///< Optional element.
/// @brief The value of this property is a remote text description of the object. The xlink:href attribute of the gml:descriptionReference property references the external description.
/// Element reference "http://www.opengis.net/gml/3.2":descriptionReference.
    gml__ReferenceType*                  descriptionReference           0;	///< Optional element.
/// @brief Often, a special identifier is assigned to an object by the maintaining authority with the intention that it is used in references to the object For such cases, the codeSpace shall be provided. That identifier is usually unique either globally or within an application domain. gml:identifier is a pre-defined property for such identifiers.
/// Element reference "http://www.opengis.net/gml/3.2":identifier.
    gml__CodeWithAuthorityType*          identifier                     0;	///< Optional element.
/// @brief The gml:name property provides a label or identifier for the object, commonly a descriptive name. An object may have several names, typically assigned by different authorities. gml:name uses the gml:CodeType content model. The authority for a name is indicated by the value of its (optional) codeSpace attribute. The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace. In common usage there will be one name per authority, so a processing application may select the name from its preferred codeSpace.
/// Vector of gml__CodeType* element refs with length 0..unbounded
    std::vector<gml__CodeType*         > name                           0;
//  END OF GROUP
/// Attribute reference "http://www.opengis.net/gml/3.2":id.
/// @brief The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.
   @xsd__ID                              id                             1;	///< Required attribute.
    END OF INHERITED FROM gml__AbstractGMLType */
/*  INHERITED FROM gml__AbstractGeometryType:
/// Attribute srsName of type xs:anyURI.
   @xsd__anyURI*                         srsName                        0;	///< Optional attribute.
/// Attribute srsDimension of type xs:positiveInteger.
   @xsd__positiveInteger*                srsDimension                   0;	///< Optional attribute.
/// Attribute axisLabels of type "http://www.opengis.net/gml/3.2":NCNameList.
   @gml__NCNameList*                     axisLabels                     0;	///< Optional attribute.
/// Attribute uomLabels of type "http://www.opengis.net/gml/3.2":NCNameList.
   @gml__NCNameList*                     uomLabels                      0;	///< Optional attribute.
    END OF INHERITED FROM gml__AbstractGeometryType */
/*  INHERITED FROM gml__AbstractGeometricPrimitiveType:
    END OF INHERITED FROM gml__AbstractGeometricPrimitiveType */
/*  INHERITED FROM gml__AbstractSurfaceType:
    END OF INHERITED FROM gml__AbstractSurfaceType */
/// @brief This property element either references a surface via the XLink-attributes or contains the surface element. A surface element is any element, which is substitutable for gml:AbstractSurface.
/// Vector of gml__SurfacePropertyType* element refs with length 1..unbounded
    std::vector<gml__SurfacePropertyType*> surfaceMember                  1;
/// Attribute aggregationType of type "http://www.opengis.net/gml/3.2":AggregationType.
   @enum gml__AggregationType*           aggregationType                0;	///< Optional attribute.
};

/// "http://www.opengis.net/gml/3.2":CompositeSolidType is a complexType with complexContent extension of "http://www.opengis.net/gml/3.2":AbstractSolidType.
/// class gml__CompositeSolidType operations:
/// - soap_new_gml__CompositeSolidType(soap*) allocate
/// - soap_new_gml__CompositeSolidType(soap*, int num) allocate array
/// - soap_new_req_gml__CompositeSolidType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__CompositeSolidType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__CompositeSolidType(soap*, gml__CompositeSolidType*) deserialize from a stream
/// - int soap_write_gml__CompositeSolidType(soap, gml__CompositeSolidType*) serialize to a stream
class gml__CompositeSolidType : public gml__AbstractSolidType
{ public:
/*  INHERITED FROM gml__AbstractGMLType:
/// GROUP <xs:group name="StandardObjectProperties">
/// Vector of gml__MetaDataPropertyType* element refs with length 0..unbounded
    std::vector<gml__MetaDataPropertyType*> metaDataProperty               0;
/// @brief The value of this property is a text description of the object. gml:description uses gml:StringOrRefType as its content model, so it may contain a simple text string content, or carry a reference to an external description. The use of gml:description to reference an external description has been deprecated and replaced by the gml:descriptionReference property.
/// Element reference "http://www.opengis.net/gml/3.2":description.
    gml__StringOrRefType*                description                    0;	///< Optional element.
/// @brief The value of this property is a remote text description of the object. The xlink:href attribute of the gml:descriptionReference property references the external description.
/// Element reference "http://www.opengis.net/gml/3.2":descriptionReference.
    gml__ReferenceType*                  descriptionReference           0;	///< Optional element.
/// @brief Often, a special identifier is assigned to an object by the maintaining authority with the intention that it is used in references to the object For such cases, the codeSpace shall be provided. That identifier is usually unique either globally or within an application domain. gml:identifier is a pre-defined property for such identifiers.
/// Element reference "http://www.opengis.net/gml/3.2":identifier.
    gml__CodeWithAuthorityType*          identifier                     0;	///< Optional element.
/// @brief The gml:name property provides a label or identifier for the object, commonly a descriptive name. An object may have several names, typically assigned by different authorities. gml:name uses the gml:CodeType content model. The authority for a name is indicated by the value of its (optional) codeSpace attribute. The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace. In common usage there will be one name per authority, so a processing application may select the name from its preferred codeSpace.
/// Vector of gml__CodeType* element refs with length 0..unbounded
    std::vector<gml__CodeType*         > name                           0;
//  END OF GROUP
/// Attribute reference "http://www.opengis.net/gml/3.2":id.
/// @brief The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.
   @xsd__ID                              id                             1;	///< Required attribute.
    END OF INHERITED FROM gml__AbstractGMLType */
/*  INHERITED FROM gml__AbstractGeometryType:
/// Attribute srsName of type xs:anyURI.
   @xsd__anyURI*                         srsName                        0;	///< Optional attribute.
/// Attribute srsDimension of type xs:positiveInteger.
   @xsd__positiveInteger*                srsDimension                   0;	///< Optional attribute.
/// Attribute axisLabels of type "http://www.opengis.net/gml/3.2":NCNameList.
   @gml__NCNameList*                     axisLabels                     0;	///< Optional attribute.
/// Attribute uomLabels of type "http://www.opengis.net/gml/3.2":NCNameList.
   @gml__NCNameList*                     uomLabels                      0;	///< Optional attribute.
    END OF INHERITED FROM gml__AbstractGeometryType */
/*  INHERITED FROM gml__AbstractGeometricPrimitiveType:
    END OF INHERITED FROM gml__AbstractGeometricPrimitiveType */
/*  INHERITED FROM gml__AbstractSolidType:
    END OF INHERITED FROM gml__AbstractSolidType */
/// @brief This property element either references a solid via the XLink-attributes or contains the solid element. A solid element is any element, which is substitutable for gml:AbstractSolid.
/// Vector of gml__SolidPropertyType* element refs with length 1..unbounded
    std::vector<gml__SolidPropertyType*> solidMember                    1;
/// Attribute aggregationType of type "http://www.opengis.net/gml/3.2":AggregationType.
   @enum gml__AggregationType*           aggregationType                0;	///< Optional attribute.
};

/// "http://www.opengis.net/gml/3.2":CurveType is a complexType with complexContent extension of "http://www.opengis.net/gml/3.2":AbstractCurveType.
/// class gml__CurveType operations:
/// - soap_new_gml__CurveType(soap*) allocate
/// - soap_new_gml__CurveType(soap*, int num) allocate array
/// - soap_new_req_gml__CurveType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__CurveType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__CurveType(soap*, gml__CurveType*) deserialize from a stream
/// - int soap_write_gml__CurveType(soap, gml__CurveType*) serialize to a stream
class gml__CurveType : public gml__AbstractCurveType
{ public:
/*  INHERITED FROM gml__AbstractGMLType:
/// GROUP <xs:group name="StandardObjectProperties">
/// Vector of gml__MetaDataPropertyType* element refs with length 0..unbounded
    std::vector<gml__MetaDataPropertyType*> metaDataProperty               0;
/// @brief The value of this property is a text description of the object. gml:description uses gml:StringOrRefType as its content model, so it may contain a simple text string content, or carry a reference to an external description. The use of gml:description to reference an external description has been deprecated and replaced by the gml:descriptionReference property.
/// Element reference "http://www.opengis.net/gml/3.2":description.
    gml__StringOrRefType*                description                    0;	///< Optional element.
/// @brief The value of this property is a remote text description of the object. The xlink:href attribute of the gml:descriptionReference property references the external description.
/// Element reference "http://www.opengis.net/gml/3.2":descriptionReference.
    gml__ReferenceType*                  descriptionReference           0;	///< Optional element.
/// @brief Often, a special identifier is assigned to an object by the maintaining authority with the intention that it is used in references to the object For such cases, the codeSpace shall be provided. That identifier is usually unique either globally or within an application domain. gml:identifier is a pre-defined property for such identifiers.
/// Element reference "http://www.opengis.net/gml/3.2":identifier.
    gml__CodeWithAuthorityType*          identifier                     0;	///< Optional element.
/// @brief The gml:name property provides a label or identifier for the object, commonly a descriptive name. An object may have several names, typically assigned by different authorities. gml:name uses the gml:CodeType content model. The authority for a name is indicated by the value of its (optional) codeSpace attribute. The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace. In common usage there will be one name per authority, so a processing application may select the name from its preferred codeSpace.
/// Vector of gml__CodeType* element refs with length 0..unbounded
    std::vector<gml__CodeType*         > name                           0;
//  END OF GROUP
/// Attribute reference "http://www.opengis.net/gml/3.2":id.
/// @brief The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.
   @xsd__ID                              id                             1;	///< Required attribute.
    END OF INHERITED FROM gml__AbstractGMLType */
/*  INHERITED FROM gml__AbstractGeometryType:
/// Attribute srsName of type xs:anyURI.
   @xsd__anyURI*                         srsName                        0;	///< Optional attribute.
/// Attribute srsDimension of type xs:positiveInteger.
   @xsd__positiveInteger*                srsDimension                   0;	///< Optional attribute.
/// Attribute axisLabels of type "http://www.opengis.net/gml/3.2":NCNameList.
   @gml__NCNameList*                     axisLabels                     0;	///< Optional attribute.
/// Attribute uomLabels of type "http://www.opengis.net/gml/3.2":NCNameList.
   @gml__NCNameList*                     uomLabels                      0;	///< Optional attribute.
    END OF INHERITED FROM gml__AbstractGeometryType */
/*  INHERITED FROM gml__AbstractGeometricPrimitiveType:
    END OF INHERITED FROM gml__AbstractGeometricPrimitiveType */
/*  INHERITED FROM gml__AbstractCurveType:
    END OF INHERITED FROM gml__AbstractCurveType */
/// @brief This property element contains a list of curve segments. The order of the elements is significant and shall be preserved when processing the array.
/// Element reference "http://www.opengis.net/gml/3.2":segments.
    gml__CurveSegmentArrayPropertyType*  segments                       1;	///< Required element.
};

/// "http://www.opengis.net/gml/3.2":OrientableCurveType is a complexType with complexContent extension of "http://www.opengis.net/gml/3.2":AbstractCurveType.
/// class gml__OrientableCurveType operations:
/// - soap_new_gml__OrientableCurveType(soap*) allocate
/// - soap_new_gml__OrientableCurveType(soap*, int num) allocate array
/// - soap_new_req_gml__OrientableCurveType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__OrientableCurveType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__OrientableCurveType(soap*, gml__OrientableCurveType*) deserialize from a stream
/// - int soap_write_gml__OrientableCurveType(soap, gml__OrientableCurveType*) serialize to a stream
class gml__OrientableCurveType : public gml__AbstractCurveType
{ public:
/*  INHERITED FROM gml__AbstractGMLType:
/// GROUP <xs:group name="StandardObjectProperties">
/// Vector of gml__MetaDataPropertyType* element refs with length 0..unbounded
    std::vector<gml__MetaDataPropertyType*> metaDataProperty               0;
/// @brief The value of this property is a text description of the object. gml:description uses gml:StringOrRefType as its content model, so it may contain a simple text string content, or carry a reference to an external description. The use of gml:description to reference an external description has been deprecated and replaced by the gml:descriptionReference property.
/// Element reference "http://www.opengis.net/gml/3.2":description.
    gml__StringOrRefType*                description                    0;	///< Optional element.
/// @brief The value of this property is a remote text description of the object. The xlink:href attribute of the gml:descriptionReference property references the external description.
/// Element reference "http://www.opengis.net/gml/3.2":descriptionReference.
    gml__ReferenceType*                  descriptionReference           0;	///< Optional element.
/// @brief Often, a special identifier is assigned to an object by the maintaining authority with the intention that it is used in references to the object For such cases, the codeSpace shall be provided. That identifier is usually unique either globally or within an application domain. gml:identifier is a pre-defined property for such identifiers.
/// Element reference "http://www.opengis.net/gml/3.2":identifier.
    gml__CodeWithAuthorityType*          identifier                     0;	///< Optional element.
/// @brief The gml:name property provides a label or identifier for the object, commonly a descriptive name. An object may have several names, typically assigned by different authorities. gml:name uses the gml:CodeType content model. The authority for a name is indicated by the value of its (optional) codeSpace attribute. The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace. In common usage there will be one name per authority, so a processing application may select the name from its preferred codeSpace.
/// Vector of gml__CodeType* element refs with length 0..unbounded
    std::vector<gml__CodeType*         > name                           0;
//  END OF GROUP
/// Attribute reference "http://www.opengis.net/gml/3.2":id.
/// @brief The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.
   @xsd__ID                              id                             1;	///< Required attribute.
    END OF INHERITED FROM gml__AbstractGMLType */
/*  INHERITED FROM gml__AbstractGeometryType:
/// Attribute srsName of type xs:anyURI.
   @xsd__anyURI*                         srsName                        0;	///< Optional attribute.
/// Attribute srsDimension of type xs:positiveInteger.
   @xsd__positiveInteger*                srsDimension                   0;	///< Optional attribute.
/// Attribute axisLabels of type "http://www.opengis.net/gml/3.2":NCNameList.
   @gml__NCNameList*                     axisLabels                     0;	///< Optional attribute.
/// Attribute uomLabels of type "http://www.opengis.net/gml/3.2":NCNameList.
   @gml__NCNameList*                     uomLabels                      0;	///< Optional attribute.
    END OF INHERITED FROM gml__AbstractGeometryType */
/*  INHERITED FROM gml__AbstractGeometricPrimitiveType:
    END OF INHERITED FROM gml__AbstractGeometricPrimitiveType */
/*  INHERITED FROM gml__AbstractCurveType:
    END OF INHERITED FROM gml__AbstractCurveType */
/// @brief The property baseCurve references or contains the base curve, i.e. it either references the base curve via the XLink-attributes or contains the curve element. A curve element is any element which is substitutable for AbstractCurve. The base curve has positive orientation.
/// Element reference "http://www.opengis.net/gml/3.2":baseCurve.
    gml__CurvePropertyType*              baseCurve                      1;	///< Required element.
/// Attribute orientation of type "http://www.opengis.net/gml/3.2":SignType.
   @enum gml__SignType                   orientation                    0 = gml__SignType___x002b;	///< Default value="+".
};

/// "http://www.opengis.net/gml/3.2":SurfaceType is a complexType with complexContent extension of "http://www.opengis.net/gml/3.2":AbstractSurfaceType.
/// class gml__SurfaceType operations:
/// - soap_new_gml__SurfaceType(soap*) allocate
/// - soap_new_gml__SurfaceType(soap*, int num) allocate array
/// - soap_new_req_gml__SurfaceType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__SurfaceType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__SurfaceType(soap*, gml__SurfaceType*) deserialize from a stream
/// - int soap_write_gml__SurfaceType(soap, gml__SurfaceType*) serialize to a stream
class gml__SurfaceType : public gml__AbstractSurfaceType
{ public:
/*  INHERITED FROM gml__AbstractGMLType:
/// GROUP <xs:group name="StandardObjectProperties">
/// Vector of gml__MetaDataPropertyType* element refs with length 0..unbounded
    std::vector<gml__MetaDataPropertyType*> metaDataProperty               0;
/// @brief The value of this property is a text description of the object. gml:description uses gml:StringOrRefType as its content model, so it may contain a simple text string content, or carry a reference to an external description. The use of gml:description to reference an external description has been deprecated and replaced by the gml:descriptionReference property.
/// Element reference "http://www.opengis.net/gml/3.2":description.
    gml__StringOrRefType*                description                    0;	///< Optional element.
/// @brief The value of this property is a remote text description of the object. The xlink:href attribute of the gml:descriptionReference property references the external description.
/// Element reference "http://www.opengis.net/gml/3.2":descriptionReference.
    gml__ReferenceType*                  descriptionReference           0;	///< Optional element.
/// @brief Often, a special identifier is assigned to an object by the maintaining authority with the intention that it is used in references to the object For such cases, the codeSpace shall be provided. That identifier is usually unique either globally or within an application domain. gml:identifier is a pre-defined property for such identifiers.
/// Element reference "http://www.opengis.net/gml/3.2":identifier.
    gml__CodeWithAuthorityType*          identifier                     0;	///< Optional element.
/// @brief The gml:name property provides a label or identifier for the object, commonly a descriptive name. An object may have several names, typically assigned by different authorities. gml:name uses the gml:CodeType content model. The authority for a name is indicated by the value of its (optional) codeSpace attribute. The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace. In common usage there will be one name per authority, so a processing application may select the name from its preferred codeSpace.
/// Vector of gml__CodeType* element refs with length 0..unbounded
    std::vector<gml__CodeType*         > name                           0;
//  END OF GROUP
/// Attribute reference "http://www.opengis.net/gml/3.2":id.
/// @brief The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.
   @xsd__ID                              id                             1;	///< Required attribute.
    END OF INHERITED FROM gml__AbstractGMLType */
/*  INHERITED FROM gml__AbstractGeometryType:
/// Attribute srsName of type xs:anyURI.
   @xsd__anyURI*                         srsName                        0;	///< Optional attribute.
/// Attribute srsDimension of type xs:positiveInteger.
   @xsd__positiveInteger*                srsDimension                   0;	///< Optional attribute.
/// Attribute axisLabels of type "http://www.opengis.net/gml/3.2":NCNameList.
   @gml__NCNameList*                     axisLabels                     0;	///< Optional attribute.
/// Attribute uomLabels of type "http://www.opengis.net/gml/3.2":NCNameList.
   @gml__NCNameList*                     uomLabels                      0;	///< Optional attribute.
    END OF INHERITED FROM gml__AbstractGeometryType */
/*  INHERITED FROM gml__AbstractGeometricPrimitiveType:
    END OF INHERITED FROM gml__AbstractGeometricPrimitiveType */
/*  INHERITED FROM gml__AbstractSurfaceType:
    END OF INHERITED FROM gml__AbstractSurfaceType */
/// @brief The patches property element contains the sequence of surface patches. The order of the elements is significant and shall be preserved when processing the array.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="patches"> with elements <polygonPatches> <trianglePatches>
   $int                                  __unionpatches                 0;	///< Union _gml__union_SurfaceType selector: set to SOAP_UNION__gml__union_SurfaceType_<fieldname>
/// Union for substitutionGroup="patches"
    union _gml__union_SurfaceType
    {
/// @brief The patches property element contains the sequence of surface patches. The order of the elements is significant and shall be preserved when processing the array.
/// Element reference "http://www.opengis.net/gml/3.2":patches.
    gml__SurfacePatchArrayPropertyType*  patches                        1;	///< Required element.
/// Element polygonPatches of type "http://www.opengis.net/gml/3.2":SurfacePatchArrayPropertyType.
    gml__SurfacePatchArrayPropertyType*  polygonPatches                 1;	///< Required element.
/// Element trianglePatches of type "http://www.opengis.net/gml/3.2":SurfacePatchArrayPropertyType.
    gml__SurfacePatchArrayPropertyType*  trianglePatches                1;	///< Required element.
    }                                    __union_SurfaceType           ;
//  END OF CHOICE OF SUBSTITUTIONS
};

/// "http://www.opengis.net/gml/3.2":OrientableSurfaceType is a complexType with complexContent extension of "http://www.opengis.net/gml/3.2":AbstractSurfaceType.
/// class gml__OrientableSurfaceType operations:
/// - soap_new_gml__OrientableSurfaceType(soap*) allocate
/// - soap_new_gml__OrientableSurfaceType(soap*, int num) allocate array
/// - soap_new_req_gml__OrientableSurfaceType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__OrientableSurfaceType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__OrientableSurfaceType(soap*, gml__OrientableSurfaceType*) deserialize from a stream
/// - int soap_write_gml__OrientableSurfaceType(soap, gml__OrientableSurfaceType*) serialize to a stream
class gml__OrientableSurfaceType : public gml__AbstractSurfaceType
{ public:
/*  INHERITED FROM gml__AbstractGMLType:
/// GROUP <xs:group name="StandardObjectProperties">
/// Vector of gml__MetaDataPropertyType* element refs with length 0..unbounded
    std::vector<gml__MetaDataPropertyType*> metaDataProperty               0;
/// @brief The value of this property is a text description of the object. gml:description uses gml:StringOrRefType as its content model, so it may contain a simple text string content, or carry a reference to an external description. The use of gml:description to reference an external description has been deprecated and replaced by the gml:descriptionReference property.
/// Element reference "http://www.opengis.net/gml/3.2":description.
    gml__StringOrRefType*                description                    0;	///< Optional element.
/// @brief The value of this property is a remote text description of the object. The xlink:href attribute of the gml:descriptionReference property references the external description.
/// Element reference "http://www.opengis.net/gml/3.2":descriptionReference.
    gml__ReferenceType*                  descriptionReference           0;	///< Optional element.
/// @brief Often, a special identifier is assigned to an object by the maintaining authority with the intention that it is used in references to the object For such cases, the codeSpace shall be provided. That identifier is usually unique either globally or within an application domain. gml:identifier is a pre-defined property for such identifiers.
/// Element reference "http://www.opengis.net/gml/3.2":identifier.
    gml__CodeWithAuthorityType*          identifier                     0;	///< Optional element.
/// @brief The gml:name property provides a label or identifier for the object, commonly a descriptive name. An object may have several names, typically assigned by different authorities. gml:name uses the gml:CodeType content model. The authority for a name is indicated by the value of its (optional) codeSpace attribute. The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace. In common usage there will be one name per authority, so a processing application may select the name from its preferred codeSpace.
/// Vector of gml__CodeType* element refs with length 0..unbounded
    std::vector<gml__CodeType*         > name                           0;
//  END OF GROUP
/// Attribute reference "http://www.opengis.net/gml/3.2":id.
/// @brief The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.
   @xsd__ID                              id                             1;	///< Required attribute.
    END OF INHERITED FROM gml__AbstractGMLType */
/*  INHERITED FROM gml__AbstractGeometryType:
/// Attribute srsName of type xs:anyURI.
   @xsd__anyURI*                         srsName                        0;	///< Optional attribute.
/// Attribute srsDimension of type xs:positiveInteger.
   @xsd__positiveInteger*                srsDimension                   0;	///< Optional attribute.
/// Attribute axisLabels of type "http://www.opengis.net/gml/3.2":NCNameList.
   @gml__NCNameList*                     axisLabels                     0;	///< Optional attribute.
/// Attribute uomLabels of type "http://www.opengis.net/gml/3.2":NCNameList.
   @gml__NCNameList*                     uomLabels                      0;	///< Optional attribute.
    END OF INHERITED FROM gml__AbstractGeometryType */
/*  INHERITED FROM gml__AbstractGeometricPrimitiveType:
    END OF INHERITED FROM gml__AbstractGeometricPrimitiveType */
/*  INHERITED FROM gml__AbstractSurfaceType:
    END OF INHERITED FROM gml__AbstractSurfaceType */
/// @brief The property baseSurface references or contains the base surface. The property baseSurface either references the base surface via the XLink-attributes or contains the surface element. A surface element is any element which is substitutable for gml:AbstractSurface. The base surface has positive orientation.
/// Element reference "http://www.opengis.net/gml/3.2":baseSurface.
    gml__SurfacePropertyType*            baseSurface                    1;	///< Required element.
/// Attribute orientation of type "http://www.opengis.net/gml/3.2":SignType.
   @enum gml__SignType                   orientation                    0 = gml__SignType___x002b;	///< Default value="+".
};

/// "http://www.opengis.net/gml/3.2":SolidType is a complexType with complexContent extension of "http://www.opengis.net/gml/3.2":AbstractSolidType.
/// class gml__SolidType operations:
/// - soap_new_gml__SolidType(soap*) allocate
/// - soap_new_gml__SolidType(soap*, int num) allocate array
/// - soap_new_req_gml__SolidType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__SolidType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__SolidType(soap*, gml__SolidType*) deserialize from a stream
/// - int soap_write_gml__SolidType(soap, gml__SolidType*) serialize to a stream
class gml__SolidType : public gml__AbstractSolidType
{ public:
/*  INHERITED FROM gml__AbstractGMLType:
/// GROUP <xs:group name="StandardObjectProperties">
/// Vector of gml__MetaDataPropertyType* element refs with length 0..unbounded
    std::vector<gml__MetaDataPropertyType*> metaDataProperty               0;
/// @brief The value of this property is a text description of the object. gml:description uses gml:StringOrRefType as its content model, so it may contain a simple text string content, or carry a reference to an external description. The use of gml:description to reference an external description has been deprecated and replaced by the gml:descriptionReference property.
/// Element reference "http://www.opengis.net/gml/3.2":description.
    gml__StringOrRefType*                description                    0;	///< Optional element.
/// @brief The value of this property is a remote text description of the object. The xlink:href attribute of the gml:descriptionReference property references the external description.
/// Element reference "http://www.opengis.net/gml/3.2":descriptionReference.
    gml__ReferenceType*                  descriptionReference           0;	///< Optional element.
/// @brief Often, a special identifier is assigned to an object by the maintaining authority with the intention that it is used in references to the object For such cases, the codeSpace shall be provided. That identifier is usually unique either globally or within an application domain. gml:identifier is a pre-defined property for such identifiers.
/// Element reference "http://www.opengis.net/gml/3.2":identifier.
    gml__CodeWithAuthorityType*          identifier                     0;	///< Optional element.
/// @brief The gml:name property provides a label or identifier for the object, commonly a descriptive name. An object may have several names, typically assigned by different authorities. gml:name uses the gml:CodeType content model. The authority for a name is indicated by the value of its (optional) codeSpace attribute. The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace. In common usage there will be one name per authority, so a processing application may select the name from its preferred codeSpace.
/// Vector of gml__CodeType* element refs with length 0..unbounded
    std::vector<gml__CodeType*         > name                           0;
//  END OF GROUP
/// Attribute reference "http://www.opengis.net/gml/3.2":id.
/// @brief The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.
   @xsd__ID                              id                             1;	///< Required attribute.
    END OF INHERITED FROM gml__AbstractGMLType */
/*  INHERITED FROM gml__AbstractGeometryType:
/// Attribute srsName of type xs:anyURI.
   @xsd__anyURI*                         srsName                        0;	///< Optional attribute.
/// Attribute srsDimension of type xs:positiveInteger.
   @xsd__positiveInteger*                srsDimension                   0;	///< Optional attribute.
/// Attribute axisLabels of type "http://www.opengis.net/gml/3.2":NCNameList.
   @gml__NCNameList*                     axisLabels                     0;	///< Optional attribute.
/// Attribute uomLabels of type "http://www.opengis.net/gml/3.2":NCNameList.
   @gml__NCNameList*                     uomLabels                      0;	///< Optional attribute.
    END OF INHERITED FROM gml__AbstractGeometryType */
/*  INHERITED FROM gml__AbstractGeometricPrimitiveType:
    END OF INHERITED FROM gml__AbstractGeometricPrimitiveType */
/*  INHERITED FROM gml__AbstractSolidType:
    END OF INHERITED FROM gml__AbstractSolidType */
/// Element exterior of type "http://www.opengis.net/gml/3.2":ShellPropertyType.
    gml__ShellPropertyType*              exterior                       0;	///< Optional element.
/// Vector of gml__ShellPropertyType* with length 0..unbounded
    std::vector<gml__ShellPropertyType*> interior                       0;
};

/// "http://www.opengis.net/gml/3.2":PolygonType is a complexType with complexContent extension of "http://www.opengis.net/gml/3.2":AbstractSurfaceType.
/// class gml__PolygonType operations:
/// - soap_new_gml__PolygonType(soap*) allocate
/// - soap_new_gml__PolygonType(soap*, int num) allocate array
/// - soap_new_req_gml__PolygonType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__PolygonType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__PolygonType(soap*, gml__PolygonType*) deserialize from a stream
/// - int soap_write_gml__PolygonType(soap, gml__PolygonType*) serialize to a stream
class gml__PolygonType : public gml__AbstractSurfaceType
{ public:
/*  INHERITED FROM gml__AbstractGMLType:
/// GROUP <xs:group name="StandardObjectProperties">
/// Vector of gml__MetaDataPropertyType* element refs with length 0..unbounded
    std::vector<gml__MetaDataPropertyType*> metaDataProperty               0;
/// @brief The value of this property is a text description of the object. gml:description uses gml:StringOrRefType as its content model, so it may contain a simple text string content, or carry a reference to an external description. The use of gml:description to reference an external description has been deprecated and replaced by the gml:descriptionReference property.
/// Element reference "http://www.opengis.net/gml/3.2":description.
    gml__StringOrRefType*                description                    0;	///< Optional element.
/// @brief The value of this property is a remote text description of the object. The xlink:href attribute of the gml:descriptionReference property references the external description.
/// Element reference "http://www.opengis.net/gml/3.2":descriptionReference.
    gml__ReferenceType*                  descriptionReference           0;	///< Optional element.
/// @brief Often, a special identifier is assigned to an object by the maintaining authority with the intention that it is used in references to the object For such cases, the codeSpace shall be provided. That identifier is usually unique either globally or within an application domain. gml:identifier is a pre-defined property for such identifiers.
/// Element reference "http://www.opengis.net/gml/3.2":identifier.
    gml__CodeWithAuthorityType*          identifier                     0;	///< Optional element.
/// @brief The gml:name property provides a label or identifier for the object, commonly a descriptive name. An object may have several names, typically assigned by different authorities. gml:name uses the gml:CodeType content model. The authority for a name is indicated by the value of its (optional) codeSpace attribute. The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace. In common usage there will be one name per authority, so a processing application may select the name from its preferred codeSpace.
/// Vector of gml__CodeType* element refs with length 0..unbounded
    std::vector<gml__CodeType*         > name                           0;
//  END OF GROUP
/// Attribute reference "http://www.opengis.net/gml/3.2":id.
/// @brief The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.
   @xsd__ID                              id                             1;	///< Required attribute.
    END OF INHERITED FROM gml__AbstractGMLType */
/*  INHERITED FROM gml__AbstractGeometryType:
/// Attribute srsName of type xs:anyURI.
   @xsd__anyURI*                         srsName                        0;	///< Optional attribute.
/// Attribute srsDimension of type xs:positiveInteger.
   @xsd__positiveInteger*                srsDimension                   0;	///< Optional attribute.
/// Attribute axisLabels of type "http://www.opengis.net/gml/3.2":NCNameList.
   @gml__NCNameList*                     axisLabels                     0;	///< Optional attribute.
/// Attribute uomLabels of type "http://www.opengis.net/gml/3.2":NCNameList.
   @gml__NCNameList*                     uomLabels                      0;	///< Optional attribute.
    END OF INHERITED FROM gml__AbstractGeometryType */
/*  INHERITED FROM gml__AbstractGeometricPrimitiveType:
    END OF INHERITED FROM gml__AbstractGeometricPrimitiveType */
/*  INHERITED FROM gml__AbstractSurfaceType:
    END OF INHERITED FROM gml__AbstractSurfaceType */
/// @brief A boundary of a surface consists of a number of rings. In the normal 2D case, one of these rings is distinguished as being the exterior boundary. In a general manifold this is not always possible, in which case all boundaries shall be listed as interior boundaries, and the exterior will be empty.
/// Element reference "http://www.opengis.net/gml/3.2":exterior.
    gml__AbstractRingPropertyType*       exterior                       0;	///< Optional element.
/// @brief A boundary of a surface consists of a number of rings. The "interior" rings separate the surface / surface patch from the area enclosed by the rings.
/// Vector of gml__AbstractRingPropertyType* element refs with length 0..unbounded
    std::vector<gml__AbstractRingPropertyType*> interior                       0;
};

/// "http://www.opengis.net/gml/3.2":LineStringType is a complexType with complexContent extension of "http://www.opengis.net/gml/3.2":AbstractCurveType.
/// class gml__LineStringType operations:
/// - soap_new_gml__LineStringType(soap*) allocate
/// - soap_new_gml__LineStringType(soap*, int num) allocate array
/// - soap_new_req_gml__LineStringType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__LineStringType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__LineStringType(soap*, gml__LineStringType*) deserialize from a stream
/// - int soap_write_gml__LineStringType(soap, gml__LineStringType*) serialize to a stream
class gml__LineStringType : public gml__AbstractCurveType
{ public:
/*  INHERITED FROM gml__AbstractGMLType:
/// GROUP <xs:group name="StandardObjectProperties">
/// Vector of gml__MetaDataPropertyType* element refs with length 0..unbounded
    std::vector<gml__MetaDataPropertyType*> metaDataProperty               0;
/// @brief The value of this property is a text description of the object. gml:description uses gml:StringOrRefType as its content model, so it may contain a simple text string content, or carry a reference to an external description. The use of gml:description to reference an external description has been deprecated and replaced by the gml:descriptionReference property.
/// Element reference "http://www.opengis.net/gml/3.2":description.
    gml__StringOrRefType*                description                    0;	///< Optional element.
/// @brief The value of this property is a remote text description of the object. The xlink:href attribute of the gml:descriptionReference property references the external description.
/// Element reference "http://www.opengis.net/gml/3.2":descriptionReference.
    gml__ReferenceType*                  descriptionReference           0;	///< Optional element.
/// @brief Often, a special identifier is assigned to an object by the maintaining authority with the intention that it is used in references to the object For such cases, the codeSpace shall be provided. That identifier is usually unique either globally or within an application domain. gml:identifier is a pre-defined property for such identifiers.
/// Element reference "http://www.opengis.net/gml/3.2":identifier.
    gml__CodeWithAuthorityType*          identifier                     0;	///< Optional element.
/// @brief The gml:name property provides a label or identifier for the object, commonly a descriptive name. An object may have several names, typically assigned by different authorities. gml:name uses the gml:CodeType content model. The authority for a name is indicated by the value of its (optional) codeSpace attribute. The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace. In common usage there will be one name per authority, so a processing application may select the name from its preferred codeSpace.
/// Vector of gml__CodeType* element refs with length 0..unbounded
    std::vector<gml__CodeType*         > name                           0;
//  END OF GROUP
/// Attribute reference "http://www.opengis.net/gml/3.2":id.
/// @brief The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.
   @xsd__ID                              id                             1;	///< Required attribute.
    END OF INHERITED FROM gml__AbstractGMLType */
/*  INHERITED FROM gml__AbstractGeometryType:
/// Attribute srsName of type xs:anyURI.
   @xsd__anyURI*                         srsName                        0;	///< Optional attribute.
/// Attribute srsDimension of type xs:positiveInteger.
   @xsd__positiveInteger*                srsDimension                   0;	///< Optional attribute.
/// Attribute axisLabels of type "http://www.opengis.net/gml/3.2":NCNameList.
   @gml__NCNameList*                     axisLabels                     0;	///< Optional attribute.
/// Attribute uomLabels of type "http://www.opengis.net/gml/3.2":NCNameList.
   @gml__NCNameList*                     uomLabels                      0;	///< Optional attribute.
    END OF INHERITED FROM gml__AbstractGeometryType */
/*  INHERITED FROM gml__AbstractGeometricPrimitiveType:
    END OF INHERITED FROM gml__AbstractGeometricPrimitiveType */
/*  INHERITED FROM gml__AbstractCurveType:
    END OF INHERITED FROM gml__AbstractCurveType */
/// CHOICE <xs:choice>
   $int                                  __union_LineStringType        ;	///< Union _gml__union_LineStringType selector: set to SOAP_UNION__gml__union_LineStringType_<fieldname>
    union _gml__union_LineStringType
    {
/// CHOICE <xs:choice minOccurs="2" maxOccurs="unbounded">
    struct ___gml__union_LineStringType_
    {
   $int                                  __size_LineStringType_         2;
    class __gml__union_LineStringType_
    {
   $int                                  __union_LineStringType_        2;	///< Union _gml__union_LineStringType_ selector: set to SOAP_UNION__gml__union_LineStringType__<fieldname>
    union _gml__union_LineStringType_
    {
/// Element reference "http://www.opengis.net/gml/3.2":pos.
    gml__DirectPositionType*             pos                            1;	///< Required element.
/// @brief This property element either references a point via the XLink-attributes or contains the point element. pointProperty is the predefined property which may be used by GML Application Schemas whenever a GML feature has a property with a value that is substitutable for Point.
/// Element reference "http://www.opengis.net/gml/3.2":pointProperty.
    gml__PointPropertyType*              pointProperty                  1;	///< Required element.
/// Element reference "http://www.opengis.net/gml/3.2":pointRep.
    gml__PointPropertyType*              pointRep                       1;	///< Required element.
    }                                    union_LineStringType_         ;
    }                                   *__union_LineStringType_       ;
    }                                    __union_LineStringType_       ;
//  END OF CHOICE
/// Element reference "http://www.opengis.net/gml/3.2":posList.
    gml__DirectPositionListType*         posList                        1;	///< Required element.
/// Element reference "http://www.opengis.net/gml/3.2":coordinates.
    gml__CoordinatesType*                coordinates                    1;	///< Required element.
    }                                    union_LineStringType          ;
//  END OF CHOICE
};

/// "http://www.opengis.net/gml/3.2":BaseUnitType is a complexType with complexContent extension of "http://www.opengis.net/gml/3.2":UnitDefinitionType.
/// class gml__BaseUnitType operations:
/// - soap_new_gml__BaseUnitType(soap*) allocate
/// - soap_new_gml__BaseUnitType(soap*, int num) allocate array
/// - soap_new_req_gml__BaseUnitType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__BaseUnitType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__BaseUnitType(soap*, gml__BaseUnitType*) deserialize from a stream
/// - int soap_write_gml__BaseUnitType(soap, gml__BaseUnitType*) serialize to a stream
class gml__BaseUnitType : public gml__UnitDefinitionType
{ public:
/*  INHERITED FROM gml__DefinitionBaseType:
    END OF INHERITED FROM gml__DefinitionBaseType */
/*  INHERITED FROM gml__DefinitionType:
/// Element reference "http://www.opengis.net/gml/3.2":remarks.
    std::string*                         remarks                        0;	///< Optional element.
    END OF INHERITED FROM gml__DefinitionType */
/*  INHERITED FROM gml__UnitDefinitionType:
/// @brief The gml:quantityType property indicates the phenomenon to which the units apply. This element contains an informal description of the phenomenon or type of physical quantity that is measured or observed. When the physical quantity is the result of an observation or measurement, this term is known as observable type or measurand. The use of gml:quantityType for references to remote values is deprecated.
/// Element reference "http://www.opengis.net/gml/3.2":quantityType.
    gml__StringOrRefType*                quantityType                   0;	///< Optional element.
/// @brief The gml:quantityTypeReference property indicates the phenomenon to which the units apply. The content is a reference to a remote value.
/// Element reference "http://www.opengis.net/gml/3.2":quantityTypeReference.
    gml__ReferenceType*                  quantityTypeReference          0;	///< Optional element.
/// @brief The catalogSymbol is the preferred lexical symbol used for this unit of measure. The codeSpace attribute in gml:CodeType identifies a namespace for the catalog symbol value, and might reference the external catalog. The string value in gml:CodeType contains the value of a symbol that should be unique within this catalog namespace. This symbol often appears explicitly in the catalog, but it could be a combination of symbols using a specified algebra of units.
/// Element reference "http://www.opengis.net/gml/3.2":catalogSymbol.
    gml__CodeType*                       catalogSymbol                  0;	///< Optional element.
    END OF INHERITED FROM gml__UnitDefinitionType */
/// Element unitsSystem of type "http://www.opengis.net/gml/3.2":ReferenceType.
    gml__ReferenceType*                  unitsSystem                    1;	///< Required element.
};

/// "http://www.opengis.net/gml/3.2":DerivedUnitType is a complexType with complexContent extension of "http://www.opengis.net/gml/3.2":UnitDefinitionType.
/// class gml__DerivedUnitType operations:
/// - soap_new_gml__DerivedUnitType(soap*) allocate
/// - soap_new_gml__DerivedUnitType(soap*, int num) allocate array
/// - soap_new_req_gml__DerivedUnitType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__DerivedUnitType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__DerivedUnitType(soap*, gml__DerivedUnitType*) deserialize from a stream
/// - int soap_write_gml__DerivedUnitType(soap, gml__DerivedUnitType*) serialize to a stream
class gml__DerivedUnitType : public gml__UnitDefinitionType
{ public:
/*  INHERITED FROM gml__DefinitionBaseType:
    END OF INHERITED FROM gml__DefinitionBaseType */
/*  INHERITED FROM gml__DefinitionType:
/// Element reference "http://www.opengis.net/gml/3.2":remarks.
    std::string*                         remarks                        0;	///< Optional element.
    END OF INHERITED FROM gml__DefinitionType */
/*  INHERITED FROM gml__UnitDefinitionType:
/// @brief The gml:quantityType property indicates the phenomenon to which the units apply. This element contains an informal description of the phenomenon or type of physical quantity that is measured or observed. When the physical quantity is the result of an observation or measurement, this term is known as observable type or measurand. The use of gml:quantityType for references to remote values is deprecated.
/// Element reference "http://www.opengis.net/gml/3.2":quantityType.
    gml__StringOrRefType*                quantityType                   0;	///< Optional element.
/// @brief The gml:quantityTypeReference property indicates the phenomenon to which the units apply. The content is a reference to a remote value.
/// Element reference "http://www.opengis.net/gml/3.2":quantityTypeReference.
    gml__ReferenceType*                  quantityTypeReference          0;	///< Optional element.
/// @brief The catalogSymbol is the preferred lexical symbol used for this unit of measure. The codeSpace attribute in gml:CodeType identifies a namespace for the catalog symbol value, and might reference the external catalog. The string value in gml:CodeType contains the value of a symbol that should be unique within this catalog namespace. This symbol often appears explicitly in the catalog, but it could be a combination of symbols using a specified algebra of units.
/// Element reference "http://www.opengis.net/gml/3.2":catalogSymbol.
    gml__CodeType*                       catalogSymbol                  0;	///< Optional element.
    END OF INHERITED FROM gml__UnitDefinitionType */
/// @brief A set of gml:derivationUnitTerm elements describes a derived unit of measure. Each element carries an integer exponent. The terms are combined by raising each referenced unit to the power of its exponent and forming the product. This unit term references another unit of measure (uom) and provides an integer exponent applied to that unit in defining the compound unit. The exponent may be positive or negative, but not zero.
/// Vector of gml__DerivationUnitTermType* element refs with length 1..unbounded
    std::vector<gml__DerivationUnitTermType*> derivationUnitTerm             1;
};

/// "http://www.opengis.net/gml/3.2":ConventionalUnitType is a complexType with complexContent extension of "http://www.opengis.net/gml/3.2":UnitDefinitionType.
/// class gml__ConventionalUnitType operations:
/// - soap_new_gml__ConventionalUnitType(soap*) allocate
/// - soap_new_gml__ConventionalUnitType(soap*, int num) allocate array
/// - soap_new_req_gml__ConventionalUnitType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__ConventionalUnitType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__ConventionalUnitType(soap*, gml__ConventionalUnitType*) deserialize from a stream
/// - int soap_write_gml__ConventionalUnitType(soap, gml__ConventionalUnitType*) serialize to a stream
class gml__ConventionalUnitType : public gml__UnitDefinitionType
{ public:
/*  INHERITED FROM gml__DefinitionBaseType:
    END OF INHERITED FROM gml__DefinitionBaseType */
/*  INHERITED FROM gml__DefinitionType:
/// Element reference "http://www.opengis.net/gml/3.2":remarks.
    std::string*                         remarks                        0;	///< Optional element.
    END OF INHERITED FROM gml__DefinitionType */
/*  INHERITED FROM gml__UnitDefinitionType:
/// @brief The gml:quantityType property indicates the phenomenon to which the units apply. This element contains an informal description of the phenomenon or type of physical quantity that is measured or observed. When the physical quantity is the result of an observation or measurement, this term is known as observable type or measurand. The use of gml:quantityType for references to remote values is deprecated.
/// Element reference "http://www.opengis.net/gml/3.2":quantityType.
    gml__StringOrRefType*                quantityType                   0;	///< Optional element.
/// @brief The gml:quantityTypeReference property indicates the phenomenon to which the units apply. The content is a reference to a remote value.
/// Element reference "http://www.opengis.net/gml/3.2":quantityTypeReference.
    gml__ReferenceType*                  quantityTypeReference          0;	///< Optional element.
/// @brief The catalogSymbol is the preferred lexical symbol used for this unit of measure. The codeSpace attribute in gml:CodeType identifies a namespace for the catalog symbol value, and might reference the external catalog. The string value in gml:CodeType contains the value of a symbol that should be unique within this catalog namespace. This symbol often appears explicitly in the catalog, but it could be a combination of symbols using a specified algebra of units.
/// Element reference "http://www.opengis.net/gml/3.2":catalogSymbol.
    gml__CodeType*                       catalogSymbol                  0;	///< Optional element.
    END OF INHERITED FROM gml__UnitDefinitionType */
/// CHOICE <xs:choice>
   $int                                  __union_ConventionalUnitType  ;	///< Union _gml__union_ConventionalUnitType selector: set to SOAP_UNION__gml__union_ConventionalUnitType_<fieldname>
    union _gml__union_ConventionalUnitType
    {
/// @brief The elements gml:conversionToPreferredUnit and gml:roughConversionToPreferredUnit represent parameters used to convert conventional units to preferred units for this physical quantity type. A preferred unit is either a Base Unit or a Derived Unit that is selected for all values of one physical quantity type.
/// Element reference "http://www.opengis.net/gml/3.2":conversionToPreferredUnit.
    gml__ConversionToPreferredUnitType*  conversionToPreferredUnit      1;	///< Required element.
/// @brief The elements gml:conversionToPreferredUnit and gml:roughConversionToPreferredUnit represent parameters used to convert conventional units to preferred units for this physical quantity type. A preferred unit is either a Base Unit or a Derived Unit that is selected for all values of one physical quantity type.
/// Element reference "http://www.opengis.net/gml/3.2":roughConversionToPreferredUnit.
    gml__ConversionToPreferredUnitType*  roughConversionToPreferredUnit 1;	///< Required element.
    }                                    union_ConventionalUnitType    ;
//  END OF CHOICE
/// @brief A set of gml:derivationUnitTerm elements describes a derived unit of measure. Each element carries an integer exponent. The terms are combined by raising each referenced unit to the power of its exponent and forming the product. This unit term references another unit of measure (uom) and provides an integer exponent applied to that unit in defining the compound unit. The exponent may be positive or negative, but not zero.
/// Vector of gml__DerivationUnitTermType* element refs with length 0..unbounded
    std::vector<gml__DerivationUnitTermType*> derivationUnitTerm             0;
};

/// "http://www.opengis.net/gml/3.2":TimeInstantType is a complexType with complexContent extension of "http://www.opengis.net/gml/3.2":AbstractTimeGeometricPrimitiveType.
/// class gml__TimeInstantType operations:
/// - soap_new_gml__TimeInstantType(soap*) allocate
/// - soap_new_gml__TimeInstantType(soap*, int num) allocate array
/// - soap_new_req_gml__TimeInstantType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__TimeInstantType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__TimeInstantType(soap*, gml__TimeInstantType*) deserialize from a stream
/// - int soap_write_gml__TimeInstantType(soap, gml__TimeInstantType*) serialize to a stream
class gml__TimeInstantType : public gml__AbstractTimeGeometricPrimitiveType
{ public:
/*  INHERITED FROM gml__AbstractGMLType:
/// GROUP <xs:group name="StandardObjectProperties">
/// Vector of gml__MetaDataPropertyType* element refs with length 0..unbounded
    std::vector<gml__MetaDataPropertyType*> metaDataProperty               0;
/// @brief The value of this property is a text description of the object. gml:description uses gml:StringOrRefType as its content model, so it may contain a simple text string content, or carry a reference to an external description. The use of gml:description to reference an external description has been deprecated and replaced by the gml:descriptionReference property.
/// Element reference "http://www.opengis.net/gml/3.2":description.
    gml__StringOrRefType*                description                    0;	///< Optional element.
/// @brief The value of this property is a remote text description of the object. The xlink:href attribute of the gml:descriptionReference property references the external description.
/// Element reference "http://www.opengis.net/gml/3.2":descriptionReference.
    gml__ReferenceType*                  descriptionReference           0;	///< Optional element.
/// @brief Often, a special identifier is assigned to an object by the maintaining authority with the intention that it is used in references to the object For such cases, the codeSpace shall be provided. That identifier is usually unique either globally or within an application domain. gml:identifier is a pre-defined property for such identifiers.
/// Element reference "http://www.opengis.net/gml/3.2":identifier.
    gml__CodeWithAuthorityType*          identifier                     0;	///< Optional element.
/// @brief The gml:name property provides a label or identifier for the object, commonly a descriptive name. An object may have several names, typically assigned by different authorities. gml:name uses the gml:CodeType content model. The authority for a name is indicated by the value of its (optional) codeSpace attribute. The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace. In common usage there will be one name per authority, so a processing application may select the name from its preferred codeSpace.
/// Vector of gml__CodeType* element refs with length 0..unbounded
    std::vector<gml__CodeType*         > name                           0;
//  END OF GROUP
/// Attribute reference "http://www.opengis.net/gml/3.2":id.
/// @brief The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.
   @xsd__ID                              id                             1;	///< Required attribute.
    END OF INHERITED FROM gml__AbstractGMLType */
/*  INHERITED FROM gml__AbstractTimeObjectType:
    END OF INHERITED FROM gml__AbstractTimeObjectType */
/*  INHERITED FROM gml__AbstractTimePrimitiveType:
/// Vector of gml__RelatedTimeType* with length 0..unbounded
    std::vector<gml__RelatedTimeType*  > relatedTime                    0;
    END OF INHERITED FROM gml__AbstractTimePrimitiveType */
/*  INHERITED FROM gml__AbstractTimeGeometricPrimitiveType:
/// Attribute frame of type xs:anyURI.
   @xsd__anyURI                          frame                          0;	///< Default value="#ISO-8601".
    END OF INHERITED FROM gml__AbstractTimeGeometricPrimitiveType */
/// @brief This element is used directly as a property of gml:TimeInstant (see 15.2.2.3), and may also be used in application schemas.
/// Element reference "http://www.opengis.net/gml/3.2":timePosition.
    gml__TimePositionType*               timePosition                   1;	///< Required element.
};

/// "http://www.opengis.net/gml/3.2":TimePeriodType is a complexType with complexContent extension of "http://www.opengis.net/gml/3.2":AbstractTimeGeometricPrimitiveType.
/// class gml__TimePeriodType operations:
/// - soap_new_gml__TimePeriodType(soap*) allocate
/// - soap_new_gml__TimePeriodType(soap*, int num) allocate array
/// - soap_new_req_gml__TimePeriodType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__TimePeriodType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__TimePeriodType(soap*, gml__TimePeriodType*) deserialize from a stream
/// - int soap_write_gml__TimePeriodType(soap, gml__TimePeriodType*) serialize to a stream
class gml__TimePeriodType : public gml__AbstractTimeGeometricPrimitiveType
{ public:
/*  INHERITED FROM gml__AbstractGMLType:
/// GROUP <xs:group name="StandardObjectProperties">
/// Vector of gml__MetaDataPropertyType* element refs with length 0..unbounded
    std::vector<gml__MetaDataPropertyType*> metaDataProperty               0;
/// @brief The value of this property is a text description of the object. gml:description uses gml:StringOrRefType as its content model, so it may contain a simple text string content, or carry a reference to an external description. The use of gml:description to reference an external description has been deprecated and replaced by the gml:descriptionReference property.
/// Element reference "http://www.opengis.net/gml/3.2":description.
    gml__StringOrRefType*                description                    0;	///< Optional element.
/// @brief The value of this property is a remote text description of the object. The xlink:href attribute of the gml:descriptionReference property references the external description.
/// Element reference "http://www.opengis.net/gml/3.2":descriptionReference.
    gml__ReferenceType*                  descriptionReference           0;	///< Optional element.
/// @brief Often, a special identifier is assigned to an object by the maintaining authority with the intention that it is used in references to the object For such cases, the codeSpace shall be provided. That identifier is usually unique either globally or within an application domain. gml:identifier is a pre-defined property for such identifiers.
/// Element reference "http://www.opengis.net/gml/3.2":identifier.
    gml__CodeWithAuthorityType*          identifier                     0;	///< Optional element.
/// @brief The gml:name property provides a label or identifier for the object, commonly a descriptive name. An object may have several names, typically assigned by different authorities. gml:name uses the gml:CodeType content model. The authority for a name is indicated by the value of its (optional) codeSpace attribute. The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace. In common usage there will be one name per authority, so a processing application may select the name from its preferred codeSpace.
/// Vector of gml__CodeType* element refs with length 0..unbounded
    std::vector<gml__CodeType*         > name                           0;
//  END OF GROUP
/// Attribute reference "http://www.opengis.net/gml/3.2":id.
/// @brief The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.
   @xsd__ID                              id                             1;	///< Required attribute.
    END OF INHERITED FROM gml__AbstractGMLType */
/*  INHERITED FROM gml__AbstractTimeObjectType:
    END OF INHERITED FROM gml__AbstractTimeObjectType */
/*  INHERITED FROM gml__AbstractTimePrimitiveType:
/// Vector of gml__RelatedTimeType* with length 0..unbounded
    std::vector<gml__RelatedTimeType*  > relatedTime                    0;
    END OF INHERITED FROM gml__AbstractTimePrimitiveType */
/*  INHERITED FROM gml__AbstractTimeGeometricPrimitiveType:
/// Attribute frame of type xs:anyURI.
   @xsd__anyURI                          frame                          0;	///< Default value="#ISO-8601".
    END OF INHERITED FROM gml__AbstractTimeGeometricPrimitiveType */
/// CHOICE <xs:choice>
   $int                                  __union_TimePeriodType        ;	///< Union _gml__union_TimePeriodType selector: set to SOAP_UNION__gml__union_TimePeriodType_<fieldname>
    union _gml__union_TimePeriodType
    {
/// Element beginPosition of type "http://www.opengis.net/gml/3.2":TimePositionType.
    gml__TimePositionType*               beginPosition                  1;	///< Required element.
/// Element begin of type "http://www.opengis.net/gml/3.2":TimeInstantPropertyType.
    gml__TimeInstantPropertyType*        begin                          1;	///< Required element.
    }                                    union_TimePeriodType          ;
//  END OF CHOICE
/// CHOICE <xs:choice>
   $int                                  __union_TimePeriodType_       ;	///< Union _gml__union_TimePeriodType_ selector: set to SOAP_UNION__gml__union_TimePeriodType__<fieldname>
    union _gml__union_TimePeriodType_
    {
/// Element endPosition of type "http://www.opengis.net/gml/3.2":TimePositionType.
    gml__TimePositionType*               endPosition                    1;	///< Required element.
/// Element end of type "http://www.opengis.net/gml/3.2":TimeInstantPropertyType.
    gml__TimeInstantPropertyType*        end                            1;	///< Required element.
    }                                    union_TimePeriodType_         ;
//  END OF CHOICE
/// GROUP <xs:group name="timeLength" minOccurs="0">
/// @brief The length of a time period.
/// CHOICE <xs:choice minOccurs="0">
   $int                                  __union_TimePeriodType__       0;	///< Union _gml__union_TimePeriodType__ selector: set to SOAP_UNION__gml__union_TimePeriodType___<fieldname> or 0
    union _gml__union_TimePeriodType__
    {
/// @brief gml:duration conforms to the ISO 8601 syntax for temporal length as implemented by the XML Schema duration type.
/// Element reference "http://www.opengis.net/gml/3.2":duration.
    xsd__duration*                       duration                       1;	///< Required element.
/// @brief gml:timeInterval conforms to ISO 11404 which is based on floating point values for temporal length. ISO 11404 syntax specifies the use of a positiveInteger together with appropriate values for radix and factor. The resolution of the time interval is to one radix ^(-factor) of the specified time unit. The value of the unit is either selected from the units for time intervals from ISO 31-1:1992, or is another suitable unit. The encoding is defined for GML in gml:TimeUnitType. The second component of this union type provides a method for indicating time units other than the six standard units given in the enumeration.
/// Element reference "http://www.opengis.net/gml/3.2":timeInterval.
    gml__TimeIntervalLengthType*         timeInterval                   1;	///< Required element.
    }                                    union_TimePeriodType__        ;
//  END OF CHOICE
//  END OF GROUP
};

/// "http://www.opengis.net/gml/3.2":CoordinateSystemAxisType is a complexType with complexContent extension of "http://www.opengis.net/gml/3.2":IdentifiedObjectType.
/// class gml__CoordinateSystemAxisType operations:
/// - soap_new_gml__CoordinateSystemAxisType(soap*) allocate
/// - soap_new_gml__CoordinateSystemAxisType(soap*, int num) allocate array
/// - soap_new_req_gml__CoordinateSystemAxisType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__CoordinateSystemAxisType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__CoordinateSystemAxisType(soap*, gml__CoordinateSystemAxisType*) deserialize from a stream
/// - int soap_write_gml__CoordinateSystemAxisType(soap, gml__CoordinateSystemAxisType*) serialize to a stream
class gml__CoordinateSystemAxisType : public gml__IdentifiedObjectType
{ public:
/*  INHERITED FROM gml__DefinitionBaseType:
    END OF INHERITED FROM gml__DefinitionBaseType */
/*  INHERITED FROM gml__DefinitionType:
/// Element reference "http://www.opengis.net/gml/3.2":remarks.
    std::string*                         remarks                        0;	///< Optional element.
    END OF INHERITED FROM gml__DefinitionType */
/*  INHERITED FROM gml__IdentifiedObjectType:
    END OF INHERITED FROM gml__IdentifiedObjectType */
/// @brief gml:axisAbbrev is the abbreviation used for this coordinate system axis; this abbreviation is also used to identify the coordinates in the coordinate tuple. The codeSpace attribute may reference a source of more information on a set of standardized abbreviations, or on this abbreviation.
/// Element reference "http://www.opengis.net/gml/3.2":axisAbbrev.
    gml__CodeType*                       axisAbbrev                     1;	///< Required element.
/// @brief gml:axisDirection is the direction of this coordinate system axis (or in the case of Cartesian projected coordinates, the direction of this coordinate system axis at the origin). Within any set of coordinate system axes, only one of each pair of terms may be used. For earth-fixed CRSs, this direction is often approximate and intended to provide a human interpretable meaning to the axis. When a geodetic datum is used, the precise directions of the axes may therefore vary slightly from this approximate direction. The codeSpace attribute shall reference a source of information specifying the values and meanings of all the allowed string values for this property.
/// Element reference "http://www.opengis.net/gml/3.2":axisDirection.
    gml__CodeWithAuthorityType*          axisDirection                  1;	///< Required element.
/// @brief The gml:minimumValue and gml:maximumValue properties allow the specification of minimum and maximum value normally allowed for this axis, in the unit of measure for the axis. For a continuous angular axis such as longitude, the values wrap-around at this value. Also, values beyond this minimum/maximum can be used for specified purposes, such as in a bounding box. A value of minus infinity shall be allowed for the gml:minimumValue element, a value of plus infiniy for the gml:maximumValue element. If these elements are omitted, the value is unspecified.
/// Element reference "http://www.opengis.net/gml/3.2":minimumValue.
    double*                              minimumValue                   0;	///< Optional element.
/// @brief The gml:minimumValue and gml:maximumValue properties allow the specification of minimum and maximum value normally allowed for this axis, in the unit of measure for the axis. For a continuous angular axis such as longitude, the values wrap-around at this value. Also, values beyond this minimum/maximum can be used for specified purposes, such as in a bounding box. A value of minus infinity shall be allowed for the gml:minimumValue element, a value of plus infiniy for the gml:maximumValue element. If these elements are omitted, the value is unspecified.
/// Element reference "http://www.opengis.net/gml/3.2":maximumValue.
    double*                              maximumValue                   0;	///< Optional element.
/// @brief gml:rangeMeaning describes the meaning of axis value range specified by gml:minimumValue and gml:maximumValue. This element shall be omitted when both gml:minimumValue and gml:maximumValue are omitted. This element should be included when gml:minimumValue and/or gml:maximumValue are included. If this element is omitted when the gml:minimumValue and/or gml:maximumValue are included, the meaning is unspecified. The codeSpace attribute shall reference a source of information specifying the values and meanings of all the allowed string values for this property.
/// Element reference "http://www.opengis.net/gml/3.2":rangeMeaning.
    gml__CodeWithAuthorityType*          rangeMeaning                   0;	///< Optional element.
/// @brief The uom attribute provides an identifier of the unit of measure used for this coordinate system axis. The value of this coordinate in a coordinate tuple shall be recorded using this unit of measure, whenever those coordinates use a coordinate reference system that uses a coordinate system that uses this axis.
/// Attribute uom of type "http://www.opengis.net/gml/3.2":UomIdentifier.
   @gml__UomIdentifier                   uom                            1;	///< Required attribute.
};

/// "http://www.opengis.net/gml/3.2":AbstractCoordinateSystemType is an abstract complexType with complexContent extension of "http://www.opengis.net/gml/3.2":IdentifiedObjectType.
/// class gml__AbstractCoordinateSystemType operations:
/// - soap_new_gml__AbstractCoordinateSystemType(soap*) allocate
/// - soap_new_gml__AbstractCoordinateSystemType(soap*, int num) allocate array
/// - soap_new_req_gml__AbstractCoordinateSystemType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__AbstractCoordinateSystemType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__AbstractCoordinateSystemType(soap*, gml__AbstractCoordinateSystemType*) deserialize from a stream
/// - int soap_write_gml__AbstractCoordinateSystemType(soap, gml__AbstractCoordinateSystemType*) serialize to a stream
class gml__AbstractCoordinateSystemType : public gml__IdentifiedObjectType
{ public:
/*  INHERITED FROM gml__DefinitionBaseType:
    END OF INHERITED FROM gml__DefinitionBaseType */
/*  INHERITED FROM gml__DefinitionType:
/// Element reference "http://www.opengis.net/gml/3.2":remarks.
    std::string*                         remarks                        0;	///< Optional element.
    END OF INHERITED FROM gml__DefinitionType */
/*  INHERITED FROM gml__IdentifiedObjectType:
    END OF INHERITED FROM gml__IdentifiedObjectType */
/// @brief The gml:axis property is an association role (ordered sequence) to the coordinate system axes included in this coordinate system. The coordinate values in a coordinate tuple shall be recorded in the order in which the coordinate system axes associations are recorded, whenever those coordinates use a coordinate reference system that uses this coordinate system. The gml:AggregationAttributeGroup should be used to specify that the axis objects are ordered.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="axis" maxOccurs="unbounded"> with elements <usesAxis>
   $int                                  __sizeaxis                     0;
    class __gml__union_AbstractCoordinateSystemType
    {
   $int                                  __unionaxis                    0;	///< Union _gml__union_AbstractCoordinateSystemType selector: set to SOAP_UNION__gml__union_AbstractCoordinateSystemType_<fieldname>
/// Union for substitutionGroup="axis"
    union _gml__union_AbstractCoordinateSystemType
    {
/// @brief The gml:axis property is an association role (ordered sequence) to the coordinate system axes included in this coordinate system. The coordinate values in a coordinate tuple shall be recorded in the order in which the coordinate system axes associations are recorded, whenever those coordinates use a coordinate reference system that uses this coordinate system. The gml:AggregationAttributeGroup should be used to specify that the axis objects are ordered.
/// Vector of gml__CoordinateSystemAxisPropertyType* element refs with length 1..unbounded
    std::vector<gml__CoordinateSystemAxisPropertyType*> *axis                           1;
/// Element usesAxis of type "http://www.opengis.net/gml/3.2":CoordinateSystemAxisPropertyType.
    gml__CoordinateSystemAxisPropertyType*  usesAxis                       1;	///< Required element.
    }                                    __union_AbstractCoordinateSystemType;
;
    }                                   *__union_AbstractCoordinateSystemType;
//  END OF CHOICE OF SUBSTITUTIONS
/// Attribute aggregationType of type "http://www.opengis.net/gml/3.2":AggregationType.
   @enum gml__AggregationType*           aggregationType                0;	///< Optional attribute.
};

/// "http://www.opengis.net/gml/3.2":AbstractCRSType is an abstract complexType with complexContent extension of "http://www.opengis.net/gml/3.2":IdentifiedObjectType.
/// class gml__AbstractCRSType operations:
/// - soap_new_gml__AbstractCRSType(soap*) allocate
/// - soap_new_gml__AbstractCRSType(soap*, int num) allocate array
/// - soap_new_req_gml__AbstractCRSType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__AbstractCRSType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__AbstractCRSType(soap*, gml__AbstractCRSType*) deserialize from a stream
/// - int soap_write_gml__AbstractCRSType(soap, gml__AbstractCRSType*) serialize to a stream
class gml__AbstractCRSType : public gml__IdentifiedObjectType
{ public:
/*  INHERITED FROM gml__DefinitionBaseType:
    END OF INHERITED FROM gml__DefinitionBaseType */
/*  INHERITED FROM gml__DefinitionType:
/// Element reference "http://www.opengis.net/gml/3.2":remarks.
    std::string*                         remarks                        0;	///< Optional element.
    END OF INHERITED FROM gml__DefinitionType */
/*  INHERITED FROM gml__IdentifiedObjectType:
    END OF INHERITED FROM gml__IdentifiedObjectType */
/// @brief The gml:domainOfValidity property implements an association role to an EX_Extent object as encoded in ISO/TS 19139, either referencing or containing the definition of that extent.
/// Vector of _gml__domainOfValidity* element refs with length 0..unbounded
    std::vector<_gml__domainOfValidity*> domainOfValidity               0;
/// @brief The gml:scope property provides a description of the usage, or limitations of usage, for which this CRS-related object is valid. If unknown, enter "not known".
/// Vector of std::string element refs with length 1..unbounded
    std::vector<std::string            > scope                          1;
};

/// "http://www.opengis.net/gml/3.2":AbstractDatumType is an abstract complexType with complexContent extension of "http://www.opengis.net/gml/3.2":IdentifiedObjectType.
/// class gml__AbstractDatumType operations:
/// - soap_new_gml__AbstractDatumType(soap*) allocate
/// - soap_new_gml__AbstractDatumType(soap*, int num) allocate array
/// - soap_new_req_gml__AbstractDatumType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__AbstractDatumType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__AbstractDatumType(soap*, gml__AbstractDatumType*) deserialize from a stream
/// - int soap_write_gml__AbstractDatumType(soap, gml__AbstractDatumType*) serialize to a stream
class gml__AbstractDatumType : public gml__IdentifiedObjectType
{ public:
/*  INHERITED FROM gml__DefinitionBaseType:
    END OF INHERITED FROM gml__DefinitionBaseType */
/*  INHERITED FROM gml__DefinitionType:
/// Element reference "http://www.opengis.net/gml/3.2":remarks.
    std::string*                         remarks                        0;	///< Optional element.
    END OF INHERITED FROM gml__DefinitionType */
/*  INHERITED FROM gml__IdentifiedObjectType:
    END OF INHERITED FROM gml__IdentifiedObjectType */
/// @brief The gml:domainOfValidity property implements an association role to an EX_Extent object as encoded in ISO/TS 19139, either referencing or containing the definition of that extent.
/// Element reference "http://www.opengis.net/gml/3.2":domainOfValidity.
    _gml__domainOfValidity*              domainOfValidity               0;	///< Optional element.
/// @brief The gml:scope property provides a description of the usage, or limitations of usage, for which this CRS-related object is valid. If unknown, enter "not known".
/// Vector of std::string element refs with length 1..unbounded
    std::vector<std::string            > scope                          1;
/// @brief gml:anchorDefinition is a description, possibly including coordinates, of the definition used to anchor the datum to the Earth. Also known as the "origin", especially for engineering and image datums. The codeSpace attribute may be used to reference a source of more detailed on this point or surface, or on a set of such descriptions. - For a geodetic datum, this point is also known as the fundamental point, which is traditionally the point where the relationship between geoid and ellipsoid is defined. In some cases, the "fundamental point" may consist of a number of points. In those cases, the parameters defining the geoid/ellipsoid relationship have been averaged for these points, and the averages adopted as the datum definition. - For an engineering datum, the anchor definition may be a physical point, or it may be a point with defined coordinates in another CRS.may - For an image datum, the anchor definition is usually either the centre of the image or the corner of the image. - For a temporal datum, this attribute is not defined. Instead of the anchor definition, a temporal datum carries a separate time origin of type DateTime.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="anchorDefinition" minOccurs="0"> with elements <anchorPoint>
   $int                                  __unionanchorDefinition        0;	///< Union _gml__union_AbstractDatumType selector: set to SOAP_UNION__gml__union_AbstractDatumType_<fieldname> or 0
/// Union for substitutionGroup="anchorDefinition"
    union _gml__union_AbstractDatumType
    {
/// @brief gml:anchorDefinition is a description, possibly including coordinates, of the definition used to anchor the datum to the Earth. Also known as the "origin", especially for engineering and image datums. The codeSpace attribute may be used to reference a source of more detailed on this point or surface, or on a set of such descriptions. - For a geodetic datum, this point is also known as the fundamental point, which is traditionally the point where the relationship between geoid and ellipsoid is defined. In some cases, the "fundamental point" may consist of a number of points. In those cases, the parameters defining the geoid/ellipsoid relationship have been averaged for these points, and the averages adopted as the datum definition. - For an engineering datum, the anchor definition may be a physical point, or it may be a point with defined coordinates in another CRS.may - For an image datum, the anchor definition is usually either the centre of the image or the corner of the image. - For a temporal datum, this attribute is not defined. Instead of the anchor definition, a temporal datum carries a separate time origin of type DateTime.
/// Element reference "http://www.opengis.net/gml/3.2":anchorDefinition.
    gml__CodeType*                       anchorDefinition               0;	///< Optional element.
/// Element anchorPoint of type "http://www.opengis.net/gml/3.2":CodeType.
    gml__CodeType*                       anchorPoint                    1;	///< Required element.
    }                                    __union_AbstractDatumType     ;
//  END OF CHOICE OF SUBSTITUTIONS
/// @brief gml:realizationEpoch is the time after which this datum definition is valid. See ISO 19111 Table 32 for details.
/// Element reference "http://www.opengis.net/gml/3.2":realizationEpoch.
    xsd__date*                           realizationEpoch               0;	///< Optional element.
};

/// "http://www.opengis.net/gml/3.2":EllipsoidType is a complexType with complexContent extension of "http://www.opengis.net/gml/3.2":IdentifiedObjectType.
/// class gml__EllipsoidType operations:
/// - soap_new_gml__EllipsoidType(soap*) allocate
/// - soap_new_gml__EllipsoidType(soap*, int num) allocate array
/// - soap_new_req_gml__EllipsoidType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__EllipsoidType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__EllipsoidType(soap*, gml__EllipsoidType*) deserialize from a stream
/// - int soap_write_gml__EllipsoidType(soap, gml__EllipsoidType*) serialize to a stream
class gml__EllipsoidType : public gml__IdentifiedObjectType
{ public:
/*  INHERITED FROM gml__DefinitionBaseType:
    END OF INHERITED FROM gml__DefinitionBaseType */
/*  INHERITED FROM gml__DefinitionType:
/// Element reference "http://www.opengis.net/gml/3.2":remarks.
    std::string*                         remarks                        0;	///< Optional element.
    END OF INHERITED FROM gml__DefinitionType */
/*  INHERITED FROM gml__IdentifiedObjectType:
    END OF INHERITED FROM gml__IdentifiedObjectType */
/// @brief gml:semiMajorAxis specifies the length of the semi-major axis of the ellipsoid, with its units. Uses the MeasureType with the restriction that the unit of measure referenced by uom must be suitable for a length, such as metres or feet.
/// Element reference "http://www.opengis.net/gml/3.2":semiMajorAxis.
    gml__MeasureType*                    semiMajorAxis                  1;	///< Required element.
/// @brief gml:secondDefiningParameter is a property containing the definition of the second parameter that defines the shape of an ellipsoid. An ellipsoid requires two defining parameters: semi-major axis and inverse flattening or semi-major axis and semi-minor axis. When the reference body is a sphere rather than an ellipsoid, only a single defining parameter is required, namely the radius of the sphere; in that case, the semi-major axis "degenerates" into the radius of the sphere. The inverseFlattening element contains the inverse flattening value of the ellipsoid. This value is a scale factor (or ratio). It uses gml:LengthType with the restriction that the unit of measure referenced by the uom attribute must be suitable for a scale factor, such as percent, permil, or parts-per-million. The semiMinorAxis element contains the length of the semi-minor axis of the ellipsoid. When the isSphere element is included, the ellipsoid is degenerate and is actually a sphere. The sphere is completely defined by the semi-major axis, which is the radius of the sphere.
/// Element reference "http://www.opengis.net/gml/3.2":secondDefiningParameter.
    _gml__secondDefiningParameter*       secondDefiningParameter        1;	///< Required element.
};

/// "http://www.opengis.net/gml/3.2":PrimeMeridianType is a complexType with complexContent extension of "http://www.opengis.net/gml/3.2":IdentifiedObjectType.
/// class gml__PrimeMeridianType operations:
/// - soap_new_gml__PrimeMeridianType(soap*) allocate
/// - soap_new_gml__PrimeMeridianType(soap*, int num) allocate array
/// - soap_new_req_gml__PrimeMeridianType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__PrimeMeridianType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__PrimeMeridianType(soap*, gml__PrimeMeridianType*) deserialize from a stream
/// - int soap_write_gml__PrimeMeridianType(soap, gml__PrimeMeridianType*) serialize to a stream
class gml__PrimeMeridianType : public gml__IdentifiedObjectType
{ public:
/*  INHERITED FROM gml__DefinitionBaseType:
    END OF INHERITED FROM gml__DefinitionBaseType */
/*  INHERITED FROM gml__DefinitionType:
/// Element reference "http://www.opengis.net/gml/3.2":remarks.
    std::string*                         remarks                        0;	///< Optional element.
    END OF INHERITED FROM gml__DefinitionType */
/*  INHERITED FROM gml__IdentifiedObjectType:
    END OF INHERITED FROM gml__IdentifiedObjectType */
/// @brief gml:greenwichLongitude is the longitude of the prime meridian measured from the Greenwich meridian, positive eastward. If the value of the prime meridian "name" is "Greenwich" then the value of greenwichLongitude shall be 0 degrees.
/// Element reference "http://www.opengis.net/gml/3.2":greenwichLongitude.
    gml__AngleType*                      greenwichLongitude             1;	///< Required element.
};

/// "http://www.opengis.net/gml/3.2":AbstractCoordinateOperationType is an abstract complexType with complexContent extension of "http://www.opengis.net/gml/3.2":IdentifiedObjectType.
/// class gml__AbstractCoordinateOperationType operations:
/// - soap_new_gml__AbstractCoordinateOperationType(soap*) allocate
/// - soap_new_gml__AbstractCoordinateOperationType(soap*, int num) allocate array
/// - soap_new_req_gml__AbstractCoordinateOperationType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__AbstractCoordinateOperationType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__AbstractCoordinateOperationType(soap*, gml__AbstractCoordinateOperationType*) deserialize from a stream
/// - int soap_write_gml__AbstractCoordinateOperationType(soap, gml__AbstractCoordinateOperationType*) serialize to a stream
class gml__AbstractCoordinateOperationType : public gml__IdentifiedObjectType
{ public:
/*  INHERITED FROM gml__DefinitionBaseType:
    END OF INHERITED FROM gml__DefinitionBaseType */
/*  INHERITED FROM gml__DefinitionType:
/// Element reference "http://www.opengis.net/gml/3.2":remarks.
    std::string*                         remarks                        0;	///< Optional element.
    END OF INHERITED FROM gml__DefinitionType */
/*  INHERITED FROM gml__IdentifiedObjectType:
    END OF INHERITED FROM gml__IdentifiedObjectType */
/// @brief The gml:domainOfValidity property implements an association role to an EX_Extent object as encoded in ISO/TS 19139, either referencing or containing the definition of that extent.
/// Element reference "http://www.opengis.net/gml/3.2":domainOfValidity.
    _gml__domainOfValidity*              domainOfValidity               0;	///< Optional element.
/// @brief The gml:scope property provides a description of the usage, or limitations of usage, for which this CRS-related object is valid. If unknown, enter "not known".
/// Vector of std::string element refs with length 1..unbounded
    std::vector<std::string            > scope                          1;
/// @brief gml:operationVersion is the version of the coordinate transformation (i.e., instantiation due to the stochastic nature of the parameters). Mandatory when describing a transformation, and should not be supplied for a conversion.
/// Element reference "http://www.opengis.net/gml/3.2":operationVersion.
    std::string*                         operationVersion               0;	///< Optional element.
/// @brief gml:coordinateOperationAccuracy is an association role to a DQ_PositionalAccuracy object as encoded in ISO/TS 19139, either referencing or containing the definition of that positional accuracy. That object contains an estimate of the impact of this coordinate operation on point accuracy. That is, it gives position error estimates for the target coordinates of this coordinate operation, assuming no errors in the source coordinates.
/// Vector of _gml__coordinateOperationAccuracy* element refs with length 0..unbounded
    std::vector<_gml__coordinateOperationAccuracy*> coordinateOperationAccuracy    0;
/// @brief gml:sourceCRS is an association role to the source CRS (coordinate reference system) of this coordinate operation.
/// Element reference "http://www.opengis.net/gml/3.2":sourceCRS.
    gml__CRSPropertyType*                sourceCRS                      0;	///< Optional element.
/// @brief gml:targetCRS is an association role to the target CRS (coordinate reference system) of this coordinate operation.
/// Element reference "http://www.opengis.net/gml/3.2":targetCRS.
    gml__CRSPropertyType*                targetCRS                      0;	///< Optional element.
};

/// "http://www.opengis.net/gml/3.2":OperationMethodType is a complexType with complexContent extension of "http://www.opengis.net/gml/3.2":IdentifiedObjectType.
/// class gml__OperationMethodType operations:
/// - soap_new_gml__OperationMethodType(soap*) allocate
/// - soap_new_gml__OperationMethodType(soap*, int num) allocate array
/// - soap_new_req_gml__OperationMethodType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__OperationMethodType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__OperationMethodType(soap*, gml__OperationMethodType*) deserialize from a stream
/// - int soap_write_gml__OperationMethodType(soap, gml__OperationMethodType*) serialize to a stream
class gml__OperationMethodType : public gml__IdentifiedObjectType
{ public:
/*  INHERITED FROM gml__DefinitionBaseType:
    END OF INHERITED FROM gml__DefinitionBaseType */
/*  INHERITED FROM gml__DefinitionType:
/// Element reference "http://www.opengis.net/gml/3.2":remarks.
    std::string*                         remarks                        0;	///< Optional element.
    END OF INHERITED FROM gml__DefinitionType */
/*  INHERITED FROM gml__IdentifiedObjectType:
    END OF INHERITED FROM gml__IdentifiedObjectType */
/// CHOICE <xs:choice>
   $int                                  __union_OperationMethodType   ;	///< Union _gml__union_OperationMethodType selector: set to SOAP_UNION__gml__union_OperationMethodType_<fieldname>
    union _gml__union_OperationMethodType
    {
/// @brief gml:formulaCitation provides a reference to a publication giving the formula(s) or procedure used by an coordinate operation method.
/// Element reference "http://www.opengis.net/gml/3.2":formulaCitation.
    _gml__formulaCitation*               formulaCitation                1;	///< Required element.
/// @brief gml:formula Formula(s) or procedure used by an operation method. The use of the codespace attribite has been deprecated. The property value shall be a character string.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="formula"> with elements <methodFormula>
/// @brief gml:formula Formula(s) or procedure used by an operation method. The use of the codespace attribite has been deprecated. The property value shall be a character string.
/// Element reference "http://www.opengis.net/gml/3.2":formula.
    gml__CodeType*                       formula                        1;	///< Required element.
/// Element methodFormula of type "http://www.opengis.net/gml/3.2":CodeType.
    gml__CodeType*                       methodFormula                  1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
    }                                    union_OperationMethodType     ;
//  END OF CHOICE
/// @brief gml:sourceDimensions is the number of dimensions in the source CRS of this operation method.
/// Element reference "http://www.opengis.net/gml/3.2":sourceDimensions.
    xsd__positiveInteger*                sourceDimensions               0;	///< Optional element.
/// @brief gml:targetDimensions is the number of dimensions in the target CRS of this operation method.
/// Element reference "http://www.opengis.net/gml/3.2":targetDimensions.
    xsd__positiveInteger*                targetDimensions               0;	///< Optional element.
/// @brief gml:parameter is an association to an operation parameter or parameter group.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="parameter" minOccurs="0" maxOccurs="unbounded"> with elements <includesParameter> <generalOperationParameter>
   $int                                  __sizeparameter                0;
    class __gml__union_OperationMethodType__
    {
   $int                                  __unionparameter               0;	///< Union _gml__union_OperationMethodType__ selector: set to SOAP_UNION__gml__union_OperationMethodType___<fieldname> or 0
/// Union for substitutionGroup="parameter"
    union _gml__union_OperationMethodType__
    {
/// @brief gml:parameter is an association to an operation parameter or parameter group.
/// Vector of gml__AbstractGeneralOperationParameterPropertyType* element refs with length 0..unbounded
    std::vector<gml__AbstractGeneralOperationParameterPropertyType*> *parameter                      0;
/// Element includesParameter of type "http://www.opengis.net/gml/3.2":AbstractGeneralOperationParameterPropertyType.
    gml__AbstractGeneralOperationParameterPropertyType*  includesParameter              1;	///< Required element.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="generalOperationParameter"> with elements <usesParameter>
/// Element generalOperationParameter of type "http://www.opengis.net/gml/3.2":AbstractGeneralOperationParameterPropertyType.
    gml__AbstractGeneralOperationParameterPropertyType*  generalOperationParameter      1;	///< Required element.
/// Element usesParameter of type "http://www.opengis.net/gml/3.2":AbstractGeneralOperationParameterPropertyType.
    gml__AbstractGeneralOperationParameterPropertyType*  usesParameter                  1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
    }                                    __union_OperationMethodType__ ;
;
    }                                   *__union_OperationMethodType__ ;
//  END OF CHOICE OF SUBSTITUTIONS
};

/// "http://www.opengis.net/gml/3.2":AbstractGeneralOperationParameterType is an abstract complexType with complexContent extension of "http://www.opengis.net/gml/3.2":IdentifiedObjectType.
/// class gml__AbstractGeneralOperationParameterType operations:
/// - soap_new_gml__AbstractGeneralOperationParameterType(soap*) allocate
/// - soap_new_gml__AbstractGeneralOperationParameterType(soap*, int num) allocate array
/// - soap_new_req_gml__AbstractGeneralOperationParameterType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__AbstractGeneralOperationParameterType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__AbstractGeneralOperationParameterType(soap*, gml__AbstractGeneralOperationParameterType*) deserialize from a stream
/// - int soap_write_gml__AbstractGeneralOperationParameterType(soap, gml__AbstractGeneralOperationParameterType*) serialize to a stream
class gml__AbstractGeneralOperationParameterType : public gml__IdentifiedObjectType
{ public:
/*  INHERITED FROM gml__DefinitionBaseType:
    END OF INHERITED FROM gml__DefinitionBaseType */
/*  INHERITED FROM gml__DefinitionType:
/// Element reference "http://www.opengis.net/gml/3.2":remarks.
    std::string*                         remarks                        0;	///< Optional element.
    END OF INHERITED FROM gml__DefinitionType */
/*  INHERITED FROM gml__IdentifiedObjectType:
    END OF INHERITED FROM gml__IdentifiedObjectType */
/// @brief gml:minimumOccurs is the minimum number of times that values for this parameter group or parameter are required. If this attribute is omitted, the minimum number shall be one.
/// Element reference "http://www.opengis.net/gml/3.2":minimumOccurs.
    xsd__nonNegativeInteger*             minimumOccurs                  0;	///< Optional element.
};

/// "http://www.opengis.net/gml/3.2":DirectedObservationAtDistanceType is a complexType with complexContent extension of "http://www.opengis.net/gml/3.2":DirectedObservationType.
/// class gml__DirectedObservationAtDistanceType operations:
/// - soap_new_gml__DirectedObservationAtDistanceType(soap*) allocate
/// - soap_new_gml__DirectedObservationAtDistanceType(soap*, int num) allocate array
/// - soap_new_req_gml__DirectedObservationAtDistanceType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__DirectedObservationAtDistanceType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__DirectedObservationAtDistanceType(soap*, gml__DirectedObservationAtDistanceType*) deserialize from a stream
/// - int soap_write_gml__DirectedObservationAtDistanceType(soap, gml__DirectedObservationAtDistanceType*) serialize to a stream
class gml__DirectedObservationAtDistanceType : public gml__DirectedObservationType
{ public:
/*  INHERITED FROM gml__AbstractGMLType:
/// GROUP <xs:group name="StandardObjectProperties">
/// Vector of gml__MetaDataPropertyType* element refs with length 0..unbounded
    std::vector<gml__MetaDataPropertyType*> metaDataProperty               0;
/// @brief The value of this property is a text description of the object. gml:description uses gml:StringOrRefType as its content model, so it may contain a simple text string content, or carry a reference to an external description. The use of gml:description to reference an external description has been deprecated and replaced by the gml:descriptionReference property.
/// Element reference "http://www.opengis.net/gml/3.2":description.
    gml__StringOrRefType*                description                    0;	///< Optional element.
/// @brief The value of this property is a remote text description of the object. The xlink:href attribute of the gml:descriptionReference property references the external description.
/// Element reference "http://www.opengis.net/gml/3.2":descriptionReference.
    gml__ReferenceType*                  descriptionReference           0;	///< Optional element.
/// @brief Often, a special identifier is assigned to an object by the maintaining authority with the intention that it is used in references to the object For such cases, the codeSpace shall be provided. That identifier is usually unique either globally or within an application domain. gml:identifier is a pre-defined property for such identifiers.
/// Element reference "http://www.opengis.net/gml/3.2":identifier.
    gml__CodeWithAuthorityType*          identifier                     0;	///< Optional element.
/// @brief The gml:name property provides a label or identifier for the object, commonly a descriptive name. An object may have several names, typically assigned by different authorities. gml:name uses the gml:CodeType content model. The authority for a name is indicated by the value of its (optional) codeSpace attribute. The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace. In common usage there will be one name per authority, so a processing application may select the name from its preferred codeSpace.
/// Vector of gml__CodeType* element refs with length 0..unbounded
    std::vector<gml__CodeType*         > name                           0;
//  END OF GROUP
/// Attribute reference "http://www.opengis.net/gml/3.2":id.
/// @brief The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.
   @xsd__ID                              id                             1;	///< Required attribute.
    END OF INHERITED FROM gml__AbstractGMLType */
/*  INHERITED FROM gml__AbstractFeatureType:
/// @brief This property describes the minimum bounding box or rectangle that encloses the entire feature.
/// Element reference "http://www.opengis.net/gml/3.2":boundedBy.
    gml__BoundingShapeType*              boundedBy                      0;	///< Optional element.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="location" minOccurs="0"> with elements <priorityLocation>
   $int                                  __unionlocation                0;	///< Union _gml__union_DirectedObservationAtDistanceType selector: set to SOAP_UNION__gml__union_DirectedObservationAtDistanceType_<fieldname> or 0
/// Union for substitutionGroup="location"
    union _gml__union_DirectedObservationAtDistanceType
    {
/// Element reference "http://www.opengis.net/gml/3.2":location.
    gml__LocationPropertyType*           location                       0;	///< Optional element.
/// Element priorityLocation of type "http://www.opengis.net/gml/3.2":PriorityLocationPropertyType.
    gml__PriorityLocationPropertyType*   priorityLocation               1;	///< Required element.
    }                                    __union_DirectedObservationAtDistanceType;
//  END OF CHOICE OF SUBSTITUTIONS
    END OF INHERITED FROM gml__AbstractFeatureType */
/*  INHERITED FROM gml__ObservationType:
/// @brief gml:validTime is a convenience property element.
/// Element reference "http://www.opengis.net/gml/3.2":validTime.
    gml__TimePrimitivePropertyType*      validTime                      1;	///< Required element.
/// Element reference "http://www.opengis.net/gml/3.2":using.
    gml__ProcedurePropertyType*          using_                         0;	///< Optional element.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="target" minOccurs="0"> with elements <subject>
   $int                                  __uniontarget                  0;	///< Union _gml__union_DirectedObservationAtDistanceType_ selector: set to SOAP_UNION__gml__union_DirectedObservationAtDistanceType__<fieldname> or 0
/// Union for substitutionGroup="target"
    union _gml__union_DirectedObservationAtDistanceType_
    {
/// Element reference "http://www.opengis.net/gml/3.2":target.
    gml__TargetPropertyType*             target                         0;	///< Optional element.
/// Element subject of type "http://www.opengis.net/gml/3.2":TargetPropertyType.
    gml__TargetPropertyType*             subject                        1;	///< Required element.
    }                                    __union_DirectedObservationAtDistanceType_;
//  END OF CHOICE OF SUBSTITUTIONS
/// Element reference "http://www.opengis.net/gml/3.2":resultOf.
    gml__ResultType*                     resultOf                       1;	///< Required element.
    END OF INHERITED FROM gml__ObservationType */
/*  INHERITED FROM gml__DirectedObservationType:
/// @brief The property gml:direction is intended as a pre-defined property expressing a direction to be assigned to features defined in a GML application schema.
/// Element reference "http://www.opengis.net/gml/3.2":direction.
    gml__DirectionPropertyType*          direction                      1;	///< Required element.
    END OF INHERITED FROM gml__DirectedObservationType */
/// Element distance of type "http://www.opengis.net/gml/3.2":MeasureType.
    gml__MeasureType*                    distance                       1;	///< Required element.
};

/// "http://www.opengis.net/gml/3.2":TimeCoordinateSystemType is a complexType with complexContent extension of "http://www.opengis.net/gml/3.2":TimeReferenceSystemType.
/// class gml__TimeCoordinateSystemType operations:
/// - soap_new_gml__TimeCoordinateSystemType(soap*) allocate
/// - soap_new_gml__TimeCoordinateSystemType(soap*, int num) allocate array
/// - soap_new_req_gml__TimeCoordinateSystemType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__TimeCoordinateSystemType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__TimeCoordinateSystemType(soap*, gml__TimeCoordinateSystemType*) deserialize from a stream
/// - int soap_write_gml__TimeCoordinateSystemType(soap, gml__TimeCoordinateSystemType*) serialize to a stream
class gml__TimeCoordinateSystemType : public gml__TimeReferenceSystemType
{ public:
/*  INHERITED FROM gml__DefinitionBaseType:
    END OF INHERITED FROM gml__DefinitionBaseType */
/*  INHERITED FROM gml__DefinitionType:
/// Element reference "http://www.opengis.net/gml/3.2":remarks.
    std::string*                         remarks                        0;	///< Optional element.
    END OF INHERITED FROM gml__DefinitionType */
/*  INHERITED FROM gml__TimeReferenceSystemType:
/// Element domainOfValidity of type xs:string.
    std::string                          domainOfValidity               1;	///< Required element.
    END OF INHERITED FROM gml__TimeReferenceSystemType */
/// CHOICE <xs:choice>
   $int                                  __union_TimeCoordinateSystemType;	///< Union _gml__union_TimeCoordinateSystemType selector: set to SOAP_UNION__gml__union_TimeCoordinateSystemType_<fieldname>
    union _gml__union_TimeCoordinateSystemType
    {
/// Element originPosition of type "http://www.opengis.net/gml/3.2":TimePositionType.
    gml__TimePositionType*               originPosition                 1;	///< Required element.
/// Element origin of type "http://www.opengis.net/gml/3.2":TimeInstantPropertyType.
    gml__TimeInstantPropertyType*        origin                         1;	///< Required element.
    }                                    union_TimeCoordinateSystemType;
//  END OF CHOICE
/// Element interval of type "http://www.opengis.net/gml/3.2":TimeIntervalLengthType.
    gml__TimeIntervalLengthType*         interval                       1;	///< Required element.
};

/// "http://www.opengis.net/gml/3.2":TimeCalendarType is a complexType with complexContent extension of "http://www.opengis.net/gml/3.2":TimeReferenceSystemType.
/// class gml__TimeCalendarType operations:
/// - soap_new_gml__TimeCalendarType(soap*) allocate
/// - soap_new_gml__TimeCalendarType(soap*, int num) allocate array
/// - soap_new_req_gml__TimeCalendarType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__TimeCalendarType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__TimeCalendarType(soap*, gml__TimeCalendarType*) deserialize from a stream
/// - int soap_write_gml__TimeCalendarType(soap, gml__TimeCalendarType*) serialize to a stream
class gml__TimeCalendarType : public gml__TimeReferenceSystemType
{ public:
/*  INHERITED FROM gml__DefinitionBaseType:
    END OF INHERITED FROM gml__DefinitionBaseType */
/*  INHERITED FROM gml__DefinitionType:
/// Element reference "http://www.opengis.net/gml/3.2":remarks.
    std::string*                         remarks                        0;	///< Optional element.
    END OF INHERITED FROM gml__DefinitionType */
/*  INHERITED FROM gml__TimeReferenceSystemType:
/// Element domainOfValidity of type xs:string.
    std::string                          domainOfValidity               1;	///< Required element.
    END OF INHERITED FROM gml__TimeReferenceSystemType */
/// Vector of gml__TimeCalendarEraPropertyType* with length 1..unbounded
    std::vector<gml__TimeCalendarEraPropertyType*> referenceFrame                 1;
};

/// "http://www.opengis.net/gml/3.2":TimeClockType is a complexType with complexContent extension of "http://www.opengis.net/gml/3.2":TimeReferenceSystemType.
/// class gml__TimeClockType operations:
/// - soap_new_gml__TimeClockType(soap*) allocate
/// - soap_new_gml__TimeClockType(soap*, int num) allocate array
/// - soap_new_req_gml__TimeClockType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__TimeClockType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__TimeClockType(soap*, gml__TimeClockType*) deserialize from a stream
/// - int soap_write_gml__TimeClockType(soap, gml__TimeClockType*) serialize to a stream
class gml__TimeClockType : public gml__TimeReferenceSystemType
{ public:
/*  INHERITED FROM gml__DefinitionBaseType:
    END OF INHERITED FROM gml__DefinitionBaseType */
/*  INHERITED FROM gml__DefinitionType:
/// Element reference "http://www.opengis.net/gml/3.2":remarks.
    std::string*                         remarks                        0;	///< Optional element.
    END OF INHERITED FROM gml__DefinitionType */
/*  INHERITED FROM gml__TimeReferenceSystemType:
/// Element domainOfValidity of type xs:string.
    std::string                          domainOfValidity               1;	///< Required element.
    END OF INHERITED FROM gml__TimeReferenceSystemType */
/// Element referenceEvent of type "http://www.opengis.net/gml/3.2":StringOrRefType.
    gml__StringOrRefType*                referenceEvent                 1;	///< Required element.
/// Element referenceTime of type xs:time.
    xsd__time                            referenceTime                  1;	///< Required element.
/// Element utcReference of type xs:time.
    xsd__time                            utcReference                   1;	///< Required element.
/// Vector of gml__TimeCalendarPropertyType* with length 0..unbounded
    std::vector<gml__TimeCalendarPropertyType*> dateBasis                      0;
};

/// "http://www.opengis.net/gml/3.2":TimeOrdinalReferenceSystemType is a complexType with complexContent extension of "http://www.opengis.net/gml/3.2":TimeReferenceSystemType.
/// class gml__TimeOrdinalReferenceSystemType operations:
/// - soap_new_gml__TimeOrdinalReferenceSystemType(soap*) allocate
/// - soap_new_gml__TimeOrdinalReferenceSystemType(soap*, int num) allocate array
/// - soap_new_req_gml__TimeOrdinalReferenceSystemType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__TimeOrdinalReferenceSystemType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__TimeOrdinalReferenceSystemType(soap*, gml__TimeOrdinalReferenceSystemType*) deserialize from a stream
/// - int soap_write_gml__TimeOrdinalReferenceSystemType(soap, gml__TimeOrdinalReferenceSystemType*) serialize to a stream
class gml__TimeOrdinalReferenceSystemType : public gml__TimeReferenceSystemType
{ public:
/*  INHERITED FROM gml__DefinitionBaseType:
    END OF INHERITED FROM gml__DefinitionBaseType */
/*  INHERITED FROM gml__DefinitionType:
/// Element reference "http://www.opengis.net/gml/3.2":remarks.
    std::string*                         remarks                        0;	///< Optional element.
    END OF INHERITED FROM gml__DefinitionType */
/*  INHERITED FROM gml__TimeReferenceSystemType:
/// Element domainOfValidity of type xs:string.
    std::string                          domainOfValidity               1;	///< Required element.
    END OF INHERITED FROM gml__TimeReferenceSystemType */
/// Vector of gml__TimeOrdinalEraPropertyType* with length 1..unbounded
    std::vector<gml__TimeOrdinalEraPropertyType*> component                      1;
};

/// "http://www.opengis.net/gml/3.2":TimeNodeType is a complexType with complexContent extension of "http://www.opengis.net/gml/3.2":AbstractTimeTopologyPrimitiveType.
/// class gml__TimeNodeType operations:
/// - soap_new_gml__TimeNodeType(soap*) allocate
/// - soap_new_gml__TimeNodeType(soap*, int num) allocate array
/// - soap_new_req_gml__TimeNodeType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__TimeNodeType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__TimeNodeType(soap*, gml__TimeNodeType*) deserialize from a stream
/// - int soap_write_gml__TimeNodeType(soap, gml__TimeNodeType*) serialize to a stream
class gml__TimeNodeType : public gml__AbstractTimeTopologyPrimitiveType
{ public:
/*  INHERITED FROM gml__AbstractGMLType:
/// GROUP <xs:group name="StandardObjectProperties">
/// Vector of gml__MetaDataPropertyType* element refs with length 0..unbounded
    std::vector<gml__MetaDataPropertyType*> metaDataProperty               0;
/// @brief The value of this property is a text description of the object. gml:description uses gml:StringOrRefType as its content model, so it may contain a simple text string content, or carry a reference to an external description. The use of gml:description to reference an external description has been deprecated and replaced by the gml:descriptionReference property.
/// Element reference "http://www.opengis.net/gml/3.2":description.
    gml__StringOrRefType*                description                    0;	///< Optional element.
/// @brief The value of this property is a remote text description of the object. The xlink:href attribute of the gml:descriptionReference property references the external description.
/// Element reference "http://www.opengis.net/gml/3.2":descriptionReference.
    gml__ReferenceType*                  descriptionReference           0;	///< Optional element.
/// @brief Often, a special identifier is assigned to an object by the maintaining authority with the intention that it is used in references to the object For such cases, the codeSpace shall be provided. That identifier is usually unique either globally or within an application domain. gml:identifier is a pre-defined property for such identifiers.
/// Element reference "http://www.opengis.net/gml/3.2":identifier.
    gml__CodeWithAuthorityType*          identifier                     0;	///< Optional element.
/// @brief The gml:name property provides a label or identifier for the object, commonly a descriptive name. An object may have several names, typically assigned by different authorities. gml:name uses the gml:CodeType content model. The authority for a name is indicated by the value of its (optional) codeSpace attribute. The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace. In common usage there will be one name per authority, so a processing application may select the name from its preferred codeSpace.
/// Vector of gml__CodeType* element refs with length 0..unbounded
    std::vector<gml__CodeType*         > name                           0;
//  END OF GROUP
/// Attribute reference "http://www.opengis.net/gml/3.2":id.
/// @brief The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.
   @xsd__ID                              id                             1;	///< Required attribute.
    END OF INHERITED FROM gml__AbstractGMLType */
/*  INHERITED FROM gml__AbstractTimeObjectType:
    END OF INHERITED FROM gml__AbstractTimeObjectType */
/*  INHERITED FROM gml__AbstractTimePrimitiveType:
/// Vector of gml__RelatedTimeType* with length 0..unbounded
    std::vector<gml__RelatedTimeType*  > relatedTime                    0;
    END OF INHERITED FROM gml__AbstractTimePrimitiveType */
/*  INHERITED FROM gml__AbstractTimeTopologyPrimitiveType:
/// Element complex of type "http://www.opengis.net/gml/3.2":ReferenceType.
    gml__ReferenceType*                  complex                        0;	///< Optional element.
    END OF INHERITED FROM gml__AbstractTimeTopologyPrimitiveType */
/// Vector of gml__TimeEdgePropertyType* with length 0..unbounded
    std::vector<gml__TimeEdgePropertyType*> previousEdge                   0;
/// Vector of gml__TimeEdgePropertyType* with length 0..unbounded
    std::vector<gml__TimeEdgePropertyType*> nextEdge                       0;
/// Element position of type "http://www.opengis.net/gml/3.2":TimeInstantPropertyType.
    gml__TimeInstantPropertyType*        position                       0;	///< Optional element.
};

/// "http://www.opengis.net/gml/3.2":TimeEdgeType is a complexType with complexContent extension of "http://www.opengis.net/gml/3.2":AbstractTimeTopologyPrimitiveType.
/// class gml__TimeEdgeType operations:
/// - soap_new_gml__TimeEdgeType(soap*) allocate
/// - soap_new_gml__TimeEdgeType(soap*, int num) allocate array
/// - soap_new_req_gml__TimeEdgeType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__TimeEdgeType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__TimeEdgeType(soap*, gml__TimeEdgeType*) deserialize from a stream
/// - int soap_write_gml__TimeEdgeType(soap, gml__TimeEdgeType*) serialize to a stream
class gml__TimeEdgeType : public gml__AbstractTimeTopologyPrimitiveType
{ public:
/*  INHERITED FROM gml__AbstractGMLType:
/// GROUP <xs:group name="StandardObjectProperties">
/// Vector of gml__MetaDataPropertyType* element refs with length 0..unbounded
    std::vector<gml__MetaDataPropertyType*> metaDataProperty               0;
/// @brief The value of this property is a text description of the object. gml:description uses gml:StringOrRefType as its content model, so it may contain a simple text string content, or carry a reference to an external description. The use of gml:description to reference an external description has been deprecated and replaced by the gml:descriptionReference property.
/// Element reference "http://www.opengis.net/gml/3.2":description.
    gml__StringOrRefType*                description                    0;	///< Optional element.
/// @brief The value of this property is a remote text description of the object. The xlink:href attribute of the gml:descriptionReference property references the external description.
/// Element reference "http://www.opengis.net/gml/3.2":descriptionReference.
    gml__ReferenceType*                  descriptionReference           0;	///< Optional element.
/// @brief Often, a special identifier is assigned to an object by the maintaining authority with the intention that it is used in references to the object For such cases, the codeSpace shall be provided. That identifier is usually unique either globally or within an application domain. gml:identifier is a pre-defined property for such identifiers.
/// Element reference "http://www.opengis.net/gml/3.2":identifier.
    gml__CodeWithAuthorityType*          identifier                     0;	///< Optional element.
/// @brief The gml:name property provides a label or identifier for the object, commonly a descriptive name. An object may have several names, typically assigned by different authorities. gml:name uses the gml:CodeType content model. The authority for a name is indicated by the value of its (optional) codeSpace attribute. The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace. In common usage there will be one name per authority, so a processing application may select the name from its preferred codeSpace.
/// Vector of gml__CodeType* element refs with length 0..unbounded
    std::vector<gml__CodeType*         > name                           0;
//  END OF GROUP
/// Attribute reference "http://www.opengis.net/gml/3.2":id.
/// @brief The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.
   @xsd__ID                              id                             1;	///< Required attribute.
    END OF INHERITED FROM gml__AbstractGMLType */
/*  INHERITED FROM gml__AbstractTimeObjectType:
    END OF INHERITED FROM gml__AbstractTimeObjectType */
/*  INHERITED FROM gml__AbstractTimePrimitiveType:
/// Vector of gml__RelatedTimeType* with length 0..unbounded
    std::vector<gml__RelatedTimeType*  > relatedTime                    0;
    END OF INHERITED FROM gml__AbstractTimePrimitiveType */
/*  INHERITED FROM gml__AbstractTimeTopologyPrimitiveType:
/// Element complex of type "http://www.opengis.net/gml/3.2":ReferenceType.
    gml__ReferenceType*                  complex                        0;	///< Optional element.
    END OF INHERITED FROM gml__AbstractTimeTopologyPrimitiveType */
/// Element start of type "http://www.opengis.net/gml/3.2":TimeNodePropertyType.
    gml__TimeNodePropertyType*           start                          1;	///< Required element.
/// Element end of type "http://www.opengis.net/gml/3.2":TimeNodePropertyType.
    gml__TimeNodePropertyType*           end                            1;	///< Required element.
/// Element extent of type "http://www.opengis.net/gml/3.2":TimePeriodPropertyType.
    gml__TimePeriodPropertyType*         extent                         0;	///< Optional element.
};

/// "http://www.opengis.net/gml/3.2":TinType is a complexType with complexContent extension of "http://www.opengis.net/gml/3.2":SurfaceType.
/// class gml__TinType operations:
/// - soap_new_gml__TinType(soap*) allocate
/// - soap_new_gml__TinType(soap*, int num) allocate array
/// - soap_new_req_gml__TinType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__TinType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__TinType(soap*, gml__TinType*) deserialize from a stream
/// - int soap_write_gml__TinType(soap, gml__TinType*) serialize to a stream
class gml__TinType : public gml__SurfaceType
{ public:
/*  INHERITED FROM gml__AbstractGMLType:
/// GROUP <xs:group name="StandardObjectProperties">
/// Vector of gml__MetaDataPropertyType* element refs with length 0..unbounded
    std::vector<gml__MetaDataPropertyType*> metaDataProperty               0;
/// @brief The value of this property is a text description of the object. gml:description uses gml:StringOrRefType as its content model, so it may contain a simple text string content, or carry a reference to an external description. The use of gml:description to reference an external description has been deprecated and replaced by the gml:descriptionReference property.
/// Element reference "http://www.opengis.net/gml/3.2":description.
    gml__StringOrRefType*                description                    0;	///< Optional element.
/// @brief The value of this property is a remote text description of the object. The xlink:href attribute of the gml:descriptionReference property references the external description.
/// Element reference "http://www.opengis.net/gml/3.2":descriptionReference.
    gml__ReferenceType*                  descriptionReference           0;	///< Optional element.
/// @brief Often, a special identifier is assigned to an object by the maintaining authority with the intention that it is used in references to the object For such cases, the codeSpace shall be provided. That identifier is usually unique either globally or within an application domain. gml:identifier is a pre-defined property for such identifiers.
/// Element reference "http://www.opengis.net/gml/3.2":identifier.
    gml__CodeWithAuthorityType*          identifier                     0;	///< Optional element.
/// @brief The gml:name property provides a label or identifier for the object, commonly a descriptive name. An object may have several names, typically assigned by different authorities. gml:name uses the gml:CodeType content model. The authority for a name is indicated by the value of its (optional) codeSpace attribute. The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace. In common usage there will be one name per authority, so a processing application may select the name from its preferred codeSpace.
/// Vector of gml__CodeType* element refs with length 0..unbounded
    std::vector<gml__CodeType*         > name                           0;
//  END OF GROUP
/// Attribute reference "http://www.opengis.net/gml/3.2":id.
/// @brief The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.
   @xsd__ID                              id                             1;	///< Required attribute.
    END OF INHERITED FROM gml__AbstractGMLType */
/*  INHERITED FROM gml__AbstractGeometryType:
/// Attribute srsName of type xs:anyURI.
   @xsd__anyURI*                         srsName                        0;	///< Optional attribute.
/// Attribute srsDimension of type xs:positiveInteger.
   @xsd__positiveInteger*                srsDimension                   0;	///< Optional attribute.
/// Attribute axisLabels of type "http://www.opengis.net/gml/3.2":NCNameList.
   @gml__NCNameList*                     axisLabels                     0;	///< Optional attribute.
/// Attribute uomLabels of type "http://www.opengis.net/gml/3.2":NCNameList.
   @gml__NCNameList*                     uomLabels                      0;	///< Optional attribute.
    END OF INHERITED FROM gml__AbstractGeometryType */
/*  INHERITED FROM gml__AbstractGeometricPrimitiveType:
    END OF INHERITED FROM gml__AbstractGeometricPrimitiveType */
/*  INHERITED FROM gml__AbstractSurfaceType:
    END OF INHERITED FROM gml__AbstractSurfaceType */
/*  INHERITED FROM gml__SurfaceType:
/// @brief The patches property element contains the sequence of surface patches. The order of the elements is significant and shall be preserved when processing the array.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="patches"> with elements <polygonPatches> <trianglePatches>
   $int                                  __unionpatches                 0;	///< Union _gml__union_TinType selector: set to SOAP_UNION__gml__union_TinType_<fieldname>
/// Union for substitutionGroup="patches"
    union _gml__union_TinType
    {
/// @brief The patches property element contains the sequence of surface patches. The order of the elements is significant and shall be preserved when processing the array.
/// Element reference "http://www.opengis.net/gml/3.2":patches.
    gml__SurfacePatchArrayPropertyType*  patches                        1;	///< Required element.
/// Element polygonPatches of type "http://www.opengis.net/gml/3.2":SurfacePatchArrayPropertyType.
    gml__SurfacePatchArrayPropertyType*  polygonPatches                 1;	///< Required element.
/// Element trianglePatches of type "http://www.opengis.net/gml/3.2":SurfacePatchArrayPropertyType.
    gml__SurfacePatchArrayPropertyType*  trianglePatches                1;	///< Required element.
    }                                    __union_TinType               ;
//  END OF CHOICE OF SUBSTITUTIONS
    END OF INHERITED FROM gml__SurfaceType */
/// Vector of gml__LineStringSegmentArrayPropertyType* with length 0..unbounded
    std::vector<gml__LineStringSegmentArrayPropertyType*> stopLines                      0;
/// Vector of gml__LineStringSegmentArrayPropertyType* with length 0..unbounded
    std::vector<gml__LineStringSegmentArrayPropertyType*> breakLines                     0;
/// Element maxLength of type "http://www.opengis.net/gml/3.2":LengthType.
    gml__LengthType*                     maxLength                      1;	///< Required element.
/// class _gml__TinType_controlPoint operations:
/// - soap_new__gml__TinType_controlPoint(soap*) allocate
/// - soap_new__gml__TinType_controlPoint(soap*, int num) allocate array
/// - soap_new_req__gml__TinType_controlPoint(soap*, ...) allocate, set required members
/// - soap_new_set__gml__TinType_controlPoint(soap*, ...) allocate, set all public members
/// - int soap_read__gml__TinType_controlPoint(soap*, _gml__TinType_controlPoint*) deserialize from a stream
/// - int soap_write__gml__TinType_controlPoint(soap, _gml__TinType_controlPoint*) serialize to a stream
    class _gml__TinType_controlPoint
    {
/// CHOICE <xs:choice>
/// Note: <xs:choice> with embedded <xs:sequence> or <xs:group> prevents the use of a union
/// Element reference "http://www.opengis.net/gml/3.2":posList.
    gml__DirectPositionListType*         posList                       ;
/// GROUP <xs:group name="geometricPositionGroup" minOccurs="3" maxOccurs="unbounded">
/// @brief GML supports two different ways to specify a geometric position: either by a direct position (a data type) or a point (a geometric object). pos elements are positions that are "owned" by the geometric primitive encapsulating this geometric position. pointProperty elements contain a point that may be referenced from other geometry elements or reference another point defined elsewhere (reuse of existing points).
/// CHOICE <xs:choice minOccurs="3" maxOccurs="unbounded">
   $int                                  __size_TinType_controlPoint_   3;
    class __gml__union_TinType_controlPoint_
    {
   $int                                  __union_TinType_controlPoint_  3;	///< Union _gml__union_TinType_controlPoint_ selector: set to SOAP_UNION__gml__union_TinType_controlPoint__<fieldname>
    union _gml__union_TinType_controlPoint_
    {
/// Element reference "http://www.opengis.net/gml/3.2":pos.
    gml__DirectPositionType*             pos                           ;
/// @brief This property element either references a point via the XLink-attributes or contains the point element. pointProperty is the predefined property which may be used by GML Application Schemas whenever a GML feature has a property with a value that is substitutable for Point.
/// Element reference "http://www.opengis.net/gml/3.2":pointProperty.
    gml__PointPropertyType*              pointProperty                 ;
    }                                    union_TinType_controlPoint_   ;
    }                                   *__union_TinType_controlPoint_ ;
//  END OF CHOICE
//  END OF GROUP
;
//  END OF CHOICE
    }                                    controlPoint                   1;	///< Required element.
};

/// "http://www.opengis.net/gml/3.2":AbstractGeneralDerivedCRSType is an abstract complexType with complexContent extension of "http://www.opengis.net/gml/3.2":AbstractCRSType.
/// class gml__AbstractGeneralDerivedCRSType operations:
/// - soap_new_gml__AbstractGeneralDerivedCRSType(soap*) allocate
/// - soap_new_gml__AbstractGeneralDerivedCRSType(soap*, int num) allocate array
/// - soap_new_req_gml__AbstractGeneralDerivedCRSType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__AbstractGeneralDerivedCRSType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__AbstractGeneralDerivedCRSType(soap*, gml__AbstractGeneralDerivedCRSType*) deserialize from a stream
/// - int soap_write_gml__AbstractGeneralDerivedCRSType(soap, gml__AbstractGeneralDerivedCRSType*) serialize to a stream
class gml__AbstractGeneralDerivedCRSType : public gml__AbstractCRSType
{ public:
/*  INHERITED FROM gml__DefinitionBaseType:
    END OF INHERITED FROM gml__DefinitionBaseType */
/*  INHERITED FROM gml__DefinitionType:
/// Element reference "http://www.opengis.net/gml/3.2":remarks.
    std::string*                         remarks                        0;	///< Optional element.
    END OF INHERITED FROM gml__DefinitionType */
/*  INHERITED FROM gml__IdentifiedObjectType:
    END OF INHERITED FROM gml__IdentifiedObjectType */
/*  INHERITED FROM gml__AbstractCRSType:
/// @brief The gml:domainOfValidity property implements an association role to an EX_Extent object as encoded in ISO/TS 19139, either referencing or containing the definition of that extent.
/// Vector of _gml__domainOfValidity* element refs with length 0..unbounded
    std::vector<_gml__domainOfValidity*> domainOfValidity               0;
/// @brief The gml:scope property provides a description of the usage, or limitations of usage, for which this CRS-related object is valid. If unknown, enter "not known".
/// Vector of std::string element refs with length 1..unbounded
    std::vector<std::string            > scope                          1;
    END OF INHERITED FROM gml__AbstractCRSType */
/// @brief gml:conversion is an association role to the coordinate conversion used to define the derived CRS.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="conversion"> with elements <definedByConversion>
   $int                                  __unionconversion              0;	///< Union _gml__union_AbstractGeneralDerivedCRSType selector: set to SOAP_UNION__gml__union_AbstractGeneralDerivedCRSType_<fieldname>
/// Union for substitutionGroup="conversion"
    union _gml__union_AbstractGeneralDerivedCRSType
    {
/// @brief gml:conversion is an association role to the coordinate conversion used to define the derived CRS.
/// Element reference "http://www.opengis.net/gml/3.2":conversion.
    gml__GeneralConversionPropertyType*  conversion                     1;	///< Required element.
/// Element definedByConversion of type "http://www.opengis.net/gml/3.2":GeneralConversionPropertyType.
    gml__GeneralConversionPropertyType*  definedByConversion            1;	///< Required element.
    }                                    __union_AbstractGeneralDerivedCRSType;
//  END OF CHOICE OF SUBSTITUTIONS
};

/// "http://www.opengis.net/gml/3.2":CompoundCRSType is a complexType with complexContent extension of "http://www.opengis.net/gml/3.2":AbstractCRSType.
/// class gml__CompoundCRSType operations:
/// - soap_new_gml__CompoundCRSType(soap*) allocate
/// - soap_new_gml__CompoundCRSType(soap*, int num) allocate array
/// - soap_new_req_gml__CompoundCRSType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__CompoundCRSType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__CompoundCRSType(soap*, gml__CompoundCRSType*) deserialize from a stream
/// - int soap_write_gml__CompoundCRSType(soap, gml__CompoundCRSType*) serialize to a stream
class gml__CompoundCRSType : public gml__AbstractCRSType
{ public:
/*  INHERITED FROM gml__DefinitionBaseType:
    END OF INHERITED FROM gml__DefinitionBaseType */
/*  INHERITED FROM gml__DefinitionType:
/// Element reference "http://www.opengis.net/gml/3.2":remarks.
    std::string*                         remarks                        0;	///< Optional element.
    END OF INHERITED FROM gml__DefinitionType */
/*  INHERITED FROM gml__IdentifiedObjectType:
    END OF INHERITED FROM gml__IdentifiedObjectType */
/*  INHERITED FROM gml__AbstractCRSType:
/// @brief The gml:domainOfValidity property implements an association role to an EX_Extent object as encoded in ISO/TS 19139, either referencing or containing the definition of that extent.
/// Vector of _gml__domainOfValidity* element refs with length 0..unbounded
    std::vector<_gml__domainOfValidity*> domainOfValidity               0;
/// @brief The gml:scope property provides a description of the usage, or limitations of usage, for which this CRS-related object is valid. If unknown, enter "not known".
/// Vector of std::string element refs with length 1..unbounded
    std::vector<std::string            > scope                          1;
    END OF INHERITED FROM gml__AbstractCRSType */
/// @brief The gml:componentReferenceSystem elements are an ordered sequence of associations to all the component coordinate reference systems included in this compound coordinate reference system. The gml:AggregationAttributeGroup should be used to specify that the gml:componentReferenceSystem properties are ordered.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="componentReferenceSystem" minOccurs="2" maxOccurs="unbounded"> with elements <includesSingleCRS>
   $int                                  __sizecomponentReferenceSystem 2;
    class __gml__union_CompoundCRSType
    {
   $int                                  __unioncomponentReferenceSystem 2;	///< Union _gml__union_CompoundCRSType selector: set to SOAP_UNION__gml__union_CompoundCRSType_<fieldname>
/// Union for substitutionGroup="componentReferenceSystem"
    union _gml__union_CompoundCRSType
    {
/// @brief The gml:componentReferenceSystem elements are an ordered sequence of associations to all the component coordinate reference systems included in this compound coordinate reference system. The gml:AggregationAttributeGroup should be used to specify that the gml:componentReferenceSystem properties are ordered.
/// Vector of gml__SingleCRSPropertyType* element refs with length 2..unbounded
    std::vector<gml__SingleCRSPropertyType*> *componentReferenceSystem       2;
/// Element includesSingleCRS of type "http://www.opengis.net/gml/3.2":SingleCRSPropertyType.
    gml__SingleCRSPropertyType*          includesSingleCRS              1;	///< Required element.
    }                                    __union_CompoundCRSType       ;
;
    }                                   *__union_CompoundCRSType       ;
//  END OF CHOICE OF SUBSTITUTIONS
/// Attribute aggregationType of type "http://www.opengis.net/gml/3.2":AggregationType.
   @enum gml__AggregationType*           aggregationType                0;	///< Optional attribute.
};

/// "http://www.opengis.net/gml/3.2":GeodeticCRSType is a complexType with complexContent extension of "http://www.opengis.net/gml/3.2":AbstractCRSType.
/// @brief gml:GeodeticCRS is a coordinate reference system based on a geodetic datum.
/// class gml__GeodeticCRSType operations:
/// - soap_new_gml__GeodeticCRSType(soap*) allocate
/// - soap_new_gml__GeodeticCRSType(soap*, int num) allocate array
/// - soap_new_req_gml__GeodeticCRSType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__GeodeticCRSType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__GeodeticCRSType(soap*, gml__GeodeticCRSType*) deserialize from a stream
/// - int soap_write_gml__GeodeticCRSType(soap, gml__GeodeticCRSType*) serialize to a stream
class gml__GeodeticCRSType : public gml__AbstractCRSType
{ public:
/*  INHERITED FROM gml__DefinitionBaseType:
    END OF INHERITED FROM gml__DefinitionBaseType */
/*  INHERITED FROM gml__DefinitionType:
/// Element reference "http://www.opengis.net/gml/3.2":remarks.
    std::string*                         remarks                        0;	///< Optional element.
    END OF INHERITED FROM gml__DefinitionType */
/*  INHERITED FROM gml__IdentifiedObjectType:
    END OF INHERITED FROM gml__IdentifiedObjectType */
/*  INHERITED FROM gml__AbstractCRSType:
/// @brief The gml:domainOfValidity property implements an association role to an EX_Extent object as encoded in ISO/TS 19139, either referencing or containing the definition of that extent.
/// Vector of _gml__domainOfValidity* element refs with length 0..unbounded
    std::vector<_gml__domainOfValidity*> domainOfValidity               0;
/// @brief The gml:scope property provides a description of the usage, or limitations of usage, for which this CRS-related object is valid. If unknown, enter "not known".
/// Vector of std::string element refs with length 1..unbounded
    std::vector<std::string            > scope                          1;
    END OF INHERITED FROM gml__AbstractCRSType */
/// CHOICE <xs:choice>
   $int                                  __union_GeodeticCRSType       ;	///< Union _gml__union_GeodeticCRSType selector: set to SOAP_UNION__gml__union_GeodeticCRSType_<fieldname>
    union _gml__union_GeodeticCRSType
    {
/// @brief gml:ellipsoidalCS is an association role to the ellipsoidal coordinate system used by this CRS.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="ellipsoidalCS"> with elements <usesEllipsoidalCS>
/// @brief gml:ellipsoidalCS is an association role to the ellipsoidal coordinate system used by this CRS.
/// Element reference "http://www.opengis.net/gml/3.2":ellipsoidalCS.
    gml__EllipsoidalCSPropertyType*      ellipsoidalCS                  1;	///< Required element.
/// Element usesEllipsoidalCS of type "http://www.opengis.net/gml/3.2":EllipsoidalCSPropertyType.
    gml__EllipsoidalCSPropertyType*      usesEllipsoidalCS              1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
/// @brief gml:cartesianCS is an association role to the Cartesian coordinate system used by this CRS.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="cartesianCS"> with elements <usesCartesianCS>
/// @brief gml:cartesianCS is an association role to the Cartesian coordinate system used by this CRS.
/// Element reference "http://www.opengis.net/gml/3.2":cartesianCS.
    gml__CartesianCSPropertyType*        cartesianCS                    1;	///< Required element.
/// Element usesCartesianCS of type "http://www.opengis.net/gml/3.2":CartesianCSPropertyType.
    gml__CartesianCSPropertyType*        usesCartesianCS                1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
/// @brief gml:sphericalCS is an association role to the spherical coordinate system used by this CRS.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="sphericalCS"> with elements <usesSphericalCS>
/// @brief gml:sphericalCS is an association role to the spherical coordinate system used by this CRS.
/// Element reference "http://www.opengis.net/gml/3.2":sphericalCS.
    gml__SphericalCSPropertyType*        sphericalCS                    1;	///< Required element.
/// Element usesSphericalCS of type "http://www.opengis.net/gml/3.2":SphericalCSPropertyType.
    gml__SphericalCSPropertyType*        usesSphericalCS                1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
    }                                    union_GeodeticCRSType         ;
//  END OF CHOICE
/// @brief gml:geodeticDatum is an association role to the geodetic datum used by this CRS.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="geodeticDatum"> with elements <usesGeodeticDatum>
   $int                                  __uniongeodeticDatum           0;	///< Union _gml__union_GeodeticCRSType____ selector: set to SOAP_UNION__gml__union_GeodeticCRSType_____<fieldname>
/// Union for substitutionGroup="geodeticDatum"
    union _gml__union_GeodeticCRSType____
    {
/// @brief gml:geodeticDatum is an association role to the geodetic datum used by this CRS.
/// Element reference "http://www.opengis.net/gml/3.2":geodeticDatum.
    gml__GeodeticDatumPropertyType*      geodeticDatum                  1;	///< Required element.
/// Element usesGeodeticDatum of type "http://www.opengis.net/gml/3.2":GeodeticDatumPropertyType.
    gml__GeodeticDatumPropertyType*      usesGeodeticDatum              1;	///< Required element.
    }                                    __union_GeodeticCRSType____   ;
//  END OF CHOICE OF SUBSTITUTIONS
};

/// "http://www.opengis.net/gml/3.2":VerticalCRSType is a complexType with complexContent extension of "http://www.opengis.net/gml/3.2":AbstractCRSType.
/// class gml__VerticalCRSType operations:
/// - soap_new_gml__VerticalCRSType(soap*) allocate
/// - soap_new_gml__VerticalCRSType(soap*, int num) allocate array
/// - soap_new_req_gml__VerticalCRSType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__VerticalCRSType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__VerticalCRSType(soap*, gml__VerticalCRSType*) deserialize from a stream
/// - int soap_write_gml__VerticalCRSType(soap, gml__VerticalCRSType*) serialize to a stream
class gml__VerticalCRSType : public gml__AbstractCRSType
{ public:
/*  INHERITED FROM gml__DefinitionBaseType:
    END OF INHERITED FROM gml__DefinitionBaseType */
/*  INHERITED FROM gml__DefinitionType:
/// Element reference "http://www.opengis.net/gml/3.2":remarks.
    std::string*                         remarks                        0;	///< Optional element.
    END OF INHERITED FROM gml__DefinitionType */
/*  INHERITED FROM gml__IdentifiedObjectType:
    END OF INHERITED FROM gml__IdentifiedObjectType */
/*  INHERITED FROM gml__AbstractCRSType:
/// @brief The gml:domainOfValidity property implements an association role to an EX_Extent object as encoded in ISO/TS 19139, either referencing or containing the definition of that extent.
/// Vector of _gml__domainOfValidity* element refs with length 0..unbounded
    std::vector<_gml__domainOfValidity*> domainOfValidity               0;
/// @brief The gml:scope property provides a description of the usage, or limitations of usage, for which this CRS-related object is valid. If unknown, enter "not known".
/// Vector of std::string element refs with length 1..unbounded
    std::vector<std::string            > scope                          1;
    END OF INHERITED FROM gml__AbstractCRSType */
/// @brief gml:verticalCS is an association role to the vertical coordinate system used by this CRS.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="verticalCS"> with elements <usesVerticalCS>
   $int                                  __unionverticalCS              0;	///< Union _gml__union_VerticalCRSType selector: set to SOAP_UNION__gml__union_VerticalCRSType_<fieldname>
/// Union for substitutionGroup="verticalCS"
    union _gml__union_VerticalCRSType
    {
/// @brief gml:verticalCS is an association role to the vertical coordinate system used by this CRS.
/// Element reference "http://www.opengis.net/gml/3.2":verticalCS.
    gml__VerticalCSPropertyType*         verticalCS                     1;	///< Required element.
/// Element usesVerticalCS of type "http://www.opengis.net/gml/3.2":VerticalCSPropertyType.
    gml__VerticalCSPropertyType*         usesVerticalCS                 1;	///< Required element.
    }                                    __union_VerticalCRSType       ;
//  END OF CHOICE OF SUBSTITUTIONS
/// @brief gml:verticalDatum is an association role to the vertical datum used by this CRS.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="verticalDatum"> with elements <usesVerticalDatum>
   $int                                  __unionverticalDatum           0;	///< Union _gml__union_VerticalCRSType_ selector: set to SOAP_UNION__gml__union_VerticalCRSType__<fieldname>
/// Union for substitutionGroup="verticalDatum"
    union _gml__union_VerticalCRSType_
    {
/// @brief gml:verticalDatum is an association role to the vertical datum used by this CRS.
/// Element reference "http://www.opengis.net/gml/3.2":verticalDatum.
    gml__VerticalDatumPropertyType*      verticalDatum                  1;	///< Required element.
/// Element usesVerticalDatum of type "http://www.opengis.net/gml/3.2":VerticalDatumPropertyType.
    gml__VerticalDatumPropertyType*      usesVerticalDatum              1;	///< Required element.
    }                                    __union_VerticalCRSType_      ;
//  END OF CHOICE OF SUBSTITUTIONS
};

/// "http://www.opengis.net/gml/3.2":EngineeringCRSType is a complexType with complexContent extension of "http://www.opengis.net/gml/3.2":AbstractCRSType.
/// class gml__EngineeringCRSType operations:
/// - soap_new_gml__EngineeringCRSType(soap*) allocate
/// - soap_new_gml__EngineeringCRSType(soap*, int num) allocate array
/// - soap_new_req_gml__EngineeringCRSType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__EngineeringCRSType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__EngineeringCRSType(soap*, gml__EngineeringCRSType*) deserialize from a stream
/// - int soap_write_gml__EngineeringCRSType(soap, gml__EngineeringCRSType*) serialize to a stream
class gml__EngineeringCRSType : public gml__AbstractCRSType
{ public:
/*  INHERITED FROM gml__DefinitionBaseType:
    END OF INHERITED FROM gml__DefinitionBaseType */
/*  INHERITED FROM gml__DefinitionType:
/// Element reference "http://www.opengis.net/gml/3.2":remarks.
    std::string*                         remarks                        0;	///< Optional element.
    END OF INHERITED FROM gml__DefinitionType */
/*  INHERITED FROM gml__IdentifiedObjectType:
    END OF INHERITED FROM gml__IdentifiedObjectType */
/*  INHERITED FROM gml__AbstractCRSType:
/// @brief The gml:domainOfValidity property implements an association role to an EX_Extent object as encoded in ISO/TS 19139, either referencing or containing the definition of that extent.
/// Vector of _gml__domainOfValidity* element refs with length 0..unbounded
    std::vector<_gml__domainOfValidity*> domainOfValidity               0;
/// @brief The gml:scope property provides a description of the usage, or limitations of usage, for which this CRS-related object is valid. If unknown, enter "not known".
/// Vector of std::string element refs with length 1..unbounded
    std::vector<std::string            > scope                          1;
    END OF INHERITED FROM gml__AbstractCRSType */
/// CHOICE <xs:choice>
   $int                                  __union_EngineeringCRSType    ;	///< Union _gml__union_EngineeringCRSType selector: set to SOAP_UNION__gml__union_EngineeringCRSType_<fieldname>
    union _gml__union_EngineeringCRSType
    {
/// @brief gml:affineCS is an association role to the affine coordinate system used by this CRS.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="affineCS"> with elements <usesAffineCS>
/// @brief gml:affineCS is an association role to the affine coordinate system used by this CRS.
/// Element reference "http://www.opengis.net/gml/3.2":affineCS.
    gml__AffineCSPropertyType*           affineCS                       1;	///< Required element.
/// Element usesAffineCS of type "http://www.opengis.net/gml/3.2":AffineCSPropertyType.
    gml__AffineCSPropertyType*           usesAffineCS                   1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
/// @brief gml:cartesianCS is an association role to the Cartesian coordinate system used by this CRS.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="cartesianCS"> with elements <usesCartesianCS>
/// @brief gml:cartesianCS is an association role to the Cartesian coordinate system used by this CRS.
/// Element reference "http://www.opengis.net/gml/3.2":cartesianCS.
    gml__CartesianCSPropertyType*        cartesianCS                    1;	///< Required element.
/// Element usesCartesianCS of type "http://www.opengis.net/gml/3.2":CartesianCSPropertyType.
    gml__CartesianCSPropertyType*        usesCartesianCS                1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
/// @brief gml:cylindricalCS is an association role to the cylindrical coordinate system used by this CRS.
/// Element reference "http://www.opengis.net/gml/3.2":cylindricalCS.
    gml__CylindricalCSPropertyType*      cylindricalCS                  1;	///< Required element.
/// @brief gml:linearCS is an association role to the linear coordinate system used by this CRS.
/// Element reference "http://www.opengis.net/gml/3.2":linearCS.
    gml__LinearCSPropertyType*           linearCS                       1;	///< Required element.
/// @brief gml:polarCS is an association role to the polar coordinate system used by this CRS.
/// Element reference "http://www.opengis.net/gml/3.2":polarCS.
    gml__PolarCSPropertyType*            polarCS                        1;	///< Required element.
/// @brief gml:sphericalCS is an association role to the spherical coordinate system used by this CRS.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="sphericalCS"> with elements <usesSphericalCS>
/// @brief gml:sphericalCS is an association role to the spherical coordinate system used by this CRS.
/// Element reference "http://www.opengis.net/gml/3.2":sphericalCS.
    gml__SphericalCSPropertyType*        sphericalCS                    1;	///< Required element.
/// Element usesSphericalCS of type "http://www.opengis.net/gml/3.2":SphericalCSPropertyType.
    gml__SphericalCSPropertyType*        usesSphericalCS                1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
/// @brief gml:userDefinedCS is an association role to the user defined coordinate system used by this CRS.
/// Element reference "http://www.opengis.net/gml/3.2":userDefinedCS.
    gml__UserDefinedCSPropertyType*      userDefinedCS                  1;	///< Required element.
/// @brief An association role to the coordinate system used by this CRS.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="coordinateSystem"> with elements <usesCS>
/// @brief An association role to the coordinate system used by this CRS.
/// Element reference "http://www.opengis.net/gml/3.2":coordinateSystem.
    gml__CoordinateSystemPropertyType*   coordinateSystem               1;	///< Required element.
/// Element usesCS of type "http://www.opengis.net/gml/3.2":CoordinateSystemPropertyType.
    gml__CoordinateSystemPropertyType*   usesCS                         1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
    }                                    union_EngineeringCRSType      ;
//  END OF CHOICE
/// @brief gml:engineeringDatum is an association role to the engineering datum used by this CRS.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="engineeringDatum"> with elements <usesEngineeringDatum>
   $int                                  __unionengineeringDatum        0;	///< Union _gml__union_EngineeringCRSType_____ selector: set to SOAP_UNION__gml__union_EngineeringCRSType______<fieldname>
/// Union for substitutionGroup="engineeringDatum"
    union _gml__union_EngineeringCRSType_____
    {
/// @brief gml:engineeringDatum is an association role to the engineering datum used by this CRS.
/// Element reference "http://www.opengis.net/gml/3.2":engineeringDatum.
    gml__EngineeringDatumPropertyType*   engineeringDatum               1;	///< Required element.
/// Element usesEngineeringDatum of type "http://www.opengis.net/gml/3.2":EngineeringDatumPropertyType.
    gml__EngineeringDatumPropertyType*   usesEngineeringDatum           1;	///< Required element.
    }                                    __union_EngineeringCRSType_____;
//  END OF CHOICE OF SUBSTITUTIONS
};

/// "http://www.opengis.net/gml/3.2":ImageCRSType is a complexType with complexContent extension of "http://www.opengis.net/gml/3.2":AbstractCRSType.
/// class gml__ImageCRSType operations:
/// - soap_new_gml__ImageCRSType(soap*) allocate
/// - soap_new_gml__ImageCRSType(soap*, int num) allocate array
/// - soap_new_req_gml__ImageCRSType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__ImageCRSType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__ImageCRSType(soap*, gml__ImageCRSType*) deserialize from a stream
/// - int soap_write_gml__ImageCRSType(soap, gml__ImageCRSType*) serialize to a stream
class gml__ImageCRSType : public gml__AbstractCRSType
{ public:
/*  INHERITED FROM gml__DefinitionBaseType:
    END OF INHERITED FROM gml__DefinitionBaseType */
/*  INHERITED FROM gml__DefinitionType:
/// Element reference "http://www.opengis.net/gml/3.2":remarks.
    std::string*                         remarks                        0;	///< Optional element.
    END OF INHERITED FROM gml__DefinitionType */
/*  INHERITED FROM gml__IdentifiedObjectType:
    END OF INHERITED FROM gml__IdentifiedObjectType */
/*  INHERITED FROM gml__AbstractCRSType:
/// @brief The gml:domainOfValidity property implements an association role to an EX_Extent object as encoded in ISO/TS 19139, either referencing or containing the definition of that extent.
/// Vector of _gml__domainOfValidity* element refs with length 0..unbounded
    std::vector<_gml__domainOfValidity*> domainOfValidity               0;
/// @brief The gml:scope property provides a description of the usage, or limitations of usage, for which this CRS-related object is valid. If unknown, enter "not known".
/// Vector of std::string element refs with length 1..unbounded
    std::vector<std::string            > scope                          1;
    END OF INHERITED FROM gml__AbstractCRSType */
/// CHOICE <xs:choice>
   $int                                  __union_ImageCRSType          ;	///< Union _gml__union_ImageCRSType selector: set to SOAP_UNION__gml__union_ImageCRSType_<fieldname>
    union _gml__union_ImageCRSType
    {
/// @brief gml:cartesianCS is an association role to the Cartesian coordinate system used by this CRS.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="cartesianCS"> with elements <usesCartesianCS>
/// @brief gml:cartesianCS is an association role to the Cartesian coordinate system used by this CRS.
/// Element reference "http://www.opengis.net/gml/3.2":cartesianCS.
    gml__CartesianCSPropertyType*        cartesianCS                    1;	///< Required element.
/// Element usesCartesianCS of type "http://www.opengis.net/gml/3.2":CartesianCSPropertyType.
    gml__CartesianCSPropertyType*        usesCartesianCS                1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
/// @brief gml:affineCS is an association role to the affine coordinate system used by this CRS.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="affineCS"> with elements <usesAffineCS>
/// @brief gml:affineCS is an association role to the affine coordinate system used by this CRS.
/// Element reference "http://www.opengis.net/gml/3.2":affineCS.
    gml__AffineCSPropertyType*           affineCS                       1;	///< Required element.
/// Element usesAffineCS of type "http://www.opengis.net/gml/3.2":AffineCSPropertyType.
    gml__AffineCSPropertyType*           usesAffineCS                   1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
/// Element reference "http://www.opengis.net/gml/3.2":usesObliqueCartesianCS.
    gml__ObliqueCartesianCSPropertyType*  usesObliqueCartesianCS         1;	///< Required element.
    }                                    union_ImageCRSType            ;
//  END OF CHOICE
/// @brief gml:imageDatum is an association role to the image datum used by this CRS.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="imageDatum"> with elements <usesImageDatum>
   $int                                  __unionimageDatum              0;	///< Union _gml__union_ImageCRSType___ selector: set to SOAP_UNION__gml__union_ImageCRSType____<fieldname>
/// Union for substitutionGroup="imageDatum"
    union _gml__union_ImageCRSType___
    {
/// @brief gml:imageDatum is an association role to the image datum used by this CRS.
/// Element reference "http://www.opengis.net/gml/3.2":imageDatum.
    gml__ImageDatumPropertyType*         imageDatum                     1;	///< Required element.
/// Element usesImageDatum of type "http://www.opengis.net/gml/3.2":ImageDatumPropertyType.
    gml__ImageDatumPropertyType*         usesImageDatum                 1;	///< Required element.
    }                                    __union_ImageCRSType___       ;
//  END OF CHOICE OF SUBSTITUTIONS
};

/// "http://www.opengis.net/gml/3.2":TemporalCRSType is a complexType with complexContent extension of "http://www.opengis.net/gml/3.2":AbstractCRSType.
/// class gml__TemporalCRSType operations:
/// - soap_new_gml__TemporalCRSType(soap*) allocate
/// - soap_new_gml__TemporalCRSType(soap*, int num) allocate array
/// - soap_new_req_gml__TemporalCRSType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__TemporalCRSType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__TemporalCRSType(soap*, gml__TemporalCRSType*) deserialize from a stream
/// - int soap_write_gml__TemporalCRSType(soap, gml__TemporalCRSType*) serialize to a stream
class gml__TemporalCRSType : public gml__AbstractCRSType
{ public:
/*  INHERITED FROM gml__DefinitionBaseType:
    END OF INHERITED FROM gml__DefinitionBaseType */
/*  INHERITED FROM gml__DefinitionType:
/// Element reference "http://www.opengis.net/gml/3.2":remarks.
    std::string*                         remarks                        0;	///< Optional element.
    END OF INHERITED FROM gml__DefinitionType */
/*  INHERITED FROM gml__IdentifiedObjectType:
    END OF INHERITED FROM gml__IdentifiedObjectType */
/*  INHERITED FROM gml__AbstractCRSType:
/// @brief The gml:domainOfValidity property implements an association role to an EX_Extent object as encoded in ISO/TS 19139, either referencing or containing the definition of that extent.
/// Vector of _gml__domainOfValidity* element refs with length 0..unbounded
    std::vector<_gml__domainOfValidity*> domainOfValidity               0;
/// @brief The gml:scope property provides a description of the usage, or limitations of usage, for which this CRS-related object is valid. If unknown, enter "not known".
/// Vector of std::string element refs with length 1..unbounded
    std::vector<std::string            > scope                          1;
    END OF INHERITED FROM gml__AbstractCRSType */
/// CHOICE <xs:choice>
   $int                                  __union_TemporalCRSType       ;	///< Union _gml__union_TemporalCRSType selector: set to SOAP_UNION__gml__union_TemporalCRSType_<fieldname>
    union _gml__union_TemporalCRSType
    {
/// @brief gml:timeCS is an association role to the time coordinate system used by this CRS.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="timeCS"> with elements <usesTimeCS>
/// @brief gml:timeCS is an association role to the time coordinate system used by this CRS.
/// Element reference "http://www.opengis.net/gml/3.2":timeCS.
    gml__TimeCSPropertyType*             timeCS                         1;	///< Required element.
/// Element usesTimeCS of type "http://www.opengis.net/gml/3.2":TimeCSPropertyType.
    gml__TimeCSPropertyType*             usesTimeCS                     1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
/// Element reference "http://www.opengis.net/gml/3.2":usesTemporalCS.
    gml__TemporalCSPropertyType*         usesTemporalCS                 1;	///< Required element.
    }                                    union_TemporalCRSType         ;
//  END OF CHOICE
/// @brief gml:temporalDatum is an association role to the temporal datum used by this CRS.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="temporalDatum"> with elements <usesTemporalDatum>
   $int                                  __uniontemporalDatum           0;	///< Union _gml__union_TemporalCRSType__ selector: set to SOAP_UNION__gml__union_TemporalCRSType___<fieldname>
/// Union for substitutionGroup="temporalDatum"
    union _gml__union_TemporalCRSType__
    {
/// @brief gml:temporalDatum is an association role to the temporal datum used by this CRS.
/// Element reference "http://www.opengis.net/gml/3.2":temporalDatum.
    gml__TemporalDatumPropertyType*      temporalDatum                  1;	///< Required element.
/// Element usesTemporalDatum of type "http://www.opengis.net/gml/3.2":TemporalDatumPropertyType.
    gml__TemporalDatumPropertyType*      usesTemporalDatum              1;	///< Required element.
    }                                    __union_TemporalCRSType__     ;
//  END OF CHOICE OF SUBSTITUTIONS
};

/// "http://www.opengis.net/gml/3.2":EllipsoidalCSType is a complexType with complexContent extension of "http://www.opengis.net/gml/3.2":AbstractCoordinateSystemType.
/// class gml__EllipsoidalCSType operations:
/// - soap_new_gml__EllipsoidalCSType(soap*) allocate
/// - soap_new_gml__EllipsoidalCSType(soap*, int num) allocate array
/// - soap_new_req_gml__EllipsoidalCSType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__EllipsoidalCSType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__EllipsoidalCSType(soap*, gml__EllipsoidalCSType*) deserialize from a stream
/// - int soap_write_gml__EllipsoidalCSType(soap, gml__EllipsoidalCSType*) serialize to a stream
class gml__EllipsoidalCSType : public gml__AbstractCoordinateSystemType
{ public:
/*  INHERITED FROM gml__DefinitionBaseType:
    END OF INHERITED FROM gml__DefinitionBaseType */
/*  INHERITED FROM gml__DefinitionType:
/// Element reference "http://www.opengis.net/gml/3.2":remarks.
    std::string*                         remarks                        0;	///< Optional element.
    END OF INHERITED FROM gml__DefinitionType */
/*  INHERITED FROM gml__IdentifiedObjectType:
    END OF INHERITED FROM gml__IdentifiedObjectType */
/*  INHERITED FROM gml__AbstractCoordinateSystemType:
/// @brief The gml:axis property is an association role (ordered sequence) to the coordinate system axes included in this coordinate system. The coordinate values in a coordinate tuple shall be recorded in the order in which the coordinate system axes associations are recorded, whenever those coordinates use a coordinate reference system that uses this coordinate system. The gml:AggregationAttributeGroup should be used to specify that the axis objects are ordered.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="axis" maxOccurs="unbounded"> with elements <usesAxis>
   $int                                  __sizeaxis                     0;
    class __gml__union_EllipsoidalCSType
    {
   $int                                  __unionaxis                    0;	///< Union _gml__union_EllipsoidalCSType selector: set to SOAP_UNION__gml__union_EllipsoidalCSType_<fieldname>
/// Union for substitutionGroup="axis"
    union _gml__union_EllipsoidalCSType
    {
/// @brief The gml:axis property is an association role (ordered sequence) to the coordinate system axes included in this coordinate system. The coordinate values in a coordinate tuple shall be recorded in the order in which the coordinate system axes associations are recorded, whenever those coordinates use a coordinate reference system that uses this coordinate system. The gml:AggregationAttributeGroup should be used to specify that the axis objects are ordered.
/// Vector of gml__CoordinateSystemAxisPropertyType* element refs with length 1..unbounded
    std::vector<gml__CoordinateSystemAxisPropertyType*> *axis                           1;
/// Element usesAxis of type "http://www.opengis.net/gml/3.2":CoordinateSystemAxisPropertyType.
    gml__CoordinateSystemAxisPropertyType*  usesAxis                       1;	///< Required element.
    }                                    __union_EllipsoidalCSType     ;
;
    }                                   *__union_EllipsoidalCSType     ;
//  END OF CHOICE OF SUBSTITUTIONS
/// Attribute aggregationType of type "http://www.opengis.net/gml/3.2":AggregationType.
   @enum gml__AggregationType*           aggregationType                0;	///< Optional attribute.
    END OF INHERITED FROM gml__AbstractCoordinateSystemType */
};

/// "http://www.opengis.net/gml/3.2":CartesianCSType is a complexType with complexContent extension of "http://www.opengis.net/gml/3.2":AbstractCoordinateSystemType.
/// class gml__CartesianCSType operations:
/// - soap_new_gml__CartesianCSType(soap*) allocate
/// - soap_new_gml__CartesianCSType(soap*, int num) allocate array
/// - soap_new_req_gml__CartesianCSType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__CartesianCSType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__CartesianCSType(soap*, gml__CartesianCSType*) deserialize from a stream
/// - int soap_write_gml__CartesianCSType(soap, gml__CartesianCSType*) serialize to a stream
class gml__CartesianCSType : public gml__AbstractCoordinateSystemType
{ public:
/*  INHERITED FROM gml__DefinitionBaseType:
    END OF INHERITED FROM gml__DefinitionBaseType */
/*  INHERITED FROM gml__DefinitionType:
/// Element reference "http://www.opengis.net/gml/3.2":remarks.
    std::string*                         remarks                        0;	///< Optional element.
    END OF INHERITED FROM gml__DefinitionType */
/*  INHERITED FROM gml__IdentifiedObjectType:
    END OF INHERITED FROM gml__IdentifiedObjectType */
/*  INHERITED FROM gml__AbstractCoordinateSystemType:
/// @brief The gml:axis property is an association role (ordered sequence) to the coordinate system axes included in this coordinate system. The coordinate values in a coordinate tuple shall be recorded in the order in which the coordinate system axes associations are recorded, whenever those coordinates use a coordinate reference system that uses this coordinate system. The gml:AggregationAttributeGroup should be used to specify that the axis objects are ordered.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="axis" maxOccurs="unbounded"> with elements <usesAxis>
   $int                                  __sizeaxis                     0;
    class __gml__union_CartesianCSType
    {
   $int                                  __unionaxis                    0;	///< Union _gml__union_CartesianCSType selector: set to SOAP_UNION__gml__union_CartesianCSType_<fieldname>
/// Union for substitutionGroup="axis"
    union _gml__union_CartesianCSType
    {
/// @brief The gml:axis property is an association role (ordered sequence) to the coordinate system axes included in this coordinate system. The coordinate values in a coordinate tuple shall be recorded in the order in which the coordinate system axes associations are recorded, whenever those coordinates use a coordinate reference system that uses this coordinate system. The gml:AggregationAttributeGroup should be used to specify that the axis objects are ordered.
/// Vector of gml__CoordinateSystemAxisPropertyType* element refs with length 1..unbounded
    std::vector<gml__CoordinateSystemAxisPropertyType*> *axis                           1;
/// Element usesAxis of type "http://www.opengis.net/gml/3.2":CoordinateSystemAxisPropertyType.
    gml__CoordinateSystemAxisPropertyType*  usesAxis                       1;	///< Required element.
    }                                    __union_CartesianCSType       ;
;
    }                                   *__union_CartesianCSType       ;
//  END OF CHOICE OF SUBSTITUTIONS
/// Attribute aggregationType of type "http://www.opengis.net/gml/3.2":AggregationType.
   @enum gml__AggregationType*           aggregationType                0;	///< Optional attribute.
    END OF INHERITED FROM gml__AbstractCoordinateSystemType */
};

/// "http://www.opengis.net/gml/3.2":VerticalCSType is a complexType with complexContent extension of "http://www.opengis.net/gml/3.2":AbstractCoordinateSystemType.
/// class gml__VerticalCSType operations:
/// - soap_new_gml__VerticalCSType(soap*) allocate
/// - soap_new_gml__VerticalCSType(soap*, int num) allocate array
/// - soap_new_req_gml__VerticalCSType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__VerticalCSType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__VerticalCSType(soap*, gml__VerticalCSType*) deserialize from a stream
/// - int soap_write_gml__VerticalCSType(soap, gml__VerticalCSType*) serialize to a stream
class gml__VerticalCSType : public gml__AbstractCoordinateSystemType
{ public:
/*  INHERITED FROM gml__DefinitionBaseType:
    END OF INHERITED FROM gml__DefinitionBaseType */
/*  INHERITED FROM gml__DefinitionType:
/// Element reference "http://www.opengis.net/gml/3.2":remarks.
    std::string*                         remarks                        0;	///< Optional element.
    END OF INHERITED FROM gml__DefinitionType */
/*  INHERITED FROM gml__IdentifiedObjectType:
    END OF INHERITED FROM gml__IdentifiedObjectType */
/*  INHERITED FROM gml__AbstractCoordinateSystemType:
/// @brief The gml:axis property is an association role (ordered sequence) to the coordinate system axes included in this coordinate system. The coordinate values in a coordinate tuple shall be recorded in the order in which the coordinate system axes associations are recorded, whenever those coordinates use a coordinate reference system that uses this coordinate system. The gml:AggregationAttributeGroup should be used to specify that the axis objects are ordered.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="axis" maxOccurs="unbounded"> with elements <usesAxis>
   $int                                  __sizeaxis                     0;
    class __gml__union_VerticalCSType
    {
   $int                                  __unionaxis                    0;	///< Union _gml__union_VerticalCSType selector: set to SOAP_UNION__gml__union_VerticalCSType_<fieldname>
/// Union for substitutionGroup="axis"
    union _gml__union_VerticalCSType
    {
/// @brief The gml:axis property is an association role (ordered sequence) to the coordinate system axes included in this coordinate system. The coordinate values in a coordinate tuple shall be recorded in the order in which the coordinate system axes associations are recorded, whenever those coordinates use a coordinate reference system that uses this coordinate system. The gml:AggregationAttributeGroup should be used to specify that the axis objects are ordered.
/// Vector of gml__CoordinateSystemAxisPropertyType* element refs with length 1..unbounded
    std::vector<gml__CoordinateSystemAxisPropertyType*> *axis                           1;
/// Element usesAxis of type "http://www.opengis.net/gml/3.2":CoordinateSystemAxisPropertyType.
    gml__CoordinateSystemAxisPropertyType*  usesAxis                       1;	///< Required element.
    }                                    __union_VerticalCSType        ;
;
    }                                   *__union_VerticalCSType        ;
//  END OF CHOICE OF SUBSTITUTIONS
/// Attribute aggregationType of type "http://www.opengis.net/gml/3.2":AggregationType.
   @enum gml__AggregationType*           aggregationType                0;	///< Optional attribute.
    END OF INHERITED FROM gml__AbstractCoordinateSystemType */
};

/// "http://www.opengis.net/gml/3.2":TimeCSType is a complexType with complexContent extension of "http://www.opengis.net/gml/3.2":AbstractCoordinateSystemType.
/// class gml__TimeCSType operations:
/// - soap_new_gml__TimeCSType(soap*) allocate
/// - soap_new_gml__TimeCSType(soap*, int num) allocate array
/// - soap_new_req_gml__TimeCSType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__TimeCSType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__TimeCSType(soap*, gml__TimeCSType*) deserialize from a stream
/// - int soap_write_gml__TimeCSType(soap, gml__TimeCSType*) serialize to a stream
class gml__TimeCSType : public gml__AbstractCoordinateSystemType
{ public:
/*  INHERITED FROM gml__DefinitionBaseType:
    END OF INHERITED FROM gml__DefinitionBaseType */
/*  INHERITED FROM gml__DefinitionType:
/// Element reference "http://www.opengis.net/gml/3.2":remarks.
    std::string*                         remarks                        0;	///< Optional element.
    END OF INHERITED FROM gml__DefinitionType */
/*  INHERITED FROM gml__IdentifiedObjectType:
    END OF INHERITED FROM gml__IdentifiedObjectType */
/*  INHERITED FROM gml__AbstractCoordinateSystemType:
/// @brief The gml:axis property is an association role (ordered sequence) to the coordinate system axes included in this coordinate system. The coordinate values in a coordinate tuple shall be recorded in the order in which the coordinate system axes associations are recorded, whenever those coordinates use a coordinate reference system that uses this coordinate system. The gml:AggregationAttributeGroup should be used to specify that the axis objects are ordered.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="axis" maxOccurs="unbounded"> with elements <usesAxis>
   $int                                  __sizeaxis                     0;
    class __gml__union_TimeCSType
    {
   $int                                  __unionaxis                    0;	///< Union _gml__union_TimeCSType selector: set to SOAP_UNION__gml__union_TimeCSType_<fieldname>
/// Union for substitutionGroup="axis"
    union _gml__union_TimeCSType
    {
/// @brief The gml:axis property is an association role (ordered sequence) to the coordinate system axes included in this coordinate system. The coordinate values in a coordinate tuple shall be recorded in the order in which the coordinate system axes associations are recorded, whenever those coordinates use a coordinate reference system that uses this coordinate system. The gml:AggregationAttributeGroup should be used to specify that the axis objects are ordered.
/// Vector of gml__CoordinateSystemAxisPropertyType* element refs with length 1..unbounded
    std::vector<gml__CoordinateSystemAxisPropertyType*> *axis                           1;
/// Element usesAxis of type "http://www.opengis.net/gml/3.2":CoordinateSystemAxisPropertyType.
    gml__CoordinateSystemAxisPropertyType*  usesAxis                       1;	///< Required element.
    }                                    __union_TimeCSType            ;
;
    }                                   *__union_TimeCSType            ;
//  END OF CHOICE OF SUBSTITUTIONS
/// Attribute aggregationType of type "http://www.opengis.net/gml/3.2":AggregationType.
   @enum gml__AggregationType*           aggregationType                0;	///< Optional attribute.
    END OF INHERITED FROM gml__AbstractCoordinateSystemType */
};

/// "http://www.opengis.net/gml/3.2":LinearCSType is a complexType with complexContent extension of "http://www.opengis.net/gml/3.2":AbstractCoordinateSystemType.
/// class gml__LinearCSType operations:
/// - soap_new_gml__LinearCSType(soap*) allocate
/// - soap_new_gml__LinearCSType(soap*, int num) allocate array
/// - soap_new_req_gml__LinearCSType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__LinearCSType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__LinearCSType(soap*, gml__LinearCSType*) deserialize from a stream
/// - int soap_write_gml__LinearCSType(soap, gml__LinearCSType*) serialize to a stream
class gml__LinearCSType : public gml__AbstractCoordinateSystemType
{ public:
/*  INHERITED FROM gml__DefinitionBaseType:
    END OF INHERITED FROM gml__DefinitionBaseType */
/*  INHERITED FROM gml__DefinitionType:
/// Element reference "http://www.opengis.net/gml/3.2":remarks.
    std::string*                         remarks                        0;	///< Optional element.
    END OF INHERITED FROM gml__DefinitionType */
/*  INHERITED FROM gml__IdentifiedObjectType:
    END OF INHERITED FROM gml__IdentifiedObjectType */
/*  INHERITED FROM gml__AbstractCoordinateSystemType:
/// @brief The gml:axis property is an association role (ordered sequence) to the coordinate system axes included in this coordinate system. The coordinate values in a coordinate tuple shall be recorded in the order in which the coordinate system axes associations are recorded, whenever those coordinates use a coordinate reference system that uses this coordinate system. The gml:AggregationAttributeGroup should be used to specify that the axis objects are ordered.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="axis" maxOccurs="unbounded"> with elements <usesAxis>
   $int                                  __sizeaxis                     0;
    class __gml__union_LinearCSType
    {
   $int                                  __unionaxis                    0;	///< Union _gml__union_LinearCSType selector: set to SOAP_UNION__gml__union_LinearCSType_<fieldname>
/// Union for substitutionGroup="axis"
    union _gml__union_LinearCSType
    {
/// @brief The gml:axis property is an association role (ordered sequence) to the coordinate system axes included in this coordinate system. The coordinate values in a coordinate tuple shall be recorded in the order in which the coordinate system axes associations are recorded, whenever those coordinates use a coordinate reference system that uses this coordinate system. The gml:AggregationAttributeGroup should be used to specify that the axis objects are ordered.
/// Vector of gml__CoordinateSystemAxisPropertyType* element refs with length 1..unbounded
    std::vector<gml__CoordinateSystemAxisPropertyType*> *axis                           1;
/// Element usesAxis of type "http://www.opengis.net/gml/3.2":CoordinateSystemAxisPropertyType.
    gml__CoordinateSystemAxisPropertyType*  usesAxis                       1;	///< Required element.
    }                                    __union_LinearCSType          ;
;
    }                                   *__union_LinearCSType          ;
//  END OF CHOICE OF SUBSTITUTIONS
/// Attribute aggregationType of type "http://www.opengis.net/gml/3.2":AggregationType.
   @enum gml__AggregationType*           aggregationType                0;	///< Optional attribute.
    END OF INHERITED FROM gml__AbstractCoordinateSystemType */
};

/// "http://www.opengis.net/gml/3.2":UserDefinedCSType is a complexType with complexContent extension of "http://www.opengis.net/gml/3.2":AbstractCoordinateSystemType.
/// class gml__UserDefinedCSType operations:
/// - soap_new_gml__UserDefinedCSType(soap*) allocate
/// - soap_new_gml__UserDefinedCSType(soap*, int num) allocate array
/// - soap_new_req_gml__UserDefinedCSType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__UserDefinedCSType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__UserDefinedCSType(soap*, gml__UserDefinedCSType*) deserialize from a stream
/// - int soap_write_gml__UserDefinedCSType(soap, gml__UserDefinedCSType*) serialize to a stream
class gml__UserDefinedCSType : public gml__AbstractCoordinateSystemType
{ public:
/*  INHERITED FROM gml__DefinitionBaseType:
    END OF INHERITED FROM gml__DefinitionBaseType */
/*  INHERITED FROM gml__DefinitionType:
/// Element reference "http://www.opengis.net/gml/3.2":remarks.
    std::string*                         remarks                        0;	///< Optional element.
    END OF INHERITED FROM gml__DefinitionType */
/*  INHERITED FROM gml__IdentifiedObjectType:
    END OF INHERITED FROM gml__IdentifiedObjectType */
/*  INHERITED FROM gml__AbstractCoordinateSystemType:
/// @brief The gml:axis property is an association role (ordered sequence) to the coordinate system axes included in this coordinate system. The coordinate values in a coordinate tuple shall be recorded in the order in which the coordinate system axes associations are recorded, whenever those coordinates use a coordinate reference system that uses this coordinate system. The gml:AggregationAttributeGroup should be used to specify that the axis objects are ordered.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="axis" maxOccurs="unbounded"> with elements <usesAxis>
   $int                                  __sizeaxis                     0;
    class __gml__union_UserDefinedCSType
    {
   $int                                  __unionaxis                    0;	///< Union _gml__union_UserDefinedCSType selector: set to SOAP_UNION__gml__union_UserDefinedCSType_<fieldname>
/// Union for substitutionGroup="axis"
    union _gml__union_UserDefinedCSType
    {
/// @brief The gml:axis property is an association role (ordered sequence) to the coordinate system axes included in this coordinate system. The coordinate values in a coordinate tuple shall be recorded in the order in which the coordinate system axes associations are recorded, whenever those coordinates use a coordinate reference system that uses this coordinate system. The gml:AggregationAttributeGroup should be used to specify that the axis objects are ordered.
/// Vector of gml__CoordinateSystemAxisPropertyType* element refs with length 1..unbounded
    std::vector<gml__CoordinateSystemAxisPropertyType*> *axis                           1;
/// Element usesAxis of type "http://www.opengis.net/gml/3.2":CoordinateSystemAxisPropertyType.
    gml__CoordinateSystemAxisPropertyType*  usesAxis                       1;	///< Required element.
    }                                    __union_UserDefinedCSType     ;
;
    }                                   *__union_UserDefinedCSType     ;
//  END OF CHOICE OF SUBSTITUTIONS
/// Attribute aggregationType of type "http://www.opengis.net/gml/3.2":AggregationType.
   @enum gml__AggregationType*           aggregationType                0;	///< Optional attribute.
    END OF INHERITED FROM gml__AbstractCoordinateSystemType */
};

/// "http://www.opengis.net/gml/3.2":SphericalCSType is a complexType with complexContent extension of "http://www.opengis.net/gml/3.2":AbstractCoordinateSystemType.
/// class gml__SphericalCSType operations:
/// - soap_new_gml__SphericalCSType(soap*) allocate
/// - soap_new_gml__SphericalCSType(soap*, int num) allocate array
/// - soap_new_req_gml__SphericalCSType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__SphericalCSType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__SphericalCSType(soap*, gml__SphericalCSType*) deserialize from a stream
/// - int soap_write_gml__SphericalCSType(soap, gml__SphericalCSType*) serialize to a stream
class gml__SphericalCSType : public gml__AbstractCoordinateSystemType
{ public:
/*  INHERITED FROM gml__DefinitionBaseType:
    END OF INHERITED FROM gml__DefinitionBaseType */
/*  INHERITED FROM gml__DefinitionType:
/// Element reference "http://www.opengis.net/gml/3.2":remarks.
    std::string*                         remarks                        0;	///< Optional element.
    END OF INHERITED FROM gml__DefinitionType */
/*  INHERITED FROM gml__IdentifiedObjectType:
    END OF INHERITED FROM gml__IdentifiedObjectType */
/*  INHERITED FROM gml__AbstractCoordinateSystemType:
/// @brief The gml:axis property is an association role (ordered sequence) to the coordinate system axes included in this coordinate system. The coordinate values in a coordinate tuple shall be recorded in the order in which the coordinate system axes associations are recorded, whenever those coordinates use a coordinate reference system that uses this coordinate system. The gml:AggregationAttributeGroup should be used to specify that the axis objects are ordered.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="axis" maxOccurs="unbounded"> with elements <usesAxis>
   $int                                  __sizeaxis                     0;
    class __gml__union_SphericalCSType
    {
   $int                                  __unionaxis                    0;	///< Union _gml__union_SphericalCSType selector: set to SOAP_UNION__gml__union_SphericalCSType_<fieldname>
/// Union for substitutionGroup="axis"
    union _gml__union_SphericalCSType
    {
/// @brief The gml:axis property is an association role (ordered sequence) to the coordinate system axes included in this coordinate system. The coordinate values in a coordinate tuple shall be recorded in the order in which the coordinate system axes associations are recorded, whenever those coordinates use a coordinate reference system that uses this coordinate system. The gml:AggregationAttributeGroup should be used to specify that the axis objects are ordered.
/// Vector of gml__CoordinateSystemAxisPropertyType* element refs with length 1..unbounded
    std::vector<gml__CoordinateSystemAxisPropertyType*> *axis                           1;
/// Element usesAxis of type "http://www.opengis.net/gml/3.2":CoordinateSystemAxisPropertyType.
    gml__CoordinateSystemAxisPropertyType*  usesAxis                       1;	///< Required element.
    }                                    __union_SphericalCSType       ;
;
    }                                   *__union_SphericalCSType       ;
//  END OF CHOICE OF SUBSTITUTIONS
/// Attribute aggregationType of type "http://www.opengis.net/gml/3.2":AggregationType.
   @enum gml__AggregationType*           aggregationType                0;	///< Optional attribute.
    END OF INHERITED FROM gml__AbstractCoordinateSystemType */
};

/// "http://www.opengis.net/gml/3.2":PolarCSType is a complexType with complexContent extension of "http://www.opengis.net/gml/3.2":AbstractCoordinateSystemType.
/// class gml__PolarCSType operations:
/// - soap_new_gml__PolarCSType(soap*) allocate
/// - soap_new_gml__PolarCSType(soap*, int num) allocate array
/// - soap_new_req_gml__PolarCSType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__PolarCSType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__PolarCSType(soap*, gml__PolarCSType*) deserialize from a stream
/// - int soap_write_gml__PolarCSType(soap, gml__PolarCSType*) serialize to a stream
class gml__PolarCSType : public gml__AbstractCoordinateSystemType
{ public:
/*  INHERITED FROM gml__DefinitionBaseType:
    END OF INHERITED FROM gml__DefinitionBaseType */
/*  INHERITED FROM gml__DefinitionType:
/// Element reference "http://www.opengis.net/gml/3.2":remarks.
    std::string*                         remarks                        0;	///< Optional element.
    END OF INHERITED FROM gml__DefinitionType */
/*  INHERITED FROM gml__IdentifiedObjectType:
    END OF INHERITED FROM gml__IdentifiedObjectType */
/*  INHERITED FROM gml__AbstractCoordinateSystemType:
/// @brief The gml:axis property is an association role (ordered sequence) to the coordinate system axes included in this coordinate system. The coordinate values in a coordinate tuple shall be recorded in the order in which the coordinate system axes associations are recorded, whenever those coordinates use a coordinate reference system that uses this coordinate system. The gml:AggregationAttributeGroup should be used to specify that the axis objects are ordered.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="axis" maxOccurs="unbounded"> with elements <usesAxis>
   $int                                  __sizeaxis                     0;
    class __gml__union_PolarCSType
    {
   $int                                  __unionaxis                    0;	///< Union _gml__union_PolarCSType selector: set to SOAP_UNION__gml__union_PolarCSType_<fieldname>
/// Union for substitutionGroup="axis"
    union _gml__union_PolarCSType
    {
/// @brief The gml:axis property is an association role (ordered sequence) to the coordinate system axes included in this coordinate system. The coordinate values in a coordinate tuple shall be recorded in the order in which the coordinate system axes associations are recorded, whenever those coordinates use a coordinate reference system that uses this coordinate system. The gml:AggregationAttributeGroup should be used to specify that the axis objects are ordered.
/// Vector of gml__CoordinateSystemAxisPropertyType* element refs with length 1..unbounded
    std::vector<gml__CoordinateSystemAxisPropertyType*> *axis                           1;
/// Element usesAxis of type "http://www.opengis.net/gml/3.2":CoordinateSystemAxisPropertyType.
    gml__CoordinateSystemAxisPropertyType*  usesAxis                       1;	///< Required element.
    }                                    __union_PolarCSType           ;
;
    }                                   *__union_PolarCSType           ;
//  END OF CHOICE OF SUBSTITUTIONS
/// Attribute aggregationType of type "http://www.opengis.net/gml/3.2":AggregationType.
   @enum gml__AggregationType*           aggregationType                0;	///< Optional attribute.
    END OF INHERITED FROM gml__AbstractCoordinateSystemType */
};

/// "http://www.opengis.net/gml/3.2":CylindricalCSType is a complexType with complexContent extension of "http://www.opengis.net/gml/3.2":AbstractCoordinateSystemType.
/// class gml__CylindricalCSType operations:
/// - soap_new_gml__CylindricalCSType(soap*) allocate
/// - soap_new_gml__CylindricalCSType(soap*, int num) allocate array
/// - soap_new_req_gml__CylindricalCSType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__CylindricalCSType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__CylindricalCSType(soap*, gml__CylindricalCSType*) deserialize from a stream
/// - int soap_write_gml__CylindricalCSType(soap, gml__CylindricalCSType*) serialize to a stream
class gml__CylindricalCSType : public gml__AbstractCoordinateSystemType
{ public:
/*  INHERITED FROM gml__DefinitionBaseType:
    END OF INHERITED FROM gml__DefinitionBaseType */
/*  INHERITED FROM gml__DefinitionType:
/// Element reference "http://www.opengis.net/gml/3.2":remarks.
    std::string*                         remarks                        0;	///< Optional element.
    END OF INHERITED FROM gml__DefinitionType */
/*  INHERITED FROM gml__IdentifiedObjectType:
    END OF INHERITED FROM gml__IdentifiedObjectType */
/*  INHERITED FROM gml__AbstractCoordinateSystemType:
/// @brief The gml:axis property is an association role (ordered sequence) to the coordinate system axes included in this coordinate system. The coordinate values in a coordinate tuple shall be recorded in the order in which the coordinate system axes associations are recorded, whenever those coordinates use a coordinate reference system that uses this coordinate system. The gml:AggregationAttributeGroup should be used to specify that the axis objects are ordered.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="axis" maxOccurs="unbounded"> with elements <usesAxis>
   $int                                  __sizeaxis                     0;
    class __gml__union_CylindricalCSType
    {
   $int                                  __unionaxis                    0;	///< Union _gml__union_CylindricalCSType selector: set to SOAP_UNION__gml__union_CylindricalCSType_<fieldname>
/// Union for substitutionGroup="axis"
    union _gml__union_CylindricalCSType
    {
/// @brief The gml:axis property is an association role (ordered sequence) to the coordinate system axes included in this coordinate system. The coordinate values in a coordinate tuple shall be recorded in the order in which the coordinate system axes associations are recorded, whenever those coordinates use a coordinate reference system that uses this coordinate system. The gml:AggregationAttributeGroup should be used to specify that the axis objects are ordered.
/// Vector of gml__CoordinateSystemAxisPropertyType* element refs with length 1..unbounded
    std::vector<gml__CoordinateSystemAxisPropertyType*> *axis                           1;
/// Element usesAxis of type "http://www.opengis.net/gml/3.2":CoordinateSystemAxisPropertyType.
    gml__CoordinateSystemAxisPropertyType*  usesAxis                       1;	///< Required element.
    }                                    __union_CylindricalCSType     ;
;
    }                                   *__union_CylindricalCSType     ;
//  END OF CHOICE OF SUBSTITUTIONS
/// Attribute aggregationType of type "http://www.opengis.net/gml/3.2":AggregationType.
   @enum gml__AggregationType*           aggregationType                0;	///< Optional attribute.
    END OF INHERITED FROM gml__AbstractCoordinateSystemType */
};

/// "http://www.opengis.net/gml/3.2":AffineCSType is a complexType with complexContent extension of "http://www.opengis.net/gml/3.2":AbstractCoordinateSystemType.
/// class gml__AffineCSType operations:
/// - soap_new_gml__AffineCSType(soap*) allocate
/// - soap_new_gml__AffineCSType(soap*, int num) allocate array
/// - soap_new_req_gml__AffineCSType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__AffineCSType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__AffineCSType(soap*, gml__AffineCSType*) deserialize from a stream
/// - int soap_write_gml__AffineCSType(soap, gml__AffineCSType*) serialize to a stream
class gml__AffineCSType : public gml__AbstractCoordinateSystemType
{ public:
/*  INHERITED FROM gml__DefinitionBaseType:
    END OF INHERITED FROM gml__DefinitionBaseType */
/*  INHERITED FROM gml__DefinitionType:
/// Element reference "http://www.opengis.net/gml/3.2":remarks.
    std::string*                         remarks                        0;	///< Optional element.
    END OF INHERITED FROM gml__DefinitionType */
/*  INHERITED FROM gml__IdentifiedObjectType:
    END OF INHERITED FROM gml__IdentifiedObjectType */
/*  INHERITED FROM gml__AbstractCoordinateSystemType:
/// @brief The gml:axis property is an association role (ordered sequence) to the coordinate system axes included in this coordinate system. The coordinate values in a coordinate tuple shall be recorded in the order in which the coordinate system axes associations are recorded, whenever those coordinates use a coordinate reference system that uses this coordinate system. The gml:AggregationAttributeGroup should be used to specify that the axis objects are ordered.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="axis" maxOccurs="unbounded"> with elements <usesAxis>
   $int                                  __sizeaxis                     0;
    class __gml__union_AffineCSType
    {
   $int                                  __unionaxis                    0;	///< Union _gml__union_AffineCSType selector: set to SOAP_UNION__gml__union_AffineCSType_<fieldname>
/// Union for substitutionGroup="axis"
    union _gml__union_AffineCSType
    {
/// @brief The gml:axis property is an association role (ordered sequence) to the coordinate system axes included in this coordinate system. The coordinate values in a coordinate tuple shall be recorded in the order in which the coordinate system axes associations are recorded, whenever those coordinates use a coordinate reference system that uses this coordinate system. The gml:AggregationAttributeGroup should be used to specify that the axis objects are ordered.
/// Vector of gml__CoordinateSystemAxisPropertyType* element refs with length 1..unbounded
    std::vector<gml__CoordinateSystemAxisPropertyType*> *axis                           1;
/// Element usesAxis of type "http://www.opengis.net/gml/3.2":CoordinateSystemAxisPropertyType.
    gml__CoordinateSystemAxisPropertyType*  usesAxis                       1;	///< Required element.
    }                                    __union_AffineCSType          ;
;
    }                                   *__union_AffineCSType          ;
//  END OF CHOICE OF SUBSTITUTIONS
/// Attribute aggregationType of type "http://www.opengis.net/gml/3.2":AggregationType.
   @enum gml__AggregationType*           aggregationType                0;	///< Optional attribute.
    END OF INHERITED FROM gml__AbstractCoordinateSystemType */
};

/// "http://www.opengis.net/gml/3.2":GeodeticDatumType is a complexType with complexContent extension of "http://www.opengis.net/gml/3.2":AbstractDatumType.
/// class gml__GeodeticDatumType operations:
/// - soap_new_gml__GeodeticDatumType(soap*) allocate
/// - soap_new_gml__GeodeticDatumType(soap*, int num) allocate array
/// - soap_new_req_gml__GeodeticDatumType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__GeodeticDatumType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__GeodeticDatumType(soap*, gml__GeodeticDatumType*) deserialize from a stream
/// - int soap_write_gml__GeodeticDatumType(soap, gml__GeodeticDatumType*) serialize to a stream
class gml__GeodeticDatumType : public gml__AbstractDatumType
{ public:
/*  INHERITED FROM gml__DefinitionBaseType:
    END OF INHERITED FROM gml__DefinitionBaseType */
/*  INHERITED FROM gml__DefinitionType:
/// Element reference "http://www.opengis.net/gml/3.2":remarks.
    std::string*                         remarks                        0;	///< Optional element.
    END OF INHERITED FROM gml__DefinitionType */
/*  INHERITED FROM gml__IdentifiedObjectType:
    END OF INHERITED FROM gml__IdentifiedObjectType */
/*  INHERITED FROM gml__AbstractDatumType:
/// @brief The gml:domainOfValidity property implements an association role to an EX_Extent object as encoded in ISO/TS 19139, either referencing or containing the definition of that extent.
/// Element reference "http://www.opengis.net/gml/3.2":domainOfValidity.
    _gml__domainOfValidity*              domainOfValidity               0;	///< Optional element.
/// @brief The gml:scope property provides a description of the usage, or limitations of usage, for which this CRS-related object is valid. If unknown, enter "not known".
/// Vector of std::string element refs with length 1..unbounded
    std::vector<std::string            > scope                          1;
/// @brief gml:anchorDefinition is a description, possibly including coordinates, of the definition used to anchor the datum to the Earth. Also known as the "origin", especially for engineering and image datums. The codeSpace attribute may be used to reference a source of more detailed on this point or surface, or on a set of such descriptions. - For a geodetic datum, this point is also known as the fundamental point, which is traditionally the point where the relationship between geoid and ellipsoid is defined. In some cases, the "fundamental point" may consist of a number of points. In those cases, the parameters defining the geoid/ellipsoid relationship have been averaged for these points, and the averages adopted as the datum definition. - For an engineering datum, the anchor definition may be a physical point, or it may be a point with defined coordinates in another CRS.may - For an image datum, the anchor definition is usually either the centre of the image or the corner of the image. - For a temporal datum, this attribute is not defined. Instead of the anchor definition, a temporal datum carries a separate time origin of type DateTime.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="anchorDefinition" minOccurs="0"> with elements <anchorPoint>
   $int                                  __unionanchorDefinition        0;	///< Union _gml__union_GeodeticDatumType selector: set to SOAP_UNION__gml__union_GeodeticDatumType_<fieldname> or 0
/// Union for substitutionGroup="anchorDefinition"
    union _gml__union_GeodeticDatumType
    {
/// @brief gml:anchorDefinition is a description, possibly including coordinates, of the definition used to anchor the datum to the Earth. Also known as the "origin", especially for engineering and image datums. The codeSpace attribute may be used to reference a source of more detailed on this point or surface, or on a set of such descriptions. - For a geodetic datum, this point is also known as the fundamental point, which is traditionally the point where the relationship between geoid and ellipsoid is defined. In some cases, the "fundamental point" may consist of a number of points. In those cases, the parameters defining the geoid/ellipsoid relationship have been averaged for these points, and the averages adopted as the datum definition. - For an engineering datum, the anchor definition may be a physical point, or it may be a point with defined coordinates in another CRS.may - For an image datum, the anchor definition is usually either the centre of the image or the corner of the image. - For a temporal datum, this attribute is not defined. Instead of the anchor definition, a temporal datum carries a separate time origin of type DateTime.
/// Element reference "http://www.opengis.net/gml/3.2":anchorDefinition.
    gml__CodeType*                       anchorDefinition               0;	///< Optional element.
/// Element anchorPoint of type "http://www.opengis.net/gml/3.2":CodeType.
    gml__CodeType*                       anchorPoint                    1;	///< Required element.
    }                                    __union_GeodeticDatumType     ;
//  END OF CHOICE OF SUBSTITUTIONS
/// @brief gml:realizationEpoch is the time after which this datum definition is valid. See ISO 19111 Table 32 for details.
/// Element reference "http://www.opengis.net/gml/3.2":realizationEpoch.
    xsd__date*                           realizationEpoch               0;	///< Optional element.
    END OF INHERITED FROM gml__AbstractDatumType */
/// @brief gml:primeMeridian is an association role to the prime meridian used by this geodetic datum.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="primeMeridian"> with elements <usesPrimeMeridian>
   $int                                  __unionprimeMeridian           0;	///< Union _gml__union_GeodeticDatumType_ selector: set to SOAP_UNION__gml__union_GeodeticDatumType__<fieldname>
/// Union for substitutionGroup="primeMeridian"
    union _gml__union_GeodeticDatumType_
    {
/// @brief gml:primeMeridian is an association role to the prime meridian used by this geodetic datum.
/// Element reference "http://www.opengis.net/gml/3.2":primeMeridian.
    gml__PrimeMeridianPropertyType*      primeMeridian                  1;	///< Required element.
/// Element usesPrimeMeridian of type "http://www.opengis.net/gml/3.2":PrimeMeridianPropertyType.
    gml__PrimeMeridianPropertyType*      usesPrimeMeridian              1;	///< Required element.
    }                                    __union_GeodeticDatumType_    ;
//  END OF CHOICE OF SUBSTITUTIONS
/// @brief gml:ellipsoid is an association role to the ellipsoid used by this geodetic datum.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="ellipsoid"> with elements <usesEllipsoid>
   $int                                  __unionellipsoid               0;	///< Union _gml__union_GeodeticDatumType__ selector: set to SOAP_UNION__gml__union_GeodeticDatumType___<fieldname>
/// Union for substitutionGroup="ellipsoid"
    union _gml__union_GeodeticDatumType__
    {
/// @brief gml:ellipsoid is an association role to the ellipsoid used by this geodetic datum.
/// Element reference "http://www.opengis.net/gml/3.2":ellipsoid.
    gml__EllipsoidPropertyType*          ellipsoid                      1;	///< Required element.
/// Element usesEllipsoid of type "http://www.opengis.net/gml/3.2":EllipsoidPropertyType.
    gml__EllipsoidPropertyType*          usesEllipsoid                  1;	///< Required element.
    }                                    __union_GeodeticDatumType__   ;
//  END OF CHOICE OF SUBSTITUTIONS
};

/// "http://www.opengis.net/gml/3.2":EngineeringDatumType is a complexType with complexContent extension of "http://www.opengis.net/gml/3.2":AbstractDatumType.
/// class gml__EngineeringDatumType operations:
/// - soap_new_gml__EngineeringDatumType(soap*) allocate
/// - soap_new_gml__EngineeringDatumType(soap*, int num) allocate array
/// - soap_new_req_gml__EngineeringDatumType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__EngineeringDatumType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__EngineeringDatumType(soap*, gml__EngineeringDatumType*) deserialize from a stream
/// - int soap_write_gml__EngineeringDatumType(soap, gml__EngineeringDatumType*) serialize to a stream
class gml__EngineeringDatumType : public gml__AbstractDatumType
{ public:
/*  INHERITED FROM gml__DefinitionBaseType:
    END OF INHERITED FROM gml__DefinitionBaseType */
/*  INHERITED FROM gml__DefinitionType:
/// Element reference "http://www.opengis.net/gml/3.2":remarks.
    std::string*                         remarks                        0;	///< Optional element.
    END OF INHERITED FROM gml__DefinitionType */
/*  INHERITED FROM gml__IdentifiedObjectType:
    END OF INHERITED FROM gml__IdentifiedObjectType */
/*  INHERITED FROM gml__AbstractDatumType:
/// @brief The gml:domainOfValidity property implements an association role to an EX_Extent object as encoded in ISO/TS 19139, either referencing or containing the definition of that extent.
/// Element reference "http://www.opengis.net/gml/3.2":domainOfValidity.
    _gml__domainOfValidity*              domainOfValidity               0;	///< Optional element.
/// @brief The gml:scope property provides a description of the usage, or limitations of usage, for which this CRS-related object is valid. If unknown, enter "not known".
/// Vector of std::string element refs with length 1..unbounded
    std::vector<std::string            > scope                          1;
/// @brief gml:anchorDefinition is a description, possibly including coordinates, of the definition used to anchor the datum to the Earth. Also known as the "origin", especially for engineering and image datums. The codeSpace attribute may be used to reference a source of more detailed on this point or surface, or on a set of such descriptions. - For a geodetic datum, this point is also known as the fundamental point, which is traditionally the point where the relationship between geoid and ellipsoid is defined. In some cases, the "fundamental point" may consist of a number of points. In those cases, the parameters defining the geoid/ellipsoid relationship have been averaged for these points, and the averages adopted as the datum definition. - For an engineering datum, the anchor definition may be a physical point, or it may be a point with defined coordinates in another CRS.may - For an image datum, the anchor definition is usually either the centre of the image or the corner of the image. - For a temporal datum, this attribute is not defined. Instead of the anchor definition, a temporal datum carries a separate time origin of type DateTime.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="anchorDefinition" minOccurs="0"> with elements <anchorPoint>
   $int                                  __unionanchorDefinition        0;	///< Union _gml__union_EngineeringDatumType selector: set to SOAP_UNION__gml__union_EngineeringDatumType_<fieldname> or 0
/// Union for substitutionGroup="anchorDefinition"
    union _gml__union_EngineeringDatumType
    {
/// @brief gml:anchorDefinition is a description, possibly including coordinates, of the definition used to anchor the datum to the Earth. Also known as the "origin", especially for engineering and image datums. The codeSpace attribute may be used to reference a source of more detailed on this point or surface, or on a set of such descriptions. - For a geodetic datum, this point is also known as the fundamental point, which is traditionally the point where the relationship between geoid and ellipsoid is defined. In some cases, the "fundamental point" may consist of a number of points. In those cases, the parameters defining the geoid/ellipsoid relationship have been averaged for these points, and the averages adopted as the datum definition. - For an engineering datum, the anchor definition may be a physical point, or it may be a point with defined coordinates in another CRS.may - For an image datum, the anchor definition is usually either the centre of the image or the corner of the image. - For a temporal datum, this attribute is not defined. Instead of the anchor definition, a temporal datum carries a separate time origin of type DateTime.
/// Element reference "http://www.opengis.net/gml/3.2":anchorDefinition.
    gml__CodeType*                       anchorDefinition               0;	///< Optional element.
/// Element anchorPoint of type "http://www.opengis.net/gml/3.2":CodeType.
    gml__CodeType*                       anchorPoint                    1;	///< Required element.
    }                                    __union_EngineeringDatumType  ;
//  END OF CHOICE OF SUBSTITUTIONS
/// @brief gml:realizationEpoch is the time after which this datum definition is valid. See ISO 19111 Table 32 for details.
/// Element reference "http://www.opengis.net/gml/3.2":realizationEpoch.
    xsd__date*                           realizationEpoch               0;	///< Optional element.
    END OF INHERITED FROM gml__AbstractDatumType */
};

/// "http://www.opengis.net/gml/3.2":ImageDatumType is a complexType with complexContent extension of "http://www.opengis.net/gml/3.2":AbstractDatumType.
/// class gml__ImageDatumType operations:
/// - soap_new_gml__ImageDatumType(soap*) allocate
/// - soap_new_gml__ImageDatumType(soap*, int num) allocate array
/// - soap_new_req_gml__ImageDatumType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__ImageDatumType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__ImageDatumType(soap*, gml__ImageDatumType*) deserialize from a stream
/// - int soap_write_gml__ImageDatumType(soap, gml__ImageDatumType*) serialize to a stream
class gml__ImageDatumType : public gml__AbstractDatumType
{ public:
/*  INHERITED FROM gml__DefinitionBaseType:
    END OF INHERITED FROM gml__DefinitionBaseType */
/*  INHERITED FROM gml__DefinitionType:
/// Element reference "http://www.opengis.net/gml/3.2":remarks.
    std::string*                         remarks                        0;	///< Optional element.
    END OF INHERITED FROM gml__DefinitionType */
/*  INHERITED FROM gml__IdentifiedObjectType:
    END OF INHERITED FROM gml__IdentifiedObjectType */
/*  INHERITED FROM gml__AbstractDatumType:
/// @brief The gml:domainOfValidity property implements an association role to an EX_Extent object as encoded in ISO/TS 19139, either referencing or containing the definition of that extent.
/// Element reference "http://www.opengis.net/gml/3.2":domainOfValidity.
    _gml__domainOfValidity*              domainOfValidity               0;	///< Optional element.
/// @brief The gml:scope property provides a description of the usage, or limitations of usage, for which this CRS-related object is valid. If unknown, enter "not known".
/// Vector of std::string element refs with length 1..unbounded
    std::vector<std::string            > scope                          1;
/// @brief gml:anchorDefinition is a description, possibly including coordinates, of the definition used to anchor the datum to the Earth. Also known as the "origin", especially for engineering and image datums. The codeSpace attribute may be used to reference a source of more detailed on this point or surface, or on a set of such descriptions. - For a geodetic datum, this point is also known as the fundamental point, which is traditionally the point where the relationship between geoid and ellipsoid is defined. In some cases, the "fundamental point" may consist of a number of points. In those cases, the parameters defining the geoid/ellipsoid relationship have been averaged for these points, and the averages adopted as the datum definition. - For an engineering datum, the anchor definition may be a physical point, or it may be a point with defined coordinates in another CRS.may - For an image datum, the anchor definition is usually either the centre of the image or the corner of the image. - For a temporal datum, this attribute is not defined. Instead of the anchor definition, a temporal datum carries a separate time origin of type DateTime.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="anchorDefinition" minOccurs="0"> with elements <anchorPoint>
   $int                                  __unionanchorDefinition        0;	///< Union _gml__union_ImageDatumType selector: set to SOAP_UNION__gml__union_ImageDatumType_<fieldname> or 0
/// Union for substitutionGroup="anchorDefinition"
    union _gml__union_ImageDatumType
    {
/// @brief gml:anchorDefinition is a description, possibly including coordinates, of the definition used to anchor the datum to the Earth. Also known as the "origin", especially for engineering and image datums. The codeSpace attribute may be used to reference a source of more detailed on this point or surface, or on a set of such descriptions. - For a geodetic datum, this point is also known as the fundamental point, which is traditionally the point where the relationship between geoid and ellipsoid is defined. In some cases, the "fundamental point" may consist of a number of points. In those cases, the parameters defining the geoid/ellipsoid relationship have been averaged for these points, and the averages adopted as the datum definition. - For an engineering datum, the anchor definition may be a physical point, or it may be a point with defined coordinates in another CRS.may - For an image datum, the anchor definition is usually either the centre of the image or the corner of the image. - For a temporal datum, this attribute is not defined. Instead of the anchor definition, a temporal datum carries a separate time origin of type DateTime.
/// Element reference "http://www.opengis.net/gml/3.2":anchorDefinition.
    gml__CodeType*                       anchorDefinition               0;	///< Optional element.
/// Element anchorPoint of type "http://www.opengis.net/gml/3.2":CodeType.
    gml__CodeType*                       anchorPoint                    1;	///< Required element.
    }                                    __union_ImageDatumType        ;
//  END OF CHOICE OF SUBSTITUTIONS
/// @brief gml:realizationEpoch is the time after which this datum definition is valid. See ISO 19111 Table 32 for details.
/// Element reference "http://www.opengis.net/gml/3.2":realizationEpoch.
    xsd__date*                           realizationEpoch               0;	///< Optional element.
    END OF INHERITED FROM gml__AbstractDatumType */
/// @brief gml:pixelInCell is a specification of the way an image grid is associated with the image data attributes. The required codeSpace attribute shall reference a source of information specifying the values and meanings of all the allowed string values for this property.
/// Element reference "http://www.opengis.net/gml/3.2":pixelInCell.
    gml__CodeWithAuthorityType*          pixelInCell                    1;	///< Required element.
};

/// "http://www.opengis.net/gml/3.2":VerticalDatumType is a complexType with complexContent extension of "http://www.opengis.net/gml/3.2":AbstractDatumType.
/// class gml__VerticalDatumType operations:
/// - soap_new_gml__VerticalDatumType(soap*) allocate
/// - soap_new_gml__VerticalDatumType(soap*, int num) allocate array
/// - soap_new_req_gml__VerticalDatumType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__VerticalDatumType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__VerticalDatumType(soap*, gml__VerticalDatumType*) deserialize from a stream
/// - int soap_write_gml__VerticalDatumType(soap, gml__VerticalDatumType*) serialize to a stream
class gml__VerticalDatumType : public gml__AbstractDatumType
{ public:
/*  INHERITED FROM gml__DefinitionBaseType:
    END OF INHERITED FROM gml__DefinitionBaseType */
/*  INHERITED FROM gml__DefinitionType:
/// Element reference "http://www.opengis.net/gml/3.2":remarks.
    std::string*                         remarks                        0;	///< Optional element.
    END OF INHERITED FROM gml__DefinitionType */
/*  INHERITED FROM gml__IdentifiedObjectType:
    END OF INHERITED FROM gml__IdentifiedObjectType */
/*  INHERITED FROM gml__AbstractDatumType:
/// @brief The gml:domainOfValidity property implements an association role to an EX_Extent object as encoded in ISO/TS 19139, either referencing or containing the definition of that extent.
/// Element reference "http://www.opengis.net/gml/3.2":domainOfValidity.
    _gml__domainOfValidity*              domainOfValidity               0;	///< Optional element.
/// @brief The gml:scope property provides a description of the usage, or limitations of usage, for which this CRS-related object is valid. If unknown, enter "not known".
/// Vector of std::string element refs with length 1..unbounded
    std::vector<std::string            > scope                          1;
/// @brief gml:anchorDefinition is a description, possibly including coordinates, of the definition used to anchor the datum to the Earth. Also known as the "origin", especially for engineering and image datums. The codeSpace attribute may be used to reference a source of more detailed on this point or surface, or on a set of such descriptions. - For a geodetic datum, this point is also known as the fundamental point, which is traditionally the point where the relationship between geoid and ellipsoid is defined. In some cases, the "fundamental point" may consist of a number of points. In those cases, the parameters defining the geoid/ellipsoid relationship have been averaged for these points, and the averages adopted as the datum definition. - For an engineering datum, the anchor definition may be a physical point, or it may be a point with defined coordinates in another CRS.may - For an image datum, the anchor definition is usually either the centre of the image or the corner of the image. - For a temporal datum, this attribute is not defined. Instead of the anchor definition, a temporal datum carries a separate time origin of type DateTime.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="anchorDefinition" minOccurs="0"> with elements <anchorPoint>
   $int                                  __unionanchorDefinition        0;	///< Union _gml__union_VerticalDatumType selector: set to SOAP_UNION__gml__union_VerticalDatumType_<fieldname> or 0
/// Union for substitutionGroup="anchorDefinition"
    union _gml__union_VerticalDatumType
    {
/// @brief gml:anchorDefinition is a description, possibly including coordinates, of the definition used to anchor the datum to the Earth. Also known as the "origin", especially for engineering and image datums. The codeSpace attribute may be used to reference a source of more detailed on this point or surface, or on a set of such descriptions. - For a geodetic datum, this point is also known as the fundamental point, which is traditionally the point where the relationship between geoid and ellipsoid is defined. In some cases, the "fundamental point" may consist of a number of points. In those cases, the parameters defining the geoid/ellipsoid relationship have been averaged for these points, and the averages adopted as the datum definition. - For an engineering datum, the anchor definition may be a physical point, or it may be a point with defined coordinates in another CRS.may - For an image datum, the anchor definition is usually either the centre of the image or the corner of the image. - For a temporal datum, this attribute is not defined. Instead of the anchor definition, a temporal datum carries a separate time origin of type DateTime.
/// Element reference "http://www.opengis.net/gml/3.2":anchorDefinition.
    gml__CodeType*                       anchorDefinition               0;	///< Optional element.
/// Element anchorPoint of type "http://www.opengis.net/gml/3.2":CodeType.
    gml__CodeType*                       anchorPoint                    1;	///< Required element.
    }                                    __union_VerticalDatumType     ;
//  END OF CHOICE OF SUBSTITUTIONS
/// @brief gml:realizationEpoch is the time after which this datum definition is valid. See ISO 19111 Table 32 for details.
/// Element reference "http://www.opengis.net/gml/3.2":realizationEpoch.
    xsd__date*                           realizationEpoch               0;	///< Optional element.
    END OF INHERITED FROM gml__AbstractDatumType */
};

/// "http://www.opengis.net/gml/3.2":TemporalDatumBaseType is an abstract complexType with complexContent restriction of "http://www.opengis.net/gml/3.2":AbstractDatumType.
/// @brief The TemporalDatumBaseType partially defines the origin of a temporal coordinate reference system. This type restricts the AbstractDatumType to remove the "anchorDefinition" and "realizationEpoch" elements.
/// class gml__TemporalDatumBaseType operations:
/// - soap_new_gml__TemporalDatumBaseType(soap*) allocate
/// - soap_new_gml__TemporalDatumBaseType(soap*, int num) allocate array
/// - soap_new_req_gml__TemporalDatumBaseType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__TemporalDatumBaseType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__TemporalDatumBaseType(soap*, gml__TemporalDatumBaseType*) deserialize from a stream
/// - int soap_write_gml__TemporalDatumBaseType(soap, gml__TemporalDatumBaseType*) serialize to a stream
class gml__TemporalDatumBaseType : public xsd__anyType
{ public:
/// Vector of gml__MetaDataPropertyType* element refs with length 0..unbounded
    std::vector<gml__MetaDataPropertyType*> metaDataProperty               0;
/// @brief The value of this property is a text description of the object. gml:description uses gml:StringOrRefType as its content model, so it may contain a simple text string content, or carry a reference to an external description. The use of gml:description to reference an external description has been deprecated and replaced by the gml:descriptionReference property.
/// Element reference "http://www.opengis.net/gml/3.2":description.
    gml__StringOrRefType*                description                    0;	///< Optional element.
/// @brief The value of this property is a remote text description of the object. The xlink:href attribute of the gml:descriptionReference property references the external description.
/// Element reference "http://www.opengis.net/gml/3.2":descriptionReference.
    gml__ReferenceType*                  descriptionReference           0;	///< Optional element.
/// @brief Often, a special identifier is assigned to an object by the maintaining authority with the intention that it is used in references to the object For such cases, the codeSpace shall be provided. That identifier is usually unique either globally or within an application domain. gml:identifier is a pre-defined property for such identifiers.
/// Element reference "http://www.opengis.net/gml/3.2":identifier.
    gml__CodeWithAuthorityType*          identifier                     1;	///< Required element.
/// @brief The gml:name property provides a label or identifier for the object, commonly a descriptive name. An object may have several names, typically assigned by different authorities. gml:name uses the gml:CodeType content model. The authority for a name is indicated by the value of its (optional) codeSpace attribute. The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace. In common usage there will be one name per authority, so a processing application may select the name from its preferred codeSpace.
/// Vector of gml__CodeType* element refs with length 0..unbounded
    std::vector<gml__CodeType*         > name                           0;
/// Element reference "http://www.opengis.net/gml/3.2":remarks.
    std::string*                         remarks                        0;	///< Optional element.
/// @brief The gml:domainOfValidity property implements an association role to an EX_Extent object as encoded in ISO/TS 19139, either referencing or containing the definition of that extent.
/// Element reference "http://www.opengis.net/gml/3.2":domainOfValidity.
    _gml__domainOfValidity*              domainOfValidity               0;	///< Optional element.
/// @brief The gml:scope property provides a description of the usage, or limitations of usage, for which this CRS-related object is valid. If unknown, enter "not known".
/// Vector of std::string element refs with length 1..unbounded
    std::vector<std::string            > scope                          1;
/// Attribute reference "http://www.opengis.net/gml/3.2":id.
/// @brief The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.
   @xsd__ID                              id                             1;	///< Required attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":id.
/// @brief The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.
   //jld @xsd__ID                              id                             1;	///< Required attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":id.
/// @brief The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.
   //jld @xsd__ID                              id                             1;	///< Required attribute.
};

/// "http://www.opengis.net/gml/3.2":AbstractGeneralConversionType is an abstract complexType with complexContent restriction of "http://www.opengis.net/gml/3.2":AbstractCoordinateOperationType.
/// class gml__AbstractGeneralConversionType operations:
/// - soap_new_gml__AbstractGeneralConversionType(soap*) allocate
/// - soap_new_gml__AbstractGeneralConversionType(soap*, int num) allocate array
/// - soap_new_req_gml__AbstractGeneralConversionType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__AbstractGeneralConversionType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__AbstractGeneralConversionType(soap*, gml__AbstractGeneralConversionType*) deserialize from a stream
/// - int soap_write_gml__AbstractGeneralConversionType(soap, gml__AbstractGeneralConversionType*) serialize to a stream
class gml__AbstractGeneralConversionType : public xsd__anyType
{ public:
/// Vector of gml__MetaDataPropertyType* element refs with length 0..unbounded
    std::vector<gml__MetaDataPropertyType*> metaDataProperty               0;
/// @brief The value of this property is a text description of the object. gml:description uses gml:StringOrRefType as its content model, so it may contain a simple text string content, or carry a reference to an external description. The use of gml:description to reference an external description has been deprecated and replaced by the gml:descriptionReference property.
/// Element reference "http://www.opengis.net/gml/3.2":description.
    gml__StringOrRefType*                description                    0;	///< Optional element.
/// @brief The value of this property is a remote text description of the object. The xlink:href attribute of the gml:descriptionReference property references the external description.
/// Element reference "http://www.opengis.net/gml/3.2":descriptionReference.
    gml__ReferenceType*                  descriptionReference           0;	///< Optional element.
/// @brief Often, a special identifier is assigned to an object by the maintaining authority with the intention that it is used in references to the object For such cases, the codeSpace shall be provided. That identifier is usually unique either globally or within an application domain. gml:identifier is a pre-defined property for such identifiers.
/// Element reference "http://www.opengis.net/gml/3.2":identifier.
    gml__CodeWithAuthorityType*          identifier                     1;	///< Required element.
/// @brief The gml:name property provides a label or identifier for the object, commonly a descriptive name. An object may have several names, typically assigned by different authorities. gml:name uses the gml:CodeType content model. The authority for a name is indicated by the value of its (optional) codeSpace attribute. The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace. In common usage there will be one name per authority, so a processing application may select the name from its preferred codeSpace.
/// Vector of gml__CodeType* element refs with length 0..unbounded
    std::vector<gml__CodeType*         > name                           0;
/// Element reference "http://www.opengis.net/gml/3.2":remarks.
    std::string*                         remarks                        0;	///< Optional element.
/// @brief The gml:domainOfValidity property implements an association role to an EX_Extent object as encoded in ISO/TS 19139, either referencing or containing the definition of that extent.
/// Element reference "http://www.opengis.net/gml/3.2":domainOfValidity.
    _gml__domainOfValidity*              domainOfValidity               0;	///< Optional element.
/// @brief The gml:scope property provides a description of the usage, or limitations of usage, for which this CRS-related object is valid. If unknown, enter "not known".
/// Vector of std::string element refs with length 1..unbounded
    std::vector<std::string            > scope                          1;
/// @brief gml:coordinateOperationAccuracy is an association role to a DQ_PositionalAccuracy object as encoded in ISO/TS 19139, either referencing or containing the definition of that positional accuracy. That object contains an estimate of the impact of this coordinate operation on point accuracy. That is, it gives position error estimates for the target coordinates of this coordinate operation, assuming no errors in the source coordinates.
/// Vector of _gml__coordinateOperationAccuracy* element refs with length 0..unbounded
    std::vector<_gml__coordinateOperationAccuracy*> coordinateOperationAccuracy    0;
/// Attribute reference "http://www.opengis.net/gml/3.2":id.
/// @brief The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.
   @xsd__ID                              id                             1;	///< Required attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":id.
/// @brief The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.
   //jld @xsd__ID                              id                             1;	///< Required attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":id.
/// @brief The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.
   //jld @xsd__ID                              id                             1;	///< Required attribute.
};

/// "http://www.opengis.net/gml/3.2":AbstractGeneralTransformationType is an abstract complexType with complexContent restriction of "http://www.opengis.net/gml/3.2":AbstractCoordinateOperationType.
/// class gml__AbstractGeneralTransformationType operations:
/// - soap_new_gml__AbstractGeneralTransformationType(soap*) allocate
/// - soap_new_gml__AbstractGeneralTransformationType(soap*, int num) allocate array
/// - soap_new_req_gml__AbstractGeneralTransformationType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__AbstractGeneralTransformationType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__AbstractGeneralTransformationType(soap*, gml__AbstractGeneralTransformationType*) deserialize from a stream
/// - int soap_write_gml__AbstractGeneralTransformationType(soap, gml__AbstractGeneralTransformationType*) serialize to a stream
class gml__AbstractGeneralTransformationType : public xsd__anyType
{ public:
/// Vector of gml__MetaDataPropertyType* element refs with length 0..unbounded
    std::vector<gml__MetaDataPropertyType*> metaDataProperty               0;
/// @brief The value of this property is a text description of the object. gml:description uses gml:StringOrRefType as its content model, so it may contain a simple text string content, or carry a reference to an external description. The use of gml:description to reference an external description has been deprecated and replaced by the gml:descriptionReference property.
/// Element reference "http://www.opengis.net/gml/3.2":description.
    gml__StringOrRefType*                description                    0;	///< Optional element.
/// @brief The value of this property is a remote text description of the object. The xlink:href attribute of the gml:descriptionReference property references the external description.
/// Element reference "http://www.opengis.net/gml/3.2":descriptionReference.
    gml__ReferenceType*                  descriptionReference           0;	///< Optional element.
/// @brief Often, a special identifier is assigned to an object by the maintaining authority with the intention that it is used in references to the object For such cases, the codeSpace shall be provided. That identifier is usually unique either globally or within an application domain. gml:identifier is a pre-defined property for such identifiers.
/// Element reference "http://www.opengis.net/gml/3.2":identifier.
    gml__CodeWithAuthorityType*          identifier                     1;	///< Required element.
/// @brief The gml:name property provides a label or identifier for the object, commonly a descriptive name. An object may have several names, typically assigned by different authorities. gml:name uses the gml:CodeType content model. The authority for a name is indicated by the value of its (optional) codeSpace attribute. The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace. In common usage there will be one name per authority, so a processing application may select the name from its preferred codeSpace.
/// Vector of gml__CodeType* element refs with length 0..unbounded
    std::vector<gml__CodeType*         > name                           0;
/// Element reference "http://www.opengis.net/gml/3.2":remarks.
    std::string*                         remarks                        0;	///< Optional element.
/// @brief The gml:domainOfValidity property implements an association role to an EX_Extent object as encoded in ISO/TS 19139, either referencing or containing the definition of that extent.
/// Element reference "http://www.opengis.net/gml/3.2":domainOfValidity.
    _gml__domainOfValidity*              domainOfValidity               0;	///< Optional element.
/// @brief The gml:scope property provides a description of the usage, or limitations of usage, for which this CRS-related object is valid. If unknown, enter "not known".
/// Vector of std::string element refs with length 1..unbounded
    std::vector<std::string            > scope                          1;
/// @brief gml:operationVersion is the version of the coordinate transformation (i.e., instantiation due to the stochastic nature of the parameters). Mandatory when describing a transformation, and should not be supplied for a conversion.
/// Element reference "http://www.opengis.net/gml/3.2":operationVersion.
    std::string                          operationVersion               1;	///< Required element.
/// @brief gml:coordinateOperationAccuracy is an association role to a DQ_PositionalAccuracy object as encoded in ISO/TS 19139, either referencing or containing the definition of that positional accuracy. That object contains an estimate of the impact of this coordinate operation on point accuracy. That is, it gives position error estimates for the target coordinates of this coordinate operation, assuming no errors in the source coordinates.
/// Vector of _gml__coordinateOperationAccuracy* element refs with length 0..unbounded
    std::vector<_gml__coordinateOperationAccuracy*> coordinateOperationAccuracy    0;
/// @brief gml:sourceCRS is an association role to the source CRS (coordinate reference system) of this coordinate operation.
/// Element reference "http://www.opengis.net/gml/3.2":sourceCRS.
    gml__CRSPropertyType*                sourceCRS                      1;	///< Required element.
/// @brief gml:targetCRS is an association role to the target CRS (coordinate reference system) of this coordinate operation.
/// Element reference "http://www.opengis.net/gml/3.2":targetCRS.
    gml__CRSPropertyType*                targetCRS                      1;	///< Required element.
/// Attribute reference "http://www.opengis.net/gml/3.2":id.
/// @brief The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.
   @xsd__ID                              id                             1;	///< Required attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":id.
/// @brief The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.
   //jld @xsd__ID                              id                             1;	///< Required attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":id.
/// @brief The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.
   //jld @xsd__ID                              id                             1;	///< Required attribute.
};

/// "http://www.opengis.net/gml/3.2":ConcatenatedOperationType is a complexType with complexContent extension of "http://www.opengis.net/gml/3.2":AbstractCoordinateOperationType.
/// @brief gml:ConcatenatedOperation is an ordered sequence of two or more coordinate operations. This sequence of operations is constrained by the requirement that the source coordinate reference system of step (n+1) must be the same as the target coordinate reference system of step (n). The source coordinate reference system of the first step and the target coordinate reference system of the last step are the source and target coordinate reference system associated with the concatenated operation. Instead of a forward operation, an inverse operation may be used for one or more of the operation steps mentioned above, if the inverse operation is uniquely defined by the forward operation. The gml:coordOperation property elements are an ordered sequence of associations to the two or more operations used by this concatenated operation. The AggregationAttributeGroup should be used to specify that the coordOperation associations are ordered.
/// class gml__ConcatenatedOperationType operations:
/// - soap_new_gml__ConcatenatedOperationType(soap*) allocate
/// - soap_new_gml__ConcatenatedOperationType(soap*, int num) allocate array
/// - soap_new_req_gml__ConcatenatedOperationType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__ConcatenatedOperationType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__ConcatenatedOperationType(soap*, gml__ConcatenatedOperationType*) deserialize from a stream
/// - int soap_write_gml__ConcatenatedOperationType(soap, gml__ConcatenatedOperationType*) serialize to a stream
class gml__ConcatenatedOperationType : public gml__AbstractCoordinateOperationType
{ public:
/*  INHERITED FROM gml__DefinitionBaseType:
    END OF INHERITED FROM gml__DefinitionBaseType */
/*  INHERITED FROM gml__DefinitionType:
/// Element reference "http://www.opengis.net/gml/3.2":remarks.
    std::string*                         remarks                        0;	///< Optional element.
    END OF INHERITED FROM gml__DefinitionType */
/*  INHERITED FROM gml__IdentifiedObjectType:
    END OF INHERITED FROM gml__IdentifiedObjectType */
/*  INHERITED FROM gml__AbstractCoordinateOperationType:
/// @brief The gml:domainOfValidity property implements an association role to an EX_Extent object as encoded in ISO/TS 19139, either referencing or containing the definition of that extent.
/// Element reference "http://www.opengis.net/gml/3.2":domainOfValidity.
    _gml__domainOfValidity*              domainOfValidity               0;	///< Optional element.
/// @brief The gml:scope property provides a description of the usage, or limitations of usage, for which this CRS-related object is valid. If unknown, enter "not known".
/// Vector of std::string element refs with length 1..unbounded
    std::vector<std::string            > scope                          1;
/// @brief gml:operationVersion is the version of the coordinate transformation (i.e., instantiation due to the stochastic nature of the parameters). Mandatory when describing a transformation, and should not be supplied for a conversion.
/// Element reference "http://www.opengis.net/gml/3.2":operationVersion.
    std::string*                         operationVersion               0;	///< Optional element.
/// @brief gml:coordinateOperationAccuracy is an association role to a DQ_PositionalAccuracy object as encoded in ISO/TS 19139, either referencing or containing the definition of that positional accuracy. That object contains an estimate of the impact of this coordinate operation on point accuracy. That is, it gives position error estimates for the target coordinates of this coordinate operation, assuming no errors in the source coordinates.
/// Vector of _gml__coordinateOperationAccuracy* element refs with length 0..unbounded
    std::vector<_gml__coordinateOperationAccuracy*> coordinateOperationAccuracy    0;
/// @brief gml:sourceCRS is an association role to the source CRS (coordinate reference system) of this coordinate operation.
/// Element reference "http://www.opengis.net/gml/3.2":sourceCRS.
    gml__CRSPropertyType*                sourceCRS                      0;	///< Optional element.
/// @brief gml:targetCRS is an association role to the target CRS (coordinate reference system) of this coordinate operation.
/// Element reference "http://www.opengis.net/gml/3.2":targetCRS.
    gml__CRSPropertyType*                targetCRS                      0;	///< Optional element.
    END OF INHERITED FROM gml__AbstractCoordinateOperationType */
/// @brief gml:coordOperation is an association role to a coordinate operation.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="coordOperation" minOccurs="2" maxOccurs="unbounded"> with elements <usesSingleOperation> <usesOperation>
   $int                                  __sizecoordOperation           2;
    class __gml__union_ConcatenatedOperationType
    {
   $int                                  __unioncoordOperation          2;	///< Union _gml__union_ConcatenatedOperationType selector: set to SOAP_UNION__gml__union_ConcatenatedOperationType_<fieldname>
/// Union for substitutionGroup="coordOperation"
    union _gml__union_ConcatenatedOperationType
    {
/// @brief gml:coordOperation is an association role to a coordinate operation.
/// Vector of gml__CoordinateOperationPropertyType* element refs with length 2..unbounded
    std::vector<gml__CoordinateOperationPropertyType*> *coordOperation                 2;
/// Element usesSingleOperation of type "http://www.opengis.net/gml/3.2":CoordinateOperationPropertyType.
    gml__CoordinateOperationPropertyType*  usesSingleOperation            1;	///< Required element.
/// Element usesOperation of type "http://www.opengis.net/gml/3.2":CoordinateOperationPropertyType.
    gml__CoordinateOperationPropertyType*  usesOperation                  1;	///< Required element.
    }                                    __union_ConcatenatedOperationType;
;
    }                                   *__union_ConcatenatedOperationType;
//  END OF CHOICE OF SUBSTITUTIONS
/// Attribute aggregationType of type "http://www.opengis.net/gml/3.2":AggregationType.
   @enum gml__AggregationType*           aggregationType                0;	///< Optional attribute.
};

/// "http://www.opengis.net/gml/3.2":PassThroughOperationType is a complexType with complexContent extension of "http://www.opengis.net/gml/3.2":AbstractCoordinateOperationType.
/// class gml__PassThroughOperationType operations:
/// - soap_new_gml__PassThroughOperationType(soap*) allocate
/// - soap_new_gml__PassThroughOperationType(soap*, int num) allocate array
/// - soap_new_req_gml__PassThroughOperationType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__PassThroughOperationType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__PassThroughOperationType(soap*, gml__PassThroughOperationType*) deserialize from a stream
/// - int soap_write_gml__PassThroughOperationType(soap, gml__PassThroughOperationType*) serialize to a stream
class gml__PassThroughOperationType : public gml__AbstractCoordinateOperationType
{ public:
/*  INHERITED FROM gml__DefinitionBaseType:
    END OF INHERITED FROM gml__DefinitionBaseType */
/*  INHERITED FROM gml__DefinitionType:
/// Element reference "http://www.opengis.net/gml/3.2":remarks.
    std::string*                         remarks                        0;	///< Optional element.
    END OF INHERITED FROM gml__DefinitionType */
/*  INHERITED FROM gml__IdentifiedObjectType:
    END OF INHERITED FROM gml__IdentifiedObjectType */
/*  INHERITED FROM gml__AbstractCoordinateOperationType:
/// @brief The gml:domainOfValidity property implements an association role to an EX_Extent object as encoded in ISO/TS 19139, either referencing or containing the definition of that extent.
/// Element reference "http://www.opengis.net/gml/3.2":domainOfValidity.
    _gml__domainOfValidity*              domainOfValidity               0;	///< Optional element.
/// @brief The gml:scope property provides a description of the usage, or limitations of usage, for which this CRS-related object is valid. If unknown, enter "not known".
/// Vector of std::string element refs with length 1..unbounded
    std::vector<std::string            > scope                          1;
/// @brief gml:operationVersion is the version of the coordinate transformation (i.e., instantiation due to the stochastic nature of the parameters). Mandatory when describing a transformation, and should not be supplied for a conversion.
/// Element reference "http://www.opengis.net/gml/3.2":operationVersion.
    std::string*                         operationVersion               0;	///< Optional element.
/// @brief gml:coordinateOperationAccuracy is an association role to a DQ_PositionalAccuracy object as encoded in ISO/TS 19139, either referencing or containing the definition of that positional accuracy. That object contains an estimate of the impact of this coordinate operation on point accuracy. That is, it gives position error estimates for the target coordinates of this coordinate operation, assuming no errors in the source coordinates.
/// Vector of _gml__coordinateOperationAccuracy* element refs with length 0..unbounded
    std::vector<_gml__coordinateOperationAccuracy*> coordinateOperationAccuracy    0;
/// @brief gml:sourceCRS is an association role to the source CRS (coordinate reference system) of this coordinate operation.
/// Element reference "http://www.opengis.net/gml/3.2":sourceCRS.
    gml__CRSPropertyType*                sourceCRS                      0;	///< Optional element.
/// @brief gml:targetCRS is an association role to the target CRS (coordinate reference system) of this coordinate operation.
/// Element reference "http://www.opengis.net/gml/3.2":targetCRS.
    gml__CRSPropertyType*                targetCRS                      0;	///< Optional element.
    END OF INHERITED FROM gml__AbstractCoordinateOperationType */
/// @brief gml:modifiedCoordinate is a positive integer defining a position in a coordinate tuple.
/// Vector of xsd__positiveInteger element refs with length 1..unbounded
    std::vector<xsd__positiveInteger   > modifiedCoordinate             1;
/// @brief gml:coordOperation is an association role to a coordinate operation.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="coordOperation"> with elements <usesSingleOperation> <usesOperation>
   $int                                  __unioncoordOperation          0;	///< Union _gml__union_PassThroughOperationType selector: set to SOAP_UNION__gml__union_PassThroughOperationType_<fieldname>
/// Union for substitutionGroup="coordOperation"
    union _gml__union_PassThroughOperationType
    {
/// @brief gml:coordOperation is an association role to a coordinate operation.
/// Element reference "http://www.opengis.net/gml/3.2":coordOperation.
    gml__CoordinateOperationPropertyType*  coordOperation                 1;	///< Required element.
/// Element usesSingleOperation of type "http://www.opengis.net/gml/3.2":CoordinateOperationPropertyType.
    gml__CoordinateOperationPropertyType*  usesSingleOperation            1;	///< Required element.
/// Element usesOperation of type "http://www.opengis.net/gml/3.2":CoordinateOperationPropertyType.
    gml__CoordinateOperationPropertyType*  usesOperation                  1;	///< Required element.
    }                                    __union_PassThroughOperationType;
//  END OF CHOICE OF SUBSTITUTIONS
/// Attribute aggregationType of type "http://www.opengis.net/gml/3.2":AggregationType.
   @enum gml__AggregationType*           aggregationType                0;	///< Optional attribute.
};

/// "http://www.opengis.net/gml/3.2":OperationParameterType is a complexType with complexContent extension of "http://www.opengis.net/gml/3.2":AbstractGeneralOperationParameterType.
/// class gml__OperationParameterType operations:
/// - soap_new_gml__OperationParameterType(soap*) allocate
/// - soap_new_gml__OperationParameterType(soap*, int num) allocate array
/// - soap_new_req_gml__OperationParameterType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__OperationParameterType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__OperationParameterType(soap*, gml__OperationParameterType*) deserialize from a stream
/// - int soap_write_gml__OperationParameterType(soap, gml__OperationParameterType*) serialize to a stream
class gml__OperationParameterType : public gml__AbstractGeneralOperationParameterType
{ public:
/*  INHERITED FROM gml__DefinitionBaseType:
    END OF INHERITED FROM gml__DefinitionBaseType */
/*  INHERITED FROM gml__DefinitionType:
/// Element reference "http://www.opengis.net/gml/3.2":remarks.
    std::string*                         remarks                        0;	///< Optional element.
    END OF INHERITED FROM gml__DefinitionType */
/*  INHERITED FROM gml__IdentifiedObjectType:
    END OF INHERITED FROM gml__IdentifiedObjectType */
/*  INHERITED FROM gml__AbstractGeneralOperationParameterType:
/// @brief gml:minimumOccurs is the minimum number of times that values for this parameter group or parameter are required. If this attribute is omitted, the minimum number shall be one.
/// Element reference "http://www.opengis.net/gml/3.2":minimumOccurs.
    xsd__nonNegativeInteger*             minimumOccurs                  0;	///< Optional element.
    END OF INHERITED FROM gml__AbstractGeneralOperationParameterType */
};

/// "http://www.opengis.net/gml/3.2":OperationParameterGroupType is a complexType with complexContent extension of "http://www.opengis.net/gml/3.2":AbstractGeneralOperationParameterType.
/// class gml__OperationParameterGroupType operations:
/// - soap_new_gml__OperationParameterGroupType(soap*) allocate
/// - soap_new_gml__OperationParameterGroupType(soap*, int num) allocate array
/// - soap_new_req_gml__OperationParameterGroupType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__OperationParameterGroupType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__OperationParameterGroupType(soap*, gml__OperationParameterGroupType*) deserialize from a stream
/// - int soap_write_gml__OperationParameterGroupType(soap, gml__OperationParameterGroupType*) serialize to a stream
class gml__OperationParameterGroupType : public gml__AbstractGeneralOperationParameterType
{ public:
/*  INHERITED FROM gml__DefinitionBaseType:
    END OF INHERITED FROM gml__DefinitionBaseType */
/*  INHERITED FROM gml__DefinitionType:
/// Element reference "http://www.opengis.net/gml/3.2":remarks.
    std::string*                         remarks                        0;	///< Optional element.
    END OF INHERITED FROM gml__DefinitionType */
/*  INHERITED FROM gml__IdentifiedObjectType:
    END OF INHERITED FROM gml__IdentifiedObjectType */
/*  INHERITED FROM gml__AbstractGeneralOperationParameterType:
/// @brief gml:minimumOccurs is the minimum number of times that values for this parameter group or parameter are required. If this attribute is omitted, the minimum number shall be one.
/// Element reference "http://www.opengis.net/gml/3.2":minimumOccurs.
    xsd__nonNegativeInteger*             minimumOccurs                  0;	///< Optional element.
    END OF INHERITED FROM gml__AbstractGeneralOperationParameterType */
/// @brief gml:maximumOccurs is the maximum number of times that values for this parameter group may be included. If this attribute is omitted, the maximum number shall be one.
/// Element reference "http://www.opengis.net/gml/3.2":maximumOccurs.
    xsd__positiveInteger*                maximumOccurs                  0;	///< Optional element.
/// @brief gml:parameter is an association to an operation parameter or parameter group.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="parameter" minOccurs="2" maxOccurs="unbounded"> with elements <includesParameter> <generalOperationParameter>
   $int                                  __sizeparameter                2;
    class __gml__union_OperationParameterGroupType
    {
   $int                                  __unionparameter               2;	///< Union _gml__union_OperationParameterGroupType selector: set to SOAP_UNION__gml__union_OperationParameterGroupType_<fieldname>
/// Union for substitutionGroup="parameter"
    union _gml__union_OperationParameterGroupType
    {
/// @brief gml:parameter is an association to an operation parameter or parameter group.
/// Vector of gml__AbstractGeneralOperationParameterPropertyType* element refs with length 2..unbounded
    std::vector<gml__AbstractGeneralOperationParameterPropertyType*> *parameter                      2;
/// Element includesParameter of type "http://www.opengis.net/gml/3.2":AbstractGeneralOperationParameterPropertyType.
    gml__AbstractGeneralOperationParameterPropertyType*  includesParameter              1;	///< Required element.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="generalOperationParameter"> with elements <usesParameter>
/// Element generalOperationParameter of type "http://www.opengis.net/gml/3.2":AbstractGeneralOperationParameterPropertyType.
    gml__AbstractGeneralOperationParameterPropertyType*  generalOperationParameter      1;	///< Required element.
/// Element usesParameter of type "http://www.opengis.net/gml/3.2":AbstractGeneralOperationParameterPropertyType.
    gml__AbstractGeneralOperationParameterPropertyType*  usesParameter                  1;	///< Required element.
//  END OF CHOICE OF SUBSTITUTIONS
    }                                    __union_OperationParameterGroupType;
;
    }                                   *__union_OperationParameterGroupType;
//  END OF CHOICE OF SUBSTITUTIONS
};

/// "http://www.opengis.net/gml/3.2":TemporalCSType is a complexType with complexContent extension of "http://www.opengis.net/gml/3.2":AbstractCoordinateSystemType.
/// class gml__TemporalCSType operations:
/// - soap_new_gml__TemporalCSType(soap*) allocate
/// - soap_new_gml__TemporalCSType(soap*, int num) allocate array
/// - soap_new_req_gml__TemporalCSType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__TemporalCSType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__TemporalCSType(soap*, gml__TemporalCSType*) deserialize from a stream
/// - int soap_write_gml__TemporalCSType(soap, gml__TemporalCSType*) serialize to a stream
class gml__TemporalCSType : public gml__AbstractCoordinateSystemType
{ public:
/*  INHERITED FROM gml__DefinitionBaseType:
    END OF INHERITED FROM gml__DefinitionBaseType */
/*  INHERITED FROM gml__DefinitionType:
/// Element reference "http://www.opengis.net/gml/3.2":remarks.
    std::string*                         remarks                        0;	///< Optional element.
    END OF INHERITED FROM gml__DefinitionType */
/*  INHERITED FROM gml__IdentifiedObjectType:
    END OF INHERITED FROM gml__IdentifiedObjectType */
/*  INHERITED FROM gml__AbstractCoordinateSystemType:
/// @brief The gml:axis property is an association role (ordered sequence) to the coordinate system axes included in this coordinate system. The coordinate values in a coordinate tuple shall be recorded in the order in which the coordinate system axes associations are recorded, whenever those coordinates use a coordinate reference system that uses this coordinate system. The gml:AggregationAttributeGroup should be used to specify that the axis objects are ordered.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="axis" maxOccurs="unbounded"> with elements <usesAxis>
   $int                                  __sizeaxis                     0;
    class __gml__union_TemporalCSType
    {
   $int                                  __unionaxis                    0;	///< Union _gml__union_TemporalCSType selector: set to SOAP_UNION__gml__union_TemporalCSType_<fieldname>
/// Union for substitutionGroup="axis"
    union _gml__union_TemporalCSType
    {
/// @brief The gml:axis property is an association role (ordered sequence) to the coordinate system axes included in this coordinate system. The coordinate values in a coordinate tuple shall be recorded in the order in which the coordinate system axes associations are recorded, whenever those coordinates use a coordinate reference system that uses this coordinate system. The gml:AggregationAttributeGroup should be used to specify that the axis objects are ordered.
/// Vector of gml__CoordinateSystemAxisPropertyType* element refs with length 1..unbounded
    std::vector<gml__CoordinateSystemAxisPropertyType*> *axis                           1;
/// Element usesAxis of type "http://www.opengis.net/gml/3.2":CoordinateSystemAxisPropertyType.
    gml__CoordinateSystemAxisPropertyType*  usesAxis                       1;	///< Required element.
    }                                    __union_TemporalCSType        ;
;
    }                                   *__union_TemporalCSType        ;
//  END OF CHOICE OF SUBSTITUTIONS
/// Attribute aggregationType of type "http://www.opengis.net/gml/3.2":AggregationType.
   @enum gml__AggregationType*           aggregationType                0;	///< Optional attribute.
    END OF INHERITED FROM gml__AbstractCoordinateSystemType */
};

/// "http://www.opengis.net/gml/3.2":ObliqueCartesianCSType is a complexType with complexContent extension of "http://www.opengis.net/gml/3.2":AbstractCoordinateSystemType.
/// class gml__ObliqueCartesianCSType operations:
/// - soap_new_gml__ObliqueCartesianCSType(soap*) allocate
/// - soap_new_gml__ObliqueCartesianCSType(soap*, int num) allocate array
/// - soap_new_req_gml__ObliqueCartesianCSType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__ObliqueCartesianCSType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__ObliqueCartesianCSType(soap*, gml__ObliqueCartesianCSType*) deserialize from a stream
/// - int soap_write_gml__ObliqueCartesianCSType(soap, gml__ObliqueCartesianCSType*) serialize to a stream
class gml__ObliqueCartesianCSType : public gml__AbstractCoordinateSystemType
{ public:
/*  INHERITED FROM gml__DefinitionBaseType:
    END OF INHERITED FROM gml__DefinitionBaseType */
/*  INHERITED FROM gml__DefinitionType:
/// Element reference "http://www.opengis.net/gml/3.2":remarks.
    std::string*                         remarks                        0;	///< Optional element.
    END OF INHERITED FROM gml__DefinitionType */
/*  INHERITED FROM gml__IdentifiedObjectType:
    END OF INHERITED FROM gml__IdentifiedObjectType */
/*  INHERITED FROM gml__AbstractCoordinateSystemType:
/// @brief The gml:axis property is an association role (ordered sequence) to the coordinate system axes included in this coordinate system. The coordinate values in a coordinate tuple shall be recorded in the order in which the coordinate system axes associations are recorded, whenever those coordinates use a coordinate reference system that uses this coordinate system. The gml:AggregationAttributeGroup should be used to specify that the axis objects are ordered.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="axis" maxOccurs="unbounded"> with elements <usesAxis>
   $int                                  __sizeaxis                     0;
    class __gml__union_ObliqueCartesianCSType
    {
   $int                                  __unionaxis                    0;	///< Union _gml__union_ObliqueCartesianCSType selector: set to SOAP_UNION__gml__union_ObliqueCartesianCSType_<fieldname>
/// Union for substitutionGroup="axis"
    union _gml__union_ObliqueCartesianCSType
    {
/// @brief The gml:axis property is an association role (ordered sequence) to the coordinate system axes included in this coordinate system. The coordinate values in a coordinate tuple shall be recorded in the order in which the coordinate system axes associations are recorded, whenever those coordinates use a coordinate reference system that uses this coordinate system. The gml:AggregationAttributeGroup should be used to specify that the axis objects are ordered.
/// Vector of gml__CoordinateSystemAxisPropertyType* element refs with length 1..unbounded
    std::vector<gml__CoordinateSystemAxisPropertyType*> *axis                           1;
/// Element usesAxis of type "http://www.opengis.net/gml/3.2":CoordinateSystemAxisPropertyType.
    gml__CoordinateSystemAxisPropertyType*  usesAxis                       1;	///< Required element.
    }                                    __union_ObliqueCartesianCSType;
;
    }                                   *__union_ObliqueCartesianCSType;
//  END OF CHOICE OF SUBSTITUTIONS
/// Attribute aggregationType of type "http://www.opengis.net/gml/3.2":AggregationType.
   @enum gml__AggregationType*           aggregationType                0;	///< Optional attribute.
    END OF INHERITED FROM gml__AbstractCoordinateSystemType */
};

/// "http://www.opengis.net/gml/3.2":GeographicCRSType is a complexType with complexContent extension of "http://www.opengis.net/gml/3.2":AbstractCRSType.
/// class gml__GeographicCRSType operations:
/// - soap_new_gml__GeographicCRSType(soap*) allocate
/// - soap_new_gml__GeographicCRSType(soap*, int num) allocate array
/// - soap_new_req_gml__GeographicCRSType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__GeographicCRSType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__GeographicCRSType(soap*, gml__GeographicCRSType*) deserialize from a stream
/// - int soap_write_gml__GeographicCRSType(soap, gml__GeographicCRSType*) serialize to a stream
class gml__GeographicCRSType : public gml__AbstractCRSType
{ public:
/*  INHERITED FROM gml__DefinitionBaseType:
    END OF INHERITED FROM gml__DefinitionBaseType */
/*  INHERITED FROM gml__DefinitionType:
/// Element reference "http://www.opengis.net/gml/3.2":remarks.
    std::string*                         remarks                        0;	///< Optional element.
    END OF INHERITED FROM gml__DefinitionType */
/*  INHERITED FROM gml__IdentifiedObjectType:
    END OF INHERITED FROM gml__IdentifiedObjectType */
/*  INHERITED FROM gml__AbstractCRSType:
/// @brief The gml:domainOfValidity property implements an association role to an EX_Extent object as encoded in ISO/TS 19139, either referencing or containing the definition of that extent.
/// Vector of _gml__domainOfValidity* element refs with length 0..unbounded
    std::vector<_gml__domainOfValidity*> domainOfValidity               0;
/// @brief The gml:scope property provides a description of the usage, or limitations of usage, for which this CRS-related object is valid. If unknown, enter "not known".
/// Vector of std::string element refs with length 1..unbounded
    std::vector<std::string            > scope                          1;
    END OF INHERITED FROM gml__AbstractCRSType */
/// Element reference "http://www.opengis.net/gml/3.2":usesEllipsoidalCS.
    gml__EllipsoidalCSPropertyType*      usesEllipsoidalCS              1;	///< Required element.
/// Element reference "http://www.opengis.net/gml/3.2":usesGeodeticDatum.
    gml__GeodeticDatumPropertyType*      usesGeodeticDatum              1;	///< Required element.
};

/// "http://www.opengis.net/gml/3.2":GeocentricCRSType is a complexType with complexContent extension of "http://www.opengis.net/gml/3.2":AbstractCRSType.
/// class gml__GeocentricCRSType operations:
/// - soap_new_gml__GeocentricCRSType(soap*) allocate
/// - soap_new_gml__GeocentricCRSType(soap*, int num) allocate array
/// - soap_new_req_gml__GeocentricCRSType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__GeocentricCRSType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__GeocentricCRSType(soap*, gml__GeocentricCRSType*) deserialize from a stream
/// - int soap_write_gml__GeocentricCRSType(soap, gml__GeocentricCRSType*) serialize to a stream
class gml__GeocentricCRSType : public gml__AbstractCRSType
{ public:
/*  INHERITED FROM gml__DefinitionBaseType:
    END OF INHERITED FROM gml__DefinitionBaseType */
/*  INHERITED FROM gml__DefinitionType:
/// Element reference "http://www.opengis.net/gml/3.2":remarks.
    std::string*                         remarks                        0;	///< Optional element.
    END OF INHERITED FROM gml__DefinitionType */
/*  INHERITED FROM gml__IdentifiedObjectType:
    END OF INHERITED FROM gml__IdentifiedObjectType */
/*  INHERITED FROM gml__AbstractCRSType:
/// @brief The gml:domainOfValidity property implements an association role to an EX_Extent object as encoded in ISO/TS 19139, either referencing or containing the definition of that extent.
/// Vector of _gml__domainOfValidity* element refs with length 0..unbounded
    std::vector<_gml__domainOfValidity*> domainOfValidity               0;
/// @brief The gml:scope property provides a description of the usage, or limitations of usage, for which this CRS-related object is valid. If unknown, enter "not known".
/// Vector of std::string element refs with length 1..unbounded
    std::vector<std::string            > scope                          1;
    END OF INHERITED FROM gml__AbstractCRSType */
/// CHOICE <xs:choice>
   $int                                  __union_GeocentricCRSType     ;	///< Union _gml__union_GeocentricCRSType selector: set to SOAP_UNION__gml__union_GeocentricCRSType_<fieldname>
    union _gml__union_GeocentricCRSType
    {
/// Element reference "http://www.opengis.net/gml/3.2":usesCartesianCS.
    gml__CartesianCSPropertyType*        usesCartesianCS                1;	///< Required element.
/// Element reference "http://www.opengis.net/gml/3.2":usesSphericalCS.
    gml__SphericalCSPropertyType*        usesSphericalCS                1;	///< Required element.
    }                                    union_GeocentricCRSType       ;
//  END OF CHOICE
/// Element reference "http://www.opengis.net/gml/3.2":usesGeodeticDatum.
    gml__GeodeticDatumPropertyType*      usesGeodeticDatum              1;	///< Required element.
};

/// "http://www.opengis.net/gml/3.2":ProjectedCRSType is a complexType with complexContent extension of "http://www.opengis.net/gml/3.2":AbstractGeneralDerivedCRSType.
/// class gml__ProjectedCRSType operations:
/// - soap_new_gml__ProjectedCRSType(soap*) allocate
/// - soap_new_gml__ProjectedCRSType(soap*, int num) allocate array
/// - soap_new_req_gml__ProjectedCRSType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__ProjectedCRSType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__ProjectedCRSType(soap*, gml__ProjectedCRSType*) deserialize from a stream
/// - int soap_write_gml__ProjectedCRSType(soap, gml__ProjectedCRSType*) serialize to a stream
class gml__ProjectedCRSType : public gml__AbstractGeneralDerivedCRSType
{ public:
/*  INHERITED FROM gml__DefinitionBaseType:
    END OF INHERITED FROM gml__DefinitionBaseType */
/*  INHERITED FROM gml__DefinitionType:
/// Element reference "http://www.opengis.net/gml/3.2":remarks.
    std::string*                         remarks                        0;	///< Optional element.
    END OF INHERITED FROM gml__DefinitionType */
/*  INHERITED FROM gml__IdentifiedObjectType:
    END OF INHERITED FROM gml__IdentifiedObjectType */
/*  INHERITED FROM gml__AbstractCRSType:
/// @brief The gml:domainOfValidity property implements an association role to an EX_Extent object as encoded in ISO/TS 19139, either referencing or containing the definition of that extent.
/// Vector of _gml__domainOfValidity* element refs with length 0..unbounded
    std::vector<_gml__domainOfValidity*> domainOfValidity               0;
/// @brief The gml:scope property provides a description of the usage, or limitations of usage, for which this CRS-related object is valid. If unknown, enter "not known".
/// Vector of std::string element refs with length 1..unbounded
    std::vector<std::string            > scope                          1;
    END OF INHERITED FROM gml__AbstractCRSType */
/*  INHERITED FROM gml__AbstractGeneralDerivedCRSType:
/// @brief gml:conversion is an association role to the coordinate conversion used to define the derived CRS.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="conversion"> with elements <definedByConversion>
   $int                                  __unionconversion              0;	///< Union _gml__union_ProjectedCRSType selector: set to SOAP_UNION__gml__union_ProjectedCRSType_<fieldname>
/// Union for substitutionGroup="conversion"
    union _gml__union_ProjectedCRSType
    {
/// @brief gml:conversion is an association role to the coordinate conversion used to define the derived CRS.
/// Element reference "http://www.opengis.net/gml/3.2":conversion.
    gml__GeneralConversionPropertyType*  conversion                     1;	///< Required element.
/// Element definedByConversion of type "http://www.opengis.net/gml/3.2":GeneralConversionPropertyType.
    gml__GeneralConversionPropertyType*  definedByConversion            1;	///< Required element.
    }                                    __union_ProjectedCRSType      ;
//  END OF CHOICE OF SUBSTITUTIONS
    END OF INHERITED FROM gml__AbstractGeneralDerivedCRSType */
/// CHOICE <xs:choice>
   $int                                  __union_ProjectedCRSType_     ;	///< Union _gml__union_ProjectedCRSType_ selector: set to SOAP_UNION__gml__union_ProjectedCRSType__<fieldname>
    union _gml__union_ProjectedCRSType_
    {
/// @brief gml:baseGeodeticCRS is an association role to the geodetic coordinate reference system used by this projected CRS.
/// Element reference "http://www.opengis.net/gml/3.2":baseGeodeticCRS.
    gml__GeodeticCRSPropertyType*        baseGeodeticCRS                1;	///< Required element.
/// Element reference "http://www.opengis.net/gml/3.2":baseGeographicCRS.
    gml__GeographicCRSPropertyType*      baseGeographicCRS              1;	///< Required element.
    }                                    union_ProjectedCRSType_       ;
//  END OF CHOICE
/// @brief gml:cartesianCS is an association role to the Cartesian coordinate system used by this CRS.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="cartesianCS"> with elements <usesCartesianCS>
   $int                                  __unioncartesianCS             0;	///< Union _gml__union_ProjectedCRSType__ selector: set to SOAP_UNION__gml__union_ProjectedCRSType___<fieldname>
/// Union for substitutionGroup="cartesianCS"
    union _gml__union_ProjectedCRSType__
    {
/// @brief gml:cartesianCS is an association role to the Cartesian coordinate system used by this CRS.
/// Element reference "http://www.opengis.net/gml/3.2":cartesianCS.
    gml__CartesianCSPropertyType*        cartesianCS                    1;	///< Required element.
/// Element usesCartesianCS of type "http://www.opengis.net/gml/3.2":CartesianCSPropertyType.
    gml__CartesianCSPropertyType*        usesCartesianCS                1;	///< Required element.
    }                                    __union_ProjectedCRSType__    ;
//  END OF CHOICE OF SUBSTITUTIONS
};

/// "http://www.opengis.net/gml/3.2":DerivedCRSType is a complexType with complexContent extension of "http://www.opengis.net/gml/3.2":AbstractGeneralDerivedCRSType.
/// class gml__DerivedCRSType operations:
/// - soap_new_gml__DerivedCRSType(soap*) allocate
/// - soap_new_gml__DerivedCRSType(soap*, int num) allocate array
/// - soap_new_req_gml__DerivedCRSType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__DerivedCRSType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__DerivedCRSType(soap*, gml__DerivedCRSType*) deserialize from a stream
/// - int soap_write_gml__DerivedCRSType(soap, gml__DerivedCRSType*) serialize to a stream
class gml__DerivedCRSType : public gml__AbstractGeneralDerivedCRSType
{ public:
/*  INHERITED FROM gml__DefinitionBaseType:
    END OF INHERITED FROM gml__DefinitionBaseType */
/*  INHERITED FROM gml__DefinitionType:
/// Element reference "http://www.opengis.net/gml/3.2":remarks.
    std::string*                         remarks                        0;	///< Optional element.
    END OF INHERITED FROM gml__DefinitionType */
/*  INHERITED FROM gml__IdentifiedObjectType:
    END OF INHERITED FROM gml__IdentifiedObjectType */
/*  INHERITED FROM gml__AbstractCRSType:
/// @brief The gml:domainOfValidity property implements an association role to an EX_Extent object as encoded in ISO/TS 19139, either referencing or containing the definition of that extent.
/// Vector of _gml__domainOfValidity* element refs with length 0..unbounded
    std::vector<_gml__domainOfValidity*> domainOfValidity               0;
/// @brief The gml:scope property provides a description of the usage, or limitations of usage, for which this CRS-related object is valid. If unknown, enter "not known".
/// Vector of std::string element refs with length 1..unbounded
    std::vector<std::string            > scope                          1;
    END OF INHERITED FROM gml__AbstractCRSType */
/*  INHERITED FROM gml__AbstractGeneralDerivedCRSType:
/// @brief gml:conversion is an association role to the coordinate conversion used to define the derived CRS.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="conversion"> with elements <definedByConversion>
   $int                                  __unionconversion              0;	///< Union _gml__union_DerivedCRSType selector: set to SOAP_UNION__gml__union_DerivedCRSType_<fieldname>
/// Union for substitutionGroup="conversion"
    union _gml__union_DerivedCRSType
    {
/// @brief gml:conversion is an association role to the coordinate conversion used to define the derived CRS.
/// Element reference "http://www.opengis.net/gml/3.2":conversion.
    gml__GeneralConversionPropertyType*  conversion                     1;	///< Required element.
/// Element definedByConversion of type "http://www.opengis.net/gml/3.2":GeneralConversionPropertyType.
    gml__GeneralConversionPropertyType*  definedByConversion            1;	///< Required element.
    }                                    __union_DerivedCRSType        ;
//  END OF CHOICE OF SUBSTITUTIONS
    END OF INHERITED FROM gml__AbstractGeneralDerivedCRSType */
/// @brief gml:baseCRS is an association role to the coordinate reference system used by this derived CRS.
/// Element reference "http://www.opengis.net/gml/3.2":baseCRS.
    gml__SingleCRSPropertyType*          baseCRS                        1;	///< Required element.
/// @brief The gml:derivedCRSType property describes the type of a derived coordinate reference system. The required codeSpace attribute shall reference a source of information specifying the values and meanings of all the allowed string values for this property.
/// Element reference "http://www.opengis.net/gml/3.2":derivedCRSType.
    gml__CodeWithAuthorityType*          derivedCRSType                 1;	///< Required element.
/// @brief An association role to the coordinate system used by this CRS.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="coordinateSystem"> with elements <usesCS>
   $int                                  __unioncoordinateSystem        0;	///< Union _gml__union_DerivedCRSType_ selector: set to SOAP_UNION__gml__union_DerivedCRSType__<fieldname>
/// Union for substitutionGroup="coordinateSystem"
    union _gml__union_DerivedCRSType_
    {
/// @brief An association role to the coordinate system used by this CRS.
/// Element reference "http://www.opengis.net/gml/3.2":coordinateSystem.
    gml__CoordinateSystemPropertyType*   coordinateSystem               1;	///< Required element.
/// Element usesCS of type "http://www.opengis.net/gml/3.2":CoordinateSystemPropertyType.
    gml__CoordinateSystemPropertyType*   usesCS                         1;	///< Required element.
    }                                    __union_DerivedCRSType_       ;
//  END OF CHOICE OF SUBSTITUTIONS
};

/// "http://www.opengis.net/gml/3.2":TemporalDatumType is a complexType with complexContent extension of "http://www.opengis.net/gml/3.2":TemporalDatumBaseType.
/// class gml__TemporalDatumType operations:
/// - soap_new_gml__TemporalDatumType(soap*) allocate
/// - soap_new_gml__TemporalDatumType(soap*, int num) allocate array
/// - soap_new_req_gml__TemporalDatumType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__TemporalDatumType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__TemporalDatumType(soap*, gml__TemporalDatumType*) deserialize from a stream
/// - int soap_write_gml__TemporalDatumType(soap, gml__TemporalDatumType*) serialize to a stream
class gml__TemporalDatumType : public gml__TemporalDatumBaseType
{ public:
/*  INHERITED FROM gml__TemporalDatumBaseType:
    END OF INHERITED FROM gml__TemporalDatumBaseType */
/// @brief gml:origin is the date and time origin of this temporal datum.
/// Element reference "http://www.opengis.net/gml/3.2":origin.
    time_t                               origin                         1;	///< Required element.
};

/// "http://www.opengis.net/gml/3.2":ConversionType is a complexType with complexContent extension of "http://www.opengis.net/gml/3.2":AbstractGeneralConversionType.
/// class gml__ConversionType operations:
/// - soap_new_gml__ConversionType(soap*) allocate
/// - soap_new_gml__ConversionType(soap*, int num) allocate array
/// - soap_new_req_gml__ConversionType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__ConversionType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__ConversionType(soap*, gml__ConversionType*) deserialize from a stream
/// - int soap_write_gml__ConversionType(soap, gml__ConversionType*) serialize to a stream
class gml__ConversionType : public gml__AbstractGeneralConversionType
{ public:
/*  INHERITED FROM gml__AbstractGeneralConversionType:
    END OF INHERITED FROM gml__AbstractGeneralConversionType */
/// @brief gml:method is an association role to the operation method used by a coordinate operation.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="method"> with elements <usesMethod>
   $int                                  __unionmethod                  0;	///< Union _gml__union_ConversionType selector: set to SOAP_UNION__gml__union_ConversionType_<fieldname>
/// Union for substitutionGroup="method"
    union _gml__union_ConversionType
    {
/// @brief gml:method is an association role to the operation method used by a coordinate operation.
/// Element reference "http://www.opengis.net/gml/3.2":method.
    gml__OperationMethodPropertyType*    method                         1;	///< Required element.
/// Element usesMethod of type "http://www.opengis.net/gml/3.2":OperationMethodPropertyType.
    gml__OperationMethodPropertyType*    usesMethod                     1;	///< Required element.
    }                                    __union_ConversionType        ;
//  END OF CHOICE OF SUBSTITUTIONS
/// @brief gml:parameterValue is a composition association to a parameter value or group of parameter values used by a coordinate operation.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="parameterValue" minOccurs="0" maxOccurs="unbounded"> with elements <usesValue> <includesValue>
   $int                                  __sizeparameterValue           0;
    class __gml__union_ConversionType_
    {
   $int                                  __unionparameterValue          0;	///< Union _gml__union_ConversionType_ selector: set to SOAP_UNION__gml__union_ConversionType__<fieldname> or 0
/// Union for substitutionGroup="parameterValue"
    union _gml__union_ConversionType_
    {
/// @brief gml:parameterValue is a composition association to a parameter value or group of parameter values used by a coordinate operation.
/// Vector of gml__AbstractGeneralParameterValuePropertyType* element refs with length 0..unbounded
    std::vector<gml__AbstractGeneralParameterValuePropertyType*> *parameterValue                 0;
/// Element usesValue of type "http://www.opengis.net/gml/3.2":AbstractGeneralParameterValuePropertyType.
    gml__AbstractGeneralParameterValuePropertyType*  usesValue                      1;	///< Required element.
/// Element includesValue of type "http://www.opengis.net/gml/3.2":AbstractGeneralParameterValuePropertyType.
    gml__AbstractGeneralParameterValuePropertyType*  includesValue                  1;	///< Required element.
    }                                    __union_ConversionType_       ;
;
    }                                   *__union_ConversionType_       ;
//  END OF CHOICE OF SUBSTITUTIONS
};

/// "http://www.opengis.net/gml/3.2":TransformationType is a complexType with complexContent extension of "http://www.opengis.net/gml/3.2":AbstractGeneralTransformationType.
/// class gml__TransformationType operations:
/// - soap_new_gml__TransformationType(soap*) allocate
/// - soap_new_gml__TransformationType(soap*, int num) allocate array
/// - soap_new_req_gml__TransformationType(soap*, ...) allocate, set required members
/// - soap_new_set_gml__TransformationType(soap*, ...) allocate, set all public members
/// - int soap_read_gml__TransformationType(soap*, gml__TransformationType*) deserialize from a stream
/// - int soap_write_gml__TransformationType(soap, gml__TransformationType*) serialize to a stream
class gml__TransformationType : public gml__AbstractGeneralTransformationType
{ public:
/*  INHERITED FROM gml__AbstractGeneralTransformationType:
    END OF INHERITED FROM gml__AbstractGeneralTransformationType */
/// @brief gml:method is an association role to the operation method used by a coordinate operation.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="method"> with elements <usesMethod>
   $int                                  __unionmethod                  0;	///< Union _gml__union_TransformationType selector: set to SOAP_UNION__gml__union_TransformationType_<fieldname>
/// Union for substitutionGroup="method"
    union _gml__union_TransformationType
    {
/// @brief gml:method is an association role to the operation method used by a coordinate operation.
/// Element reference "http://www.opengis.net/gml/3.2":method.
    gml__OperationMethodPropertyType*    method                         1;	///< Required element.
/// Element usesMethod of type "http://www.opengis.net/gml/3.2":OperationMethodPropertyType.
    gml__OperationMethodPropertyType*    usesMethod                     1;	///< Required element.
    }                                    __union_TransformationType    ;
//  END OF CHOICE OF SUBSTITUTIONS
/// @brief gml:parameterValue is a composition association to a parameter value or group of parameter values used by a coordinate operation.
/// CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="parameterValue" minOccurs="0" maxOccurs="unbounded"> with elements <usesValue> <includesValue>
   $int                                  __sizeparameterValue           0;
    class __gml__union_TransformationType_
    {
   $int                                  __unionparameterValue          0;	///< Union _gml__union_TransformationType_ selector: set to SOAP_UNION__gml__union_TransformationType__<fieldname> or 0
/// Union for substitutionGroup="parameterValue"
    union _gml__union_TransformationType_
    {
/// @brief gml:parameterValue is a composition association to a parameter value or group of parameter values used by a coordinate operation.
/// Vector of gml__AbstractGeneralParameterValuePropertyType* element refs with length 0..unbounded
    std::vector<gml__AbstractGeneralParameterValuePropertyType*> *parameterValue                 0;
/// Element usesValue of type "http://www.opengis.net/gml/3.2":AbstractGeneralParameterValuePropertyType.
    gml__AbstractGeneralParameterValuePropertyType*  usesValue                      1;	///< Required element.
/// Element includesValue of type "http://www.opengis.net/gml/3.2":AbstractGeneralParameterValuePropertyType.
    gml__AbstractGeneralParameterValuePropertyType*  includesValue                  1;	///< Required element.
    }                                    __union_TransformationType_   ;
;
    }                                   *__union_TransformationType_   ;
//  END OF CHOICE OF SUBSTITUTIONS
};

/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://inspire.ec.europa.eu/schemas/plu/3.0                              *
 *                                                                            *
\******************************************************************************/


/// Top-level root element "http://inspire.ec.europa.eu/schemas/plu/3.0":ZoningElement of type "http://inspire.ec.europa.eu/schemas/plu/3.0":ZoningElementType.
/// @brief -- Name -- zoning element -- Definition -- A spatial object which is homogeneous regarding the permitted uses of land based on zoning which separate one set of land uses from another. -- Description -- Zoning elements refer to the regulation of the kinds of activities which will be acceptable on particular lots (such as open space, residential, agricultural, commercial or industrial). The intensity of use at which those activities can be performed (from low-density housing such as single family homes to high-density such as high-rise apartment buildings), the height of buildings, the amount of space that structures may occupy, the proportions of the types of space on a lot, such as how much landscaped space, impervious surface, traffic lanes, and parking may be provided.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://inspire.ec.europa.eu/schemas/plu/3.0":OfficialDocumentation of type "http://inspire.ec.europa.eu/schemas/plu/3.0":OfficialDocumentationType.
/// @brief -- Name -- official documentation -- Definition -- The official documentation that composes the spatial plan; it may be composed of, the applicable legislation, the regulations, cartographic elements, descriptive elements that may be associated with the complete spatial plan, a zoning element or a supplementary regulation . In some Member States the actual textual regulation will be part of the data set (and can be put in the regulationText attribute), in other Member States the text will not be part of the data set and will be referenced via a reference to a document or a legal act. At least one of the three voidable values shall be provided. -- Description -- NOTE: The LegislationCitation is the value type of the attribute regulation reference. An example of a regulation reference would be: http://www2.vlaanderen.be /ruimtelijk/grup/00350/00362_00001/data/ 212_00362_00001_d_0BVR.pdf.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://inspire.ec.europa.eu/schemas/plu/3.0":DimensioningIndicationMeasureValue of type "http://inspire.ec.europa.eu/schemas/plu/3.0":DimensioningIndicationMeasureValueType.
/// @brief -- Name -- dimension indication measure value -- Definition -- Dimensioning indication whose value is a measure.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://inspire.ec.europa.eu/schemas/plu/3.0":DimensioningIndicationIntegerValue of type "http://inspire.ec.europa.eu/schemas/plu/3.0":DimensioningIndicationIntegerValueType.
/// @brief -- Name -- dimension indication integer value -- Definition -- Dimensioning indication whose value is of type integer.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://inspire.ec.europa.eu/schemas/plu/3.0":DimensioningIndicationCharacterValue of type "http://inspire.ec.europa.eu/schemas/plu/3.0":DimensioningIndicationCharacterValueType.
/// @brief -- Name -- dimension indication character value -- Definition -- Dimensioning indication whose value is of type CharacterString.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://inspire.ec.europa.eu/schemas/plu/3.0":SupplementaryRegulation of type "http://inspire.ec.europa.eu/schemas/plu/3.0":SupplementaryRegulationType.
/// @brief -- Name -- supplementary regulation -- Definition -- A spatial object (point, line or polygon) of a spatial plan that provides supplementary information and/or limitation of the use of land/water necessary for spatial planning reasons or to formalise external rules defined in legal text. -- Description -- NOTE the supplementary regulations affects all land use that overlap with the geometry EXAMPLE an air field generates restriction in its surroundings regarding aircraft landing, radar and telecommunication devices. It is the buffer around these artefacts that generates the supplementary regulation on the Land Use.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://inspire.ec.europa.eu/schemas/plu/3.0":DimensioningIndicationValue of type "http://inspire.ec.europa.eu/schemas/plu/3.0":DimensioningIndicationValueType.
/// @brief -- Name -- Dimension Indication -- Definition -- Specifications about the dimensioning of the urban developments.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://inspire.ec.europa.eu/schemas/plu/3.0":SpatialPlan of type "http://inspire.ec.europa.eu/schemas/plu/3.0":SpatialPlanType.
/// @brief -- Name -- spatial plan -- Definition -- A set of documents that indicates a strategic direction for the development of a given geographic area, states the policies, priorities, programmes and land allocations that will implement the strategic direction and influences the distribution of people and activities in spaces of various scales. Spatial plans may be developed for urban planning, regional planning, environmental planning, landscape planning, national spatial plans, or spatial planning at the Union level.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://inspire.ec.europa.eu/schemas/plu/3.0":DimensioningIndicationRealValue of type "http://inspire.ec.europa.eu/schemas/plu/3.0":DimensioningIndicationRealValueType.
/// @brief -- Name -- dimension indication real value -- Definition -- Dimensioning indication whose value is a floating point number.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://inspire.ec.europa.eu/schemas/plu/3.0":OrdinanceValue of type "http://inspire.ec.europa.eu/schemas/plu/3.0":OrdinanceValueType.
/// @brief -- Definition -- Reference to administrative ordinance. Ordinance is a regulation/rule that is adopted by an authority that is legally mandated to take such ordinance.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://inspire.ec.europa.eu/schemas/plu/3.0":BackgroundMapValue of type "http://inspire.ec.europa.eu/schemas/plu/3.0":BackgroundMapValueType.
/// @brief -- Definition -- Information regarding the map that has been used as a background in the definition of a spatial plan, a zoning element or a supplementary regulation.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://inspire.ec.europa.eu/schemas/plu/3.0                              *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://inspire.ec.europa.eu/schemas/base/3.3                             *
 *                                                                            *
\******************************************************************************/


/// Top-level root element "http://inspire.ec.europa.eu/schemas/base/3.3":SpatialDataSet of type "http://inspire.ec.europa.eu/schemas/base/3.3":SpatialDataSetType.
/// @brief -- Definition -- Identifiable collection of spatial data. -- Description -- NOTE The type SpatialDataSet is offered as a pre-defined type for spatial data sets. The scope of this type is packaging pre-defined data sets for the non-direct access download service. It may be reused in thematic application schemas, but if it does not fit an application-schema-specific data set object should be modelled. This type may have the same name and definition like this type, but may have a different set of properties. This type specifies three properties: an external object identifier, a container for metadata (may be void), and an association to zero or more spatial objects.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://inspire.ec.europa.eu/schemas/base/3.3":Identifier of type "http://inspire.ec.europa.eu/schemas/base/3.3":IdentifierType.
/// @brief -- Definition -- External unique object identifier published by the responsible body, which may be used by external applications to reference the spatial object. -- Description -- NOTE1 External object identifiers are distinct from thematic object identifiers. NOTE 2 The voidable version identifier attribute is not part of the unique identifier of a spatial object and may be used to distinguish two versions of the same spatial object. NOTE 3 The unique identifier will not change during the life-time of a spatial object.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://inspire.ec.europa.eu/schemas/base/3.3                             *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://inspire.ec.europa.eu/schemas/base2/1.0                            *
 *                                                                            *
\******************************************************************************/


/// Top-level root element "http://inspire.ec.europa.eu/schemas/base2/1.0":OfficialJournalInformation of type "http://inspire.ec.europa.eu/schemas/base2/1.0":OfficialJournalInformationType.
/// @brief -- Name -- official journal information -- Definition -- Full citation of the location of the legislative instrument within the official journal.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://inspire.ec.europa.eu/schemas/base2/1.0":LegislationCitation of type "http://inspire.ec.europa.eu/schemas/base2/1.0":LegislationCitationType.
/// @brief -- Name -- legislation citation -- Definition -- Citation for the purposes of unambiguously referencing a legal act or a specific part of a legal act.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://inspire.ec.europa.eu/schemas/base2/1.0":Contact of type "http://inspire.ec.europa.eu/schemas/base2/1.0":ContactType.
/// @brief -- Name -- contact -- Definition -- Communication channels by which it is possible to gain access to someone or something. -- Description --
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://inspire.ec.europa.eu/schemas/base2/1.0":RelatedParty of type "http://inspire.ec.europa.eu/schemas/base2/1.0":RelatedPartyType.
/// @brief -- Name -- related party -- Definition -- An organisation or a person with a role related to a resource. -- Description -- NOTE 1 A party, typically an individual person, acting as a general point of contact for a resource can be specified without providing any particular role.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://inspire.ec.europa.eu/schemas/base2/1.0":DocumentCitation of type "http://inspire.ec.europa.eu/schemas/base2/1.0":DocumentCitationType.
/// @brief -- Name -- document citation -- Definition -- Citation for the purposes of unambiguously referencing a document.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://inspire.ec.europa.eu/schemas/base2/1.0":ThematicIdentifier of type "http://inspire.ec.europa.eu/schemas/base2/1.0":ThematicIdentifierType.
/// @brief -- Name -- thematic identifier -- Definition -- Thematic identifier to uniquely identify the spatial object. -- Description -- Some spatial objects may be assigned multiple unique identifiers. These may have been established to meet data exchange requirements of different reporting obligations at International, European or national levels and/or internal data maintenance requirements.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://inspire.ec.europa.eu/schemas/base2/1.0                            *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://inspire.ec.europa.eu/schemas/lunom/3.0                            *
 *                                                                            *
\******************************************************************************/


/// Top-level root element "http://inspire.ec.europa.eu/schemas/lunom/3.0":HILUCSPresence of type "http://inspire.ec.europa.eu/schemas/lunom/3.0":HILUCSPresenceType.
/// @brief -- Name -- HILUCS presence -- Definition -- Presence of one or several HILUCS values in an area, indicated either as the percentage covered for each value or as the values listed in their order of importance. -- Description -- The HILUCS presence data type enables the provision of information on land uses inside one land use object in order to collect more than one land use existence perfectly identifiable by importance order or percentages. NOTE 1: The order of land use value presence without percentages enable providing an order of dominance/importance of each land use present in the land use object NOTE 2: The sum of the percentages can be below 100%, or above. The order is provided according to the respective importance when the percentages are not known.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://inspire.ec.europa.eu/schemas/lunom/3.0":SpecificPercentage of type "http://inspire.ec.europa.eu/schemas/lunom/3.0":SpecificPercentageType.
/// @brief -- Name -- specific percentage -- Definition -- Percentage of land use object that is covered by this specific presence.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://inspire.ec.europa.eu/schemas/lunom/3.0":SpecificPresence of type "http://inspire.ec.europa.eu/schemas/lunom/3.0":SpecificPresenceType.
/// @brief -- Name -- specific presence -- Definition -- Presence of one or several land use classification values in an area according to the code list provided by the data provider, indicated either as the percentage covered for each value or as the values listed in their order of importance. -- Description -- NOTE 1: The order of land use value presence without percentages enable providing an order of dominance/importance of each land use present in the land use object NOTE 2: The sum of the percentages can be below 100%, or above. The order is provided according to the respective importance when the percentages are not known.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://inspire.ec.europa.eu/schemas/lunom/3.0":HILUCSPercentage of type "http://inspire.ec.europa.eu/schemas/lunom/3.0":HILUCSPercentageType.
/// @brief -- Name -- HILUCS percentage -- Definition -- Percentage of land use object that is covered by this HILUCS presence. -- Description -- NOTE1:The percentage is according to the socio-economic or functional importance of the use. NOTE2:examples are provided in the narrative description part of the data specification.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://inspire.ec.europa.eu/schemas/lunom/3.0                            *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://www.interactive-instruments.de/ShapeChange/AppInfo                *
 *                                                                            *
\******************************************************************************/


/// Top-level root element "http://www.interactive-instruments.de/ShapeChange/AppInfo":profiles of type xs:string.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.interactive-instruments.de/ShapeChange/AppInfo":name of type xs:string.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.interactive-instruments.de/ShapeChange/AppInfo":code of type xs:string.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://www.interactive-instruments.de/ShapeChange/AppInfo                *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://www.opengis.net/gml/3.2                                           *
 *                                                                            *
\******************************************************************************/


/// Top-level root element "http://www.opengis.net/gml/3.2":dataSource of type "http://www.opengis.net/gml/3.2":StringOrRefType.
/// @brief Evidence is represented by a simple gml:dataSource or gml:dataSourceReference property that indicates the source of the temporal data. The remote link attributes of the gml:dataSource element have been deprecated along with its current type.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":dataSourceReference of type "http://www.opengis.net/gml/3.2":ReferenceType.
/// @brief Evidence is represented by a simple gml:dataSource or gml:dataSourceReference property that indicates the source of the temporal data.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":DynamicFeature of type "http://www.opengis.net/gml/3.2":DynamicFeatureType.
/// @brief States are captured by time-stamped instances of a feature. The content model extends the standard gml:AbstractFeatureType with the gml:dynamicProperties model group. Each time-stamped instance represents a 'snapshot' of a feature. The dynamic feature classes will normally be extended to suit particular applications. A dynamic feature bears either a time stamp or a history.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":DynamicFeatureCollection of type "http://www.opengis.net/gml/3.2":DynamicFeatureCollectionType.
/// @brief A gml:DynamicFeatureCollection is a feature collection that has a gml:validTime property (i.e. is a snapshot of the feature collection) or which has a gml:history property that contains one or more gml:AbstractTimeSlices each of which contain values of the time varying properties of the feature collection. Note that the gml:DynamicFeatureCollection may be one of the following: 1. A feature collection which consists of static feature members (members do not change in time) but which has properties of the collection object as a whole that do change in time . 2. A feature collection which consists of dynamic feature members (the members are gml:DynamicFeatures) but which also has properties of the collection as a whole that vary in time.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":dynamicMembers of type "http://www.opengis.net/gml/3.2":DynamicFeatureMemberType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":history of type "http://www.opengis.net/gml/3.2":HistoryPropertyType.
/// @brief A generic sequence of events constitute a gml:history of an object. The gml:history element contains a set of elements in the substitution group headed by the abstract element gml:AbstractTimeSlice, representing the time-varying properties of interest. The history property of a dynamic feature associates a feature instance with a sequence of time slices (i.e. change events) that encapsulate the evolution of the feature.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":Node of type "http://www.opengis.net/gml/3.2":NodeType.
/// @brief gml:Node represents the 0-dimensional primitive. The optional coboundary of a node (gml:directedEdge) is a sequence of directed edges which are incident on this node. Edges emanating from this node appear in the node coboundary with a negative orientation. If provided, the aggregationType attribute shall have the value "sequence". A node may optionally be realised by a 0-dimensional geometric primitive (gml:pointProperty).
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":directedNode of type "http://www.opengis.net/gml/3.2":DirectedNodePropertyType.
/// @brief A gml:directedNode property element describes the boundary of topology edges and is used in the support of topological point features via the gml:TopoPoint expression, see below. The orientation attribute of type gml:SignType expresses the sense in which the included node is used: start ("-") or end ("+") node.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":Edge of type "http://www.opengis.net/gml/3.2":EdgeType.
/// @brief gml:Edge represents the 1-dimensional primitive. The topological boundary of an Edge (gml:directedNode) consists of a negatively directed start Node and a positively directed end Node. The optional coboundary of an edge (gml:directedFace) is a circular sequence of directed faces which are incident on this edge in document order. In the 2D case, the orientation of the face on the left of the edge is "+"; the orientation of the face on the right on its right is "-". If provided, the aggregationType attribute shall have the value "sequence". An edge may optionally be realised by a 1-dimensional geometric primitive (gml:curveProperty).
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":directedEdge of type "http://www.opengis.net/gml/3.2":DirectedEdgePropertyType.
/// @brief A gml:directedEdge property element describes the boundary of topology faces, the coBoundary of topology nodes and is used in the support of topological line features via the gml:TopoCurve expression, see below. The orientation attribute of type gml:SignType expresses the sense in which the included edge is used, i.e. forward or reverse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":Face of type "http://www.opengis.net/gml/3.2":FaceType.
/// @brief gml:Face represents the 2-dimensional topology primitive. The topological boundary of a face (gml:directedEdge) consists of a sequence of directed edges. If provided, the aggregationType attribute shall have the value "sequence". The optional coboundary of a face (gml:directedTopoSolid) is a pair of directed solids which are bounded by this face. A positively directed solid corresponds to a solid which lies in the direction of the negatively directed normal to the face in any geometric realisation. A face may optionally be realised by a 2-dimensional geometric primitive (gml:surfaceProperty).
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":directedFace of type "http://www.opengis.net/gml/3.2":DirectedFacePropertyType.
/// @brief The gml:directedFace property element describes the boundary of topology solids, in the coBoundary of topology edges and is used in the support of surface features via the gml:TopoSurface expression, see below. The orientation attribute of type gml:SignType expresses the sense in which the included face is used i.e. inward or outward with respect to the surface normal in any geometric realisation.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":TopoSolid of type "http://www.opengis.net/gml/3.2":TopoSolidType.
/// @brief gml:TopoSolid represents the 3-dimensional topology primitive. The topological boundary of a solid (gml:directedFace) consists of a set of directed faces. A solid may optionally be realised by a 3-dimensional geometric primitive (gml:solidProperty).
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":directedTopoSolid of type "http://www.opengis.net/gml/3.2":DirectedTopoSolidPropertyType.
/// @brief The gml:directedSolid property element describes the coBoundary of topology faces and is used in the support of volume features via the gml:TopoVolume expression, see below. The orientation attribute of type gml:SignType expresses the sense in which the included solid appears in the face coboundary. In the context of a gml:TopoVolume the orientation attribute has no meaning.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":TopoPoint of type "http://www.opengis.net/gml/3.2":TopoPointType.
/// @brief The intended use of gml:TopoPoint is to appear within a point feature to express the structural and possibly geometric relationships of this feature to other features via shared node definitions.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":topoPointProperty of type "http://www.opengis.net/gml/3.2":TopoPointPropertyType.
/// @brief The gml:topoPointProperty property element may be used in features to express their relationship to the referenced topology node.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":TopoCurve of type "http://www.opengis.net/gml/3.2":TopoCurveType.
/// @brief gml:TopoCurve represents a homogeneous topological expression, a sequence of directed edges, which if realised are isomorphic to a geometric curve primitive. The intended use of gml:TopoCurve is to appear within a line feature to express the structural and geometric relationships of this feature to other features via the shared edge definitions. If provided, the aggregationType attribute shall have the value "sequence".
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":topoCurveProperty of type "http://www.opengis.net/gml/3.2":TopoCurvePropertyType.
/// @brief The gml:topoCurveProperty property element may be used in features to express their relationship to the referenced topology edges.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":TopoSurface of type "http://www.opengis.net/gml/3.2":TopoSurfaceType.
/// @brief gml:TopoSurface represents a homogeneous topological expression, a set of directed faces, which if realised are isomorphic to a geometric surface primitive. The intended use of gml:TopoSurface is to appear within a surface feature to express the structural and possibly geometric relationships of this surface feature to other features via the shared face definitions.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":topoSurfaceProperty of type "http://www.opengis.net/gml/3.2":TopoSurfacePropertyType.
/// @brief The gml:topoSurfaceProperty property element may be used in features to express their relationship to the referenced topology faces.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":TopoVolume of type "http://www.opengis.net/gml/3.2":TopoVolumeType.
/// @brief gml:TopoVolume represents a homogeneous topological expression, a set of directed topologic solids, which if realised are isomorphic to a geometric solid primitive. The intended use of gml:TopoVolume is to appear within a solid feature to express the structural and geometric relationships of this solid feature to other features via the shared solid definitions.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":topoVolumeProperty of type "http://www.opengis.net/gml/3.2":TopoVolumePropertyType.
/// @brief The gml:topoVolumeProperty element may be used in features to express their relationship to the referenced topology volume.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":TopoComplex of type "http://www.opengis.net/gml/3.2":TopoComplexType.
/// @brief gml:TopoComplex is a collection of topological primitives. Each complex holds a reference to its maximal complex (gml:maximalComplex) and optionally to sub- or super-complexes (gml:subComplex, gml:superComplex). A topology complex contains its primitive and sub-complex members.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":subComplex of type "http://www.opengis.net/gml/3.2":TopoComplexPropertyType.
/// @brief The property elements gml:subComplex, gml:superComplex and gml:maximalComplex provide an encoding for relationships between topology complexes as described for gml:TopoComplex above.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":superComplex of type "http://www.opengis.net/gml/3.2":TopoComplexPropertyType.
/// @brief The property elements gml:subComplex, gml:superComplex and gml:maximalComplex provide an encoding for relationships between topology complexes as described for gml:TopoComplex above.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":maximalComplex of type "http://www.opengis.net/gml/3.2":TopoComplexPropertyType.
/// @brief The property elements gml:subComplex, gml:superComplex and gml:maximalComplex provide an encoding for relationships between topology complexes as described for gml:TopoComplex above.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":topoPrimitiveMember of type "http://www.opengis.net/gml/3.2":TopoPrimitiveMemberType.
/// @brief The gml:topoPrimitiveMember property element encodes for the relationship between a topology complex and a single topology primitive.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":topoPrimitiveMembers of type "http://www.opengis.net/gml/3.2":TopoPrimitiveArrayAssociationType.
/// @brief The gml:topoPrimitiveMembers property element encodes the relationship between a topology complex and an arbitrary number of topology primitives.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":GeometricComplex of type "http://www.opengis.net/gml/3.2":GeometricComplexType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":CompositeCurve of type "http://www.opengis.net/gml/3.2":CompositeCurveType.
/// @brief A gml:CompositeCurve is represented by a sequence of (orientable) curves such that each curve in the sequence terminates at the start point of the subsequent curve in the list. curveMember references or contains inline one curve in the composite curve. The curves are contiguous, the collection of curves is ordered. Therefore, if provided, the aggregationType attribute shall have the value "sequence".
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":CompositeSurface of type "http://www.opengis.net/gml/3.2":CompositeSurfaceType.
/// @brief A gml:CompositeSurface is represented by a set of orientable surfaces. It is geometry type with all the geometric properties of a (primitive) surface. Essentially, a composite surface is a collection of surfaces that join in pairs on common boundary curves and which, when considered as a whole, form a single surface. surfaceMember references or contains inline one surface in the composite surface. The surfaces are contiguous.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":CompositeSolid of type "http://www.opengis.net/gml/3.2":CompositeSolidType.
/// @brief gml:CompositeSolid implements ISO 19107 GM_CompositeSolid (see ISO 19107:2003, 6.6.7) as specified in D.2.3.6. A gml:CompositeSolid is represented by a set of orientable surfaces. It is a geometry type with all the geometric properties of a (primitive) solid. Essentially, a composite solid is a collection of solids that join in pairs on common boundary surfaces and which, when considered as a whole, form a single solid. solidMember references or contains one solid in the composite solid. The solids are contiguous.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":MultiGeometry of type "http://www.opengis.net/gml/3.2":MultiGeometryType.
/// @brief gml:MultiGeometry is a collection of one or more GML geometry objects of arbitrary type. The members of the geometric aggregate may be specified either using the "standard" property (gml:geometryMember) or the array property (gml:geometryMembers). It is also valid to use both the "standard" and the array properties in the same collection.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":geometryMember of type "http://www.opengis.net/gml/3.2":GeometryPropertyType.
/// @brief This property element either references a geometry element via the XLink-attributes or contains the geometry element.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":geometryMembers of type "http://www.opengis.net/gml/3.2":GeometryArrayPropertyType.
/// @brief This property element contains a list of geometry elements. The order of the elements is significant and shall be preserved when processing the array.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":MultiPoint of type "http://www.opengis.net/gml/3.2":MultiPointType.
/// @brief A gml:MultiPoint consists of one or more gml:Points. The members of the geometric aggregate may be specified either using the "standard" property (gml:pointMember) or the array property (gml:pointMembers). It is also valid to use both the "standard" and the array properties in the same collection.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":pointMember of type "http://www.opengis.net/gml/3.2":PointPropertyType.
/// @brief This property element either references a Point via the XLink-attributes or contains the Point element.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":pointMembers of type "http://www.opengis.net/gml/3.2":PointArrayPropertyType.
/// @brief This property element contains a list of points. The order of the elements is significant and shall be preserved when processing the array.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":MultiCurve of type "http://www.opengis.net/gml/3.2":MultiCurveType.
/// @brief A gml:MultiCurve is defined by one or more gml:AbstractCurves. The members of the geometric aggregate may be specified either using the "standard" property (gml:curveMember) or the array property (gml:curveMembers). It is also valid to use both the "standard" and the array properties in the same collection.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":curveMembers of type "http://www.opengis.net/gml/3.2":CurveArrayPropertyType.
/// @brief This property element contains a list of curves. The order of the elements is significant and shall be preserved when processing the array.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":MultiSurface of type "http://www.opengis.net/gml/3.2":MultiSurfaceType.
/// @brief A gml:MultiSurface is defined by one or more gml:AbstractSurfaces. The members of the geometric aggregate may be specified either using the "standard" property (gml:surfaceMember) or the array property (gml:surfaceMembers). It is also valid to use both the "standard" and the array properties in the same collection.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":surfaceMembers of type "http://www.opengis.net/gml/3.2":SurfaceArrayPropertyType.
/// @brief This property element contains a list of surfaces. The order of the elements is significant and shall be preserved when processing the array.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":MultiSolid of type "http://www.opengis.net/gml/3.2":MultiSolidType.
/// @brief A gml:MultiSolid is defined by one or more gml:AbstractSolids. The members of the geometric aggregate may be specified either using the "standard" property (gml:solidMember) or the array property (gml:solidMembers). It is also valid to use both the "standard" and the array properties in the same collection.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":solidMember of type "http://www.opengis.net/gml/3.2":SolidPropertyType.
/// @brief This property element either references a solid via the XLink-attributes or contains the solid element. A solid element is any element, which is substitutable for gml:AbstractSolid.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":solidMembers of type "http://www.opengis.net/gml/3.2":SolidArrayPropertyType.
/// @brief This property element contains a list of solids. The order of the elements is significant and shall be preserved when processing the array.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":Curve of type "http://www.opengis.net/gml/3.2":CurveType.
/// @brief A curve is a 1-dimensional primitive. Curves are continuous, connected, and have a measurable length in terms of the coordinate system. A curve is composed of one or more curve segments. Each curve segment within a curve may be defined using a different interpolation method. The curve segments are connected to one another, with the end point of each segment except the last being the start point of the next segment in the segment list. The orientation of the curve is positive. The element segments encapsulates the segments of the curve.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":baseCurve of type "http://www.opengis.net/gml/3.2":CurvePropertyType.
/// @brief The property baseCurve references or contains the base curve, i.e. it either references the base curve via the XLink-attributes or contains the curve element. A curve element is any element which is substitutable for AbstractCurve. The base curve has positive orientation.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":OrientableCurve of type "http://www.opengis.net/gml/3.2":OrientableCurveType.
/// @brief OrientableCurve consists of a curve and an orientation. If the orientation is "+", then the OrientableCurve is identical to the baseCurve. If the orientation is "-", then the OrientableCurve is related to another AbstractCurve with a parameterization that reverses the sense of the curve traversal.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":segments of type "http://www.opengis.net/gml/3.2":CurveSegmentArrayPropertyType.
/// @brief This property element contains a list of curve segments. The order of the elements is significant and shall be preserved when processing the array.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":LineStringSegment of type "http://www.opengis.net/gml/3.2":LineStringSegmentType.
/// @brief A LineStringSegment is a curve segment that is defined by two or more control points including the start and end point, with linear interpolation between them. The content model follows the general pattern for the encoding of curve segments.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":ArcString of type "http://www.opengis.net/gml/3.2":ArcStringType.
/// @brief An ArcString is a curve segment that uses three-point circular arc interpolation ("circularArc3Points"). The number of arcs in the arc string may be explicitly stated in the attribute numArc. The number of control points in the arc string shall be 2 * numArc + 1. The content model follows the general pattern for the encoding of curve segments.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":Arc of type "http://www.opengis.net/gml/3.2":ArcType.
/// @brief An Arc is an arc string with only one arc unit, i.e. three control points including the start and end point. As arc is an arc string consisting of a single arc, the attribute "numArc" is fixed to "1".
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":Circle of type "http://www.opengis.net/gml/3.2":CircleType.
/// @brief A Circle is an arc whose ends coincide to form a simple closed loop. The three control points shall be distinct non-co-linear points for the circle to be unambiguously defined. The arc is simply extended past the third control point until the first control point is encountered.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":ArcStringByBulge of type "http://www.opengis.net/gml/3.2":ArcStringByBulgeType.
/// @brief This variant of the arc computes the mid points of the arcs instead of storing the coordinates directly. The control point sequence consists of the start and end points of each arc plus the bulge (see ISO 19107:2003, 6.4.17.2). The normal is a vector normal (perpendicular) to the chord of the arc (see ISO 19107:2003, 6.4.17.4). The interpolation is fixed as "circularArc2PointWithBulge". The number of arcs in the arc string may be explicitly stated in the attribute numArc. The number of control points in the arc string shall be numArc + 1. The content model follows the general pattern for the encoding of curve segments.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":ArcByBulge of type "http://www.opengis.net/gml/3.2":ArcByBulgeType.
/// @brief An ArcByBulge is an arc string with only one arc unit, i.e. two control points, one bulge and one normal vector. As arc is an arc string consisting of a single arc, the attribute "numArc" is fixed to "1".
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":ArcByCenterPoint of type "http://www.opengis.net/gml/3.2":ArcByCenterPointType.
/// @brief This variant of the arc requires that the points on the arc shall be computed instead of storing the coordinates directly. The single control point is the center point of the arc plus the radius and the bearing at start and end. This representation can be used only in 2D. The element radius specifies the radius of the arc. The element startAngle specifies the bearing of the arc at the start. The element endAngle specifies the bearing of the arc at the end. The interpolation is fixed as "circularArcCenterPointWithRadius". Since this type describes always a single arc, the attribute "numArc" is fixed to "1". The content model follows the general pattern for the encoding of curve segments.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":CircleByCenterPoint of type "http://www.opengis.net/gml/3.2":CircleByCenterPointType.
/// @brief A gml:CircleByCenterPoint is an gml:ArcByCenterPoint with identical start and end angle to form a full circle. Again, this representation can be used only in 2D.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":CubicSpline of type "http://www.opengis.net/gml/3.2":CubicSplineType.
/// @brief The number of control points shall be at least three. vectorAtStart is the unit tangent vector at the start point of the spline. vectorAtEnd is the unit tangent vector at the end point of the spline. Only the direction of the vectors shall be used to determine the shape of the cubic spline, not their length. interpolation is fixed as "cubicSpline". degree shall be the degree of the polynomial used for the interpolation in this spline. Therefore the degree for a cubic spline is fixed to "3". The content model follows the general pattern for the encoding of curve segments.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":BSpline of type "http://www.opengis.net/gml/3.2":BSplineType.
/// @brief A B-Spline is a piecewise parametric polynomial or rational curve described in terms of control points and basis functions as specified in ISO 19107:2003, 6.4.30. Therefore, interpolation may be either "polynomialSpline" or "rationalSpline" depending on the interpolation type; default is "polynomialSpline". degree shall be the degree of the polynomial used for interpolation in this spline. knot shall be the sequence of distinct knots used to define the spline basis functions (see ISO 19107:2003, 6.4.26.2). The attribute isPolynomial shall be set to "true" if this is a polynomial spline (see ISO 19107:2003, 6.4.30.5). The attribute knotType shall provide the type of knot distribution used in defining this spline (see ISO 19107:2003, 6.4.30.4). The content model follows the general pattern for the encoding of curve segments.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":Bezier of type "http://www.opengis.net/gml/3.2":BezierType.
/// @brief Bezier curves are polynomial splines that use Bezier or Bernstein polynomials for interpolation purposes. It is a special case of the B-Spline curve with two knots. degree shall be the degree of the polynomial used for interpolation in this spline. knot shall be the sequence of distinct knots used to define the spline basis functions. interpolation is fixed as "polynomialSpline". isPolynomial is fixed as "true". knotType is not relevant for Bezier curve segments.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":OffsetCurve of type "http://www.opengis.net/gml/3.2":OffsetCurveType.
/// @brief An offset curve is a curve at a constant distance from the basis curve. offsetBase is the base curve from which this curve is defined as an offset. distance and refDirection have the same meaning as specified in ISO 19107:2003, 6.4.23. The content model follows the general pattern for the encoding of curve segments.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":AffinePlacement of type "http://www.opengis.net/gml/3.2":AffinePlacementType.
/// @brief location, refDirection, inDimension and outDimension have the same meaning as specified in ISO 19107:2003, 6.4.21.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":Clothoid of type "http://www.opengis.net/gml/3.2":ClothoidType.
/// @brief A clothoid, or Cornu's spiral, is plane curve whose curvature is a fixed function of its length. refLocation, startParameter, endParameter and scaleFactor have the same meaning as specified in ISO 19107:2003, 6.4.22. interpolation is fixed as "clothoid". The content model follows the general pattern for the encoding of curve segments.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":GeodesicString of type "http://www.opengis.net/gml/3.2":GeodesicStringType.
/// @brief A sequence of geodesic segments. The number of control points shall be at least two. interpolation is fixed as "geodesic". The content model follows the general pattern for the encoding of curve segments.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":Geodesic of type "http://www.opengis.net/gml/3.2":GeodesicType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":Surface of type "http://www.opengis.net/gml/3.2":SurfaceType.
/// @brief A Surface is a 2-dimensional primitive and is composed of one or more surface patches as specified in ISO 19107:2003, 6.3.17.1. The surface patches are connected to one another. patches encapsulates the patches of the surface.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":baseSurface of type "http://www.opengis.net/gml/3.2":SurfacePropertyType.
/// @brief The property baseSurface references or contains the base surface. The property baseSurface either references the base surface via the XLink-attributes or contains the surface element. A surface element is any element which is substitutable for gml:AbstractSurface. The base surface has positive orientation.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":OrientableSurface of type "http://www.opengis.net/gml/3.2":OrientableSurfaceType.
/// @brief OrientableSurface consists of a surface and an orientation. If the orientation is "+", then the OrientableSurface is identical to the baseSurface. If the orientation is "-", then the OrientableSurface is a reference to a gml:AbstractSurface with an up-normal that reverses the direction for this OrientableSurface, the sense of "the top of the surface".
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":patches of type "http://www.opengis.net/gml/3.2":SurfacePatchArrayPropertyType.
/// @brief The patches property element contains the sequence of surface patches. The order of the elements is significant and shall be preserved when processing the array.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":PolygonPatch of type "http://www.opengis.net/gml/3.2":PolygonPatchType.
/// @brief A gml:PolygonPatch is a surface patch that is defined by a set of boundary curves and an underlying surface to which these curves adhere. The curves shall be coplanar and the polygon uses planar interpolation in its interior. interpolation is fixed to "planar", i.e. an interpolation shall return points on a single plane. The boundary of the patch shall be contained within that plane.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":Triangle of type "http://www.opengis.net/gml/3.2":TriangleType.
/// @brief gml:Triangle represents a triangle as a surface patch with an outer boundary consisting of a linear ring. Note that this is a polygon (subtype) with no inner boundaries. The number of points in the linear ring shall be four. The ring (element exterior) shall be a gml:LinearRing and shall form a triangle, the first and the last position shall be coincident. interpolation is fixed to "planar", i.e. an interpolation shall return points on a single plane. The boundary of the patch shall be contained within that plane.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":Rectangle of type "http://www.opengis.net/gml/3.2":RectangleType.
/// @brief gml:Rectangle represents a rectangle as a surface patch with an outer boundary consisting of a linear ring. Note that this is a polygon (subtype) with no inner boundaries. The number of points in the linear ring shall be five. The ring (element exterior) shall be a gml:LinearRing and shall form a rectangle; the first and the last position shall be coincident. interpolation is fixed to "planar", i.e. an interpolation shall return points on a single plane. The boundary of the patch shall be contained within that plane.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":Ring of type "http://www.opengis.net/gml/3.2":RingType.
/// @brief A ring is used to represent a single connected component of a surface boundary as specified in ISO 19107:2003, 6.3.6. Every gml:curveMember references or contains one curve, i.e. any element which is substitutable for gml:AbstractCurve. In the context of a ring, the curves describe the boundary of the surface. The sequence of curves shall be contiguous and connected in a cycle. If provided, the aggregationType attribute shall have the value "sequence".
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":curveMember of type "http://www.opengis.net/gml/3.2":CurvePropertyType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":Cone of type "http://www.opengis.net/gml/3.2":ConeType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":Cylinder of type "http://www.opengis.net/gml/3.2":CylinderType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":Sphere of type "http://www.opengis.net/gml/3.2":SphereType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":PolyhedralSurface of type "http://www.opengis.net/gml/3.2":SurfaceType.
/// @brief A polyhedral surface is a surface composed of polygon patches connected along their common boundary curves. This differs from the surface type only in the restriction on the types of surface patches acceptable. polygonPatches encapsulates the polygon patches of the polyhedral surface.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":TriangulatedSurface of type "http://www.opengis.net/gml/3.2":SurfaceType.
/// @brief A triangulated surface is a polyhedral surface that is composed only of triangles. There is no restriction on how the triangulation is derived. trianglePatches encapsulates the triangles of the triangulated surface.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":Tin of type "http://www.opengis.net/gml/3.2":TinType.
/// @brief A tin is a triangulated surface that uses the Delauny algorithm or a similar algorithm complemented with consideration of stoplines (stopLines), breaklines (breakLines), and maximum length of triangle sides (maxLength). controlPoint shall contain a set of the positions (three or more) used as posts for this TIN (corners of the triangles in the TIN). See ISO 19107:2003, 6.4.39 for details.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":solidProperty of type "http://www.opengis.net/gml/3.2":SolidPropertyType.
/// @brief This property element either references a solid via the XLink-attributes or contains the solid element. solidProperty is the predefined property which may be used by GML Application Schemas whenever a GML feature has a property with a value that is substitutable for AbstractSolid.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":Solid of type "http://www.opengis.net/gml/3.2":SolidType.
/// @brief A solid is the basis for 3-dimensional geometry. The extent of a solid is defined by the boundary surfaces as specified in ISO 19107:2003, 6.3.18. exterior specifies the outer boundary, interior the inner boundary of the solid.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":Shell of type "http://www.opengis.net/gml/3.2":ShellType.
/// @brief A shell is used to represent a single connected component of a solid boundary as specified in ISO 19107:2003, 6.3.8. Every gml:surfaceMember references or contains one surface, i.e. any element which is substitutable for gml:AbstractSurface. In the context of a shell, the surfaces describe the boundary of the solid. If provided, the aggregationType attribute shall have the value "set".
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":surfaceMember of type "http://www.opengis.net/gml/3.2":SurfacePropertyType.
/// @brief This property element either references a surface via the XLink-attributes or contains the surface element. A surface element is any element, which is substitutable for gml:AbstractSurface.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":surfaceProperty of type "http://www.opengis.net/gml/3.2":SurfacePropertyType.
/// @brief This property element either references a surface via the XLink-attributes or contains the surface element. surfaceProperty is the predefined property which may be used by GML Application Schemas whenever a GML feature has a property with a value that is substitutable for AbstractSurface.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":Polygon of type "http://www.opengis.net/gml/3.2":PolygonType.
/// @brief A Polygon is a special surface that is defined by a single surface patch (see D.3.6). The boundary of this patch is coplanar and the polygon uses planar interpolation in its interior. The elements exterior and interior describe the surface boundary of the polygon.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":exterior of type "http://www.opengis.net/gml/3.2":AbstractRingPropertyType.
/// @brief A boundary of a surface consists of a number of rings. In the normal 2D case, one of these rings is distinguished as being the exterior boundary. In a general manifold this is not always possible, in which case all boundaries shall be listed as interior boundaries, and the exterior will be empty.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":interior of type "http://www.opengis.net/gml/3.2":AbstractRingPropertyType.
/// @brief A boundary of a surface consists of a number of rings. The "interior" rings separate the surface / surface patch from the area enclosed by the rings.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":LinearRing of type "http://www.opengis.net/gml/3.2":LinearRingType.
/// @brief A LinearRing is defined by four or more coordinate tuples, with linear interpolation between them; the first and last coordinates shall be coincident. The number of direct positions in the list shall be at least four.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":pos of type "http://www.opengis.net/gml/3.2":DirectPositionType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":posList of type "http://www.opengis.net/gml/3.2":DirectPositionListType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":vector of type "http://www.opengis.net/gml/3.2":VectorType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":Envelope of type "http://www.opengis.net/gml/3.2":EnvelopeType.
/// @brief Envelope defines an extent using a pair of positions defining opposite corners in arbitrary dimensions. The first direct position is the "lower corner" (a coordinate position consisting of all the minimal ordinates for each dimension for all points within the envelope), the second one the "upper corner" (a coordinate position consisting of all the maximal ordinates for each dimension for all points within the envelope). The use of the properties "coordinates" and "pos" has been deprecated. The explicitly named properties "lowerCorner" and "upperCorner" shall be used instead.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":Point of type "http://www.opengis.net/gml/3.2":PointType.
/// @brief A Point is defined by a single coordinate tuple. The direct position of a point is specified by the pos element which is of type DirectPositionType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":pointProperty of type "http://www.opengis.net/gml/3.2":PointPropertyType.
/// @brief This property element either references a point via the XLink-attributes or contains the point element. pointProperty is the predefined property which may be used by GML Application Schemas whenever a GML feature has a property with a value that is substitutable for Point.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":curveProperty of type "http://www.opengis.net/gml/3.2":CurvePropertyType.
/// @brief This property element either references a curve via the XLink-attributes or contains the curve element. curveProperty is the predefined property which may be used by GML Application Schemas whenever a GML feature has a property with a value that is substitutable for AbstractCurve.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":LineString of type "http://www.opengis.net/gml/3.2":LineStringType.
/// @brief A LineString is a special curve that consists of a single segment with linear interpolation. It is defined by two or more coordinate tuples, with linear interpolation between them. The number of direct positions in the list shall be at least two.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":measure of type "http://www.opengis.net/gml/3.2":MeasureType.
/// @brief The value of a physical quantity, together with its unit.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":angle of type "http://www.opengis.net/gml/3.2":AngleType.
/// @brief The gml:angle property element is used to record the value of an angle quantity as a single number, with its units.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":unitOfMeasure of type "http://www.opengis.net/gml/3.2":UnitOfMeasureType.
/// @brief The element gml:unitOfMeasure is a property element to refer to a unit of measure. This is an empty element which carries a reference to a unit of measure definition.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":UnitDefinition of type "http://www.opengis.net/gml/3.2":UnitDefinitionType.
/// @brief A gml:UnitDefinition is a general definition of a unit of measure. This generic element is used only for units for which no relationship with other units or units systems is known. The content model of gml:UnitDefinition adds three additional properties to gml:Definition, gml:quantityType, gml:quantityTypeReference and gml:catalogSymbol. The gml:catalogSymbol property optionally gives the short symbol used for this unit. This element is usually used when the relationship of this unit to other units or units systems is unknown.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":quantityType of type "http://www.opengis.net/gml/3.2":StringOrRefType.
/// @brief The gml:quantityType property indicates the phenomenon to which the units apply. This element contains an informal description of the phenomenon or type of physical quantity that is measured or observed. When the physical quantity is the result of an observation or measurement, this term is known as observable type or measurand. The use of gml:quantityType for references to remote values is deprecated.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":quantityTypeReference of type "http://www.opengis.net/gml/3.2":ReferenceType.
/// @brief The gml:quantityTypeReference property indicates the phenomenon to which the units apply. The content is a reference to a remote value.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":catalogSymbol of type "http://www.opengis.net/gml/3.2":CodeType.
/// @brief The catalogSymbol is the preferred lexical symbol used for this unit of measure. The codeSpace attribute in gml:CodeType identifies a namespace for the catalog symbol value, and might reference the external catalog. The string value in gml:CodeType contains the value of a symbol that should be unique within this catalog namespace. This symbol often appears explicitly in the catalog, but it could be a combination of symbols using a specified algebra of units.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":BaseUnit of type "http://www.opengis.net/gml/3.2":BaseUnitType.
/// @brief A base unit is a unit of measure that cannot be derived by combination of other base units within a particular system of units. For example, in the SI system of units, the base units are metre, kilogram, second, Ampere, Kelvin, mole, and candela, for the physical quantity types length, mass, time interval, electric current, thermodynamic temperature, amount of substance and luminous intensity, respectively. gml:BaseUnit extends generic gml:UnitDefinition with the property gml:unitsSystem, which carries a reference to the units system to which this base unit is asserted to belong.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":DerivedUnit of type "http://www.opengis.net/gml/3.2":DerivedUnitType.
/// @brief Derived units are defined by combination of other units. Derived units are used for quantities other than those corresponding to the base units, such as hertz (s-1) for frequency, Newton (kg.m/s2) for force. Derived units based directly on base units are usually preferred for quantities other than the fundamental quantities within a system. If a derived unit is not the preferred unit, the gml:ConventionalUnit element should be used instead. The gml:DerivedUnit extends gml:UnitDefinition with the property gml:derivationUnitTerms.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":derivationUnitTerm of type "http://www.opengis.net/gml/3.2":DerivationUnitTermType.
/// @brief A set of gml:derivationUnitTerm elements describes a derived unit of measure. Each element carries an integer exponent. The terms are combined by raising each referenced unit to the power of its exponent and forming the product. This unit term references another unit of measure (uom) and provides an integer exponent applied to that unit in defining the compound unit. The exponent may be positive or negative, but not zero.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":ConventionalUnit of type "http://www.opengis.net/gml/3.2":ConventionalUnitType.
/// @brief Conventional units that are neither base units nor defined by direct combination of base units are used in many application domains. For example electronVolt for energy, feet and nautical miles for length. In most cases there is a known, usually linear, conversion to a preferred unit which is either a base unit or derived by direct combination of base units. The gml:ConventionalUnit extends gml:UnitDefinition with a property that describes a conversion to a preferred unit for this physical quantity. When the conversion is exact, the element gml:conversionToPreferredUnit should be used, or when the conversion is not exact the element gml:roughConversionToPreferredUnit is available. Both of these elements have the same content model. The gml:derivationUnitTerm property defined above is included to allow a user to optionally record how this unit may be derived from other ("more primitive") units.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":conversionToPreferredUnit of type "http://www.opengis.net/gml/3.2":ConversionToPreferredUnitType.
/// @brief The elements gml:conversionToPreferredUnit and gml:roughConversionToPreferredUnit represent parameters used to convert conventional units to preferred units for this physical quantity type. A preferred unit is either a Base Unit or a Derived Unit that is selected for all values of one physical quantity type.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":roughConversionToPreferredUnit of type "http://www.opengis.net/gml/3.2":ConversionToPreferredUnitType.
/// @brief The elements gml:conversionToPreferredUnit and gml:roughConversionToPreferredUnit represent parameters used to convert conventional units to preferred units for this physical quantity type. A preferred unit is either a Base Unit or a Derived Unit that is selected for all values of one physical quantity type.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":Definition of type "http://www.opengis.net/gml/3.2":DefinitionType.
/// @brief The basic gml:Definition element specifies a definition, which can be included in or referenced by a dictionary. The content model for a generic definition is a derivation from gml:AbstractGMLType. The gml:description property element shall hold the definition if this can be captured in a simple text string, or the gml:descriptionReference property element may carry a link to a description elsewhere. The gml:identifier element shall provide one identifier identifying this definition. The identifier shall be unique within the dictionaries using this definition. The gml:name elements shall provide zero or more terms and synonyms for which this is the definition. The gml:remarks element shall be used to hold additional textual information that is not conceptually part of the definition but is useful in understanding the definition.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":remarks of type xs:string.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":Dictionary of type "http://www.opengis.net/gml/3.2":DictionaryType.
/// @brief Sets of definitions may be collected into dictionaries or collections. A gml:Dictionary is a non-abstract collection of definitions. The gml:Dictionary content model adds a list of gml:dictionaryEntry properties that contain or reference gml:Definition objects. A database handle (gml:id attribute) is required, in order that this collection may be referred to. The standard gml:identifier, gml:description, gml:descriptionReference and gml:name properties are available to reference or contain more information about this dictionary. The gml:description and gml:descriptionReference property elements may be used for a description of this dictionary. The derived gml:name element may be used for the name(s) of this dictionary. for remote definiton references gml:dictionaryEntry shall be used. If a Definition object contained within a Dictionary uses the descriptionReference property to refer to a remote definition, then this enables the inclusion of a remote definition in a local dictionary, giving a handle and identifier in the context of the local dictionary.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":dictionaryEntry of type "http://www.opengis.net/gml/3.2":DictionaryEntryType.
/// @brief This property element contains or refers to the definitions which are members of a dictionary. The content model follows the standard GML property pattern, so a gml:dictionaryEntry may either contain or refer to a single gml:Definition. Since gml:Dictionary is substitutable for gml:Definition, the content of an entry may itself be a lower level dictionary. Note that if the value is provided by reference, this definition does not carry a handle (gml:id) in this context, so does not allow external references to this specific definition in this context. When used in this way the referenced definition will usually be in a dictionary in the same XML document.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":reversePropertyName of type xs:string.
/// @brief If the value of an object property is another object and that object contains also a property for the association between the two objects, then this name of the reverse property may be encoded in a gml:reversePropertyName element in an appinfo annotation of the property element to document the constraint between the two properties. The value of the element shall contain the qualified name of the property element.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":description of type "http://www.opengis.net/gml/3.2":StringOrRefType.
/// @brief The value of this property is a text description of the object. gml:description uses gml:StringOrRefType as its content model, so it may contain a simple text string content, or carry a reference to an external description. The use of gml:description to reference an external description has been deprecated and replaced by the gml:descriptionReference property.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":descriptionReference of type "http://www.opengis.net/gml/3.2":ReferenceType.
/// @brief The value of this property is a remote text description of the object. The xlink:href attribute of the gml:descriptionReference property references the external description.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":name of type "http://www.opengis.net/gml/3.2":CodeType.
/// @brief The gml:name property provides a label or identifier for the object, commonly a descriptive name. An object may have several names, typically assigned by different authorities. gml:name uses the gml:CodeType content model. The authority for a name is indicated by the value of its (optional) codeSpace attribute. The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace. In common usage there will be one name per authority, so a processing application may select the name from its preferred codeSpace.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":identifier of type "http://www.opengis.net/gml/3.2":CodeWithAuthorityType.
/// @brief Often, a special identifier is assigned to an object by the maintaining authority with the intention that it is used in references to the object For such cases, the codeSpace shall be provided. That identifier is usually unique either globally or within an application domain. gml:identifier is a pre-defined property for such identifiers.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":targetElement of type xs:string.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":associationName of type xs:string.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":defaultCodeSpace of type xs:anyURI.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":gmlProfileSchema of type xs:anyURI.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":domainSet of type "http://www.opengis.net/gml/3.2":DomainSetType.
/// @brief The gml:domainSet property element describes the spatio-temporal region of interest, within which the coverage is defined. Its content model is given by gml:DomainSetType. The value of the domain is thus a choice between a gml:AbstractGeometry and a gml:AbstractTimeObject. In the instance these abstract elements will normally be substituted by a geometry complex or temporal complex, to represent spatial coverages and time-series, respectively. The presence of the gml:AssociationAttributeGroup means that domainSet follows the usual GML property model and may use the xlink:href attribute to point to the domain, as an alternative to describing the domain inline. Ownership semantics may be provided using the gml:OwnershipAttributeGroup.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":rangeSet of type "http://www.opengis.net/gml/3.2":RangeSetType.
/// @brief The gml:rangeSet property element contains the values of the coverage (sometimes called the attribute values). Its content model is given by gml:RangeSetType. This content model supports a structural description of the range. The semantic information describing the range set is embedded using a uniform method, as part of the explicit values, or as a template value accompanying the representation using gml:DataBlock and gml:File. The values from each component (or "band") in the range may be encoded within a gml:ValueArray element or a concrete member of the gml:AbstractScalarValueList substitution group . Use of these elements satisfies the value-type homogeneity requirement.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":DataBlock of type "http://www.opengis.net/gml/3.2":DataBlockType.
/// @brief gml:DataBlock describes the Range as a block of text encoded values similar to a Common Separated Value (CSV) representation. The range set parameterization is described by the property gml:rangeParameters.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":rangeParameters of type "http://www.opengis.net/gml/3.2":AssociationRoleType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":tupleList of type "http://www.opengis.net/gml/3.2":CoordinatesType.
/// @brief gml:CoordinatesType consists of a list of coordinate tuples, with each coordinate tuple separated by the ts or tuple separator (whitespace), and each coordinate in the tuple by the cs or coordinate separator (comma). The gml:tupleList encoding is effectively "band-interleaved".
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":doubleOrNilReasonTupleList of type "http://www.opengis.net/gml/3.2":doubleOrNilReasonList.
/// @brief gml:doubleOrNilReasonList consists of a list of gml:doubleOrNilReason values, each separated by a whitespace. The gml:doubleOrNilReason values are grouped into tuples where the dimension of each tuple in the list is equal to the number of range parameters.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":File of type "http://www.opengis.net/gml/3.2":FileType.
/// @brief for efficiency reasons, GML also provides a means of encoding the range set in an arbitrary external encoding, such as a binary file. This encoding may be "well-known" but this is not required. This mode uses the gml:File element. The values of the coverage (attribute values in the range set) are transmitted in a external file that is referenced from the XML structure described by gml:FileType. The external file is referenced by the gml:fileReference property that is an anyURI (the gml:fileName property has been deprecated). This means that the external file may be located remotely from the referencing GML instance. The gml:compression property points to a definition of a compression algorithm through an anyURI. This may be a retrievable, computable definition or simply a reference to an unambiguous name for the compression method. The gml:mimeType property points to a definition of the file mime type. The gml:fileStructure property is defined by a codelist. Note further that all values shall be enclosed in a single file. Multi-file structures for values are not supported in GML. The semantics of the range set is described as above using the gml:rangeParameters property. Note that if any compression algorithm is applied, the structure above applies only to the pre-compression or post-decompression structure of the file. Note that the fields within a record match the gml:valueComponents of the gml:CompositeValue in document order.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":coverageFunction of type "http://www.opengis.net/gml/3.2":CoverageFunctionType.
/// @brief The gml:coverageFunction property describes the mapping function from the domain to the range of the coverage. The value of the CoverageFunction is one of gml:CoverageMappingRule and gml:GridFunction. If the gml:coverageFunction property is omitted for a gridded coverage (including rectified gridded coverages) the gml:startPoint is assumed to be the value of the gml:low property in the gml:Grid geometry, and the gml:sequenceRule is assumed to be linear and the gml:axisOrder property is assumed to be "+1 +2".
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":CoverageMappingRule of type "http://www.opengis.net/gml/3.2":MappingRuleType.
/// @brief gml:CoverageMappingRule provides a formal or informal description of the coverage function. The mapping rule may be defined as an in-line string (gml:ruleDefinition) or via a remote reference through xlink:href (gml:ruleReference). If no rule name is specified, the default is 'Linear' with respect to members of the domain in document order.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":GridFunction of type "http://www.opengis.net/gml/3.2":GridFunctionType.
/// @brief gml:GridFunction provides an explicit mapping rule for grid geometries, i.e. the domain shall be a geometry of type grid. It describes the mapping of grid posts (discrete point grid coverage) or grid cells (discrete surface coverage) to the values in the range set. The gml:startPoint is the index position of a point in the grid that is mapped to the first point in the range set (this is also the index position of the first grid post). If the gml:startPoint property is omitted the gml:startPoint is assumed to be equal to the value of gml:low in the gml:Grid geometry. Subsequent points in the mapping are determined by the value of the gml:sequenceRule.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":MultiPointCoverage of type "http://www.opengis.net/gml/3.2":DiscreteCoverageType.
/// @brief In a gml:MultiPointCoverage the domain set is a gml:MultiPoint, that is a collection of arbitrarily distributed geometric points. The content model is identical with gml:DiscreteCoverageType, but that gml:domainSet shall have values gml:MultiPoint. In a gml:MultiPointCoverage the mapping from the domain to the range is straightforward. - For gml:DataBlock encodings the points of the gml:MultiPoint are mapped in document order to the tuples of the data block. - For gml:CompositeValue encodings the points of the gml:MultiPoint are mapped to the members of the composite value in document order. - For gml:File encodings the points of the gml:MultiPoint are mapped to the records of the file in sequential order.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":MultiCurveCoverage of type "http://www.opengis.net/gml/3.2":DiscreteCoverageType.
/// @brief In a gml:MultiCurveCoverage the domain is partioned into a collection of curves comprising a gml:MultiCurve. The coverage function then maps each curve in the collection to a value in the range set. The content model is identical with gml:DiscreteCoverageType, but that gml:domainSet shall have values gml:MultiCurve. In a gml:MultiCurveCoverage the mapping from the domain to the range is straightforward. - For gml:DataBlock encodings the curves of the gml:MultiCurve are mapped in document order to the tuples of the data block. - For gml:CompositeValue encodings the curves of the gml:MultiCurve are mapped to the members of the composite value in document order. - For gml:File encodings the curves of the gml:MultiCurve are mapped to the records of the file in sequential order.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":MultiSurfaceCoverage of type "http://www.opengis.net/gml/3.2":DiscreteCoverageType.
/// @brief In a gml:MultiSurfaceCoverage the domain is partioned into a collection of surfaces comprising a gml:MultiSurface. The coverage function than maps each surface in the collection to a value in the range set. The content model is identical with gml:DiscreteCoverageType, but that gml:domainSet shall have values gml:MultiSurface. In a gml:MultiSurfaceCoverage the mapping from the domain to the range is straightforward. - For gml:DataBlock encodings the surfaces of the gml:MultiSurface are mapped in document order to the tuples of the data block. - For gml:CompositeValue encodings the surfaces of the gml:MultiSurface are mapped to the members of the composite value in document order. - For gml:File encodings the surfaces of the gml:MultiSurface are mapped to the records of the file in sequential order.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":MultiSolidCoverage of type "http://www.opengis.net/gml/3.2":DiscreteCoverageType.
/// @brief In a gml:MultiSolidCoverage the domain is partioned into a collection of solids comprising a gml:MultiSolid. The coverage function than maps each solid in the collection to a value in the range set. The content model is identical with gml:DiscreteCoverageType, but that gml:domainSet shall have values gml:MultiSolid. In a gml:MultiSolidCoverage the mapping from the domain to the range is straightforward. - For gml:DataBlock encodings the solids of the gml:MultiSolid are mapped in document order to the tuples of the data block. - For gml:CompositeValue encodings the solids of the gml:MultiSolid are mapped to the members of the composite value in document order. - For gml:File encodings the solids of the gml:MultiSolid are mapped to the records of the file in sequential order.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":GridCoverage of type "http://www.opengis.net/gml/3.2":DiscreteCoverageType.
/// @brief A gml:GriddedCoverage is a discrete point coverage in which the domain set is a geometric grid of points. Note that this is the same as the gml:MultiPointCoverage except that we have a gml:Grid to describe the domain. The simple gridded coverage is not geometrically referenced and hence no geometric positions are assignable to the points in the grid. Such geometric positioning is introduced in the gml:RectifiedGridCoverage.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":RectifiedGridCoverage of type "http://www.opengis.net/gml/3.2":DiscreteCoverageType.
/// @brief The gml:RectifiedGridCoverage is a discrete point coverage based on a rectified grid. It is similar to the grid coverage except that the points of the grid are geometrically referenced. The rectified grid coverage has a domain that is a gml:RectifiedGrid geometry.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":boundedBy of type "http://www.opengis.net/gml/3.2":BoundingShapeType.
/// @brief This property describes the minimum bounding box or rectangle that encloses the entire feature.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":EnvelopeWithTimePeriod of type "http://www.opengis.net/gml/3.2":EnvelopeWithTimePeriodType.
/// @brief gml:EnvelopeWithTimePeriod is provided for envelopes that include a temporal extent. It adds two time position properties, gml:beginPosition and gml:endPosition, which describe the extent of a time-envelope. Since gml:EnvelopeWithTimePeriod is assigned to the substitution group headed by gml:Envelope, it may be used whenever gml:Envelope is valid.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":locationName of type "http://www.opengis.net/gml/3.2":CodeType.
/// @brief The gml:locationName property element is a convenience property where the text value describes the location of the feature. If the location names are selected from a controlled list, then the list shall be identified in the codeSpace attribute.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":locationReference of type "http://www.opengis.net/gml/3.2":ReferenceType.
/// @brief The gml:locationReference property element is a convenience property where the text value referenced by the xlink:href attribute describes the location of the feature.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":validTime of type "http://www.opengis.net/gml/3.2":TimePrimitivePropertyType.
/// @brief gml:validTime is a convenience property element.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":TimeInstant of type "http://www.opengis.net/gml/3.2":TimeInstantType.
/// @brief gml:TimeInstant acts as a zero-dimensional geometric primitive that represents an identifiable position in time.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":TimePeriod of type "http://www.opengis.net/gml/3.2":TimePeriodType.
/// @brief gml:TimePeriod acts as a one-dimensional geometric primitive that represents an identifiable extent in time. The location in of a gml:TimePeriod is described by the temporal positions of the instants at which it begins and ends. The length of the period is equal to the temporal distance between the two bounding temporal positions. Both beginning and end may be described in terms of their direct position using gml:TimePositionType which is an XML Schema simple content type, or by reference to an indentifiable time instant using gml:TimeInstantPropertyType. Alternatively a limit of a gml:TimePeriod may use the conventional GML property model to make a reference to a time instant described elsewhere, or a limit may be indicated as a direct position.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":timePosition of type "http://www.opengis.net/gml/3.2":TimePositionType.
/// @brief This element is used directly as a property of gml:TimeInstant (see 15.2.2.3), and may also be used in application schemas.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":duration of type xs:duration.
/// @brief gml:duration conforms to the ISO 8601 syntax for temporal length as implemented by the XML Schema duration type.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":timeInterval of type "http://www.opengis.net/gml/3.2":TimeIntervalLengthType.
/// @brief gml:timeInterval conforms to ISO 11404 which is based on floating point values for temporal length. ISO 11404 syntax specifies the use of a positiveInteger together with appropriate values for radix and factor. The resolution of the time interval is to one radix ^(-factor) of the specified time unit. The value of the unit is either selected from the units for time intervals from ISO 31-1:1992, or is another suitable unit. The encoding is defined for GML in gml:TimeUnitType. The second component of this union type provides a method for indicating time units other than the six standard units given in the enumeration.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":BooleanList of type "http://www.opengis.net/gml/3.2":booleanOrNilReasonList.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":CategoryList of type "http://www.opengis.net/gml/3.2":CodeOrNilReasonListType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":CountList of type "http://www.opengis.net/gml/3.2":integerOrNilReasonList.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":QuantityList of type "http://www.opengis.net/gml/3.2":MeasureOrNilReasonListType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":valueProperty of type "http://www.opengis.net/gml/3.2":ValuePropertyType.
/// @brief Property that refers to, or contains, a Value. Convenience element for general use.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":valueComponent of type "http://www.opengis.net/gml/3.2":ValuePropertyType.
/// @brief Property that refers to, or contains, a Value.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":valueComponents of type "http://www.opengis.net/gml/3.2":ValueArrayPropertyType.
/// @brief Property that contains Values.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":CompositeValue of type "http://www.opengis.net/gml/3.2":CompositeValueType.
/// @brief gml:CompositeValue is an aggregate value built from other values . It contains zero or an arbitrary number of gml:valueComponent elements, and zero or one gml:valueComponents property elements. It may be used for strongly coupled aggregates (vectors, tensors) or for arbitrary collections of values.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":ValueArray of type "http://www.opengis.net/gml/3.2":ValueArrayType.
/// @brief A Value Array is used for homogeneous arrays of primitive and aggregate values. The member values may be scalars, composites, arrays or lists. ValueArray has the same content model as CompositeValue, but the member values shall be homogeneous. The element declaration contains a Schematron constraint which expresses this restriction precisely. Since the members are homogeneous, the gml:referenceSystem (uom, codeSpace) may be specified on the gml:ValueArray itself and inherited by all the members if desired.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":CategoryExtent of type "http://www.opengis.net/gml/3.2":CategoryExtentType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":CountExtent of type "http://www.opengis.net/gml/3.2":CountExtentType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":QuantityExtent of type "http://www.opengis.net/gml/3.2":QuantityExtentType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":Grid of type "http://www.opengis.net/gml/3.2":GridType.
/// @brief The gml:Grid implicitly defines an unrectified grid, which is a network composed of two or more sets of curves in which the members of each set intersect the members of the other sets in an algorithmic way. The region of interest within the grid is given in terms of its gml:limits, being the grid coordinates of diagonally opposed corners of a rectangular region. gml:axisLabels is provided with a list of labels of the axes of the grid (gml:axisName has been deprecated). gml:dimension specifies the dimension of the grid. The gml:limits element contains a single gml:GridEnvelope. The gml:low and gml:high property elements of the envelope are each integerLists, which are coordinate tuples, the coordinates being measured as offsets from the origin of the grid along each axis, of the diagonally opposing corners of a "rectangular" region of interest.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":RectifiedGrid of type "http://www.opengis.net/gml/3.2":RectifiedGridType.
/// @brief A rectified grid is a grid for which there is an affine transformation between the grid coordinates and the coordinates of an external coordinate reference system. It is defined by specifying the position (in some geometric space) of the grid "origin" and of the vectors that specify the post locations. Note that the grid limits (post indexes) and axis name properties are inherited from gml:GridType and that gml:RectifiedGrid adds a gml:origin property (contains or references a gml:Point) and a set of gml:offsetVector properties.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":conversion of type "http://www.opengis.net/gml/3.2":GeneralConversionPropertyType.
/// @brief gml:conversion is an association role to the coordinate conversion used to define the derived CRS.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":CompoundCRS of type "http://www.opengis.net/gml/3.2":CompoundCRSType.
/// @brief gml:CompundCRS is a coordinate reference system describing the position of points through two or more independent coordinate reference systems. It is associated with a non-repeating sequence of two or more instances of SingleCRS.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":componentReferenceSystem of type "http://www.opengis.net/gml/3.2":SingleCRSPropertyType.
/// @brief The gml:componentReferenceSystem elements are an ordered sequence of associations to all the component coordinate reference systems included in this compound coordinate reference system. The gml:AggregationAttributeGroup should be used to specify that the gml:componentReferenceSystem properties are ordered.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":GeodeticCRS of type "http://www.opengis.net/gml/3.2":GeodeticCRSType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":ellipsoidalCS of type "http://www.opengis.net/gml/3.2":EllipsoidalCSPropertyType.
/// @brief gml:ellipsoidalCS is an association role to the ellipsoidal coordinate system used by this CRS.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":cartesianCS of type "http://www.opengis.net/gml/3.2":CartesianCSPropertyType.
/// @brief gml:cartesianCS is an association role to the Cartesian coordinate system used by this CRS.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":sphericalCS of type "http://www.opengis.net/gml/3.2":SphericalCSPropertyType.
/// @brief gml:sphericalCS is an association role to the spherical coordinate system used by this CRS.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":geodeticDatum of type "http://www.opengis.net/gml/3.2":GeodeticDatumPropertyType.
/// @brief gml:geodeticDatum is an association role to the geodetic datum used by this CRS.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":VerticalCRS of type "http://www.opengis.net/gml/3.2":VerticalCRSType.
/// @brief gml:VerticalCRS is a 1D coordinate reference system used for recording heights or depths. Vertical CRSs make use of the direction of gravity to define the concept of height or depth, but the relationship with gravity may not be straightforward. By implication, ellipsoidal heights (h) cannot be captured in a vertical coordinate reference system. Ellipsoidal heights cannot exist independently, but only as an inseparable part of a 3D coordinate tuple defined in a geographic 3D coordinate reference system.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":verticalCS of type "http://www.opengis.net/gml/3.2":VerticalCSPropertyType.
/// @brief gml:verticalCS is an association role to the vertical coordinate system used by this CRS.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":verticalDatum of type "http://www.opengis.net/gml/3.2":VerticalDatumPropertyType.
/// @brief gml:verticalDatum is an association role to the vertical datum used by this CRS.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":ProjectedCRS of type "http://www.opengis.net/gml/3.2":ProjectedCRSType.
/// @brief gml:ProjectedCRS is a 2D coordinate reference system used to approximate the shape of the earth on a planar surface, but in such a way that the distortion that is inherent to the approximation is carefully controlled and known. Distortion correction is commonly applied to calculated bearings and distances to produce values that are a close match to actual field values.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":baseGeodeticCRS of type "http://www.opengis.net/gml/3.2":GeodeticCRSPropertyType.
/// @brief gml:baseGeodeticCRS is an association role to the geodetic coordinate reference system used by this projected CRS.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":DerivedCRS of type "http://www.opengis.net/gml/3.2":DerivedCRSType.
/// @brief gml:DerivedCRS is a single coordinate reference system that is defined by its coordinate conversion from another single coordinate reference system known as the base CRS. The base CRS can be a projected coordinate reference system, if this DerivedCRS is used for a georectified grid coverage as described in ISO 19123, Clause 8.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":baseCRS of type "http://www.opengis.net/gml/3.2":SingleCRSPropertyType.
/// @brief gml:baseCRS is an association role to the coordinate reference system used by this derived CRS.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":derivedCRSType of type "http://www.opengis.net/gml/3.2":CodeWithAuthorityType.
/// @brief The gml:derivedCRSType property describes the type of a derived coordinate reference system. The required codeSpace attribute shall reference a source of information specifying the values and meanings of all the allowed string values for this property.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":coordinateSystem of type "http://www.opengis.net/gml/3.2":CoordinateSystemPropertyType.
/// @brief An association role to the coordinate system used by this CRS.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":EngineeringCRS of type "http://www.opengis.net/gml/3.2":EngineeringCRSType.
/// @brief gml:EngineeringCRS is a contextually local coordinate reference system which can be divided into two broad categories: - earth-fixed systems applied to engineering activities on or near the surface of the earth; - CRSs on moving platforms such as road vehicles, vessels, aircraft, or spacecraft, see ISO 19111 8.3.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":cylindricalCS of type "http://www.opengis.net/gml/3.2":CylindricalCSPropertyType.
/// @brief gml:cylindricalCS is an association role to the cylindrical coordinate system used by this CRS.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":linearCS of type "http://www.opengis.net/gml/3.2":LinearCSPropertyType.
/// @brief gml:linearCS is an association role to the linear coordinate system used by this CRS.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":polarCS of type "http://www.opengis.net/gml/3.2":PolarCSPropertyType.
/// @brief gml:polarCS is an association role to the polar coordinate system used by this CRS.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":userDefinedCS of type "http://www.opengis.net/gml/3.2":UserDefinedCSPropertyType.
/// @brief gml:userDefinedCS is an association role to the user defined coordinate system used by this CRS.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":engineeringDatum of type "http://www.opengis.net/gml/3.2":EngineeringDatumPropertyType.
/// @brief gml:engineeringDatum is an association role to the engineering datum used by this CRS.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":ImageCRS of type "http://www.opengis.net/gml/3.2":ImageCRSType.
/// @brief gml:ImageCRS is an engineering coordinate reference system applied to locations in images. Image coordinate reference systems are treated as a separate sub-type because the definition of the associated image datum contains two attributes not relevant to other engineering datums.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":affineCS of type "http://www.opengis.net/gml/3.2":AffineCSPropertyType.
/// @brief gml:affineCS is an association role to the affine coordinate system used by this CRS.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":imageDatum of type "http://www.opengis.net/gml/3.2":ImageDatumPropertyType.
/// @brief gml:imageDatum is an association role to the image datum used by this CRS.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":TemporalCRS of type "http://www.opengis.net/gml/3.2":TemporalCRSType.
/// @brief gml:TemporalCRS is a 1D coordinate reference system used for the recording of time.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":timeCS of type "http://www.opengis.net/gml/3.2":TimeCSPropertyType.
/// @brief gml:timeCS is an association role to the time coordinate system used by this CRS.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":temporalDatum of type "http://www.opengis.net/gml/3.2":TemporalDatumPropertyType.
/// @brief gml:temporalDatum is an association role to the temporal datum used by this CRS.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":CoordinateSystemAxis of type "http://www.opengis.net/gml/3.2":CoordinateSystemAxisType.
/// @brief gml:CoordinateSystemAxis is a definition of a coordinate system axis.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":axisAbbrev of type "http://www.opengis.net/gml/3.2":CodeType.
/// @brief gml:axisAbbrev is the abbreviation used for this coordinate system axis; this abbreviation is also used to identify the coordinates in the coordinate tuple. The codeSpace attribute may reference a source of more information on a set of standardized abbreviations, or on this abbreviation.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":axisDirection of type "http://www.opengis.net/gml/3.2":CodeWithAuthorityType.
/// @brief gml:axisDirection is the direction of this coordinate system axis (or in the case of Cartesian projected coordinates, the direction of this coordinate system axis at the origin). Within any set of coordinate system axes, only one of each pair of terms may be used. For earth-fixed CRSs, this direction is often approximate and intended to provide a human interpretable meaning to the axis. When a geodetic datum is used, the precise directions of the axes may therefore vary slightly from this approximate direction. The codeSpace attribute shall reference a source of information specifying the values and meanings of all the allowed string values for this property.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":minimumValue of type xs:double.
/// @brief The gml:minimumValue and gml:maximumValue properties allow the specification of minimum and maximum value normally allowed for this axis, in the unit of measure for the axis. For a continuous angular axis such as longitude, the values wrap-around at this value. Also, values beyond this minimum/maximum can be used for specified purposes, such as in a bounding box. A value of minus infinity shall be allowed for the gml:minimumValue element, a value of plus infiniy for the gml:maximumValue element. If these elements are omitted, the value is unspecified.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":maximumValue of type xs:double.
/// @brief The gml:minimumValue and gml:maximumValue properties allow the specification of minimum and maximum value normally allowed for this axis, in the unit of measure for the axis. For a continuous angular axis such as longitude, the values wrap-around at this value. Also, values beyond this minimum/maximum can be used for specified purposes, such as in a bounding box. A value of minus infinity shall be allowed for the gml:minimumValue element, a value of plus infiniy for the gml:maximumValue element. If these elements are omitted, the value is unspecified.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":rangeMeaning of type "http://www.opengis.net/gml/3.2":CodeWithAuthorityType.
/// @brief gml:rangeMeaning describes the meaning of axis value range specified by gml:minimumValue and gml:maximumValue. This element shall be omitted when both gml:minimumValue and gml:maximumValue are omitted. This element should be included when gml:minimumValue and/or gml:maximumValue are included. If this element is omitted when the gml:minimumValue and/or gml:maximumValue are included, the meaning is unspecified. The codeSpace attribute shall reference a source of information specifying the values and meanings of all the allowed string values for this property.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":axis of type "http://www.opengis.net/gml/3.2":CoordinateSystemAxisPropertyType.
/// @brief The gml:axis property is an association role (ordered sequence) to the coordinate system axes included in this coordinate system. The coordinate values in a coordinate tuple shall be recorded in the order in which the coordinate system axes associations are recorded, whenever those coordinates use a coordinate reference system that uses this coordinate system. The gml:AggregationAttributeGroup should be used to specify that the axis objects are ordered.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":EllipsoidalCS of type "http://www.opengis.net/gml/3.2":EllipsoidalCSType.
/// @brief gml:EllipsoidalCS is a two- or three-dimensional coordinate system in which position is specified by geodetic latitude, geodetic longitude, and (in the three-dimensional case) ellipsoidal height. An EllipsoidalCS shall have two or three gml:axis property elements; the number of associations shall equal the dimension of the CS.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":CartesianCS of type "http://www.opengis.net/gml/3.2":CartesianCSType.
/// @brief gml:CartesianCS is a 1-, 2-, or 3-dimensional coordinate system. In the 1-dimensional case, it contains a single straight coordinate axis. In the 2- and 3-dimensional cases gives the position of points relative to orthogonal straight axes. In the multi-dimensional case, all axes shall have the same length unit of measure. A CartesianCS shall have one, two, or three gml:axis property elements.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":VerticalCS of type "http://www.opengis.net/gml/3.2":VerticalCSType.
/// @brief gml:VerticalCS is a one-dimensional coordinate system used to record the heights or depths of points. Such a coordinate system is usually dependent on the Earth's gravity field, perhaps loosely as when atmospheric pressure is the basis for the vertical coordinate system axis. A VerticalCS shall have one gml:axis property element.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":TimeCS of type "http://www.opengis.net/gml/3.2":TimeCSType.
/// @brief gml:TimeCS is a one-dimensional coordinate system containing a time axis, used to describe the temporal position of a point in the specified time units from a specified time origin. A TimeCS shall have one gml:axis property element.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":LinearCS of type "http://www.opengis.net/gml/3.2":LinearCSType.
/// @brief gml:LinearCS is a one-dimensional coordinate system that consists of the points that lie on the single axis described. The associated coordinate is the distance with or without offset from the specified datum to the point along the axis. A LinearCS shall have one gml:axis property element.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":UserDefinedCS of type "http://www.opengis.net/gml/3.2":UserDefinedCSType.
/// @brief gml:UserDefinedCS is a two- or three-dimensional coordinate system that consists of any combination of coordinate axes not covered by any other coordinate system type. A UserDefinedCS shall have two or three gml:axis property elements; the number of property elements shall equal the dimension of the CS.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":SphericalCS of type "http://www.opengis.net/gml/3.2":SphericalCSType.
/// @brief gml:SphericalCS is a three-dimensional coordinate system with one distance measured from the origin and two angular coordinates. A SphericalCS shall have three gml:axis property elements.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":PolarCS of type "http://www.opengis.net/gml/3.2":PolarCSType.
/// @brief gml:PolarCS ia s two-dimensional coordinate system in which position is specified by the distance from the origin and the angle between the line from the origin to a point and a reference direction. A PolarCS shall have two gml:axis property elements.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":CylindricalCS of type "http://www.opengis.net/gml/3.2":CylindricalCSType.
/// @brief gml:CylindricalCS is a three-dimensional coordinate system consisting of a polar coordinate system extended by a straight coordinate axis perpendicular to the plane spanned by the polar coordinate system. A CylindricalCS shall have three gml:axis property elements.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":AffineCS of type "http://www.opengis.net/gml/3.2":AffineCSType.
/// @brief gml:AffineCS is a two- or three-dimensional coordinate system with straight axes that are not necessarily orthogonal. An AffineCS shall have two or three gml:axis property elements; the number of property elements shall equal the dimension of the CS.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":scope of type xs:string.
/// @brief The gml:scope property provides a description of the usage, or limitations of usage, for which this CRS-related object is valid. If unknown, enter "not known".
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":anchorDefinition of type "http://www.opengis.net/gml/3.2":CodeType.
/// @brief gml:anchorDefinition is a description, possibly including coordinates, of the definition used to anchor the datum to the Earth. Also known as the "origin", especially for engineering and image datums. The codeSpace attribute may be used to reference a source of more detailed on this point or surface, or on a set of such descriptions. - For a geodetic datum, this point is also known as the fundamental point, which is traditionally the point where the relationship between geoid and ellipsoid is defined. In some cases, the "fundamental point" may consist of a number of points. In those cases, the parameters defining the geoid/ellipsoid relationship have been averaged for these points, and the averages adopted as the datum definition. - For an engineering datum, the anchor definition may be a physical point, or it may be a point with defined coordinates in another CRS.may - For an image datum, the anchor definition is usually either the centre of the image or the corner of the image. - For a temporal datum, this attribute is not defined. Instead of the anchor definition, a temporal datum carries a separate time origin of type DateTime.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":realizationEpoch of type xs:date.
/// @brief gml:realizationEpoch is the time after which this datum definition is valid. See ISO 19111 Table 32 for details.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":GeodeticDatum of type "http://www.opengis.net/gml/3.2":GeodeticDatumType.
/// @brief gml:GeodeticDatum is a geodetic datum defines the precise location and orientation in 3-dimensional space of a defined ellipsoid (or sphere), or of a Cartesian coordinate system centered in this ellipsoid (or sphere).
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":primeMeridian of type "http://www.opengis.net/gml/3.2":PrimeMeridianPropertyType.
/// @brief gml:primeMeridian is an association role to the prime meridian used by this geodetic datum.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":ellipsoid of type "http://www.opengis.net/gml/3.2":EllipsoidPropertyType.
/// @brief gml:ellipsoid is an association role to the ellipsoid used by this geodetic datum.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":Ellipsoid of type "http://www.opengis.net/gml/3.2":EllipsoidType.
/// @brief A gml:Ellipsoid is a geometric figure that may be used to describe the approximate shape of the earth. In mathematical terms, it is a surface formed by the rotation of an ellipse about its minor axis.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":semiMajorAxis of type "http://www.opengis.net/gml/3.2":MeasureType.
/// @brief gml:semiMajorAxis specifies the length of the semi-major axis of the ellipsoid, with its units. Uses the MeasureType with the restriction that the unit of measure referenced by uom must be suitable for a length, such as metres or feet.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":PrimeMeridian of type "http://www.opengis.net/gml/3.2":PrimeMeridianType.
/// @brief A gml:PrimeMeridian defines the origin from which longitude values are determined. The default value for the prime meridian gml:identifier value is "Greenwich".
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":greenwichLongitude of type "http://www.opengis.net/gml/3.2":AngleType.
/// @brief gml:greenwichLongitude is the longitude of the prime meridian measured from the Greenwich meridian, positive eastward. If the value of the prime meridian "name" is "Greenwich" then the value of greenwichLongitude shall be 0 degrees.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":EngineeringDatum of type "http://www.opengis.net/gml/3.2":EngineeringDatumType.
/// @brief gml:EngineeringDatum defines the origin of an engineering coordinate reference system, and is used in a region around that origin. This origin may be fixed with respect to the earth (such as a defined point at a construction site), or be a defined point on a moving vehicle (such as on a ship or satellite).
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":ImageDatum of type "http://www.opengis.net/gml/3.2":ImageDatumType.
/// @brief gml:ImageDatum defines the origin of an image coordinate reference system, and is used in a local context only. For an image datum, the anchor definition is usually either the centre of the image or the corner of the image. For more information, see ISO 19111 B.3.5.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":pixelInCell of type "http://www.opengis.net/gml/3.2":CodeWithAuthorityType.
/// @brief gml:pixelInCell is a specification of the way an image grid is associated with the image data attributes. The required codeSpace attribute shall reference a source of information specifying the values and meanings of all the allowed string values for this property.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":VerticalDatum of type "http://www.opengis.net/gml/3.2":VerticalDatumType.
/// @brief gml:VerticalDatum is a textual description and/or a set of parameters identifying a particular reference level surface used as a zero-height surface, including its position with respect to the Earth for any of the height types recognized by this International Standard.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":TemporalDatum of type "http://www.opengis.net/gml/3.2":TemporalDatumType.
/// @brief A gml:TemporalDatum defines the origin of a Temporal Reference System. This type omits the "anchorDefinition" and "realizationEpoch" elements and adds the "origin" element with the dateTime type.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":origin of type xs:dateTime.
/// @brief gml:origin is the date and time origin of this temporal datum.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":operationVersion of type xs:string.
/// @brief gml:operationVersion is the version of the coordinate transformation (i.e., instantiation due to the stochastic nature of the parameters). Mandatory when describing a transformation, and should not be supplied for a conversion.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":sourceCRS of type "http://www.opengis.net/gml/3.2":CRSPropertyType.
/// @brief gml:sourceCRS is an association role to the source CRS (coordinate reference system) of this coordinate operation.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":targetCRS of type "http://www.opengis.net/gml/3.2":CRSPropertyType.
/// @brief gml:targetCRS is an association role to the target CRS (coordinate reference system) of this coordinate operation.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":ConcatenatedOperation of type "http://www.opengis.net/gml/3.2":ConcatenatedOperationType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":coordOperation of type "http://www.opengis.net/gml/3.2":CoordinateOperationPropertyType.
/// @brief gml:coordOperation is an association role to a coordinate operation.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":PassThroughOperation of type "http://www.opengis.net/gml/3.2":PassThroughOperationType.
/// @brief gml:PassThroughOperation is a pass-through operation specifies that a subset of a coordinate tuple is subject to a specific coordinate operation. The modifiedCoordinate property elements are an ordered sequence of positive integers defining the positions in a coordinate tuple of the coordinates affected by this pass-through operation. The AggregationAttributeGroup should be used to specify that the modifiedCoordinate elements are ordered.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":modifiedCoordinate of type xs:positiveInteger.
/// @brief gml:modifiedCoordinate is a positive integer defining a position in a coordinate tuple.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":Conversion of type "http://www.opengis.net/gml/3.2":ConversionType.
/// @brief gml:Conversion is a concrete operation on coordinates that does not include any change of Datum. The best-known example of a coordinate conversion is a map projection. The parameters describing coordinate conversions are defined rather than empirically derived. Note that some conversions have no parameters. This concrete complex type can be used without using a GML Application Schema that defines operation-method-specialized element names and contents, especially for methods with only one Conversion instance. The usesValue property elements are an unordered list of composition associations to the set of parameter values used by this conversion operation.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":method of type "http://www.opengis.net/gml/3.2":OperationMethodPropertyType.
/// @brief gml:method is an association role to the operation method used by a coordinate operation.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":parameterValue of type "http://www.opengis.net/gml/3.2":AbstractGeneralParameterValuePropertyType.
/// @brief gml:parameterValue is a composition association to a parameter value or group of parameter values used by a coordinate operation.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":Transformation of type "http://www.opengis.net/gml/3.2":TransformationType.
/// @brief gml:Transformation is a concrete object element derived from gml:GeneralTransformation (13.6.2.13). This concrete object can be used for all operation methods, without using a GML Application Schema that defines operation-method-specialized element names and contents, especially for methods with only one Transformation instance. The parameterValue elements are an unordered list of composition associations to the set of parameter values used by this conversion operation.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":ParameterValue of type "http://www.opengis.net/gml/3.2":ParameterValueType.
/// @brief gml:ParameterValue is a parameter value, an ordered sequence of values, or a reference to a file of parameter values. This concrete complex type may be used for operation methods without using an Application Schema that defines operation-method-specialized element names and contents, especially for methods with only one instance. This complex type may be used, extended, or restricted for well-known operation methods, especially for methods with many instances.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":value of type "http://www.opengis.net/gml/3.2":MeasureType.
/// @brief gml:value is a numeric value of an operation parameter, with its associated unit of measure.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":stringValue of type xs:string.
/// @brief gml:stringValue is a character string value of an operation parameter. A string value does not have an associated unit of measure.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":integerValue of type xs:positiveInteger.
/// @brief gml:integerValue is a positive integer value of an operation parameter, usually used for a count. An integer value does not have an associated unit of measure.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":booleanValue of type xs:boolean.
/// @brief gml:booleanValue is a boolean value of an operation parameter. A Boolean value does not have an associated unit of measure.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":valueList of type "http://www.opengis.net/gml/3.2":MeasureListType.
/// @brief gml:valueList is an ordered sequence of two or more numeric values of an operation parameter list, where each value has the same associated unit of measure. An element of this type contains a space-separated sequence of double values.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":integerValueList of type "http://www.opengis.net/gml/3.2":integerList.
/// @brief gml:integerValueList is an ordered sequence of two or more integer values of an operation parameter list, usually used for counts. These integer values do not have an associated unit of measure. An element of this type contains a space-separated sequence of integer values.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":valueFile of type xs:anyURI.
/// @brief gml:valueFile is a reference to a file or a part of a file containing one or more parameter values, each numeric value with its associated unit of measure. When referencing a part of a file, that file shall contain multiple identified parts, such as an XML encoded document. Furthermore, the referenced file or part of a file may reference another part of the same or different files, as allowed in XML documents.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":operationParameter of type "http://www.opengis.net/gml/3.2":OperationParameterPropertyType.
/// @brief gml:operationParameter is an association role to the operation parameter of which this is a value.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":ParameterValueGroup of type "http://www.opengis.net/gml/3.2":ParameterValueGroupType.
/// @brief gml:ParameterValueGroup is a group of related parameter values. The same group can be repeated more than once in a Conversion, Transformation, or higher level ParameterValueGroup, if those instances contain different values of one or more parameterValues which suitably distinquish among those groups. This concrete complex type can be used for operation methods without using an Application Schema that defines operation-method-specialized element names and contents. This complex type may be used, extended, or restricted for well-known operation methods, especially for methods with only one instance. The parameterValue elements are an unordered set of composition association roles to the parameter values and groups of values included in this group.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":group of type "http://www.opengis.net/gml/3.2":OperationParameterGroupPropertyType.
/// @brief gml:group is an association role to the operation parameter group for which this element provides parameter values.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":OperationMethod of type "http://www.opengis.net/gml/3.2":OperationMethodType.
/// @brief gml:OperationMethod is a method (algorithm or procedure) used to perform a coordinate operation. Most operation methods use a number of operation parameters, although some coordinate conversions use none. Each coordinate operation using the method assigns values to these parameters. The parameter elements are an unordered list of associations to the set of operation parameters and parameter groups used by this operation method.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":formula of type "http://www.opengis.net/gml/3.2":CodeType.
/// @brief gml:formula Formula(s) or procedure used by an operation method. The use of the codespace attribite has been deprecated. The property value shall be a character string.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":sourceDimensions of type xs:positiveInteger.
/// @brief gml:sourceDimensions is the number of dimensions in the source CRS of this operation method.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":targetDimensions of type xs:positiveInteger.
/// @brief gml:targetDimensions is the number of dimensions in the target CRS of this operation method.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":parameter of type "http://www.opengis.net/gml/3.2":AbstractGeneralOperationParameterPropertyType.
/// @brief gml:parameter is an association to an operation parameter or parameter group.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":minimumOccurs of type xs:nonNegativeInteger.
/// @brief gml:minimumOccurs is the minimum number of times that values for this parameter group or parameter are required. If this attribute is omitted, the minimum number shall be one.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":OperationParameter of type "http://www.opengis.net/gml/3.2":OperationParameterType.
/// @brief gml:OperationParameter is the definition of a parameter used by an operation method. Most parameter values are numeric, but other types of parameter values are possible. This complex type is expected to be used or extended for all operation methods, without defining operation-method-specialized element names.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":OperationParameterGroup of type "http://www.opengis.net/gml/3.2":OperationParameterGroupType.
/// @brief gml:OperationParameterGroup is the definition of a group of parameters used by an operation method. This complex type is expected to be used or extended for all applicable operation methods, without defining operation-method-specialized element names. The generalOperationParameter elements are an unordered list of associations to the set of operation parameters that are members of this group.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":maximumOccurs of type xs:positiveInteger.
/// @brief gml:maximumOccurs is the maximum number of times that values for this parameter group may be included. If this attribute is omitted, the maximum number shall be one.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":Observation of type "http://www.opengis.net/gml/3.2":ObservationType.
/// @brief The content model is a straightforward extension of gml:AbstractFeatureType; it automatically has the gml:identifier, gml:description, gml:descriptionReference, gml:name, and gml:boundedBy properties. The gml:validTime element describes the time of the observation. Note that this may be a time instant or a time period. The gml:using property contains or references a description of a sensor, instrument or procedure used for the observation. The gml:target property contains or references the specimen, region or station which is the object of the observation. This property is particularly useful for remote observations, such as photographs, where a generic location property might apply to the location of the camera or the location of the field of view, and thus may be ambiguous. The gml:subject element is provided as a convenient synonym for gml:target. This is the term commonly used in phtotography. The gml:resultOf property indicates the result of the observation. The value may be inline, or a reference to a value elsewhere.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":using of type "http://www.opengis.net/gml/3.2":ProcedurePropertyType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":target of type "http://www.opengis.net/gml/3.2":TargetPropertyType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":subject of type "http://www.opengis.net/gml/3.2":TargetPropertyType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":resultOf of type "http://www.opengis.net/gml/3.2":ResultType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":DirectedObservation of type "http://www.opengis.net/gml/3.2":DirectedObservationType.
/// @brief A gml:DirectedObservation is the same as an observation except that it adds an additional gml:direction property. This is the direction in which the observation was acquired. Clearly this applies only to certain types of observations such as visual observations by people, or observations obtained from terrestrial cameras.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":DirectedObservationAtDistance of type "http://www.opengis.net/gml/3.2":DirectedObservationAtDistanceType.
/// @brief gml:DirectedObservationAtDistance adds an additional distance property. This is the distance from the observer to the subject of the observation. Clearly this applies only to certain types of observations such as visual observations by people, or observations obtained from terrestrial cameras.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":direction of type "http://www.opengis.net/gml/3.2":DirectionPropertyType.
/// @brief The property gml:direction is intended as a pre-defined property expressing a direction to be assigned to features defined in a GML application schema.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":TimeReferenceSystem of type "http://www.opengis.net/gml/3.2":TimeReferenceSystemType.
/// @brief A reference system is characterized in terms of its domain of validity: the spatial and temporal extent over which it is applicable. The basic GML element for temporal reference systems is gml:TimeReferenceSystem. Its content model extends gml:DefinitionType with one additional property, gml:domainOfValidity.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":TimeCoordinateSystem of type "http://www.opengis.net/gml/3.2":TimeCoordinateSystemType.
/// @brief A temporal coordinate system shall be based on a continuous interval scale defined in terms of a single time interval. The differences to ISO 19108 TM_CoordinateSystem are: - the origin is specified either using the property gml:originPosition whose value is a direct time position, or using the property gml:origin whose model is gml:TimeInstantPropertyType; this permits more flexibility in representation and also supports referring to a value fixed elsewhere; - the interval uses gml:TimeIntervalLengthType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":TimeCalendar of type "http://www.opengis.net/gml/3.2":TimeCalendarType.
/// @brief A calendar is a discrete temporal reference system that provides a basis for defining temporal position to a resolution of one day. gml:TimeCalendar adds one property to those inherited from gml:TimeReferenceSystem. A gml:referenceFrame provides a link to a gml:TimeCalendarEra that it uses. A gml:TimeCalendar may reference more than one calendar era. The referenceFrame element follows the standard GML property model, allowing the association to be instantiated either using an inline description using the gml:TimeCalendarEra element, or a link to a gml:TimeCalendarEra which is explicit elsewhere.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":TimeCalendarEra of type "http://www.opengis.net/gml/3.2":TimeCalendarEraType.
/// @brief gml:TimeCalendarEra inherits basic properties from gml:DefinitionType and has the following additional properties: - gml:referenceEvent is the name or description of a mythical or historic event which fixes the position of the base scale of the calendar era. This is given as text or using a link to description held elsewhere. - gml:referenceDate specifies the date of the referenceEvent expressed as a date in the given calendar. In most calendars, this date is the origin (i.e., the first day) of the scale, but this is not always true. - gml:julianReference specifies the Julian date that corresponds to the reference date. The Julian day number is an integer value; the Julian date is a decimal value that allows greater resolution. Transforming calendar dates to and from Julian dates provides a relatively simple basis for transforming dates from one calendar to another. - gml:epochOfUse is the period for which the calendar era was used as a basis for dating.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":TimeClock of type "http://www.opengis.net/gml/3.2":TimeClockType.
/// @brief A clock provides a basis for defining temporal position within a day. A clock shall be used with a calendar in order to provide a complete description of a temporal position within a specific day. gml:TimeClock adds the following properties to those inherited from gml:TimeReferenceSystemType: - gml:referenceEvent is the name or description of an event, such as solar noon or sunrise, which fixes the position of the base scale of the clock. - gml:referenceTime specifies the time of day associated with the reference event expressed as a time of day in the given clock. The reference time is usually the origin of the clock scale. - gml:utcReference specifies the 24 hour local or UTC time that corresponds to the reference time. - gml:dateBasis contains or references the calendars that use this clock.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":TimeOrdinalReferenceSystem of type "http://www.opengis.net/gml/3.2":TimeOrdinalReferenceSystemType.
/// @brief In some applications of geographic information such as geology and archaeology relative position in time is known more precisely than absolute time or duration. The order of events in time can be well established, but the magnitude of the intervals between them cannot be accurately determined; in such cases, the use of an ordinal temporal reference system is appropriate. An ordinal temporal reference system is composed of a sequence of named coterminous eras, which may in turn be composed of sequences of member eras at a finer scale, giving the whole a hierarchical structure of eras of verying resolution. An ordinal temporal reference system whose component eras are not further subdivided is effectively a temporal topological complex constrained to be a linear graph. An ordinal temporal reference system some or all of whose component eras are subdivided is effectively a temporal topological complex with the constraint that parallel branches may only be constructed in pairs where one is a single temporal ordinal era and the other is a sequence of temporal ordinal eras that are called "members" of the "group". This constraint means that within a single temporal ordinal reference system, the relative position of all temporal ordinal eras is unambiguous. The positions of the beginning and end of a given era may calibrate the relative time scale. gml:TimeOrdinalReferenceSystem adds one or more gml:component properties to the generic temporal reference system model.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":TimeOrdinalEra of type "http://www.opengis.net/gml/3.2":TimeOrdinalEraType.
/// @brief Its content model follows the pattern of gml:TimeEdge, inheriting standard properties from gml:DefinitionType, and adding gml:start, gml:end and gml:extent properties, a set of gml:member properties which indicate ordered gml:TimeOrdinalEra elements, and a gml:group property which points to the parent era. The recursive inclusion of gml:TimeOrdinalEra elements allow the construction of an arbitrary depth hierarchical ordinal reference schema, such that an ordinal era at a given level of the hierarchy includes a sequence of shorter, coterminous ordinal eras.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":TimeTopologyComplex of type "http://www.opengis.net/gml/3.2":TimeTopologyComplexType.
/// @brief A temporal topology complex shall be the connected acyclic directed graph composed of temporal topological primitives, i.e. time nodes and time edges. Because a time edge may not exist without two time nodes on its boundaries, static features have time edges from a temporal topology complex as the values of their temporal properties, regardless of explicit declarations. A temporal topology complex expresses a linear or a non-linear graph. A temporal linear graph, composed of a sequence of time edges, provides a lineage described only by "substitution" of feature instances or feature element values. A time node as the start or the end of the graph connects with at least one time edge. A time node other than the start and the end shall connect to at least two time edges: one of starting from the node, and another ending at the node. A temporal topological complex is a set of connected temporal topological primitives. The member primtives are indicated, either by reference or by value, using the primitive property.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":TimeNode of type "http://www.opengis.net/gml/3.2":TimeNodeType.
/// @brief A time node is a zero-dimensional topological primitive that represents an identifiable node in time (it is equivalent to a point in space). A node may act as the termination or initiation of any number of time edges. A time node may be realised as a geometry, its position, whose value is a time instant.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":TimeEdge of type "http://www.opengis.net/gml/3.2":TimeEdgeType.
/// @brief A time edge is a one-dimensional topological primitive. It is an open interval that starts and ends at a node. The edge may be realised as a geometry whose value is a time period.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":Null of type "http://www.opengis.net/gml/3.2":NilReasonType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":anchorPoint of type "http://www.opengis.net/gml/3.2":CodeType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":datumRef of type "http://www.opengis.net/gml/3.2":DatumPropertyType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":usesPrimeMeridian of type "http://www.opengis.net/gml/3.2":PrimeMeridianPropertyType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":usesEllipsoid of type "http://www.opengis.net/gml/3.2":EllipsoidPropertyType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":geodeticDatumRef of type "http://www.opengis.net/gml/3.2":GeodeticDatumPropertyType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":ellipsoidRef of type "http://www.opengis.net/gml/3.2":EllipsoidPropertyType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":primeMeridianRef of type "http://www.opengis.net/gml/3.2":PrimeMeridianPropertyType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":engineeringDatumRef of type "http://www.opengis.net/gml/3.2":EngineeringDatumPropertyType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":imageDatumRef of type "http://www.opengis.net/gml/3.2":ImageDatumPropertyType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":verticalDatumRef of type "http://www.opengis.net/gml/3.2":VerticalDatumPropertyType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":temporalDatumRef of type "http://www.opengis.net/gml/3.2":TemporalDatumPropertyType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":coordinateOperationRef of type "http://www.opengis.net/gml/3.2":CoordinateOperationPropertyType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":singleOperationRef of type "http://www.opengis.net/gml/3.2":SingleOperationPropertyType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":operationRef of type "http://www.opengis.net/gml/3.2":OperationPropertyType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":generalConversionRef of type "http://www.opengis.net/gml/3.2":GeneralConversionPropertyType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":generalTransformationRef of type "http://www.opengis.net/gml/3.2":GeneralTransformationPropertyType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":usesSingleOperation of type "http://www.opengis.net/gml/3.2":CoordinateOperationPropertyType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":concatenatedOperationRef of type "http://www.opengis.net/gml/3.2":ConcatenatedOperationPropertyType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":usesOperation of type "http://www.opengis.net/gml/3.2":CoordinateOperationPropertyType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":passThroughOperationRef of type "http://www.opengis.net/gml/3.2":PassThroughOperationPropertyType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":usesMethod of type "http://www.opengis.net/gml/3.2":OperationMethodPropertyType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":usesValue of type "http://www.opengis.net/gml/3.2":AbstractGeneralParameterValuePropertyType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":conversionRef of type "http://www.opengis.net/gml/3.2":ConversionPropertyType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":transformationRef of type "http://www.opengis.net/gml/3.2":TransformationPropertyType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":dmsAngleValue of type "http://www.opengis.net/gml/3.2":DMSAngleType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":valueOfParameter of type "http://www.opengis.net/gml/3.2":OperationParameterPropertyType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":includesValue of type "http://www.opengis.net/gml/3.2":AbstractGeneralParameterValuePropertyType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":valuesOfGroup of type "http://www.opengis.net/gml/3.2":OperationParameterGroupPropertyType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":methodFormula of type "http://www.opengis.net/gml/3.2":CodeType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":usesParameter of type "http://www.opengis.net/gml/3.2":AbstractGeneralOperationParameterPropertyType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":operationMethodRef of type "http://www.opengis.net/gml/3.2":OperationMethodPropertyType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":abstractGeneralOperationParameterRef of type "http://www.opengis.net/gml/3.2":AbstractGeneralOperationParameterPropertyType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":operationParameterRef of type "http://www.opengis.net/gml/3.2":OperationParameterPropertyType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":includesParameter of type "http://www.opengis.net/gml/3.2":AbstractGeneralOperationParameterPropertyType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":operationParameterGroupRef of type "http://www.opengis.net/gml/3.2":OperationParameterPropertyType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":referenceSystemRef of type "http://www.opengis.net/gml/3.2":CRSPropertyType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":crsRef of type "http://www.opengis.net/gml/3.2":CRSPropertyType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":coordinateSystemAxisRef of type "http://www.opengis.net/gml/3.2":CoordinateSystemAxisPropertyType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":usesAxis of type "http://www.opengis.net/gml/3.2":CoordinateSystemAxisPropertyType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":coordinateSystemRef of type "http://www.opengis.net/gml/3.2":CoordinateSystemPropertyType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":ellipsoidalCSRef of type "http://www.opengis.net/gml/3.2":EllipsoidalCSPropertyType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":cartesianCSRef of type "http://www.opengis.net/gml/3.2":CartesianCSPropertyType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":verticalCSRef of type "http://www.opengis.net/gml/3.2":VerticalCSPropertyType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":TemporalCS of type "http://www.opengis.net/gml/3.2":TemporalCSType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":temporalCSRef of type "http://www.opengis.net/gml/3.2":TemporalCSPropertyType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":linearCSRef of type "http://www.opengis.net/gml/3.2":LinearCSPropertyType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":userDefinedCSRef of type "http://www.opengis.net/gml/3.2":UserDefinedCSPropertyType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":sphericalCSRef of type "http://www.opengis.net/gml/3.2":SphericalCSPropertyType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":polarCSRef of type "http://www.opengis.net/gml/3.2":PolarCSPropertyType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":cylindricalCSRef of type "http://www.opengis.net/gml/3.2":CylindricalCSPropertyType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":ObliqueCartesianCS of type "http://www.opengis.net/gml/3.2":ObliqueCartesianCSType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":obliqueCartesianCSRef of type "http://www.opengis.net/gml/3.2":ObliqueCartesianCSPropertyType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":singleCRSRef of type "http://www.opengis.net/gml/3.2":SingleCRSPropertyType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":definedByConversion of type "http://www.opengis.net/gml/3.2":GeneralConversionPropertyType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":includesSingleCRS of type "http://www.opengis.net/gml/3.2":SingleCRSPropertyType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":compoundCRSRef of type "http://www.opengis.net/gml/3.2":CompoundCRSPropertyType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":usesEllipsoidalCS of type "http://www.opengis.net/gml/3.2":EllipsoidalCSPropertyType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":usesCartesianCS of type "http://www.opengis.net/gml/3.2":CartesianCSPropertyType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":usesSphericalCS of type "http://www.opengis.net/gml/3.2":SphericalCSPropertyType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":usesGeodeticDatum of type "http://www.opengis.net/gml/3.2":GeodeticDatumPropertyType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":usesVerticalCS of type "http://www.opengis.net/gml/3.2":VerticalCSPropertyType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":usesVerticalDatum of type "http://www.opengis.net/gml/3.2":VerticalDatumPropertyType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":verticalCRSRef of type "http://www.opengis.net/gml/3.2":VerticalCRSPropertyType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":baseGeographicCRS of type "http://www.opengis.net/gml/3.2":GeographicCRSPropertyType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":projectedCRSRef of type "http://www.opengis.net/gml/3.2":ProjectedCRSPropertyType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":usesCS of type "http://www.opengis.net/gml/3.2":CoordinateSystemPropertyType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":derivedCRSRef of type "http://www.opengis.net/gml/3.2":DerivedCRSPropertyType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":usesEngineeringDatum of type "http://www.opengis.net/gml/3.2":EngineeringDatumPropertyType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":engineeringCRSRef of type "http://www.opengis.net/gml/3.2":EngineeringCRSPropertyType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":usesAffineCS of type "http://www.opengis.net/gml/3.2":AffineCSPropertyType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":usesImageDatum of type "http://www.opengis.net/gml/3.2":ImageDatumPropertyType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":usesObliqueCartesianCS of type "http://www.opengis.net/gml/3.2":ObliqueCartesianCSPropertyType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":imageCRSRef of type "http://www.opengis.net/gml/3.2":ImageCRSPropertyType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":usesTimeCS of type "http://www.opengis.net/gml/3.2":TimeCSPropertyType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":usesTemporalCS of type "http://www.opengis.net/gml/3.2":TemporalCSPropertyType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":usesTemporalDatum of type "http://www.opengis.net/gml/3.2":TemporalDatumPropertyType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":temporalCRSRef of type "http://www.opengis.net/gml/3.2":TemporalCRSPropertyType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":GeographicCRS of type "http://www.opengis.net/gml/3.2":GeographicCRSType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":geographicCRSRef of type "http://www.opengis.net/gml/3.2":GeographicCRSPropertyType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":GeocentricCRS of type "http://www.opengis.net/gml/3.2":GeocentricCRSType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":geocentricCRSRef of type "http://www.opengis.net/gml/3.2":GeocentricCRSPropertyType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":dmsAngle of type "http://www.opengis.net/gml/3.2":DMSAngleType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":degrees of type "http://www.opengis.net/gml/3.2":DegreesType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":decimalMinutes of type "http://www.opengis.net/gml/3.2":DecimalMinutesType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":minutes of type "http://www.opengis.net/gml/3.2":ArcMinutesType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":seconds of type "http://www.opengis.net/gml/3.2":ArcSecondsType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":member of type "http://www.opengis.net/gml/3.2":AssociationRoleType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":members of type "http://www.opengis.net/gml/3.2":ArrayAssociationType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":metaDataProperty of type "http://www.opengis.net/gml/3.2":MetaDataPropertyType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":Bag of type "http://www.opengis.net/gml/3.2":BagType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":Array of type "http://www.opengis.net/gml/3.2":ArrayType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":GenericMetaData of type "http://www.opengis.net/gml/3.2":GenericMetaDataType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":coordinates of type "http://www.opengis.net/gml/3.2":CoordinatesType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":pointRep of type "http://www.opengis.net/gml/3.2":PointPropertyType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":location of type "http://www.opengis.net/gml/3.2":LocationPropertyType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":LocationString of type "http://www.opengis.net/gml/3.2":StringOrRefType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":LocationKeyWord of type "http://www.opengis.net/gml/3.2":CodeType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":priorityLocation of type "http://www.opengis.net/gml/3.2":PriorityLocationPropertyType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":featureMember of type "http://www.opengis.net/gml/3.2":FeaturePropertyType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":featureProperty of type "http://www.opengis.net/gml/3.2":FeaturePropertyType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":featureMembers of type "http://www.opengis.net/gml/3.2":FeatureArrayPropertyType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":FeatureCollection of type "http://www.opengis.net/gml/3.2":FeatureCollectionType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":track of type "http://www.opengis.net/gml/3.2":HistoryPropertyType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":DefinitionCollection of type "http://www.opengis.net/gml/3.2":DictionaryType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":definitionMember of type "http://www.opengis.net/gml/3.2":DictionaryEntryType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":indirectEntry of type "http://www.opengis.net/gml/3.2":IndirectEntryType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":DefinitionProxy of type "http://www.opengis.net/gml/3.2":DefinitionProxyType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":definitionRef of type "http://www.opengis.net/gml/3.2":ReferenceType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":MappingRule of type "http://www.opengis.net/gml/3.2":StringOrRefType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":centerOf of type "http://www.opengis.net/gml/3.2":PointPropertyType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":position of type "http://www.opengis.net/gml/3.2":PointPropertyType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":extentOf of type "http://www.opengis.net/gml/3.2":SurfacePropertyType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":edgeOf of type "http://www.opengis.net/gml/3.2":CurvePropertyType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":centerLineOf of type "http://www.opengis.net/gml/3.2":CurvePropertyType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":multiLocation of type "http://www.opengis.net/gml/3.2":MultiPointPropertyType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":multiCenterOf of type "http://www.opengis.net/gml/3.2":MultiPointPropertyType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":multiPosition of type "http://www.opengis.net/gml/3.2":MultiPointPropertyType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":multiCenterLineOf of type "http://www.opengis.net/gml/3.2":MultiCurvePropertyType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":multiEdgeOf of type "http://www.opengis.net/gml/3.2":MultiCurvePropertyType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":multiCoverage of type "http://www.opengis.net/gml/3.2":MultiSurfacePropertyType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":multiExtentOf of type "http://www.opengis.net/gml/3.2":MultiSurfacePropertyType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":polygonPatches of type "http://www.opengis.net/gml/3.2":SurfacePatchArrayPropertyType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":trianglePatches of type "http://www.opengis.net/gml/3.2":SurfacePatchArrayPropertyType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":multiPointDomain of type "http://www.opengis.net/gml/3.2":DomainSetType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":multiCurveDomain of type "http://www.opengis.net/gml/3.2":DomainSetType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":multiSurfaceDomain of type "http://www.opengis.net/gml/3.2":DomainSetType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":multiSolidDomain of type "http://www.opengis.net/gml/3.2":DomainSetType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":gridDomain of type "http://www.opengis.net/gml/3.2":DomainSetType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":rectifiedGridDomain of type "http://www.opengis.net/gml/3.2":DomainSetType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":generalOperationParameter of type "http://www.opengis.net/gml/3.2":AbstractGeneralOperationParameterPropertyType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":MovingObjectStatus of type "http://www.opengis.net/gml/3.2":MovingObjectStatusType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":status of type "http://www.opengis.net/gml/3.2":StringOrRefType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":statusReference of type "http://www.opengis.net/gml/3.2":ReferenceType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":topoComplexProperty of type "http://www.opengis.net/gml/3.2":TopoComplexPropertyType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":multiPointProperty of type "http://www.opengis.net/gml/3.2":MultiPointPropertyType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":multiCurveProperty of type "http://www.opengis.net/gml/3.2":MultiCurvePropertyType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":multiSurfaceProperty of type "http://www.opengis.net/gml/3.2":MultiSurfacePropertyType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":multiSolidProperty of type "http://www.opengis.net/gml/3.2":MultiSolidPropertyType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":multiGeometryProperty of type "http://www.opengis.net/gml/3.2":MultiGeometryPropertyType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":pointArrayProperty of type "http://www.opengis.net/gml/3.2":PointArrayPropertyType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":curveArrayProperty of type "http://www.opengis.net/gml/3.2":CurveArrayPropertyType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":surfaceArrayProperty of type "http://www.opengis.net/gml/3.2":SurfaceArrayPropertyType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.opengis.net/gml/3.2":solidArrayProperty of type "http://www.opengis.net/gml/3.2":SolidArrayPropertyType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://www.opengis.net/gml/3.2                                           *
 *                                                                            *
\******************************************************************************/


/// Top-level attribute "http://www.opengis.net/gml/3.2":id of simpleType xs:ID.
/// @brief The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.
/// Note: use wsdl2h option -g to auto-generate a top-level attribute declaration and processing code.

/// Top-level attribute "http://www.opengis.net/gml/3.2":uom of simpleType xs:anyURI.
/// Note: use wsdl2h option -g to auto-generate a top-level attribute declaration and processing code.

/// Top-level attribute "http://www.opengis.net/gml/3.2":remoteSchema of simpleType xs:anyURI.
/// Note: use wsdl2h option -g to auto-generate a top-level attribute declaration and processing code.

/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://www.isotc211.org/2005/gmd                                         *
 *                                                                            *
\******************************************************************************/


/// Top-level root element "http://www.isotc211.org/2005/gmd":DS_DataSet of type "http://www.isotc211.org/2005/gmd":DS_DataSet_Type.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.isotc211.org/2005/gmd":DS_OtherAggregate of type "http://www.isotc211.org/2005/gmd":DS_OtherAggregate_Type.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.isotc211.org/2005/gmd":DS_Series of type "http://www.isotc211.org/2005/gmd":DS_Series_Type.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.isotc211.org/2005/gmd":DS_Initiative of type "http://www.isotc211.org/2005/gmd":DS_Initiative_Type.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.isotc211.org/2005/gmd":DS_Platform of type "http://www.isotc211.org/2005/gmd":DS_Platform_Type.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.isotc211.org/2005/gmd":DS_Sensor of type "http://www.isotc211.org/2005/gmd":DS_Sensor_Type.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.isotc211.org/2005/gmd":DS_ProductionSeries of type "http://www.isotc211.org/2005/gmd":DS_ProductionSeries_Type.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.isotc211.org/2005/gmd":DS_StereoMate of type "http://www.isotc211.org/2005/gmd":DS_StereoMate_Type.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.isotc211.org/2005/gmd":MD_Metadata of type "http://www.isotc211.org/2005/gmd":MD_Metadata_Type.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.isotc211.org/2005/gmd":MD_GridSpatialRepresentation of type "http://www.isotc211.org/2005/gmd":MD_GridSpatialRepresentation_Type.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.isotc211.org/2005/gmd":MD_VectorSpatialRepresentation of type "http://www.isotc211.org/2005/gmd":MD_VectorSpatialRepresentation_Type.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.isotc211.org/2005/gmd":MD_Georeferenceable of type "http://www.isotc211.org/2005/gmd":MD_Georeferenceable_Type.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.isotc211.org/2005/gmd":MD_Dimension of type "http://www.isotc211.org/2005/gmd":MD_Dimension_Type.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.isotc211.org/2005/gmd":MD_Georectified of type "http://www.isotc211.org/2005/gmd":MD_Georectified_Type.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.isotc211.org/2005/gmd":MD_GeometricObjects of type "http://www.isotc211.org/2005/gmd":MD_GeometricObjects_Type.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.isotc211.org/2005/gmd":MD_PixelOrientationCode of type "http://www.isotc211.org/2005/gmd":MD_PixelOrientationCode_Type.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.isotc211.org/2005/gmd":MD_TopologyLevelCode of type "http://www.isotc211.org/2005/gco":CodeListValue_Type.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.isotc211.org/2005/gmd":MD_GeometricObjectTypeCode of type "http://www.isotc211.org/2005/gco":CodeListValue_Type.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.isotc211.org/2005/gmd":MD_CellGeometryCode of type "http://www.isotc211.org/2005/gco":CodeListValue_Type.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.isotc211.org/2005/gmd":MD_DimensionNameTypeCode of type "http://www.isotc211.org/2005/gco":CodeListValue_Type.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.isotc211.org/2005/gmd":CI_ResponsibleParty of type "http://www.isotc211.org/2005/gmd":CI_ResponsibleParty_Type.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.isotc211.org/2005/gmd":CI_Citation of type "http://www.isotc211.org/2005/gmd":CI_Citation_Type.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.isotc211.org/2005/gmd":CI_Address of type "http://www.isotc211.org/2005/gmd":CI_Address_Type.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.isotc211.org/2005/gmd":CI_OnlineResource of type "http://www.isotc211.org/2005/gmd":CI_OnlineResource_Type.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.isotc211.org/2005/gmd":CI_Contact of type "http://www.isotc211.org/2005/gmd":CI_Contact_Type.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.isotc211.org/2005/gmd":CI_Telephone of type "http://www.isotc211.org/2005/gmd":CI_Telephone_Type.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.isotc211.org/2005/gmd":CI_Date of type "http://www.isotc211.org/2005/gmd":CI_Date_Type.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.isotc211.org/2005/gmd":CI_Series of type "http://www.isotc211.org/2005/gmd":CI_Series_Type.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.isotc211.org/2005/gmd":URL of type xs:anyURI.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.isotc211.org/2005/gmd":CI_RoleCode of type "http://www.isotc211.org/2005/gco":CodeListValue_Type.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.isotc211.org/2005/gmd":CI_PresentationFormCode of type "http://www.isotc211.org/2005/gco":CodeListValue_Type.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.isotc211.org/2005/gmd":CI_OnLineFunctionCode of type "http://www.isotc211.org/2005/gco":CodeListValue_Type.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.isotc211.org/2005/gmd":CI_DateTypeCode of type "http://www.isotc211.org/2005/gco":CodeListValue_Type.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.isotc211.org/2005/gmd":RS_Identifier of type "http://www.isotc211.org/2005/gmd":RS_Identifier_Type.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.isotc211.org/2005/gmd":MD_ReferenceSystem of type "http://www.isotc211.org/2005/gmd":MD_ReferenceSystem_Type.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.isotc211.org/2005/gmd":MD_Identifier of type "http://www.isotc211.org/2005/gmd":MD_Identifier_Type.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.isotc211.org/2005/gmd":EX_TemporalExtent of type "http://www.isotc211.org/2005/gmd":EX_TemporalExtent_Type.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.isotc211.org/2005/gmd":EX_VerticalExtent of type "http://www.isotc211.org/2005/gmd":EX_VerticalExtent_Type.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.isotc211.org/2005/gmd":EX_BoundingPolygon of type "http://www.isotc211.org/2005/gmd":EX_BoundingPolygon_Type.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.isotc211.org/2005/gmd":EX_Extent of type "http://www.isotc211.org/2005/gmd":EX_Extent_Type.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.isotc211.org/2005/gmd":EX_GeographicBoundingBox of type "http://www.isotc211.org/2005/gmd":EX_GeographicBoundingBox_Type.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.isotc211.org/2005/gmd":EX_SpatialTemporalExtent of type "http://www.isotc211.org/2005/gmd":EX_SpatialTemporalExtent_Type.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.isotc211.org/2005/gmd":EX_GeographicDescription of type "http://www.isotc211.org/2005/gmd":EX_GeographicDescription_Type.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.isotc211.org/2005/gmd":MD_ExtendedElementInformation of type "http://www.isotc211.org/2005/gmd":MD_ExtendedElementInformation_Type.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.isotc211.org/2005/gmd":MD_MetadataExtensionInformation of type "http://www.isotc211.org/2005/gmd":MD_MetadataExtensionInformation_Type.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.isotc211.org/2005/gmd":MD_ObligationCode of type "http://www.isotc211.org/2005/gmd":MD_ObligationCode_Type.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.isotc211.org/2005/gmd":MD_DatatypeCode of type "http://www.isotc211.org/2005/gco":CodeListValue_Type.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.isotc211.org/2005/gmd":MD_FeatureCatalogueDescription of type "http://www.isotc211.org/2005/gmd":MD_FeatureCatalogueDescription_Type.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.isotc211.org/2005/gmd":MD_CoverageDescription of type "http://www.isotc211.org/2005/gmd":MD_CoverageDescription_Type.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.isotc211.org/2005/gmd":MD_ImageDescription of type "http://www.isotc211.org/2005/gmd":MD_ImageDescription_Type.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.isotc211.org/2005/gmd":MD_RangeDimension of type "http://www.isotc211.org/2005/gmd":MD_RangeDimension_Type.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.isotc211.org/2005/gmd":MD_Band of type "http://www.isotc211.org/2005/gmd":MD_Band_Type.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.isotc211.org/2005/gmd":MD_CoverageContentTypeCode of type "http://www.isotc211.org/2005/gco":CodeListValue_Type.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.isotc211.org/2005/gmd":MD_ImagingConditionCode of type "http://www.isotc211.org/2005/gco":CodeListValue_Type.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.isotc211.org/2005/gmd":MD_ApplicationSchemaInformation of type "http://www.isotc211.org/2005/gmd":MD_ApplicationSchemaInformation_Type.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.isotc211.org/2005/gmd":MD_PortrayalCatalogueReference of type "http://www.isotc211.org/2005/gmd":MD_PortrayalCatalogueReference_Type.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.isotc211.org/2005/gmd":LI_ProcessStep of type "http://www.isotc211.org/2005/gmd":LI_ProcessStep_Type.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.isotc211.org/2005/gmd":LI_Source of type "http://www.isotc211.org/2005/gmd":LI_Source_Type.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.isotc211.org/2005/gmd":LI_Lineage of type "http://www.isotc211.org/2005/gmd":LI_Lineage_Type.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.isotc211.org/2005/gmd":DQ_ConformanceResult of type "http://www.isotc211.org/2005/gmd":DQ_ConformanceResult_Type.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.isotc211.org/2005/gmd":DQ_QuantitativeResult of type "http://www.isotc211.org/2005/gmd":DQ_QuantitativeResult_Type.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.isotc211.org/2005/gmd":DQ_TemporalValidity of type "http://www.isotc211.org/2005/gmd":DQ_TemporalValidity_Type.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.isotc211.org/2005/gmd":DQ_TemporalConsistency of type "http://www.isotc211.org/2005/gmd":DQ_TemporalConsistency_Type.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.isotc211.org/2005/gmd":DQ_AccuracyOfATimeMeasurement of type "http://www.isotc211.org/2005/gmd":DQ_AccuracyOfATimeMeasurement_Type.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.isotc211.org/2005/gmd":DQ_QuantitativeAttributeAccuracy of type "http://www.isotc211.org/2005/gmd":DQ_QuantitativeAttributeAccuracy_Type.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.isotc211.org/2005/gmd":DQ_NonQuantitativeAttributeAccuracy of type "http://www.isotc211.org/2005/gmd":DQ_NonQuantitativeAttributeAccuracy_Type.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.isotc211.org/2005/gmd":DQ_ThematicClassificationCorrectness of type "http://www.isotc211.org/2005/gmd":DQ_ThematicClassificationCorrectness_Type.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.isotc211.org/2005/gmd":DQ_RelativeInternalPositionalAccuracy of type "http://www.isotc211.org/2005/gmd":DQ_RelativeInternalPositionalAccuracy_Type.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.isotc211.org/2005/gmd":DQ_GriddedDataPositionalAccuracy of type "http://www.isotc211.org/2005/gmd":DQ_GriddedDataPositionalAccuracy_Type.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.isotc211.org/2005/gmd":DQ_AbsoluteExternalPositionalAccuracy of type "http://www.isotc211.org/2005/gmd":DQ_AbsoluteExternalPositionalAccuracy_Type.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.isotc211.org/2005/gmd":DQ_TopologicalConsistency of type "http://www.isotc211.org/2005/gmd":DQ_TopologicalConsistency_Type.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.isotc211.org/2005/gmd":DQ_FormatConsistency of type "http://www.isotc211.org/2005/gmd":DQ_FormatConsistency_Type.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.isotc211.org/2005/gmd":DQ_DomainConsistency of type "http://www.isotc211.org/2005/gmd":DQ_DomainConsistency_Type.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.isotc211.org/2005/gmd":DQ_ConceptualConsistency of type "http://www.isotc211.org/2005/gmd":DQ_ConceptualConsistency_Type.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.isotc211.org/2005/gmd":DQ_CompletenessOmission of type "http://www.isotc211.org/2005/gmd":DQ_CompletenessOmission_Type.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.isotc211.org/2005/gmd":DQ_CompletenessCommission of type "http://www.isotc211.org/2005/gmd":DQ_CompletenessCommission_Type.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.isotc211.org/2005/gmd":DQ_DataQuality of type "http://www.isotc211.org/2005/gmd":DQ_DataQuality_Type.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.isotc211.org/2005/gmd":DQ_Scope of type "http://www.isotc211.org/2005/gmd":DQ_Scope_Type.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.isotc211.org/2005/gmd":DQ_EvaluationMethodTypeCode of type "http://www.isotc211.org/2005/gco":CodeListValue_Type.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.isotc211.org/2005/gmd":MD_BrowseGraphic of type "http://www.isotc211.org/2005/gmd":MD_BrowseGraphic_Type.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.isotc211.org/2005/gmd":MD_DataIdentification of type "http://www.isotc211.org/2005/gmd":MD_DataIdentification_Type.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.isotc211.org/2005/gmd":MD_ServiceIdentification of type "http://www.isotc211.org/2005/gmd":MD_ServiceIdentification_Type.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.isotc211.org/2005/gmd":MD_RepresentativeFraction of type "http://www.isotc211.org/2005/gmd":MD_RepresentativeFraction_Type.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.isotc211.org/2005/gmd":MD_Usage of type "http://www.isotc211.org/2005/gmd":MD_Usage_Type.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.isotc211.org/2005/gmd":MD_Keywords of type "http://www.isotc211.org/2005/gmd":MD_Keywords_Type.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.isotc211.org/2005/gmd":DS_Association of type "http://www.isotc211.org/2005/gmd":DS_Association_Type.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.isotc211.org/2005/gmd":MD_AggregateInformation of type "http://www.isotc211.org/2005/gmd":MD_AggregateInformation_Type.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.isotc211.org/2005/gmd":MD_Resolution of type "http://www.isotc211.org/2005/gmd":MD_Resolution_Type.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.isotc211.org/2005/gmd":MD_TopicCategoryCode of type "http://www.isotc211.org/2005/gmd":MD_TopicCategoryCode_Type.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.isotc211.org/2005/gmd":MD_CharacterSetCode of type "http://www.isotc211.org/2005/gco":CodeListValue_Type.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.isotc211.org/2005/gmd":MD_SpatialRepresentationTypeCode of type "http://www.isotc211.org/2005/gco":CodeListValue_Type.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.isotc211.org/2005/gmd":MD_ProgressCode of type "http://www.isotc211.org/2005/gco":CodeListValue_Type.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.isotc211.org/2005/gmd":MD_KeywordTypeCode of type "http://www.isotc211.org/2005/gco":CodeListValue_Type.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.isotc211.org/2005/gmd":DS_AssociationTypeCode of type "http://www.isotc211.org/2005/gco":CodeListValue_Type.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.isotc211.org/2005/gmd":DS_InitiativeTypeCode of type "http://www.isotc211.org/2005/gco":CodeListValue_Type.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.isotc211.org/2005/gmd":MD_Constraints of type "http://www.isotc211.org/2005/gmd":MD_Constraints_Type.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.isotc211.org/2005/gmd":MD_LegalConstraints of type "http://www.isotc211.org/2005/gmd":MD_LegalConstraints_Type.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.isotc211.org/2005/gmd":MD_SecurityConstraints of type "http://www.isotc211.org/2005/gmd":MD_SecurityConstraints_Type.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.isotc211.org/2005/gmd":MD_ClassificationCode of type "http://www.isotc211.org/2005/gco":CodeListValue_Type.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.isotc211.org/2005/gmd":MD_RestrictionCode of type "http://www.isotc211.org/2005/gco":CodeListValue_Type.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.isotc211.org/2005/gmd":MD_Medium of type "http://www.isotc211.org/2005/gmd":MD_Medium_Type.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.isotc211.org/2005/gmd":MD_DigitalTransferOptions of type "http://www.isotc211.org/2005/gmd":MD_DigitalTransferOptions_Type.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.isotc211.org/2005/gmd":MD_StandardOrderProcess of type "http://www.isotc211.org/2005/gmd":MD_StandardOrderProcess_Type.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.isotc211.org/2005/gmd":MD_Distributor of type "http://www.isotc211.org/2005/gmd":MD_Distributor_Type.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.isotc211.org/2005/gmd":MD_Distribution of type "http://www.isotc211.org/2005/gmd":MD_Distribution_Type.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.isotc211.org/2005/gmd":MD_Format of type "http://www.isotc211.org/2005/gmd":MD_Format_Type.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.isotc211.org/2005/gmd":MD_DistributionUnits of type "http://www.isotc211.org/2005/gco":CodeListValue_Type.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.isotc211.org/2005/gmd":MD_MediumFormatCode of type "http://www.isotc211.org/2005/gco":CodeListValue_Type.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.isotc211.org/2005/gmd":MD_MediumNameCode of type "http://www.isotc211.org/2005/gco":CodeListValue_Type.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.isotc211.org/2005/gmd":MD_MaintenanceInformation of type "http://www.isotc211.org/2005/gmd":MD_MaintenanceInformation_Type.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.isotc211.org/2005/gmd":MD_ScopeDescription of type "http://www.isotc211.org/2005/gmd":MD_ScopeDescription_Type.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.isotc211.org/2005/gmd":MD_MaintenanceFrequencyCode of type "http://www.isotc211.org/2005/gco":CodeListValue_Type.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.isotc211.org/2005/gmd":MD_ScopeCode of type "http://www.isotc211.org/2005/gco":CodeListValue_Type.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.isotc211.org/2005/gmd":PT_FreeText of type "http://www.isotc211.org/2005/gmd":PT_FreeText_Type.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.isotc211.org/2005/gmd":PT_Locale of type "http://www.isotc211.org/2005/gmd":PT_Locale_Type.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.isotc211.org/2005/gmd":LocalisedCharacterString of type "http://www.isotc211.org/2005/gmd":LocalisedCharacterString_Type.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.isotc211.org/2005/gmd":PT_LocaleContainer of type "http://www.isotc211.org/2005/gmd":PT_LocaleContainer_Type.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.isotc211.org/2005/gmd":LanguageCode of type "http://www.isotc211.org/2005/gco":CodeListValue_Type.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.isotc211.org/2005/gmd":Country of type "http://www.isotc211.org/2005/gco":CodeListValue_Type.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://www.isotc211.org/2005/gmd                                         *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://www.w3.org/1999/xlink                                             *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://www.w3.org/1999/xlink                                             *
 *                                                                            *
\******************************************************************************/


/// Top-level attribute "http://www.w3.org/1999/xlink":type of simpleType "http://www.w3.org/1999/xlink":typeType.
// '_xlink__type' attribute definition intentionally left blank.

/// Top-level attribute "http://www.w3.org/1999/xlink":href of simpleType "http://www.w3.org/1999/xlink":hrefType.
// '_xlink__href' attribute definition intentionally left blank.

/// Top-level attribute "http://www.w3.org/1999/xlink":role of simpleType "http://www.w3.org/1999/xlink":roleType.
// '_xlink__role' attribute definition intentionally left blank.

/// Top-level attribute "http://www.w3.org/1999/xlink":arcrole of simpleType "http://www.w3.org/1999/xlink":arcroleType.
// '_xlink__arcrole' attribute definition intentionally left blank.

/// Top-level attribute "http://www.w3.org/1999/xlink":title of simpleType "http://www.w3.org/1999/xlink":titleAttrType.
// '_xlink__title' attribute definition intentionally left blank.

/// Top-level attribute "http://www.w3.org/1999/xlink":show of simpleType "http://www.w3.org/1999/xlink":showType.
// '_xlink__show' attribute definition intentionally left blank.

/// Top-level attribute "http://www.w3.org/1999/xlink":actuate of simpleType "http://www.w3.org/1999/xlink":actuateType.
// '_xlink__actuate' attribute definition intentionally left blank.

/// Top-level attribute "http://www.w3.org/1999/xlink":label of simpleType "http://www.w3.org/1999/xlink":labelType.
// '_xlink__label' attribute definition intentionally left blank.

/// Top-level attribute "http://www.w3.org/1999/xlink":from of simpleType "http://www.w3.org/1999/xlink":fromType.
// '_xlink__from' attribute definition intentionally left blank.

/// Top-level attribute "http://www.w3.org/1999/xlink":to of simpleType "http://www.w3.org/1999/xlink":toType.
// '_xlink__to' attribute definition intentionally left blank.

/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://www.isotc211.org/2005/gco                                         *
 *                                                                            *
\******************************************************************************/


/// Top-level root element "http://www.isotc211.org/2005/gco":TypeName of type "http://www.isotc211.org/2005/gco":TypeName_Type.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.isotc211.org/2005/gco":MemberName of type "http://www.isotc211.org/2005/gco":MemberName_Type.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.isotc211.org/2005/gco":Multiplicity of type "http://www.isotc211.org/2005/gco":Multiplicity_Type.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.isotc211.org/2005/gco":MultiplicityRange of type "http://www.isotc211.org/2005/gco":MultiplicityRange_Type.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.isotc211.org/2005/gco":Measure of type "http://www.opengis.net/gml/3.2":MeasureType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.isotc211.org/2005/gco":Length of type "http://www.opengis.net/gml/3.2":LengthType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.isotc211.org/2005/gco":Angle of type "http://www.opengis.net/gml/3.2":AngleType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.isotc211.org/2005/gco":Scale of type "http://www.opengis.net/gml/3.2":ScaleType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.isotc211.org/2005/gco":Distance of type "http://www.opengis.net/gml/3.2":LengthType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.isotc211.org/2005/gco":CharacterString of type xs:string.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.isotc211.org/2005/gco":Boolean of type xs:boolean.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.isotc211.org/2005/gco":LocalName of type "http://www.opengis.net/gml/3.2":CodeType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.isotc211.org/2005/gco":ScopedName of type "http://www.opengis.net/gml/3.2":CodeType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.isotc211.org/2005/gco":DateTime of type xs:dateTime.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.isotc211.org/2005/gco":Date of type "http://www.isotc211.org/2005/gco":Date_Type.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.isotc211.org/2005/gco":Decimal of type xs:decimal.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.isotc211.org/2005/gco":Real of type xs:double.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.isotc211.org/2005/gco":Integer of type xs:integer.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.isotc211.org/2005/gco":UnlimitedInteger of type "http://www.isotc211.org/2005/gco":UnlimitedInteger_Type.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.isotc211.org/2005/gco":RecordType of type "http://www.isotc211.org/2005/gco":RecordType_Type.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.isotc211.org/2005/gco":Binary of type "http://www.isotc211.org/2005/gco":Binary_Type.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://www.isotc211.org/2005/gco                                         *
 *                                                                            *
\******************************************************************************/


/// Top-level attribute "http://www.isotc211.org/2005/gco":nilReason of simpleType "http://www.opengis.net/gml/3.2":NilReasonType.
/// Note: use wsdl2h option -g to auto-generate a top-level attribute declaration and processing code.

/// Top-level attribute "http://www.isotc211.org/2005/gco":isoType of simpleType xs:string.
/// Note: use wsdl2h option -g to auto-generate a top-level attribute declaration and processing code.

/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://www.isotc211.org/2005/gss                                         *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://www.isotc211.org/2005/gss                                         *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://www.isotc211.org/2005/gts                                         *
 *                                                                            *
\******************************************************************************/


/// Top-level root element "http://www.isotc211.org/2005/gts":TM_PeriodDuration of type xs:duration.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://www.isotc211.org/2005/gts                                         *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://www.isotc211.org/2005/gsr                                         *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://www.isotc211.org/2005/gsr                                         *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * XML Data Binding                                                           *
 *                                                                            *
\******************************************************************************/


/**

@page page_XMLDataBinding XML Data Binding

SOAP/XML services use data bindings contractually bound by WSDL and auto-
generated by wsdl2h and soapcpp2 (see Service Bindings). Plain data bindings
are adopted from XML schemas as part of the WSDL types section or when running
wsdl2h on a set of schemas to produce non-SOAP-based XML data bindings.

The following readers and writers are C/C++ data type (de)serializers auto-
generated by wsdl2h and soapcpp2. Run soapcpp2 on this file to generate the
(de)serialization code, which is stored in soapC.c[pp]. Include "soapH.h" in
your code to import these data type and function declarations. Only use the
soapcpp2-generated files in your project build. Do not include the wsdl2h-
generated .h file in your code.

Data can be read in XML and deserialized from:
  - a file descriptor, using soap->recvfd = fd
  - a socket, using soap->socket = ...
  - a C++ stream, using soap->is = ...
  - a buffer, using the soap->frecv() callback

Data can be serialized in XML and written to:
  - a file descriptor, using soap->sendfd = fd
  - a socket, using soap->socket = ...
  - a C++ stream, using soap->os = ...
  - a buffer, using the soap->fsend() callback

The following options are available for (de)serialization control:
  - soap->encodingStyle = NULL; to remove SOAP 1.1/1.2 encodingStyle
  - soap_mode(soap, SOAP_XML_TREE); XML without id-ref (no cycles!)
  - soap_mode(soap, SOAP_XML_GRAPH); XML with id-ref (including cycles)
  - soap_set_namespaces(soap, struct Namespace *nsmap); to set xmlns bindings


@section plu Top-level root elements of schema "http://inspire.ec.europa.eu/schemas/plu/3.0"

  - <plu:ZoningElement> (use wsdl2h option -g to auto-generate)

  - <plu:OfficialDocumentation> (use wsdl2h option -g to auto-generate)

  - <plu:DimensioningIndicationMeasureValue> (use wsdl2h option -g to auto-generate)

  - <plu:DimensioningIndicationIntegerValue> (use wsdl2h option -g to auto-generate)

  - <plu:DimensioningIndicationCharacterValue> (use wsdl2h option -g to auto-generate)

  - <plu:SupplementaryRegulation> (use wsdl2h option -g to auto-generate)

  - <plu:DimensioningIndicationValue> (use wsdl2h option -g to auto-generate)

  - <plu:SpatialPlan> (use wsdl2h option -g to auto-generate)

  - <plu:DimensioningIndicationRealValue> (use wsdl2h option -g to auto-generate)

  - <plu:OrdinanceValue> (use wsdl2h option -g to auto-generate)

  - <plu:BackgroundMapValue> (use wsdl2h option -g to auto-generate)

@section base Top-level root elements of schema "http://inspire.ec.europa.eu/schemas/base/3.3"

  - <base:SpatialDataSet> (use wsdl2h option -g to auto-generate)

  - <base:Identifier> (use wsdl2h option -g to auto-generate)

@section base2 Top-level root elements of schema "http://inspire.ec.europa.eu/schemas/base2/1.0"

  - <base2:OfficialJournalInformation> (use wsdl2h option -g to auto-generate)

  - <base2:LegislationCitation> (use wsdl2h option -g to auto-generate)

  - <base2:Contact> (use wsdl2h option -g to auto-generate)

  - <base2:RelatedParty> (use wsdl2h option -g to auto-generate)

  - <base2:DocumentCitation> (use wsdl2h option -g to auto-generate)

  - <base2:ThematicIdentifier> (use wsdl2h option -g to auto-generate)

@section lunom Top-level root elements of schema "http://inspire.ec.europa.eu/schemas/lunom/3.0"

  - <lunom:HILUCSPresence> (use wsdl2h option -g to auto-generate)

  - <lunom:SpecificPercentage> (use wsdl2h option -g to auto-generate)

  - <lunom:SpecificPresence> (use wsdl2h option -g to auto-generate)

  - <lunom:HILUCSPercentage> (use wsdl2h option -g to auto-generate)

@section sc Top-level root elements of schema "http://www.interactive-instruments.de/ShapeChange/AppInfo"

  - <sc:profiles> (use wsdl2h option -g to auto-generate)

  - <sc:name> (use wsdl2h option -g to auto-generate)

  - <sc:code> (use wsdl2h option -g to auto-generate)

  - <sc:taggedValue> @ref _sc__taggedValue
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__sc__taggedValue(struct soap*, _sc__taggedValue*);
    // Writer (returns SOAP_OK on success):
    soap_write__sc__taggedValue(struct soap*, _sc__taggedValue*);
    @endcode

@section gml Top-level root elements of schema "http://www.opengis.net/gml/3.2"

  - <gml:dataSource> (use wsdl2h option -g to auto-generate)

  - <gml:dataSourceReference> (use wsdl2h option -g to auto-generate)

  - <gml:DynamicFeature> (use wsdl2h option -g to auto-generate)

  - <gml:DynamicFeatureCollection> (use wsdl2h option -g to auto-generate)

  - <gml:dynamicMembers> (use wsdl2h option -g to auto-generate)

  - <gml:AbstractTimeSlice> (use wsdl2h option -g to auto-generate)

  - <gml:history> (use wsdl2h option -g to auto-generate)

  - <gml:AbstractTopology> (use wsdl2h option -g to auto-generate)

  - <gml:AbstractTopoPrimitive> (use wsdl2h option -g to auto-generate)

  - <gml:Node> (use wsdl2h option -g to auto-generate)

  - <gml:directedNode> (use wsdl2h option -g to auto-generate)

  - <gml:Edge> (use wsdl2h option -g to auto-generate)

  - <gml:directedEdge> (use wsdl2h option -g to auto-generate)

  - <gml:Face> (use wsdl2h option -g to auto-generate)

  - <gml:directedFace> (use wsdl2h option -g to auto-generate)

  - <gml:TopoSolid> (use wsdl2h option -g to auto-generate)

  - <gml:directedTopoSolid> (use wsdl2h option -g to auto-generate)

  - <gml:TopoPoint> (use wsdl2h option -g to auto-generate)

  - <gml:topoPointProperty> (use wsdl2h option -g to auto-generate)

  - <gml:TopoCurve> (use wsdl2h option -g to auto-generate)

  - <gml:topoCurveProperty> (use wsdl2h option -g to auto-generate)

  - <gml:TopoSurface> (use wsdl2h option -g to auto-generate)

  - <gml:topoSurfaceProperty> (use wsdl2h option -g to auto-generate)

  - <gml:TopoVolume> (use wsdl2h option -g to auto-generate)

  - <gml:topoVolumeProperty> (use wsdl2h option -g to auto-generate)

  - <gml:TopoComplex> (use wsdl2h option -g to auto-generate)

  - <gml:subComplex> (use wsdl2h option -g to auto-generate)

  - <gml:superComplex> (use wsdl2h option -g to auto-generate)

  - <gml:maximalComplex> (use wsdl2h option -g to auto-generate)

  - <gml:topoPrimitiveMember> (use wsdl2h option -g to auto-generate)

  - <gml:topoPrimitiveMembers> (use wsdl2h option -g to auto-generate)

  - <gml:GeometricComplex> (use wsdl2h option -g to auto-generate)

  - <gml:CompositeCurve> (use wsdl2h option -g to auto-generate)

  - <gml:CompositeSurface> (use wsdl2h option -g to auto-generate)

  - <gml:CompositeSolid> (use wsdl2h option -g to auto-generate)

  - <gml:AbstractGeometricAggregate> (use wsdl2h option -g to auto-generate)

  - <gml:MultiGeometry> (use wsdl2h option -g to auto-generate)

  - <gml:geometryMember> (use wsdl2h option -g to auto-generate)

  - <gml:geometryMembers> (use wsdl2h option -g to auto-generate)

  - <gml:MultiPoint> (use wsdl2h option -g to auto-generate)

  - <gml:pointMember> (use wsdl2h option -g to auto-generate)

  - <gml:pointMembers> (use wsdl2h option -g to auto-generate)

  - <gml:MultiCurve> (use wsdl2h option -g to auto-generate)

  - <gml:curveMembers> (use wsdl2h option -g to auto-generate)

  - <gml:MultiSurface> (use wsdl2h option -g to auto-generate)

  - <gml:surfaceMembers> (use wsdl2h option -g to auto-generate)

  - <gml:MultiSolid> (use wsdl2h option -g to auto-generate)

  - <gml:solidMember> (use wsdl2h option -g to auto-generate)

  - <gml:solidMembers> (use wsdl2h option -g to auto-generate)

  - <gml:Curve> (use wsdl2h option -g to auto-generate)

  - <gml:baseCurve> (use wsdl2h option -g to auto-generate)

  - <gml:OrientableCurve> (use wsdl2h option -g to auto-generate)

  - <gml:AbstractCurveSegment> (use wsdl2h option -g to auto-generate)

  - <gml:segments> (use wsdl2h option -g to auto-generate)

  - <gml:LineStringSegment> (use wsdl2h option -g to auto-generate)

  - <gml:ArcString> (use wsdl2h option -g to auto-generate)

  - <gml:Arc> (use wsdl2h option -g to auto-generate)

  - <gml:Circle> (use wsdl2h option -g to auto-generate)

  - <gml:ArcStringByBulge> (use wsdl2h option -g to auto-generate)

  - <gml:ArcByBulge> (use wsdl2h option -g to auto-generate)

  - <gml:ArcByCenterPoint> (use wsdl2h option -g to auto-generate)

  - <gml:CircleByCenterPoint> (use wsdl2h option -g to auto-generate)

  - <gml:CubicSpline> (use wsdl2h option -g to auto-generate)

  - <gml:BSpline> (use wsdl2h option -g to auto-generate)

  - <gml:Bezier> (use wsdl2h option -g to auto-generate)

  - <gml:OffsetCurve> (use wsdl2h option -g to auto-generate)

  - <gml:AffinePlacement> (use wsdl2h option -g to auto-generate)

  - <gml:Clothoid> (use wsdl2h option -g to auto-generate)

  - <gml:GeodesicString> (use wsdl2h option -g to auto-generate)

  - <gml:Geodesic> (use wsdl2h option -g to auto-generate)

  - <gml:Surface> (use wsdl2h option -g to auto-generate)

  - <gml:baseSurface> (use wsdl2h option -g to auto-generate)

  - <gml:OrientableSurface> (use wsdl2h option -g to auto-generate)

  - <gml:AbstractSurfacePatch> (use wsdl2h option -g to auto-generate)

  - <gml:patches> (use wsdl2h option -g to auto-generate)

  - <gml:PolygonPatch> (use wsdl2h option -g to auto-generate)

  - <gml:Triangle> (use wsdl2h option -g to auto-generate)

  - <gml:Rectangle> (use wsdl2h option -g to auto-generate)

  - <gml:Ring> (use wsdl2h option -g to auto-generate)

  - <gml:curveMember> (use wsdl2h option -g to auto-generate)

  - <gml:AbstractParametricCurveSurface> (use wsdl2h option -g to auto-generate)

  - <gml:AbstractGriddedSurface> (use wsdl2h option -g to auto-generate)

  - <gml:Cone> (use wsdl2h option -g to auto-generate)

  - <gml:Cylinder> (use wsdl2h option -g to auto-generate)

  - <gml:Sphere> (use wsdl2h option -g to auto-generate)

  - <gml:PolyhedralSurface> (use wsdl2h option -g to auto-generate)

  - <gml:TriangulatedSurface> (use wsdl2h option -g to auto-generate)

  - <gml:Tin> (use wsdl2h option -g to auto-generate)

  - <gml:AbstractSolid> (use wsdl2h option -g to auto-generate)

  - <gml:solidProperty> (use wsdl2h option -g to auto-generate)

  - <gml:Solid> (use wsdl2h option -g to auto-generate)

  - <gml:Shell> (use wsdl2h option -g to auto-generate)

  - <gml:surfaceMember> (use wsdl2h option -g to auto-generate)

  - <gml:AbstractSurface> (use wsdl2h option -g to auto-generate)

  - <gml:surfaceProperty> (use wsdl2h option -g to auto-generate)

  - <gml:Polygon> (use wsdl2h option -g to auto-generate)

  - <gml:exterior> (use wsdl2h option -g to auto-generate)

  - <gml:interior> (use wsdl2h option -g to auto-generate)

  - <gml:AbstractRing> (use wsdl2h option -g to auto-generate)

  - <gml:LinearRing> (use wsdl2h option -g to auto-generate)

  - <gml:AbstractGeometry> (use wsdl2h option -g to auto-generate)

  - <gml:pos> (use wsdl2h option -g to auto-generate)

  - <gml:posList> (use wsdl2h option -g to auto-generate)

  - <gml:vector> (use wsdl2h option -g to auto-generate)

  - <gml:Envelope> (use wsdl2h option -g to auto-generate)

  - <gml:AbstractGeometricPrimitive> (use wsdl2h option -g to auto-generate)

  - <gml:Point> (use wsdl2h option -g to auto-generate)

  - <gml:pointProperty> (use wsdl2h option -g to auto-generate)

  - <gml:AbstractCurve> (use wsdl2h option -g to auto-generate)

  - <gml:curveProperty> (use wsdl2h option -g to auto-generate)

  - <gml:LineString> (use wsdl2h option -g to auto-generate)

  - <gml:measure> (use wsdl2h option -g to auto-generate)

  - <gml:angle> (use wsdl2h option -g to auto-generate)

  - <gml:unitOfMeasure> (use wsdl2h option -g to auto-generate)

  - <gml:UnitDefinition> (use wsdl2h option -g to auto-generate)

  - <gml:quantityType> (use wsdl2h option -g to auto-generate)

  - <gml:quantityTypeReference> (use wsdl2h option -g to auto-generate)

  - <gml:catalogSymbol> (use wsdl2h option -g to auto-generate)

  - <gml:BaseUnit> (use wsdl2h option -g to auto-generate)

  - <gml:DerivedUnit> (use wsdl2h option -g to auto-generate)

  - <gml:derivationUnitTerm> (use wsdl2h option -g to auto-generate)

  - <gml:ConventionalUnit> (use wsdl2h option -g to auto-generate)

  - <gml:conversionToPreferredUnit> (use wsdl2h option -g to auto-generate)

  - <gml:roughConversionToPreferredUnit> (use wsdl2h option -g to auto-generate)

  - <gml:Definition> (use wsdl2h option -g to auto-generate)

  - <gml:remarks> (use wsdl2h option -g to auto-generate)

  - <gml:Dictionary> (use wsdl2h option -g to auto-generate)

  - <gml:dictionaryEntry> (use wsdl2h option -g to auto-generate)

  - <gml:AbstractObject> (use wsdl2h option -g to auto-generate)

  - <gml:AbstractGML> (use wsdl2h option -g to auto-generate)

  - <gml:abstractAssociationRole> (use wsdl2h option -g to auto-generate)

  - <gml:abstractStrictAssociationRole> (use wsdl2h option -g to auto-generate)

  - <gml:abstractReference> (use wsdl2h option -g to auto-generate)

  - <gml:abstractInlineProperty> (use wsdl2h option -g to auto-generate)

  - <gml:reversePropertyName> (use wsdl2h option -g to auto-generate)

  - <gml:description> (use wsdl2h option -g to auto-generate)

  - <gml:descriptionReference> (use wsdl2h option -g to auto-generate)

  - <gml:name> (use wsdl2h option -g to auto-generate)

  - <gml:identifier> (use wsdl2h option -g to auto-generate)

  - <gml:targetElement> (use wsdl2h option -g to auto-generate)

  - <gml:associationName> (use wsdl2h option -g to auto-generate)

  - <gml:defaultCodeSpace> (use wsdl2h option -g to auto-generate)

  - <gml:gmlProfileSchema> (use wsdl2h option -g to auto-generate)

  - <gml:AbstractCoverage> (use wsdl2h option -g to auto-generate)

  - <gml:AbstractDiscreteCoverage> (use wsdl2h option -g to auto-generate)

  - <gml:AbstractContinuousCoverage> (use wsdl2h option -g to auto-generate)

  - <gml:domainSet> (use wsdl2h option -g to auto-generate)

  - <gml:rangeSet> (use wsdl2h option -g to auto-generate)

  - <gml:DataBlock> (use wsdl2h option -g to auto-generate)

  - <gml:rangeParameters> (use wsdl2h option -g to auto-generate)

  - <gml:tupleList> (use wsdl2h option -g to auto-generate)

  - <gml:doubleOrNilReasonTupleList> (use wsdl2h option -g to auto-generate)

  - <gml:File> (use wsdl2h option -g to auto-generate)

  - <gml:coverageFunction> (use wsdl2h option -g to auto-generate)

  - <gml:CoverageMappingRule> (use wsdl2h option -g to auto-generate)

  - <gml:GridFunction> (use wsdl2h option -g to auto-generate)

  - <gml:MultiPointCoverage> (use wsdl2h option -g to auto-generate)

  - <gml:MultiCurveCoverage> (use wsdl2h option -g to auto-generate)

  - <gml:MultiSurfaceCoverage> (use wsdl2h option -g to auto-generate)

  - <gml:MultiSolidCoverage> (use wsdl2h option -g to auto-generate)

  - <gml:GridCoverage> (use wsdl2h option -g to auto-generate)

  - <gml:RectifiedGridCoverage> (use wsdl2h option -g to auto-generate)

  - <gml:AbstractFeature> (use wsdl2h option -g to auto-generate)

  - <gml:boundedBy> (use wsdl2h option -g to auto-generate)

  - <gml:EnvelopeWithTimePeriod> (use wsdl2h option -g to auto-generate)

  - <gml:locationName> (use wsdl2h option -g to auto-generate)

  - <gml:locationReference> (use wsdl2h option -g to auto-generate)

  - <gml:AbstractTimeObject> (use wsdl2h option -g to auto-generate)

  - <gml:AbstractTimePrimitive> (use wsdl2h option -g to auto-generate)

  - <gml:validTime> (use wsdl2h option -g to auto-generate)

  - <gml:AbstractTimeComplex> (use wsdl2h option -g to auto-generate)

  - <gml:AbstractTimeGeometricPrimitive> (use wsdl2h option -g to auto-generate)

  - <gml:TimeInstant> (use wsdl2h option -g to auto-generate)

  - <gml:TimePeriod> (use wsdl2h option -g to auto-generate)

  - <gml:timePosition> (use wsdl2h option -g to auto-generate)

  - <gml:duration> (use wsdl2h option -g to auto-generate)

  - <gml:timeInterval> (use wsdl2h option -g to auto-generate)

  - <gml:Boolean> @ref _gml__Boolean
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__gml__Boolean(struct soap*, _gml__Boolean*);
    // Writer (returns SOAP_OK on success):
    soap_write__gml__Boolean(struct soap*, _gml__Boolean*);
    @endcode

  - <gml:BooleanList> (use wsdl2h option -g to auto-generate)

  - <gml:Category> @ref _gml__Category
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__gml__Category(struct soap*, _gml__Category*);
    // Writer (returns SOAP_OK on success):
    soap_write__gml__Category(struct soap*, _gml__Category*);
    @endcode

  - <gml:CategoryList> (use wsdl2h option -g to auto-generate)

  - <gml:Count> @ref _gml__Count
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__gml__Count(struct soap*, _gml__Count*);
    // Writer (returns SOAP_OK on success):
    soap_write__gml__Count(struct soap*, _gml__Count*);
    @endcode

  - <gml:CountList> (use wsdl2h option -g to auto-generate)

  - <gml:Quantity> @ref _gml__Quantity
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__gml__Quantity(struct soap*, _gml__Quantity*);
    // Writer (returns SOAP_OK on success):
    soap_write__gml__Quantity(struct soap*, _gml__Quantity*);
    @endcode

  - <gml:QuantityList> (use wsdl2h option -g to auto-generate)

  - <gml:AbstractValue> (use wsdl2h option -g to auto-generate)

  - <gml:AbstractScalarValue> (use wsdl2h option -g to auto-generate)

  - <gml:AbstractScalarValueList> (use wsdl2h option -g to auto-generate)

  - <gml:valueProperty> (use wsdl2h option -g to auto-generate)

  - <gml:valueComponent> (use wsdl2h option -g to auto-generate)

  - <gml:valueComponents> (use wsdl2h option -g to auto-generate)

  - <gml:CompositeValue> (use wsdl2h option -g to auto-generate)

  - <gml:ValueArray> (use wsdl2h option -g to auto-generate)

  - <gml:CategoryExtent> (use wsdl2h option -g to auto-generate)

  - <gml:CountExtent> (use wsdl2h option -g to auto-generate)

  - <gml:QuantityExtent> (use wsdl2h option -g to auto-generate)

  - <gml:Grid> (use wsdl2h option -g to auto-generate)

  - <gml:AbstractImplicitGeometry> (use wsdl2h option -g to auto-generate)

  - <gml:RectifiedGrid> (use wsdl2h option -g to auto-generate)

  - <gml:AbstractSingleCRS> (use wsdl2h option -g to auto-generate)

  - <gml:AbstractGeneralDerivedCRS> (use wsdl2h option -g to auto-generate)

  - <gml:conversion> (use wsdl2h option -g to auto-generate)

  - <gml:CompoundCRS> (use wsdl2h option -g to auto-generate)

  - <gml:componentReferenceSystem> (use wsdl2h option -g to auto-generate)

  - <gml:GeodeticCRS> (use wsdl2h option -g to auto-generate)

  - <gml:ellipsoidalCS> (use wsdl2h option -g to auto-generate)

  - <gml:cartesianCS> (use wsdl2h option -g to auto-generate)

  - <gml:sphericalCS> (use wsdl2h option -g to auto-generate)

  - <gml:geodeticDatum> (use wsdl2h option -g to auto-generate)

  - <gml:VerticalCRS> (use wsdl2h option -g to auto-generate)

  - <gml:verticalCS> (use wsdl2h option -g to auto-generate)

  - <gml:verticalDatum> (use wsdl2h option -g to auto-generate)

  - <gml:ProjectedCRS> (use wsdl2h option -g to auto-generate)

  - <gml:baseGeodeticCRS> (use wsdl2h option -g to auto-generate)

  - <gml:DerivedCRS> (use wsdl2h option -g to auto-generate)

  - <gml:baseCRS> (use wsdl2h option -g to auto-generate)

  - <gml:derivedCRSType> (use wsdl2h option -g to auto-generate)

  - <gml:coordinateSystem> (use wsdl2h option -g to auto-generate)

  - <gml:EngineeringCRS> (use wsdl2h option -g to auto-generate)

  - <gml:cylindricalCS> (use wsdl2h option -g to auto-generate)

  - <gml:linearCS> (use wsdl2h option -g to auto-generate)

  - <gml:polarCS> (use wsdl2h option -g to auto-generate)

  - <gml:userDefinedCS> (use wsdl2h option -g to auto-generate)

  - <gml:engineeringDatum> (use wsdl2h option -g to auto-generate)

  - <gml:ImageCRS> (use wsdl2h option -g to auto-generate)

  - <gml:affineCS> (use wsdl2h option -g to auto-generate)

  - <gml:imageDatum> (use wsdl2h option -g to auto-generate)

  - <gml:TemporalCRS> (use wsdl2h option -g to auto-generate)

  - <gml:timeCS> (use wsdl2h option -g to auto-generate)

  - <gml:temporalDatum> (use wsdl2h option -g to auto-generate)

  - <gml:CoordinateSystemAxis> (use wsdl2h option -g to auto-generate)

  - <gml:axisAbbrev> (use wsdl2h option -g to auto-generate)

  - <gml:axisDirection> (use wsdl2h option -g to auto-generate)

  - <gml:minimumValue> (use wsdl2h option -g to auto-generate)

  - <gml:maximumValue> (use wsdl2h option -g to auto-generate)

  - <gml:rangeMeaning> (use wsdl2h option -g to auto-generate)

  - <gml:AbstractCoordinateSystem> (use wsdl2h option -g to auto-generate)

  - <gml:axis> (use wsdl2h option -g to auto-generate)

  - <gml:EllipsoidalCS> (use wsdl2h option -g to auto-generate)

  - <gml:CartesianCS> (use wsdl2h option -g to auto-generate)

  - <gml:VerticalCS> (use wsdl2h option -g to auto-generate)

  - <gml:TimeCS> (use wsdl2h option -g to auto-generate)

  - <gml:LinearCS> (use wsdl2h option -g to auto-generate)

  - <gml:UserDefinedCS> (use wsdl2h option -g to auto-generate)

  - <gml:SphericalCS> (use wsdl2h option -g to auto-generate)

  - <gml:PolarCS> (use wsdl2h option -g to auto-generate)

  - <gml:CylindricalCS> (use wsdl2h option -g to auto-generate)

  - <gml:AffineCS> (use wsdl2h option -g to auto-generate)

  - <gml:AbstractCRS> (use wsdl2h option -g to auto-generate)

  - <gml:domainOfValidity> @ref _gml__domainOfValidity
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__gml__domainOfValidity(struct soap*, _gml__domainOfValidity*);
    // Writer (returns SOAP_OK on success):
    soap_write__gml__domainOfValidity(struct soap*, _gml__domainOfValidity*);
    @endcode

  - <gml:scope> (use wsdl2h option -g to auto-generate)

  - <gml:AbstractDatum> (use wsdl2h option -g to auto-generate)

  - <gml:anchorDefinition> (use wsdl2h option -g to auto-generate)

  - <gml:realizationEpoch> (use wsdl2h option -g to auto-generate)

  - <gml:GeodeticDatum> (use wsdl2h option -g to auto-generate)

  - <gml:primeMeridian> (use wsdl2h option -g to auto-generate)

  - <gml:ellipsoid> (use wsdl2h option -g to auto-generate)

  - <gml:Ellipsoid> (use wsdl2h option -g to auto-generate)

  - <gml:semiMajorAxis> (use wsdl2h option -g to auto-generate)

  - <gml:secondDefiningParameter> @ref _gml__secondDefiningParameter
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__gml__secondDefiningParameter(struct soap*, _gml__secondDefiningParameter*);
    // Writer (returns SOAP_OK on success):
    soap_write__gml__secondDefiningParameter(struct soap*, _gml__secondDefiningParameter*);
    @endcode

  - <gml:SecondDefiningParameter> @ref _gml__SecondDefiningParameter
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__gml__SecondDefiningParameter(struct soap*, _gml__SecondDefiningParameter*);
    // Writer (returns SOAP_OK on success):
    soap_write__gml__SecondDefiningParameter(struct soap*, _gml__SecondDefiningParameter*);
    @endcode

  - <gml:PrimeMeridian> (use wsdl2h option -g to auto-generate)

  - <gml:greenwichLongitude> (use wsdl2h option -g to auto-generate)

  - <gml:EngineeringDatum> (use wsdl2h option -g to auto-generate)

  - <gml:ImageDatum> (use wsdl2h option -g to auto-generate)

  - <gml:pixelInCell> (use wsdl2h option -g to auto-generate)

  - <gml:VerticalDatum> (use wsdl2h option -g to auto-generate)

  - <gml:TemporalDatum> (use wsdl2h option -g to auto-generate)

  - <gml:origin> (use wsdl2h option -g to auto-generate)

  - <gml:AbstractCoordinateOperation> (use wsdl2h option -g to auto-generate)

  - <gml:operationVersion> (use wsdl2h option -g to auto-generate)

  - <gml:coordinateOperationAccuracy> @ref _gml__coordinateOperationAccuracy
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__gml__coordinateOperationAccuracy(struct soap*, _gml__coordinateOperationAccuracy*);
    // Writer (returns SOAP_OK on success):
    soap_write__gml__coordinateOperationAccuracy(struct soap*, _gml__coordinateOperationAccuracy*);
    @endcode

  - <gml:sourceCRS> (use wsdl2h option -g to auto-generate)

  - <gml:targetCRS> (use wsdl2h option -g to auto-generate)

  - <gml:AbstractSingleOperation> (use wsdl2h option -g to auto-generate)

  - <gml:AbstractGeneralConversion> (use wsdl2h option -g to auto-generate)

  - <gml:AbstractGeneralTransformation> (use wsdl2h option -g to auto-generate)

  - <gml:ConcatenatedOperation> (use wsdl2h option -g to auto-generate)

  - <gml:coordOperation> (use wsdl2h option -g to auto-generate)

  - <gml:PassThroughOperation> (use wsdl2h option -g to auto-generate)

  - <gml:modifiedCoordinate> (use wsdl2h option -g to auto-generate)

  - <gml:Conversion> (use wsdl2h option -g to auto-generate)

  - <gml:method> (use wsdl2h option -g to auto-generate)

  - <gml:parameterValue> (use wsdl2h option -g to auto-generate)

  - <gml:Transformation> (use wsdl2h option -g to auto-generate)

  - <gml:AbstractGeneralParameterValue> (use wsdl2h option -g to auto-generate)

  - <gml:ParameterValue> (use wsdl2h option -g to auto-generate)

  - <gml:value> (use wsdl2h option -g to auto-generate)

  - <gml:stringValue> (use wsdl2h option -g to auto-generate)

  - <gml:integerValue> (use wsdl2h option -g to auto-generate)

  - <gml:booleanValue> (use wsdl2h option -g to auto-generate)

  - <gml:valueList> (use wsdl2h option -g to auto-generate)

  - <gml:integerValueList> (use wsdl2h option -g to auto-generate)

  - <gml:valueFile> (use wsdl2h option -g to auto-generate)

  - <gml:operationParameter> (use wsdl2h option -g to auto-generate)

  - <gml:ParameterValueGroup> (use wsdl2h option -g to auto-generate)

  - <gml:group> (use wsdl2h option -g to auto-generate)

  - <gml:OperationMethod> (use wsdl2h option -g to auto-generate)

  - <gml:formulaCitation> @ref _gml__formulaCitation
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__gml__formulaCitation(struct soap*, _gml__formulaCitation*);
    // Writer (returns SOAP_OK on success):
    soap_write__gml__formulaCitation(struct soap*, _gml__formulaCitation*);
    @endcode

  - <gml:formula> (use wsdl2h option -g to auto-generate)

  - <gml:sourceDimensions> (use wsdl2h option -g to auto-generate)

  - <gml:targetDimensions> (use wsdl2h option -g to auto-generate)

  - <gml:parameter> (use wsdl2h option -g to auto-generate)

  - <gml:AbstractGeneralOperationParameter> (use wsdl2h option -g to auto-generate)

  - <gml:minimumOccurs> (use wsdl2h option -g to auto-generate)

  - <gml:OperationParameter> (use wsdl2h option -g to auto-generate)

  - <gml:OperationParameterGroup> (use wsdl2h option -g to auto-generate)

  - <gml:maximumOccurs> (use wsdl2h option -g to auto-generate)

  - <gml:Observation> (use wsdl2h option -g to auto-generate)

  - <gml:using> (use wsdl2h option -g to auto-generate)

  - <gml:target> (use wsdl2h option -g to auto-generate)

  - <gml:subject> (use wsdl2h option -g to auto-generate)

  - <gml:resultOf> (use wsdl2h option -g to auto-generate)

  - <gml:DirectedObservation> (use wsdl2h option -g to auto-generate)

  - <gml:DirectedObservationAtDistance> (use wsdl2h option -g to auto-generate)

  - <gml:direction> (use wsdl2h option -g to auto-generate)

  - <gml:TimeReferenceSystem> (use wsdl2h option -g to auto-generate)

  - <gml:TimeCoordinateSystem> (use wsdl2h option -g to auto-generate)

  - <gml:TimeCalendar> (use wsdl2h option -g to auto-generate)

  - <gml:TimeCalendarEra> (use wsdl2h option -g to auto-generate)

  - <gml:TimeClock> (use wsdl2h option -g to auto-generate)

  - <gml:TimeOrdinalReferenceSystem> (use wsdl2h option -g to auto-generate)

  - <gml:TimeOrdinalEra> (use wsdl2h option -g to auto-generate)

  - <gml:AbstractTimeTopologyPrimitive> (use wsdl2h option -g to auto-generate)

  - <gml:TimeTopologyComplex> (use wsdl2h option -g to auto-generate)

  - <gml:TimeNode> (use wsdl2h option -g to auto-generate)

  - <gml:TimeEdge> (use wsdl2h option -g to auto-generate)

  - <gml:Null> (use wsdl2h option -g to auto-generate)

  - <gml:anchorPoint> (use wsdl2h option -g to auto-generate)

  - <gml:datumRef> (use wsdl2h option -g to auto-generate)

  - <gml:usesPrimeMeridian> (use wsdl2h option -g to auto-generate)

  - <gml:usesEllipsoid> (use wsdl2h option -g to auto-generate)

  - <gml:geodeticDatumRef> (use wsdl2h option -g to auto-generate)

  - <gml:ellipsoidRef> (use wsdl2h option -g to auto-generate)

  - <gml:primeMeridianRef> (use wsdl2h option -g to auto-generate)

  - <gml:engineeringDatumRef> (use wsdl2h option -g to auto-generate)

  - <gml:imageDatumRef> (use wsdl2h option -g to auto-generate)

  - <gml:verticalDatumRef> (use wsdl2h option -g to auto-generate)

  - <gml:temporalDatumRef> (use wsdl2h option -g to auto-generate)

  - <gml:coordinateOperationRef> (use wsdl2h option -g to auto-generate)

  - <gml:singleOperationRef> (use wsdl2h option -g to auto-generate)

  - <gml:AbstractOperation> (use wsdl2h option -g to auto-generate)

  - <gml:operationRef> (use wsdl2h option -g to auto-generate)

  - <gml:generalConversionRef> (use wsdl2h option -g to auto-generate)

  - <gml:generalTransformationRef> (use wsdl2h option -g to auto-generate)

  - <gml:usesSingleOperation> (use wsdl2h option -g to auto-generate)

  - <gml:concatenatedOperationRef> (use wsdl2h option -g to auto-generate)

  - <gml:usesOperation> (use wsdl2h option -g to auto-generate)

  - <gml:passThroughOperationRef> (use wsdl2h option -g to auto-generate)

  - <gml:usesMethod> (use wsdl2h option -g to auto-generate)

  - <gml:usesValue> (use wsdl2h option -g to auto-generate)

  - <gml:conversionRef> (use wsdl2h option -g to auto-generate)

  - <gml:transformationRef> (use wsdl2h option -g to auto-generate)

  - <gml:dmsAngleValue> (use wsdl2h option -g to auto-generate)

  - <gml:valueOfParameter> (use wsdl2h option -g to auto-generate)

  - <gml:includesValue> (use wsdl2h option -g to auto-generate)

  - <gml:valuesOfGroup> (use wsdl2h option -g to auto-generate)

  - <gml:methodFormula> (use wsdl2h option -g to auto-generate)

  - <gml:usesParameter> (use wsdl2h option -g to auto-generate)

  - <gml:operationMethodRef> (use wsdl2h option -g to auto-generate)

  - <gml:abstractGeneralOperationParameterRef> (use wsdl2h option -g to auto-generate)

  - <gml:operationParameterRef> (use wsdl2h option -g to auto-generate)

  - <gml:includesParameter> (use wsdl2h option -g to auto-generate)

  - <gml:operationParameterGroupRef> (use wsdl2h option -g to auto-generate)

  - <gml:referenceSystemRef> (use wsdl2h option -g to auto-generate)

  - <gml:crsRef> (use wsdl2h option -g to auto-generate)

  - <gml:coordinateSystemAxisRef> (use wsdl2h option -g to auto-generate)

  - <gml:usesAxis> (use wsdl2h option -g to auto-generate)

  - <gml:coordinateSystemRef> (use wsdl2h option -g to auto-generate)

  - <gml:ellipsoidalCSRef> (use wsdl2h option -g to auto-generate)

  - <gml:cartesianCSRef> (use wsdl2h option -g to auto-generate)

  - <gml:verticalCSRef> (use wsdl2h option -g to auto-generate)

  - <gml:TemporalCS> (use wsdl2h option -g to auto-generate)

  - <gml:temporalCSRef> (use wsdl2h option -g to auto-generate)

  - <gml:linearCSRef> (use wsdl2h option -g to auto-generate)

  - <gml:userDefinedCSRef> (use wsdl2h option -g to auto-generate)

  - <gml:sphericalCSRef> (use wsdl2h option -g to auto-generate)

  - <gml:polarCSRef> (use wsdl2h option -g to auto-generate)

  - <gml:cylindricalCSRef> (use wsdl2h option -g to auto-generate)

  - <gml:ObliqueCartesianCS> (use wsdl2h option -g to auto-generate)

  - <gml:obliqueCartesianCSRef> (use wsdl2h option -g to auto-generate)

  - <gml:singleCRSRef> (use wsdl2h option -g to auto-generate)

  - <gml:definedByConversion> (use wsdl2h option -g to auto-generate)

  - <gml:includesSingleCRS> (use wsdl2h option -g to auto-generate)

  - <gml:compoundCRSRef> (use wsdl2h option -g to auto-generate)

  - <gml:usesEllipsoidalCS> (use wsdl2h option -g to auto-generate)

  - <gml:usesCartesianCS> (use wsdl2h option -g to auto-generate)

  - <gml:usesSphericalCS> (use wsdl2h option -g to auto-generate)

  - <gml:usesGeodeticDatum> (use wsdl2h option -g to auto-generate)

  - <gml:usesVerticalCS> (use wsdl2h option -g to auto-generate)

  - <gml:usesVerticalDatum> (use wsdl2h option -g to auto-generate)

  - <gml:verticalCRSRef> (use wsdl2h option -g to auto-generate)

  - <gml:baseGeographicCRS> (use wsdl2h option -g to auto-generate)

  - <gml:projectedCRSRef> (use wsdl2h option -g to auto-generate)

  - <gml:usesCS> (use wsdl2h option -g to auto-generate)

  - <gml:derivedCRSRef> (use wsdl2h option -g to auto-generate)

  - <gml:usesEngineeringDatum> (use wsdl2h option -g to auto-generate)

  - <gml:engineeringCRSRef> (use wsdl2h option -g to auto-generate)

  - <gml:usesAffineCS> (use wsdl2h option -g to auto-generate)

  - <gml:usesImageDatum> (use wsdl2h option -g to auto-generate)

  - <gml:usesObliqueCartesianCS> (use wsdl2h option -g to auto-generate)

  - <gml:imageCRSRef> (use wsdl2h option -g to auto-generate)

  - <gml:usesTimeCS> (use wsdl2h option -g to auto-generate)

  - <gml:usesTemporalCS> (use wsdl2h option -g to auto-generate)

  - <gml:usesTemporalDatum> (use wsdl2h option -g to auto-generate)

  - <gml:temporalCRSRef> (use wsdl2h option -g to auto-generate)

  - <gml:GeographicCRS> (use wsdl2h option -g to auto-generate)

  - <gml:geographicCRSRef> (use wsdl2h option -g to auto-generate)

  - <gml:GeocentricCRS> (use wsdl2h option -g to auto-generate)

  - <gml:geocentricCRSRef> (use wsdl2h option -g to auto-generate)

  - <gml:dmsAngle> (use wsdl2h option -g to auto-generate)

  - <gml:degrees> (use wsdl2h option -g to auto-generate)

  - <gml:decimalMinutes> (use wsdl2h option -g to auto-generate)

  - <gml:minutes> (use wsdl2h option -g to auto-generate)

  - <gml:seconds> (use wsdl2h option -g to auto-generate)

  - <gml:member> (use wsdl2h option -g to auto-generate)

  - <gml:members> (use wsdl2h option -g to auto-generate)

  - <gml:metaDataProperty> (use wsdl2h option -g to auto-generate)

  - <gml:Bag> (use wsdl2h option -g to auto-generate)

  - <gml:Array> (use wsdl2h option -g to auto-generate)

  - <gml:AbstractMetaData> (use wsdl2h option -g to auto-generate)

  - <gml:GenericMetaData> (use wsdl2h option -g to auto-generate)

  - <gml:coordinates> (use wsdl2h option -g to auto-generate)

  - <gml:pointRep> (use wsdl2h option -g to auto-generate)

  - <gml:location> (use wsdl2h option -g to auto-generate)

  - <gml:LocationString> (use wsdl2h option -g to auto-generate)

  - <gml:LocationKeyWord> (use wsdl2h option -g to auto-generate)

  - <gml:priorityLocation> (use wsdl2h option -g to auto-generate)

  - <gml:featureMember> (use wsdl2h option -g to auto-generate)

  - <gml:featureProperty> (use wsdl2h option -g to auto-generate)

  - <gml:featureMembers> (use wsdl2h option -g to auto-generate)

  - <gml:AbstractFeatureCollection> (use wsdl2h option -g to auto-generate)

  - <gml:FeatureCollection> (use wsdl2h option -g to auto-generate)

  - <gml:track> (use wsdl2h option -g to auto-generate)

  - <gml:DefinitionCollection> (use wsdl2h option -g to auto-generate)

  - <gml:definitionMember> (use wsdl2h option -g to auto-generate)

  - <gml:indirectEntry> (use wsdl2h option -g to auto-generate)

  - <gml:DefinitionProxy> (use wsdl2h option -g to auto-generate)

  - <gml:definitionRef> (use wsdl2h option -g to auto-generate)

  - <gml:MappingRule> (use wsdl2h option -g to auto-generate)

  - <gml:centerOf> (use wsdl2h option -g to auto-generate)

  - <gml:position> (use wsdl2h option -g to auto-generate)

  - <gml:extentOf> (use wsdl2h option -g to auto-generate)

  - <gml:edgeOf> (use wsdl2h option -g to auto-generate)

  - <gml:centerLineOf> (use wsdl2h option -g to auto-generate)

  - <gml:multiLocation> (use wsdl2h option -g to auto-generate)

  - <gml:multiCenterOf> (use wsdl2h option -g to auto-generate)

  - <gml:multiPosition> (use wsdl2h option -g to auto-generate)

  - <gml:multiCenterLineOf> (use wsdl2h option -g to auto-generate)

  - <gml:multiEdgeOf> (use wsdl2h option -g to auto-generate)

  - <gml:multiCoverage> (use wsdl2h option -g to auto-generate)

  - <gml:multiExtentOf> (use wsdl2h option -g to auto-generate)

  - <gml:polygonPatches> (use wsdl2h option -g to auto-generate)

  - <gml:trianglePatches> (use wsdl2h option -g to auto-generate)

  - <gml:multiPointDomain> (use wsdl2h option -g to auto-generate)

  - <gml:multiCurveDomain> (use wsdl2h option -g to auto-generate)

  - <gml:multiSurfaceDomain> (use wsdl2h option -g to auto-generate)

  - <gml:multiSolidDomain> (use wsdl2h option -g to auto-generate)

  - <gml:gridDomain> (use wsdl2h option -g to auto-generate)

  - <gml:rectifiedGridDomain> (use wsdl2h option -g to auto-generate)

  - <gml:generalOperationParameter> (use wsdl2h option -g to auto-generate)

  - <gml:MovingObjectStatus> (use wsdl2h option -g to auto-generate)

  - <gml:status> (use wsdl2h option -g to auto-generate)

  - <gml:statusReference> (use wsdl2h option -g to auto-generate)

  - <gml:topoComplexProperty> (use wsdl2h option -g to auto-generate)

  - <gml:multiPointProperty> (use wsdl2h option -g to auto-generate)

  - <gml:multiCurveProperty> (use wsdl2h option -g to auto-generate)

  - <gml:multiSurfaceProperty> (use wsdl2h option -g to auto-generate)

  - <gml:multiSolidProperty> (use wsdl2h option -g to auto-generate)

  - <gml:multiGeometryProperty> (use wsdl2h option -g to auto-generate)

  - <gml:pointArrayProperty> (use wsdl2h option -g to auto-generate)

  - <gml:curveArrayProperty> (use wsdl2h option -g to auto-generate)

  - <gml:surfaceArrayProperty> (use wsdl2h option -g to auto-generate)

  - <gml:solidArrayProperty> (use wsdl2h option -g to auto-generate)

@section gmd Top-level root elements of schema "http://www.isotc211.org/2005/gmd"

  - <gmd:AbstractDS_Aggregate> (use wsdl2h option -g to auto-generate)

  - <gmd:DS_DataSet> (use wsdl2h option -g to auto-generate)

  - <gmd:DS_OtherAggregate> (use wsdl2h option -g to auto-generate)

  - <gmd:DS_Series> (use wsdl2h option -g to auto-generate)

  - <gmd:DS_Initiative> (use wsdl2h option -g to auto-generate)

  - <gmd:DS_Platform> (use wsdl2h option -g to auto-generate)

  - <gmd:DS_Sensor> (use wsdl2h option -g to auto-generate)

  - <gmd:DS_ProductionSeries> (use wsdl2h option -g to auto-generate)

  - <gmd:DS_StereoMate> (use wsdl2h option -g to auto-generate)

  - <gmd:MD_Metadata> (use wsdl2h option -g to auto-generate)

  - <gmd:MD_GridSpatialRepresentation> (use wsdl2h option -g to auto-generate)

  - <gmd:MD_VectorSpatialRepresentation> (use wsdl2h option -g to auto-generate)

  - <gmd:AbstractMD_SpatialRepresentation> (use wsdl2h option -g to auto-generate)

  - <gmd:MD_Georeferenceable> (use wsdl2h option -g to auto-generate)

  - <gmd:MD_Dimension> (use wsdl2h option -g to auto-generate)

  - <gmd:MD_Georectified> (use wsdl2h option -g to auto-generate)

  - <gmd:MD_GeometricObjects> (use wsdl2h option -g to auto-generate)

  - <gmd:MD_PixelOrientationCode> (use wsdl2h option -g to auto-generate)

  - <gmd:MD_TopologyLevelCode> (use wsdl2h option -g to auto-generate)

  - <gmd:MD_GeometricObjectTypeCode> (use wsdl2h option -g to auto-generate)

  - <gmd:MD_CellGeometryCode> (use wsdl2h option -g to auto-generate)

  - <gmd:MD_DimensionNameTypeCode> (use wsdl2h option -g to auto-generate)

  - <gmd:CI_ResponsibleParty> (use wsdl2h option -g to auto-generate)

  - <gmd:CI_Citation> (use wsdl2h option -g to auto-generate)

  - <gmd:CI_Address> (use wsdl2h option -g to auto-generate)

  - <gmd:CI_OnlineResource> (use wsdl2h option -g to auto-generate)

  - <gmd:CI_Contact> (use wsdl2h option -g to auto-generate)

  - <gmd:CI_Telephone> (use wsdl2h option -g to auto-generate)

  - <gmd:CI_Date> (use wsdl2h option -g to auto-generate)

  - <gmd:CI_Series> (use wsdl2h option -g to auto-generate)

  - <gmd:URL> (use wsdl2h option -g to auto-generate)

  - <gmd:CI_RoleCode> (use wsdl2h option -g to auto-generate)

  - <gmd:CI_PresentationFormCode> (use wsdl2h option -g to auto-generate)

  - <gmd:CI_OnLineFunctionCode> (use wsdl2h option -g to auto-generate)

  - <gmd:CI_DateTypeCode> (use wsdl2h option -g to auto-generate)

  - <gmd:RS_Identifier> (use wsdl2h option -g to auto-generate)

  - <gmd:MD_ReferenceSystem> (use wsdl2h option -g to auto-generate)

  - <gmd:MD_Identifier> (use wsdl2h option -g to auto-generate)

  - <gmd:AbstractRS_ReferenceSystem> (use wsdl2h option -g to auto-generate)

  - <gmd:EX_TemporalExtent> (use wsdl2h option -g to auto-generate)

  - <gmd:EX_VerticalExtent> (use wsdl2h option -g to auto-generate)

  - <gmd:EX_BoundingPolygon> (use wsdl2h option -g to auto-generate)

  - <gmd:EX_Extent> (use wsdl2h option -g to auto-generate)

  - <gmd:AbstractEX_GeographicExtent> (use wsdl2h option -g to auto-generate)

  - <gmd:EX_GeographicBoundingBox> (use wsdl2h option -g to auto-generate)

  - <gmd:EX_SpatialTemporalExtent> (use wsdl2h option -g to auto-generate)

  - <gmd:EX_GeographicDescription> (use wsdl2h option -g to auto-generate)

  - <gmd:MD_ExtendedElementInformation> (use wsdl2h option -g to auto-generate)

  - <gmd:MD_MetadataExtensionInformation> (use wsdl2h option -g to auto-generate)

  - <gmd:MD_ObligationCode> (use wsdl2h option -g to auto-generate)

  - <gmd:MD_DatatypeCode> (use wsdl2h option -g to auto-generate)

  - <gmd:MD_FeatureCatalogueDescription> (use wsdl2h option -g to auto-generate)

  - <gmd:MD_CoverageDescription> (use wsdl2h option -g to auto-generate)

  - <gmd:MD_ImageDescription> (use wsdl2h option -g to auto-generate)

  - <gmd:AbstractMD_ContentInformation> (use wsdl2h option -g to auto-generate)

  - <gmd:MD_RangeDimension> (use wsdl2h option -g to auto-generate)

  - <gmd:MD_Band> (use wsdl2h option -g to auto-generate)

  - <gmd:MD_CoverageContentTypeCode> (use wsdl2h option -g to auto-generate)

  - <gmd:MD_ImagingConditionCode> (use wsdl2h option -g to auto-generate)

  - <gmd:MD_ApplicationSchemaInformation> (use wsdl2h option -g to auto-generate)

  - <gmd:MD_PortrayalCatalogueReference> (use wsdl2h option -g to auto-generate)

  - <gmd:LI_ProcessStep> (use wsdl2h option -g to auto-generate)

  - <gmd:LI_Source> (use wsdl2h option -g to auto-generate)

  - <gmd:LI_Lineage> (use wsdl2h option -g to auto-generate)

  - <gmd:DQ_ConformanceResult> (use wsdl2h option -g to auto-generate)

  - <gmd:DQ_QuantitativeResult> (use wsdl2h option -g to auto-generate)

  - <gmd:AbstractDQ_Result> (use wsdl2h option -g to auto-generate)

  - <gmd:DQ_TemporalValidity> (use wsdl2h option -g to auto-generate)

  - <gmd:DQ_TemporalConsistency> (use wsdl2h option -g to auto-generate)

  - <gmd:DQ_AccuracyOfATimeMeasurement> (use wsdl2h option -g to auto-generate)

  - <gmd:DQ_QuantitativeAttributeAccuracy> (use wsdl2h option -g to auto-generate)

  - <gmd:DQ_NonQuantitativeAttributeAccuracy> (use wsdl2h option -g to auto-generate)

  - <gmd:DQ_ThematicClassificationCorrectness> (use wsdl2h option -g to auto-generate)

  - <gmd:DQ_RelativeInternalPositionalAccuracy> (use wsdl2h option -g to auto-generate)

  - <gmd:DQ_GriddedDataPositionalAccuracy> (use wsdl2h option -g to auto-generate)

  - <gmd:DQ_AbsoluteExternalPositionalAccuracy> (use wsdl2h option -g to auto-generate)

  - <gmd:DQ_TopologicalConsistency> (use wsdl2h option -g to auto-generate)

  - <gmd:DQ_FormatConsistency> (use wsdl2h option -g to auto-generate)

  - <gmd:DQ_DomainConsistency> (use wsdl2h option -g to auto-generate)

  - <gmd:DQ_ConceptualConsistency> (use wsdl2h option -g to auto-generate)

  - <gmd:DQ_CompletenessOmission> (use wsdl2h option -g to auto-generate)

  - <gmd:DQ_CompletenessCommission> (use wsdl2h option -g to auto-generate)

  - <gmd:AbstractDQ_TemporalAccuracy> (use wsdl2h option -g to auto-generate)

  - <gmd:AbstractDQ_ThematicAccuracy> (use wsdl2h option -g to auto-generate)

  - <gmd:AbstractDQ_PositionalAccuracy> (use wsdl2h option -g to auto-generate)

  - <gmd:AbstractDQ_LogicalConsistency> (use wsdl2h option -g to auto-generate)

  - <gmd:AbstractDQ_Completeness> (use wsdl2h option -g to auto-generate)

  - <gmd:AbstractDQ_Element> (use wsdl2h option -g to auto-generate)

  - <gmd:DQ_DataQuality> (use wsdl2h option -g to auto-generate)

  - <gmd:DQ_Scope> (use wsdl2h option -g to auto-generate)

  - <gmd:DQ_EvaluationMethodTypeCode> (use wsdl2h option -g to auto-generate)

  - <gmd:AbstractMD_Identification> (use wsdl2h option -g to auto-generate)

  - <gmd:MD_BrowseGraphic> (use wsdl2h option -g to auto-generate)

  - <gmd:MD_DataIdentification> (use wsdl2h option -g to auto-generate)

  - <gmd:MD_ServiceIdentification> (use wsdl2h option -g to auto-generate)

  - <gmd:MD_RepresentativeFraction> (use wsdl2h option -g to auto-generate)

  - <gmd:MD_Usage> (use wsdl2h option -g to auto-generate)

  - <gmd:MD_Keywords> (use wsdl2h option -g to auto-generate)

  - <gmd:DS_Association> (use wsdl2h option -g to auto-generate)

  - <gmd:MD_AggregateInformation> (use wsdl2h option -g to auto-generate)

  - <gmd:MD_Resolution> (use wsdl2h option -g to auto-generate)

  - <gmd:MD_TopicCategoryCode> (use wsdl2h option -g to auto-generate)

  - <gmd:MD_CharacterSetCode> (use wsdl2h option -g to auto-generate)

  - <gmd:MD_SpatialRepresentationTypeCode> (use wsdl2h option -g to auto-generate)

  - <gmd:MD_ProgressCode> (use wsdl2h option -g to auto-generate)

  - <gmd:MD_KeywordTypeCode> (use wsdl2h option -g to auto-generate)

  - <gmd:DS_AssociationTypeCode> (use wsdl2h option -g to auto-generate)

  - <gmd:DS_InitiativeTypeCode> (use wsdl2h option -g to auto-generate)

  - <gmd:MD_Constraints> (use wsdl2h option -g to auto-generate)

  - <gmd:MD_LegalConstraints> (use wsdl2h option -g to auto-generate)

  - <gmd:MD_SecurityConstraints> (use wsdl2h option -g to auto-generate)

  - <gmd:MD_ClassificationCode> (use wsdl2h option -g to auto-generate)

  - <gmd:MD_RestrictionCode> (use wsdl2h option -g to auto-generate)

  - <gmd:MD_Medium> (use wsdl2h option -g to auto-generate)

  - <gmd:MD_DigitalTransferOptions> (use wsdl2h option -g to auto-generate)

  - <gmd:MD_StandardOrderProcess> (use wsdl2h option -g to auto-generate)

  - <gmd:MD_Distributor> (use wsdl2h option -g to auto-generate)

  - <gmd:MD_Distribution> (use wsdl2h option -g to auto-generate)

  - <gmd:MD_Format> (use wsdl2h option -g to auto-generate)

  - <gmd:MD_DistributionUnits> (use wsdl2h option -g to auto-generate)

  - <gmd:MD_MediumFormatCode> (use wsdl2h option -g to auto-generate)

  - <gmd:MD_MediumNameCode> (use wsdl2h option -g to auto-generate)

  - <gmd:MD_MaintenanceInformation> (use wsdl2h option -g to auto-generate)

  - <gmd:MD_ScopeDescription> (use wsdl2h option -g to auto-generate)

  - <gmd:MD_MaintenanceFrequencyCode> (use wsdl2h option -g to auto-generate)

  - <gmd:MD_ScopeCode> (use wsdl2h option -g to auto-generate)

  - <gmd:PT_FreeText> (use wsdl2h option -g to auto-generate)

  - <gmd:PT_Locale> (use wsdl2h option -g to auto-generate)

  - <gmd:LocalisedCharacterString> (use wsdl2h option -g to auto-generate)

  - <gmd:PT_LocaleContainer> (use wsdl2h option -g to auto-generate)

  - <gmd:LanguageCode> (use wsdl2h option -g to auto-generate)

  - <gmd:Country> (use wsdl2h option -g to auto-generate)

@section xlink Top-level root elements of schema "http://www.w3.org/1999/xlink"

  - <xlink:title> @ref _xlink__title
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__xlink__title(struct soap*, char*);
    // Writer (returns SOAP_OK on success):
    soap_write__xlink__title(struct soap*, char*);
    @endcode

  - <xlink:resource> (use wsdl2h option -g to auto-generate)

  - <xlink:locator> (use wsdl2h option -g to auto-generate)

  - <xlink:arc> (use wsdl2h option -g to auto-generate)

@section gco Top-level root elements of schema "http://www.isotc211.org/2005/gco"

  - <gco:TypeName> (use wsdl2h option -g to auto-generate)

  - <gco:MemberName> (use wsdl2h option -g to auto-generate)

  - <gco:Multiplicity> (use wsdl2h option -g to auto-generate)

  - <gco:MultiplicityRange> (use wsdl2h option -g to auto-generate)

  - <gco:Measure> (use wsdl2h option -g to auto-generate)

  - <gco:Length> (use wsdl2h option -g to auto-generate)

  - <gco:Angle> (use wsdl2h option -g to auto-generate)

  - <gco:Scale> (use wsdl2h option -g to auto-generate)

  - <gco:Distance> (use wsdl2h option -g to auto-generate)

  - <gco:CharacterString> (use wsdl2h option -g to auto-generate)

  - <gco:Boolean> (use wsdl2h option -g to auto-generate)

  - <gco:AbstractGenericName> (use wsdl2h option -g to auto-generate)

  - <gco:LocalName> (use wsdl2h option -g to auto-generate)

  - <gco:ScopedName> (use wsdl2h option -g to auto-generate)

  - <gco:DateTime> (use wsdl2h option -g to auto-generate)

  - <gco:Date> (use wsdl2h option -g to auto-generate)

  - <gco:Decimal> (use wsdl2h option -g to auto-generate)

  - <gco:Real> (use wsdl2h option -g to auto-generate)

  - <gco:Integer> (use wsdl2h option -g to auto-generate)

  - <gco:UnlimitedInteger> (use wsdl2h option -g to auto-generate)

  - <gco:Record> @ref _gco__Record
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__gco__Record(struct soap*, _XML);
    // Writer (returns SOAP_OK on success):
    soap_write__gco__Record(struct soap*, _XML);
    @endcode

  - <gco:RecordType> (use wsdl2h option -g to auto-generate)

  - <gco:Binary> (use wsdl2h option -g to auto-generate)

  - <gco:AbstractObject> (use wsdl2h option -g to auto-generate)

@section gss Top-level root elements of schema "http://www.isotc211.org/2005/gss"

@section gts Top-level root elements of schema "http://www.isotc211.org/2005/gts"

  - <gts:TM_PeriodDuration> (use wsdl2h option -g to auto-generate)

@section gsr Top-level root elements of schema "http://www.isotc211.org/2005/gsr"

*/

} // namespace plu

/* End of PlannedLandUse_v3.0.h */
