namespace plu {
/* PlannedLandUse_v3.0.h
   Generated by wsdl2h 2.8.40 from PlannedLandUse_v3.0.xsd and ../typemap.dat
   2019-02-08 19:03:44 GMT

   DO NOT INCLUDE THIS FILE DIRECTLY INTO YOUR PROJECT BUILDS
   USE THE soapcpp2-GENERATED SOURCE CODE FILES FOR YOUR PROJECT BUILDS

gSOAP XML Web services tools
Copyright (C) 2000-2016, Robert van Engelen, Genivia Inc. All Rights Reserved.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial use license is available from Genivia Inc., contact@genivia.com
--------------------------------------------------------------------------------
*/

/** @page page_notes Notes

@note HINTS:
 - Run soapcpp2 on PlannedLandUse_v3.0.h to generate the SOAP/XML processing logic.
   Use soapcpp2 -I to specify paths for #import
   To build with STL, 'stl.h' is imported from 'import' dir in package.
   Use soapcpp2 -j to generate improved proxy and server classes.
   Use soapcpp2 -r to generate a report.
 - Use wsdl2h -c and -s to generate pure C code or C++ code without STL.
 - Use 'typemap.dat' to control namespace bindings and type mappings.
   It is strongly recommended to customize the names of the namespace prefixes
   generated by wsdl2h. To do so, modify the prefix bindings in the Namespaces
   section below and add the modified lines to 'typemap.dat' to rerun wsdl2h.
 - Run Doxygen (www.doxygen.org) on this file to generate documentation.
 - Use wsdl2h -R to generate REST operations.
 - Use wsdl2h -nname to use name as the base namespace prefix instead of 'ns'.
 - Use wsdl2h -Nname for service prefix and produce multiple service bindings
 - Use wsdl2h -d to enable DOM support for xsd:anyType.
 - Use wsdl2h -g to auto-generate readers and writers for root elements.
 - Use wsdl2h -b to auto-generate bi-directional operations (duplex ops).
 - Use wsdl2h -U to map XML names to C++ Unicode identifiers instead of _xNNNN.
 - Use wsdl2h -u to disable the generation of unions.
 - Struct/class members serialized as XML attributes are annotated with a '@'.
 - Struct/class members that have a special role are annotated with a '$'.

@warning
   DO NOT INCLUDE THIS ANNOTATED FILE DIRECTLY IN YOUR PROJECT SOURCE CODE.
   USE THE FILES GENERATED BY soapcpp2 FOR YOUR PROJECT'S SOURCE CODE:
   THE soapStub.h FILE CONTAINS THIS CONTENT WITHOUT ANNOTATIONS.

@copyright LICENSE:
@verbatim
--------------------------------------------------------------------------------
gSOAP XML Web services tools
Copyright (C) 2000-2016, Robert van Engelen, Genivia Inc. All Rights Reserved.
The wsdl2h tool and its generated software are released under the GPL.
This software is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
GPL license.

This program is free software; you can redistribute it and/or modify it under
the terms of the GNU General Public License as published by the Free Software
Foundation; either version 2 of the License, or (at your option) any later
version.

This program is distributed in the hope that it will be useful, but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
PARTICULAR PURPOSE. See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with
this program; if not, write to the Free Software Foundation, Inc., 59 Temple
Place, Suite 330, Boston, MA 02111-1307 USA

Author contact information:
engelen@genivia.com / engelen@acm.org

This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial-use license is available from Genivia, Inc., contact@genivia.com
--------------------------------------------------------------------------------
@endverbatim

*/


//gsoapopt c++,w

/******************************************************************************\
 *                                                                            *
 * Definitions                                                                *
 *   http://inspire.ec.europa.eu/schemas/plu/3.0                              *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * $CONTAINER                                                                 *
 *   std::vector                                                              *
 *                                                                            *
\******************************************************************************/

template <class T> class std::vector;

/******************************************************************************\
 *                                                                            *
 * Import                                                                     *
 *                                                                            *
\******************************************************************************/

#import "stl.h"	// enable STL containers when used (option -s removes STL dependency)
#import "xsd.h"	// import primitive XSD types.

/******************************************************************************\
 *                                                                            *
 * Schema Namespaces                                                          *
 *                                                                            *
\******************************************************************************/


/* NOTE:

It is strongly recommended to customize the names of the namespace prefixes
generated by wsdl2h. To do so, modify the prefix bindings below and add the
modified lines to typemap.dat to rerun wsdl2h:

plu = "http://inspire.ec.europa.eu/schemas/plu/3.0"
base = "http://inspire.ec.europa.eu/schemas/base/3.3"
base2 = "http://inspire.ec.europa.eu/schemas/base2/1.0"
lunom = "http://inspire.ec.europa.eu/schemas/lunom/3.0"
sc = "http://www.interactive-instruments.de/ShapeChange/AppInfo"
gml = "http://www.opengis.net/gml/3.2"
gmd = "http://www.isotc211.org/2005/gmd"
xlink = "http://www.w3.org/1999/xlink"
gco = "http://www.isotc211.org/2005/gco"
gss = "http://www.isotc211.org/2005/gss"
gts = "http://www.isotc211.org/2005/gts"
gsr = "http://www.isotc211.org/2005/gsr"

*/

/// <PRE><BLOCKQUOTE>
///   -- Name --
///   planned land use
/// </BLOCKQUOTE></PRE>
#define SOAP_NAMESPACE_OF_plu	"http://inspire.ec.europa.eu/schemas/plu/3.0"
//gsoap plu   schema namespace:	http://inspire.ec.europa.eu/schemas/plu/3.0
//gsoap plu   schema elementForm:	qualified
//gsoap plu   schema attributeForm:	unqualified

/// <PRE><BLOCKQUOTE>
///   -- Definition --
///   schema for basic types used by multiple themes
/// </BLOCKQUOTE></PRE>
#define SOAP_NAMESPACE_OF_base	"http://inspire.ec.europa.eu/schemas/base/3.3"
//gsoap base  schema namespace:	http://inspire.ec.europa.eu/schemas/base/3.3
//gsoap base  schema elementForm:	qualified
//gsoap base  schema attributeForm:	unqualified

/// <PRE><BLOCKQUOTE>
///   -- Definition --
///   schema for additional basic types used by multiple themes
///   -- Description --
///   NOTE The additional types specified with Annex II/III data specifications are placed in a separate schema to maintain backwards compatibility.
/// </BLOCKQUOTE></PRE>
#define SOAP_NAMESPACE_OF_base2	"http://inspire.ec.europa.eu/schemas/base2/1.0"
//gsoap base2 schema namespace:	http://inspire.ec.europa.eu/schemas/base2/1.0
//gsoap base2 schema elementForm:	qualified
//gsoap base2 schema attributeForm:	unqualified

/// <PRE><BLOCKQUOTE>
///   -- Name --
///   land use nomenclature
/// </BLOCKQUOTE></PRE>
#define SOAP_NAMESPACE_OF_lunom	"http://inspire.ec.europa.eu/schemas/lunom/3.0"
//gsoap lunom schema namespace:	http://inspire.ec.europa.eu/schemas/lunom/3.0
//gsoap lunom schema elementForm:	qualified
//gsoap lunom schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_sc	"http://www.interactive-instruments.de/ShapeChange/AppInfo"
//gsoap sc    schema namespace:	http://www.interactive-instruments.de/ShapeChange/AppInfo
//gsoap sc    schema elementForm:	qualified
//gsoap sc    schema attributeForm:	unqualified

/// <PRE><BLOCKQUOTE>
///   GML is an OGC Standard.
///   Copyright (c) 2007, 2010, 2016, 2018 Open Geospatial Consortium.
///   To obtain additional rights of use, visit http://www.opengeospatial.org/legal/ .
/// </BLOCKQUOTE></PRE>
#define SOAP_NAMESPACE_OF_gml	"http://www.opengis.net/gml/3.2"
//gsoap gml   schema namespace:	http://www.opengis.net/gml/3.2
//gsoap gml   schema elementForm:	qualified
//gsoap gml   schema attributeForm:	unqualified

/// <PRE><BLOCKQUOTE>
///   Geographic MetaData (GMD) extensible markup language is a component of the XML Schema Implementation of Geographic Information Metadata documented in ISO/TS 19139:2007. GMD includes all the definitions of http://www.isotc211.org/2005/gmd namespace. The root document of this namespace is the file gmd.xsd.
/// </BLOCKQUOTE></PRE>
#define SOAP_NAMESPACE_OF_gmd	"http://www.isotc211.org/2005/gmd"
//gsoap gmd   schema namespace:	http://www.isotc211.org/2005/gmd
//gsoap gmd   schema elementForm:	qualified
//gsoap gmd   schema attributeForm:	unqualified

/// <PRE><BLOCKQUOTE>
///   This schema document provides attribute declarations and
///   attribute group, complex type and simple type definitions which can be used in
///   the construction of user schemas to define the structure of particular linking
///   constructs, e.g.
///   <xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
///   xmlns:xl="http://www.w3.org/1999/xlink">
///   <xs:import namespace="http://www.w3.org/1999/xlink"
///   location="http://www.w3.org/1999/xlink.xsd">
///   <xs:element name="mySimple">
///   <xs:complexType>
///   ...
///   <xs:attributeGroup ref="xl:simpleAttrs"/>
///   ...
///   </xs:complexType>
///   </xs:element>
///   ...
///   </xs:schema>
/// </BLOCKQUOTE></PRE>
#define SOAP_NAMESPACE_OF_xlink	"http://www.w3.org/1999/xlink"
//gsoap xlink schema namespace:	http://www.w3.org/1999/xlink
//gsoap xlink schema form:	unqualified

/// <PRE><BLOCKQUOTE>
///   Geographic COmmon (GCO) extensible markup language is a component of the XML Schema Implementation of Geographic Information Metadata documented in ISO/TS 19139:2007. GCO includes all the definitions of http://www.isotc211.org/2005/gco namespace. The root document of this namespace is the file gco.xsd.
/// </BLOCKQUOTE></PRE>
#define SOAP_NAMESPACE_OF_gco	"http://www.isotc211.org/2005/gco"
//gsoap gco   schema namespace:	http://www.isotc211.org/2005/gco
//gsoap gco   schema elementForm:	qualified
//gsoap gco   schema attributeForm:	unqualified

/// <PRE><BLOCKQUOTE>
///   Geographic Spatial Schema (GSS) extensible markup language is a component of the XML Schema Implementation of Geographic Information Metadata documented in ISO/TS 19139:2007. GSS includes all the definitions of http://www.isotc211.org/2005/gss namespace. The root document of this namespace is the file gss.xsd.
/// </BLOCKQUOTE></PRE>
#define SOAP_NAMESPACE_OF_gss	"http://www.isotc211.org/2005/gss"
//gsoap gss   schema namespace:	http://www.isotc211.org/2005/gss
//gsoap gss   schema elementForm:	qualified
//gsoap gss   schema attributeForm:	unqualified

/// <PRE><BLOCKQUOTE>
///   Geographic Temporal Schema (GTS) extensible markup language is a component of the XML Schema Implementation of Geographic Information Metadata documented in ISO/TS 19139:2007. GTS includes all the definitions of http://www.isotc211.org/2005/gts namespace. The root document of this namespace is the file gts.xsd.
/// </BLOCKQUOTE></PRE>
#define SOAP_NAMESPACE_OF_gts	"http://www.isotc211.org/2005/gts"
//gsoap gts   schema namespace:	http://www.isotc211.org/2005/gts
//gsoap gts   schema elementForm:	qualified
//gsoap gts   schema attributeForm:	unqualified

/// <PRE><BLOCKQUOTE>
///   Geographic Spatial Referencing (GSR) extensible markup language is a component of the XML Schema Implementation of Geographic Information Metadata documented in ISO/TS 19139:2007. GSR includes all the definitions of http://www.isotc211.org/2005/gsr namespace. The root document of this namespace is the file gsr.xsd.
/// </BLOCKQUOTE></PRE>
#define SOAP_NAMESPACE_OF_gsr	"http://www.isotc211.org/2005/gsr"
//gsoap gsr   schema namespace:	http://www.isotc211.org/2005/gsr
//gsoap gsr   schema elementForm:	qualified
//gsoap gsr   schema attributeForm:	unqualified

/******************************************************************************\
 *                                                                            *
 * Built-in Schema Types and Top-Level Elements and Attributes                *
 *                                                                            *
\******************************************************************************/

//  xsd.h: should define type xsd__anyType*

/// Built-in XSD type "xs:QName".
//  (declaration of xsd__QName removed by option -m)

//  xsd.h: typemap override of XSD type xsd__QName with xsd__QName

//  xsd.h: typemap override of XSD type xsd__boolean with bool

//  xsd.h: typemap override of XSD type xsd__dateTime with time_t

//  xsd.h: typemap override of XSD type xsd__double with double

//  xsd.h: typemap override of XSD type xsd__integer with long

//  xsd.h: typemap override of XSD type xsd__string with std::string

//  xsd.h: should define type xsd__ID
//  xsd.h: should define type xsd__NCName
//  xsd.h: should define type xsd__Name
//  xsd.h: should define type xsd__anyURI
//  xsd.h: should define type xsd__date
//  xsd.h: should define type xsd__decimal
//  xsd.h: should define type xsd__duration
//  xsd.h: should define type xsd__nonNegativeInteger
//  xsd.h: should define type xsd__positiveInteger
//  xsd.h: should define type xsd__time
//  xsd.h: should define type xsd__token
//  xsd.h: should define attribute _xml__lang


/******************************************************************************\
 *                                                                            *
 * Forward Declarations                                                       *
 *                                                                            *
\******************************************************************************/


//  Forward declaration of class plu__ZoningElementType.
class plu__ZoningElementType;

//  Forward declaration of class plu__ZoningElementPropertyType.
class plu__ZoningElementPropertyType;

//  Forward declaration of class plu__OfficialDocumentationType.
class plu__OfficialDocumentationType;

//  Forward declaration of class plu__OfficialDocumentationPropertyType.
class plu__OfficialDocumentationPropertyType;

//  Forward declaration of class plu__DimensioningIndicationMeasureValueType.
class plu__DimensioningIndicationMeasureValueType;

//  Forward declaration of class plu__DimensioningIndicationMeasureValuePropertyType.
class plu__DimensioningIndicationMeasureValuePropertyType;

//  Forward declaration of class plu__DimensioningIndicationIntegerValueType.
class plu__DimensioningIndicationIntegerValueType;

//  Forward declaration of class plu__DimensioningIndicationIntegerValuePropertyType.
class plu__DimensioningIndicationIntegerValuePropertyType;

//  Forward declaration of class plu__DimensioningIndicationCharacterValueType.
class plu__DimensioningIndicationCharacterValueType;

//  Forward declaration of class plu__DimensioningIndicationCharacterValuePropertyType.
class plu__DimensioningIndicationCharacterValuePropertyType;

//  Forward declaration of class plu__SupplementaryRegulationType.
class plu__SupplementaryRegulationType;

//  Forward declaration of class plu__SupplementaryRegulationPropertyType.
class plu__SupplementaryRegulationPropertyType;

//  Forward declaration of class plu__DimensioningIndicationValueType.
class plu__DimensioningIndicationValueType;

//  Forward declaration of class plu__DimensioningIndicationValuePropertyType.
class plu__DimensioningIndicationValuePropertyType;

//  Forward declaration of class plu__SpatialPlanType.
class plu__SpatialPlanType;

//  Forward declaration of class plu__SpatialPlanPropertyType.
class plu__SpatialPlanPropertyType;

//  Forward declaration of class plu__DimensioningIndicationRealValueType.
class plu__DimensioningIndicationRealValueType;

//  Forward declaration of class plu__DimensioningIndicationRealValuePropertyType.
class plu__DimensioningIndicationRealValuePropertyType;

//  Forward declaration of class plu__OrdinanceValueType.
class plu__OrdinanceValueType;

//  Forward declaration of class plu__OrdinanceValuePropertyType.
class plu__OrdinanceValuePropertyType;

//  Forward declaration of class plu__BackgroundMapValueType.
class plu__BackgroundMapValueType;

//  Forward declaration of class plu__BackgroundMapValuePropertyType.
class plu__BackgroundMapValuePropertyType;

//  Forward declaration of class base__SpatialDataSetType.
class base__SpatialDataSetType;

//  Forward declaration of class base__SpatialDataSetPropertyType.
class base__SpatialDataSetPropertyType;

//  Forward declaration of class base__IdentifierType.
class base__IdentifierType;

//  Forward declaration of class base__IdentifierPropertyType.
class base__IdentifierPropertyType;

//  Forward declaration of class base2__OfficialJournalInformationType.
class base2__OfficialJournalInformationType;

//  Forward declaration of class base2__OfficialJournalInformationPropertyType.
class base2__OfficialJournalInformationPropertyType;

//  Forward declaration of class base2__LegislationCitationType.
class base2__LegislationCitationType;

//  Forward declaration of class base2__LegislationCitationPropertyType.
class base2__LegislationCitationPropertyType;

//  Forward declaration of class base2__ContactType.
class base2__ContactType;

//  Forward declaration of class base2__ContactPropertyType.
class base2__ContactPropertyType;

//  Forward declaration of class base2__RelatedPartyType.
class base2__RelatedPartyType;

//  Forward declaration of class base2__RelatedPartyPropertyType.
class base2__RelatedPartyPropertyType;

//  Forward declaration of class base2__DocumentCitationType.
class base2__DocumentCitationType;

//  Forward declaration of class base2__DocumentCitationPropertyType.
class base2__DocumentCitationPropertyType;

//  Forward declaration of class base2__ThematicIdentifierType.
class base2__ThematicIdentifierType;

//  Forward declaration of class base2__ThematicIdentifierPropertyType.
class base2__ThematicIdentifierPropertyType;

//  Forward declaration of class lunom__HILUCSPresenceType.
class lunom__HILUCSPresenceType;

//  Forward declaration of class lunom__HILUCSPresencePropertyType.
class lunom__HILUCSPresencePropertyType;

//  Forward declaration of class lunom__SpecificPercentageType.
class lunom__SpecificPercentageType;

//  Forward declaration of class lunom__SpecificPercentagePropertyType.
class lunom__SpecificPercentagePropertyType;

//  Forward declaration of class lunom__SpecificPresenceType.
class lunom__SpecificPresenceType;

//  Forward declaration of class lunom__SpecificPresencePropertyType.
class lunom__SpecificPresencePropertyType;

//  Forward declaration of class lunom__HILUCSPercentageType.
class lunom__HILUCSPercentageType;

//  Forward declaration of class lunom__HILUCSPercentagePropertyType.
class lunom__HILUCSPercentagePropertyType;

//  Forward declaration of class _sc__taggedValue.
class _sc__taggedValue;

//  Forward declaration of class gml__DynamicFeatureType.
class gml__DynamicFeatureType;

//  Forward declaration of class gml__DynamicFeatureCollectionType.
class gml__DynamicFeatureCollectionType;

//  Forward declaration of class gml__DynamicFeatureMemberType.
class gml__DynamicFeatureMemberType;

//  Forward declaration of class gml__AbstractTimeSliceType.
class gml__AbstractTimeSliceType;

//  Forward declaration of class gml__HistoryPropertyType.
class gml__HistoryPropertyType;

//  Forward declaration of class gml__AbstractTopologyType.
class gml__AbstractTopologyType;

//  Forward declaration of class gml__AbstractTopoPrimitiveType.
class gml__AbstractTopoPrimitiveType;

//  Forward declaration of class gml__NodeOrEdgePropertyType.
class gml__NodeOrEdgePropertyType;

//  Forward declaration of class gml__NodePropertyType.
class gml__NodePropertyType;

//  Forward declaration of class gml__FaceOrTopoSolidPropertyType.
class gml__FaceOrTopoSolidPropertyType;

//  Forward declaration of class gml__TopoSolidPropertyType.
class gml__TopoSolidPropertyType;

//  Forward declaration of class gml__NodeType.
class gml__NodeType;

//  Forward declaration of class gml__DirectedNodePropertyType.
class gml__DirectedNodePropertyType;

//  Forward declaration of class gml__EdgeType.
class gml__EdgeType;

//  Forward declaration of class gml__DirectedEdgePropertyType.
class gml__DirectedEdgePropertyType;

//  Forward declaration of class gml__FaceType.
class gml__FaceType;

//  Forward declaration of class gml__DirectedFacePropertyType.
class gml__DirectedFacePropertyType;

//  Forward declaration of class gml__TopoSolidType.
class gml__TopoSolidType;

//  Forward declaration of class gml__DirectedTopoSolidPropertyType.
class gml__DirectedTopoSolidPropertyType;

//  Forward declaration of class gml__TopoPointType.
class gml__TopoPointType;

//  Forward declaration of class gml__TopoPointPropertyType.
class gml__TopoPointPropertyType;

//  Forward declaration of class gml__TopoCurveType.
class gml__TopoCurveType;

//  Forward declaration of class gml__TopoCurvePropertyType.
class gml__TopoCurvePropertyType;

//  Forward declaration of class gml__TopoSurfaceType.
class gml__TopoSurfaceType;

//  Forward declaration of class gml__TopoSurfacePropertyType.
class gml__TopoSurfacePropertyType;

//  Forward declaration of class gml__TopoVolumeType.
class gml__TopoVolumeType;

//  Forward declaration of class gml__TopoVolumePropertyType.
class gml__TopoVolumePropertyType;

//  Forward declaration of class gml__TopoComplexType.
class gml__TopoComplexType;

//  Forward declaration of class gml__TopoPrimitiveMemberType.
class gml__TopoPrimitiveMemberType;

//  Forward declaration of class gml__TopoPrimitiveArrayAssociationType.
class gml__TopoPrimitiveArrayAssociationType;

//  Forward declaration of class gml__TopoComplexPropertyType.
class gml__TopoComplexPropertyType;

//  Forward declaration of class gml__GeometricComplexType.
class gml__GeometricComplexType;

//  Forward declaration of class gml__GeometricComplexPropertyType.
class gml__GeometricComplexPropertyType;

//  Forward declaration of class gml__CompositeCurveType.
class gml__CompositeCurveType;

//  Forward declaration of class gml__CompositeSurfaceType.
class gml__CompositeSurfaceType;

//  Forward declaration of class gml__CompositeSolidType.
class gml__CompositeSolidType;

//  Forward declaration of class gml__AbstractGeometricAggregateType.
class gml__AbstractGeometricAggregateType;

//  Forward declaration of class gml__MultiGeometryType.
class gml__MultiGeometryType;

//  Forward declaration of class gml__MultiGeometryPropertyType.
class gml__MultiGeometryPropertyType;

//  Forward declaration of class gml__MultiPointType.
class gml__MultiPointType;

//  Forward declaration of class gml__MultiPointPropertyType.
class gml__MultiPointPropertyType;

//  Forward declaration of class gml__MultiCurveType.
class gml__MultiCurveType;

//  Forward declaration of class gml__MultiCurvePropertyType.
class gml__MultiCurvePropertyType;

//  Forward declaration of class gml__MultiSurfaceType.
class gml__MultiSurfaceType;

//  Forward declaration of class gml__MultiSurfacePropertyType.
class gml__MultiSurfacePropertyType;

//  Forward declaration of class gml__MultiSolidType.
class gml__MultiSolidType;

//  Forward declaration of class gml__MultiSolidPropertyType.
class gml__MultiSolidPropertyType;

//  Forward declaration of class gml__CurveType.
class gml__CurveType;

//  Forward declaration of class gml__OrientableCurveType.
class gml__OrientableCurveType;

//  Forward declaration of class gml__AbstractCurveSegmentType.
class gml__AbstractCurveSegmentType;

//  Forward declaration of class gml__CurveSegmentArrayPropertyType.
class gml__CurveSegmentArrayPropertyType;

//  Forward declaration of class gml__LineStringSegmentType.
class gml__LineStringSegmentType;

//  Forward declaration of class gml__ArcStringType.
class gml__ArcStringType;

//  Forward declaration of class gml__ArcType.
class gml__ArcType;

//  Forward declaration of class gml__CircleType.
class gml__CircleType;

//  Forward declaration of class gml__ArcStringByBulgeType.
class gml__ArcStringByBulgeType;

//  Forward declaration of class gml__ArcByBulgeType.
class gml__ArcByBulgeType;

//  Forward declaration of class gml__ArcByCenterPointType.
class gml__ArcByCenterPointType;

//  Forward declaration of class gml__CircleByCenterPointType.
class gml__CircleByCenterPointType;

//  Forward declaration of class gml__CubicSplineType.
class gml__CubicSplineType;

//  Forward declaration of class gml__BSplineType.
class gml__BSplineType;

//  Forward declaration of class gml__KnotType.
class gml__KnotType;

//  Forward declaration of class gml__KnotPropertyType.
class gml__KnotPropertyType;

//  Forward declaration of class gml__BezierType.
class gml__BezierType;

//  Forward declaration of class gml__OffsetCurveType.
class gml__OffsetCurveType;

//  Forward declaration of class gml__AffinePlacementType.
class gml__AffinePlacementType;

//  Forward declaration of class gml__ClothoidType.
class gml__ClothoidType;

//  Forward declaration of class gml__GeodesicStringType.
class gml__GeodesicStringType;

//  Forward declaration of class gml__GeodesicType.
class gml__GeodesicType;

//  Forward declaration of class gml__SurfaceType.
class gml__SurfaceType;

//  Forward declaration of class gml__OrientableSurfaceType.
class gml__OrientableSurfaceType;

//  Forward declaration of class gml__AbstractSurfacePatchType.
class gml__AbstractSurfacePatchType;

//  Forward declaration of class gml__SurfacePatchArrayPropertyType.
class gml__SurfacePatchArrayPropertyType;

//  Forward declaration of class gml__PolygonPatchType.
class gml__PolygonPatchType;

//  Forward declaration of class gml__TriangleType.
class gml__TriangleType;

//  Forward declaration of class gml__RectangleType.
class gml__RectangleType;

//  Forward declaration of class gml__RingType.
class gml__RingType;

//  Forward declaration of class gml__RingPropertyType.
class gml__RingPropertyType;

//  Forward declaration of class gml__AbstractParametricCurveSurfaceType.
class gml__AbstractParametricCurveSurfaceType;

//  Forward declaration of class gml__AbstractGriddedSurfaceType.
class gml__AbstractGriddedSurfaceType;

//  Forward declaration of class gml__ConeType.
class gml__ConeType;

//  Forward declaration of class gml__CylinderType.
class gml__CylinderType;

//  Forward declaration of class gml__SphereType.
class gml__SphereType;

//  Forward declaration of class gml__TinType.
class gml__TinType;

//  Forward declaration of class gml__LineStringSegmentArrayPropertyType.
class gml__LineStringSegmentArrayPropertyType;

//  Forward declaration of class gml__AbstractSolidType.
class gml__AbstractSolidType;

//  Forward declaration of class gml__SolidPropertyType.
class gml__SolidPropertyType;

//  Forward declaration of class gml__SolidArrayPropertyType.
class gml__SolidArrayPropertyType;

//  Forward declaration of class gml__SolidType.
class gml__SolidType;

//  Forward declaration of class gml__ShellType.
class gml__ShellType;

//  Forward declaration of class gml__ShellPropertyType.
class gml__ShellPropertyType;

//  Forward declaration of class gml__AbstractSurfaceType.
class gml__AbstractSurfaceType;

//  Forward declaration of class gml__SurfacePropertyType.
class gml__SurfacePropertyType;

//  Forward declaration of class gml__SurfaceArrayPropertyType.
class gml__SurfaceArrayPropertyType;

//  Forward declaration of class gml__PolygonType.
class gml__PolygonType;

//  Forward declaration of class gml__AbstractRingType.
class gml__AbstractRingType;

//  Forward declaration of class gml__AbstractRingPropertyType.
class gml__AbstractRingPropertyType;

//  Forward declaration of class gml__LinearRingType.
class gml__LinearRingType;

//  Forward declaration of class gml__LinearRingPropertyType.
class gml__LinearRingPropertyType;

//  Forward declaration of class gml__AbstractGeometryType.
class gml__AbstractGeometryType;

//  Forward declaration of class gml__GeometryPropertyType.
class gml__GeometryPropertyType;

//  Forward declaration of class gml__GeometryArrayPropertyType.
class gml__GeometryArrayPropertyType;

//  Forward declaration of class gml__DirectPositionType.
class gml__DirectPositionType;

//  Forward declaration of class gml__DirectPositionListType.
class gml__DirectPositionListType;

//  Forward declaration of class gml__VectorType.
class gml__VectorType;

//  Forward declaration of class gml__EnvelopeType.
class gml__EnvelopeType;

//  Forward declaration of class gml__AbstractGeometricPrimitiveType.
class gml__AbstractGeometricPrimitiveType;

//  Forward declaration of class gml__GeometricPrimitivePropertyType.
class gml__GeometricPrimitivePropertyType;

//  Forward declaration of class gml__PointType.
class gml__PointType;

//  Forward declaration of class gml__PointPropertyType.
class gml__PointPropertyType;

//  Forward declaration of class gml__PointArrayPropertyType.
class gml__PointArrayPropertyType;

//  Forward declaration of class gml__AbstractCurveType.
class gml__AbstractCurveType;

//  Forward declaration of class gml__CurvePropertyType.
class gml__CurvePropertyType;

//  Forward declaration of class gml__CurveArrayPropertyType.
class gml__CurveArrayPropertyType;

//  Forward declaration of class gml__LineStringType.
class gml__LineStringType;

//  Forward declaration of class gml__LengthType.
class gml__LengthType;

//  Forward declaration of class gml__ScaleType.
class gml__ScaleType;

//  Forward declaration of class gml__TimeType.
class gml__TimeType;

//  Forward declaration of class gml__GridLengthType.
class gml__GridLengthType;

//  Forward declaration of class gml__AreaType.
class gml__AreaType;

//  Forward declaration of class gml__VolumeType.
class gml__VolumeType;

//  Forward declaration of class gml__SpeedType.
class gml__SpeedType;

//  Forward declaration of class gml__AngleType.
class gml__AngleType;

//  Forward declaration of class gml__UnitOfMeasureType.
class gml__UnitOfMeasureType;

//  Forward declaration of class gml__UnitDefinitionType.
class gml__UnitDefinitionType;

//  Forward declaration of class gml__BaseUnitType.
class gml__BaseUnitType;

//  Forward declaration of class gml__DerivedUnitType.
class gml__DerivedUnitType;

//  Forward declaration of class gml__DerivationUnitTermType.
class gml__DerivationUnitTermType;

//  Forward declaration of class gml__ConventionalUnitType.
class gml__ConventionalUnitType;

//  Forward declaration of class gml__ConversionToPreferredUnitType.
class gml__ConversionToPreferredUnitType;

//  Forward declaration of class gml__FormulaType.
class gml__FormulaType;

//  Forward declaration of class gml__DefinitionBaseType.
class gml__DefinitionBaseType;

//  Forward declaration of class gml__DefinitionType.
class gml__DefinitionType;

//  Forward declaration of class gml__DictionaryType.
class gml__DictionaryType;

//  Forward declaration of class gml__DictionaryEntryType.
class gml__DictionaryEntryType;

//  Forward declaration of class gml__AbstractGMLType.
class gml__AbstractGMLType;

//  Forward declaration of class gml__AssociationRoleType.
class gml__AssociationRoleType;

//  Forward declaration of class gml__ReferenceType.
class gml__ReferenceType;

//  Forward declaration of class gml__InlinePropertyType.
class gml__InlinePropertyType;

//  Forward declaration of class gml__AbstractMemberType.
class gml__AbstractMemberType;

//  Forward declaration of class gml__AbstractMetadataPropertyType.
class gml__AbstractMetadataPropertyType;

//  Forward declaration of class gml__CodeType.
class gml__CodeType;

//  Forward declaration of class gml__CodeWithAuthorityType.
class gml__CodeWithAuthorityType;

//  Forward declaration of class gml__MeasureType.
class gml__MeasureType;

//  Forward declaration of class gml__CoordinatesType.
class gml__CoordinatesType;

//  Forward declaration of class gml__CodeListType.
class gml__CodeListType;

//  Forward declaration of class gml__CodeOrNilReasonListType.
class gml__CodeOrNilReasonListType;

//  Forward declaration of class gml__MeasureListType.
class gml__MeasureListType;

//  Forward declaration of class gml__MeasureOrNilReasonListType.
class gml__MeasureOrNilReasonListType;

//  Forward declaration of class gml__AbstractCoverageType.
class gml__AbstractCoverageType;

//  Forward declaration of class gml__DiscreteCoverageType.
class gml__DiscreteCoverageType;

//  Forward declaration of class gml__AbstractContinuousCoverageType.
class gml__AbstractContinuousCoverageType;

//  Forward declaration of class gml__DomainSetType.
class gml__DomainSetType;

//  Forward declaration of class gml__RangeSetType.
class gml__RangeSetType;

//  Forward declaration of class gml__DataBlockType.
class gml__DataBlockType;

//  Forward declaration of class gml__FileType.
class gml__FileType;

//  Forward declaration of class gml__CoverageFunctionType.
class gml__CoverageFunctionType;

//  Forward declaration of class gml__MappingRuleType.
class gml__MappingRuleType;

//  Forward declaration of class gml__GridFunctionType.
class gml__GridFunctionType;

//  Forward declaration of class gml__SequenceRuleType.
class gml__SequenceRuleType;

//  Forward declaration of class gml__AbstractFeatureType.
class gml__AbstractFeatureType;

//  Forward declaration of class gml__FeaturePropertyType.
class gml__FeaturePropertyType;

//  Forward declaration of class gml__BoundingShapeType.
class gml__BoundingShapeType;

//  Forward declaration of class gml__EnvelopeWithTimePeriodType.
class gml__EnvelopeWithTimePeriodType;

//  Forward declaration of class gml__AbstractFeatureMemberType.
class gml__AbstractFeatureMemberType;

//  Forward declaration of class gml__AbstractTimeObjectType.
class gml__AbstractTimeObjectType;

//  Forward declaration of class gml__AbstractTimePrimitiveType.
class gml__AbstractTimePrimitiveType;

//  Forward declaration of class gml__TimePrimitivePropertyType.
class gml__TimePrimitivePropertyType;

//  Forward declaration of class gml__RelatedTimeType.
class gml__RelatedTimeType;

//  Forward declaration of class gml__AbstractTimeComplexType.
class gml__AbstractTimeComplexType;

//  Forward declaration of class gml__AbstractTimeGeometricPrimitiveType.
class gml__AbstractTimeGeometricPrimitiveType;

//  Forward declaration of class gml__TimeInstantType.
class gml__TimeInstantType;

//  Forward declaration of class gml__TimeInstantPropertyType.
class gml__TimeInstantPropertyType;

//  Forward declaration of class gml__TimePeriodType.
class gml__TimePeriodType;

//  Forward declaration of class gml__TimePeriodPropertyType.
class gml__TimePeriodPropertyType;

//  Forward declaration of class gml__TimePositionType.
class gml__TimePositionType;

//  Forward declaration of class gml__TimeIntervalLengthType.
class gml__TimeIntervalLengthType;

//  Forward declaration of class gml__ValuePropertyType.
class gml__ValuePropertyType;

//  Forward declaration of class gml__ValueArrayPropertyType.
class gml__ValueArrayPropertyType;

//  Forward declaration of class gml__CompositeValueType.
class gml__CompositeValueType;

//  Forward declaration of class gml__ValueArrayType.
class gml__ValueArrayType;

//  Forward declaration of class gml__CategoryExtentType.
class gml__CategoryExtentType;

//  Forward declaration of class gml__QuantityExtentType.
class gml__QuantityExtentType;

//  Forward declaration of class gml__BooleanPropertyType.
class gml__BooleanPropertyType;

//  Forward declaration of class gml__CategoryPropertyType.
class gml__CategoryPropertyType;

//  Forward declaration of class gml__QuantityPropertyType.
class gml__QuantityPropertyType;

//  Forward declaration of class gml__CountPropertyType.
class gml__CountPropertyType;

//  Forward declaration of class gml__GridType.
class gml__GridType;

//  Forward declaration of class gml__GridLimitsType.
class gml__GridLimitsType;

//  Forward declaration of class gml__GridEnvelopeType.
class gml__GridEnvelopeType;

//  Forward declaration of class gml__RectifiedGridType.
class gml__RectifiedGridType;

//  Forward declaration of class gml__SingleCRSPropertyType.
class gml__SingleCRSPropertyType;

//  Forward declaration of class gml__AbstractGeneralDerivedCRSType.
class gml__AbstractGeneralDerivedCRSType;

//  Forward declaration of class gml__CompoundCRSType.
class gml__CompoundCRSType;

//  Forward declaration of class gml__CompoundCRSPropertyType.
class gml__CompoundCRSPropertyType;

//  Forward declaration of class gml__GeodeticCRSType.
class gml__GeodeticCRSType;

//  Forward declaration of class gml__GeodeticCRSPropertyType.
class gml__GeodeticCRSPropertyType;

//  Forward declaration of class gml__VerticalCRSType.
class gml__VerticalCRSType;

//  Forward declaration of class gml__VerticalCRSPropertyType.
class gml__VerticalCRSPropertyType;

//  Forward declaration of class gml__ProjectedCRSType.
class gml__ProjectedCRSType;

//  Forward declaration of class gml__ProjectedCRSPropertyType.
class gml__ProjectedCRSPropertyType;

//  Forward declaration of class gml__DerivedCRSType.
class gml__DerivedCRSType;

//  Forward declaration of class gml__DerivedCRSPropertyType.
class gml__DerivedCRSPropertyType;

//  Forward declaration of class gml__EngineeringCRSType.
class gml__EngineeringCRSType;

//  Forward declaration of class gml__EngineeringCRSPropertyType.
class gml__EngineeringCRSPropertyType;

//  Forward declaration of class gml__ImageCRSType.
class gml__ImageCRSType;

//  Forward declaration of class gml__ImageCRSPropertyType.
class gml__ImageCRSPropertyType;

//  Forward declaration of class gml__TemporalCRSType.
class gml__TemporalCRSType;

//  Forward declaration of class gml__TemporalCRSPropertyType.
class gml__TemporalCRSPropertyType;

//  Forward declaration of class gml__CoordinateSystemAxisType.
class gml__CoordinateSystemAxisType;

//  Forward declaration of class gml__CoordinateSystemAxisPropertyType.
class gml__CoordinateSystemAxisPropertyType;

//  Forward declaration of class gml__AbstractCoordinateSystemType.
class gml__AbstractCoordinateSystemType;

//  Forward declaration of class gml__CoordinateSystemPropertyType.
class gml__CoordinateSystemPropertyType;

//  Forward declaration of class gml__EllipsoidalCSType.
class gml__EllipsoidalCSType;

//  Forward declaration of class gml__EllipsoidalCSPropertyType.
class gml__EllipsoidalCSPropertyType;

//  Forward declaration of class gml__CartesianCSType.
class gml__CartesianCSType;

//  Forward declaration of class gml__CartesianCSPropertyType.
class gml__CartesianCSPropertyType;

//  Forward declaration of class gml__VerticalCSType.
class gml__VerticalCSType;

//  Forward declaration of class gml__VerticalCSPropertyType.
class gml__VerticalCSPropertyType;

//  Forward declaration of class gml__TimeCSType.
class gml__TimeCSType;

//  Forward declaration of class gml__TimeCSPropertyType.
class gml__TimeCSPropertyType;

//  Forward declaration of class gml__LinearCSType.
class gml__LinearCSType;

//  Forward declaration of class gml__LinearCSPropertyType.
class gml__LinearCSPropertyType;

//  Forward declaration of class gml__UserDefinedCSType.
class gml__UserDefinedCSType;

//  Forward declaration of class gml__UserDefinedCSPropertyType.
class gml__UserDefinedCSPropertyType;

//  Forward declaration of class gml__SphericalCSType.
class gml__SphericalCSType;

//  Forward declaration of class gml__SphericalCSPropertyType.
class gml__SphericalCSPropertyType;

//  Forward declaration of class gml__PolarCSType.
class gml__PolarCSType;

//  Forward declaration of class gml__PolarCSPropertyType.
class gml__PolarCSPropertyType;

//  Forward declaration of class gml__CylindricalCSType.
class gml__CylindricalCSType;

//  Forward declaration of class gml__CylindricalCSPropertyType.
class gml__CylindricalCSPropertyType;

//  Forward declaration of class gml__AffineCSType.
class gml__AffineCSType;

//  Forward declaration of class gml__AffineCSPropertyType.
class gml__AffineCSPropertyType;

//  Forward declaration of class gml__IdentifiedObjectType.
class gml__IdentifiedObjectType;

//  Forward declaration of class gml__AbstractCRSType.
class gml__AbstractCRSType;

//  Forward declaration of class gml__CRSPropertyType.
class gml__CRSPropertyType;

//  Forward declaration of class gml__AbstractDatumType.
class gml__AbstractDatumType;

//  Forward declaration of class gml__DatumPropertyType.
class gml__DatumPropertyType;

//  Forward declaration of class gml__GeodeticDatumType.
class gml__GeodeticDatumType;

//  Forward declaration of class gml__GeodeticDatumPropertyType.
class gml__GeodeticDatumPropertyType;

//  Forward declaration of class gml__EllipsoidType.
class gml__EllipsoidType;

//  Forward declaration of class gml__EllipsoidPropertyType.
class gml__EllipsoidPropertyType;

//  Forward declaration of class gml__PrimeMeridianType.
class gml__PrimeMeridianType;

//  Forward declaration of class gml__PrimeMeridianPropertyType.
class gml__PrimeMeridianPropertyType;

//  Forward declaration of class gml__EngineeringDatumType.
class gml__EngineeringDatumType;

//  Forward declaration of class gml__EngineeringDatumPropertyType.
class gml__EngineeringDatumPropertyType;

//  Forward declaration of class gml__ImageDatumType.
class gml__ImageDatumType;

//  Forward declaration of class gml__ImageDatumPropertyType.
class gml__ImageDatumPropertyType;

//  Forward declaration of class gml__VerticalDatumType.
class gml__VerticalDatumType;

//  Forward declaration of class gml__VerticalDatumPropertyType.
class gml__VerticalDatumPropertyType;

//  Forward declaration of class gml__TemporalDatumType.
class gml__TemporalDatumType;

//  Forward declaration of class gml__TemporalDatumBaseType.
class gml__TemporalDatumBaseType;

//  Forward declaration of class gml__TemporalDatumPropertyType.
class gml__TemporalDatumPropertyType;

//  Forward declaration of class gml__AbstractCoordinateOperationType.
class gml__AbstractCoordinateOperationType;

//  Forward declaration of class gml__CoordinateOperationPropertyType.
class gml__CoordinateOperationPropertyType;

//  Forward declaration of class gml__SingleOperationPropertyType.
class gml__SingleOperationPropertyType;

//  Forward declaration of class gml__AbstractGeneralConversionType.
class gml__AbstractGeneralConversionType;

//  Forward declaration of class gml__GeneralConversionPropertyType.
class gml__GeneralConversionPropertyType;

//  Forward declaration of class gml__AbstractGeneralTransformationType.
class gml__AbstractGeneralTransformationType;

//  Forward declaration of class gml__GeneralTransformationPropertyType.
class gml__GeneralTransformationPropertyType;

//  Forward declaration of class gml__ConcatenatedOperationType.
class gml__ConcatenatedOperationType;

//  Forward declaration of class gml__ConcatenatedOperationPropertyType.
class gml__ConcatenatedOperationPropertyType;

//  Forward declaration of class gml__PassThroughOperationType.
class gml__PassThroughOperationType;

//  Forward declaration of class gml__PassThroughOperationPropertyType.
class gml__PassThroughOperationPropertyType;

//  Forward declaration of class gml__ConversionType.
class gml__ConversionType;

//  Forward declaration of class gml__ConversionPropertyType.
class gml__ConversionPropertyType;

//  Forward declaration of class gml__TransformationType.
class gml__TransformationType;

//  Forward declaration of class gml__TransformationPropertyType.
class gml__TransformationPropertyType;

//  Forward declaration of class gml__AbstractGeneralParameterValueType.
class gml__AbstractGeneralParameterValueType;

//  Forward declaration of class gml__AbstractGeneralParameterValuePropertyType.
class gml__AbstractGeneralParameterValuePropertyType;

//  Forward declaration of class gml__ParameterValueType.
class gml__ParameterValueType;

//  Forward declaration of class gml__ParameterValueGroupType.
class gml__ParameterValueGroupType;

//  Forward declaration of class gml__OperationMethodType.
class gml__OperationMethodType;

//  Forward declaration of class gml__OperationMethodPropertyType.
class gml__OperationMethodPropertyType;

//  Forward declaration of class gml__AbstractGeneralOperationParameterType.
class gml__AbstractGeneralOperationParameterType;

//  Forward declaration of class gml__AbstractGeneralOperationParameterPropertyType.
class gml__AbstractGeneralOperationParameterPropertyType;

//  Forward declaration of class gml__OperationParameterType.
class gml__OperationParameterType;

//  Forward declaration of class gml__OperationParameterPropertyType.
class gml__OperationParameterPropertyType;

//  Forward declaration of class gml__OperationParameterGroupType.
class gml__OperationParameterGroupType;

//  Forward declaration of class gml__OperationParameterGroupPropertyType.
class gml__OperationParameterGroupPropertyType;

//  Forward declaration of class gml__ObservationType.
class gml__ObservationType;

//  Forward declaration of class gml__ProcedurePropertyType.
class gml__ProcedurePropertyType;

//  Forward declaration of class gml__TargetPropertyType.
class gml__TargetPropertyType;

//  Forward declaration of class gml__ResultType.
class gml__ResultType;

//  Forward declaration of class gml__DirectedObservationType.
class gml__DirectedObservationType;

//  Forward declaration of class gml__DirectedObservationAtDistanceType.
class gml__DirectedObservationAtDistanceType;

//  Forward declaration of class gml__DirectionPropertyType.
class gml__DirectionPropertyType;

//  Forward declaration of class gml__DirectionVectorType.
class gml__DirectionVectorType;

//  Forward declaration of class gml__DirectionDescriptionType.
class gml__DirectionDescriptionType;

//  Forward declaration of class gml__TimeReferenceSystemType.
class gml__TimeReferenceSystemType;

//  Forward declaration of class gml__TimeCoordinateSystemType.
class gml__TimeCoordinateSystemType;

//  Forward declaration of class gml__TimeCalendarType.
class gml__TimeCalendarType;

//  Forward declaration of class gml__TimeCalendarEraType.
class gml__TimeCalendarEraType;

//  Forward declaration of class gml__TimeCalendarPropertyType.
class gml__TimeCalendarPropertyType;

//  Forward declaration of class gml__TimeCalendarEraPropertyType.
class gml__TimeCalendarEraPropertyType;

//  Forward declaration of class gml__TimeClockType.
class gml__TimeClockType;

//  Forward declaration of class gml__TimeClockPropertyType.
class gml__TimeClockPropertyType;

//  Forward declaration of class gml__TimeOrdinalReferenceSystemType.
class gml__TimeOrdinalReferenceSystemType;

//  Forward declaration of class gml__TimeOrdinalEraType.
class gml__TimeOrdinalEraType;

//  Forward declaration of class gml__TimeOrdinalEraPropertyType.
class gml__TimeOrdinalEraPropertyType;

//  Forward declaration of class gml__AbstractTimeTopologyPrimitiveType.
class gml__AbstractTimeTopologyPrimitiveType;

//  Forward declaration of class gml__TimeTopologyPrimitivePropertyType.
class gml__TimeTopologyPrimitivePropertyType;

//  Forward declaration of class gml__TimeTopologyComplexType.
class gml__TimeTopologyComplexType;

//  Forward declaration of class gml__TimeTopologyComplexPropertyType.
class gml__TimeTopologyComplexPropertyType;

//  Forward declaration of class gml__TimeNodeType.
class gml__TimeNodeType;

//  Forward declaration of class gml__TimeNodePropertyType.
class gml__TimeNodePropertyType;

//  Forward declaration of class gml__TimeEdgeType.
class gml__TimeEdgeType;

//  Forward declaration of class gml__TimeEdgePropertyType.
class gml__TimeEdgePropertyType;

//  Forward declaration of class gml__OperationPropertyType.
class gml__OperationPropertyType;

//  Forward declaration of class gml__TemporalCSType.
class gml__TemporalCSType;

//  Forward declaration of class gml__TemporalCSPropertyType.
class gml__TemporalCSPropertyType;

//  Forward declaration of class gml__ObliqueCartesianCSType.
class gml__ObliqueCartesianCSType;

//  Forward declaration of class gml__ObliqueCartesianCSPropertyType.
class gml__ObliqueCartesianCSPropertyType;

//  Forward declaration of class gml__GeographicCRSType.
class gml__GeographicCRSType;

//  Forward declaration of class gml__GeographicCRSPropertyType.
class gml__GeographicCRSPropertyType;

//  Forward declaration of class gml__GeocentricCRSType.
class gml__GeocentricCRSType;

//  Forward declaration of class gml__GeocentricCRSPropertyType.
class gml__GeocentricCRSPropertyType;

//  Forward declaration of class gml__DMSAngleType.
class gml__DMSAngleType;

//  Forward declaration of class gml__DegreesType.
class gml__DegreesType;

//  Forward declaration of class gml__AngleChoiceType.
class gml__AngleChoiceType;

//  Forward declaration of class gml__ArrayAssociationType.
class gml__ArrayAssociationType;

//  Forward declaration of class gml__StringOrRefType.
class gml__StringOrRefType;

//  Forward declaration of class gml__BagType.
class gml__BagType;

//  Forward declaration of class gml__ArrayType.
class gml__ArrayType;

//  Forward declaration of class gml__MetaDataPropertyType.
class gml__MetaDataPropertyType;

//  Forward declaration of class gml__AbstractMetaDataType.
class gml__AbstractMetaDataType;

//  Forward declaration of class gml__GenericMetaDataType.
class gml__GenericMetaDataType;

//  Forward declaration of class gml__LocationPropertyType.
class gml__LocationPropertyType;

//  Forward declaration of class gml__PriorityLocationPropertyType.
class gml__PriorityLocationPropertyType;

//  Forward declaration of class gml__FeatureArrayPropertyType.
class gml__FeatureArrayPropertyType;

//  Forward declaration of class gml__BoundedFeatureType.
class gml__BoundedFeatureType;

//  Forward declaration of class gml__AbstractFeatureCollectionType.
class gml__AbstractFeatureCollectionType;

//  Forward declaration of class gml__FeatureCollectionType.
class gml__FeatureCollectionType;

//  Forward declaration of class gml__IndirectEntryType.
class gml__IndirectEntryType;

//  Forward declaration of class gml__DefinitionProxyType.
class gml__DefinitionProxyType;

//  Forward declaration of class gml__MovingObjectStatusType.
class gml__MovingObjectStatusType;

//  Forward declaration of class _gml__Boolean.
class _gml__Boolean;

//  Forward declaration of class _gml__Category.
class _gml__Category;

//  Forward declaration of class _gml__Count.
class _gml__Count;

//  Forward declaration of class _gml__Quantity.
class _gml__Quantity;

//  Forward declaration of class _gml__domainOfValidity.
class _gml__domainOfValidity;

//  Forward declaration of class _gml__secondDefiningParameter.
class _gml__secondDefiningParameter;

//  Forward declaration of class _gml__SecondDefiningParameter.
class _gml__SecondDefiningParameter;

//  Forward declaration of class _gml__coordinateOperationAccuracy.
class _gml__coordinateOperationAccuracy;

//  Forward declaration of class _gml__formulaCitation.
class _gml__formulaCitation;

//  Forward declaration of class gmd__AbstractDS_x005fAggregate_x005fType.
class gmd__AbstractDS_x005fAggregate_x005fType;

//  Forward declaration of class gmd__DS_x005fAggregate_x005fPropertyType.
class gmd__DS_x005fAggregate_x005fPropertyType;

//  Forward declaration of class gmd__DS_x005fDataSet_x005fType.
class gmd__DS_x005fDataSet_x005fType;

//  Forward declaration of class gmd__DS_x005fDataSet_x005fPropertyType.
class gmd__DS_x005fDataSet_x005fPropertyType;

//  Forward declaration of class gmd__DS_x005fOtherAggregate_x005fType.
class gmd__DS_x005fOtherAggregate_x005fType;

//  Forward declaration of class gmd__DS_x005fOtherAggregate_x005fPropertyType.
class gmd__DS_x005fOtherAggregate_x005fPropertyType;

//  Forward declaration of class gmd__DS_x005fSeries_x005fType.
class gmd__DS_x005fSeries_x005fType;

//  Forward declaration of class gmd__DS_x005fSeries_x005fPropertyType.
class gmd__DS_x005fSeries_x005fPropertyType;

//  Forward declaration of class gmd__DS_x005fInitiative_x005fType.
class gmd__DS_x005fInitiative_x005fType;

//  Forward declaration of class gmd__DS_x005fInitiative_x005fPropertyType.
class gmd__DS_x005fInitiative_x005fPropertyType;

//  Forward declaration of class gmd__DS_x005fPlatform_x005fType.
class gmd__DS_x005fPlatform_x005fType;

//  Forward declaration of class gmd__DS_x005fPlatform_x005fPropertyType.
class gmd__DS_x005fPlatform_x005fPropertyType;

//  Forward declaration of class gmd__DS_x005fSensor_x005fType.
class gmd__DS_x005fSensor_x005fType;

//  Forward declaration of class gmd__DS_x005fSensor_x005fPropertyType.
class gmd__DS_x005fSensor_x005fPropertyType;

//  Forward declaration of class gmd__DS_x005fProductionSeries_x005fType.
class gmd__DS_x005fProductionSeries_x005fType;

//  Forward declaration of class gmd__DS_x005fProductionSeries_x005fPropertyType.
class gmd__DS_x005fProductionSeries_x005fPropertyType;

//  Forward declaration of class gmd__DS_x005fStereoMate_x005fType.
class gmd__DS_x005fStereoMate_x005fType;

//  Forward declaration of class gmd__DS_x005fStereoMate_x005fPropertyType.
class gmd__DS_x005fStereoMate_x005fPropertyType;

//  Forward declaration of class gmd__MD_x005fMetadata_x005fType.
class gmd__MD_x005fMetadata_x005fType;

//  Forward declaration of class gmd__MD_x005fMetadata_x005fPropertyType.
class gmd__MD_x005fMetadata_x005fPropertyType;

//  Forward declaration of class gmd__MD_x005fGridSpatialRepresentation_x005fType.
class gmd__MD_x005fGridSpatialRepresentation_x005fType;

//  Forward declaration of class gmd__MD_x005fGridSpatialRepresentation_x005fPropertyType.
class gmd__MD_x005fGridSpatialRepresentation_x005fPropertyType;

//  Forward declaration of class gmd__MD_x005fVectorSpatialRepresentation_x005fType.
class gmd__MD_x005fVectorSpatialRepresentation_x005fType;

//  Forward declaration of class gmd__MD_x005fVectorSpatialRepresentation_x005fPropertyType.
class gmd__MD_x005fVectorSpatialRepresentation_x005fPropertyType;

//  Forward declaration of class gmd__AbstractMD_x005fSpatialRepresentation_x005fType.
class gmd__AbstractMD_x005fSpatialRepresentation_x005fType;

//  Forward declaration of class gmd__MD_x005fSpatialRepresentation_x005fPropertyType.
class gmd__MD_x005fSpatialRepresentation_x005fPropertyType;

//  Forward declaration of class gmd__MD_x005fGeoreferenceable_x005fType.
class gmd__MD_x005fGeoreferenceable_x005fType;

//  Forward declaration of class gmd__MD_x005fGeoreferenceable_x005fPropertyType.
class gmd__MD_x005fGeoreferenceable_x005fPropertyType;

//  Forward declaration of class gmd__MD_x005fDimension_x005fType.
class gmd__MD_x005fDimension_x005fType;

//  Forward declaration of class gmd__MD_x005fDimension_x005fPropertyType.
class gmd__MD_x005fDimension_x005fPropertyType;

//  Forward declaration of class gmd__MD_x005fGeorectified_x005fType.
class gmd__MD_x005fGeorectified_x005fType;

//  Forward declaration of class gmd__MD_x005fGeorectified_x005fPropertyType.
class gmd__MD_x005fGeorectified_x005fPropertyType;

//  Forward declaration of class gmd__MD_x005fGeometricObjects_x005fType.
class gmd__MD_x005fGeometricObjects_x005fType;

//  Forward declaration of class gmd__MD_x005fGeometricObjects_x005fPropertyType.
class gmd__MD_x005fGeometricObjects_x005fPropertyType;

//  Forward declaration of class gmd__MD_x005fPixelOrientationCode_x005fPropertyType.
class gmd__MD_x005fPixelOrientationCode_x005fPropertyType;

//  Forward declaration of class gmd__MD_x005fTopologyLevelCode_x005fPropertyType.
class gmd__MD_x005fTopologyLevelCode_x005fPropertyType;

//  Forward declaration of class gmd__MD_x005fGeometricObjectTypeCode_x005fPropertyType.
class gmd__MD_x005fGeometricObjectTypeCode_x005fPropertyType;

//  Forward declaration of class gmd__MD_x005fCellGeometryCode_x005fPropertyType.
class gmd__MD_x005fCellGeometryCode_x005fPropertyType;

//  Forward declaration of class gmd__MD_x005fDimensionNameTypeCode_x005fPropertyType.
class gmd__MD_x005fDimensionNameTypeCode_x005fPropertyType;

//  Forward declaration of class gmd__CI_x005fResponsibleParty_x005fType.
class gmd__CI_x005fResponsibleParty_x005fType;

//  Forward declaration of class gmd__CI_x005fResponsibleParty_x005fPropertyType.
class gmd__CI_x005fResponsibleParty_x005fPropertyType;

//  Forward declaration of class gmd__CI_x005fCitation_x005fType.
class gmd__CI_x005fCitation_x005fType;

//  Forward declaration of class gmd__CI_x005fCitation_x005fPropertyType.
class gmd__CI_x005fCitation_x005fPropertyType;

//  Forward declaration of class gmd__CI_x005fAddress_x005fType.
class gmd__CI_x005fAddress_x005fType;

//  Forward declaration of class gmd__CI_x005fAddress_x005fPropertyType.
class gmd__CI_x005fAddress_x005fPropertyType;

//  Forward declaration of class gmd__CI_x005fOnlineResource_x005fType.
class gmd__CI_x005fOnlineResource_x005fType;

//  Forward declaration of class gmd__CI_x005fOnlineResource_x005fPropertyType.
class gmd__CI_x005fOnlineResource_x005fPropertyType;

//  Forward declaration of class gmd__CI_x005fContact_x005fType.
class gmd__CI_x005fContact_x005fType;

//  Forward declaration of class gmd__CI_x005fContact_x005fPropertyType.
class gmd__CI_x005fContact_x005fPropertyType;

//  Forward declaration of class gmd__CI_x005fTelephone_x005fType.
class gmd__CI_x005fTelephone_x005fType;

//  Forward declaration of class gmd__CI_x005fTelephone_x005fPropertyType.
class gmd__CI_x005fTelephone_x005fPropertyType;

//  Forward declaration of class gmd__CI_x005fDate_x005fType.
class gmd__CI_x005fDate_x005fType;

//  Forward declaration of class gmd__CI_x005fDate_x005fPropertyType.
class gmd__CI_x005fDate_x005fPropertyType;

//  Forward declaration of class gmd__CI_x005fSeries_x005fType.
class gmd__CI_x005fSeries_x005fType;

//  Forward declaration of class gmd__CI_x005fSeries_x005fPropertyType.
class gmd__CI_x005fSeries_x005fPropertyType;

//  Forward declaration of class gmd__URL_x005fPropertyType.
class gmd__URL_x005fPropertyType;

//  Forward declaration of class gmd__CI_x005fRoleCode_x005fPropertyType.
class gmd__CI_x005fRoleCode_x005fPropertyType;

//  Forward declaration of class gmd__CI_x005fPresentationFormCode_x005fPropertyType.
class gmd__CI_x005fPresentationFormCode_x005fPropertyType;

//  Forward declaration of class gmd__CI_x005fOnLineFunctionCode_x005fPropertyType.
class gmd__CI_x005fOnLineFunctionCode_x005fPropertyType;

//  Forward declaration of class gmd__CI_x005fDateTypeCode_x005fPropertyType.
class gmd__CI_x005fDateTypeCode_x005fPropertyType;

//  Forward declaration of class gmd__RS_x005fIdentifier_x005fType.
class gmd__RS_x005fIdentifier_x005fType;

//  Forward declaration of class gmd__RS_x005fIdentifier_x005fPropertyType.
class gmd__RS_x005fIdentifier_x005fPropertyType;

//  Forward declaration of class gmd__MD_x005fReferenceSystem_x005fType.
class gmd__MD_x005fReferenceSystem_x005fType;

//  Forward declaration of class gmd__MD_x005fReferenceSystem_x005fPropertyType.
class gmd__MD_x005fReferenceSystem_x005fPropertyType;

//  Forward declaration of class gmd__MD_x005fIdentifier_x005fType.
class gmd__MD_x005fIdentifier_x005fType;

//  Forward declaration of class gmd__MD_x005fIdentifier_x005fPropertyType.
class gmd__MD_x005fIdentifier_x005fPropertyType;

//  Forward declaration of class gmd__AbstractRS_x005fReferenceSystem_x005fType.
class gmd__AbstractRS_x005fReferenceSystem_x005fType;

//  Forward declaration of class gmd__RS_x005fReferenceSystem_x005fPropertyType.
class gmd__RS_x005fReferenceSystem_x005fPropertyType;

//  Forward declaration of class gmd__EX_x005fTemporalExtent_x005fType.
class gmd__EX_x005fTemporalExtent_x005fType;

//  Forward declaration of class gmd__EX_x005fTemporalExtent_x005fPropertyType.
class gmd__EX_x005fTemporalExtent_x005fPropertyType;

//  Forward declaration of class gmd__EX_x005fVerticalExtent_x005fType.
class gmd__EX_x005fVerticalExtent_x005fType;

//  Forward declaration of class gmd__EX_x005fVerticalExtent_x005fPropertyType.
class gmd__EX_x005fVerticalExtent_x005fPropertyType;

//  Forward declaration of class gmd__EX_x005fBoundingPolygon_x005fType.
class gmd__EX_x005fBoundingPolygon_x005fType;

//  Forward declaration of class gmd__EX_x005fBoundingPolygon_x005fPropertyType.
class gmd__EX_x005fBoundingPolygon_x005fPropertyType;

//  Forward declaration of class gmd__EX_x005fExtent_x005fType.
class gmd__EX_x005fExtent_x005fType;

//  Forward declaration of class gmd__EX_x005fExtent_x005fPropertyType.
class gmd__EX_x005fExtent_x005fPropertyType;

//  Forward declaration of class gmd__AbstractEX_x005fGeographicExtent_x005fType.
class gmd__AbstractEX_x005fGeographicExtent_x005fType;

//  Forward declaration of class gmd__EX_x005fGeographicExtent_x005fPropertyType.
class gmd__EX_x005fGeographicExtent_x005fPropertyType;

//  Forward declaration of class gmd__EX_x005fGeographicBoundingBox_x005fType.
class gmd__EX_x005fGeographicBoundingBox_x005fType;

//  Forward declaration of class gmd__EX_x005fGeographicBoundingBox_x005fPropertyType.
class gmd__EX_x005fGeographicBoundingBox_x005fPropertyType;

//  Forward declaration of class gmd__EX_x005fSpatialTemporalExtent_x005fType.
class gmd__EX_x005fSpatialTemporalExtent_x005fType;

//  Forward declaration of class gmd__EX_x005fSpatialTemporalExtent_x005fPropertyType.
class gmd__EX_x005fSpatialTemporalExtent_x005fPropertyType;

//  Forward declaration of class gmd__EX_x005fGeographicDescription_x005fType.
class gmd__EX_x005fGeographicDescription_x005fType;

//  Forward declaration of class gmd__EX_x005fGeographicDescription_x005fPropertyType.
class gmd__EX_x005fGeographicDescription_x005fPropertyType;

//  Forward declaration of class gmd__MD_x005fExtendedElementInformation_x005fType.
class gmd__MD_x005fExtendedElementInformation_x005fType;

//  Forward declaration of class gmd__MD_x005fExtendedElementInformation_x005fPropertyType.
class gmd__MD_x005fExtendedElementInformation_x005fPropertyType;

//  Forward declaration of class gmd__MD_x005fMetadataExtensionInformation_x005fType.
class gmd__MD_x005fMetadataExtensionInformation_x005fType;

//  Forward declaration of class gmd__MD_x005fMetadataExtensionInformation_x005fPropertyType.
class gmd__MD_x005fMetadataExtensionInformation_x005fPropertyType;

//  Forward declaration of class gmd__MD_x005fObligationCode_x005fPropertyType.
class gmd__MD_x005fObligationCode_x005fPropertyType;

//  Forward declaration of class gmd__MD_x005fDatatypeCode_x005fPropertyType.
class gmd__MD_x005fDatatypeCode_x005fPropertyType;

//  Forward declaration of class gmd__MD_x005fFeatureCatalogueDescription_x005fType.
class gmd__MD_x005fFeatureCatalogueDescription_x005fType;

//  Forward declaration of class gmd__MD_x005fFeatureCatalogueDescription_x005fPropertyType.
class gmd__MD_x005fFeatureCatalogueDescription_x005fPropertyType;

//  Forward declaration of class gmd__MD_x005fCoverageDescription_x005fType.
class gmd__MD_x005fCoverageDescription_x005fType;

//  Forward declaration of class gmd__MD_x005fCoverageDescription_x005fPropertyType.
class gmd__MD_x005fCoverageDescription_x005fPropertyType;

//  Forward declaration of class gmd__MD_x005fImageDescription_x005fType.
class gmd__MD_x005fImageDescription_x005fType;

//  Forward declaration of class gmd__MD_x005fImageDescription_x005fPropertyType.
class gmd__MD_x005fImageDescription_x005fPropertyType;

//  Forward declaration of class gmd__AbstractMD_x005fContentInformation_x005fType.
class gmd__AbstractMD_x005fContentInformation_x005fType;

//  Forward declaration of class gmd__MD_x005fContentInformation_x005fPropertyType.
class gmd__MD_x005fContentInformation_x005fPropertyType;

//  Forward declaration of class gmd__MD_x005fRangeDimension_x005fType.
class gmd__MD_x005fRangeDimension_x005fType;

//  Forward declaration of class gmd__MD_x005fRangeDimension_x005fPropertyType.
class gmd__MD_x005fRangeDimension_x005fPropertyType;

//  Forward declaration of class gmd__MD_x005fBand_x005fType.
class gmd__MD_x005fBand_x005fType;

//  Forward declaration of class gmd__MD_x005fBand_x005fPropertyType.
class gmd__MD_x005fBand_x005fPropertyType;

//  Forward declaration of class gmd__MD_x005fCoverageContentTypeCode_x005fPropertyType.
class gmd__MD_x005fCoverageContentTypeCode_x005fPropertyType;

//  Forward declaration of class gmd__MD_x005fImagingConditionCode_x005fPropertyType.
class gmd__MD_x005fImagingConditionCode_x005fPropertyType;

//  Forward declaration of class gmd__MD_x005fApplicationSchemaInformation_x005fType.
class gmd__MD_x005fApplicationSchemaInformation_x005fType;

//  Forward declaration of class gmd__MD_x005fApplicationSchemaInformation_x005fPropertyType.
class gmd__MD_x005fApplicationSchemaInformation_x005fPropertyType;

//  Forward declaration of class gmd__MD_x005fPortrayalCatalogueReference_x005fType.
class gmd__MD_x005fPortrayalCatalogueReference_x005fType;

//  Forward declaration of class gmd__MD_x005fPortrayalCatalogueReference_x005fPropertyType.
class gmd__MD_x005fPortrayalCatalogueReference_x005fPropertyType;

//  Forward declaration of class gmd__LI_x005fProcessStep_x005fType.
class gmd__LI_x005fProcessStep_x005fType;

//  Forward declaration of class gmd__LI_x005fProcessStep_x005fPropertyType.
class gmd__LI_x005fProcessStep_x005fPropertyType;

//  Forward declaration of class gmd__LI_x005fSource_x005fType.
class gmd__LI_x005fSource_x005fType;

//  Forward declaration of class gmd__LI_x005fSource_x005fPropertyType.
class gmd__LI_x005fSource_x005fPropertyType;

//  Forward declaration of class gmd__LI_x005fLineage_x005fType.
class gmd__LI_x005fLineage_x005fType;

//  Forward declaration of class gmd__LI_x005fLineage_x005fPropertyType.
class gmd__LI_x005fLineage_x005fPropertyType;

//  Forward declaration of class gmd__DQ_x005fConformanceResult_x005fType.
class gmd__DQ_x005fConformanceResult_x005fType;

//  Forward declaration of class gmd__DQ_x005fConformanceResult_x005fPropertyType.
class gmd__DQ_x005fConformanceResult_x005fPropertyType;

//  Forward declaration of class gmd__DQ_x005fQuantitativeResult_x005fType.
class gmd__DQ_x005fQuantitativeResult_x005fType;

//  Forward declaration of class gmd__DQ_x005fQuantitativeResult_x005fPropertyType.
class gmd__DQ_x005fQuantitativeResult_x005fPropertyType;

//  Forward declaration of class gmd__AbstractDQ_x005fResult_x005fType.
class gmd__AbstractDQ_x005fResult_x005fType;

//  Forward declaration of class gmd__DQ_x005fResult_x005fPropertyType.
class gmd__DQ_x005fResult_x005fPropertyType;

//  Forward declaration of class gmd__DQ_x005fTemporalValidity_x005fType.
class gmd__DQ_x005fTemporalValidity_x005fType;

//  Forward declaration of class gmd__DQ_x005fTemporalValidity_x005fPropertyType.
class gmd__DQ_x005fTemporalValidity_x005fPropertyType;

//  Forward declaration of class gmd__DQ_x005fTemporalConsistency_x005fType.
class gmd__DQ_x005fTemporalConsistency_x005fType;

//  Forward declaration of class gmd__DQ_x005fTemporalConsistency_x005fPropertyType.
class gmd__DQ_x005fTemporalConsistency_x005fPropertyType;

//  Forward declaration of class gmd__DQ_x005fAccuracyOfATimeMeasurement_x005fType.
class gmd__DQ_x005fAccuracyOfATimeMeasurement_x005fType;

//  Forward declaration of class gmd__DQ_x005fAccuracyOfATimeMeasurement_x005fPropertyType.
class gmd__DQ_x005fAccuracyOfATimeMeasurement_x005fPropertyType;

//  Forward declaration of class gmd__DQ_x005fQuantitativeAttributeAccuracy_x005fType.
class gmd__DQ_x005fQuantitativeAttributeAccuracy_x005fType;

//  Forward declaration of class gmd__DQ_x005fQuantitativeAttributeAccuracy_x005fPropertyType.
class gmd__DQ_x005fQuantitativeAttributeAccuracy_x005fPropertyType;

//  Forward declaration of class gmd__DQ_x005fNonQuantitativeAttributeAccuracy_x005fType.
class gmd__DQ_x005fNonQuantitativeAttributeAccuracy_x005fType;

//  Forward declaration of class gmd__DQ_x005fNonQuantitativeAttributeAccuracy_x005fPropertyType.
class gmd__DQ_x005fNonQuantitativeAttributeAccuracy_x005fPropertyType;

//  Forward declaration of class gmd__DQ_x005fThematicClassificationCorrectness_x005fType.
class gmd__DQ_x005fThematicClassificationCorrectness_x005fType;

//  Forward declaration of class gmd__DQ_x005fThematicClassificationCorrectness_x005fPropertyType.
class gmd__DQ_x005fThematicClassificationCorrectness_x005fPropertyType;

//  Forward declaration of class gmd__DQ_x005fRelativeInternalPositionalAccuracy_x005fType.
class gmd__DQ_x005fRelativeInternalPositionalAccuracy_x005fType;

//  Forward declaration of class gmd__DQ_x005fRelativeInternalPositionalAccuracy_x005fPropertyType.
class gmd__DQ_x005fRelativeInternalPositionalAccuracy_x005fPropertyType;

//  Forward declaration of class gmd__DQ_x005fGriddedDataPositionalAccuracy_x005fType.
class gmd__DQ_x005fGriddedDataPositionalAccuracy_x005fType;

//  Forward declaration of class gmd__DQ_x005fGriddedDataPositionalAccuracy_x005fPropertyType.
class gmd__DQ_x005fGriddedDataPositionalAccuracy_x005fPropertyType;

//  Forward declaration of class gmd__DQ_x005fAbsoluteExternalPositionalAccuracy_x005fType.
class gmd__DQ_x005fAbsoluteExternalPositionalAccuracy_x005fType;

//  Forward declaration of class gmd__DQ_x005fAbsoluteExternalPositionalAccuracy_x005fPropertyType.
class gmd__DQ_x005fAbsoluteExternalPositionalAccuracy_x005fPropertyType;

//  Forward declaration of class gmd__DQ_x005fTopologicalConsistency_x005fType.
class gmd__DQ_x005fTopologicalConsistency_x005fType;

//  Forward declaration of class gmd__DQ_x005fTopologicalConsistency_x005fPropertyType.
class gmd__DQ_x005fTopologicalConsistency_x005fPropertyType;

//  Forward declaration of class gmd__DQ_x005fFormatConsistency_x005fType.
class gmd__DQ_x005fFormatConsistency_x005fType;

//  Forward declaration of class gmd__DQ_x005fFormatConsistency_x005fPropertyType.
class gmd__DQ_x005fFormatConsistency_x005fPropertyType;

//  Forward declaration of class gmd__DQ_x005fDomainConsistency_x005fType.
class gmd__DQ_x005fDomainConsistency_x005fType;

//  Forward declaration of class gmd__DQ_x005fDomainConsistency_x005fPropertyType.
class gmd__DQ_x005fDomainConsistency_x005fPropertyType;

//  Forward declaration of class gmd__DQ_x005fConceptualConsistency_x005fType.
class gmd__DQ_x005fConceptualConsistency_x005fType;

//  Forward declaration of class gmd__DQ_x005fConceptualConsistency_x005fPropertyType.
class gmd__DQ_x005fConceptualConsistency_x005fPropertyType;

//  Forward declaration of class gmd__DQ_x005fCompletenessOmission_x005fType.
class gmd__DQ_x005fCompletenessOmission_x005fType;

//  Forward declaration of class gmd__DQ_x005fCompletenessOmission_x005fPropertyType.
class gmd__DQ_x005fCompletenessOmission_x005fPropertyType;

//  Forward declaration of class gmd__DQ_x005fCompletenessCommission_x005fType.
class gmd__DQ_x005fCompletenessCommission_x005fType;

//  Forward declaration of class gmd__DQ_x005fCompletenessCommission_x005fPropertyType.
class gmd__DQ_x005fCompletenessCommission_x005fPropertyType;

//  Forward declaration of class gmd__AbstractDQ_x005fTemporalAccuracy_x005fType.
class gmd__AbstractDQ_x005fTemporalAccuracy_x005fType;

//  Forward declaration of class gmd__DQ_x005fTemporalAccuracy_x005fPropertyType.
class gmd__DQ_x005fTemporalAccuracy_x005fPropertyType;

//  Forward declaration of class gmd__AbstractDQ_x005fThematicAccuracy_x005fType.
class gmd__AbstractDQ_x005fThematicAccuracy_x005fType;

//  Forward declaration of class gmd__DQ_x005fThematicAccuracy_x005fPropertyType.
class gmd__DQ_x005fThematicAccuracy_x005fPropertyType;

//  Forward declaration of class gmd__AbstractDQ_x005fPositionalAccuracy_x005fType.
class gmd__AbstractDQ_x005fPositionalAccuracy_x005fType;

//  Forward declaration of class gmd__DQ_x005fPositionalAccuracy_x005fPropertyType.
class gmd__DQ_x005fPositionalAccuracy_x005fPropertyType;

//  Forward declaration of class gmd__AbstractDQ_x005fLogicalConsistency_x005fType.
class gmd__AbstractDQ_x005fLogicalConsistency_x005fType;

//  Forward declaration of class gmd__DQ_x005fLogicalConsistency_x005fPropertyType.
class gmd__DQ_x005fLogicalConsistency_x005fPropertyType;

//  Forward declaration of class gmd__AbstractDQ_x005fCompleteness_x005fType.
class gmd__AbstractDQ_x005fCompleteness_x005fType;

//  Forward declaration of class gmd__DQ_x005fCompleteness_x005fPropertyType.
class gmd__DQ_x005fCompleteness_x005fPropertyType;

//  Forward declaration of class gmd__AbstractDQ_x005fElement_x005fType.
class gmd__AbstractDQ_x005fElement_x005fType;

//  Forward declaration of class gmd__DQ_x005fElement_x005fPropertyType.
class gmd__DQ_x005fElement_x005fPropertyType;

//  Forward declaration of class gmd__DQ_x005fDataQuality_x005fType.
class gmd__DQ_x005fDataQuality_x005fType;

//  Forward declaration of class gmd__DQ_x005fDataQuality_x005fPropertyType.
class gmd__DQ_x005fDataQuality_x005fPropertyType;

//  Forward declaration of class gmd__DQ_x005fScope_x005fType.
class gmd__DQ_x005fScope_x005fType;

//  Forward declaration of class gmd__DQ_x005fScope_x005fPropertyType.
class gmd__DQ_x005fScope_x005fPropertyType;

//  Forward declaration of class gmd__DQ_x005fEvaluationMethodTypeCode_x005fPropertyType.
class gmd__DQ_x005fEvaluationMethodTypeCode_x005fPropertyType;

//  Forward declaration of class gmd__AbstractMD_x005fIdentification_x005fType.
class gmd__AbstractMD_x005fIdentification_x005fType;

//  Forward declaration of class gmd__MD_x005fIdentification_x005fPropertyType.
class gmd__MD_x005fIdentification_x005fPropertyType;

//  Forward declaration of class gmd__MD_x005fBrowseGraphic_x005fType.
class gmd__MD_x005fBrowseGraphic_x005fType;

//  Forward declaration of class gmd__MD_x005fBrowseGraphic_x005fPropertyType.
class gmd__MD_x005fBrowseGraphic_x005fPropertyType;

//  Forward declaration of class gmd__MD_x005fDataIdentification_x005fType.
class gmd__MD_x005fDataIdentification_x005fType;

//  Forward declaration of class gmd__MD_x005fDataIdentification_x005fPropertyType.
class gmd__MD_x005fDataIdentification_x005fPropertyType;

//  Forward declaration of class gmd__MD_x005fServiceIdentification_x005fType.
class gmd__MD_x005fServiceIdentification_x005fType;

//  Forward declaration of class gmd__MD_x005fServiceIdentification_x005fPropertyType.
class gmd__MD_x005fServiceIdentification_x005fPropertyType;

//  Forward declaration of class gmd__MD_x005fRepresentativeFraction_x005fType.
class gmd__MD_x005fRepresentativeFraction_x005fType;

//  Forward declaration of class gmd__MD_x005fRepresentativeFraction_x005fPropertyType.
class gmd__MD_x005fRepresentativeFraction_x005fPropertyType;

//  Forward declaration of class gmd__MD_x005fUsage_x005fType.
class gmd__MD_x005fUsage_x005fType;

//  Forward declaration of class gmd__MD_x005fUsage_x005fPropertyType.
class gmd__MD_x005fUsage_x005fPropertyType;

//  Forward declaration of class gmd__MD_x005fKeywords_x005fType.
class gmd__MD_x005fKeywords_x005fType;

//  Forward declaration of class gmd__MD_x005fKeywords_x005fPropertyType.
class gmd__MD_x005fKeywords_x005fPropertyType;

//  Forward declaration of class gmd__DS_x005fAssociation_x005fType.
class gmd__DS_x005fAssociation_x005fType;

//  Forward declaration of class gmd__DS_x005fAssociation_x005fPropertyType.
class gmd__DS_x005fAssociation_x005fPropertyType;

//  Forward declaration of class gmd__MD_x005fAggregateInformation_x005fType.
class gmd__MD_x005fAggregateInformation_x005fType;

//  Forward declaration of class gmd__MD_x005fAggregateInformation_x005fPropertyType.
class gmd__MD_x005fAggregateInformation_x005fPropertyType;

//  Forward declaration of class gmd__MD_x005fResolution_x005fType.
class gmd__MD_x005fResolution_x005fType;

//  Forward declaration of class gmd__MD_x005fResolution_x005fPropertyType.
class gmd__MD_x005fResolution_x005fPropertyType;

//  Forward declaration of class gmd__MD_x005fTopicCategoryCode_x005fPropertyType.
class gmd__MD_x005fTopicCategoryCode_x005fPropertyType;

//  Forward declaration of class gmd__MD_x005fCharacterSetCode_x005fPropertyType.
class gmd__MD_x005fCharacterSetCode_x005fPropertyType;

//  Forward declaration of class gmd__MD_x005fSpatialRepresentationTypeCode_x005fPropertyType.
class gmd__MD_x005fSpatialRepresentationTypeCode_x005fPropertyType;

//  Forward declaration of class gmd__MD_x005fProgressCode_x005fPropertyType.
class gmd__MD_x005fProgressCode_x005fPropertyType;

//  Forward declaration of class gmd__MD_x005fKeywordTypeCode_x005fPropertyType.
class gmd__MD_x005fKeywordTypeCode_x005fPropertyType;

//  Forward declaration of class gmd__DS_x005fAssociationTypeCode_x005fPropertyType.
class gmd__DS_x005fAssociationTypeCode_x005fPropertyType;

//  Forward declaration of class gmd__DS_x005fInitiativeTypeCode_x005fPropertyType.
class gmd__DS_x005fInitiativeTypeCode_x005fPropertyType;

//  Forward declaration of class gmd__MD_x005fConstraints_x005fType.
class gmd__MD_x005fConstraints_x005fType;

//  Forward declaration of class gmd__MD_x005fConstraints_x005fPropertyType.
class gmd__MD_x005fConstraints_x005fPropertyType;

//  Forward declaration of class gmd__MD_x005fLegalConstraints_x005fType.
class gmd__MD_x005fLegalConstraints_x005fType;

//  Forward declaration of class gmd__MD_x005fLegalConstraints_x005fPropertyType.
class gmd__MD_x005fLegalConstraints_x005fPropertyType;

//  Forward declaration of class gmd__MD_x005fSecurityConstraints_x005fType.
class gmd__MD_x005fSecurityConstraints_x005fType;

//  Forward declaration of class gmd__MD_x005fSecurityConstraints_x005fPropertyType.
class gmd__MD_x005fSecurityConstraints_x005fPropertyType;

//  Forward declaration of class gmd__MD_x005fClassificationCode_x005fPropertyType.
class gmd__MD_x005fClassificationCode_x005fPropertyType;

//  Forward declaration of class gmd__MD_x005fRestrictionCode_x005fPropertyType.
class gmd__MD_x005fRestrictionCode_x005fPropertyType;

//  Forward declaration of class gmd__MD_x005fMedium_x005fType.
class gmd__MD_x005fMedium_x005fType;

//  Forward declaration of class gmd__MD_x005fMedium_x005fPropertyType.
class gmd__MD_x005fMedium_x005fPropertyType;

//  Forward declaration of class gmd__MD_x005fDigitalTransferOptions_x005fType.
class gmd__MD_x005fDigitalTransferOptions_x005fType;

//  Forward declaration of class gmd__MD_x005fDigitalTransferOptions_x005fPropertyType.
class gmd__MD_x005fDigitalTransferOptions_x005fPropertyType;

//  Forward declaration of class gmd__MD_x005fStandardOrderProcess_x005fType.
class gmd__MD_x005fStandardOrderProcess_x005fType;

//  Forward declaration of class gmd__MD_x005fStandardOrderProcess_x005fPropertyType.
class gmd__MD_x005fStandardOrderProcess_x005fPropertyType;

//  Forward declaration of class gmd__MD_x005fDistributor_x005fType.
class gmd__MD_x005fDistributor_x005fType;

//  Forward declaration of class gmd__MD_x005fDistributor_x005fPropertyType.
class gmd__MD_x005fDistributor_x005fPropertyType;

//  Forward declaration of class gmd__MD_x005fDistribution_x005fType.
class gmd__MD_x005fDistribution_x005fType;

//  Forward declaration of class gmd__MD_x005fDistribution_x005fPropertyType.
class gmd__MD_x005fDistribution_x005fPropertyType;

//  Forward declaration of class gmd__MD_x005fFormat_x005fType.
class gmd__MD_x005fFormat_x005fType;

//  Forward declaration of class gmd__MD_x005fFormat_x005fPropertyType.
class gmd__MD_x005fFormat_x005fPropertyType;

//  Forward declaration of class gmd__MD_x005fDistributionUnits_x005fPropertyType.
class gmd__MD_x005fDistributionUnits_x005fPropertyType;

//  Forward declaration of class gmd__MD_x005fMediumFormatCode_x005fPropertyType.
class gmd__MD_x005fMediumFormatCode_x005fPropertyType;

//  Forward declaration of class gmd__MD_x005fMediumNameCode_x005fPropertyType.
class gmd__MD_x005fMediumNameCode_x005fPropertyType;

//  Forward declaration of class gmd__MD_x005fMaintenanceInformation_x005fType.
class gmd__MD_x005fMaintenanceInformation_x005fType;

//  Forward declaration of class gmd__MD_x005fMaintenanceInformation_x005fPropertyType.
class gmd__MD_x005fMaintenanceInformation_x005fPropertyType;

//  Forward declaration of class gmd__MD_x005fScopeDescription_x005fType.
class gmd__MD_x005fScopeDescription_x005fType;

//  Forward declaration of class gmd__MD_x005fScopeDescription_x005fPropertyType.
class gmd__MD_x005fScopeDescription_x005fPropertyType;

//  Forward declaration of class gmd__MD_x005fMaintenanceFrequencyCode_x005fPropertyType.
class gmd__MD_x005fMaintenanceFrequencyCode_x005fPropertyType;

//  Forward declaration of class gmd__MD_x005fScopeCode_x005fPropertyType.
class gmd__MD_x005fScopeCode_x005fPropertyType;

//  Forward declaration of class gmd__PT_x005fFreeText_x005fType.
class gmd__PT_x005fFreeText_x005fType;

//  Forward declaration of class gmd__PT_x005fFreeText_x005fPropertyType.
class gmd__PT_x005fFreeText_x005fPropertyType;

//  Forward declaration of class gmd__PT_x005fLocale_x005fType.
class gmd__PT_x005fLocale_x005fType;

//  Forward declaration of class gmd__PT_x005fLocale_x005fPropertyType.
class gmd__PT_x005fLocale_x005fPropertyType;

//  Forward declaration of class gmd__LocalisedCharacterString_x005fType.
class gmd__LocalisedCharacterString_x005fType;

//  Forward declaration of class gmd__LocalisedCharacterString_x005fPropertyType.
class gmd__LocalisedCharacterString_x005fPropertyType;

//  Forward declaration of class gmd__PT_x005fLocaleContainer_x005fType.
class gmd__PT_x005fLocaleContainer_x005fType;

//  Forward declaration of class gmd__PT_x005fLocaleContainer_x005fPropertyType.
class gmd__PT_x005fLocaleContainer_x005fPropertyType;

//  Forward declaration of class gmd__LanguageCode_x005fPropertyType.
class gmd__LanguageCode_x005fPropertyType;

//  Forward declaration of class gmd__Country_x005fPropertyType.
class gmd__Country_x005fPropertyType;

//  Forward declaration of class xlink__simple.
class xlink__simple;

//  Forward declaration of class xlink__extended.
class xlink__extended;

//  Forward declaration of class xlink__titleEltType.
class xlink__titleEltType;

//  Forward declaration of class xlink__resourceType.
class xlink__resourceType;

//  Forward declaration of class xlink__locatorType.
class xlink__locatorType;

//  Forward declaration of class xlink__arcType.
class xlink__arcType;

//  Forward declaration of class gco__TypeName_x005fType.
class gco__TypeName_x005fType;

//  Forward declaration of class gco__TypeName_x005fPropertyType.
class gco__TypeName_x005fPropertyType;

//  Forward declaration of class gco__MemberName_x005fType.
class gco__MemberName_x005fType;

//  Forward declaration of class gco__MemberName_x005fPropertyType.
class gco__MemberName_x005fPropertyType;

//  Forward declaration of class gco__Multiplicity_x005fType.
class gco__Multiplicity_x005fType;

//  Forward declaration of class gco__Multiplicity_x005fPropertyType.
class gco__Multiplicity_x005fPropertyType;

//  Forward declaration of class gco__MultiplicityRange_x005fType.
class gco__MultiplicityRange_x005fType;

//  Forward declaration of class gco__MultiplicityRange_x005fPropertyType.
class gco__MultiplicityRange_x005fPropertyType;

//  Forward declaration of class gco__Measure_x005fPropertyType.
class gco__Measure_x005fPropertyType;

//  Forward declaration of class gco__Length_x005fPropertyType.
class gco__Length_x005fPropertyType;

//  Forward declaration of class gco__Angle_x005fPropertyType.
class gco__Angle_x005fPropertyType;

//  Forward declaration of class gco__Scale_x005fPropertyType.
class gco__Scale_x005fPropertyType;

//  Forward declaration of class gco__Distance_x005fPropertyType.
class gco__Distance_x005fPropertyType;

//  Forward declaration of class gco__CharacterString_x005fPropertyType.
class gco__CharacterString_x005fPropertyType;

//  Forward declaration of class gco__Boolean_x005fPropertyType.
class gco__Boolean_x005fPropertyType;

//  Forward declaration of class gco__GenericName_x005fPropertyType.
class gco__GenericName_x005fPropertyType;

//  Forward declaration of class gco__LocalName_x005fPropertyType.
class gco__LocalName_x005fPropertyType;

//  Forward declaration of class gco__ScopedName_x005fPropertyType.
class gco__ScopedName_x005fPropertyType;

//  Forward declaration of class gco__UomAngle_x005fPropertyType.
class gco__UomAngle_x005fPropertyType;

//  Forward declaration of class gco__UomLength_x005fPropertyType.
class gco__UomLength_x005fPropertyType;

//  Forward declaration of class gco__UomScale_x005fPropertyType.
class gco__UomScale_x005fPropertyType;

//  Forward declaration of class gco__UnitOfMeasure_x005fPropertyType.
class gco__UnitOfMeasure_x005fPropertyType;

//  Forward declaration of class gco__UomArea_x005fPropertyType.
class gco__UomArea_x005fPropertyType;

//  Forward declaration of class gco__UomVelocity_x005fPropertyType.
class gco__UomVelocity_x005fPropertyType;

//  Forward declaration of class gco__UomTime_x005fPropertyType.
class gco__UomTime_x005fPropertyType;

//  Forward declaration of class gco__UomVolume_x005fPropertyType.
class gco__UomVolume_x005fPropertyType;

//  Forward declaration of class gco__DateTime_x005fPropertyType.
class gco__DateTime_x005fPropertyType;

//  Forward declaration of class gco__Date_x005fPropertyType.
class gco__Date_x005fPropertyType;

//  Forward declaration of class gco__Number_x005fPropertyType.
class gco__Number_x005fPropertyType;

//  Forward declaration of class gco__Decimal_x005fPropertyType.
class gco__Decimal_x005fPropertyType;

//  Forward declaration of class gco__Real_x005fPropertyType.
class gco__Real_x005fPropertyType;

//  Forward declaration of class gco__Integer_x005fPropertyType.
class gco__Integer_x005fPropertyType;

//  Forward declaration of class gco__UnlimitedInteger_x005fType.
class gco__UnlimitedInteger_x005fType;

//  Forward declaration of class gco__UnlimitedInteger_x005fPropertyType.
class gco__UnlimitedInteger_x005fPropertyType;

//  Forward declaration of class gco__Record_x005fPropertyType.
class gco__Record_x005fPropertyType;

//  Forward declaration of class gco__RecordType_x005fType.
class gco__RecordType_x005fType;

//  Forward declaration of class gco__RecordType_x005fPropertyType.
class gco__RecordType_x005fPropertyType;

//  Forward declaration of class gco__Binary_x005fType.
class gco__Binary_x005fType;

//  Forward declaration of class gco__Binary_x005fPropertyType.
class gco__Binary_x005fPropertyType;

//  Forward declaration of class gco__AbstractObject_x005fType.
class gco__AbstractObject_x005fType;

//  Forward declaration of class gco__ObjectReference_x005fPropertyType.
class gco__ObjectReference_x005fPropertyType;

//  Forward declaration of class gco__CodeListValue_x005fType.
class gco__CodeListValue_x005fType;

/// @brief Top-level root element "http://www.isotc211.org/2005/gco":Record.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

//  Forward declaration of class gss__GM_x005fPoint_x005fPropertyType.
class gss__GM_x005fPoint_x005fPropertyType;

//  Forward declaration of class gss__GM_x005fObject_x005fPropertyType.
class gss__GM_x005fObject_x005fPropertyType;

//  Forward declaration of class gts__TM_x005fPrimitive_x005fPropertyType.
class gts__TM_x005fPrimitive_x005fPropertyType;

//  Forward declaration of class gts__TM_x005fPeriodDuration_x005fPropertyType.
class gts__TM_x005fPeriodDuration_x005fPropertyType;

//  Forward declaration of class gsr__SC_x005fCRS_x005fPropertyType.
class gsr__SC_x005fCRS_x005fPropertyType;


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://inspire.ec.europa.eu/schemas/plu/3.0                              *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://inspire.ec.europa.eu/schemas/base/3.3                             *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://inspire.ec.europa.eu/schemas/base2/1.0                            *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://inspire.ec.europa.eu/schemas/lunom/3.0                            *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.interactive-instruments.de/ShapeChange/AppInfo                *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.opengis.net/gml/3.2                                           *
 *                                                                            *
\******************************************************************************/

/// @brief Union of values from member types "gml:NilReasonEnumeration anyURI".
typedef std::string gml__NilReasonType;

/// @brief Union of values from type "xs:string".
/// @brief Union of values from type "xs:string".
typedef std::string gml__NilReasonEnumeration;

/// @brief Union of values from member types "gml:NilReasonEnumeration boolean anyURI".
typedef std::string gml__booleanOrNilReason;

/// @brief Union of values from member types "gml:NilReasonEnumeration double anyURI".
typedef std::string gml__doubleOrNilReason;

/// @brief Union of values from member types "gml:NilReasonEnumeration integer anyURI".
typedef std::string gml__integerOrNilReason;

/// @brief Union of values from member types "gml:NilReasonEnumeration Name anyURI".
typedef std::string gml__NameOrNilReason;

/// @brief Union of values from member types "gml:NilReasonEnumeration string anyURI".
typedef std::string gml__stringOrNilReason;

/// @brief Union of values from member types "gml:UomSymbol gml:UomURI".
typedef std::string gml__UomIdentifier;

/// @brief "http://www.opengis.net/gml/3.2":booleanList is a simpleType containing a whitespace separated list of xs:boolean.
///
/// <PRE><BLOCKQUOTE>
///   A type for a list of values of the respective simple type.
/// </BLOCKQUOTE></PRE>
typedef std::string gml__booleanList;

/// @brief "http://www.opengis.net/gml/3.2":doubleList is a simpleType containing a whitespace separated list of xs:double.
///
/// <PRE><BLOCKQUOTE>
///   A type for a list of values of the respective simple type.
/// </BLOCKQUOTE></PRE>
typedef std::string gml__doubleList;

/// @brief "http://www.opengis.net/gml/3.2":integerList is a simpleType containing a whitespace separated list of xs:integer.
///
/// <PRE><BLOCKQUOTE>
///   A type for a list of values of the respective simple type.
/// </BLOCKQUOTE></PRE>
typedef std::string gml__integerList;

/// @brief "http://www.opengis.net/gml/3.2":NameList is a simpleType containing a whitespace separated list of xs:Name.
///
/// <PRE><BLOCKQUOTE>
///   A type for a list of values of the respective simple type.
/// </BLOCKQUOTE></PRE>
typedef std::string gml__NameList;

/// @brief "http://www.opengis.net/gml/3.2":NCNameList is a simpleType containing a whitespace separated list of xs:NCName.
///
/// <PRE><BLOCKQUOTE>
///   A type for a list of values of the respective simple type.
/// </BLOCKQUOTE></PRE>
typedef std::string gml__NCNameList;

/// @brief "http://www.opengis.net/gml/3.2":QNameList is a simpleType containing a whitespace separated list of xs:QName.
///
/// <PRE><BLOCKQUOTE>
///   A type for a list of values of the respective simple type.
/// </BLOCKQUOTE></PRE>
typedef xsd__QName gml__QNameList;

/// @brief "http://www.opengis.net/gml/3.2":booleanOrNilReasonList is a simpleType containing a whitespace separated list of "http://www.opengis.net/gml/3.2":booleanOrNilReason.
///
/// <PRE><BLOCKQUOTE>
///   A type for a list of values of the respective simple type.
/// </BLOCKQUOTE></PRE>
typedef std::string gml__booleanOrNilReasonList;

/// @brief "http://www.opengis.net/gml/3.2":NameOrNilReasonList is a simpleType containing a whitespace separated list of "http://www.opengis.net/gml/3.2":NameOrNilReason.
///
/// <PRE><BLOCKQUOTE>
///   A type for a list of values of the respective simple type.
/// </BLOCKQUOTE></PRE>
typedef std::string gml__NameOrNilReasonList;

/// @brief "http://www.opengis.net/gml/3.2":doubleOrNilReasonList is a simpleType containing a whitespace separated list of "http://www.opengis.net/gml/3.2":doubleOrNilReason.
///
/// <PRE><BLOCKQUOTE>
///   A type for a list of values of the respective simple type.
/// </BLOCKQUOTE></PRE>
typedef std::string gml__doubleOrNilReasonList;

/// @brief "http://www.opengis.net/gml/3.2":integerOrNilReasonList is a simpleType containing a whitespace separated list of "http://www.opengis.net/gml/3.2":integerOrNilReason.
///
/// <PRE><BLOCKQUOTE>
///   A type for a list of values of the respective simple type.
/// </BLOCKQUOTE></PRE>
typedef std::string gml__integerOrNilReasonList;

/// @brief "http://www.opengis.net/gml/3.2":AxisDirectionList is a simpleType containing a whitespace separated list of "http://www.opengis.net/gml/3.2":AxisDirection.
///
/// <PRE><BLOCKQUOTE>
///   The different values in a gml:AxisDirectionList indicate the incrementation order to be used on all axes of the grid. Each axis shall be mentioned once and only once.
/// </BLOCKQUOTE></PRE>
typedef std::string gml__AxisDirectionList;

/// @brief Union of values from member types "gml:CalDate time dateTime anyURI decimal".
typedef std::string gml__TimePositionUnion;

/// @brief Union of values from member types "date gYearMonth gYear".
typedef std::string gml__CalDate;

/// @brief Union of values from type "xs:string".
/// @brief Union of values from type "xs:string".
typedef std::string gml__TimeUnitType;


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.isotc211.org/2005/gmd                                         *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.w3.org/1999/xlink                                             *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.isotc211.org/2005/gco                                         *
 *                                                                            *
\******************************************************************************/

/// @brief Union of values from member types "xs:date xs:gYearMonth xs:gYear".
typedef std::string gco__Date_x005fType;


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.isotc211.org/2005/gss                                         *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.isotc211.org/2005/gts                                         *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.isotc211.org/2005/gsr                                         *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://inspire.ec.europa.eu/schemas/base/3.3                             *
 *                                                                            *
\******************************************************************************/

/// @brief "http://inspire.ec.europa.eu/schemas/base/3.3":VerticalPositionValueType is a simpleType restriction of XSD type xs:string.
///
/// <PRE><BLOCKQUOTE>
///   -- Definition --
///   The relative vertical position of a spatial object.
/// </BLOCKQUOTE></PRE>
/// @note The enum values are prefixed with "base__VerticalPositionValueType__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum base__VerticalPositionValueType
{
/// <PRE><BLOCKQUOTE>
///   -- Definition --
///   The spatial object is on ground level.
/// </BLOCKQUOTE></PRE>
	base__VerticalPositionValueType__onGroundSurface,	///< xs:string value="onGroundSurface"
/// <PRE><BLOCKQUOTE>
///   -- Definition --
///   The spatial object is suspended or elevated.
/// </BLOCKQUOTE></PRE>
	base__VerticalPositionValueType__suspendedOrElevated,	///< xs:string value="suspendedOrElevated"
/// <PRE><BLOCKQUOTE>
///   -- Definition --
///   The spatial object is underground.
/// </BLOCKQUOTE></PRE>
	base__VerticalPositionValueType__underground,	///< xs:string value="underground"
};

/// @brief A class wrapper.
///
class base__VerticalPositionValueType_ : public xsd__anyType
{ public:
    enum base__VerticalPositionValueType  __item;                       
};


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://inspire.ec.europa.eu/schemas/base2/1.0                            *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://inspire.ec.europa.eu/schemas/lunom/3.0                            *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.interactive-instruments.de/ShapeChange/AppInfo                *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.opengis.net/gml/3.2                                           *
 *                                                                            *
\******************************************************************************/

/// @brief "http://www.opengis.net/gml/3.2":CurveInterpolationType is a simpleType restriction of XSD type xs:string.
///
/// <PRE><BLOCKQUOTE>
///   gml:CurveInterpolationType is a list of codes that may be used to identify the interpolation mechanisms specified by an application schema.
/// </BLOCKQUOTE></PRE>
/// @note The enum values are prefixed with "gml__CurveInterpolationType__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum gml__CurveInterpolationType
{
	gml__CurveInterpolationType__linear,	///< xs:string value="linear"
	gml__CurveInterpolationType__geodesic,	///< xs:string value="geodesic"
	gml__CurveInterpolationType__circularArc3Points,	///< xs:string value="circularArc3Points"
	gml__CurveInterpolationType__circularArc2PointWithBulge,	///< xs:string value="circularArc2PointWithBulge"
	gml__CurveInterpolationType__circularArcCenterPointWithRadius,	///< xs:string value="circularArcCenterPointWithRadius"
	gml__CurveInterpolationType__elliptical,	///< xs:string value="elliptical"
	gml__CurveInterpolationType__clothoid,	///< xs:string value="clothoid"
	gml__CurveInterpolationType__conic,	///< xs:string value="conic"
	gml__CurveInterpolationType__polynomialSpline,	///< xs:string value="polynomialSpline"
	gml__CurveInterpolationType__cubicSpline,	///< xs:string value="cubicSpline"
	gml__CurveInterpolationType__rationalSpline,	///< xs:string value="rationalSpline"
};

/// @brief A class wrapper.
///
class gml__CurveInterpolationType_ : public xsd__anyType
{ public:
    enum gml__CurveInterpolationType     __item;                       
};

/// @brief "http://www.opengis.net/gml/3.2":KnotTypesType is a simpleType restriction of XSD type xs:string.
///
/// <PRE><BLOCKQUOTE>
///   This enumeration type specifies values for the knots' type (see ISO 19107:2003, 6.4.25).
/// </BLOCKQUOTE></PRE>
/// @note The enum values are prefixed with "gml__KnotTypesType__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum gml__KnotTypesType
{
	gml__KnotTypesType__uniform,	///< xs:string value="uniform"
	gml__KnotTypesType__quasiUniform,	///< xs:string value="quasiUniform"
	gml__KnotTypesType__piecewiseBezier,	///< xs:string value="piecewiseBezier"
};

/// @brief A class wrapper.
///
class gml__KnotTypesType_ : public xsd__anyType
{ public:
    enum gml__KnotTypesType              __item;                       
};

/// @brief "http://www.opengis.net/gml/3.2":SurfaceInterpolationType is a simpleType restriction of XSD type xs:string.
///
/// <PRE><BLOCKQUOTE>
///   gml:SurfaceInterpolationType is a list of codes that may be used to identify the interpolation mechanisms specified by an application schema.
/// </BLOCKQUOTE></PRE>
/// @note The enum values are prefixed with "gml__SurfaceInterpolationType__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum gml__SurfaceInterpolationType
{
	gml__SurfaceInterpolationType__none,	///< xs:string value="none"
	gml__SurfaceInterpolationType__planar,	///< xs:string value="planar"
	gml__SurfaceInterpolationType__spherical,	///< xs:string value="spherical"
	gml__SurfaceInterpolationType__elliptical,	///< xs:string value="elliptical"
	gml__SurfaceInterpolationType__conic,	///< xs:string value="conic"
	gml__SurfaceInterpolationType__tin,	///< xs:string value="tin"
	gml__SurfaceInterpolationType__parametricCurve,	///< xs:string value="parametricCurve"
	gml__SurfaceInterpolationType__polynomialSpline,	///< xs:string value="polynomialSpline"
	gml__SurfaceInterpolationType__rationalSpline,	///< xs:string value="rationalSpline"
	gml__SurfaceInterpolationType__triangulatedSpline,	///< xs:string value="triangulatedSpline"
};

/// @brief A class wrapper.
///
class gml__SurfaceInterpolationType_ : public xsd__anyType
{ public:
    enum gml__SurfaceInterpolationType   __item;                       
};

/// @brief "http://www.opengis.net/gml/3.2":AggregationType is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "gml__AggregationType__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum gml__AggregationType
{
	gml__AggregationType__set,	///< xs:string value="set"
	gml__AggregationType__bag,	///< xs:string value="bag"
	gml__AggregationType__sequence,	///< xs:string value="sequence"
	gml__AggregationType__array,	///< xs:string value="array"
	gml__AggregationType__record,	///< xs:string value="record"
	gml__AggregationType__table,	///< xs:string value="table"
};

/// @brief A class wrapper.
///
class gml__AggregationType_ : public xsd__anyType
{ public:
    enum gml__AggregationType            __item;                       
};

/// @brief "http://www.opengis.net/gml/3.2":SignType is a simpleType restriction of XSD type xs:string.
///
/// <PRE><BLOCKQUOTE>
///   gml:SignType is a convenience type with values "+" (plus) and "-" (minus).
/// </BLOCKQUOTE></PRE>
/// @note The enum values are prefixed with "gml__SignType__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum gml__SignType
{
	gml__SignType___x002d,	///< xs:string value="-"
	gml__SignType___x002b,	///< xs:string value="+"
};

/// @brief A class wrapper.
///
class gml__SignType_ : public xsd__anyType
{ public:
    enum gml__SignType                   __item;                       
};

/// @brief "http://www.opengis.net/gml/3.2":UomSymbol is a simpleType restriction of XSD type xs:string.
///
/// <PRE><BLOCKQUOTE>
///   This type specifies a character string of length at least one, and restricted such that it must not contain any of the following characters: ":" (colon), " " (space), (newline), (carriage return), (tab). This allows values corresponding to familiar abbreviations, such as "kg", "m/s", etc. It is recommended that the symbol be an identifier for a unit of measure as specified in the "Unified Code of Units of Measure" (UCUM) (http://aurora.regenstrief.org/UCUM). This provides a set of symbols and a grammar for constructing identifiers for units of measure that are unique, and may be easily entered with a keyboard supporting the limited character set known as 7-bit ASCII. ISO 2955 formerly provided a specification with this scope, but was withdrawn in 2001. UCUM largely follows ISO 2955 with modifications to remove ambiguities and other problems.
/// </BLOCKQUOTE></PRE>
/// Content pattern is "[^: \\n\\r\\t]+".
typedef std::string gml__UomSymbol "[^: \\n\\r\\t]+";

/// @brief A class wrapper.
///
class gml__UomSymbol__ : public xsd__anyType
{ public:
    gml__UomSymbol                       __item;                       
};

/// @brief "http://www.opengis.net/gml/3.2":UomURI is a simpleType restriction of XSD type xs:anyURI.
///
/// <PRE><BLOCKQUOTE>
///   This type specifies a URI, restricted such that it must start with one of the following sequences: "#", "./", "../", or a string of characters followed by a ":". These patterns ensure that the most common URI forms are supported, including absolute and relative URIs and URIs that are simple fragment identifiers, but prohibits certain forms of relative URI that could be mistaken for unit of measure symbol . NOTE It is possible to re-write such a relative URI to conform to the restriction (e.g. "./m/s").
///   In an instance document, on elements of type gml:MeasureType the mandatory uom attribute shall carry a value corresponding to either - a conventional unit of measure symbol,
///   - a link to a definition of a unit of measure that does not have a conventional symbol, or when it is desired to indicate a precise or variant definition.
/// </BLOCKQUOTE></PRE>
/// Content pattern is "([a-zA-Z][a-zA-Z0-9\\-\\+\\.]*:|\\.\\./|\\./|#).*".
typedef xsd__anyURI gml__UomURI "([a-zA-Z][a-zA-Z0-9\\-\\+\\.]*:|\\.\\./|\\./|#).*";

/// @brief A class wrapper.
///
class gml__UomURI__ : public xsd__anyType
{ public:
    gml__UomURI                          __item;                       
};

/// @brief "http://www.opengis.net/gml/3.2":SequenceRuleEnumeration is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "gml__SequenceRuleEnumeration__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum gml__SequenceRuleEnumeration
{
	gml__SequenceRuleEnumeration__Linear,	///< xs:string value="Linear"
	gml__SequenceRuleEnumeration__Boustrophedonic,	///< xs:string value="Boustrophedonic"
	gml__SequenceRuleEnumeration__Cantor_diagonal,	///< xs:string value="Cantor-diagonal"
	gml__SequenceRuleEnumeration__Spiral,	///< xs:string value="Spiral"
	gml__SequenceRuleEnumeration__Morton,	///< xs:string value="Morton"
	gml__SequenceRuleEnumeration__Hilbert,	///< xs:string value="Hilbert"
};

/// @brief A class wrapper.
///
class gml__SequenceRuleEnumeration_ : public xsd__anyType
{ public:
    enum gml__SequenceRuleEnumeration    __item;                       
};

/// @brief "http://www.opengis.net/gml/3.2":AxisDirection is a simpleType restriction of XSD type xs:string.
///
/// <PRE><BLOCKQUOTE>
///   The value of a gml:AxisDirection indicates the incrementation order to be used on an axis of the grid.
/// </BLOCKQUOTE></PRE>
/// Content pattern is "[\\+\\-][1-9][0-9]*".
typedef std::string gml__AxisDirection "[\\+\\-][1-9][0-9]*";

/// @brief A class wrapper.
///
class gml__AxisDirection__ : public xsd__anyType
{ public:
    gml__AxisDirection                   __item;                       
};

/// @brief "http://www.opengis.net/gml/3.2":TimeIndeterminateValueType is a simpleType restriction of XSD type xs:string.
///
/// <PRE><BLOCKQUOTE>
///   These values are interpreted as follows: - "unknown" indicates that no specific value for temporal position is provided.
///   - "now" indicates that the specified value shall be replaced with the current temporal position whenever the value is accessed.
///   - "before" indicates that the actual temporal position is unknown, but it is known to be before the specified value.
///   - "after" indicates that the actual temporal position is unknown, but it is known to be after the specified value.
///   A value for indeterminatePosition may - be used either alone, or - qualify a specific value for temporal position.
/// </BLOCKQUOTE></PRE>
/// @note The enum values are prefixed with "gml__TimeIndeterminateValueType__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum gml__TimeIndeterminateValueType
{
	gml__TimeIndeterminateValueType__after,	///< xs:string value="after"
	gml__TimeIndeterminateValueType__before,	///< xs:string value="before"
	gml__TimeIndeterminateValueType__now,	///< xs:string value="now"
	gml__TimeIndeterminateValueType__unknown,	///< xs:string value="unknown"
};

/// @brief A class wrapper.
///
class gml__TimeIndeterminateValueType_ : public xsd__anyType
{ public:
    enum gml__TimeIndeterminateValueType  __item;                       
};

/// @brief "http://www.opengis.net/gml/3.2":CountExtentType is a simpleType restriction of list "http://www.opengis.net/gml/3.2":integerOrNilReasonList of length 2.
///
typedef gml__integerOrNilReasonList gml__CountExtentType;

/// @brief "http://www.opengis.net/gml/3.2":CompassPointEnumeration is a simpleType restriction of XSD type xs:string.
///
/// <PRE><BLOCKQUOTE>
///   These directions are necessarily approximate, giving direction with a precision of 22.5. It is thus generally unnecessary to specify the reference frame, though this may be detailed in the definition of a GML application language.
/// </BLOCKQUOTE></PRE>
/// @note The enum values are prefixed with "gml__CompassPointEnumeration__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum gml__CompassPointEnumeration
{
	gml__CompassPointEnumeration__N = 'N',	///< xs:string value="N"
	gml__CompassPointEnumeration__E = 'E',	///< xs:string value="E"
	gml__CompassPointEnumeration__S = 'S',	///< xs:string value="S"
	gml__CompassPointEnumeration__W = 'W',	///< xs:string value="W"
	gml__CompassPointEnumeration__NNE = 88,	///< xs:string value="NNE"
	gml__CompassPointEnumeration__NE = 89,	///< xs:string value="NE"
	gml__CompassPointEnumeration__ENE = 90,	///< xs:string value="ENE"
	gml__CompassPointEnumeration__ESE = 91,	///< xs:string value="ESE"
	gml__CompassPointEnumeration__SE = 92,	///< xs:string value="SE"
	gml__CompassPointEnumeration__SSE = 93,	///< xs:string value="SSE"
	gml__CompassPointEnumeration__SSW = 94,	///< xs:string value="SSW"
	gml__CompassPointEnumeration__SW = 95,	///< xs:string value="SW"
	gml__CompassPointEnumeration__WSW = 96,	///< xs:string value="WSW"
	gml__CompassPointEnumeration__WNW = 97,	///< xs:string value="WNW"
	gml__CompassPointEnumeration__NW = 98,	///< xs:string value="NW"
	gml__CompassPointEnumeration__NNW = 99,	///< xs:string value="NNW"
};

/// @brief A class wrapper.
///
class gml__CompassPointEnumeration_ : public xsd__anyType
{ public:
    enum gml__CompassPointEnumeration    __item;                       
};

/// @brief "http://www.opengis.net/gml/3.2":SuccessionType is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "gml__SuccessionType__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum gml__SuccessionType
{
	gml__SuccessionType__substitution,	///< xs:string value="substitution"
	gml__SuccessionType__division,	///< xs:string value="division"
	gml__SuccessionType__fusion,	///< xs:string value="fusion"
	gml__SuccessionType__initiation,	///< xs:string value="initiation"
};

/// @brief A class wrapper.
///
class gml__SuccessionType_ : public xsd__anyType
{ public:
    enum gml__SuccessionType             __item;                       
};

/// @brief "http://www.opengis.net/gml/3.2":DegreeValueType is a simpleType restriction of XSD type xs:nonNegativeInteger.
///
/// Value range is lowest to 359.
typedef xsd__nonNegativeInteger gml__DegreeValueType /* to 359 (inclusive) @warning: could not determine if this type is numeric */;

/// @brief A class wrapper.
///
class gml__DegreeValueType__ : public xsd__anyType
{ public:
    gml__DegreeValueType                 __item;                       
};

/// @brief "http://www.opengis.net/gml/3.2":DecimalMinutesType is a simpleType restriction of XSD type xs:decimal.
///
/// Value range is 0.00 to 60.00 (exclusive).
typedef xsd__decimal gml__DecimalMinutesType;

/// @brief A class wrapper.
///
class gml__DecimalMinutesType__ : public xsd__anyType
{ public:
    gml__DecimalMinutesType              __item;                       
};

/// @brief "http://www.opengis.net/gml/3.2":ArcMinutesType is a simpleType restriction of XSD type xs:nonNegativeInteger.
///
/// Value range is lowest to 59.
typedef xsd__nonNegativeInteger gml__ArcMinutesType /* to 59 (inclusive) @warning: could not determine if this type is numeric */;

/// @brief A class wrapper.
///
class gml__ArcMinutesType__ : public xsd__anyType
{ public:
    gml__ArcMinutesType                  __item;                       
};

/// @brief "http://www.opengis.net/gml/3.2":ArcSecondsType is a simpleType restriction of XSD type xs:decimal.
///
/// Value range is 0.00 to 60.00 (exclusive).
typedef xsd__decimal gml__ArcSecondsType;

/// @brief A class wrapper.
///
class gml__ArcSecondsType__ : public xsd__anyType
{ public:
    gml__ArcSecondsType                  __item;                       
};

/// @brief "http://www.opengis.net/gml/3.2":IncrementOrder is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "gml__IncrementOrder__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum gml__IncrementOrder
{
	gml__IncrementOrder___x002bx_x002by,	///< xs:string value="+x+y"
	gml__IncrementOrder___x002by_x002bx,	///< xs:string value="+y+x"
	gml__IncrementOrder___x002bx_y,	///< xs:string value="+x-y"
	gml__IncrementOrder___x002dx_y,	///< xs:string value="-x-y"
};

/// @brief A class wrapper.
///
class gml__IncrementOrder_ : public xsd__anyType
{ public:
    enum gml__IncrementOrder             __item;                       
};


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.isotc211.org/2005/gmd                                         *
 *                                                                            *
\******************************************************************************/

/// @brief "http://www.isotc211.org/2005/gmd":MD_PixelOrientationCode_Type is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "gmd__MD_x005fPixelOrientationCode_x005fType__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum gmd__MD_x005fPixelOrientationCode_x005fType
{
	gmd__MD_x005fPixelOrientationCode_x005fType__center,	///< xs:string value="center"
	gmd__MD_x005fPixelOrientationCode_x005fType__lowerLeft,	///< xs:string value="lowerLeft"
	gmd__MD_x005fPixelOrientationCode_x005fType__lowerRight,	///< xs:string value="lowerRight"
	gmd__MD_x005fPixelOrientationCode_x005fType__upperRight,	///< xs:string value="upperRight"
	gmd__MD_x005fPixelOrientationCode_x005fType__upperLeft,	///< xs:string value="upperLeft"
};

/// @brief A class wrapper.
///
class gmd__MD_x005fPixelOrientationCode_x005fType_ : public xsd__anyType
{ public:
    enum gmd__MD_x005fPixelOrientationCode_x005fType  __item;                       
};

/// @brief "http://www.isotc211.org/2005/gmd":MD_ObligationCode_Type is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "gmd__MD_x005fObligationCode_x005fType__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum gmd__MD_x005fObligationCode_x005fType
{
	gmd__MD_x005fObligationCode_x005fType__mandatory,	///< xs:string value="mandatory"
	gmd__MD_x005fObligationCode_x005fType__optional,	///< xs:string value="optional"
	gmd__MD_x005fObligationCode_x005fType__conditional,	///< xs:string value="conditional"
};

/// @brief A class wrapper.
///
class gmd__MD_x005fObligationCode_x005fType_ : public xsd__anyType
{ public:
    enum gmd__MD_x005fObligationCode_x005fType  __item;                       
};

/// @brief "http://www.isotc211.org/2005/gmd":MD_TopicCategoryCode_Type is a simpleType restriction of XSD type xs:string.
///
/// <PRE><BLOCKQUOTE>
///   High-level geospatial data thematic classification to assist in the grouping and search of available geospatial datasets
/// </BLOCKQUOTE></PRE>
/// @note The enum values are prefixed with "gmd__MD_x005fTopicCategoryCode_x005fType__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum gmd__MD_x005fTopicCategoryCode_x005fType
{
	gmd__MD_x005fTopicCategoryCode_x005fType__farming,	///< xs:string value="farming"
	gmd__MD_x005fTopicCategoryCode_x005fType__biota,	///< xs:string value="biota"
	gmd__MD_x005fTopicCategoryCode_x005fType__boundaries,	///< xs:string value="boundaries"
	gmd__MD_x005fTopicCategoryCode_x005fType__climatologyMeteorologyAtmosphere,	///< xs:string value="climatologyMeteorologyAtmosphere"
	gmd__MD_x005fTopicCategoryCode_x005fType__economy,	///< xs:string value="economy"
	gmd__MD_x005fTopicCategoryCode_x005fType__elevation,	///< xs:string value="elevation"
	gmd__MD_x005fTopicCategoryCode_x005fType__environment,	///< xs:string value="environment"
	gmd__MD_x005fTopicCategoryCode_x005fType__geoscientificInformation,	///< xs:string value="geoscientificInformation"
	gmd__MD_x005fTopicCategoryCode_x005fType__health,	///< xs:string value="health"
	gmd__MD_x005fTopicCategoryCode_x005fType__imageryBaseMapsEarthCover,	///< xs:string value="imageryBaseMapsEarthCover"
	gmd__MD_x005fTopicCategoryCode_x005fType__intelligenceMilitary,	///< xs:string value="intelligenceMilitary"
	gmd__MD_x005fTopicCategoryCode_x005fType__inlandWaters,	///< xs:string value="inlandWaters"
	gmd__MD_x005fTopicCategoryCode_x005fType__location,	///< xs:string value="location"
	gmd__MD_x005fTopicCategoryCode_x005fType__oceans,	///< xs:string value="oceans"
	gmd__MD_x005fTopicCategoryCode_x005fType__planningCadastre,	///< xs:string value="planningCadastre"
	gmd__MD_x005fTopicCategoryCode_x005fType__society,	///< xs:string value="society"
	gmd__MD_x005fTopicCategoryCode_x005fType__structure,	///< xs:string value="structure"
	gmd__MD_x005fTopicCategoryCode_x005fType__transportation,	///< xs:string value="transportation"
	gmd__MD_x005fTopicCategoryCode_x005fType__utilitiesCommunication,	///< xs:string value="utilitiesCommunication"
};

/// @brief A class wrapper.
///
class gmd__MD_x005fTopicCategoryCode_x005fType_ : public xsd__anyType
{ public:
    enum gmd__MD_x005fTopicCategoryCode_x005fType  __item;                       
};


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.w3.org/1999/xlink                                             *
 *                                                                            *
\******************************************************************************/

/// @brief "http://www.w3.org/1999/xlink":typeType is a simpleType restriction of XSD type xs:token.
///
/// @note The enum values are prefixed with "xlink__typeType__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum xlink__typeType
{
	xlink__typeType__simple,	///< xs:token value="simple"
	xlink__typeType__extended,	///< xs:token value="extended"
	xlink__typeType__title,	///< xs:token value="title"
	xlink__typeType__resource,	///< xs:token value="resource"
	xlink__typeType__locator,	///< xs:token value="locator"
	xlink__typeType__arc,	///< xs:token value="arc"
};

/// @brief A class wrapper.
///
class xlink__typeType_ : public xsd__anyType
{ public:
    enum xlink__typeType                 __item;                       
};

/// @brief "http://www.w3.org/1999/xlink":hrefType is a simpleType restriction of XSD type xs:anyURI.
///
typedef xsd__anyURI xlink__hrefType;

/// @brief A class wrapper.
///
class xlink__hrefType__ : public xsd__anyType
{ public:
    xlink__hrefType                      __item;                       
};

/// @brief "http://www.w3.org/1999/xlink":roleType is a simpleType restriction of XSD type xs:anyURI.
///
/// Length of this string is 1 to unbounded.
typedef xsd__anyURI xlink__roleType 1;

/// @brief A class wrapper.
///
class xlink__roleType__ : public xsd__anyType
{ public:
    xlink__roleType                      __item;                       
};

/// @brief "http://www.w3.org/1999/xlink":arcroleType is a simpleType restriction of XSD type xs:anyURI.
///
/// Length of this string is 1 to unbounded.
typedef xsd__anyURI xlink__arcroleType 1;

/// @brief A class wrapper.
///
class xlink__arcroleType__ : public xsd__anyType
{ public:
    xlink__arcroleType                   __item;                       
};

/// @brief "http://www.w3.org/1999/xlink":titleAttrType is a simpleType restriction of XSD type xs:string.
///
typedef std::string xlink__titleAttrType;

/// @brief A class wrapper.
///
class xlink__titleAttrType__ : public xsd__anyType
{ public:
    xlink__titleAttrType                 __item;                       
};

/// @brief "http://www.w3.org/1999/xlink":showType is a simpleType restriction of XSD type xs:token.
///
/// @note The enum values are prefixed with "xlink__showType__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum xlink__showType
{
	xlink__showType__new_,	///< xs:token value="new"
	xlink__showType__replace,	///< xs:token value="replace"
	xlink__showType__embed,	///< xs:token value="embed"
	xlink__showType__other,	///< xs:token value="other"
	xlink__showType__none,	///< xs:token value="none"
};

/// @brief A class wrapper.
///
class xlink__showType_ : public xsd__anyType
{ public:
    enum xlink__showType                 __item;                       
};

/// @brief "http://www.w3.org/1999/xlink":actuateType is a simpleType restriction of XSD type xs:token.
///
/// @note The enum values are prefixed with "xlink__actuateType__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum xlink__actuateType
{
	xlink__actuateType__onLoad,	///< xs:token value="onLoad"
	xlink__actuateType__onRequest,	///< xs:token value="onRequest"
	xlink__actuateType__other,	///< xs:token value="other"
	xlink__actuateType__none,	///< xs:token value="none"
};

/// @brief A class wrapper.
///
class xlink__actuateType_ : public xsd__anyType
{ public:
    enum xlink__actuateType              __item;                       
};

/// @brief "http://www.w3.org/1999/xlink":labelType is a simpleType restriction of XSD type xs:NCName.
///
typedef xsd__NCName xlink__labelType;

/// @brief A class wrapper.
///
class xlink__labelType__ : public xsd__anyType
{ public:
    xlink__labelType                     __item;                       
};

/// @brief "http://www.w3.org/1999/xlink":fromType is a simpleType restriction of XSD type xs:NCName.
///
typedef xsd__NCName xlink__fromType;

/// @brief A class wrapper.
///
class xlink__fromType__ : public xsd__anyType
{ public:
    xlink__fromType                      __item;                       
};

/// @brief "http://www.w3.org/1999/xlink":toType is a simpleType restriction of XSD type xs:NCName.
///
typedef xsd__NCName xlink__toType;

/// @brief A class wrapper.
///
class xlink__toType__ : public xsd__anyType
{ public:
    xlink__toType                        __item;                       
};


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.isotc211.org/2005/gco                                         *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.isotc211.org/2005/gss                                         *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.isotc211.org/2005/gts                                         *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.isotc211.org/2005/gsr                                         *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://inspire.ec.europa.eu/schemas/base/3.3                             *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://inspire.ec.europa.eu/schemas/base2/1.0                            *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://inspire.ec.europa.eu/schemas/lunom/3.0                            *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.interactive-instruments.de/ShapeChange/AppInfo                *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.opengis.net/gml/3.2                                           *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.isotc211.org/2005/gmd                                         *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.w3.org/1999/xlink                                             *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.isotc211.org/2005/gco                                         *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.isotc211.org/2005/gss                                         *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.isotc211.org/2005/gts                                         *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.isotc211.org/2005/gsr                                         *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.isotc211.org/2005/gmd                                         *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.w3.org/1999/xlink                                             *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.isotc211.org/2005/gco                                         *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.isotc211.org/2005/gss                                         *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.isotc211.org/2005/gts                                         *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.isotc211.org/2005/gsr                                         *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.isotc211.org/2005/gmd                                         *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.w3.org/1999/xlink                                             *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.isotc211.org/2005/gco                                         *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.isotc211.org/2005/gss                                         *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.isotc211.org/2005/gts                                         *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.isotc211.org/2005/gsr                                         *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.isotc211.org/2005/gmd                                         *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.w3.org/1999/xlink                                             *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.isotc211.org/2005/gco                                         *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.isotc211.org/2005/gss                                         *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.isotc211.org/2005/gts                                         *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.isotc211.org/2005/gsr                                         *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.isotc211.org/2005/gmd                                         *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.w3.org/1999/xlink                                             *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.isotc211.org/2005/gco                                         *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.isotc211.org/2005/gss                                         *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.isotc211.org/2005/gts                                         *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.isotc211.org/2005/gsr                                         *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://inspire.ec.europa.eu/schemas/plu/3.0                              *
 *                                                                            *
\******************************************************************************/

/// @brief "http://inspire.ec.europa.eu/schemas/plu/3.0":ZoningElementPropertyType is a complexType.
///
/// class plu__ZoningElementPropertyType operations:
/// - plu__ZoningElementPropertyType* soap_new_plu__ZoningElementPropertyType(soap*) allocate and default initialize
/// - plu__ZoningElementPropertyType* soap_new_plu__ZoningElementPropertyType(soap*, int num) allocate array and default initialize values
/// - plu__ZoningElementPropertyType* soap_new_req_plu__ZoningElementPropertyType(soap*, ...) allocate, set required members
/// - plu__ZoningElementPropertyType* soap_new_set_plu__ZoningElementPropertyType(soap*, ...) allocate, set all public members
/// - plu__ZoningElementPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_plu__ZoningElementPropertyType(soap*, plu__ZoningElementPropertyType*) deserialize from a stream
/// - int soap_write_plu__ZoningElementPropertyType(soap*, plu__ZoningElementPropertyType*) serialize to a stream
/// - plu__ZoningElementPropertyType* plu__ZoningElementPropertyType::soap_dup(soap*) returns deep copy of plu__ZoningElementPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - plu__ZoningElementPropertyType::soap_del() deep deletes plu__ZoningElementPropertyType data members, use only after plu__ZoningElementPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class plu__ZoningElementPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __plu__ZoningElementPropertyType_sequence
    {
/// <PRE><BLOCKQUOTE>
///   -- Name --
///   zoning element
///   -- Definition --
///   A spatial object which is homogeneous regarding the permitted uses of land based on zoning which separate one set of land uses from another.
///   -- Description --
///   Zoning elements refer to the regulation of the kinds of activities which will be acceptable on particular lots (such as open space, residential, agricultural, commercial or industrial). The intensity of use at which those activities can be performed (from low-density housing such as single family homes to high-density such as high-rise apartment buildings), the height of buildings, the amount of space that structures may occupy, the proportions of the types of space on a lot, such as how much landscaped space, impervious surface, traffic lanes, and parking may be provided.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://inspire.ec.europa.eu/schemas/plu/3.0:""http://inspire.ec.europa.eu/schemas/plu/3.0":ZoningElement.
    plu__ZoningElementType*              ZoningElement                  1;	///< Required element.
    }                                   *__ZoningElementPropertyType_sequence 0;
//  END OF SEQUENCE
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":AssociationAttributeGroup">.
/// Attribute "nilReason" of XSD type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  :nilReason                     0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         gml__remoteSchema              0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":OwnershipAttributeGroup">.
/// Attribute "owns" of XSD type xs:boolean.
   @bool                                 :owns                          0 = false;	///< Default attribute value="false".
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://inspire.ec.europa.eu/schemas/plu/3.0":OfficialDocumentationPropertyType is a complexType.
///
/// class plu__OfficialDocumentationPropertyType operations:
/// - plu__OfficialDocumentationPropertyType* soap_new_plu__OfficialDocumentationPropertyType(soap*) allocate and default initialize
/// - plu__OfficialDocumentationPropertyType* soap_new_plu__OfficialDocumentationPropertyType(soap*, int num) allocate array and default initialize values
/// - plu__OfficialDocumentationPropertyType* soap_new_req_plu__OfficialDocumentationPropertyType(soap*, ...) allocate, set required members
/// - plu__OfficialDocumentationPropertyType* soap_new_set_plu__OfficialDocumentationPropertyType(soap*, ...) allocate, set all public members
/// - plu__OfficialDocumentationPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_plu__OfficialDocumentationPropertyType(soap*, plu__OfficialDocumentationPropertyType*) deserialize from a stream
/// - int soap_write_plu__OfficialDocumentationPropertyType(soap*, plu__OfficialDocumentationPropertyType*) serialize to a stream
/// - plu__OfficialDocumentationPropertyType* plu__OfficialDocumentationPropertyType::soap_dup(soap*) returns deep copy of plu__OfficialDocumentationPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - plu__OfficialDocumentationPropertyType::soap_del() deep deletes plu__OfficialDocumentationPropertyType data members, use only after plu__OfficialDocumentationPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class plu__OfficialDocumentationPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __plu__OfficialDocumentationPropertyType_sequence
    {
/// <PRE><BLOCKQUOTE>
///   -- Name --
///   official documentation
///   -- Definition --
///   The official documentation that composes the spatial plan; it may be composed of, the applicable legislation, the regulations, cartographic elements, descriptive elements that may be associated with the complete spatial plan, a zoning element or a supplementary regulation . In some Member States the actual textual regulation will be part of the data set (and can be put in the regulationText attribute), in other Member States the text will not be part of the data set and will be referenced via a reference to a document or a legal act.
///   At least one of the three voidable values shall be provided.
///   -- Description --
///   NOTE: The LegislationCitation is the value type of the attribute regulation reference. An example of a regulation reference would be: http://www2.vlaanderen.be /ruimtelijk/grup/00350/00362_00001/data/ 212_00362_00001_d_0BVR.pdf.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://inspire.ec.europa.eu/schemas/plu/3.0:""http://inspire.ec.europa.eu/schemas/plu/3.0":OfficialDocumentation.
    plu__OfficialDocumentationType*      OfficialDocumentation          1;	///< Required element.
    }                                   *__OfficialDocumentationPropertyType_sequence 0;
//  END OF SEQUENCE
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":AssociationAttributeGroup">.
/// Attribute "nilReason" of XSD type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  :nilReason                     0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         gml__remoteSchema              0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":OwnershipAttributeGroup">.
/// Attribute "owns" of XSD type xs:boolean.
   @bool                                 :owns                          0 = false;	///< Default attribute value="false".
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://inspire.ec.europa.eu/schemas/plu/3.0":DimensioningIndicationMeasureValuePropertyType is a complexType.
///
/// class plu__DimensioningIndicationMeasureValuePropertyType operations:
/// - plu__DimensioningIndicationMeasureValuePropertyType* soap_new_plu__DimensioningIndicationMeasureValuePropertyType(soap*) allocate and default initialize
/// - plu__DimensioningIndicationMeasureValuePropertyType* soap_new_plu__DimensioningIndicationMeasureValuePropertyType(soap*, int num) allocate array and default initialize values
/// - plu__DimensioningIndicationMeasureValuePropertyType* soap_new_req_plu__DimensioningIndicationMeasureValuePropertyType(soap*, ...) allocate, set required members
/// - plu__DimensioningIndicationMeasureValuePropertyType* soap_new_set_plu__DimensioningIndicationMeasureValuePropertyType(soap*, ...) allocate, set all public members
/// - plu__DimensioningIndicationMeasureValuePropertyType::soap_default(soap*) default initialize members
/// - int soap_read_plu__DimensioningIndicationMeasureValuePropertyType(soap*, plu__DimensioningIndicationMeasureValuePropertyType*) deserialize from a stream
/// - int soap_write_plu__DimensioningIndicationMeasureValuePropertyType(soap*, plu__DimensioningIndicationMeasureValuePropertyType*) serialize to a stream
/// - plu__DimensioningIndicationMeasureValuePropertyType* plu__DimensioningIndicationMeasureValuePropertyType::soap_dup(soap*) returns deep copy of plu__DimensioningIndicationMeasureValuePropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - plu__DimensioningIndicationMeasureValuePropertyType::soap_del() deep deletes plu__DimensioningIndicationMeasureValuePropertyType data members, use only after plu__DimensioningIndicationMeasureValuePropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class plu__DimensioningIndicationMeasureValuePropertyType : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   -- Name --
///   dimension indication measure value
///   -- Definition --
///   Dimensioning indication whose value is a measure.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://inspire.ec.europa.eu/schemas/plu/3.0:""http://inspire.ec.europa.eu/schemas/plu/3.0":DimensioningIndicationMeasureValue.
    plu__DimensioningIndicationMeasureValueType*  DimensioningIndicationMeasureValue 1;	///< Required element.
};

/// @brief "http://inspire.ec.europa.eu/schemas/plu/3.0":DimensioningIndicationIntegerValuePropertyType is a complexType.
///
/// class plu__DimensioningIndicationIntegerValuePropertyType operations:
/// - plu__DimensioningIndicationIntegerValuePropertyType* soap_new_plu__DimensioningIndicationIntegerValuePropertyType(soap*) allocate and default initialize
/// - plu__DimensioningIndicationIntegerValuePropertyType* soap_new_plu__DimensioningIndicationIntegerValuePropertyType(soap*, int num) allocate array and default initialize values
/// - plu__DimensioningIndicationIntegerValuePropertyType* soap_new_req_plu__DimensioningIndicationIntegerValuePropertyType(soap*, ...) allocate, set required members
/// - plu__DimensioningIndicationIntegerValuePropertyType* soap_new_set_plu__DimensioningIndicationIntegerValuePropertyType(soap*, ...) allocate, set all public members
/// - plu__DimensioningIndicationIntegerValuePropertyType::soap_default(soap*) default initialize members
/// - int soap_read_plu__DimensioningIndicationIntegerValuePropertyType(soap*, plu__DimensioningIndicationIntegerValuePropertyType*) deserialize from a stream
/// - int soap_write_plu__DimensioningIndicationIntegerValuePropertyType(soap*, plu__DimensioningIndicationIntegerValuePropertyType*) serialize to a stream
/// - plu__DimensioningIndicationIntegerValuePropertyType* plu__DimensioningIndicationIntegerValuePropertyType::soap_dup(soap*) returns deep copy of plu__DimensioningIndicationIntegerValuePropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - plu__DimensioningIndicationIntegerValuePropertyType::soap_del() deep deletes plu__DimensioningIndicationIntegerValuePropertyType data members, use only after plu__DimensioningIndicationIntegerValuePropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class plu__DimensioningIndicationIntegerValuePropertyType : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   -- Name --
///   dimension indication integer value
///   -- Definition --
///   Dimensioning indication whose value is of type integer.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://inspire.ec.europa.eu/schemas/plu/3.0:""http://inspire.ec.europa.eu/schemas/plu/3.0":DimensioningIndicationIntegerValue.
    plu__DimensioningIndicationIntegerValueType*  DimensioningIndicationIntegerValue 1;	///< Required element.
};

/// @brief "http://inspire.ec.europa.eu/schemas/plu/3.0":DimensioningIndicationCharacterValuePropertyType is a complexType.
///
/// class plu__DimensioningIndicationCharacterValuePropertyType operations:
/// - plu__DimensioningIndicationCharacterValuePropertyType* soap_new_plu__DimensioningIndicationCharacterValuePropertyType(soap*) allocate and default initialize
/// - plu__DimensioningIndicationCharacterValuePropertyType* soap_new_plu__DimensioningIndicationCharacterValuePropertyType(soap*, int num) allocate array and default initialize values
/// - plu__DimensioningIndicationCharacterValuePropertyType* soap_new_req_plu__DimensioningIndicationCharacterValuePropertyType(soap*, ...) allocate, set required members
/// - plu__DimensioningIndicationCharacterValuePropertyType* soap_new_set_plu__DimensioningIndicationCharacterValuePropertyType(soap*, ...) allocate, set all public members
/// - plu__DimensioningIndicationCharacterValuePropertyType::soap_default(soap*) default initialize members
/// - int soap_read_plu__DimensioningIndicationCharacterValuePropertyType(soap*, plu__DimensioningIndicationCharacterValuePropertyType*) deserialize from a stream
/// - int soap_write_plu__DimensioningIndicationCharacterValuePropertyType(soap*, plu__DimensioningIndicationCharacterValuePropertyType*) serialize to a stream
/// - plu__DimensioningIndicationCharacterValuePropertyType* plu__DimensioningIndicationCharacterValuePropertyType::soap_dup(soap*) returns deep copy of plu__DimensioningIndicationCharacterValuePropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - plu__DimensioningIndicationCharacterValuePropertyType::soap_del() deep deletes plu__DimensioningIndicationCharacterValuePropertyType data members, use only after plu__DimensioningIndicationCharacterValuePropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class plu__DimensioningIndicationCharacterValuePropertyType : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   -- Name --
///   dimension indication character value
///   -- Definition --
///   Dimensioning indication whose value is of type CharacterString.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://inspire.ec.europa.eu/schemas/plu/3.0:""http://inspire.ec.europa.eu/schemas/plu/3.0":DimensioningIndicationCharacterValue.
    plu__DimensioningIndicationCharacterValueType*  DimensioningIndicationCharacterValue 1;	///< Required element.
};

/// @brief "http://inspire.ec.europa.eu/schemas/plu/3.0":SupplementaryRegulationPropertyType is a complexType.
///
/// class plu__SupplementaryRegulationPropertyType operations:
/// - plu__SupplementaryRegulationPropertyType* soap_new_plu__SupplementaryRegulationPropertyType(soap*) allocate and default initialize
/// - plu__SupplementaryRegulationPropertyType* soap_new_plu__SupplementaryRegulationPropertyType(soap*, int num) allocate array and default initialize values
/// - plu__SupplementaryRegulationPropertyType* soap_new_req_plu__SupplementaryRegulationPropertyType(soap*, ...) allocate, set required members
/// - plu__SupplementaryRegulationPropertyType* soap_new_set_plu__SupplementaryRegulationPropertyType(soap*, ...) allocate, set all public members
/// - plu__SupplementaryRegulationPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_plu__SupplementaryRegulationPropertyType(soap*, plu__SupplementaryRegulationPropertyType*) deserialize from a stream
/// - int soap_write_plu__SupplementaryRegulationPropertyType(soap*, plu__SupplementaryRegulationPropertyType*) serialize to a stream
/// - plu__SupplementaryRegulationPropertyType* plu__SupplementaryRegulationPropertyType::soap_dup(soap*) returns deep copy of plu__SupplementaryRegulationPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - plu__SupplementaryRegulationPropertyType::soap_del() deep deletes plu__SupplementaryRegulationPropertyType data members, use only after plu__SupplementaryRegulationPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class plu__SupplementaryRegulationPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __plu__SupplementaryRegulationPropertyType_sequence
    {
/// <PRE><BLOCKQUOTE>
///   -- Name --
///   supplementary regulation
///   -- Definition --
///   A spatial object (point, line or polygon) of a spatial plan that provides supplementary information and/or limitation of the use of land/water necessary for spatial planning reasons or to formalise external rules defined in legal text.
///   -- Description --
///   NOTE the supplementary regulations affects all land use that overlap with the geometry
///   EXAMPLE an air field generates restriction in its surroundings regarding aircraft landing, radar and telecommunication devices. It is the buffer around these artefacts that generates the supplementary regulation on the Land Use.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://inspire.ec.europa.eu/schemas/plu/3.0:""http://inspire.ec.europa.eu/schemas/plu/3.0":SupplementaryRegulation.
    plu__SupplementaryRegulationType*    SupplementaryRegulation        1;	///< Required element.
    }                                   *__SupplementaryRegulationPropertyType_sequence 0;
//  END OF SEQUENCE
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":AssociationAttributeGroup">.
/// Attribute "nilReason" of XSD type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  :nilReason                     0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         gml__remoteSchema              0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":OwnershipAttributeGroup">.
/// Attribute "owns" of XSD type xs:boolean.
   @bool                                 :owns                          0 = false;	///< Default attribute value="false".
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://inspire.ec.europa.eu/schemas/plu/3.0":DimensioningIndicationValueType is a complexType.
///
/// class plu__DimensioningIndicationValueType operations:
/// - plu__DimensioningIndicationValueType* soap_new_plu__DimensioningIndicationValueType(soap*) allocate and default initialize
/// - plu__DimensioningIndicationValueType* soap_new_plu__DimensioningIndicationValueType(soap*, int num) allocate array and default initialize values
/// - plu__DimensioningIndicationValueType* soap_new_req_plu__DimensioningIndicationValueType(soap*, ...) allocate, set required members
/// - plu__DimensioningIndicationValueType* soap_new_set_plu__DimensioningIndicationValueType(soap*, ...) allocate, set all public members
/// - plu__DimensioningIndicationValueType::soap_default(soap*) default initialize members
/// - int soap_read_plu__DimensioningIndicationValueType(soap*, plu__DimensioningIndicationValueType*) deserialize from a stream
/// - int soap_write_plu__DimensioningIndicationValueType(soap*, plu__DimensioningIndicationValueType*) serialize to a stream
/// - plu__DimensioningIndicationValueType* plu__DimensioningIndicationValueType::soap_dup(soap*) returns deep copy of plu__DimensioningIndicationValueType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - plu__DimensioningIndicationValueType::soap_del() deep deletes plu__DimensioningIndicationValueType data members, use only after plu__DimensioningIndicationValueType::soap_dup(NULL) (use soapcpp2 -Ed)
class plu__DimensioningIndicationValueType : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   -- Definition --
///   Description of the dimension indication.
/// </BLOCKQUOTE></PRE>
/// Element "indicationReference" of XSD type xs:string.
    std::string                          indicationReference            1;	///< Required element.
};

/// @brief "http://inspire.ec.europa.eu/schemas/plu/3.0":DimensioningIndicationValuePropertyType is a complexType.
///
/// class plu__DimensioningIndicationValuePropertyType operations:
/// - plu__DimensioningIndicationValuePropertyType* soap_new_plu__DimensioningIndicationValuePropertyType(soap*) allocate and default initialize
/// - plu__DimensioningIndicationValuePropertyType* soap_new_plu__DimensioningIndicationValuePropertyType(soap*, int num) allocate array and default initialize values
/// - plu__DimensioningIndicationValuePropertyType* soap_new_req_plu__DimensioningIndicationValuePropertyType(soap*, ...) allocate, set required members
/// - plu__DimensioningIndicationValuePropertyType* soap_new_set_plu__DimensioningIndicationValuePropertyType(soap*, ...) allocate, set all public members
/// - plu__DimensioningIndicationValuePropertyType::soap_default(soap*) default initialize members
/// - int soap_read_plu__DimensioningIndicationValuePropertyType(soap*, plu__DimensioningIndicationValuePropertyType*) deserialize from a stream
/// - int soap_write_plu__DimensioningIndicationValuePropertyType(soap*, plu__DimensioningIndicationValuePropertyType*) serialize to a stream
/// - plu__DimensioningIndicationValuePropertyType* plu__DimensioningIndicationValuePropertyType::soap_dup(soap*) returns deep copy of plu__DimensioningIndicationValuePropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - plu__DimensioningIndicationValuePropertyType::soap_del() deep deletes plu__DimensioningIndicationValuePropertyType data members, use only after plu__DimensioningIndicationValuePropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class plu__DimensioningIndicationValuePropertyType : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   -- Name --
///   Dimension Indication
///   -- Definition --
///   Specifications about the dimensioning of the urban developments.
/// </BLOCKQUOTE></PRE>
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="DimensioningIndicationValue"> with global elements <DimensioningIndicationMeasureValue> <DimensioningIndicationIntegerValue> <DimensioningIndicationCharacterValue> <DimensioningIndicationRealValue>
   $int                                  __unionDimensioningIndicationValue;	///< Union _plu__union_DimensioningIndicationValuePropertyType selector: set to SOAP_UNION__plu__union_DimensioningIndicationValuePropertyType_<fieldname>
/// Union for substitutionGroup plu__DimensioningIndicationValue.
    union _plu__union_DimensioningIndicationValuePropertyType
    {
/// <PRE><BLOCKQUOTE>
///   -- Name --
///   Dimension Indication
///   -- Definition --
///   Specifications about the dimensioning of the urban developments.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://inspire.ec.europa.eu/schemas/plu/3.0:""http://inspire.ec.europa.eu/schemas/plu/3.0":DimensioningIndicationValue.
    plu__DimensioningIndicationValueType*  DimensioningIndicationValue    nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   -- Name --
///   dimension indication measure value
///   -- Definition --
///   Dimensioning indication whose value is a measure.
/// </BLOCKQUOTE></PRE>
/// Element "http://inspire.ec.europa.eu/schemas/plu/3.0":DimensioningIndicationMeasureValue.
    plu__DimensioningIndicationMeasureValueType*  DimensioningIndicationMeasureValue nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   -- Name --
///   dimension indication integer value
///   -- Definition --
///   Dimensioning indication whose value is of type integer.
/// </BLOCKQUOTE></PRE>
/// Element "http://inspire.ec.europa.eu/schemas/plu/3.0":DimensioningIndicationIntegerValue.
    plu__DimensioningIndicationIntegerValueType*  DimensioningIndicationIntegerValue nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   -- Name --
///   dimension indication character value
///   -- Definition --
///   Dimensioning indication whose value is of type CharacterString.
/// </BLOCKQUOTE></PRE>
/// Element "http://inspire.ec.europa.eu/schemas/plu/3.0":DimensioningIndicationCharacterValue.
    plu__DimensioningIndicationCharacterValueType*  DimensioningIndicationCharacterValue nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   -- Name --
///   dimension indication real value
///   -- Definition --
///   Dimensioning indication whose value is a floating point number.
/// </BLOCKQUOTE></PRE>
/// Element "http://inspire.ec.europa.eu/schemas/plu/3.0":DimensioningIndicationRealValue.
    plu__DimensioningIndicationRealValueType*  DimensioningIndicationRealValue nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_DimensioningIndicationValuePropertyType;
//  END OF SUBSTITUTIONS
};

/// @brief "http://inspire.ec.europa.eu/schemas/plu/3.0":SpatialPlanPropertyType is a complexType.
///
/// class plu__SpatialPlanPropertyType operations:
/// - plu__SpatialPlanPropertyType* soap_new_plu__SpatialPlanPropertyType(soap*) allocate and default initialize
/// - plu__SpatialPlanPropertyType* soap_new_plu__SpatialPlanPropertyType(soap*, int num) allocate array and default initialize values
/// - plu__SpatialPlanPropertyType* soap_new_req_plu__SpatialPlanPropertyType(soap*, ...) allocate, set required members
/// - plu__SpatialPlanPropertyType* soap_new_set_plu__SpatialPlanPropertyType(soap*, ...) allocate, set all public members
/// - plu__SpatialPlanPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_plu__SpatialPlanPropertyType(soap*, plu__SpatialPlanPropertyType*) deserialize from a stream
/// - int soap_write_plu__SpatialPlanPropertyType(soap*, plu__SpatialPlanPropertyType*) serialize to a stream
/// - plu__SpatialPlanPropertyType* plu__SpatialPlanPropertyType::soap_dup(soap*) returns deep copy of plu__SpatialPlanPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - plu__SpatialPlanPropertyType::soap_del() deep deletes plu__SpatialPlanPropertyType data members, use only after plu__SpatialPlanPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class plu__SpatialPlanPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __plu__SpatialPlanPropertyType_sequence
    {
/// <PRE><BLOCKQUOTE>
///   -- Name --
///   spatial plan
///   -- Definition --
///   A set of documents that indicates a strategic direction for the development of a given geographic area, states the policies, priorities, programmes and land allocations that will implement the strategic direction and influences the distribution of people and activities in spaces of various scales. Spatial plans may be developed for urban planning, regional planning, environmental planning, landscape planning, national spatial plans, or spatial planning at the Union level.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://inspire.ec.europa.eu/schemas/plu/3.0:""http://inspire.ec.europa.eu/schemas/plu/3.0":SpatialPlan.
    plu__SpatialPlanType*                SpatialPlan                    1;	///< Required element.
    }                                   *__SpatialPlanPropertyType_sequence 0;
//  END OF SEQUENCE
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":AssociationAttributeGroup">.
/// Attribute "nilReason" of XSD type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  :nilReason                     0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         gml__remoteSchema              0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":OwnershipAttributeGroup">.
/// Attribute "owns" of XSD type xs:boolean.
   @bool                                 :owns                          0 = false;	///< Default attribute value="false".
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://inspire.ec.europa.eu/schemas/plu/3.0":DimensioningIndicationRealValuePropertyType is a complexType.
///
/// class plu__DimensioningIndicationRealValuePropertyType operations:
/// - plu__DimensioningIndicationRealValuePropertyType* soap_new_plu__DimensioningIndicationRealValuePropertyType(soap*) allocate and default initialize
/// - plu__DimensioningIndicationRealValuePropertyType* soap_new_plu__DimensioningIndicationRealValuePropertyType(soap*, int num) allocate array and default initialize values
/// - plu__DimensioningIndicationRealValuePropertyType* soap_new_req_plu__DimensioningIndicationRealValuePropertyType(soap*, ...) allocate, set required members
/// - plu__DimensioningIndicationRealValuePropertyType* soap_new_set_plu__DimensioningIndicationRealValuePropertyType(soap*, ...) allocate, set all public members
/// - plu__DimensioningIndicationRealValuePropertyType::soap_default(soap*) default initialize members
/// - int soap_read_plu__DimensioningIndicationRealValuePropertyType(soap*, plu__DimensioningIndicationRealValuePropertyType*) deserialize from a stream
/// - int soap_write_plu__DimensioningIndicationRealValuePropertyType(soap*, plu__DimensioningIndicationRealValuePropertyType*) serialize to a stream
/// - plu__DimensioningIndicationRealValuePropertyType* plu__DimensioningIndicationRealValuePropertyType::soap_dup(soap*) returns deep copy of plu__DimensioningIndicationRealValuePropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - plu__DimensioningIndicationRealValuePropertyType::soap_del() deep deletes plu__DimensioningIndicationRealValuePropertyType data members, use only after plu__DimensioningIndicationRealValuePropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class plu__DimensioningIndicationRealValuePropertyType : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   -- Name --
///   dimension indication real value
///   -- Definition --
///   Dimensioning indication whose value is a floating point number.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://inspire.ec.europa.eu/schemas/plu/3.0:""http://inspire.ec.europa.eu/schemas/plu/3.0":DimensioningIndicationRealValue.
    plu__DimensioningIndicationRealValueType*  DimensioningIndicationRealValue 1;	///< Required element.
};

/// @brief "http://inspire.ec.europa.eu/schemas/plu/3.0":OrdinanceValueType is a complexType.
///
/// class plu__OrdinanceValueType operations:
/// - plu__OrdinanceValueType* soap_new_plu__OrdinanceValueType(soap*) allocate and default initialize
/// - plu__OrdinanceValueType* soap_new_plu__OrdinanceValueType(soap*, int num) allocate array and default initialize values
/// - plu__OrdinanceValueType* soap_new_req_plu__OrdinanceValueType(soap*, ...) allocate, set required members
/// - plu__OrdinanceValueType* soap_new_set_plu__OrdinanceValueType(soap*, ...) allocate, set all public members
/// - plu__OrdinanceValueType::soap_default(soap*) default initialize members
/// - int soap_read_plu__OrdinanceValueType(soap*, plu__OrdinanceValueType*) deserialize from a stream
/// - int soap_write_plu__OrdinanceValueType(soap*, plu__OrdinanceValueType*) serialize to a stream
/// - plu__OrdinanceValueType* plu__OrdinanceValueType::soap_dup(soap*) returns deep copy of plu__OrdinanceValueType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - plu__OrdinanceValueType::soap_del() deep deletes plu__OrdinanceValueType data members, use only after plu__OrdinanceValueType::soap_dup(NULL) (use soapcpp2 -Ed)
class plu__OrdinanceValueType : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   -- Definition --
///   Date of the relevant administrative ordinance.
///   -- Description --
///   NOTE This attribute is multiple because, independently from the current legal status of the plan, there can be references to the dates of more than one ordinance, in relation to the different steps that the planning process has already undergone (e.g. ordinance for the preparation of a new plan, ordinance of adoption, ordinance of approval, etc.).
/// </BLOCKQUOTE></PRE>
/// Element "ordinanceDate" of XSD type xs:dateTime.
    time_t                               ordinanceDate                  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   -- Definition --
///   Reference to relevant administrative ordinance.
///   -- Description --
///   NOTE This attribute is multiple because, independently from the current legal status of the plan, there can be references to more than one ordinance, in relation to the different steps that the planning process has already undergone (e.g. ordinance for the preparation of a new plan, ordinance of adoption, ordinance of approval, etc.).
/// </BLOCKQUOTE></PRE>
/// Element "ordinanceReference" of XSD type xs:string.
    std::string                          ordinanceReference             1;	///< Required element.
};

/// @brief "http://inspire.ec.europa.eu/schemas/plu/3.0":OrdinanceValuePropertyType is a complexType.
///
/// class plu__OrdinanceValuePropertyType operations:
/// - plu__OrdinanceValuePropertyType* soap_new_plu__OrdinanceValuePropertyType(soap*) allocate and default initialize
/// - plu__OrdinanceValuePropertyType* soap_new_plu__OrdinanceValuePropertyType(soap*, int num) allocate array and default initialize values
/// - plu__OrdinanceValuePropertyType* soap_new_req_plu__OrdinanceValuePropertyType(soap*, ...) allocate, set required members
/// - plu__OrdinanceValuePropertyType* soap_new_set_plu__OrdinanceValuePropertyType(soap*, ...) allocate, set all public members
/// - plu__OrdinanceValuePropertyType::soap_default(soap*) default initialize members
/// - int soap_read_plu__OrdinanceValuePropertyType(soap*, plu__OrdinanceValuePropertyType*) deserialize from a stream
/// - int soap_write_plu__OrdinanceValuePropertyType(soap*, plu__OrdinanceValuePropertyType*) serialize to a stream
/// - plu__OrdinanceValuePropertyType* plu__OrdinanceValuePropertyType::soap_dup(soap*) returns deep copy of plu__OrdinanceValuePropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - plu__OrdinanceValuePropertyType::soap_del() deep deletes plu__OrdinanceValuePropertyType data members, use only after plu__OrdinanceValuePropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class plu__OrdinanceValuePropertyType : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   -- Definition --
///   Reference to administrative ordinance. Ordinance is a regulation/rule that is adopted by an authority that is legally mandated to take such ordinance.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://inspire.ec.europa.eu/schemas/plu/3.0:""http://inspire.ec.europa.eu/schemas/plu/3.0":OrdinanceValue.
    plu__OrdinanceValueType*             OrdinanceValue                 1;	///< Required element.
};

/// @brief "http://inspire.ec.europa.eu/schemas/plu/3.0":BackgroundMapValueType is a complexType.
///
/// class plu__BackgroundMapValueType operations:
/// - plu__BackgroundMapValueType* soap_new_plu__BackgroundMapValueType(soap*) allocate and default initialize
/// - plu__BackgroundMapValueType* soap_new_plu__BackgroundMapValueType(soap*, int num) allocate array and default initialize values
/// - plu__BackgroundMapValueType* soap_new_req_plu__BackgroundMapValueType(soap*, ...) allocate, set required members
/// - plu__BackgroundMapValueType* soap_new_set_plu__BackgroundMapValueType(soap*, ...) allocate, set all public members
/// - plu__BackgroundMapValueType::soap_default(soap*) default initialize members
/// - int soap_read_plu__BackgroundMapValueType(soap*, plu__BackgroundMapValueType*) deserialize from a stream
/// - int soap_write_plu__BackgroundMapValueType(soap*, plu__BackgroundMapValueType*) serialize to a stream
/// - plu__BackgroundMapValueType* plu__BackgroundMapValueType::soap_dup(soap*) returns deep copy of plu__BackgroundMapValueType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - plu__BackgroundMapValueType::soap_del() deep deletes plu__BackgroundMapValueType data members, use only after plu__BackgroundMapValueType::soap_dup(NULL) (use soapcpp2 -Ed)
class plu__BackgroundMapValueType : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   -- Name --
///   background map date
///   -- Definition --
///   Date of the background map used.
/// </BLOCKQUOTE></PRE>
/// Element "backgroundMapDate" of XSD type xs:dateTime.
    time_t                               backgroundMapDate              1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   -- Definition --
///   Reference to the background map that has been used.
/// </BLOCKQUOTE></PRE>
/// Element "backgroundMapReference" of XSD type xs:string.
    std::string                          backgroundMapReference         1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   -- Name --
///   background map URI
///   -- Definition --
///   URI referring to service that provides background map.
/// </BLOCKQUOTE></PRE>
/// class _plu__BackgroundMapValueType_backgroudMapURI operations:
/// - _plu__BackgroundMapValueType_backgroudMapURI* soap_new__plu__BackgroundMapValueType_backgroudMapURI(soap*) allocate and default initialize
/// - _plu__BackgroundMapValueType_backgroudMapURI* soap_new__plu__BackgroundMapValueType_backgroudMapURI(soap*, int num) allocate array and default initialize values
/// - _plu__BackgroundMapValueType_backgroudMapURI* soap_new_req__plu__BackgroundMapValueType_backgroudMapURI(soap*, ...) allocate, set required members
/// - _plu__BackgroundMapValueType_backgroudMapURI* soap_new_set__plu__BackgroundMapValueType_backgroudMapURI(soap*, ...) allocate, set all public members
/// - _plu__BackgroundMapValueType_backgroudMapURI::soap_default(soap*) default initialize members
/// - int soap_read__plu__BackgroundMapValueType_backgroudMapURI(soap*, _plu__BackgroundMapValueType_backgroudMapURI*) deserialize from a stream
/// - int soap_write__plu__BackgroundMapValueType_backgroudMapURI(soap*, _plu__BackgroundMapValueType_backgroudMapURI*) serialize to a stream
/// - _plu__BackgroundMapValueType_backgroudMapURI* _plu__BackgroundMapValueType_backgroudMapURI::soap_dup(soap*) returns deep copy of _plu__BackgroundMapValueType_backgroudMapURI, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _plu__BackgroundMapValueType_backgroudMapURI::soap_del() deep deletes _plu__BackgroundMapValueType_backgroudMapURI data members, use only after _plu__BackgroundMapValueType_backgroudMapURI::soap_dup(NULL) (use soapcpp2 -Ed)
    class _plu__BackgroundMapValueType_backgroudMapURI
    {
/// __item wraps "xs:anyURI" simpleContent.
    xsd__anyURI                          __item                        ;
/// Attribute "nilReason" of XSD type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
    }                                   *backgroudMapURI                nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
};

/// @brief "http://inspire.ec.europa.eu/schemas/plu/3.0":BackgroundMapValuePropertyType is a complexType.
///
/// class plu__BackgroundMapValuePropertyType operations:
/// - plu__BackgroundMapValuePropertyType* soap_new_plu__BackgroundMapValuePropertyType(soap*) allocate and default initialize
/// - plu__BackgroundMapValuePropertyType* soap_new_plu__BackgroundMapValuePropertyType(soap*, int num) allocate array and default initialize values
/// - plu__BackgroundMapValuePropertyType* soap_new_req_plu__BackgroundMapValuePropertyType(soap*, ...) allocate, set required members
/// - plu__BackgroundMapValuePropertyType* soap_new_set_plu__BackgroundMapValuePropertyType(soap*, ...) allocate, set all public members
/// - plu__BackgroundMapValuePropertyType::soap_default(soap*) default initialize members
/// - int soap_read_plu__BackgroundMapValuePropertyType(soap*, plu__BackgroundMapValuePropertyType*) deserialize from a stream
/// - int soap_write_plu__BackgroundMapValuePropertyType(soap*, plu__BackgroundMapValuePropertyType*) serialize to a stream
/// - plu__BackgroundMapValuePropertyType* plu__BackgroundMapValuePropertyType::soap_dup(soap*) returns deep copy of plu__BackgroundMapValuePropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - plu__BackgroundMapValuePropertyType::soap_del() deep deletes plu__BackgroundMapValuePropertyType data members, use only after plu__BackgroundMapValuePropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class plu__BackgroundMapValuePropertyType : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   -- Definition --
///   Information regarding the map that has been used as a background in the definition of a spatial plan, a zoning element or a supplementary regulation.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://inspire.ec.europa.eu/schemas/plu/3.0:""http://inspire.ec.europa.eu/schemas/plu/3.0":BackgroundMapValue.
    plu__BackgroundMapValueType*         BackgroundMapValue             1;	///< Required element.
};


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://inspire.ec.europa.eu/schemas/base/3.3                             *
 *                                                                            *
\******************************************************************************/

/// @brief "http://inspire.ec.europa.eu/schemas/base/3.3":SpatialDataSetPropertyType is a complexType.
///
/// class base__SpatialDataSetPropertyType operations:
/// - base__SpatialDataSetPropertyType* soap_new_base__SpatialDataSetPropertyType(soap*) allocate and default initialize
/// - base__SpatialDataSetPropertyType* soap_new_base__SpatialDataSetPropertyType(soap*, int num) allocate array and default initialize values
/// - base__SpatialDataSetPropertyType* soap_new_req_base__SpatialDataSetPropertyType(soap*, ...) allocate, set required members
/// - base__SpatialDataSetPropertyType* soap_new_set_base__SpatialDataSetPropertyType(soap*, ...) allocate, set all public members
/// - base__SpatialDataSetPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_base__SpatialDataSetPropertyType(soap*, base__SpatialDataSetPropertyType*) deserialize from a stream
/// - int soap_write_base__SpatialDataSetPropertyType(soap*, base__SpatialDataSetPropertyType*) serialize to a stream
/// - base__SpatialDataSetPropertyType* base__SpatialDataSetPropertyType::soap_dup(soap*) returns deep copy of base__SpatialDataSetPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - base__SpatialDataSetPropertyType::soap_del() deep deletes base__SpatialDataSetPropertyType data members, use only after base__SpatialDataSetPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class base__SpatialDataSetPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __base__SpatialDataSetPropertyType_sequence
    {
/// <PRE><BLOCKQUOTE>
///   -- Definition --
///   Identifiable collection of spatial data.
///   -- Description --
///   WARNING This element has been deprecated in v3.3.1 of this schema (in accordance with D2.7 v3.3 Recommendation 11 stating that wfs:FeatureCollection should be used instead of base:SpatialDataSet).
///   NOTE The type SpatialDataSet is offered as a pre-defined type for spatial data sets. The scope of this type is packaging pre-defined data sets for the non-direct access download service. It may be reused in thematic application schemas, but if it does not fit an application-schema-specific data set object should be modelled. This type may have the same name and definition like this type, but may have a different set of properties.
///   This type specifies three properties: an external object identifier, a container for metadata (may be void), and an association to zero or more spatial objects.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://inspire.ec.europa.eu/schemas/base/3.3:""http://inspire.ec.europa.eu/schemas/base/3.3":SpatialDataSet.
    base__SpatialDataSetType*            SpatialDataSet                 1;	///< Required element.
    }                                   *__SpatialDataSetPropertyType_sequence 0;
//  END OF SEQUENCE
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":AssociationAttributeGroup">.
/// Attribute "nilReason" of XSD type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  :nilReason                     0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         gml__remoteSchema              0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":OwnershipAttributeGroup">.
/// Attribute "owns" of XSD type xs:boolean.
   @bool                                 :owns                          0 = false;	///< Default attribute value="false".
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://inspire.ec.europa.eu/schemas/base/3.3":IdentifierType is a complexType.
///
/// class base__IdentifierType operations:
/// - base__IdentifierType* soap_new_base__IdentifierType(soap*) allocate and default initialize
/// - base__IdentifierType* soap_new_base__IdentifierType(soap*, int num) allocate array and default initialize values
/// - base__IdentifierType* soap_new_req_base__IdentifierType(soap*, ...) allocate, set required members
/// - base__IdentifierType* soap_new_set_base__IdentifierType(soap*, ...) allocate, set all public members
/// - base__IdentifierType::soap_default(soap*) default initialize members
/// - int soap_read_base__IdentifierType(soap*, base__IdentifierType*) deserialize from a stream
/// - int soap_write_base__IdentifierType(soap*, base__IdentifierType*) serialize to a stream
/// - base__IdentifierType* base__IdentifierType::soap_dup(soap*) returns deep copy of base__IdentifierType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - base__IdentifierType::soap_del() deep deletes base__IdentifierType data members, use only after base__IdentifierType::soap_dup(NULL) (use soapcpp2 -Ed)
class base__IdentifierType : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   -- Definition --
///   A local identifier, assigned by the data provider. The local identifier is unique within the namespace, that is no other spatial object carries the same unique identifier.
///   -- Description --
///   NOTE It is the responsibility of the data provider to guarantee uniqueness of the local identifier within the namespace.
/// </BLOCKQUOTE></PRE>
/// Element "localId" of XSD type xs:string.
    std::string                          localId                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   -- Definition --
///   Namespace uniquely identifying the data source of the spatial object.
///   -- Description --
///   NOTE The namespace value will be owned by the data provider of the spatial object and will be registered in the INSPIRE External Object Identifier Namespaces Register.
/// </BLOCKQUOTE></PRE>
/// Element "namespace" of XSD type xs:string.
    std::string                          namespace_                     1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   -- Definition --
///   The identifier of the particular version of the spatial object, with a maximum length of 25 characters. If the specification of a spatial object type with an external object identifier includes life-cycle information, the version identifier is used to distinguish between the different versions of a spatial object. Within the set of all versions of a spatial object, the version identifier is unique. -- Description --
///   NOTE The maximum length has been selected to allow for time stamps based on ISO 8601, for example, "2007-02-12T12:12:12+05:30" as the version identifier.
///   NOTE 2 The property is void, if the spatial data set does not distinguish between different versions of the spatial object. It is missing, if the spatial object type does not support any life-cycle information.
/// </BLOCKQUOTE></PRE>
/// class _base__IdentifierType_versionId operations:
/// - _base__IdentifierType_versionId* soap_new__base__IdentifierType_versionId(soap*) allocate and default initialize
/// - _base__IdentifierType_versionId* soap_new__base__IdentifierType_versionId(soap*, int num) allocate array and default initialize values
/// - _base__IdentifierType_versionId* soap_new_req__base__IdentifierType_versionId(soap*, ...) allocate, set required members
/// - _base__IdentifierType_versionId* soap_new_set__base__IdentifierType_versionId(soap*, ...) allocate, set all public members
/// - _base__IdentifierType_versionId::soap_default(soap*) default initialize members
/// - int soap_read__base__IdentifierType_versionId(soap*, _base__IdentifierType_versionId*) deserialize from a stream
/// - int soap_write__base__IdentifierType_versionId(soap*, _base__IdentifierType_versionId*) serialize to a stream
/// - _base__IdentifierType_versionId* _base__IdentifierType_versionId::soap_dup(soap*) returns deep copy of _base__IdentifierType_versionId, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _base__IdentifierType_versionId::soap_del() deep deletes _base__IdentifierType_versionId data members, use only after _base__IdentifierType_versionId::soap_dup(NULL) (use soapcpp2 -Ed)
    class _base__IdentifierType_versionId
    {
/// __item wraps "xs:string" simpleContent.
    std::string                          __item                        ;
/// Attribute "nilReason" of XSD type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
    }                                   *versionId                      0;	///< Optional element.
};

/// @brief "http://inspire.ec.europa.eu/schemas/base/3.3":IdentifierPropertyType is a complexType.
///
/// class base__IdentifierPropertyType operations:
/// - base__IdentifierPropertyType* soap_new_base__IdentifierPropertyType(soap*) allocate and default initialize
/// - base__IdentifierPropertyType* soap_new_base__IdentifierPropertyType(soap*, int num) allocate array and default initialize values
/// - base__IdentifierPropertyType* soap_new_req_base__IdentifierPropertyType(soap*, ...) allocate, set required members
/// - base__IdentifierPropertyType* soap_new_set_base__IdentifierPropertyType(soap*, ...) allocate, set all public members
/// - base__IdentifierPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_base__IdentifierPropertyType(soap*, base__IdentifierPropertyType*) deserialize from a stream
/// - int soap_write_base__IdentifierPropertyType(soap*, base__IdentifierPropertyType*) serialize to a stream
/// - base__IdentifierPropertyType* base__IdentifierPropertyType::soap_dup(soap*) returns deep copy of base__IdentifierPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - base__IdentifierPropertyType::soap_del() deep deletes base__IdentifierPropertyType data members, use only after base__IdentifierPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class base__IdentifierPropertyType : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   -- Definition --
///   External unique object identifier published by the responsible body, which may be used by external applications to reference the spatial object.
///   -- Description --
///   NOTE1 External object identifiers are distinct from thematic object identifiers.
///   NOTE 2 The voidable version identifier attribute is not part of the unique identifier of a spatial object and may be used to distinguish two versions of the same spatial object.
///   NOTE 3 The unique identifier will not change during the life-time of a spatial object.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://inspire.ec.europa.eu/schemas/base/3.3:""http://inspire.ec.europa.eu/schemas/base/3.3":Identifier.
    base__IdentifierType*                Identifier                     1;	///< Required element.
};


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://inspire.ec.europa.eu/schemas/base2/1.0                            *
 *                                                                            *
\******************************************************************************/

/// @brief "http://inspire.ec.europa.eu/schemas/base2/1.0":OfficialJournalInformationType is a complexType.
///
/// class base2__OfficialJournalInformationType operations:
/// - base2__OfficialJournalInformationType* soap_new_base2__OfficialJournalInformationType(soap*) allocate and default initialize
/// - base2__OfficialJournalInformationType* soap_new_base2__OfficialJournalInformationType(soap*, int num) allocate array and default initialize values
/// - base2__OfficialJournalInformationType* soap_new_req_base2__OfficialJournalInformationType(soap*, ...) allocate, set required members
/// - base2__OfficialJournalInformationType* soap_new_set_base2__OfficialJournalInformationType(soap*, ...) allocate, set all public members
/// - base2__OfficialJournalInformationType::soap_default(soap*) default initialize members
/// - int soap_read_base2__OfficialJournalInformationType(soap*, base2__OfficialJournalInformationType*) deserialize from a stream
/// - int soap_write_base2__OfficialJournalInformationType(soap*, base2__OfficialJournalInformationType*) serialize to a stream
/// - base2__OfficialJournalInformationType* base2__OfficialJournalInformationType::soap_dup(soap*) returns deep copy of base2__OfficialJournalInformationType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - base2__OfficialJournalInformationType::soap_del() deep deletes base2__OfficialJournalInformationType data members, use only after base2__OfficialJournalInformationType::soap_dup(NULL) (use soapcpp2 -Ed)
class base2__OfficialJournalInformationType : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   -- Name --
///   official journal identification
///   -- Definition --
///   Reference to the location within the official journal within which the legislative instrument was published. This reference shall be comprised of three parts:
///   - the title of the official journal;
///   - the volume and/or series number;
///   - Page number(s);
///   -- Description --
///   EXAMPLE: Official Journal of European Union (OJEU), L108, Volume 50, 1-14
/// </BLOCKQUOTE></PRE>
/// Element "officialJournalIdentification" of XSD type xs:string.
    std::string                          officialJournalIdentification  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   -- Name --
///   ISSN
///   -- Definition --
///   The International Standard Serial Number (ISSN) is an eight-digit number that identifies the periodical publication in which the legislative instrument was published.
///   -- Description --
///   NOTE: Periodical publilcations are issued in successive parts, usually having numerical or chronological designations and required that each serial publication can be uniquely identified.
///   EXAMPLE: OJ Series in which INSPIRE Directive is published has been assigned the ISSN: 1725-2555
/// </BLOCKQUOTE></PRE>
/// Element "ISSN" of XSD type xs:string.
    std::string*                         ISSN                           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   -- Name --
///   ISBN
///   -- Definition --
///   International Standard Book Number (ISBN) is an nine-digit number that uniquely identifies the book in which the legislative instrument was published.
/// </BLOCKQUOTE></PRE>
/// Element "ISBN" of XSD type xs:string.
    std::string*                         ISBN                           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   -- Name --
///   link to online version
///   -- Definition --
///   Link to an online version of the official journal
/// </BLOCKQUOTE></PRE>
/// Element "linkToJournal" of XSD type xs:anyURI.
    xsd__anyURI*                         linkToJournal                  0;	///< Optional element.
};

/// @brief "http://inspire.ec.europa.eu/schemas/base2/1.0":OfficialJournalInformationPropertyType is a complexType.
///
/// class base2__OfficialJournalInformationPropertyType operations:
/// - base2__OfficialJournalInformationPropertyType* soap_new_base2__OfficialJournalInformationPropertyType(soap*) allocate and default initialize
/// - base2__OfficialJournalInformationPropertyType* soap_new_base2__OfficialJournalInformationPropertyType(soap*, int num) allocate array and default initialize values
/// - base2__OfficialJournalInformationPropertyType* soap_new_req_base2__OfficialJournalInformationPropertyType(soap*, ...) allocate, set required members
/// - base2__OfficialJournalInformationPropertyType* soap_new_set_base2__OfficialJournalInformationPropertyType(soap*, ...) allocate, set all public members
/// - base2__OfficialJournalInformationPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_base2__OfficialJournalInformationPropertyType(soap*, base2__OfficialJournalInformationPropertyType*) deserialize from a stream
/// - int soap_write_base2__OfficialJournalInformationPropertyType(soap*, base2__OfficialJournalInformationPropertyType*) serialize to a stream
/// - base2__OfficialJournalInformationPropertyType* base2__OfficialJournalInformationPropertyType::soap_dup(soap*) returns deep copy of base2__OfficialJournalInformationPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - base2__OfficialJournalInformationPropertyType::soap_del() deep deletes base2__OfficialJournalInformationPropertyType data members, use only after base2__OfficialJournalInformationPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class base2__OfficialJournalInformationPropertyType : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   -- Name --
///   official journal information
///   -- Definition --
///   Full citation of the location of the legislative instrument within the official journal.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://inspire.ec.europa.eu/schemas/base2/1.0:""http://inspire.ec.europa.eu/schemas/base2/1.0":OfficialJournalInformation.
    base2__OfficialJournalInformationType*  OfficialJournalInformation     1;	///< Required element.
};

/// @brief "http://inspire.ec.europa.eu/schemas/base2/1.0":LegislationCitationPropertyType is a complexType.
///
/// class base2__LegislationCitationPropertyType operations:
/// - base2__LegislationCitationPropertyType* soap_new_base2__LegislationCitationPropertyType(soap*) allocate and default initialize
/// - base2__LegislationCitationPropertyType* soap_new_base2__LegislationCitationPropertyType(soap*, int num) allocate array and default initialize values
/// - base2__LegislationCitationPropertyType* soap_new_req_base2__LegislationCitationPropertyType(soap*, ...) allocate, set required members
/// - base2__LegislationCitationPropertyType* soap_new_set_base2__LegislationCitationPropertyType(soap*, ...) allocate, set all public members
/// - base2__LegislationCitationPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_base2__LegislationCitationPropertyType(soap*, base2__LegislationCitationPropertyType*) deserialize from a stream
/// - int soap_write_base2__LegislationCitationPropertyType(soap*, base2__LegislationCitationPropertyType*) serialize to a stream
/// - base2__LegislationCitationPropertyType* base2__LegislationCitationPropertyType::soap_dup(soap*) returns deep copy of base2__LegislationCitationPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - base2__LegislationCitationPropertyType::soap_del() deep deletes base2__LegislationCitationPropertyType data members, use only after base2__LegislationCitationPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class base2__LegislationCitationPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __base2__LegislationCitationPropertyType_sequence
    {
/// <PRE><BLOCKQUOTE>
///   -- Name --
///   legislation citation
///   -- Definition --
///   Citation for the purposes of unambiguously referencing a legal act or a specific part of a legal act.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://inspire.ec.europa.eu/schemas/base2/1.0:""http://inspire.ec.europa.eu/schemas/base2/1.0":LegislationCitation.
    base2__LegislationCitationType*      LegislationCitation            1;	///< Required element.
    }                                   *__LegislationCitationPropertyType_sequence 0;
//  END OF SEQUENCE
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":AssociationAttributeGroup">.
/// Attribute "nilReason" of XSD type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  :nilReason                     0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         gml__remoteSchema              0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":OwnershipAttributeGroup">.
/// Attribute "owns" of XSD type xs:boolean.
   @bool                                 :owns                          0 = false;	///< Default attribute value="false".
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://inspire.ec.europa.eu/schemas/base2/1.0":ContactType is a complexType.
///
/// class base2__ContactType operations:
/// - base2__ContactType* soap_new_base2__ContactType(soap*) allocate and default initialize
/// - base2__ContactType* soap_new_base2__ContactType(soap*, int num) allocate array and default initialize values
/// - base2__ContactType* soap_new_req_base2__ContactType(soap*, ...) allocate, set required members
/// - base2__ContactType* soap_new_set_base2__ContactType(soap*, ...) allocate, set all public members
/// - base2__ContactType::soap_default(soap*) default initialize members
/// - int soap_read_base2__ContactType(soap*, base2__ContactType*) deserialize from a stream
/// - int soap_write_base2__ContactType(soap*, base2__ContactType*) serialize to a stream
/// - base2__ContactType* base2__ContactType::soap_dup(soap*) returns deep copy of base2__ContactType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - base2__ContactType::soap_del() deep deletes base2__ContactType data members, use only after base2__ContactType::soap_dup(NULL) (use soapcpp2 -Ed)
class base2__ContactType : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   -- Definition --
///   An address provided as free text.
/// </BLOCKQUOTE></PRE>
/// Element "address" of XSD type "http://www.isotc211.org/2005/gmd":PT_FreeText_PropertyType.
    gmd__PT_x005fFreeText_x005fPropertyType*  address                        0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   -- Definition --
///   Supplementary instructions on how or when to contact an individual or organisation.
///   -- Description --
/// </BLOCKQUOTE></PRE>
/// Element "contactInstructions" of XSD type "http://www.isotc211.org/2005/gmd":PT_FreeText_PropertyType.
    gmd__PT_x005fFreeText_x005fPropertyType*  contactInstructions            0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   -- Definition --
///   An address of the organisation's or individual's electronic mailbox.
///   -- Description --
/// </BLOCKQUOTE></PRE>
/// class _base2__ContactType_electronicMailAddress operations:
/// - _base2__ContactType_electronicMailAddress* soap_new__base2__ContactType_electronicMailAddress(soap*) allocate and default initialize
/// - _base2__ContactType_electronicMailAddress* soap_new__base2__ContactType_electronicMailAddress(soap*, int num) allocate array and default initialize values
/// - _base2__ContactType_electronicMailAddress* soap_new_req__base2__ContactType_electronicMailAddress(soap*, ...) allocate, set required members
/// - _base2__ContactType_electronicMailAddress* soap_new_set__base2__ContactType_electronicMailAddress(soap*, ...) allocate, set all public members
/// - _base2__ContactType_electronicMailAddress::soap_default(soap*) default initialize members
/// - int soap_read__base2__ContactType_electronicMailAddress(soap*, _base2__ContactType_electronicMailAddress*) deserialize from a stream
/// - int soap_write__base2__ContactType_electronicMailAddress(soap*, _base2__ContactType_electronicMailAddress*) serialize to a stream
/// - _base2__ContactType_electronicMailAddress* _base2__ContactType_electronicMailAddress::soap_dup(soap*) returns deep copy of _base2__ContactType_electronicMailAddress, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _base2__ContactType_electronicMailAddress::soap_del() deep deletes _base2__ContactType_electronicMailAddress data members, use only after _base2__ContactType_electronicMailAddress::soap_dup(NULL) (use soapcpp2 -Ed)
    class _base2__ContactType_electronicMailAddress
    {
/// __item wraps "xs:string" simpleContent.
    std::string                          __item                        ;
/// Attribute "nilReason" of XSD type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
    }                                   *electronicMailAddress          0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   -- Definition --
///   Periods of time when the organisation or individual can be contacted.
///   -- Description --
/// </BLOCKQUOTE></PRE>
/// Element "hoursOfService" of XSD type "http://www.isotc211.org/2005/gmd":PT_FreeText_PropertyType.
    gmd__PT_x005fFreeText_x005fPropertyType*  hoursOfService                 0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   -- Definition --
///   Number of a facsimile machine of the organisation or individual.
///   -- Description --
/// </BLOCKQUOTE></PRE>
/// Vector of telephoneFacsimile of length 0..unbounded.
    std::vector<
/// class _base2__ContactType_telephoneFacsimile operations:
/// - _base2__ContactType_telephoneFacsimile* soap_new__base2__ContactType_telephoneFacsimile(soap*) allocate and default initialize
/// - _base2__ContactType_telephoneFacsimile* soap_new__base2__ContactType_telephoneFacsimile(soap*, int num) allocate array and default initialize values
/// - _base2__ContactType_telephoneFacsimile* soap_new_req__base2__ContactType_telephoneFacsimile(soap*, ...) allocate, set required members
/// - _base2__ContactType_telephoneFacsimile* soap_new_set__base2__ContactType_telephoneFacsimile(soap*, ...) allocate, set all public members
/// - _base2__ContactType_telephoneFacsimile::soap_default(soap*) default initialize members
/// - int soap_read__base2__ContactType_telephoneFacsimile(soap*, _base2__ContactType_telephoneFacsimile*) deserialize from a stream
/// - int soap_write__base2__ContactType_telephoneFacsimile(soap*, _base2__ContactType_telephoneFacsimile*) serialize to a stream
/// - _base2__ContactType_telephoneFacsimile* _base2__ContactType_telephoneFacsimile::soap_dup(soap*) returns deep copy of _base2__ContactType_telephoneFacsimile, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _base2__ContactType_telephoneFacsimile::soap_del() deep deletes _base2__ContactType_telephoneFacsimile data members, use only after _base2__ContactType_telephoneFacsimile::soap_dup(NULL) (use soapcpp2 -Ed)
    class _base2__ContactType_telephoneFacsimile
    {
/// __item wraps "xs:string" simpleContent.
    std::string                          __item                        ;
/// Attribute "nilReason" of XSD type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
    }>                                  *telephoneFacsimile             0;
/// <PRE><BLOCKQUOTE>
///   -- Definition --
///   Telephone number of the organisation or individual.
///   -- Description --
/// </BLOCKQUOTE></PRE>
/// Vector of telephoneVoice of length 0..unbounded.
    std::vector<
/// class _base2__ContactType_telephoneVoice operations:
/// - _base2__ContactType_telephoneVoice* soap_new__base2__ContactType_telephoneVoice(soap*) allocate and default initialize
/// - _base2__ContactType_telephoneVoice* soap_new__base2__ContactType_telephoneVoice(soap*, int num) allocate array and default initialize values
/// - _base2__ContactType_telephoneVoice* soap_new_req__base2__ContactType_telephoneVoice(soap*, ...) allocate, set required members
/// - _base2__ContactType_telephoneVoice* soap_new_set__base2__ContactType_telephoneVoice(soap*, ...) allocate, set all public members
/// - _base2__ContactType_telephoneVoice::soap_default(soap*) default initialize members
/// - int soap_read__base2__ContactType_telephoneVoice(soap*, _base2__ContactType_telephoneVoice*) deserialize from a stream
/// - int soap_write__base2__ContactType_telephoneVoice(soap*, _base2__ContactType_telephoneVoice*) serialize to a stream
/// - _base2__ContactType_telephoneVoice* _base2__ContactType_telephoneVoice::soap_dup(soap*) returns deep copy of _base2__ContactType_telephoneVoice, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _base2__ContactType_telephoneVoice::soap_del() deep deletes _base2__ContactType_telephoneVoice data members, use only after _base2__ContactType_telephoneVoice::soap_dup(NULL) (use soapcpp2 -Ed)
    class _base2__ContactType_telephoneVoice
    {
/// __item wraps "xs:string" simpleContent.
    std::string                          __item                        ;
/// Attribute "nilReason" of XSD type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
    }>                                  *telephoneVoice                 0;
/// <PRE><BLOCKQUOTE>
///   -- Definition --
///   Pages provided on the World Wide Web by the organisation or individual.
///   -- Description --
/// </BLOCKQUOTE></PRE>
/// class _base2__ContactType_website operations:
/// - _base2__ContactType_website* soap_new__base2__ContactType_website(soap*) allocate and default initialize
/// - _base2__ContactType_website* soap_new__base2__ContactType_website(soap*, int num) allocate array and default initialize values
/// - _base2__ContactType_website* soap_new_req__base2__ContactType_website(soap*, ...) allocate, set required members
/// - _base2__ContactType_website* soap_new_set__base2__ContactType_website(soap*, ...) allocate, set all public members
/// - _base2__ContactType_website::soap_default(soap*) default initialize members
/// - int soap_read__base2__ContactType_website(soap*, _base2__ContactType_website*) deserialize from a stream
/// - int soap_write__base2__ContactType_website(soap*, _base2__ContactType_website*) serialize to a stream
/// - _base2__ContactType_website* _base2__ContactType_website::soap_dup(soap*) returns deep copy of _base2__ContactType_website, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _base2__ContactType_website::soap_del() deep deletes _base2__ContactType_website data members, use only after _base2__ContactType_website::soap_dup(NULL) (use soapcpp2 -Ed)
    class _base2__ContactType_website
    {
/// __item wraps "xs:anyURI" simpleContent.
    xsd__anyURI                          __item                        ;
/// Attribute "nilReason" of XSD type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
    }                                   *website                        0;	///< Optional element.
};

/// @brief "http://inspire.ec.europa.eu/schemas/base2/1.0":ContactPropertyType is a complexType.
///
/// class base2__ContactPropertyType operations:
/// - base2__ContactPropertyType* soap_new_base2__ContactPropertyType(soap*) allocate and default initialize
/// - base2__ContactPropertyType* soap_new_base2__ContactPropertyType(soap*, int num) allocate array and default initialize values
/// - base2__ContactPropertyType* soap_new_req_base2__ContactPropertyType(soap*, ...) allocate, set required members
/// - base2__ContactPropertyType* soap_new_set_base2__ContactPropertyType(soap*, ...) allocate, set all public members
/// - base2__ContactPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_base2__ContactPropertyType(soap*, base2__ContactPropertyType*) deserialize from a stream
/// - int soap_write_base2__ContactPropertyType(soap*, base2__ContactPropertyType*) serialize to a stream
/// - base2__ContactPropertyType* base2__ContactPropertyType::soap_dup(soap*) returns deep copy of base2__ContactPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - base2__ContactPropertyType::soap_del() deep deletes base2__ContactPropertyType data members, use only after base2__ContactPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class base2__ContactPropertyType : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   -- Name --
///   contact
///   -- Definition --
///   Communication channels by which it is possible to gain access to someone or something.
///   -- Description --
/// </BLOCKQUOTE></PRE>
/// Element reference "http://inspire.ec.europa.eu/schemas/base2/1.0:""http://inspire.ec.europa.eu/schemas/base2/1.0":Contact.
    base2__ContactType*                  Contact                        1;	///< Required element.
};

/// @brief "http://inspire.ec.europa.eu/schemas/base2/1.0":RelatedPartyType is a complexType.
///
/// class base2__RelatedPartyType operations:
/// - base2__RelatedPartyType* soap_new_base2__RelatedPartyType(soap*) allocate and default initialize
/// - base2__RelatedPartyType* soap_new_base2__RelatedPartyType(soap*, int num) allocate array and default initialize values
/// - base2__RelatedPartyType* soap_new_req_base2__RelatedPartyType(soap*, ...) allocate, set required members
/// - base2__RelatedPartyType* soap_new_set_base2__RelatedPartyType(soap*, ...) allocate, set all public members
/// - base2__RelatedPartyType::soap_default(soap*) default initialize members
/// - int soap_read_base2__RelatedPartyType(soap*, base2__RelatedPartyType*) deserialize from a stream
/// - int soap_write_base2__RelatedPartyType(soap*, base2__RelatedPartyType*) serialize to a stream
/// - base2__RelatedPartyType* base2__RelatedPartyType::soap_dup(soap*) returns deep copy of base2__RelatedPartyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - base2__RelatedPartyType::soap_del() deep deletes base2__RelatedPartyType data members, use only after base2__RelatedPartyType::soap_dup(NULL) (use soapcpp2 -Ed)
class base2__RelatedPartyType : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   -- Name --
///   individual name
///   -- Definition --
///   Name of the related person.
/// </BLOCKQUOTE></PRE>
/// Element "individualName" of XSD type "http://www.isotc211.org/2005/gmd":PT_FreeText_PropertyType.
    gmd__PT_x005fFreeText_x005fPropertyType*  individualName                 0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   -- Name --
///   organisation name
///   -- Definition --
///   Name of the related organisation.
/// </BLOCKQUOTE></PRE>
/// Element "organisationName" of XSD type "http://www.isotc211.org/2005/gmd":PT_FreeText_PropertyType.
    gmd__PT_x005fFreeText_x005fPropertyType*  organisationName               0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   -- Name --
///   position name
///   -- Definition --
///   Position of the party in relation to a resource, such as head of department.
/// </BLOCKQUOTE></PRE>
/// Element "positionName" of XSD type "http://www.isotc211.org/2005/gmd":PT_FreeText_PropertyType.
    gmd__PT_x005fFreeText_x005fPropertyType*  positionName                   0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   -- Name --
///   contact
///   -- Definition --
///   Contact information for the related party.
/// </BLOCKQUOTE></PRE>
/// class _base2__RelatedPartyType_contact operations:
/// - _base2__RelatedPartyType_contact* soap_new__base2__RelatedPartyType_contact(soap*) allocate and default initialize
/// - _base2__RelatedPartyType_contact* soap_new__base2__RelatedPartyType_contact(soap*, int num) allocate array and default initialize values
/// - _base2__RelatedPartyType_contact* soap_new_req__base2__RelatedPartyType_contact(soap*, ...) allocate, set required members
/// - _base2__RelatedPartyType_contact* soap_new_set__base2__RelatedPartyType_contact(soap*, ...) allocate, set all public members
/// - _base2__RelatedPartyType_contact::soap_default(soap*) default initialize members
/// - int soap_read__base2__RelatedPartyType_contact(soap*, _base2__RelatedPartyType_contact*) deserialize from a stream
/// - int soap_write__base2__RelatedPartyType_contact(soap*, _base2__RelatedPartyType_contact*) serialize to a stream
/// - _base2__RelatedPartyType_contact* _base2__RelatedPartyType_contact::soap_dup(soap*) returns deep copy of _base2__RelatedPartyType_contact, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _base2__RelatedPartyType_contact::soap_del() deep deletes _base2__RelatedPartyType_contact data members, use only after _base2__RelatedPartyType_contact::soap_dup(NULL) (use soapcpp2 -Ed)
    class _base2__RelatedPartyType_contact
    {
/// <PRE><BLOCKQUOTE>
///   -- Name --
///   contact
///   -- Definition --
///   Communication channels by which it is possible to gain access to someone or something.
///   -- Description --
/// </BLOCKQUOTE></PRE>
/// Element reference "http://inspire.ec.europa.eu/schemas/base2/1.0:""http://inspire.ec.europa.eu/schemas/base2/1.0":Contact.
    base2__ContactType*                  Contact                        1;	///< Required element.
/// Attribute "nilReason" of XSD type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
    }                                   *contact                        0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   -- Definition --
///   Role(s) of the party in relation to a resource, such as owner.
/// </BLOCKQUOTE></PRE>
/// Vector of gml__ReferenceType* of length 0..unbounded.
    std::vector<gml__ReferenceType*    > role                           0;
};

/// @brief "http://inspire.ec.europa.eu/schemas/base2/1.0":RelatedPartyPropertyType is a complexType.
///
/// class base2__RelatedPartyPropertyType operations:
/// - base2__RelatedPartyPropertyType* soap_new_base2__RelatedPartyPropertyType(soap*) allocate and default initialize
/// - base2__RelatedPartyPropertyType* soap_new_base2__RelatedPartyPropertyType(soap*, int num) allocate array and default initialize values
/// - base2__RelatedPartyPropertyType* soap_new_req_base2__RelatedPartyPropertyType(soap*, ...) allocate, set required members
/// - base2__RelatedPartyPropertyType* soap_new_set_base2__RelatedPartyPropertyType(soap*, ...) allocate, set all public members
/// - base2__RelatedPartyPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_base2__RelatedPartyPropertyType(soap*, base2__RelatedPartyPropertyType*) deserialize from a stream
/// - int soap_write_base2__RelatedPartyPropertyType(soap*, base2__RelatedPartyPropertyType*) serialize to a stream
/// - base2__RelatedPartyPropertyType* base2__RelatedPartyPropertyType::soap_dup(soap*) returns deep copy of base2__RelatedPartyPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - base2__RelatedPartyPropertyType::soap_del() deep deletes base2__RelatedPartyPropertyType data members, use only after base2__RelatedPartyPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class base2__RelatedPartyPropertyType : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   -- Name --
///   related party
///   -- Definition --
///   An organisation or a person with a role related to a resource.
///   -- Description --
///   NOTE 1 A party, typically an individual person, acting as a general point of contact for a resource can be specified without providing any particular role.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://inspire.ec.europa.eu/schemas/base2/1.0:""http://inspire.ec.europa.eu/schemas/base2/1.0":RelatedParty.
    base2__RelatedPartyType*             RelatedParty                   1;	///< Required element.
};

/// @brief "http://inspire.ec.europa.eu/schemas/base2/1.0":DocumentCitationPropertyType is a complexType.
///
/// class base2__DocumentCitationPropertyType operations:
/// - base2__DocumentCitationPropertyType* soap_new_base2__DocumentCitationPropertyType(soap*) allocate and default initialize
/// - base2__DocumentCitationPropertyType* soap_new_base2__DocumentCitationPropertyType(soap*, int num) allocate array and default initialize values
/// - base2__DocumentCitationPropertyType* soap_new_req_base2__DocumentCitationPropertyType(soap*, ...) allocate, set required members
/// - base2__DocumentCitationPropertyType* soap_new_set_base2__DocumentCitationPropertyType(soap*, ...) allocate, set all public members
/// - base2__DocumentCitationPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_base2__DocumentCitationPropertyType(soap*, base2__DocumentCitationPropertyType*) deserialize from a stream
/// - int soap_write_base2__DocumentCitationPropertyType(soap*, base2__DocumentCitationPropertyType*) serialize to a stream
/// - base2__DocumentCitationPropertyType* base2__DocumentCitationPropertyType::soap_dup(soap*) returns deep copy of base2__DocumentCitationPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - base2__DocumentCitationPropertyType::soap_del() deep deletes base2__DocumentCitationPropertyType data members, use only after base2__DocumentCitationPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class base2__DocumentCitationPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __base2__DocumentCitationPropertyType_sequence
    {
/// <PRE><BLOCKQUOTE>
///   -- Name --
///   document citation
///   -- Definition --
///   Citation for the purposes of unambiguously referencing a document.
/// </BLOCKQUOTE></PRE>
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="DocumentCitation"> with global elements <LegislationCitation>
   $int                                  __unionDocumentCitation       ;	///< Union _base2__union_DocumentCitationPropertyType selector: set to SOAP_UNION__base2__union_DocumentCitationPropertyType_<fieldname>
/// Union for substitutionGroup base2__DocumentCitation.
    union _base2__union_DocumentCitationPropertyType
    {
/// <PRE><BLOCKQUOTE>
///   -- Name --
///   document citation
///   -- Definition --
///   Citation for the purposes of unambiguously referencing a document.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://inspire.ec.europa.eu/schemas/base2/1.0:""http://inspire.ec.europa.eu/schemas/base2/1.0":DocumentCitation.
    base2__DocumentCitationType*         DocumentCitation               nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   -- Name --
///   legislation citation
///   -- Definition --
///   Citation for the purposes of unambiguously referencing a legal act or a specific part of a legal act.
/// </BLOCKQUOTE></PRE>
/// Element "http://inspire.ec.europa.eu/schemas/base2/1.0":LegislationCitation.
    base2__LegislationCitationType*      LegislationCitation            nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_DocumentCitationPropertyType;
//  END OF SUBSTITUTIONS
    }                                   *__DocumentCitationPropertyType_sequence 0;
//  END OF SEQUENCE
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":AssociationAttributeGroup">.
/// Attribute "nilReason" of XSD type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  :nilReason                     0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         gml__remoteSchema              0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":OwnershipAttributeGroup">.
/// Attribute "owns" of XSD type xs:boolean.
   @bool                                 :owns                          0 = false;	///< Default attribute value="false".
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://inspire.ec.europa.eu/schemas/base2/1.0":ThematicIdentifierType is a complexType.
///
/// class base2__ThematicIdentifierType operations:
/// - base2__ThematicIdentifierType* soap_new_base2__ThematicIdentifierType(soap*) allocate and default initialize
/// - base2__ThematicIdentifierType* soap_new_base2__ThematicIdentifierType(soap*, int num) allocate array and default initialize values
/// - base2__ThematicIdentifierType* soap_new_req_base2__ThematicIdentifierType(soap*, ...) allocate, set required members
/// - base2__ThematicIdentifierType* soap_new_set_base2__ThematicIdentifierType(soap*, ...) allocate, set all public members
/// - base2__ThematicIdentifierType::soap_default(soap*) default initialize members
/// - int soap_read_base2__ThematicIdentifierType(soap*, base2__ThematicIdentifierType*) deserialize from a stream
/// - int soap_write_base2__ThematicIdentifierType(soap*, base2__ThematicIdentifierType*) serialize to a stream
/// - base2__ThematicIdentifierType* base2__ThematicIdentifierType::soap_dup(soap*) returns deep copy of base2__ThematicIdentifierType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - base2__ThematicIdentifierType::soap_del() deep deletes base2__ThematicIdentifierType data members, use only after base2__ThematicIdentifierType::soap_dup(NULL) (use soapcpp2 -Ed)
class base2__ThematicIdentifierType : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   -- Name --
///   identifier
///   -- Definition --
///   Unique identifier used to identify the spatial object within the specified identification scheme.
/// </BLOCKQUOTE></PRE>
/// Element "identifier" of XSD type xs:string.
    std::string                          identifier                     1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   -- Name --
///   identifier scheme
///   -- Definition --
///   Identifier defining the scheme used to assign the identifier.
///   -- Description --
///   NOTE 1: Reporting requirements for different environmental legislation mandate that each spatial object is assigned an identifier conforming to specific lexical rules. NOTE 2: These rules are often inconsistent so a spatial object may be assigned multiple identifiers which are used for object referencing to link information to the spatial object.
/// </BLOCKQUOTE></PRE>
/// Element "identifierScheme" of XSD type xs:string.
    std::string                          identifierScheme               1;	///< Required element.
};

/// @brief "http://inspire.ec.europa.eu/schemas/base2/1.0":ThematicIdentifierPropertyType is a complexType.
///
/// class base2__ThematicIdentifierPropertyType operations:
/// - base2__ThematicIdentifierPropertyType* soap_new_base2__ThematicIdentifierPropertyType(soap*) allocate and default initialize
/// - base2__ThematicIdentifierPropertyType* soap_new_base2__ThematicIdentifierPropertyType(soap*, int num) allocate array and default initialize values
/// - base2__ThematicIdentifierPropertyType* soap_new_req_base2__ThematicIdentifierPropertyType(soap*, ...) allocate, set required members
/// - base2__ThematicIdentifierPropertyType* soap_new_set_base2__ThematicIdentifierPropertyType(soap*, ...) allocate, set all public members
/// - base2__ThematicIdentifierPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_base2__ThematicIdentifierPropertyType(soap*, base2__ThematicIdentifierPropertyType*) deserialize from a stream
/// - int soap_write_base2__ThematicIdentifierPropertyType(soap*, base2__ThematicIdentifierPropertyType*) serialize to a stream
/// - base2__ThematicIdentifierPropertyType* base2__ThematicIdentifierPropertyType::soap_dup(soap*) returns deep copy of base2__ThematicIdentifierPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - base2__ThematicIdentifierPropertyType::soap_del() deep deletes base2__ThematicIdentifierPropertyType data members, use only after base2__ThematicIdentifierPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class base2__ThematicIdentifierPropertyType : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   -- Name --
///   thematic identifier
///   -- Definition --
///   Thematic identifier to uniquely identify the spatial object. -- Description --
///   Some spatial objects may be assigned multiple unique identifiers. These may have been established to meet data exchange requirements of different reporting obligations at International, European or national levels and/or internal data maintenance requirements.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://inspire.ec.europa.eu/schemas/base2/1.0:""http://inspire.ec.europa.eu/schemas/base2/1.0":ThematicIdentifier.
    base2__ThematicIdentifierType*       ThematicIdentifier             1;	///< Required element.
};


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://inspire.ec.europa.eu/schemas/lunom/3.0                            *
 *                                                                            *
\******************************************************************************/

/// @brief "http://inspire.ec.europa.eu/schemas/lunom/3.0":HILUCSPresenceType is a complexType.
///
/// class lunom__HILUCSPresenceType operations:
/// - lunom__HILUCSPresenceType* soap_new_lunom__HILUCSPresenceType(soap*) allocate and default initialize
/// - lunom__HILUCSPresenceType* soap_new_lunom__HILUCSPresenceType(soap*, int num) allocate array and default initialize values
/// - lunom__HILUCSPresenceType* soap_new_req_lunom__HILUCSPresenceType(soap*, ...) allocate, set required members
/// - lunom__HILUCSPresenceType* soap_new_set_lunom__HILUCSPresenceType(soap*, ...) allocate, set all public members
/// - lunom__HILUCSPresenceType::soap_default(soap*) default initialize members
/// - int soap_read_lunom__HILUCSPresenceType(soap*, lunom__HILUCSPresenceType*) deserialize from a stream
/// - int soap_write_lunom__HILUCSPresenceType(soap*, lunom__HILUCSPresenceType*) serialize to a stream
/// - lunom__HILUCSPresenceType* lunom__HILUCSPresenceType::soap_dup(soap*) returns deep copy of lunom__HILUCSPresenceType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - lunom__HILUCSPresenceType::soap_del() deep deletes lunom__HILUCSPresenceType data members, use only after lunom__HILUCSPresenceType::soap_dup(NULL) (use soapcpp2 -Ed)
class lunom__HILUCSPresenceType : public xsd__anyType
{ public:
//  BEGIN CHOICE <xs:choice>
   $int                                  __union_HILUCSPresenceType    ;	///< Union _lunom__union_HILUCSPresenceType selector: set to SOAP_UNION__lunom__union_HILUCSPresenceType_<fieldname>
/// Union for choice in lunom__HILUCSPresenceType.
    union _lunom__union_HILUCSPresenceType
    {
/// Vector of gml__ReferenceType* of length 1..unbounded.
    std::vector<gml__ReferenceType*   > *orderedList                    1;
/// Vector of lunom__HILUCSPercentagePropertyType* of length 1..unbounded.
    std::vector<lunom__HILUCSPercentagePropertyType*> *percentageList                 1;
    }                                    union_HILUCSPresenceType      ;
//  END OF CHOICE
};

/// @brief "http://inspire.ec.europa.eu/schemas/lunom/3.0":HILUCSPresencePropertyType is a complexType.
///
/// class lunom__HILUCSPresencePropertyType operations:
/// - lunom__HILUCSPresencePropertyType* soap_new_lunom__HILUCSPresencePropertyType(soap*) allocate and default initialize
/// - lunom__HILUCSPresencePropertyType* soap_new_lunom__HILUCSPresencePropertyType(soap*, int num) allocate array and default initialize values
/// - lunom__HILUCSPresencePropertyType* soap_new_req_lunom__HILUCSPresencePropertyType(soap*, ...) allocate, set required members
/// - lunom__HILUCSPresencePropertyType* soap_new_set_lunom__HILUCSPresencePropertyType(soap*, ...) allocate, set all public members
/// - lunom__HILUCSPresencePropertyType::soap_default(soap*) default initialize members
/// - int soap_read_lunom__HILUCSPresencePropertyType(soap*, lunom__HILUCSPresencePropertyType*) deserialize from a stream
/// - int soap_write_lunom__HILUCSPresencePropertyType(soap*, lunom__HILUCSPresencePropertyType*) serialize to a stream
/// - lunom__HILUCSPresencePropertyType* lunom__HILUCSPresencePropertyType::soap_dup(soap*) returns deep copy of lunom__HILUCSPresencePropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - lunom__HILUCSPresencePropertyType::soap_del() deep deletes lunom__HILUCSPresencePropertyType data members, use only after lunom__HILUCSPresencePropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class lunom__HILUCSPresencePropertyType : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   -- Name --
///   HILUCS presence
///   -- Definition --
///   Presence of one or several HILUCS values in an area, indicated either as the percentage covered for each value or as the values listed in their order of importance.
///   -- Description --
///   The HILUCS presence data type enables the provision of information on land uses inside one land use object in order to collect more than one land use existence perfectly identifiable by importance order or percentages. NOTE 1: The order of land use value presence without percentages enable providing an order of dominance/importance of each land use present in the land use object
///   NOTE 2: The sum of the percentages can be below 100%, or above. The order is provided according to the respective importance when the percentages are not known.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://inspire.ec.europa.eu/schemas/lunom/3.0:""http://inspire.ec.europa.eu/schemas/lunom/3.0":HILUCSPresence.
    lunom__HILUCSPresenceType*           HILUCSPresence                 1;	///< Required element.
};

/// @brief "http://inspire.ec.europa.eu/schemas/lunom/3.0":SpecificPercentageType is a complexType.
///
/// class lunom__SpecificPercentageType operations:
/// - lunom__SpecificPercentageType* soap_new_lunom__SpecificPercentageType(soap*) allocate and default initialize
/// - lunom__SpecificPercentageType* soap_new_lunom__SpecificPercentageType(soap*, int num) allocate array and default initialize values
/// - lunom__SpecificPercentageType* soap_new_req_lunom__SpecificPercentageType(soap*, ...) allocate, set required members
/// - lunom__SpecificPercentageType* soap_new_set_lunom__SpecificPercentageType(soap*, ...) allocate, set all public members
/// - lunom__SpecificPercentageType::soap_default(soap*) default initialize members
/// - int soap_read_lunom__SpecificPercentageType(soap*, lunom__SpecificPercentageType*) deserialize from a stream
/// - int soap_write_lunom__SpecificPercentageType(soap*, lunom__SpecificPercentageType*) serialize to a stream
/// - lunom__SpecificPercentageType* lunom__SpecificPercentageType::soap_dup(soap*) returns deep copy of lunom__SpecificPercentageType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - lunom__SpecificPercentageType::soap_del() deep deletes lunom__SpecificPercentageType data members, use only after lunom__SpecificPercentageType::soap_dup(NULL) (use soapcpp2 -Ed)
class lunom__SpecificPercentageType : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   -- Definition --
///   specific value category for this specific percentage.
/// </BLOCKQUOTE></PRE>
/// Element "specificValue" of XSD type "http://www.opengis.net/gml/3.2":ReferenceType.
    gml__ReferenceType*                  specificValue                  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   -- Definition --
///   Percentage of land use object that is covered by a specific presence.
///   -- Description --
///   NOTE The percentage is according to the socio-economic importance of the use. In section 5.2.1.1.2. examples of the use of percentages are given.
/// </BLOCKQUOTE></PRE>
/// Element "percentage" of XSD type xs:integer.
    long                                 percentage                     1;	///< Required element.
};

/// @brief "http://inspire.ec.europa.eu/schemas/lunom/3.0":SpecificPercentagePropertyType is a complexType.
///
/// class lunom__SpecificPercentagePropertyType operations:
/// - lunom__SpecificPercentagePropertyType* soap_new_lunom__SpecificPercentagePropertyType(soap*) allocate and default initialize
/// - lunom__SpecificPercentagePropertyType* soap_new_lunom__SpecificPercentagePropertyType(soap*, int num) allocate array and default initialize values
/// - lunom__SpecificPercentagePropertyType* soap_new_req_lunom__SpecificPercentagePropertyType(soap*, ...) allocate, set required members
/// - lunom__SpecificPercentagePropertyType* soap_new_set_lunom__SpecificPercentagePropertyType(soap*, ...) allocate, set all public members
/// - lunom__SpecificPercentagePropertyType::soap_default(soap*) default initialize members
/// - int soap_read_lunom__SpecificPercentagePropertyType(soap*, lunom__SpecificPercentagePropertyType*) deserialize from a stream
/// - int soap_write_lunom__SpecificPercentagePropertyType(soap*, lunom__SpecificPercentagePropertyType*) serialize to a stream
/// - lunom__SpecificPercentagePropertyType* lunom__SpecificPercentagePropertyType::soap_dup(soap*) returns deep copy of lunom__SpecificPercentagePropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - lunom__SpecificPercentagePropertyType::soap_del() deep deletes lunom__SpecificPercentagePropertyType data members, use only after lunom__SpecificPercentagePropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class lunom__SpecificPercentagePropertyType : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   -- Name --
///   specific percentage
///   -- Definition --
///   Percentage of land use object that is covered by this specific presence.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://inspire.ec.europa.eu/schemas/lunom/3.0:""http://inspire.ec.europa.eu/schemas/lunom/3.0":SpecificPercentage.
    lunom__SpecificPercentageType*       SpecificPercentage             1;	///< Required element.
};

/// @brief "http://inspire.ec.europa.eu/schemas/lunom/3.0":SpecificPresenceType is a complexType.
///
/// class lunom__SpecificPresenceType operations:
/// - lunom__SpecificPresenceType* soap_new_lunom__SpecificPresenceType(soap*) allocate and default initialize
/// - lunom__SpecificPresenceType* soap_new_lunom__SpecificPresenceType(soap*, int num) allocate array and default initialize values
/// - lunom__SpecificPresenceType* soap_new_req_lunom__SpecificPresenceType(soap*, ...) allocate, set required members
/// - lunom__SpecificPresenceType* soap_new_set_lunom__SpecificPresenceType(soap*, ...) allocate, set all public members
/// - lunom__SpecificPresenceType::soap_default(soap*) default initialize members
/// - int soap_read_lunom__SpecificPresenceType(soap*, lunom__SpecificPresenceType*) deserialize from a stream
/// - int soap_write_lunom__SpecificPresenceType(soap*, lunom__SpecificPresenceType*) serialize to a stream
/// - lunom__SpecificPresenceType* lunom__SpecificPresenceType::soap_dup(soap*) returns deep copy of lunom__SpecificPresenceType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - lunom__SpecificPresenceType::soap_del() deep deletes lunom__SpecificPresenceType data members, use only after lunom__SpecificPresenceType::soap_dup(NULL) (use soapcpp2 -Ed)
class lunom__SpecificPresenceType : public xsd__anyType
{ public:
//  BEGIN CHOICE <xs:choice>
   $int                                  __union_SpecificPresenceType  ;	///< Union _lunom__union_SpecificPresenceType selector: set to SOAP_UNION__lunom__union_SpecificPresenceType_<fieldname>
/// Union for choice in lunom__SpecificPresenceType.
    union _lunom__union_SpecificPresenceType
    {
/// Vector of gml__ReferenceType* of length 1..unbounded.
    std::vector<gml__ReferenceType*   > *orderedList                    1;
/// Vector of lunom__SpecificPercentagePropertyType* of length 1..unbounded.
    std::vector<lunom__SpecificPercentagePropertyType*> *percentageList                 1;
    }                                    union_SpecificPresenceType    ;
//  END OF CHOICE
};

/// @brief "http://inspire.ec.europa.eu/schemas/lunom/3.0":SpecificPresencePropertyType is a complexType.
///
/// class lunom__SpecificPresencePropertyType operations:
/// - lunom__SpecificPresencePropertyType* soap_new_lunom__SpecificPresencePropertyType(soap*) allocate and default initialize
/// - lunom__SpecificPresencePropertyType* soap_new_lunom__SpecificPresencePropertyType(soap*, int num) allocate array and default initialize values
/// - lunom__SpecificPresencePropertyType* soap_new_req_lunom__SpecificPresencePropertyType(soap*, ...) allocate, set required members
/// - lunom__SpecificPresencePropertyType* soap_new_set_lunom__SpecificPresencePropertyType(soap*, ...) allocate, set all public members
/// - lunom__SpecificPresencePropertyType::soap_default(soap*) default initialize members
/// - int soap_read_lunom__SpecificPresencePropertyType(soap*, lunom__SpecificPresencePropertyType*) deserialize from a stream
/// - int soap_write_lunom__SpecificPresencePropertyType(soap*, lunom__SpecificPresencePropertyType*) serialize to a stream
/// - lunom__SpecificPresencePropertyType* lunom__SpecificPresencePropertyType::soap_dup(soap*) returns deep copy of lunom__SpecificPresencePropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - lunom__SpecificPresencePropertyType::soap_del() deep deletes lunom__SpecificPresencePropertyType data members, use only after lunom__SpecificPresencePropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class lunom__SpecificPresencePropertyType : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   -- Name --
///   specific presence
///   -- Definition --
///   Presence of one or several land use classification values in an area according to the code list
///   provided by the data provider, indicated either as the percentage covered for each value or as
///   the values listed in their order of importance.
///   -- Description --
///   NOTE 1: The order of land use value presence without percentages enable providing an order of dominance/importance of each land use present in the land use object
///   NOTE 2: The sum of the percentages can be below 100%, or above. The order is provided according to the respective importance when the percentages are not known.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://inspire.ec.europa.eu/schemas/lunom/3.0:""http://inspire.ec.europa.eu/schemas/lunom/3.0":SpecificPresence.
    lunom__SpecificPresenceType*         SpecificPresence               1;	///< Required element.
};

/// @brief "http://inspire.ec.europa.eu/schemas/lunom/3.0":HILUCSPercentageType is a complexType.
///
/// class lunom__HILUCSPercentageType operations:
/// - lunom__HILUCSPercentageType* soap_new_lunom__HILUCSPercentageType(soap*) allocate and default initialize
/// - lunom__HILUCSPercentageType* soap_new_lunom__HILUCSPercentageType(soap*, int num) allocate array and default initialize values
/// - lunom__HILUCSPercentageType* soap_new_req_lunom__HILUCSPercentageType(soap*, ...) allocate, set required members
/// - lunom__HILUCSPercentageType* soap_new_set_lunom__HILUCSPercentageType(soap*, ...) allocate, set all public members
/// - lunom__HILUCSPercentageType::soap_default(soap*) default initialize members
/// - int soap_read_lunom__HILUCSPercentageType(soap*, lunom__HILUCSPercentageType*) deserialize from a stream
/// - int soap_write_lunom__HILUCSPercentageType(soap*, lunom__HILUCSPercentageType*) serialize to a stream
/// - lunom__HILUCSPercentageType* lunom__HILUCSPercentageType::soap_dup(soap*) returns deep copy of lunom__HILUCSPercentageType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - lunom__HILUCSPercentageType::soap_del() deep deletes lunom__HILUCSPercentageType data members, use only after lunom__HILUCSPercentageType::soap_dup(NULL) (use soapcpp2 -Ed)
class lunom__HILUCSPercentageType : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   -- Definition --
///   HILUCS category for this HILUCS percentage.
/// </BLOCKQUOTE></PRE>
/// Element "hilucsValue" of XSD type "http://www.opengis.net/gml/3.2":ReferenceType.
    gml__ReferenceType*                  hilucsValue                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   -- Definition --
///   Percentage of land use object that is covered by this specific presence.
///   -- Description --
///   NOTE The percentage is according to the socio-economic importance of the use. In section 5.2.1.1.2. examples of the use of percentages are given.
/// </BLOCKQUOTE></PRE>
/// Element "percentage" of XSD type xs:integer.
    long                                 percentage                     1;	///< Required element.
};

/// @brief "http://inspire.ec.europa.eu/schemas/lunom/3.0":HILUCSPercentagePropertyType is a complexType.
///
/// class lunom__HILUCSPercentagePropertyType operations:
/// - lunom__HILUCSPercentagePropertyType* soap_new_lunom__HILUCSPercentagePropertyType(soap*) allocate and default initialize
/// - lunom__HILUCSPercentagePropertyType* soap_new_lunom__HILUCSPercentagePropertyType(soap*, int num) allocate array and default initialize values
/// - lunom__HILUCSPercentagePropertyType* soap_new_req_lunom__HILUCSPercentagePropertyType(soap*, ...) allocate, set required members
/// - lunom__HILUCSPercentagePropertyType* soap_new_set_lunom__HILUCSPercentagePropertyType(soap*, ...) allocate, set all public members
/// - lunom__HILUCSPercentagePropertyType::soap_default(soap*) default initialize members
/// - int soap_read_lunom__HILUCSPercentagePropertyType(soap*, lunom__HILUCSPercentagePropertyType*) deserialize from a stream
/// - int soap_write_lunom__HILUCSPercentagePropertyType(soap*, lunom__HILUCSPercentagePropertyType*) serialize to a stream
/// - lunom__HILUCSPercentagePropertyType* lunom__HILUCSPercentagePropertyType::soap_dup(soap*) returns deep copy of lunom__HILUCSPercentagePropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - lunom__HILUCSPercentagePropertyType::soap_del() deep deletes lunom__HILUCSPercentagePropertyType data members, use only after lunom__HILUCSPercentagePropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class lunom__HILUCSPercentagePropertyType : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   -- Name --
///   HILUCS percentage
///   -- Definition --
///   Percentage of land use object that is covered by this HILUCS presence.
///   -- Description --
///   NOTE1:The percentage is according to the socio-economic or functional importance of the use.
///   NOTE2:examples are provided in the narrative description part of the data specification.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://inspire.ec.europa.eu/schemas/lunom/3.0:""http://inspire.ec.europa.eu/schemas/lunom/3.0":HILUCSPercentage.
    lunom__HILUCSPercentageType*         HILUCSPercentage               1;	///< Required element.
};


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://www.interactive-instruments.de/ShapeChange/AppInfo                *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://www.opengis.net/gml/3.2                                           *
 *                                                                            *
\******************************************************************************/

/// @brief "http://www.opengis.net/gml/3.2":HistoryPropertyType is a complexType.
///
/// class gml__HistoryPropertyType operations:
/// - gml__HistoryPropertyType* soap_new_gml__HistoryPropertyType(soap*) allocate and default initialize
/// - gml__HistoryPropertyType* soap_new_gml__HistoryPropertyType(soap*, int num) allocate array and default initialize values
/// - gml__HistoryPropertyType* soap_new_req_gml__HistoryPropertyType(soap*, ...) allocate, set required members
/// - gml__HistoryPropertyType* soap_new_set_gml__HistoryPropertyType(soap*, ...) allocate, set all public members
/// - gml__HistoryPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gml__HistoryPropertyType(soap*, gml__HistoryPropertyType*) deserialize from a stream
/// - int soap_write_gml__HistoryPropertyType(soap*, gml__HistoryPropertyType*) serialize to a stream
/// - gml__HistoryPropertyType* gml__HistoryPropertyType::soap_dup(soap*) returns deep copy of gml__HistoryPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__HistoryPropertyType::soap_del() deep deletes gml__HistoryPropertyType data members, use only after gml__HistoryPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__HistoryPropertyType : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   To describe an event an action that occurs at an instant or over an interval of time GML provides the gml:AbtractTimeSlice element. A timeslice encapsulates the time-varying properties of a dynamic feature -- it shall be extended to represent a time stamped projection of a specific feature. The gml:dataSource property describes how the temporal data was acquired.
///   A gml:AbstractTimeSlice instance is a GML object that encapsulates updates of the dynamicor volatileproperties that reflect some change event; it thus includes only those feature properties that have actually changed due to some process.
///   gml:AbstractTimeSlice basically provides a facility for attribute-level time stamping, in contrast to the object-level time stamping of dynamic feature instances. The time slice can thus be viewed as event or process-oriented, whereas a snapshot is more state or structure-oriented. A timeslice has richer causality, whereas a snapshot merely portrays the status of the whole.
/// </BLOCKQUOTE></PRE>
/// Reference "http://www.opengis.net/gml/3.2":AbstractTimeSlice to abstract element.
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractTimeSlice" maxOccurs="unbounded"> with global elements <MovingObjectStatus>
   $int                                  __sizeAbstractTimeSlice        0;
    class __gml__union_HistoryPropertyType
    {
   $int                                  __unionAbstractTimeSlice      ;	///< Union _gml__union_HistoryPropertyType selector: set to SOAP_UNION__gml__union_HistoryPropertyType_<fieldname>
/// Union for substitutionGroup gml__AbstractTimeSlice.
    union _gml__union_HistoryPropertyType
    {
/// Element "http://www.opengis.net/gml/3.2":MovingObjectStatus.
    gml__MovingObjectStatusType*         MovingObjectStatus             nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_HistoryPropertyType     ;
    }                                   *__union_HistoryPropertyType   ;
//  END OF SUBSTITUTIONS
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":OwnershipAttributeGroup">.
/// Attribute "owns" of XSD type xs:boolean.
   @bool                                 owns                           0 = false;	///< Default attribute value="false".
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.opengis.net/gml/3.2":NodeOrEdgePropertyType is a complexType.
///
/// class gml__NodeOrEdgePropertyType operations:
/// - gml__NodeOrEdgePropertyType* soap_new_gml__NodeOrEdgePropertyType(soap*) allocate and default initialize
/// - gml__NodeOrEdgePropertyType* soap_new_gml__NodeOrEdgePropertyType(soap*, int num) allocate array and default initialize values
/// - gml__NodeOrEdgePropertyType* soap_new_req_gml__NodeOrEdgePropertyType(soap*, ...) allocate, set required members
/// - gml__NodeOrEdgePropertyType* soap_new_set_gml__NodeOrEdgePropertyType(soap*, ...) allocate, set all public members
/// - gml__NodeOrEdgePropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gml__NodeOrEdgePropertyType(soap*, gml__NodeOrEdgePropertyType*) deserialize from a stream
/// - int soap_write_gml__NodeOrEdgePropertyType(soap*, gml__NodeOrEdgePropertyType*) serialize to a stream
/// - gml__NodeOrEdgePropertyType* gml__NodeOrEdgePropertyType::soap_dup(soap*) returns deep copy of gml__NodeOrEdgePropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__NodeOrEdgePropertyType::soap_del() deep deletes gml__NodeOrEdgePropertyType data members, use only after gml__NodeOrEdgePropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__NodeOrEdgePropertyType : public xsd__anyType
{ public:
//  BEGIN CHOICE <xs:choice minOccurs="0">
   $int                                  __union_NodeOrEdgePropertyType 0;	///< Union _gml__union_NodeOrEdgePropertyType selector: set to SOAP_UNION__gml__union_NodeOrEdgePropertyType_<fieldname> or 0 to omit
/// Union for choice in gml__NodeOrEdgePropertyType.
    union _gml__union_NodeOrEdgePropertyType
    {
/// <PRE><BLOCKQUOTE>
///   gml:Node represents the 0-dimensional primitive.
///   The optional coboundary of a node (gml:directedEdge) is a sequence of directed edges which are incident on this node. Edges emanating from this node appear in the node coboundary with a negative orientation. If provided, the aggregationType attribute shall have the value "sequence".
///   A node may optionally be realised by a 0-dimensional geometric primitive (gml:pointProperty).
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":Node.
    gml__NodeType*                       Node                           nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   gml:Edge represents the 1-dimensional primitive.
///   The topological boundary of an Edge (gml:directedNode) consists of a negatively directed start Node and a positively directed end Node. The optional coboundary of an edge (gml:directedFace) is a circular sequence of directed faces which are incident on this edge in document order. In the 2D case, the orientation of the face on the left of the edge is "+"; the orientation of the face on the right on its right is "-". If provided, the aggregationType attribute shall have the value "sequence".
///   An edge may optionally be realised by a 1-dimensional geometric primitive (gml:curveProperty).
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":Edge.
    gml__EdgeType*                       Edge                           nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_NodeOrEdgePropertyType  ;
//  END OF CHOICE
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":AssociationAttributeGroup">.
/// Attribute "nilReason" of XSD type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         gml__remoteSchema              0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":OwnershipAttributeGroup">.
/// Attribute "owns" of XSD type xs:boolean.
   @bool                                 owns                           0 = false;	///< Default attribute value="false".
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.opengis.net/gml/3.2":NodePropertyType is a complexType.
///
/// class gml__NodePropertyType operations:
/// - gml__NodePropertyType* soap_new_gml__NodePropertyType(soap*) allocate and default initialize
/// - gml__NodePropertyType* soap_new_gml__NodePropertyType(soap*, int num) allocate array and default initialize values
/// - gml__NodePropertyType* soap_new_req_gml__NodePropertyType(soap*, ...) allocate, set required members
/// - gml__NodePropertyType* soap_new_set_gml__NodePropertyType(soap*, ...) allocate, set all public members
/// - gml__NodePropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gml__NodePropertyType(soap*, gml__NodePropertyType*) deserialize from a stream
/// - int soap_write_gml__NodePropertyType(soap*, gml__NodePropertyType*) serialize to a stream
/// - gml__NodePropertyType* gml__NodePropertyType::soap_dup(soap*) returns deep copy of gml__NodePropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__NodePropertyType::soap_del() deep deletes gml__NodePropertyType data members, use only after gml__NodePropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__NodePropertyType : public xsd__anyType
{ public:
//  BEGIN CHOICE <xs:choice minOccurs="0">
   $int                                  __union_NodePropertyType       0;	///< Union _gml__union_NodePropertyType selector: set to SOAP_UNION__gml__union_NodePropertyType_<fieldname> or 0 to omit
/// Union for choice in gml__NodePropertyType.
    union _gml__union_NodePropertyType
    {
/// <PRE><BLOCKQUOTE>
///   gml:Node represents the 0-dimensional primitive.
///   The optional coboundary of a node (gml:directedEdge) is a sequence of directed edges which are incident on this node. Edges emanating from this node appear in the node coboundary with a negative orientation. If provided, the aggregationType attribute shall have the value "sequence".
///   A node may optionally be realised by a 0-dimensional geometric primitive (gml:pointProperty).
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":Node.
    gml__NodeType*                       Node                           nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_NodePropertyType        ;
//  END OF CHOICE
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":AssociationAttributeGroup">.
/// Attribute "nilReason" of XSD type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         gml__remoteSchema              0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":OwnershipAttributeGroup">.
/// Attribute "owns" of XSD type xs:boolean.
   @bool                                 owns                           0 = false;	///< Default attribute value="false".
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.opengis.net/gml/3.2":FaceOrTopoSolidPropertyType is a complexType.
///
/// class gml__FaceOrTopoSolidPropertyType operations:
/// - gml__FaceOrTopoSolidPropertyType* soap_new_gml__FaceOrTopoSolidPropertyType(soap*) allocate and default initialize
/// - gml__FaceOrTopoSolidPropertyType* soap_new_gml__FaceOrTopoSolidPropertyType(soap*, int num) allocate array and default initialize values
/// - gml__FaceOrTopoSolidPropertyType* soap_new_req_gml__FaceOrTopoSolidPropertyType(soap*, ...) allocate, set required members
/// - gml__FaceOrTopoSolidPropertyType* soap_new_set_gml__FaceOrTopoSolidPropertyType(soap*, ...) allocate, set all public members
/// - gml__FaceOrTopoSolidPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gml__FaceOrTopoSolidPropertyType(soap*, gml__FaceOrTopoSolidPropertyType*) deserialize from a stream
/// - int soap_write_gml__FaceOrTopoSolidPropertyType(soap*, gml__FaceOrTopoSolidPropertyType*) serialize to a stream
/// - gml__FaceOrTopoSolidPropertyType* gml__FaceOrTopoSolidPropertyType::soap_dup(soap*) returns deep copy of gml__FaceOrTopoSolidPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__FaceOrTopoSolidPropertyType::soap_del() deep deletes gml__FaceOrTopoSolidPropertyType data members, use only after gml__FaceOrTopoSolidPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__FaceOrTopoSolidPropertyType : public xsd__anyType
{ public:
//  BEGIN CHOICE <xs:choice minOccurs="0">
   $int                                  __union_FaceOrTopoSolidPropertyType 0;	///< Union _gml__union_FaceOrTopoSolidPropertyType selector: set to SOAP_UNION__gml__union_FaceOrTopoSolidPropertyType_<fieldname> or 0 to omit
/// Union for choice in gml__FaceOrTopoSolidPropertyType.
    union _gml__union_FaceOrTopoSolidPropertyType
    {
/// <PRE><BLOCKQUOTE>
///   gml:Face represents the 2-dimensional topology primitive.
///   The topological boundary of a face (gml:directedEdge) consists of a sequence of directed edges. If provided, the aggregationType attribute shall have the value "sequence".
///   The optional coboundary of a face (gml:directedTopoSolid) is a pair of directed solids which are bounded by this face. A positively directed solid corresponds to a solid which lies in the direction of the negatively directed normal to the face in any geometric realisation. A face may optionally be realised by a 2-dimensional geometric primitive (gml:surfaceProperty).
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":Face.
    gml__FaceType*                       Face                           nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   gml:TopoSolid represents the 3-dimensional topology primitive. The topological boundary of a solid (gml:directedFace) consists of a set of directed faces.
///   A solid may optionally be realised by a 3-dimensional geometric primitive (gml:solidProperty).
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":TopoSolid.
    gml__TopoSolidType*                  TopoSolid                      nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_FaceOrTopoSolidPropertyType;
//  END OF CHOICE
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":AssociationAttributeGroup">.
/// Attribute "nilReason" of XSD type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         gml__remoteSchema              0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":OwnershipAttributeGroup">.
/// Attribute "owns" of XSD type xs:boolean.
   @bool                                 owns                           0 = false;	///< Default attribute value="false".
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.opengis.net/gml/3.2":TopoSolidPropertyType is a complexType.
///
/// class gml__TopoSolidPropertyType operations:
/// - gml__TopoSolidPropertyType* soap_new_gml__TopoSolidPropertyType(soap*) allocate and default initialize
/// - gml__TopoSolidPropertyType* soap_new_gml__TopoSolidPropertyType(soap*, int num) allocate array and default initialize values
/// - gml__TopoSolidPropertyType* soap_new_req_gml__TopoSolidPropertyType(soap*, ...) allocate, set required members
/// - gml__TopoSolidPropertyType* soap_new_set_gml__TopoSolidPropertyType(soap*, ...) allocate, set all public members
/// - gml__TopoSolidPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gml__TopoSolidPropertyType(soap*, gml__TopoSolidPropertyType*) deserialize from a stream
/// - int soap_write_gml__TopoSolidPropertyType(soap*, gml__TopoSolidPropertyType*) serialize to a stream
/// - gml__TopoSolidPropertyType* gml__TopoSolidPropertyType::soap_dup(soap*) returns deep copy of gml__TopoSolidPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__TopoSolidPropertyType::soap_del() deep deletes gml__TopoSolidPropertyType data members, use only after gml__TopoSolidPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__TopoSolidPropertyType : public xsd__anyType
{ public:
//  BEGIN CHOICE <xs:choice minOccurs="0">
   $int                                  __union_TopoSolidPropertyType  0;	///< Union _gml__union_TopoSolidPropertyType selector: set to SOAP_UNION__gml__union_TopoSolidPropertyType_<fieldname> or 0 to omit
/// Union for choice in gml__TopoSolidPropertyType.
    union _gml__union_TopoSolidPropertyType
    {
/// <PRE><BLOCKQUOTE>
///   gml:TopoSolid represents the 3-dimensional topology primitive. The topological boundary of a solid (gml:directedFace) consists of a set of directed faces.
///   A solid may optionally be realised by a 3-dimensional geometric primitive (gml:solidProperty).
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":TopoSolid.
    gml__TopoSolidType*                  TopoSolid                      nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_TopoSolidPropertyType   ;
//  END OF CHOICE
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":AssociationAttributeGroup">.
/// Attribute "nilReason" of XSD type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         gml__remoteSchema              0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":OwnershipAttributeGroup">.
/// Attribute "owns" of XSD type xs:boolean.
   @bool                                 owns                           0 = false;	///< Default attribute value="false".
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.opengis.net/gml/3.2":DirectedNodePropertyType is a complexType.
///
/// class gml__DirectedNodePropertyType operations:
/// - gml__DirectedNodePropertyType* soap_new_gml__DirectedNodePropertyType(soap*) allocate and default initialize
/// - gml__DirectedNodePropertyType* soap_new_gml__DirectedNodePropertyType(soap*, int num) allocate array and default initialize values
/// - gml__DirectedNodePropertyType* soap_new_req_gml__DirectedNodePropertyType(soap*, ...) allocate, set required members
/// - gml__DirectedNodePropertyType* soap_new_set_gml__DirectedNodePropertyType(soap*, ...) allocate, set all public members
/// - gml__DirectedNodePropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gml__DirectedNodePropertyType(soap*, gml__DirectedNodePropertyType*) deserialize from a stream
/// - int soap_write_gml__DirectedNodePropertyType(soap*, gml__DirectedNodePropertyType*) serialize to a stream
/// - gml__DirectedNodePropertyType* gml__DirectedNodePropertyType::soap_dup(soap*) returns deep copy of gml__DirectedNodePropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__DirectedNodePropertyType::soap_del() deep deletes gml__DirectedNodePropertyType data members, use only after gml__DirectedNodePropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__DirectedNodePropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gml__DirectedNodePropertyType_sequence
    {
/// <PRE><BLOCKQUOTE>
///   gml:Node represents the 0-dimensional primitive.
///   The optional coboundary of a node (gml:directedEdge) is a sequence of directed edges which are incident on this node. Edges emanating from this node appear in the node coboundary with a negative orientation. If provided, the aggregationType attribute shall have the value "sequence".
///   A node may optionally be realised by a 0-dimensional geometric primitive (gml:pointProperty).
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":Node.
    gml__NodeType*                       Node                           1;	///< Required element.
    }                                   *__DirectedNodePropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute "orientation" of XSD type "http://www.opengis.net/gml/3.2":SignType.
   @enum gml__SignType                   orientation                    0 = gml__SignType___x002b;	///< Default attribute value="+".
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":AssociationAttributeGroup">.
/// Attribute "nilReason" of XSD type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         gml__remoteSchema              0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":OwnershipAttributeGroup">.
/// Attribute "owns" of XSD type xs:boolean.
   @bool                                 owns                           0 = false;	///< Default attribute value="false".
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.opengis.net/gml/3.2":DirectedEdgePropertyType is a complexType.
///
/// class gml__DirectedEdgePropertyType operations:
/// - gml__DirectedEdgePropertyType* soap_new_gml__DirectedEdgePropertyType(soap*) allocate and default initialize
/// - gml__DirectedEdgePropertyType* soap_new_gml__DirectedEdgePropertyType(soap*, int num) allocate array and default initialize values
/// - gml__DirectedEdgePropertyType* soap_new_req_gml__DirectedEdgePropertyType(soap*, ...) allocate, set required members
/// - gml__DirectedEdgePropertyType* soap_new_set_gml__DirectedEdgePropertyType(soap*, ...) allocate, set all public members
/// - gml__DirectedEdgePropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gml__DirectedEdgePropertyType(soap*, gml__DirectedEdgePropertyType*) deserialize from a stream
/// - int soap_write_gml__DirectedEdgePropertyType(soap*, gml__DirectedEdgePropertyType*) serialize to a stream
/// - gml__DirectedEdgePropertyType* gml__DirectedEdgePropertyType::soap_dup(soap*) returns deep copy of gml__DirectedEdgePropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__DirectedEdgePropertyType::soap_del() deep deletes gml__DirectedEdgePropertyType data members, use only after gml__DirectedEdgePropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__DirectedEdgePropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gml__DirectedEdgePropertyType_sequence
    {
/// <PRE><BLOCKQUOTE>
///   gml:Edge represents the 1-dimensional primitive.
///   The topological boundary of an Edge (gml:directedNode) consists of a negatively directed start Node and a positively directed end Node. The optional coboundary of an edge (gml:directedFace) is a circular sequence of directed faces which are incident on this edge in document order. In the 2D case, the orientation of the face on the left of the edge is "+"; the orientation of the face on the right on its right is "-". If provided, the aggregationType attribute shall have the value "sequence".
///   An edge may optionally be realised by a 1-dimensional geometric primitive (gml:curveProperty).
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":Edge.
    gml__EdgeType*                       Edge                           1;	///< Required element.
    }                                   *__DirectedEdgePropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute "orientation" of XSD type "http://www.opengis.net/gml/3.2":SignType.
   @enum gml__SignType                   orientation                    0 = gml__SignType___x002b;	///< Default attribute value="+".
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":AssociationAttributeGroup">.
/// Attribute "nilReason" of XSD type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         gml__remoteSchema              0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":OwnershipAttributeGroup">.
/// Attribute "owns" of XSD type xs:boolean.
   @bool                                 owns                           0 = false;	///< Default attribute value="false".
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.opengis.net/gml/3.2":DirectedFacePropertyType is a complexType.
///
/// class gml__DirectedFacePropertyType operations:
/// - gml__DirectedFacePropertyType* soap_new_gml__DirectedFacePropertyType(soap*) allocate and default initialize
/// - gml__DirectedFacePropertyType* soap_new_gml__DirectedFacePropertyType(soap*, int num) allocate array and default initialize values
/// - gml__DirectedFacePropertyType* soap_new_req_gml__DirectedFacePropertyType(soap*, ...) allocate, set required members
/// - gml__DirectedFacePropertyType* soap_new_set_gml__DirectedFacePropertyType(soap*, ...) allocate, set all public members
/// - gml__DirectedFacePropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gml__DirectedFacePropertyType(soap*, gml__DirectedFacePropertyType*) deserialize from a stream
/// - int soap_write_gml__DirectedFacePropertyType(soap*, gml__DirectedFacePropertyType*) serialize to a stream
/// - gml__DirectedFacePropertyType* gml__DirectedFacePropertyType::soap_dup(soap*) returns deep copy of gml__DirectedFacePropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__DirectedFacePropertyType::soap_del() deep deletes gml__DirectedFacePropertyType data members, use only after gml__DirectedFacePropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__DirectedFacePropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gml__DirectedFacePropertyType_sequence
    {
/// <PRE><BLOCKQUOTE>
///   gml:Face represents the 2-dimensional topology primitive.
///   The topological boundary of a face (gml:directedEdge) consists of a sequence of directed edges. If provided, the aggregationType attribute shall have the value "sequence".
///   The optional coboundary of a face (gml:directedTopoSolid) is a pair of directed solids which are bounded by this face. A positively directed solid corresponds to a solid which lies in the direction of the negatively directed normal to the face in any geometric realisation. A face may optionally be realised by a 2-dimensional geometric primitive (gml:surfaceProperty).
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":Face.
    gml__FaceType*                       Face                           1;	///< Required element.
    }                                   *__DirectedFacePropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute "orientation" of XSD type "http://www.opengis.net/gml/3.2":SignType.
   @enum gml__SignType                   orientation                    0 = gml__SignType___x002b;	///< Default attribute value="+".
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":AssociationAttributeGroup">.
/// Attribute "nilReason" of XSD type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         gml__remoteSchema              0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":OwnershipAttributeGroup">.
/// Attribute "owns" of XSD type xs:boolean.
   @bool                                 owns                           0 = false;	///< Default attribute value="false".
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.opengis.net/gml/3.2":DirectedTopoSolidPropertyType is a complexType.
///
/// class gml__DirectedTopoSolidPropertyType operations:
/// - gml__DirectedTopoSolidPropertyType* soap_new_gml__DirectedTopoSolidPropertyType(soap*) allocate and default initialize
/// - gml__DirectedTopoSolidPropertyType* soap_new_gml__DirectedTopoSolidPropertyType(soap*, int num) allocate array and default initialize values
/// - gml__DirectedTopoSolidPropertyType* soap_new_req_gml__DirectedTopoSolidPropertyType(soap*, ...) allocate, set required members
/// - gml__DirectedTopoSolidPropertyType* soap_new_set_gml__DirectedTopoSolidPropertyType(soap*, ...) allocate, set all public members
/// - gml__DirectedTopoSolidPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gml__DirectedTopoSolidPropertyType(soap*, gml__DirectedTopoSolidPropertyType*) deserialize from a stream
/// - int soap_write_gml__DirectedTopoSolidPropertyType(soap*, gml__DirectedTopoSolidPropertyType*) serialize to a stream
/// - gml__DirectedTopoSolidPropertyType* gml__DirectedTopoSolidPropertyType::soap_dup(soap*) returns deep copy of gml__DirectedTopoSolidPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__DirectedTopoSolidPropertyType::soap_del() deep deletes gml__DirectedTopoSolidPropertyType data members, use only after gml__DirectedTopoSolidPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__DirectedTopoSolidPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gml__DirectedTopoSolidPropertyType_sequence
    {
/// <PRE><BLOCKQUOTE>
///   gml:TopoSolid represents the 3-dimensional topology primitive. The topological boundary of a solid (gml:directedFace) consists of a set of directed faces.
///   A solid may optionally be realised by a 3-dimensional geometric primitive (gml:solidProperty).
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":TopoSolid.
    gml__TopoSolidType*                  TopoSolid                      1;	///< Required element.
    }                                   *__DirectedTopoSolidPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute "orientation" of XSD type "http://www.opengis.net/gml/3.2":SignType.
   @enum gml__SignType                   orientation                    0 = gml__SignType___x002b;	///< Default attribute value="+".
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":AssociationAttributeGroup">.
/// Attribute "nilReason" of XSD type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         gml__remoteSchema              0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":OwnershipAttributeGroup">.
/// Attribute "owns" of XSD type xs:boolean.
   @bool                                 owns                           0 = false;	///< Default attribute value="false".
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.opengis.net/gml/3.2":TopoPointPropertyType is a complexType.
///
/// class gml__TopoPointPropertyType operations:
/// - gml__TopoPointPropertyType* soap_new_gml__TopoPointPropertyType(soap*) allocate and default initialize
/// - gml__TopoPointPropertyType* soap_new_gml__TopoPointPropertyType(soap*, int num) allocate array and default initialize values
/// - gml__TopoPointPropertyType* soap_new_req_gml__TopoPointPropertyType(soap*, ...) allocate, set required members
/// - gml__TopoPointPropertyType* soap_new_set_gml__TopoPointPropertyType(soap*, ...) allocate, set all public members
/// - gml__TopoPointPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gml__TopoPointPropertyType(soap*, gml__TopoPointPropertyType*) deserialize from a stream
/// - int soap_write_gml__TopoPointPropertyType(soap*, gml__TopoPointPropertyType*) serialize to a stream
/// - gml__TopoPointPropertyType* gml__TopoPointPropertyType::soap_dup(soap*) returns deep copy of gml__TopoPointPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__TopoPointPropertyType::soap_del() deep deletes gml__TopoPointPropertyType data members, use only after gml__TopoPointPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__TopoPointPropertyType : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   The intended use of gml:TopoPoint is to appear within a point feature to express the structural and possibly geometric relationships of this feature to other features via shared node definitions.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":TopoPoint.
    gml__TopoPointType*                  TopoPoint                      1;	///< Required element.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":OwnershipAttributeGroup">.
/// Attribute "owns" of XSD type xs:boolean.
   @bool                                 owns                           0 = false;	///< Default attribute value="false".
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.opengis.net/gml/3.2":TopoCurvePropertyType is a complexType.
///
/// class gml__TopoCurvePropertyType operations:
/// - gml__TopoCurvePropertyType* soap_new_gml__TopoCurvePropertyType(soap*) allocate and default initialize
/// - gml__TopoCurvePropertyType* soap_new_gml__TopoCurvePropertyType(soap*, int num) allocate array and default initialize values
/// - gml__TopoCurvePropertyType* soap_new_req_gml__TopoCurvePropertyType(soap*, ...) allocate, set required members
/// - gml__TopoCurvePropertyType* soap_new_set_gml__TopoCurvePropertyType(soap*, ...) allocate, set all public members
/// - gml__TopoCurvePropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gml__TopoCurvePropertyType(soap*, gml__TopoCurvePropertyType*) deserialize from a stream
/// - int soap_write_gml__TopoCurvePropertyType(soap*, gml__TopoCurvePropertyType*) serialize to a stream
/// - gml__TopoCurvePropertyType* gml__TopoCurvePropertyType::soap_dup(soap*) returns deep copy of gml__TopoCurvePropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__TopoCurvePropertyType::soap_del() deep deletes gml__TopoCurvePropertyType data members, use only after gml__TopoCurvePropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__TopoCurvePropertyType : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   gml:TopoCurve represents a homogeneous topological expression, a sequence of directed edges, which if realised are isomorphic to a geometric curve primitive. The intended use of gml:TopoCurve is to appear within a line feature to express the structural and geometric relationships of this feature to other features via the shared edge definitions.
///   If provided, the aggregationType attribute shall have the value "sequence".
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":TopoCurve.
    gml__TopoCurveType*                  TopoCurve                      1;	///< Required element.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":OwnershipAttributeGroup">.
/// Attribute "owns" of XSD type xs:boolean.
   @bool                                 owns                           0 = false;	///< Default attribute value="false".
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.opengis.net/gml/3.2":TopoSurfacePropertyType is a complexType.
///
/// class gml__TopoSurfacePropertyType operations:
/// - gml__TopoSurfacePropertyType* soap_new_gml__TopoSurfacePropertyType(soap*) allocate and default initialize
/// - gml__TopoSurfacePropertyType* soap_new_gml__TopoSurfacePropertyType(soap*, int num) allocate array and default initialize values
/// - gml__TopoSurfacePropertyType* soap_new_req_gml__TopoSurfacePropertyType(soap*, ...) allocate, set required members
/// - gml__TopoSurfacePropertyType* soap_new_set_gml__TopoSurfacePropertyType(soap*, ...) allocate, set all public members
/// - gml__TopoSurfacePropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gml__TopoSurfacePropertyType(soap*, gml__TopoSurfacePropertyType*) deserialize from a stream
/// - int soap_write_gml__TopoSurfacePropertyType(soap*, gml__TopoSurfacePropertyType*) serialize to a stream
/// - gml__TopoSurfacePropertyType* gml__TopoSurfacePropertyType::soap_dup(soap*) returns deep copy of gml__TopoSurfacePropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__TopoSurfacePropertyType::soap_del() deep deletes gml__TopoSurfacePropertyType data members, use only after gml__TopoSurfacePropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__TopoSurfacePropertyType : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   gml:TopoSurface represents a homogeneous topological expression, a set of directed faces, which if realised are isomorphic to a geometric surface primitive. The intended use of gml:TopoSurface is to appear within a surface feature to express the structural and possibly geometric relationships of this surface feature to other features via the shared face definitions.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":TopoSurface.
    gml__TopoSurfaceType*                TopoSurface                    1;	///< Required element.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":OwnershipAttributeGroup">.
/// Attribute "owns" of XSD type xs:boolean.
   @bool                                 owns                           0 = false;	///< Default attribute value="false".
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.opengis.net/gml/3.2":TopoVolumePropertyType is a complexType.
///
/// class gml__TopoVolumePropertyType operations:
/// - gml__TopoVolumePropertyType* soap_new_gml__TopoVolumePropertyType(soap*) allocate and default initialize
/// - gml__TopoVolumePropertyType* soap_new_gml__TopoVolumePropertyType(soap*, int num) allocate array and default initialize values
/// - gml__TopoVolumePropertyType* soap_new_req_gml__TopoVolumePropertyType(soap*, ...) allocate, set required members
/// - gml__TopoVolumePropertyType* soap_new_set_gml__TopoVolumePropertyType(soap*, ...) allocate, set all public members
/// - gml__TopoVolumePropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gml__TopoVolumePropertyType(soap*, gml__TopoVolumePropertyType*) deserialize from a stream
/// - int soap_write_gml__TopoVolumePropertyType(soap*, gml__TopoVolumePropertyType*) serialize to a stream
/// - gml__TopoVolumePropertyType* gml__TopoVolumePropertyType::soap_dup(soap*) returns deep copy of gml__TopoVolumePropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__TopoVolumePropertyType::soap_del() deep deletes gml__TopoVolumePropertyType data members, use only after gml__TopoVolumePropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__TopoVolumePropertyType : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   gml:TopoVolume represents a homogeneous topological expression, a set of directed topologic solids, which if realised are isomorphic to a geometric solid primitive. The intended use of gml:TopoVolume is to appear within a solid feature to express the structural and geometric relationships of this solid feature to other features via the shared solid definitions.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":TopoVolume.
    gml__TopoVolumeType*                 TopoVolume                     1;	///< Required element.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":OwnershipAttributeGroup">.
/// Attribute "owns" of XSD type xs:boolean.
   @bool                                 owns                           0 = false;	///< Default attribute value="false".
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.opengis.net/gml/3.2":TopoPrimitiveMemberType is a complexType.
///
/// class gml__TopoPrimitiveMemberType operations:
/// - gml__TopoPrimitiveMemberType* soap_new_gml__TopoPrimitiveMemberType(soap*) allocate and default initialize
/// - gml__TopoPrimitiveMemberType* soap_new_gml__TopoPrimitiveMemberType(soap*, int num) allocate array and default initialize values
/// - gml__TopoPrimitiveMemberType* soap_new_req_gml__TopoPrimitiveMemberType(soap*, ...) allocate, set required members
/// - gml__TopoPrimitiveMemberType* soap_new_set_gml__TopoPrimitiveMemberType(soap*, ...) allocate, set all public members
/// - gml__TopoPrimitiveMemberType::soap_default(soap*) default initialize members
/// - int soap_read_gml__TopoPrimitiveMemberType(soap*, gml__TopoPrimitiveMemberType*) deserialize from a stream
/// - int soap_write_gml__TopoPrimitiveMemberType(soap*, gml__TopoPrimitiveMemberType*) serialize to a stream
/// - gml__TopoPrimitiveMemberType* gml__TopoPrimitiveMemberType::soap_dup(soap*) returns deep copy of gml__TopoPrimitiveMemberType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__TopoPrimitiveMemberType::soap_del() deep deletes gml__TopoPrimitiveMemberType data members, use only after gml__TopoPrimitiveMemberType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__TopoPrimitiveMemberType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gml__TopoPrimitiveMemberType_sequence
    {
/// <PRE><BLOCKQUOTE>
///   gml:AbstractTopoPrimitive acts as the base type for all topological primitives. Topology primitives are the atomic (smallest possible) units of a topology complex. Each topology primitive may contain references to other topology primitives of codimension 2 or more (gml:isolated). Conversely, nodes may have faces as containers and nodes and edges may have solids as containers (gml:container).
/// </BLOCKQUOTE></PRE>
/// Reference "http://www.opengis.net/gml/3.2":AbstractTopoPrimitive to abstract element.
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractTopoPrimitive"> with global elements <Node> <Edge> <Face> <TopoSolid>
   $int                                  __unionAbstractTopoPrimitive  ;	///< Union _gml__union_TopoPrimitiveMemberType selector: set to SOAP_UNION__gml__union_TopoPrimitiveMemberType_<fieldname>
/// Union for substitutionGroup gml__AbstractTopoPrimitive.
    union _gml__union_TopoPrimitiveMemberType
    {
/// <PRE><BLOCKQUOTE>
///   gml:Node represents the 0-dimensional primitive.
///   The optional coboundary of a node (gml:directedEdge) is a sequence of directed edges which are incident on this node. Edges emanating from this node appear in the node coboundary with a negative orientation. If provided, the aggregationType attribute shall have the value "sequence".
///   A node may optionally be realised by a 0-dimensional geometric primitive (gml:pointProperty).
/// </BLOCKQUOTE></PRE>
/// Element "http://www.opengis.net/gml/3.2":Node.
    gml__NodeType*                       Node                           nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   gml:Edge represents the 1-dimensional primitive.
///   The topological boundary of an Edge (gml:directedNode) consists of a negatively directed start Node and a positively directed end Node. The optional coboundary of an edge (gml:directedFace) is a circular sequence of directed faces which are incident on this edge in document order. In the 2D case, the orientation of the face on the left of the edge is "+"; the orientation of the face on the right on its right is "-". If provided, the aggregationType attribute shall have the value "sequence".
///   An edge may optionally be realised by a 1-dimensional geometric primitive (gml:curveProperty).
/// </BLOCKQUOTE></PRE>
/// Element "http://www.opengis.net/gml/3.2":Edge.
    gml__EdgeType*                       Edge                           nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   gml:Face represents the 2-dimensional topology primitive.
///   The topological boundary of a face (gml:directedEdge) consists of a sequence of directed edges. If provided, the aggregationType attribute shall have the value "sequence".
///   The optional coboundary of a face (gml:directedTopoSolid) is a pair of directed solids which are bounded by this face. A positively directed solid corresponds to a solid which lies in the direction of the negatively directed normal to the face in any geometric realisation. A face may optionally be realised by a 2-dimensional geometric primitive (gml:surfaceProperty).
/// </BLOCKQUOTE></PRE>
/// Element "http://www.opengis.net/gml/3.2":Face.
    gml__FaceType*                       Face                           nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   gml:TopoSolid represents the 3-dimensional topology primitive. The topological boundary of a solid (gml:directedFace) consists of a set of directed faces.
///   A solid may optionally be realised by a 3-dimensional geometric primitive (gml:solidProperty).
/// </BLOCKQUOTE></PRE>
/// Element "http://www.opengis.net/gml/3.2":TopoSolid.
    gml__TopoSolidType*                  TopoSolid                      nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_TopoPrimitiveMemberType ;
//  END OF SUBSTITUTIONS
    }                                   *__TopoPrimitiveMemberType_sequence 0;
//  END OF SEQUENCE
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":AssociationAttributeGroup">.
/// Attribute "nilReason" of XSD type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         gml__remoteSchema              0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":OwnershipAttributeGroup">.
/// Attribute "owns" of XSD type xs:boolean.
   @bool                                 owns                           0 = false;	///< Default attribute value="false".
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.opengis.net/gml/3.2":TopoPrimitiveArrayAssociationType is a complexType.
///
/// class gml__TopoPrimitiveArrayAssociationType operations:
/// - gml__TopoPrimitiveArrayAssociationType* soap_new_gml__TopoPrimitiveArrayAssociationType(soap*) allocate and default initialize
/// - gml__TopoPrimitiveArrayAssociationType* soap_new_gml__TopoPrimitiveArrayAssociationType(soap*, int num) allocate array and default initialize values
/// - gml__TopoPrimitiveArrayAssociationType* soap_new_req_gml__TopoPrimitiveArrayAssociationType(soap*, ...) allocate, set required members
/// - gml__TopoPrimitiveArrayAssociationType* soap_new_set_gml__TopoPrimitiveArrayAssociationType(soap*, ...) allocate, set all public members
/// - gml__TopoPrimitiveArrayAssociationType::soap_default(soap*) default initialize members
/// - int soap_read_gml__TopoPrimitiveArrayAssociationType(soap*, gml__TopoPrimitiveArrayAssociationType*) deserialize from a stream
/// - int soap_write_gml__TopoPrimitiveArrayAssociationType(soap*, gml__TopoPrimitiveArrayAssociationType*) serialize to a stream
/// - gml__TopoPrimitiveArrayAssociationType* gml__TopoPrimitiveArrayAssociationType::soap_dup(soap*) returns deep copy of gml__TopoPrimitiveArrayAssociationType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__TopoPrimitiveArrayAssociationType::soap_del() deep deletes gml__TopoPrimitiveArrayAssociationType data members, use only after gml__TopoPrimitiveArrayAssociationType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__TopoPrimitiveArrayAssociationType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0" maxOccurs="unbounded">
    std::vector<
    class __gml__TopoPrimitiveArrayAssociationType_sequence
    {
/// <PRE><BLOCKQUOTE>
///   gml:AbstractTopoPrimitive acts as the base type for all topological primitives. Topology primitives are the atomic (smallest possible) units of a topology complex. Each topology primitive may contain references to other topology primitives of codimension 2 or more (gml:isolated). Conversely, nodes may have faces as containers and nodes and edges may have solids as containers (gml:container).
/// </BLOCKQUOTE></PRE>
/// Reference "http://www.opengis.net/gml/3.2":AbstractTopoPrimitive to abstract element.
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractTopoPrimitive"> with global elements <Node> <Edge> <Face> <TopoSolid>
   $int                                  __unionAbstractTopoPrimitive  ;	///< Union _gml__union_TopoPrimitiveArrayAssociationType selector: set to SOAP_UNION__gml__union_TopoPrimitiveArrayAssociationType_<fieldname>
/// Union for substitutionGroup gml__AbstractTopoPrimitive.
    union _gml__union_TopoPrimitiveArrayAssociationType
    {
/// <PRE><BLOCKQUOTE>
///   gml:Node represents the 0-dimensional primitive.
///   The optional coboundary of a node (gml:directedEdge) is a sequence of directed edges which are incident on this node. Edges emanating from this node appear in the node coboundary with a negative orientation. If provided, the aggregationType attribute shall have the value "sequence".
///   A node may optionally be realised by a 0-dimensional geometric primitive (gml:pointProperty).
/// </BLOCKQUOTE></PRE>
/// Element "http://www.opengis.net/gml/3.2":Node.
    gml__NodeType*                       Node                           nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   gml:Edge represents the 1-dimensional primitive.
///   The topological boundary of an Edge (gml:directedNode) consists of a negatively directed start Node and a positively directed end Node. The optional coboundary of an edge (gml:directedFace) is a circular sequence of directed faces which are incident on this edge in document order. In the 2D case, the orientation of the face on the left of the edge is "+"; the orientation of the face on the right on its right is "-". If provided, the aggregationType attribute shall have the value "sequence".
///   An edge may optionally be realised by a 1-dimensional geometric primitive (gml:curveProperty).
/// </BLOCKQUOTE></PRE>
/// Element "http://www.opengis.net/gml/3.2":Edge.
    gml__EdgeType*                       Edge                           nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   gml:Face represents the 2-dimensional topology primitive.
///   The topological boundary of a face (gml:directedEdge) consists of a sequence of directed edges. If provided, the aggregationType attribute shall have the value "sequence".
///   The optional coboundary of a face (gml:directedTopoSolid) is a pair of directed solids which are bounded by this face. A positively directed solid corresponds to a solid which lies in the direction of the negatively directed normal to the face in any geometric realisation. A face may optionally be realised by a 2-dimensional geometric primitive (gml:surfaceProperty).
/// </BLOCKQUOTE></PRE>
/// Element "http://www.opengis.net/gml/3.2":Face.
    gml__FaceType*                       Face                           nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   gml:TopoSolid represents the 3-dimensional topology primitive. The topological boundary of a solid (gml:directedFace) consists of a set of directed faces.
///   A solid may optionally be realised by a 3-dimensional geometric primitive (gml:solidProperty).
/// </BLOCKQUOTE></PRE>
/// Element "http://www.opengis.net/gml/3.2":TopoSolid.
    gml__TopoSolidType*                  TopoSolid                      nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_TopoPrimitiveArrayAssociationType;
//  END OF SUBSTITUTIONS
    }>                                   __TopoPrimitiveArrayAssociationType_sequence 0;
//  END OF SEQUENCE
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":OwnershipAttributeGroup">.
/// Attribute "owns" of XSD type xs:boolean.
   @bool                                 owns                           0 = false;	///< Default attribute value="false".
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.opengis.net/gml/3.2":TopoComplexPropertyType is a complexType.
///
/// class gml__TopoComplexPropertyType operations:
/// - gml__TopoComplexPropertyType* soap_new_gml__TopoComplexPropertyType(soap*) allocate and default initialize
/// - gml__TopoComplexPropertyType* soap_new_gml__TopoComplexPropertyType(soap*, int num) allocate array and default initialize values
/// - gml__TopoComplexPropertyType* soap_new_req_gml__TopoComplexPropertyType(soap*, ...) allocate, set required members
/// - gml__TopoComplexPropertyType* soap_new_set_gml__TopoComplexPropertyType(soap*, ...) allocate, set all public members
/// - gml__TopoComplexPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gml__TopoComplexPropertyType(soap*, gml__TopoComplexPropertyType*) deserialize from a stream
/// - int soap_write_gml__TopoComplexPropertyType(soap*, gml__TopoComplexPropertyType*) serialize to a stream
/// - gml__TopoComplexPropertyType* gml__TopoComplexPropertyType::soap_dup(soap*) returns deep copy of gml__TopoComplexPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__TopoComplexPropertyType::soap_del() deep deletes gml__TopoComplexPropertyType data members, use only after gml__TopoComplexPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__TopoComplexPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gml__TopoComplexPropertyType_sequence
    {
/// <PRE><BLOCKQUOTE>
///   gml:TopoComplex is a collection of topological primitives.
///   Each complex holds a reference to its maximal complex (gml:maximalComplex) and optionally to sub- or super-complexes (gml:subComplex, gml:superComplex). A topology complex contains its primitive and sub-complex members.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":TopoComplex.
    gml__TopoComplexType*                TopoComplex                    1;	///< Required element.
    }                                   *__TopoComplexPropertyType_sequence 0;
//  END OF SEQUENCE
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":AssociationAttributeGroup">.
/// Attribute "nilReason" of XSD type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         gml__remoteSchema              0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.opengis.net/gml/3.2":GeometricComplexPropertyType is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   A property that has a geometric complex as its value domain may either be an appropriate geometry element encapsulated in an element of this type or an XLink reference to a remote geometry element (where remote includes geometry elements located elsewhere in the same document). Either the reference or the contained element shall be given, but neither both nor none.
/// </BLOCKQUOTE></PRE>
/// class gml__GeometricComplexPropertyType operations:
/// - gml__GeometricComplexPropertyType* soap_new_gml__GeometricComplexPropertyType(soap*) allocate and default initialize
/// - gml__GeometricComplexPropertyType* soap_new_gml__GeometricComplexPropertyType(soap*, int num) allocate array and default initialize values
/// - gml__GeometricComplexPropertyType* soap_new_req_gml__GeometricComplexPropertyType(soap*, ...) allocate, set required members
/// - gml__GeometricComplexPropertyType* soap_new_set_gml__GeometricComplexPropertyType(soap*, ...) allocate, set all public members
/// - gml__GeometricComplexPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gml__GeometricComplexPropertyType(soap*, gml__GeometricComplexPropertyType*) deserialize from a stream
/// - int soap_write_gml__GeometricComplexPropertyType(soap*, gml__GeometricComplexPropertyType*) serialize to a stream
/// - gml__GeometricComplexPropertyType* gml__GeometricComplexPropertyType::soap_dup(soap*) returns deep copy of gml__GeometricComplexPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__GeometricComplexPropertyType::soap_del() deep deletes gml__GeometricComplexPropertyType data members, use only after gml__GeometricComplexPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__GeometricComplexPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gml__GeometricComplexPropertyType_sequence
    {
//  BEGIN CHOICE <xs:choice>
   $int                                  __union_GeometricComplexPropertyType;	///< Union _gml__union_GeometricComplexPropertyType selector: set to SOAP_UNION__gml__union_GeometricComplexPropertyType_<fieldname>
    union _gml__union_GeometricComplexPropertyType
    {
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":GeometricComplex.
    gml__GeometricComplexType*           GeometricComplex               nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   A gml:CompositeCurve is represented by a sequence of (orientable) curves such that each curve in the sequence terminates at the start point of the subsequent curve in the list. curveMember references or contains inline one curve in the composite curve. The curves are contiguous, the collection of curves is ordered. Therefore, if provided, the aggregationType attribute shall have the value "sequence".
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":CompositeCurve.
    gml__CompositeCurveType*             CompositeCurve                 nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   A gml:CompositeSurface is represented by a set of orientable surfaces. It is geometry type with all the geometric properties of a (primitive) surface. Essentially, a composite surface is a collection of surfaces that join in pairs on common boundary curves and which, when considered as a whole, form a single surface.
///   surfaceMember references or contains inline one surface in the composite surface. The surfaces are contiguous.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":CompositeSurface.
    gml__CompositeSurfaceType*           CompositeSurface               nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   gml:CompositeSolid implements ISO 19107 GM_CompositeSolid (see ISO 19107:2003, 6.6.7) as specified in D.2.3.6. A gml:CompositeSolid is represented by a set of orientable surfaces. It is a geometry type with all the geometric properties of a (primitive) solid. Essentially, a composite solid is a collection of solids that join in pairs on common boundary surfaces and which, when considered as a whole, form a single solid. solidMember references or contains one solid in the composite solid. The solids are contiguous.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":CompositeSolid.
    gml__CompositeSolidType*             CompositeSolid                 nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_GeometricComplexPropertyType;
//  END OF CHOICE
    }                                   *__GeometricComplexPropertyType_sequence 0;
//  END OF SEQUENCE
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":OwnershipAttributeGroup">.
/// Attribute "owns" of XSD type xs:boolean.
   @bool                                 owns                           0 = false;	///< Default attribute value="false".
//  END OF ATTRIBUTEGROUP
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":AssociationAttributeGroup">.
/// Attribute "nilReason" of XSD type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         gml__remoteSchema              0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.opengis.net/gml/3.2":MultiGeometryPropertyType is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   A property that has a geometric aggregate as its value domain may either be an appropriate geometry element encapsulated in an element of this type or an XLink reference to a remote geometry element (where remote includes geometry elements located elsewhere in the same document). Either the reference or the contained element shall be given, but neither both nor none.
/// </BLOCKQUOTE></PRE>
/// class gml__MultiGeometryPropertyType operations:
/// - gml__MultiGeometryPropertyType* soap_new_gml__MultiGeometryPropertyType(soap*) allocate and default initialize
/// - gml__MultiGeometryPropertyType* soap_new_gml__MultiGeometryPropertyType(soap*, int num) allocate array and default initialize values
/// - gml__MultiGeometryPropertyType* soap_new_req_gml__MultiGeometryPropertyType(soap*, ...) allocate, set required members
/// - gml__MultiGeometryPropertyType* soap_new_set_gml__MultiGeometryPropertyType(soap*, ...) allocate, set all public members
/// - gml__MultiGeometryPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gml__MultiGeometryPropertyType(soap*, gml__MultiGeometryPropertyType*) deserialize from a stream
/// - int soap_write_gml__MultiGeometryPropertyType(soap*, gml__MultiGeometryPropertyType*) serialize to a stream
/// - gml__MultiGeometryPropertyType* gml__MultiGeometryPropertyType::soap_dup(soap*) returns deep copy of gml__MultiGeometryPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__MultiGeometryPropertyType::soap_del() deep deletes gml__MultiGeometryPropertyType data members, use only after gml__MultiGeometryPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__MultiGeometryPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gml__MultiGeometryPropertyType_sequence
    {
/// <PRE><BLOCKQUOTE>
///   gml:AbstractGeometricAggregate is the abstract head of the substitution group for all geometric aggregates.
/// </BLOCKQUOTE></PRE>
/// Reference "http://www.opengis.net/gml/3.2":AbstractGeometricAggregate to abstract element.
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractGeometricAggregate"> with global elements <MultiGeometry> <MultiPoint> <MultiCurve> <MultiSurface> <MultiSolid>
   $int                                  __unionAbstractGeometricAggregate;	///< Union _gml__union_MultiGeometryPropertyType selector: set to SOAP_UNION__gml__union_MultiGeometryPropertyType_<fieldname>
/// Union for substitutionGroup gml__AbstractGeometricAggregate.
    union _gml__union_MultiGeometryPropertyType
    {
/// <PRE><BLOCKQUOTE>
///   gml:MultiGeometry is a collection of one or more GML geometry objects of arbitrary type. The members of the geometric aggregate may be specified either using the "standard" property (gml:geometryMember) or the array property (gml:geometryMembers). It is also valid to use both the "standard" and the array properties in the same collection.
/// </BLOCKQUOTE></PRE>
/// Element "http://www.opengis.net/gml/3.2":MultiGeometry.
    gml__MultiGeometryType*              MultiGeometry                  nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   A gml:MultiPoint consists of one or more gml:Points.
///   The members of the geometric aggregate may be specified either using the "standard" property (gml:pointMember) or the array property (gml:pointMembers). It is also valid to use both the "standard" and the array properties in the same collection.
/// </BLOCKQUOTE></PRE>
/// Element "http://www.opengis.net/gml/3.2":MultiPoint.
    gml__MultiPointType*                 MultiPoint                     nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   A gml:MultiCurve is defined by one or more gml:AbstractCurves.
///   The members of the geometric aggregate may be specified either using the "standard" property (gml:curveMember) or the array property (gml:curveMembers). It is also valid to use both the "standard" and the array properties in the same collection.
/// </BLOCKQUOTE></PRE>
/// Element "http://www.opengis.net/gml/3.2":MultiCurve.
    gml__MultiCurveType*                 MultiCurve                     nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   A gml:MultiSurface is defined by one or more gml:AbstractSurfaces.
///   The members of the geometric aggregate may be specified either using the "standard" property (gml:surfaceMember) or the array property (gml:surfaceMembers). It is also valid to use both the "standard" and the array properties in the same collection.
/// </BLOCKQUOTE></PRE>
/// Element "http://www.opengis.net/gml/3.2":MultiSurface.
    gml__MultiSurfaceType*               MultiSurface                   nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   A gml:MultiSolid is defined by one or more gml:AbstractSolids.
///   The members of the geometric aggregate may be specified either using the "standard" property (gml:solidMember) or the array property (gml:solidMembers). It is also valid to use both the "standard" and the array properties in the same collection.
/// </BLOCKQUOTE></PRE>
/// Element "http://www.opengis.net/gml/3.2":MultiSolid.
    gml__MultiSolidType*                 MultiSolid                     nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_MultiGeometryPropertyType;
//  END OF SUBSTITUTIONS
    }                                   *__MultiGeometryPropertyType_sequence 0;
//  END OF SEQUENCE
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":AssociationAttributeGroup">.
/// Attribute "nilReason" of XSD type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         gml__remoteSchema              0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":OwnershipAttributeGroup">.
/// Attribute "owns" of XSD type xs:boolean.
   @bool                                 owns                           0 = false;	///< Default attribute value="false".
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.opengis.net/gml/3.2":MultiPointPropertyType is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   A property that has a collection of points as its value domain may either be an appropriate geometry element encapsulated in an element of this type or an XLink reference to a remote geometry element (where remote includes geometry elements located elsewhere in the same document). Either the reference or the contained element shall be given, but neither both nor none.
/// </BLOCKQUOTE></PRE>
/// class gml__MultiPointPropertyType operations:
/// - gml__MultiPointPropertyType* soap_new_gml__MultiPointPropertyType(soap*) allocate and default initialize
/// - gml__MultiPointPropertyType* soap_new_gml__MultiPointPropertyType(soap*, int num) allocate array and default initialize values
/// - gml__MultiPointPropertyType* soap_new_req_gml__MultiPointPropertyType(soap*, ...) allocate, set required members
/// - gml__MultiPointPropertyType* soap_new_set_gml__MultiPointPropertyType(soap*, ...) allocate, set all public members
/// - gml__MultiPointPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gml__MultiPointPropertyType(soap*, gml__MultiPointPropertyType*) deserialize from a stream
/// - int soap_write_gml__MultiPointPropertyType(soap*, gml__MultiPointPropertyType*) serialize to a stream
/// - gml__MultiPointPropertyType* gml__MultiPointPropertyType::soap_dup(soap*) returns deep copy of gml__MultiPointPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__MultiPointPropertyType::soap_del() deep deletes gml__MultiPointPropertyType data members, use only after gml__MultiPointPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__MultiPointPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gml__MultiPointPropertyType_sequence
    {
/// <PRE><BLOCKQUOTE>
///   A gml:MultiPoint consists of one or more gml:Points.
///   The members of the geometric aggregate may be specified either using the "standard" property (gml:pointMember) or the array property (gml:pointMembers). It is also valid to use both the "standard" and the array properties in the same collection.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":MultiPoint.
    gml__MultiPointType*                 MultiPoint                     1;	///< Required element.
    }                                   *__MultiPointPropertyType_sequence 0;
//  END OF SEQUENCE
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":AssociationAttributeGroup">.
/// Attribute "nilReason" of XSD type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         gml__remoteSchema              0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":OwnershipAttributeGroup">.
/// Attribute "owns" of XSD type xs:boolean.
   @bool                                 owns                           0 = false;	///< Default attribute value="false".
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.opengis.net/gml/3.2":MultiCurvePropertyType is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   A property that has a collection of curves as its value domain may either be an appropriate geometry element encapsulated in an element of this type or an XLink reference to a remote geometry element (where remote includes geometry elements located elsewhere in the same document). Either the reference or the contained element shall be given, but neither both nor none.
/// </BLOCKQUOTE></PRE>
/// class gml__MultiCurvePropertyType operations:
/// - gml__MultiCurvePropertyType* soap_new_gml__MultiCurvePropertyType(soap*) allocate and default initialize
/// - gml__MultiCurvePropertyType* soap_new_gml__MultiCurvePropertyType(soap*, int num) allocate array and default initialize values
/// - gml__MultiCurvePropertyType* soap_new_req_gml__MultiCurvePropertyType(soap*, ...) allocate, set required members
/// - gml__MultiCurvePropertyType* soap_new_set_gml__MultiCurvePropertyType(soap*, ...) allocate, set all public members
/// - gml__MultiCurvePropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gml__MultiCurvePropertyType(soap*, gml__MultiCurvePropertyType*) deserialize from a stream
/// - int soap_write_gml__MultiCurvePropertyType(soap*, gml__MultiCurvePropertyType*) serialize to a stream
/// - gml__MultiCurvePropertyType* gml__MultiCurvePropertyType::soap_dup(soap*) returns deep copy of gml__MultiCurvePropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__MultiCurvePropertyType::soap_del() deep deletes gml__MultiCurvePropertyType data members, use only after gml__MultiCurvePropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__MultiCurvePropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gml__MultiCurvePropertyType_sequence
    {
/// <PRE><BLOCKQUOTE>
///   A gml:MultiCurve is defined by one or more gml:AbstractCurves.
///   The members of the geometric aggregate may be specified either using the "standard" property (gml:curveMember) or the array property (gml:curveMembers). It is also valid to use both the "standard" and the array properties in the same collection.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":MultiCurve.
    gml__MultiCurveType*                 MultiCurve                     1;	///< Required element.
    }                                   *__MultiCurvePropertyType_sequence 0;
//  END OF SEQUENCE
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":AssociationAttributeGroup">.
/// Attribute "nilReason" of XSD type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         gml__remoteSchema              0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":OwnershipAttributeGroup">.
/// Attribute "owns" of XSD type xs:boolean.
   @bool                                 owns                           0 = false;	///< Default attribute value="false".
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.opengis.net/gml/3.2":MultiSurfacePropertyType is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   A property that has a collection of surfaces as its value domain may either be an appropriate geometry element encapsulated in an element of this type or an XLink reference to a remote geometry element (where remote includes geometry elements located elsewhere in the same document). Either the reference or the contained element shall be given, but neither both nor none.
/// </BLOCKQUOTE></PRE>
/// class gml__MultiSurfacePropertyType operations:
/// - gml__MultiSurfacePropertyType* soap_new_gml__MultiSurfacePropertyType(soap*) allocate and default initialize
/// - gml__MultiSurfacePropertyType* soap_new_gml__MultiSurfacePropertyType(soap*, int num) allocate array and default initialize values
/// - gml__MultiSurfacePropertyType* soap_new_req_gml__MultiSurfacePropertyType(soap*, ...) allocate, set required members
/// - gml__MultiSurfacePropertyType* soap_new_set_gml__MultiSurfacePropertyType(soap*, ...) allocate, set all public members
/// - gml__MultiSurfacePropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gml__MultiSurfacePropertyType(soap*, gml__MultiSurfacePropertyType*) deserialize from a stream
/// - int soap_write_gml__MultiSurfacePropertyType(soap*, gml__MultiSurfacePropertyType*) serialize to a stream
/// - gml__MultiSurfacePropertyType* gml__MultiSurfacePropertyType::soap_dup(soap*) returns deep copy of gml__MultiSurfacePropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__MultiSurfacePropertyType::soap_del() deep deletes gml__MultiSurfacePropertyType data members, use only after gml__MultiSurfacePropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__MultiSurfacePropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gml__MultiSurfacePropertyType_sequence
    {
/// <PRE><BLOCKQUOTE>
///   A gml:MultiSurface is defined by one or more gml:AbstractSurfaces.
///   The members of the geometric aggregate may be specified either using the "standard" property (gml:surfaceMember) or the array property (gml:surfaceMembers). It is also valid to use both the "standard" and the array properties in the same collection.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":MultiSurface.
    gml__MultiSurfaceType*               MultiSurface                   1;	///< Required element.
    }                                   *__MultiSurfacePropertyType_sequence 0;
//  END OF SEQUENCE
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":AssociationAttributeGroup">.
/// Attribute "nilReason" of XSD type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         gml__remoteSchema              0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":OwnershipAttributeGroup">.
/// Attribute "owns" of XSD type xs:boolean.
   @bool                                 owns                           0 = false;	///< Default attribute value="false".
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.opengis.net/gml/3.2":MultiSolidPropertyType is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   A property that has a collection of solids as its value domain may either be an appropriate geometry element encapsulated in an element of this type or an XLink reference to a remote geometry element (where remote includes geometry elements located elsewhere in the same document). Either the reference or the contained element shall be given, but neither both nor none.
/// </BLOCKQUOTE></PRE>
/// class gml__MultiSolidPropertyType operations:
/// - gml__MultiSolidPropertyType* soap_new_gml__MultiSolidPropertyType(soap*) allocate and default initialize
/// - gml__MultiSolidPropertyType* soap_new_gml__MultiSolidPropertyType(soap*, int num) allocate array and default initialize values
/// - gml__MultiSolidPropertyType* soap_new_req_gml__MultiSolidPropertyType(soap*, ...) allocate, set required members
/// - gml__MultiSolidPropertyType* soap_new_set_gml__MultiSolidPropertyType(soap*, ...) allocate, set all public members
/// - gml__MultiSolidPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gml__MultiSolidPropertyType(soap*, gml__MultiSolidPropertyType*) deserialize from a stream
/// - int soap_write_gml__MultiSolidPropertyType(soap*, gml__MultiSolidPropertyType*) serialize to a stream
/// - gml__MultiSolidPropertyType* gml__MultiSolidPropertyType::soap_dup(soap*) returns deep copy of gml__MultiSolidPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__MultiSolidPropertyType::soap_del() deep deletes gml__MultiSolidPropertyType data members, use only after gml__MultiSolidPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__MultiSolidPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gml__MultiSolidPropertyType_sequence
    {
/// <PRE><BLOCKQUOTE>
///   A gml:MultiSolid is defined by one or more gml:AbstractSolids.
///   The members of the geometric aggregate may be specified either using the "standard" property (gml:solidMember) or the array property (gml:solidMembers). It is also valid to use both the "standard" and the array properties in the same collection.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":MultiSolid.
    gml__MultiSolidType*                 MultiSolid                     1;	///< Required element.
    }                                   *__MultiSolidPropertyType_sequence 0;
//  END OF SEQUENCE
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":AssociationAttributeGroup">.
/// Attribute "nilReason" of XSD type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         gml__remoteSchema              0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":OwnershipAttributeGroup">.
/// Attribute "owns" of XSD type xs:boolean.
   @bool                                 owns                           0 = false;	///< Default attribute value="false".
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.opengis.net/gml/3.2":AbstractCurveSegmentType is an abstract complexType.
///
/// class gml__AbstractCurveSegmentType operations:
/// - gml__AbstractCurveSegmentType* soap_new_gml__AbstractCurveSegmentType(soap*) allocate and default initialize
/// - gml__AbstractCurveSegmentType* soap_new_gml__AbstractCurveSegmentType(soap*, int num) allocate array and default initialize values
/// - gml__AbstractCurveSegmentType* soap_new_req_gml__AbstractCurveSegmentType(soap*, ...) allocate, set required members
/// - gml__AbstractCurveSegmentType* soap_new_set_gml__AbstractCurveSegmentType(soap*, ...) allocate, set all public members
/// - gml__AbstractCurveSegmentType::soap_default(soap*) default initialize members
/// - int soap_read_gml__AbstractCurveSegmentType(soap*, gml__AbstractCurveSegmentType*) deserialize from a stream
/// - int soap_write_gml__AbstractCurveSegmentType(soap*, gml__AbstractCurveSegmentType*) serialize to a stream
/// - gml__AbstractCurveSegmentType* gml__AbstractCurveSegmentType::soap_dup(soap*) returns deep copy of gml__AbstractCurveSegmentType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__AbstractCurveSegmentType::soap_del() deep deletes gml__AbstractCurveSegmentType data members, use only after gml__AbstractCurveSegmentType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__AbstractCurveSegmentType : public xsd__anyType
{ public:
/// Attribute "numDerivativesAtStart" of XSD type xs:integer.
   @long                                 numDerivativesAtStart          0 = 0;	///< Default attribute value="0".
/// Attribute "numDerivativesAtEnd" of XSD type xs:integer.
   @long                                 numDerivativesAtEnd            0 = 0;	///< Default attribute value="0".
/// Attribute "numDerivativeInterior" of XSD type xs:integer.
   @long                                 numDerivativeInterior          0 = 0;	///< Default attribute value="0".
};

/// @brief "http://www.opengis.net/gml/3.2":CurveSegmentArrayPropertyType is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   gml:CurveSegmentArrayPropertyType is a container for an array of curve segments.
/// </BLOCKQUOTE></PRE>
/// class gml__CurveSegmentArrayPropertyType operations:
/// - gml__CurveSegmentArrayPropertyType* soap_new_gml__CurveSegmentArrayPropertyType(soap*) allocate and default initialize
/// - gml__CurveSegmentArrayPropertyType* soap_new_gml__CurveSegmentArrayPropertyType(soap*, int num) allocate array and default initialize values
/// - gml__CurveSegmentArrayPropertyType* soap_new_req_gml__CurveSegmentArrayPropertyType(soap*, ...) allocate, set required members
/// - gml__CurveSegmentArrayPropertyType* soap_new_set_gml__CurveSegmentArrayPropertyType(soap*, ...) allocate, set all public members
/// - gml__CurveSegmentArrayPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gml__CurveSegmentArrayPropertyType(soap*, gml__CurveSegmentArrayPropertyType*) deserialize from a stream
/// - int soap_write_gml__CurveSegmentArrayPropertyType(soap*, gml__CurveSegmentArrayPropertyType*) serialize to a stream
/// - gml__CurveSegmentArrayPropertyType* gml__CurveSegmentArrayPropertyType::soap_dup(soap*) returns deep copy of gml__CurveSegmentArrayPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__CurveSegmentArrayPropertyType::soap_del() deep deletes gml__CurveSegmentArrayPropertyType data members, use only after gml__CurveSegmentArrayPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__CurveSegmentArrayPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0" maxOccurs="unbounded">
    std::vector<
    class __gml__CurveSegmentArrayPropertyType_sequence
    {
/// <PRE><BLOCKQUOTE>
///   A curve segment defines a homogeneous segment of a curve.
///   The attributes numDerivativesAtStart, numDerivativesAtEnd and numDerivativesInterior specify the type of continuity as specified in ISO 19107:2003, 6.4.9.3.
///   The AbstractCurveSegment element is the abstract head of the substituition group for all curve segment elements, i.e. continuous segments of the same interpolation mechanism.
///   All curve segments shall have an attribute interpolation with type gml:CurveInterpolationType specifying the curve interpolation mechanism used for this segment. This mechanism uses the control points and control parameters to determine the position of this curve segment.
/// </BLOCKQUOTE></PRE>
/// Reference "http://www.opengis.net/gml/3.2":AbstractCurveSegment to abstract element.
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractCurveSegment"> with global elements <LineStringSegment> <ArcString> <ArcStringByBulge> <ArcByCenterPoint> <CubicSpline> <BSpline> <OffsetCurve> <Clothoid> <GeodesicString>
   $int                                  __unionAbstractCurveSegment   ;	///< Union _gml__union_CurveSegmentArrayPropertyType selector: set to SOAP_UNION__gml__union_CurveSegmentArrayPropertyType_<fieldname>
/// Union for substitutionGroup gml__AbstractCurveSegment.
    union _gml__union_CurveSegmentArrayPropertyType
    {
/// <PRE><BLOCKQUOTE>
///   A LineStringSegment is a curve segment that is defined by two or more control points including the start and end point, with linear interpolation between them.
///   The content model follows the general pattern for the encoding of curve segments.
/// </BLOCKQUOTE></PRE>
/// Element "http://www.opengis.net/gml/3.2":LineStringSegment.
    gml__LineStringSegmentType*          LineStringSegment              nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   An ArcString is a curve segment that uses three-point circular arc interpolation ("circularArc3Points"). The number of arcs in the arc string may be explicitly stated in the attribute numArc. The number of control points in the arc string shall be 2 * numArc + 1.
///   The content model follows the general pattern for the encoding of curve segments.
/// </BLOCKQUOTE></PRE>
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="ArcString"> with global elements <Arc>
/// <PRE><BLOCKQUOTE>
///   An ArcString is a curve segment that uses three-point circular arc interpolation ("circularArc3Points"). The number of arcs in the arc string may be explicitly stated in the attribute numArc. The number of control points in the arc string shall be 2 * numArc + 1.
///   The content model follows the general pattern for the encoding of curve segments.
/// </BLOCKQUOTE></PRE>
/// Element "http://www.opengis.net/gml/3.2":ArcString.
    gml__ArcStringType*                  ArcString                      nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   An Arc is an arc string with only one arc unit, i.e. three control points including the start and end point. As arc is an arc string consisting of a single arc, the attribute "numArc" is fixed to "1".
/// </BLOCKQUOTE></PRE>
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="Arc"> with global elements <Circle>
/// <PRE><BLOCKQUOTE>
///   An Arc is an arc string with only one arc unit, i.e. three control points including the start and end point. As arc is an arc string consisting of a single arc, the attribute "numArc" is fixed to "1".
/// </BLOCKQUOTE></PRE>
/// Element "http://www.opengis.net/gml/3.2":Arc.
    gml__ArcType*                        Arc                            nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   A Circle is an arc whose ends coincide to form a simple closed loop. The three control points shall be distinct non-co-linear points for the circle to be unambiguously defined. The arc is simply extended past the third control point until the first control point is encountered.
/// </BLOCKQUOTE></PRE>
/// Element "http://www.opengis.net/gml/3.2":Circle.
    gml__CircleType*                     Circle                         nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
//  END OF SUBSTITUTIONS
//  END OF SUBSTITUTIONS
/// <PRE><BLOCKQUOTE>
///   This variant of the arc computes the mid points of the arcs instead of storing the coordinates directly. The control point sequence consists of the start and end points of each arc plus the bulge (see ISO 19107:2003, 6.4.17.2). The normal is a vector normal (perpendicular) to the chord of the arc (see ISO 19107:2003, 6.4.17.4).
///   The interpolation is fixed as "circularArc2PointWithBulge".
///   The number of arcs in the arc string may be explicitly stated in the attribute numArc. The number of control points in the arc string shall be numArc + 1.
///   The content model follows the general pattern for the encoding of curve segments.
/// </BLOCKQUOTE></PRE>
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="ArcStringByBulge"> with global elements <ArcByBulge>
/// <PRE><BLOCKQUOTE>
///   This variant of the arc computes the mid points of the arcs instead of storing the coordinates directly. The control point sequence consists of the start and end points of each arc plus the bulge (see ISO 19107:2003, 6.4.17.2). The normal is a vector normal (perpendicular) to the chord of the arc (see ISO 19107:2003, 6.4.17.4).
///   The interpolation is fixed as "circularArc2PointWithBulge".
///   The number of arcs in the arc string may be explicitly stated in the attribute numArc. The number of control points in the arc string shall be numArc + 1.
///   The content model follows the general pattern for the encoding of curve segments.
/// </BLOCKQUOTE></PRE>
/// Element "http://www.opengis.net/gml/3.2":ArcStringByBulge.
    gml__ArcStringByBulgeType*           ArcStringByBulge               nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   An ArcByBulge is an arc string with only one arc unit, i.e. two control points, one bulge and one normal vector.
///   As arc is an arc string consisting of a single arc, the attribute "numArc" is fixed to "1".
/// </BLOCKQUOTE></PRE>
/// Element "http://www.opengis.net/gml/3.2":ArcByBulge.
    gml__ArcByBulgeType*                 ArcByBulge                     nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
//  END OF SUBSTITUTIONS
/// <PRE><BLOCKQUOTE>
///   This variant of the arc requires that the points on the arc shall be computed instead of storing the coordinates directly. The single control point is the center point of the arc plus the radius and the bearing at start and end. This representation can be used only in 2D.
///   The element radius specifies the radius of the arc.
///   The element startAngle specifies the bearing of the arc at the start.
///   The element endAngle specifies the bearing of the arc at the end.
///   The interpolation is fixed as "circularArcCenterPointWithRadius".
///   Since this type describes always a single arc, the attribute "numArc" is fixed to "1".
///   The content model follows the general pattern for the encoding of curve segments.
/// </BLOCKQUOTE></PRE>
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="ArcByCenterPoint"> with global elements <CircleByCenterPoint>
/// <PRE><BLOCKQUOTE>
///   This variant of the arc requires that the points on the arc shall be computed instead of storing the coordinates directly. The single control point is the center point of the arc plus the radius and the bearing at start and end. This representation can be used only in 2D.
///   The element radius specifies the radius of the arc.
///   The element startAngle specifies the bearing of the arc at the start.
///   The element endAngle specifies the bearing of the arc at the end.
///   The interpolation is fixed as "circularArcCenterPointWithRadius".
///   Since this type describes always a single arc, the attribute "numArc" is fixed to "1".
///   The content model follows the general pattern for the encoding of curve segments.
/// </BLOCKQUOTE></PRE>
/// Element "http://www.opengis.net/gml/3.2":ArcByCenterPoint.
    gml__ArcByCenterPointType*           ArcByCenterPoint               nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   A gml:CircleByCenterPoint is an gml:ArcByCenterPoint with identical start and end angle to form a full circle. Again, this representation can be used only in 2D.
/// </BLOCKQUOTE></PRE>
/// Element "http://www.opengis.net/gml/3.2":CircleByCenterPoint.
    gml__CircleByCenterPointType*        CircleByCenterPoint            nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
//  END OF SUBSTITUTIONS
/// <PRE><BLOCKQUOTE>
///   The number of control points shall be at least three.
///   vectorAtStart is the unit tangent vector at the start point of the spline. vectorAtEnd is the unit tangent vector at the end point of the spline. Only the direction of the vectors shall be used to determine the shape of the cubic spline, not their length.
///   interpolation is fixed as "cubicSpline".
///   degree shall be the degree of the polynomial used for the interpolation in this spline. Therefore the degree for a cubic spline is fixed to "3".
///   The content model follows the general pattern for the encoding of curve segments.
/// </BLOCKQUOTE></PRE>
/// Element "http://www.opengis.net/gml/3.2":CubicSpline.
    gml__CubicSplineType*                CubicSpline                    nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   A B-Spline is a piecewise parametric polynomial or rational curve described in terms of control points and basis functions as specified in ISO 19107:2003, 6.4.30. Therefore, interpolation may be either "polynomialSpline" or "rationalSpline" depending on the interpolation type; default is "polynomialSpline".
///   degree shall be the degree of the polynomial used for interpolation in this spline.
///   knot shall be the sequence of distinct knots used to define the spline basis functions (see ISO 19107:2003, 6.4.26.2).
///   The attribute isPolynomial shall be set to "true" if this is a polynomial spline (see ISO 19107:2003, 6.4.30.5).
///   The attribute knotType shall provide the type of knot distribution used in defining this spline (see ISO 19107:2003, 6.4.30.4).
///   The content model follows the general pattern for the encoding of curve segments.
/// </BLOCKQUOTE></PRE>
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="BSpline"> with global elements <Bezier>
/// <PRE><BLOCKQUOTE>
///   A B-Spline is a piecewise parametric polynomial or rational curve described in terms of control points and basis functions as specified in ISO 19107:2003, 6.4.30. Therefore, interpolation may be either "polynomialSpline" or "rationalSpline" depending on the interpolation type; default is "polynomialSpline".
///   degree shall be the degree of the polynomial used for interpolation in this spline.
///   knot shall be the sequence of distinct knots used to define the spline basis functions (see ISO 19107:2003, 6.4.26.2).
///   The attribute isPolynomial shall be set to "true" if this is a polynomial spline (see ISO 19107:2003, 6.4.30.5).
///   The attribute knotType shall provide the type of knot distribution used in defining this spline (see ISO 19107:2003, 6.4.30.4).
///   The content model follows the general pattern for the encoding of curve segments.
/// </BLOCKQUOTE></PRE>
/// Element "http://www.opengis.net/gml/3.2":BSpline.
    gml__BSplineType*                    BSpline                        nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   Bezier curves are polynomial splines that use Bezier or Bernstein polynomials for interpolation purposes. It is a special case of the B-Spline curve with two knots.
///   degree shall be the degree of the polynomial used for interpolation in this spline.
///   knot shall be the sequence of distinct knots used to define the spline basis functions.
///   interpolation is fixed as "polynomialSpline".
///   isPolynomial is fixed as "true".
///   knotType is not relevant for Bezier curve segments.
/// </BLOCKQUOTE></PRE>
/// Element "http://www.opengis.net/gml/3.2":Bezier.
    gml__BezierType*                     Bezier                         nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
//  END OF SUBSTITUTIONS
/// <PRE><BLOCKQUOTE>
///   An offset curve is a curve at a constant distance from the basis curve. offsetBase is the base curve from which this curve is defined as an offset. distance and refDirection have the same meaning as specified in ISO 19107:2003, 6.4.23.
///   The content model follows the general pattern for the encoding of curve segments.
/// </BLOCKQUOTE></PRE>
/// Element "http://www.opengis.net/gml/3.2":OffsetCurve.
    gml__OffsetCurveType*                OffsetCurve                    nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   A clothoid, or Cornu's spiral, is plane curve whose curvature is a fixed function of its length.
///   refLocation, startParameter, endParameter and scaleFactor have the same meaning as specified in ISO 19107:2003, 6.4.22.
///   interpolation is fixed as "clothoid".
///   The content model follows the general pattern for the encoding of curve segments.
/// </BLOCKQUOTE></PRE>
/// Element "http://www.opengis.net/gml/3.2":Clothoid.
    gml__ClothoidType*                   Clothoid                       nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   A sequence of geodesic segments. The number of control points shall be at least two.
///   interpolation is fixed as "geodesic".
///   The content model follows the general pattern for the encoding of curve segments.
/// </BLOCKQUOTE></PRE>
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="GeodesicString"> with global elements <Geodesic>
/// <PRE><BLOCKQUOTE>
///   A sequence of geodesic segments. The number of control points shall be at least two.
///   interpolation is fixed as "geodesic".
///   The content model follows the general pattern for the encoding of curve segments.
/// </BLOCKQUOTE></PRE>
/// Element "http://www.opengis.net/gml/3.2":GeodesicString.
    gml__GeodesicStringType*             GeodesicString                 nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.opengis.net/gml/3.2":Geodesic.
    gml__GeodesicType*                   Geodesic                       nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
//  END OF SUBSTITUTIONS
    }                                    union_CurveSegmentArrayPropertyType;
//  END OF SUBSTITUTIONS
    }>                                   __CurveSegmentArrayPropertyType_sequence 0;
//  END OF SEQUENCE
};

/// @brief "http://www.opengis.net/gml/3.2":KnotType is a complexType.
///
/// class gml__KnotType operations:
/// - gml__KnotType* soap_new_gml__KnotType(soap*) allocate and default initialize
/// - gml__KnotType* soap_new_gml__KnotType(soap*, int num) allocate array and default initialize values
/// - gml__KnotType* soap_new_req_gml__KnotType(soap*, ...) allocate, set required members
/// - gml__KnotType* soap_new_set_gml__KnotType(soap*, ...) allocate, set all public members
/// - gml__KnotType::soap_default(soap*) default initialize members
/// - int soap_read_gml__KnotType(soap*, gml__KnotType*) deserialize from a stream
/// - int soap_write_gml__KnotType(soap*, gml__KnotType*) serialize to a stream
/// - gml__KnotType* gml__KnotType::soap_dup(soap*) returns deep copy of gml__KnotType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__KnotType::soap_del() deep deletes gml__KnotType data members, use only after gml__KnotType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__KnotType : public xsd__anyType
{ public:
/// Element "value" of XSD type xs:double.
    double                               value                          1;	///< Required element.
/// Element "multiplicity" of XSD type xs:nonNegativeInteger.
    xsd__nonNegativeInteger              multiplicity                   1;	///< Required element.
/// Element "weight" of XSD type xs:double.
    double                               weight                         1;	///< Required element.
};

/// @brief "http://www.opengis.net/gml/3.2":KnotPropertyType is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   gml:KnotPropertyType encapsulates a knot to use it in a geometric type.
/// </BLOCKQUOTE></PRE>
/// class gml__KnotPropertyType operations:
/// - gml__KnotPropertyType* soap_new_gml__KnotPropertyType(soap*) allocate and default initialize
/// - gml__KnotPropertyType* soap_new_gml__KnotPropertyType(soap*, int num) allocate array and default initialize values
/// - gml__KnotPropertyType* soap_new_req_gml__KnotPropertyType(soap*, ...) allocate, set required members
/// - gml__KnotPropertyType* soap_new_set_gml__KnotPropertyType(soap*, ...) allocate, set all public members
/// - gml__KnotPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gml__KnotPropertyType(soap*, gml__KnotPropertyType*) deserialize from a stream
/// - int soap_write_gml__KnotPropertyType(soap*, gml__KnotPropertyType*) serialize to a stream
/// - gml__KnotPropertyType* gml__KnotPropertyType::soap_dup(soap*) returns deep copy of gml__KnotPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__KnotPropertyType::soap_del() deep deletes gml__KnotPropertyType data members, use only after gml__KnotPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__KnotPropertyType : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   A knot is a breakpoint on a piecewise spline curve.
///   value is the value of the parameter at the knot of the spline (see ISO 19107:2003, 6.4.24.2).
///   multiplicity is the multiplicity of this knot used in the definition of the spline (with the same weight).
///   weight is the value of the averaging weight used for this knot of the spline.
/// </BLOCKQUOTE></PRE>
/// Element "Knot" of XSD type "http://www.opengis.net/gml/3.2":KnotType.
    gml__KnotType*                       Knot                           1;	///< Required element.
};

/// @brief "http://www.opengis.net/gml/3.2":AffinePlacementType is a complexType.
///
/// class gml__AffinePlacementType operations:
/// - gml__AffinePlacementType* soap_new_gml__AffinePlacementType(soap*) allocate and default initialize
/// - gml__AffinePlacementType* soap_new_gml__AffinePlacementType(soap*, int num) allocate array and default initialize values
/// - gml__AffinePlacementType* soap_new_req_gml__AffinePlacementType(soap*, ...) allocate, set required members
/// - gml__AffinePlacementType* soap_new_set_gml__AffinePlacementType(soap*, ...) allocate, set all public members
/// - gml__AffinePlacementType::soap_default(soap*) default initialize members
/// - int soap_read_gml__AffinePlacementType(soap*, gml__AffinePlacementType*) deserialize from a stream
/// - int soap_write_gml__AffinePlacementType(soap*, gml__AffinePlacementType*) serialize to a stream
/// - gml__AffinePlacementType* gml__AffinePlacementType::soap_dup(soap*) returns deep copy of gml__AffinePlacementType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__AffinePlacementType::soap_del() deep deletes gml__AffinePlacementType data members, use only after gml__AffinePlacementType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__AffinePlacementType : public xsd__anyType
{ public:
/// Element "location" of XSD type "http://www.opengis.net/gml/3.2":DirectPositionType.
    gml__DirectPositionType*             location                       1;	///< Required element.
/// Vector of gml__VectorType* of length 1..unbounded.
    std::vector<gml__VectorType*       > refDirection                   1;
/// Element "inDimension" of XSD type xs:positiveInteger.
    xsd__positiveInteger                 inDimension                    1;	///< Required element.
/// Element "outDimension" of XSD type xs:positiveInteger.
    xsd__positiveInteger                 outDimension                   1;	///< Required element.
};

/// @brief "http://www.opengis.net/gml/3.2":AbstractSurfacePatchType is an abstract complexType.
///
/// class gml__AbstractSurfacePatchType operations:
/// - gml__AbstractSurfacePatchType* soap_new_gml__AbstractSurfacePatchType(soap*) allocate and default initialize
/// - gml__AbstractSurfacePatchType* soap_new_gml__AbstractSurfacePatchType(soap*, int num) allocate array and default initialize values
/// - gml__AbstractSurfacePatchType* soap_new_req_gml__AbstractSurfacePatchType(soap*, ...) allocate, set required members
/// - gml__AbstractSurfacePatchType* soap_new_set_gml__AbstractSurfacePatchType(soap*, ...) allocate, set all public members
/// - gml__AbstractSurfacePatchType::soap_default(soap*) default initialize members
/// - int soap_read_gml__AbstractSurfacePatchType(soap*, gml__AbstractSurfacePatchType*) deserialize from a stream
/// - int soap_write_gml__AbstractSurfacePatchType(soap*, gml__AbstractSurfacePatchType*) serialize to a stream
/// - gml__AbstractSurfacePatchType* gml__AbstractSurfacePatchType::soap_dup(soap*) returns deep copy of gml__AbstractSurfacePatchType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__AbstractSurfacePatchType::soap_del() deep deletes gml__AbstractSurfacePatchType data members, use only after gml__AbstractSurfacePatchType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__AbstractSurfacePatchType : public xsd__anyType
{ public:
};

/// @brief "http://www.opengis.net/gml/3.2":SurfacePatchArrayPropertyType is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   gml:SurfacePatchArrayPropertyType is a container for a sequence of surface patches.
/// </BLOCKQUOTE></PRE>
/// class gml__SurfacePatchArrayPropertyType operations:
/// - gml__SurfacePatchArrayPropertyType* soap_new_gml__SurfacePatchArrayPropertyType(soap*) allocate and default initialize
/// - gml__SurfacePatchArrayPropertyType* soap_new_gml__SurfacePatchArrayPropertyType(soap*, int num) allocate array and default initialize values
/// - gml__SurfacePatchArrayPropertyType* soap_new_req_gml__SurfacePatchArrayPropertyType(soap*, ...) allocate, set required members
/// - gml__SurfacePatchArrayPropertyType* soap_new_set_gml__SurfacePatchArrayPropertyType(soap*, ...) allocate, set all public members
/// - gml__SurfacePatchArrayPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gml__SurfacePatchArrayPropertyType(soap*, gml__SurfacePatchArrayPropertyType*) deserialize from a stream
/// - int soap_write_gml__SurfacePatchArrayPropertyType(soap*, gml__SurfacePatchArrayPropertyType*) serialize to a stream
/// - gml__SurfacePatchArrayPropertyType* gml__SurfacePatchArrayPropertyType::soap_dup(soap*) returns deep copy of gml__SurfacePatchArrayPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__SurfacePatchArrayPropertyType::soap_del() deep deletes gml__SurfacePatchArrayPropertyType data members, use only after gml__SurfacePatchArrayPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__SurfacePatchArrayPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0" maxOccurs="unbounded">
    std::vector<
    class __gml__SurfacePatchArrayPropertyType_sequence
    {
/// <PRE><BLOCKQUOTE>
///   A surface patch defines a homogenuous portion of a surface. The AbstractSurfacePatch element is the abstract head of the substituition group for all surface patch elements describing a continuous portion of a surface.
///   All surface patches shall have an attribute interpolation (declared in the types derived from gml:AbstractSurfacePatchType) specifying the interpolation mechanism used for the patch using gml:SurfaceInterpolationType.
/// </BLOCKQUOTE></PRE>
/// Reference "http://www.opengis.net/gml/3.2":AbstractSurfacePatch to abstract element.
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractSurfacePatch"> with global elements <PolygonPatch> <Triangle> <Rectangle>
   $int                                  __unionAbstractSurfacePatch   ;	///< Union _gml__union_SurfacePatchArrayPropertyType selector: set to SOAP_UNION__gml__union_SurfacePatchArrayPropertyType_<fieldname>
/// Union for substitutionGroup gml__AbstractSurfacePatch.
    union _gml__union_SurfacePatchArrayPropertyType
    {
/// <PRE><BLOCKQUOTE>
///   A gml:PolygonPatch is a surface patch that is defined by a set of boundary curves and an underlying surface to which these curves adhere. The curves shall be coplanar and the polygon uses planar interpolation in its interior. interpolation is fixed to "planar", i.e. an interpolation shall return points on a single plane. The boundary of the patch shall be contained within that plane.
/// </BLOCKQUOTE></PRE>
/// Element "http://www.opengis.net/gml/3.2":PolygonPatch.
    gml__PolygonPatchType*               PolygonPatch                   nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   gml:Triangle represents a triangle as a surface patch with an outer boundary consisting of a linear ring. Note that this is a polygon (subtype) with no inner boundaries. The number of points in the linear ring shall be four.
///   The ring (element exterior) shall be a gml:LinearRing and shall form a triangle, the first and the last position shall be coincident.
///   interpolation is fixed to "planar", i.e. an interpolation shall return points on a single plane. The boundary of the patch shall be contained within that plane.
/// </BLOCKQUOTE></PRE>
/// Element "http://www.opengis.net/gml/3.2":Triangle.
    gml__TriangleType*                   Triangle                       nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   gml:Rectangle represents a rectangle as a surface patch with an outer boundary consisting of a linear ring. Note that this is a polygon (subtype) with no inner boundaries. The number of points in the linear ring shall be five.
///   The ring (element exterior) shall be a gml:LinearRing and shall form a rectangle; the first and the last position shall be coincident.
///   interpolation is fixed to "planar", i.e. an interpolation shall return points on a single plane. The boundary of the patch shall be contained within that plane.
/// </BLOCKQUOTE></PRE>
/// Element "http://www.opengis.net/gml/3.2":Rectangle.
    gml__RectangleType*                  Rectangle                      nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_SurfacePatchArrayPropertyType;
//  END OF SUBSTITUTIONS
    }>                                   __SurfacePatchArrayPropertyType_sequence 0;
//  END OF SEQUENCE
};

/// @brief "http://www.opengis.net/gml/3.2":RingPropertyType is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   A property with the content model of gml:RingPropertyType encapsulates a ring to represent a component of a surface boundary.
/// </BLOCKQUOTE></PRE>
/// class gml__RingPropertyType operations:
/// - gml__RingPropertyType* soap_new_gml__RingPropertyType(soap*) allocate and default initialize
/// - gml__RingPropertyType* soap_new_gml__RingPropertyType(soap*, int num) allocate array and default initialize values
/// - gml__RingPropertyType* soap_new_req_gml__RingPropertyType(soap*, ...) allocate, set required members
/// - gml__RingPropertyType* soap_new_set_gml__RingPropertyType(soap*, ...) allocate, set all public members
/// - gml__RingPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gml__RingPropertyType(soap*, gml__RingPropertyType*) deserialize from a stream
/// - int soap_write_gml__RingPropertyType(soap*, gml__RingPropertyType*) serialize to a stream
/// - gml__RingPropertyType* gml__RingPropertyType::soap_dup(soap*) returns deep copy of gml__RingPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__RingPropertyType::soap_del() deep deletes gml__RingPropertyType data members, use only after gml__RingPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__RingPropertyType : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   A ring is used to represent a single connected component of a surface boundary as specified in ISO 19107:2003, 6.3.6.
///   Every gml:curveMember references or contains one curve, i.e. any element which is substitutable for gml:AbstractCurve. In the context of a ring, the curves describe the boundary of the surface. The sequence of curves shall be contiguous and connected in a cycle.
///   If provided, the aggregationType attribute shall have the value "sequence".
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":Ring.
    gml__RingType*                       Ring                           1;	///< Required element.
};

/// @brief "http://www.opengis.net/gml/3.2":LineStringSegmentArrayPropertyType is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   gml:LineStringSegmentArrayPropertyType provides a container for line strings.
/// </BLOCKQUOTE></PRE>
/// class gml__LineStringSegmentArrayPropertyType operations:
/// - gml__LineStringSegmentArrayPropertyType* soap_new_gml__LineStringSegmentArrayPropertyType(soap*) allocate and default initialize
/// - gml__LineStringSegmentArrayPropertyType* soap_new_gml__LineStringSegmentArrayPropertyType(soap*, int num) allocate array and default initialize values
/// - gml__LineStringSegmentArrayPropertyType* soap_new_req_gml__LineStringSegmentArrayPropertyType(soap*, ...) allocate, set required members
/// - gml__LineStringSegmentArrayPropertyType* soap_new_set_gml__LineStringSegmentArrayPropertyType(soap*, ...) allocate, set all public members
/// - gml__LineStringSegmentArrayPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gml__LineStringSegmentArrayPropertyType(soap*, gml__LineStringSegmentArrayPropertyType*) deserialize from a stream
/// - int soap_write_gml__LineStringSegmentArrayPropertyType(soap*, gml__LineStringSegmentArrayPropertyType*) serialize to a stream
/// - gml__LineStringSegmentArrayPropertyType* gml__LineStringSegmentArrayPropertyType::soap_dup(soap*) returns deep copy of gml__LineStringSegmentArrayPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__LineStringSegmentArrayPropertyType::soap_del() deep deletes gml__LineStringSegmentArrayPropertyType data members, use only after gml__LineStringSegmentArrayPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__LineStringSegmentArrayPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0" maxOccurs="unbounded">
    std::vector<
    class __gml__LineStringSegmentArrayPropertyType_sequence
    {
/// <PRE><BLOCKQUOTE>
///   A LineStringSegment is a curve segment that is defined by two or more control points including the start and end point, with linear interpolation between them.
///   The content model follows the general pattern for the encoding of curve segments.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":LineStringSegment.
    gml__LineStringSegmentType*          LineStringSegment              1;	///< Required element.
    }>                                   __LineStringSegmentArrayPropertyType_sequence 0;
//  END OF SEQUENCE
};

/// @brief "http://www.opengis.net/gml/3.2":SolidPropertyType is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   A property that has a solid as its value domain may either be an appropriate geometry element encapsulated in an element of this type or an XLink reference to a remote geometry element (where remote includes geometry elements located elsewhere in the same document). Either the reference or the contained element shall be given, but neither both nor none.
/// </BLOCKQUOTE></PRE>
/// class gml__SolidPropertyType operations:
/// - gml__SolidPropertyType* soap_new_gml__SolidPropertyType(soap*) allocate and default initialize
/// - gml__SolidPropertyType* soap_new_gml__SolidPropertyType(soap*, int num) allocate array and default initialize values
/// - gml__SolidPropertyType* soap_new_req_gml__SolidPropertyType(soap*, ...) allocate, set required members
/// - gml__SolidPropertyType* soap_new_set_gml__SolidPropertyType(soap*, ...) allocate, set all public members
/// - gml__SolidPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gml__SolidPropertyType(soap*, gml__SolidPropertyType*) deserialize from a stream
/// - int soap_write_gml__SolidPropertyType(soap*, gml__SolidPropertyType*) serialize to a stream
/// - gml__SolidPropertyType* gml__SolidPropertyType::soap_dup(soap*) returns deep copy of gml__SolidPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__SolidPropertyType::soap_del() deep deletes gml__SolidPropertyType data members, use only after gml__SolidPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__SolidPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gml__SolidPropertyType_sequence
    {
/// <PRE><BLOCKQUOTE>
///   The AbstractSolid element is the abstract head of the substituition group for all (continuous) solid elements.
/// </BLOCKQUOTE></PRE>
/// Reference "http://www.opengis.net/gml/3.2":AbstractSolid to abstract element.
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractSolid"> with global elements <CompositeSolid> <Solid>
   $int                                  __unionAbstractSolid          ;	///< Union _gml__union_SolidPropertyType selector: set to SOAP_UNION__gml__union_SolidPropertyType_<fieldname>
/// Union for substitutionGroup gml__AbstractSolid.
    union _gml__union_SolidPropertyType
    {
/// <PRE><BLOCKQUOTE>
///   gml:CompositeSolid implements ISO 19107 GM_CompositeSolid (see ISO 19107:2003, 6.6.7) as specified in D.2.3.6. A gml:CompositeSolid is represented by a set of orientable surfaces. It is a geometry type with all the geometric properties of a (primitive) solid. Essentially, a composite solid is a collection of solids that join in pairs on common boundary surfaces and which, when considered as a whole, form a single solid. solidMember references or contains one solid in the composite solid. The solids are contiguous.
/// </BLOCKQUOTE></PRE>
/// Element "http://www.opengis.net/gml/3.2":CompositeSolid.
    gml__CompositeSolidType*             CompositeSolid                 nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   A solid is the basis for 3-dimensional geometry. The extent of a solid is defined by the boundary surfaces as specified in ISO 19107:2003, 6.3.18. exterior specifies the outer boundary, interior the inner boundary of the solid.
/// </BLOCKQUOTE></PRE>
/// Element "http://www.opengis.net/gml/3.2":Solid.
    gml__SolidType*                      Solid                          nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_SolidPropertyType       ;
//  END OF SUBSTITUTIONS
    }                                   *__SolidPropertyType_sequence   0;
//  END OF SEQUENCE
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":AssociationAttributeGroup">.
/// Attribute "nilReason" of XSD type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         gml__remoteSchema              0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":OwnershipAttributeGroup">.
/// Attribute "owns" of XSD type xs:boolean.
   @bool                                 owns                           0 = false;	///< Default attribute value="false".
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.opengis.net/gml/3.2":SolidArrayPropertyType is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   gml:SolidArrayPropertyType is a container for an array of solids. The elements are always contained in the array property, referencing geometry elements or arrays of geometry elements is not supported.
/// </BLOCKQUOTE></PRE>
/// class gml__SolidArrayPropertyType operations:
/// - gml__SolidArrayPropertyType* soap_new_gml__SolidArrayPropertyType(soap*) allocate and default initialize
/// - gml__SolidArrayPropertyType* soap_new_gml__SolidArrayPropertyType(soap*, int num) allocate array and default initialize values
/// - gml__SolidArrayPropertyType* soap_new_req_gml__SolidArrayPropertyType(soap*, ...) allocate, set required members
/// - gml__SolidArrayPropertyType* soap_new_set_gml__SolidArrayPropertyType(soap*, ...) allocate, set all public members
/// - gml__SolidArrayPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gml__SolidArrayPropertyType(soap*, gml__SolidArrayPropertyType*) deserialize from a stream
/// - int soap_write_gml__SolidArrayPropertyType(soap*, gml__SolidArrayPropertyType*) serialize to a stream
/// - gml__SolidArrayPropertyType* gml__SolidArrayPropertyType::soap_dup(soap*) returns deep copy of gml__SolidArrayPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__SolidArrayPropertyType::soap_del() deep deletes gml__SolidArrayPropertyType data members, use only after gml__SolidArrayPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__SolidArrayPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0" maxOccurs="unbounded">
    std::vector<
    class __gml__SolidArrayPropertyType_sequence
    {
/// <PRE><BLOCKQUOTE>
///   The AbstractSolid element is the abstract head of the substituition group for all (continuous) solid elements.
/// </BLOCKQUOTE></PRE>
/// Reference "http://www.opengis.net/gml/3.2":AbstractSolid to abstract element.
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractSolid"> with global elements <CompositeSolid> <Solid>
   $int                                  __unionAbstractSolid          ;	///< Union _gml__union_SolidArrayPropertyType selector: set to SOAP_UNION__gml__union_SolidArrayPropertyType_<fieldname>
/// Union for substitutionGroup gml__AbstractSolid.
    union _gml__union_SolidArrayPropertyType
    {
/// <PRE><BLOCKQUOTE>
///   gml:CompositeSolid implements ISO 19107 GM_CompositeSolid (see ISO 19107:2003, 6.6.7) as specified in D.2.3.6. A gml:CompositeSolid is represented by a set of orientable surfaces. It is a geometry type with all the geometric properties of a (primitive) solid. Essentially, a composite solid is a collection of solids that join in pairs on common boundary surfaces and which, when considered as a whole, form a single solid. solidMember references or contains one solid in the composite solid. The solids are contiguous.
/// </BLOCKQUOTE></PRE>
/// Element "http://www.opengis.net/gml/3.2":CompositeSolid.
    gml__CompositeSolidType*             CompositeSolid                 nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   A solid is the basis for 3-dimensional geometry. The extent of a solid is defined by the boundary surfaces as specified in ISO 19107:2003, 6.3.18. exterior specifies the outer boundary, interior the inner boundary of the solid.
/// </BLOCKQUOTE></PRE>
/// Element "http://www.opengis.net/gml/3.2":Solid.
    gml__SolidType*                      Solid                          nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_SolidArrayPropertyType  ;
//  END OF SUBSTITUTIONS
    }>                                   __SolidArrayPropertyType_sequence 0;
//  END OF SEQUENCE
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":OwnershipAttributeGroup">.
/// Attribute "owns" of XSD type xs:boolean.
   @bool                                 owns                           0 = false;	///< Default attribute value="false".
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.opengis.net/gml/3.2":ShellPropertyType is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   A property with the content model of gml:ShellPropertyType encapsulates a shell to represent a component of a solid boundary.
/// </BLOCKQUOTE></PRE>
/// class gml__ShellPropertyType operations:
/// - gml__ShellPropertyType* soap_new_gml__ShellPropertyType(soap*) allocate and default initialize
/// - gml__ShellPropertyType* soap_new_gml__ShellPropertyType(soap*, int num) allocate array and default initialize values
/// - gml__ShellPropertyType* soap_new_req_gml__ShellPropertyType(soap*, ...) allocate, set required members
/// - gml__ShellPropertyType* soap_new_set_gml__ShellPropertyType(soap*, ...) allocate, set all public members
/// - gml__ShellPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gml__ShellPropertyType(soap*, gml__ShellPropertyType*) deserialize from a stream
/// - int soap_write_gml__ShellPropertyType(soap*, gml__ShellPropertyType*) serialize to a stream
/// - gml__ShellPropertyType* gml__ShellPropertyType::soap_dup(soap*) returns deep copy of gml__ShellPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__ShellPropertyType::soap_del() deep deletes gml__ShellPropertyType data members, use only after gml__ShellPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__ShellPropertyType : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   A shell is used to represent a single connected component of a solid boundary as specified in ISO 19107:2003, 6.3.8.
///   Every gml:surfaceMember references or contains one surface, i.e. any element which is substitutable for gml:AbstractSurface. In the context of a shell, the surfaces describe the boundary of the solid. If provided, the aggregationType attribute shall have the value "set".
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":Shell.
    gml__ShellType*                      Shell                          1;	///< Required element.
};

/// @brief "http://www.opengis.net/gml/3.2":SurfacePropertyType is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   A property that has a surface as its value domain may either be an appropriate geometry element encapsulated in an element of this type or an XLink reference to a remote geometry element (where remote includes geometry elements located elsewhere in the same document). Either the reference or the contained element shall be given, but neither both nor none.
/// </BLOCKQUOTE></PRE>
/// class gml__SurfacePropertyType operations:
/// - gml__SurfacePropertyType* soap_new_gml__SurfacePropertyType(soap*) allocate and default initialize
/// - gml__SurfacePropertyType* soap_new_gml__SurfacePropertyType(soap*, int num) allocate array and default initialize values
/// - gml__SurfacePropertyType* soap_new_req_gml__SurfacePropertyType(soap*, ...) allocate, set required members
/// - gml__SurfacePropertyType* soap_new_set_gml__SurfacePropertyType(soap*, ...) allocate, set all public members
/// - gml__SurfacePropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gml__SurfacePropertyType(soap*, gml__SurfacePropertyType*) deserialize from a stream
/// - int soap_write_gml__SurfacePropertyType(soap*, gml__SurfacePropertyType*) serialize to a stream
/// - gml__SurfacePropertyType* gml__SurfacePropertyType::soap_dup(soap*) returns deep copy of gml__SurfacePropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__SurfacePropertyType::soap_del() deep deletes gml__SurfacePropertyType data members, use only after gml__SurfacePropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__SurfacePropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gml__SurfacePropertyType_sequence
    {
/// <PRE><BLOCKQUOTE>
///   The AbstractSurface element is the abstract head of the substitution group for all (continuous) surface elements.
/// </BLOCKQUOTE></PRE>
/// Reference "http://www.opengis.net/gml/3.2":AbstractSurface to abstract element.
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractSurface"> with global elements <CompositeSurface> <Surface> <OrientableSurface> <Shell> <Polygon>
   $int                                  __unionAbstractSurface        ;	///< Union _gml__union_SurfacePropertyType selector: set to SOAP_UNION__gml__union_SurfacePropertyType_<fieldname>
/// Union for substitutionGroup gml__AbstractSurface.
    union _gml__union_SurfacePropertyType
    {
/// <PRE><BLOCKQUOTE>
///   A gml:CompositeSurface is represented by a set of orientable surfaces. It is geometry type with all the geometric properties of a (primitive) surface. Essentially, a composite surface is a collection of surfaces that join in pairs on common boundary curves and which, when considered as a whole, form a single surface.
///   surfaceMember references or contains inline one surface in the composite surface. The surfaces are contiguous.
/// </BLOCKQUOTE></PRE>
/// Element "http://www.opengis.net/gml/3.2":CompositeSurface.
    gml__CompositeSurfaceType*           CompositeSurface               nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   A Surface is a 2-dimensional primitive and is composed of one or more surface patches as specified in ISO 19107:2003, 6.3.17.1. The surface patches are connected to one another.
///   patches encapsulates the patches of the surface.
/// </BLOCKQUOTE></PRE>
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="Surface"> with global elements <PolyhedralSurface> <TriangulatedSurface>
/// <PRE><BLOCKQUOTE>
///   A Surface is a 2-dimensional primitive and is composed of one or more surface patches as specified in ISO 19107:2003, 6.3.17.1. The surface patches are connected to one another.
///   patches encapsulates the patches of the surface.
/// </BLOCKQUOTE></PRE>
/// Element "http://www.opengis.net/gml/3.2":Surface.
    gml__SurfaceType*                    Surface                        nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   A polyhedral surface is a surface composed of polygon patches connected along their common boundary curves. This differs from the surface type only in the restriction on the types of surface patches acceptable.
///   polygonPatches encapsulates the polygon patches of the polyhedral surface.
/// </BLOCKQUOTE></PRE>
/// Element "http://www.opengis.net/gml/3.2":PolyhedralSurface.
    gml__SurfaceType*                    PolyhedralSurface              nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   A triangulated surface is a polyhedral surface that is composed only of triangles. There is no restriction on how the triangulation is derived.
///   trianglePatches encapsulates the triangles of the triangulated surface.
/// </BLOCKQUOTE></PRE>
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="TriangulatedSurface"> with global elements <Tin>
/// <PRE><BLOCKQUOTE>
///   A triangulated surface is a polyhedral surface that is composed only of triangles. There is no restriction on how the triangulation is derived.
///   trianglePatches encapsulates the triangles of the triangulated surface.
/// </BLOCKQUOTE></PRE>
/// Element "http://www.opengis.net/gml/3.2":TriangulatedSurface.
    gml__SurfaceType*                    TriangulatedSurface            nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   A tin is a triangulated surface that uses the Delauny algorithm or a similar algorithm complemented with consideration of stoplines (stopLines), breaklines (breakLines), and maximum length of triangle sides (maxLength). controlPoint shall contain a set of the positions (three or more) used as posts for this TIN (corners of the triangles in the TIN). See ISO 19107:2003, 6.4.39 for details.
/// </BLOCKQUOTE></PRE>
/// Element "http://www.opengis.net/gml/3.2":Tin.
    gml__TinType*                        Tin                            nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
//  END OF SUBSTITUTIONS
//  END OF SUBSTITUTIONS
/// <PRE><BLOCKQUOTE>
///   OrientableSurface consists of a surface and an orientation. If the orientation is "+", then the OrientableSurface is identical to the baseSurface. If the orientation is "-", then the OrientableSurface is a reference to a gml:AbstractSurface with an up-normal that reverses the direction for this OrientableSurface, the sense of "the top of the surface".
/// </BLOCKQUOTE></PRE>
/// Element "http://www.opengis.net/gml/3.2":OrientableSurface.
    gml__OrientableSurfaceType*          OrientableSurface              nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   A shell is used to represent a single connected component of a solid boundary as specified in ISO 19107:2003, 6.3.8.
///   Every gml:surfaceMember references or contains one surface, i.e. any element which is substitutable for gml:AbstractSurface. In the context of a shell, the surfaces describe the boundary of the solid. If provided, the aggregationType attribute shall have the value "set".
/// </BLOCKQUOTE></PRE>
/// Element "http://www.opengis.net/gml/3.2":Shell.
    gml__ShellType*                      Shell                          nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   A Polygon is a special surface that is defined by a single surface patch (see D.3.6). The boundary of this patch is coplanar and the polygon uses planar interpolation in its interior. The elements exterior and interior describe the surface boundary of the polygon.
/// </BLOCKQUOTE></PRE>
/// Element "http://www.opengis.net/gml/3.2":Polygon.
    gml__PolygonType*                    Polygon                        nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_SurfacePropertyType     ;
//  END OF SUBSTITUTIONS
    }                                   *__SurfacePropertyType_sequence 0;
//  END OF SEQUENCE
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":AssociationAttributeGroup">.
/// Attribute "nilReason" of XSD type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         gml__remoteSchema              0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":OwnershipAttributeGroup">.
/// Attribute "owns" of XSD type xs:boolean.
   @bool                                 owns                           0 = false;	///< Default attribute value="false".
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.opengis.net/gml/3.2":SurfaceArrayPropertyType is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   gml:SurfaceArrayPropertyType is a container for an array of surfaces. The elements are always contained in the array property, referencing geometry elements or arrays of geometry elements via XLinks is not supported.
/// </BLOCKQUOTE></PRE>
/// class gml__SurfaceArrayPropertyType operations:
/// - gml__SurfaceArrayPropertyType* soap_new_gml__SurfaceArrayPropertyType(soap*) allocate and default initialize
/// - gml__SurfaceArrayPropertyType* soap_new_gml__SurfaceArrayPropertyType(soap*, int num) allocate array and default initialize values
/// - gml__SurfaceArrayPropertyType* soap_new_req_gml__SurfaceArrayPropertyType(soap*, ...) allocate, set required members
/// - gml__SurfaceArrayPropertyType* soap_new_set_gml__SurfaceArrayPropertyType(soap*, ...) allocate, set all public members
/// - gml__SurfaceArrayPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gml__SurfaceArrayPropertyType(soap*, gml__SurfaceArrayPropertyType*) deserialize from a stream
/// - int soap_write_gml__SurfaceArrayPropertyType(soap*, gml__SurfaceArrayPropertyType*) serialize to a stream
/// - gml__SurfaceArrayPropertyType* gml__SurfaceArrayPropertyType::soap_dup(soap*) returns deep copy of gml__SurfaceArrayPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__SurfaceArrayPropertyType::soap_del() deep deletes gml__SurfaceArrayPropertyType data members, use only after gml__SurfaceArrayPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__SurfaceArrayPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0" maxOccurs="unbounded">
    std::vector<
    class __gml__SurfaceArrayPropertyType_sequence
    {
/// <PRE><BLOCKQUOTE>
///   The AbstractSurface element is the abstract head of the substitution group for all (continuous) surface elements.
/// </BLOCKQUOTE></PRE>
/// Reference "http://www.opengis.net/gml/3.2":AbstractSurface to abstract element.
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractSurface"> with global elements <CompositeSurface> <Surface> <OrientableSurface> <Shell> <Polygon>
   $int                                  __unionAbstractSurface        ;	///< Union _gml__union_SurfaceArrayPropertyType selector: set to SOAP_UNION__gml__union_SurfaceArrayPropertyType_<fieldname>
/// Union for substitutionGroup gml__AbstractSurface.
    union _gml__union_SurfaceArrayPropertyType
    {
/// <PRE><BLOCKQUOTE>
///   A gml:CompositeSurface is represented by a set of orientable surfaces. It is geometry type with all the geometric properties of a (primitive) surface. Essentially, a composite surface is a collection of surfaces that join in pairs on common boundary curves and which, when considered as a whole, form a single surface.
///   surfaceMember references or contains inline one surface in the composite surface. The surfaces are contiguous.
/// </BLOCKQUOTE></PRE>
/// Element "http://www.opengis.net/gml/3.2":CompositeSurface.
    gml__CompositeSurfaceType*           CompositeSurface               nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   A Surface is a 2-dimensional primitive and is composed of one or more surface patches as specified in ISO 19107:2003, 6.3.17.1. The surface patches are connected to one another.
///   patches encapsulates the patches of the surface.
/// </BLOCKQUOTE></PRE>
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="Surface"> with global elements <PolyhedralSurface> <TriangulatedSurface>
/// <PRE><BLOCKQUOTE>
///   A Surface is a 2-dimensional primitive and is composed of one or more surface patches as specified in ISO 19107:2003, 6.3.17.1. The surface patches are connected to one another.
///   patches encapsulates the patches of the surface.
/// </BLOCKQUOTE></PRE>
/// Element "http://www.opengis.net/gml/3.2":Surface.
    gml__SurfaceType*                    Surface                        nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   A polyhedral surface is a surface composed of polygon patches connected along their common boundary curves. This differs from the surface type only in the restriction on the types of surface patches acceptable.
///   polygonPatches encapsulates the polygon patches of the polyhedral surface.
/// </BLOCKQUOTE></PRE>
/// Element "http://www.opengis.net/gml/3.2":PolyhedralSurface.
    gml__SurfaceType*                    PolyhedralSurface              nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   A triangulated surface is a polyhedral surface that is composed only of triangles. There is no restriction on how the triangulation is derived.
///   trianglePatches encapsulates the triangles of the triangulated surface.
/// </BLOCKQUOTE></PRE>
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="TriangulatedSurface"> with global elements <Tin>
/// <PRE><BLOCKQUOTE>
///   A triangulated surface is a polyhedral surface that is composed only of triangles. There is no restriction on how the triangulation is derived.
///   trianglePatches encapsulates the triangles of the triangulated surface.
/// </BLOCKQUOTE></PRE>
/// Element "http://www.opengis.net/gml/3.2":TriangulatedSurface.
    gml__SurfaceType*                    TriangulatedSurface            nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   A tin is a triangulated surface that uses the Delauny algorithm or a similar algorithm complemented with consideration of stoplines (stopLines), breaklines (breakLines), and maximum length of triangle sides (maxLength). controlPoint shall contain a set of the positions (three or more) used as posts for this TIN (corners of the triangles in the TIN). See ISO 19107:2003, 6.4.39 for details.
/// </BLOCKQUOTE></PRE>
/// Element "http://www.opengis.net/gml/3.2":Tin.
    gml__TinType*                        Tin                            nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
//  END OF SUBSTITUTIONS
//  END OF SUBSTITUTIONS
/// <PRE><BLOCKQUOTE>
///   OrientableSurface consists of a surface and an orientation. If the orientation is "+", then the OrientableSurface is identical to the baseSurface. If the orientation is "-", then the OrientableSurface is a reference to a gml:AbstractSurface with an up-normal that reverses the direction for this OrientableSurface, the sense of "the top of the surface".
/// </BLOCKQUOTE></PRE>
/// Element "http://www.opengis.net/gml/3.2":OrientableSurface.
    gml__OrientableSurfaceType*          OrientableSurface              nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   A shell is used to represent a single connected component of a solid boundary as specified in ISO 19107:2003, 6.3.8.
///   Every gml:surfaceMember references or contains one surface, i.e. any element which is substitutable for gml:AbstractSurface. In the context of a shell, the surfaces describe the boundary of the solid. If provided, the aggregationType attribute shall have the value "set".
/// </BLOCKQUOTE></PRE>
/// Element "http://www.opengis.net/gml/3.2":Shell.
    gml__ShellType*                      Shell                          nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   A Polygon is a special surface that is defined by a single surface patch (see D.3.6). The boundary of this patch is coplanar and the polygon uses planar interpolation in its interior. The elements exterior and interior describe the surface boundary of the polygon.
/// </BLOCKQUOTE></PRE>
/// Element "http://www.opengis.net/gml/3.2":Polygon.
    gml__PolygonType*                    Polygon                        nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_SurfaceArrayPropertyType;
//  END OF SUBSTITUTIONS
    }>                                   __SurfaceArrayPropertyType_sequence 0;
//  END OF SEQUENCE
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":OwnershipAttributeGroup">.
/// Attribute "owns" of XSD type xs:boolean.
   @bool                                 owns                           0 = false;	///< Default attribute value="false".
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.opengis.net/gml/3.2":AbstractRingPropertyType is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   A property with the content model of gml:AbstractRingPropertyType encapsulates a ring to represent the surface boundary property of a surface.
/// </BLOCKQUOTE></PRE>
/// class gml__AbstractRingPropertyType operations:
/// - gml__AbstractRingPropertyType* soap_new_gml__AbstractRingPropertyType(soap*) allocate and default initialize
/// - gml__AbstractRingPropertyType* soap_new_gml__AbstractRingPropertyType(soap*, int num) allocate array and default initialize values
/// - gml__AbstractRingPropertyType* soap_new_req_gml__AbstractRingPropertyType(soap*, ...) allocate, set required members
/// - gml__AbstractRingPropertyType* soap_new_set_gml__AbstractRingPropertyType(soap*, ...) allocate, set all public members
/// - gml__AbstractRingPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gml__AbstractRingPropertyType(soap*, gml__AbstractRingPropertyType*) deserialize from a stream
/// - int soap_write_gml__AbstractRingPropertyType(soap*, gml__AbstractRingPropertyType*) serialize to a stream
/// - gml__AbstractRingPropertyType* gml__AbstractRingPropertyType::soap_dup(soap*) returns deep copy of gml__AbstractRingPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__AbstractRingPropertyType::soap_del() deep deletes gml__AbstractRingPropertyType data members, use only after gml__AbstractRingPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__AbstractRingPropertyType : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   An abstraction of a ring to support surface boundaries of different complexity.
///   The AbstractRing element is the abstract head of the substituition group for all closed boundaries of a surface patch.
/// </BLOCKQUOTE></PRE>
/// Reference "http://www.opengis.net/gml/3.2":AbstractRing to abstract element.
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractRing"> with global elements <Ring> <LinearRing>
   $int                                  __unionAbstractRing           ;	///< Union _gml__union_AbstractRingPropertyType selector: set to SOAP_UNION__gml__union_AbstractRingPropertyType_<fieldname>
/// Union for substitutionGroup gml__AbstractRing.
    union _gml__union_AbstractRingPropertyType
    {
/// <PRE><BLOCKQUOTE>
///   A ring is used to represent a single connected component of a surface boundary as specified in ISO 19107:2003, 6.3.6.
///   Every gml:curveMember references or contains one curve, i.e. any element which is substitutable for gml:AbstractCurve. In the context of a ring, the curves describe the boundary of the surface. The sequence of curves shall be contiguous and connected in a cycle.
///   If provided, the aggregationType attribute shall have the value "sequence".
/// </BLOCKQUOTE></PRE>
/// Element "http://www.opengis.net/gml/3.2":Ring.
    gml__RingType*                       Ring                           nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   A LinearRing is defined by four or more coordinate tuples, with linear interpolation between them; the first and last coordinates shall be coincident. The number of direct positions in the list shall be at least four.
/// </BLOCKQUOTE></PRE>
/// Element "http://www.opengis.net/gml/3.2":LinearRing.
    gml__LinearRingType*                 LinearRing                     nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_AbstractRingPropertyType;
//  END OF SUBSTITUTIONS
};

/// @brief "http://www.opengis.net/gml/3.2":LinearRingPropertyType is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   A property with the content model of gml:LinearRingPropertyType encapsulates a linear ring to represent a component of a surface boundary.
/// </BLOCKQUOTE></PRE>
/// class gml__LinearRingPropertyType operations:
/// - gml__LinearRingPropertyType* soap_new_gml__LinearRingPropertyType(soap*) allocate and default initialize
/// - gml__LinearRingPropertyType* soap_new_gml__LinearRingPropertyType(soap*, int num) allocate array and default initialize values
/// - gml__LinearRingPropertyType* soap_new_req_gml__LinearRingPropertyType(soap*, ...) allocate, set required members
/// - gml__LinearRingPropertyType* soap_new_set_gml__LinearRingPropertyType(soap*, ...) allocate, set all public members
/// - gml__LinearRingPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gml__LinearRingPropertyType(soap*, gml__LinearRingPropertyType*) deserialize from a stream
/// - int soap_write_gml__LinearRingPropertyType(soap*, gml__LinearRingPropertyType*) serialize to a stream
/// - gml__LinearRingPropertyType* gml__LinearRingPropertyType::soap_dup(soap*) returns deep copy of gml__LinearRingPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__LinearRingPropertyType::soap_del() deep deletes gml__LinearRingPropertyType data members, use only after gml__LinearRingPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__LinearRingPropertyType : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   A LinearRing is defined by four or more coordinate tuples, with linear interpolation between them; the first and last coordinates shall be coincident. The number of direct positions in the list shall be at least four.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":LinearRing.
    gml__LinearRingType*                 LinearRing                     1;	///< Required element.
};

/// @brief "http://www.opengis.net/gml/3.2":GeometryPropertyType is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   A geometric property may either be any geometry element encapsulated in an element of this type or an XLink reference to a remote geometry element (where remote includes geometry elements located elsewhere in the same or another document). Note that either the reference or the contained element shall be given, but not both or none.
///   If a feature has a property that takes a geometry element as its value, this is called a geometry property. A generic type for such a geometry property is GeometryPropertyType.
/// </BLOCKQUOTE></PRE>
/// class gml__GeometryPropertyType operations:
/// - gml__GeometryPropertyType* soap_new_gml__GeometryPropertyType(soap*) allocate and default initialize
/// - gml__GeometryPropertyType* soap_new_gml__GeometryPropertyType(soap*, int num) allocate array and default initialize values
/// - gml__GeometryPropertyType* soap_new_req_gml__GeometryPropertyType(soap*, ...) allocate, set required members
/// - gml__GeometryPropertyType* soap_new_set_gml__GeometryPropertyType(soap*, ...) allocate, set all public members
/// - gml__GeometryPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gml__GeometryPropertyType(soap*, gml__GeometryPropertyType*) deserialize from a stream
/// - int soap_write_gml__GeometryPropertyType(soap*, gml__GeometryPropertyType*) serialize to a stream
/// - gml__GeometryPropertyType* gml__GeometryPropertyType::soap_dup(soap*) returns deep copy of gml__GeometryPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__GeometryPropertyType::soap_del() deep deletes gml__GeometryPropertyType data members, use only after gml__GeometryPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__GeometryPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gml__GeometryPropertyType_sequence
    {
/// <PRE><BLOCKQUOTE>
///   The AbstractGeometry element is the abstract head of the substitution group for all geometry elements of GML. This includes pre-defined and user-defined geometry elements. Any geometry element shall be a direct or indirect extension/restriction of AbstractGeometryType and shall be directly or indirectly in the substitution group of AbstractGeometry.
/// </BLOCKQUOTE></PRE>
/// Reference "http://www.opengis.net/gml/3.2":AbstractGeometry to abstract element.
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractGeometry"> with global elements <GeometricComplex>
   $int                                  __unionAbstractGeometry       ;	///< Union _gml__union_GeometryPropertyType selector: set to SOAP_UNION__gml__union_GeometryPropertyType_<fieldname>
/// Union for substitutionGroup gml__AbstractGeometry.
    union _gml__union_GeometryPropertyType
    {
/// Element "http://www.opengis.net/gml/3.2":GeometricComplex.
    gml__GeometricComplexType*           GeometricComplex               nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_GeometryPropertyType    ;
//  END OF SUBSTITUTIONS
    }                                   *__GeometryPropertyType_sequence 0;
//  END OF SEQUENCE
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":AssociationAttributeGroup">.
/// Attribute "nilReason" of XSD type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         gml__remoteSchema              0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":OwnershipAttributeGroup">.
/// Attribute "owns" of XSD type xs:boolean.
   @bool                                 owns                           0 = false;	///< Default attribute value="false".
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.opengis.net/gml/3.2":GeometryArrayPropertyType is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   If a feature has a property which takes an array of geometry elements as its value, this is called a geometry array property. A generic type for such a geometry property is GeometryArrayPropertyType. The elements are always contained inline in the array property, referencing geometry elements or arrays of geometry elements via XLinks is not supported.
/// </BLOCKQUOTE></PRE>
/// class gml__GeometryArrayPropertyType operations:
/// - gml__GeometryArrayPropertyType* soap_new_gml__GeometryArrayPropertyType(soap*) allocate and default initialize
/// - gml__GeometryArrayPropertyType* soap_new_gml__GeometryArrayPropertyType(soap*, int num) allocate array and default initialize values
/// - gml__GeometryArrayPropertyType* soap_new_req_gml__GeometryArrayPropertyType(soap*, ...) allocate, set required members
/// - gml__GeometryArrayPropertyType* soap_new_set_gml__GeometryArrayPropertyType(soap*, ...) allocate, set all public members
/// - gml__GeometryArrayPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gml__GeometryArrayPropertyType(soap*, gml__GeometryArrayPropertyType*) deserialize from a stream
/// - int soap_write_gml__GeometryArrayPropertyType(soap*, gml__GeometryArrayPropertyType*) serialize to a stream
/// - gml__GeometryArrayPropertyType* gml__GeometryArrayPropertyType::soap_dup(soap*) returns deep copy of gml__GeometryArrayPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__GeometryArrayPropertyType::soap_del() deep deletes gml__GeometryArrayPropertyType data members, use only after gml__GeometryArrayPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__GeometryArrayPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0" maxOccurs="unbounded">
    std::vector<
    class __gml__GeometryArrayPropertyType_sequence
    {
/// <PRE><BLOCKQUOTE>
///   The AbstractGeometry element is the abstract head of the substitution group for all geometry elements of GML. This includes pre-defined and user-defined geometry elements. Any geometry element shall be a direct or indirect extension/restriction of AbstractGeometryType and shall be directly or indirectly in the substitution group of AbstractGeometry.
/// </BLOCKQUOTE></PRE>
/// Reference "http://www.opengis.net/gml/3.2":AbstractGeometry to abstract element.
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractGeometry"> with global elements <GeometricComplex>
   $int                                  __unionAbstractGeometry       ;	///< Union _gml__union_GeometryArrayPropertyType selector: set to SOAP_UNION__gml__union_GeometryArrayPropertyType_<fieldname>
/// Union for substitutionGroup gml__AbstractGeometry.
    union _gml__union_GeometryArrayPropertyType
    {
/// Element "http://www.opengis.net/gml/3.2":GeometricComplex.
    gml__GeometricComplexType*           GeometricComplex               nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_GeometryArrayPropertyType;
//  END OF SUBSTITUTIONS
    }>                                   __GeometryArrayPropertyType_sequence 0;
//  END OF SEQUENCE
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":OwnershipAttributeGroup">.
/// Attribute "owns" of XSD type xs:boolean.
   @bool                                 owns                           0 = false;	///< Default attribute value="false".
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.opengis.net/gml/3.2":EnvelopeType is a complexType.
///
/// class gml__EnvelopeType operations:
/// - gml__EnvelopeType* soap_new_gml__EnvelopeType(soap*) allocate and default initialize
/// - gml__EnvelopeType* soap_new_gml__EnvelopeType(soap*, int num) allocate array and default initialize values
/// - gml__EnvelopeType* soap_new_req_gml__EnvelopeType(soap*, ...) allocate, set required members
/// - gml__EnvelopeType* soap_new_set_gml__EnvelopeType(soap*, ...) allocate, set all public members
/// - gml__EnvelopeType::soap_default(soap*) default initialize members
/// - int soap_read_gml__EnvelopeType(soap*, gml__EnvelopeType*) deserialize from a stream
/// - int soap_write_gml__EnvelopeType(soap*, gml__EnvelopeType*) serialize to a stream
/// - gml__EnvelopeType* gml__EnvelopeType::soap_dup(soap*) returns deep copy of gml__EnvelopeType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__EnvelopeType::soap_del() deep deletes gml__EnvelopeType data members, use only after gml__EnvelopeType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__EnvelopeType : public xsd__anyType
{ public:
//  BEGIN CHOICE <xs:choice>
/// @note <xs:choice> with embedded <xs:sequence> or <xs:group> prevents the use of a union for <xs:choice>. Instead of being members of a union, the following members are declared optional. Only one member should be non-NULL by choice.
//  BEGIN SEQUENCE <xs:sequence>
/// Element "lowerCorner" of XSD type "http://www.opengis.net/gml/3.2":DirectPositionType.
    gml__DirectPositionType*             lowerCorner                    nullptr;	///< Required nillable (xsi:nil when NULL) element.
/// Element "upperCorner" of XSD type "http://www.opengis.net/gml/3.2":DirectPositionType.
    gml__DirectPositionType*             upperCorner                    nullptr;	///< Required nillable (xsi:nil when NULL) element.
//  END OF SEQUENCE
/// Vector of gml__DirectPositionType* element refs of length 2..2.
    std::vector<gml__DirectPositionType*> pos                           :2;
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":coordinates.
    gml__CoordinatesType*                coordinates                    nullptr;	///< Required nillable (xsi:nil when NULL) element.
//  END OF CHOICE
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":SRSReferenceGroup">.
/// Attribute "srsName" of XSD type xs:anyURI.
   @xsd__anyURI*                         srsName                        0;	///< Optional attribute.
/// Attribute "srsDimension" of XSD type xs:positiveInteger.
   @xsd__positiveInteger*                srsDimension                   0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":SRSInformationGroup">.
/// Attribute "axisLabels" of XSD type "http://www.opengis.net/gml/3.2":NCNameList.
   @gml__NCNameList*                     axisLabels                     0;	///< Optional attribute.
/// Attribute "uomLabels" of XSD type "http://www.opengis.net/gml/3.2":NCNameList.
   @gml__NCNameList*                     uomLabels                      0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.opengis.net/gml/3.2":GeometricPrimitivePropertyType is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   A property that has a geometric primitive as its value domain may either be an appropriate geometry element encapsulated in an element of this type or an XLink reference to a remote geometry element (where remote includes geometry elements located elsewhere in the same document). Either the reference or the contained element shall be given, but neither both nor none.
/// </BLOCKQUOTE></PRE>
/// class gml__GeometricPrimitivePropertyType operations:
/// - gml__GeometricPrimitivePropertyType* soap_new_gml__GeometricPrimitivePropertyType(soap*) allocate and default initialize
/// - gml__GeometricPrimitivePropertyType* soap_new_gml__GeometricPrimitivePropertyType(soap*, int num) allocate array and default initialize values
/// - gml__GeometricPrimitivePropertyType* soap_new_req_gml__GeometricPrimitivePropertyType(soap*, ...) allocate, set required members
/// - gml__GeometricPrimitivePropertyType* soap_new_set_gml__GeometricPrimitivePropertyType(soap*, ...) allocate, set all public members
/// - gml__GeometricPrimitivePropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gml__GeometricPrimitivePropertyType(soap*, gml__GeometricPrimitivePropertyType*) deserialize from a stream
/// - int soap_write_gml__GeometricPrimitivePropertyType(soap*, gml__GeometricPrimitivePropertyType*) serialize to a stream
/// - gml__GeometricPrimitivePropertyType* gml__GeometricPrimitivePropertyType::soap_dup(soap*) returns deep copy of gml__GeometricPrimitivePropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__GeometricPrimitivePropertyType::soap_del() deep deletes gml__GeometricPrimitivePropertyType data members, use only after gml__GeometricPrimitivePropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__GeometricPrimitivePropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gml__GeometricPrimitivePropertyType_sequence
    {
/// <PRE><BLOCKQUOTE>
///   The AbstractGeometricPrimitive element is the abstract head of the substitution group for all (pre- and user-defined) geometric primitives.
/// </BLOCKQUOTE></PRE>
/// Reference "http://www.opengis.net/gml/3.2":AbstractGeometricPrimitive to abstract element.
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractGeometricPrimitive"> with global elements <Point>
   $int                                  __unionAbstractGeometricPrimitive;	///< Union _gml__union_GeometricPrimitivePropertyType selector: set to SOAP_UNION__gml__union_GeometricPrimitivePropertyType_<fieldname>
/// Union for substitutionGroup gml__AbstractGeometricPrimitive.
    union _gml__union_GeometricPrimitivePropertyType
    {
/// <PRE><BLOCKQUOTE>
///   A Point is defined by a single coordinate tuple. The direct position of a point is specified by the pos element which is of type DirectPositionType.
/// </BLOCKQUOTE></PRE>
/// Element "http://www.opengis.net/gml/3.2":Point.
    gml__PointType*                      Point                          nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_GeometricPrimitivePropertyType;
//  END OF SUBSTITUTIONS
    }                                   *__GeometricPrimitivePropertyType_sequence 0;
//  END OF SEQUENCE
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":OwnershipAttributeGroup">.
/// Attribute "owns" of XSD type xs:boolean.
   @bool                                 owns                           0 = false;	///< Default attribute value="false".
//  END OF ATTRIBUTEGROUP
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":AssociationAttributeGroup">.
/// Attribute "nilReason" of XSD type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         gml__remoteSchema              0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.opengis.net/gml/3.2":PointPropertyType is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   A property that has a point as its value domain may either be an appropriate geometry element encapsulated in an element of this type or an XLink reference to a remote geometry element (where remote includes geometry elements located elsewhere in the same document). Either the reference or the contained element shall be given, but neither both nor none.
/// </BLOCKQUOTE></PRE>
/// class gml__PointPropertyType operations:
/// - gml__PointPropertyType* soap_new_gml__PointPropertyType(soap*) allocate and default initialize
/// - gml__PointPropertyType* soap_new_gml__PointPropertyType(soap*, int num) allocate array and default initialize values
/// - gml__PointPropertyType* soap_new_req_gml__PointPropertyType(soap*, ...) allocate, set required members
/// - gml__PointPropertyType* soap_new_set_gml__PointPropertyType(soap*, ...) allocate, set all public members
/// - gml__PointPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gml__PointPropertyType(soap*, gml__PointPropertyType*) deserialize from a stream
/// - int soap_write_gml__PointPropertyType(soap*, gml__PointPropertyType*) serialize to a stream
/// - gml__PointPropertyType* gml__PointPropertyType::soap_dup(soap*) returns deep copy of gml__PointPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__PointPropertyType::soap_del() deep deletes gml__PointPropertyType data members, use only after gml__PointPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__PointPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gml__PointPropertyType_sequence
    {
/// <PRE><BLOCKQUOTE>
///   A Point is defined by a single coordinate tuple. The direct position of a point is specified by the pos element which is of type DirectPositionType.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":Point.
    gml__PointType*                      Point                          1;	///< Required element.
    }                                   *__PointPropertyType_sequence   0;
//  END OF SEQUENCE
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":AssociationAttributeGroup">.
/// Attribute "nilReason" of XSD type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         gml__remoteSchema              0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":OwnershipAttributeGroup">.
/// Attribute "owns" of XSD type xs:boolean.
   @bool                                 owns                           0 = false;	///< Default attribute value="false".
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.opengis.net/gml/3.2":PointArrayPropertyType is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   gml:PointArrayPropertyType is a container for an array of points. The elements are always contained inline in the array property, referencing geometry elements or arrays of geometry elements via XLinks is not supported.
/// </BLOCKQUOTE></PRE>
/// class gml__PointArrayPropertyType operations:
/// - gml__PointArrayPropertyType* soap_new_gml__PointArrayPropertyType(soap*) allocate and default initialize
/// - gml__PointArrayPropertyType* soap_new_gml__PointArrayPropertyType(soap*, int num) allocate array and default initialize values
/// - gml__PointArrayPropertyType* soap_new_req_gml__PointArrayPropertyType(soap*, ...) allocate, set required members
/// - gml__PointArrayPropertyType* soap_new_set_gml__PointArrayPropertyType(soap*, ...) allocate, set all public members
/// - gml__PointArrayPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gml__PointArrayPropertyType(soap*, gml__PointArrayPropertyType*) deserialize from a stream
/// - int soap_write_gml__PointArrayPropertyType(soap*, gml__PointArrayPropertyType*) serialize to a stream
/// - gml__PointArrayPropertyType* gml__PointArrayPropertyType::soap_dup(soap*) returns deep copy of gml__PointArrayPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__PointArrayPropertyType::soap_del() deep deletes gml__PointArrayPropertyType data members, use only after gml__PointArrayPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__PointArrayPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0" maxOccurs="unbounded">
    std::vector<
    class __gml__PointArrayPropertyType_sequence
    {
/// <PRE><BLOCKQUOTE>
///   A Point is defined by a single coordinate tuple. The direct position of a point is specified by the pos element which is of type DirectPositionType.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":Point.
    gml__PointType*                      Point                          1;	///< Required element.
    }>                                   __PointArrayPropertyType_sequence 0;
//  END OF SEQUENCE
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":OwnershipAttributeGroup">.
/// Attribute "owns" of XSD type xs:boolean.
   @bool                                 owns                           0 = false;	///< Default attribute value="false".
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.opengis.net/gml/3.2":CurvePropertyType is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   A property that has a curve as its value domain may either be an appropriate geometry element encapsulated in an element of this type or an XLink reference to a remote geometry element (where remote includes geometry elements located elsewhere in the same document). Either the reference or the contained element shall be given, but neither both nor none.
/// </BLOCKQUOTE></PRE>
/// class gml__CurvePropertyType operations:
/// - gml__CurvePropertyType* soap_new_gml__CurvePropertyType(soap*) allocate and default initialize
/// - gml__CurvePropertyType* soap_new_gml__CurvePropertyType(soap*, int num) allocate array and default initialize values
/// - gml__CurvePropertyType* soap_new_req_gml__CurvePropertyType(soap*, ...) allocate, set required members
/// - gml__CurvePropertyType* soap_new_set_gml__CurvePropertyType(soap*, ...) allocate, set all public members
/// - gml__CurvePropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gml__CurvePropertyType(soap*, gml__CurvePropertyType*) deserialize from a stream
/// - int soap_write_gml__CurvePropertyType(soap*, gml__CurvePropertyType*) serialize to a stream
/// - gml__CurvePropertyType* gml__CurvePropertyType::soap_dup(soap*) returns deep copy of gml__CurvePropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__CurvePropertyType::soap_del() deep deletes gml__CurvePropertyType data members, use only after gml__CurvePropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__CurvePropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gml__CurvePropertyType_sequence
    {
/// <PRE><BLOCKQUOTE>
///   The AbstractCurve element is the abstract head of the substitution group for all (continuous) curve elements.
/// </BLOCKQUOTE></PRE>
/// Reference "http://www.opengis.net/gml/3.2":AbstractCurve to abstract element.
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractCurve"> with global elements <CompositeCurve> <Curve> <OrientableCurve> <LineString>
   $int                                  __unionAbstractCurve          ;	///< Union _gml__union_CurvePropertyType selector: set to SOAP_UNION__gml__union_CurvePropertyType_<fieldname>
/// Union for substitutionGroup gml__AbstractCurve.
    union _gml__union_CurvePropertyType
    {
/// <PRE><BLOCKQUOTE>
///   A gml:CompositeCurve is represented by a sequence of (orientable) curves such that each curve in the sequence terminates at the start point of the subsequent curve in the list. curveMember references or contains inline one curve in the composite curve. The curves are contiguous, the collection of curves is ordered. Therefore, if provided, the aggregationType attribute shall have the value "sequence".
/// </BLOCKQUOTE></PRE>
/// Element "http://www.opengis.net/gml/3.2":CompositeCurve.
    gml__CompositeCurveType*             CompositeCurve                 nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   A curve is a 1-dimensional primitive. Curves are continuous, connected, and have a measurable length in terms of the coordinate system. A curve is composed of one or more curve segments. Each curve segment within a curve may be defined using a different interpolation method. The curve segments are connected to one another, with the end point of each segment except the last being the start point of the next segment in the segment list.
///   The orientation of the curve is positive.
///   The element segments encapsulates the segments of the curve.
/// </BLOCKQUOTE></PRE>
/// Element "http://www.opengis.net/gml/3.2":Curve.
    gml__CurveType*                      Curve                          nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   OrientableCurve consists of a curve and an orientation. If the orientation is "+", then the OrientableCurve is identical to the baseCurve. If the orientation is "-", then the OrientableCurve is related to another AbstractCurve with a parameterization that reverses the sense of the curve traversal.
/// </BLOCKQUOTE></PRE>
/// Element "http://www.opengis.net/gml/3.2":OrientableCurve.
    gml__OrientableCurveType*            OrientableCurve                nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   A LineString is a special curve that consists of a single segment with linear interpolation. It is defined by two or more coordinate tuples, with linear interpolation between them. The number of direct positions in the list shall be at least two.
/// </BLOCKQUOTE></PRE>
/// Element "http://www.opengis.net/gml/3.2":LineString.
    gml__LineStringType*                 LineString                     nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_CurvePropertyType       ;
//  END OF SUBSTITUTIONS
    }                                   *__CurvePropertyType_sequence   0;
//  END OF SEQUENCE
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":AssociationAttributeGroup">.
/// Attribute "nilReason" of XSD type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         gml__remoteSchema              0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":OwnershipAttributeGroup">.
/// Attribute "owns" of XSD type xs:boolean.
   @bool                                 owns                           0 = false;	///< Default attribute value="false".
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.opengis.net/gml/3.2":CurveArrayPropertyType is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   A container for an array of curves. The elements are always contained in the array property, referencing geometry elements or arrays of geometry elements via XLinks is not supported.
/// </BLOCKQUOTE></PRE>
/// class gml__CurveArrayPropertyType operations:
/// - gml__CurveArrayPropertyType* soap_new_gml__CurveArrayPropertyType(soap*) allocate and default initialize
/// - gml__CurveArrayPropertyType* soap_new_gml__CurveArrayPropertyType(soap*, int num) allocate array and default initialize values
/// - gml__CurveArrayPropertyType* soap_new_req_gml__CurveArrayPropertyType(soap*, ...) allocate, set required members
/// - gml__CurveArrayPropertyType* soap_new_set_gml__CurveArrayPropertyType(soap*, ...) allocate, set all public members
/// - gml__CurveArrayPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gml__CurveArrayPropertyType(soap*, gml__CurveArrayPropertyType*) deserialize from a stream
/// - int soap_write_gml__CurveArrayPropertyType(soap*, gml__CurveArrayPropertyType*) serialize to a stream
/// - gml__CurveArrayPropertyType* gml__CurveArrayPropertyType::soap_dup(soap*) returns deep copy of gml__CurveArrayPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__CurveArrayPropertyType::soap_del() deep deletes gml__CurveArrayPropertyType data members, use only after gml__CurveArrayPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__CurveArrayPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0" maxOccurs="unbounded">
    std::vector<
    class __gml__CurveArrayPropertyType_sequence
    {
/// <PRE><BLOCKQUOTE>
///   The AbstractCurve element is the abstract head of the substitution group for all (continuous) curve elements.
/// </BLOCKQUOTE></PRE>
/// Reference "http://www.opengis.net/gml/3.2":AbstractCurve to abstract element.
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractCurve"> with global elements <CompositeCurve> <Curve> <OrientableCurve> <LineString>
   $int                                  __unionAbstractCurve          ;	///< Union _gml__union_CurveArrayPropertyType selector: set to SOAP_UNION__gml__union_CurveArrayPropertyType_<fieldname>
/// Union for substitutionGroup gml__AbstractCurve.
    union _gml__union_CurveArrayPropertyType
    {
/// <PRE><BLOCKQUOTE>
///   A gml:CompositeCurve is represented by a sequence of (orientable) curves such that each curve in the sequence terminates at the start point of the subsequent curve in the list. curveMember references or contains inline one curve in the composite curve. The curves are contiguous, the collection of curves is ordered. Therefore, if provided, the aggregationType attribute shall have the value "sequence".
/// </BLOCKQUOTE></PRE>
/// Element "http://www.opengis.net/gml/3.2":CompositeCurve.
    gml__CompositeCurveType*             CompositeCurve                 nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   A curve is a 1-dimensional primitive. Curves are continuous, connected, and have a measurable length in terms of the coordinate system. A curve is composed of one or more curve segments. Each curve segment within a curve may be defined using a different interpolation method. The curve segments are connected to one another, with the end point of each segment except the last being the start point of the next segment in the segment list.
///   The orientation of the curve is positive.
///   The element segments encapsulates the segments of the curve.
/// </BLOCKQUOTE></PRE>
/// Element "http://www.opengis.net/gml/3.2":Curve.
    gml__CurveType*                      Curve                          nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   OrientableCurve consists of a curve and an orientation. If the orientation is "+", then the OrientableCurve is identical to the baseCurve. If the orientation is "-", then the OrientableCurve is related to another AbstractCurve with a parameterization that reverses the sense of the curve traversal.
/// </BLOCKQUOTE></PRE>
/// Element "http://www.opengis.net/gml/3.2":OrientableCurve.
    gml__OrientableCurveType*            OrientableCurve                nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   A LineString is a special curve that consists of a single segment with linear interpolation. It is defined by two or more coordinate tuples, with linear interpolation between them. The number of direct positions in the list shall be at least two.
/// </BLOCKQUOTE></PRE>
/// Element "http://www.opengis.net/gml/3.2":LineString.
    gml__LineStringType*                 LineString                     nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_CurveArrayPropertyType  ;
//  END OF SUBSTITUTIONS
    }>                                   __CurveArrayPropertyType_sequence 0;
//  END OF SEQUENCE
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":OwnershipAttributeGroup">.
/// Attribute "owns" of XSD type xs:boolean.
   @bool                                 owns                           0 = false;	///< Default attribute value="false".
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.opengis.net/gml/3.2":UnitOfMeasureType is a complexType.
///
/// class gml__UnitOfMeasureType operations:
/// - gml__UnitOfMeasureType* soap_new_gml__UnitOfMeasureType(soap*) allocate and default initialize
/// - gml__UnitOfMeasureType* soap_new_gml__UnitOfMeasureType(soap*, int num) allocate array and default initialize values
/// - gml__UnitOfMeasureType* soap_new_req_gml__UnitOfMeasureType(soap*, ...) allocate, set required members
/// - gml__UnitOfMeasureType* soap_new_set_gml__UnitOfMeasureType(soap*, ...) allocate, set all public members
/// - gml__UnitOfMeasureType::soap_default(soap*) default initialize members
/// - int soap_read_gml__UnitOfMeasureType(soap*, gml__UnitOfMeasureType*) deserialize from a stream
/// - int soap_write_gml__UnitOfMeasureType(soap*, gml__UnitOfMeasureType*) serialize to a stream
/// - gml__UnitOfMeasureType* gml__UnitOfMeasureType::soap_dup(soap*) returns deep copy of gml__UnitOfMeasureType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__UnitOfMeasureType::soap_del() deep deletes gml__UnitOfMeasureType data members, use only after gml__UnitOfMeasureType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__UnitOfMeasureType : public xsd__anyType
{ public:
/// Attribute "uom" of XSD type "http://www.opengis.net/gml/3.2":UomIdentifier.
   @gml__UomIdentifier                   uom                            1;	///< Required attribute.
};

/// @brief "http://www.opengis.net/gml/3.2":FormulaType is a complexType.
///
/// class gml__FormulaType operations:
/// - gml__FormulaType* soap_new_gml__FormulaType(soap*) allocate and default initialize
/// - gml__FormulaType* soap_new_gml__FormulaType(soap*, int num) allocate array and default initialize values
/// - gml__FormulaType* soap_new_req_gml__FormulaType(soap*, ...) allocate, set required members
/// - gml__FormulaType* soap_new_set_gml__FormulaType(soap*, ...) allocate, set all public members
/// - gml__FormulaType::soap_default(soap*) default initialize members
/// - int soap_read_gml__FormulaType(soap*, gml__FormulaType*) deserialize from a stream
/// - int soap_write_gml__FormulaType(soap*, gml__FormulaType*) serialize to a stream
/// - gml__FormulaType* gml__FormulaType::soap_dup(soap*) returns deep copy of gml__FormulaType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__FormulaType::soap_del() deep deletes gml__FormulaType data members, use only after gml__FormulaType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__FormulaType : public xsd__anyType
{ public:
/// Element "a" of XSD type xs:double.
    double*                              a                              0;	///< Optional element.
/// Element "b" of XSD type xs:double.
    double                               b                              1;	///< Required element.
/// Element "c" of XSD type xs:double.
    double                               c                              1;	///< Required element.
/// Element "d" of XSD type xs:double.
    double*                              d                              0;	///< Optional element.
};

/// @brief "http://www.opengis.net/gml/3.2":AbstractGMLType is an abstract complexType.
///
/// class gml__AbstractGMLType operations:
/// - gml__AbstractGMLType* soap_new_gml__AbstractGMLType(soap*) allocate and default initialize
/// - gml__AbstractGMLType* soap_new_gml__AbstractGMLType(soap*, int num) allocate array and default initialize values
/// - gml__AbstractGMLType* soap_new_req_gml__AbstractGMLType(soap*, ...) allocate, set required members
/// - gml__AbstractGMLType* soap_new_set_gml__AbstractGMLType(soap*, ...) allocate, set all public members
/// - gml__AbstractGMLType::soap_default(soap*) default initialize members
/// - int soap_read_gml__AbstractGMLType(soap*, gml__AbstractGMLType*) deserialize from a stream
/// - int soap_write_gml__AbstractGMLType(soap*, gml__AbstractGMLType*) serialize to a stream
/// - gml__AbstractGMLType* gml__AbstractGMLType::soap_dup(soap*) returns deep copy of gml__AbstractGMLType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__AbstractGMLType::soap_del() deep deletes gml__AbstractGMLType data members, use only after gml__AbstractGMLType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__AbstractGMLType : public xsd__anyType
{ public:
//  BEGIN GROUP <xs:group name="StandardObjectProperties">
/// Vector of gml__MetaDataPropertyType* element refs of length 0..unbounded.
    std::vector<gml__MetaDataPropertyType*> metaDataProperty               0;
/// <PRE><BLOCKQUOTE>
///   The value of this property is a text description of the object. gml:description uses gml:StringOrRefType as its content model, so it may contain a simple text string content, or carry a reference to an external description. The use of gml:description to reference an external description has been deprecated and replaced by the gml:descriptionReference property.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":description.
    gml__StringOrRefType*                description                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The value of this property is a remote text description of the object. The xlink:href attribute of the gml:descriptionReference property references the external description.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":descriptionReference.
    gml__ReferenceType*                  descriptionReference           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Often, a special identifier is assigned to an object by the maintaining authority with the intention that it is used in references to the object For such cases, the codeSpace shall be provided. That identifier is usually unique either globally or within an application domain. gml:identifier is a pre-defined property for such identifiers.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":identifier.
    gml__CodeWithAuthorityType*          identifier                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The gml:name property provides a label or identifier for the object, commonly a descriptive name. An object may have several names, typically assigned by different authorities. gml:name uses the gml:CodeType content model. The authority for a name is indicated by the value of its (optional) codeSpace attribute. The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace. In common usage there will be one name per authority, so a processing application may select the name from its preferred codeSpace.
/// </BLOCKQUOTE></PRE>
/// Vector of gml__CodeType* element refs of length 0..unbounded.
    std::vector<gml__CodeType*         > name                           0;
//  END OF GROUP
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":id.
/// <PRE><BLOCKQUOTE>
///   The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.
/// </BLOCKQUOTE></PRE>
   @xsd__ID*                             gml__id                        0;	///< Optional attribute.
};

/// @brief "http://www.opengis.net/gml/3.2":AssociationRoleType is a complexType.
///
/// class gml__AssociationRoleType operations:
/// - gml__AssociationRoleType* soap_new_gml__AssociationRoleType(soap*) allocate and default initialize
/// - gml__AssociationRoleType* soap_new_gml__AssociationRoleType(soap*, int num) allocate array and default initialize values
/// - gml__AssociationRoleType* soap_new_req_gml__AssociationRoleType(soap*, ...) allocate, set required members
/// - gml__AssociationRoleType* soap_new_set_gml__AssociationRoleType(soap*, ...) allocate, set all public members
/// - gml__AssociationRoleType::soap_default(soap*) default initialize members
/// - int soap_read_gml__AssociationRoleType(soap*, gml__AssociationRoleType*) deserialize from a stream
/// - int soap_write_gml__AssociationRoleType(soap*, gml__AssociationRoleType*) serialize to a stream
/// - gml__AssociationRoleType* gml__AssociationRoleType::soap_dup(soap*) returns deep copy of gml__AssociationRoleType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__AssociationRoleType::soap_del() deep deletes gml__AssociationRoleType data members, use only after gml__AssociationRoleType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__AssociationRoleType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gml__AssociationRoleType_sequence
    {
/// @todo <any namespace="##any">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
    }                                   *__AssociationRoleType_sequence 0;
//  END OF SEQUENCE
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":OwnershipAttributeGroup">.
/// Attribute "owns" of XSD type xs:boolean.
   @bool                                 owns                           0 = false;	///< Default attribute value="false".
//  END OF ATTRIBUTEGROUP
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":AssociationAttributeGroup">.
/// Attribute "nilReason" of XSD type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         gml__remoteSchema              0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.opengis.net/gml/3.2":ReferenceType is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   gml:ReferenceType is intended to be used in application schemas directly, if a property element shall use a "by-reference only" encoding.
/// </BLOCKQUOTE></PRE>
/// class gml__ReferenceType operations:
/// - gml__ReferenceType* soap_new_gml__ReferenceType(soap*) allocate and default initialize
/// - gml__ReferenceType* soap_new_gml__ReferenceType(soap*, int num) allocate array and default initialize values
/// - gml__ReferenceType* soap_new_req_gml__ReferenceType(soap*, ...) allocate, set required members
/// - gml__ReferenceType* soap_new_set_gml__ReferenceType(soap*, ...) allocate, set all public members
/// - gml__ReferenceType::soap_default(soap*) default initialize members
/// - int soap_read_gml__ReferenceType(soap*, gml__ReferenceType*) deserialize from a stream
/// - int soap_write_gml__ReferenceType(soap*, gml__ReferenceType*) serialize to a stream
/// - gml__ReferenceType* gml__ReferenceType::soap_dup(soap*) returns deep copy of gml__ReferenceType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__ReferenceType::soap_del() deep deletes gml__ReferenceType data members, use only after gml__ReferenceType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__ReferenceType : public xsd__anyType
{ public:
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":OwnershipAttributeGroup">.
/// Attribute "owns" of XSD type xs:boolean.
   @bool                                 owns                           0 = false;	///< Default attribute value="false".
//  END OF ATTRIBUTEGROUP
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":AssociationAttributeGroup">.
/// Attribute "nilReason" of XSD type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         gml__remoteSchema              0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.opengis.net/gml/3.2":InlinePropertyType is a complexType.
///
/// class gml__InlinePropertyType operations:
/// - gml__InlinePropertyType* soap_new_gml__InlinePropertyType(soap*) allocate and default initialize
/// - gml__InlinePropertyType* soap_new_gml__InlinePropertyType(soap*, int num) allocate array and default initialize values
/// - gml__InlinePropertyType* soap_new_req_gml__InlinePropertyType(soap*, ...) allocate, set required members
/// - gml__InlinePropertyType* soap_new_set_gml__InlinePropertyType(soap*, ...) allocate, set all public members
/// - gml__InlinePropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gml__InlinePropertyType(soap*, gml__InlinePropertyType*) deserialize from a stream
/// - int soap_write_gml__InlinePropertyType(soap*, gml__InlinePropertyType*) serialize to a stream
/// - gml__InlinePropertyType* gml__InlinePropertyType::soap_dup(soap*) returns deep copy of gml__InlinePropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__InlinePropertyType::soap_del() deep deletes gml__InlinePropertyType data members, use only after gml__InlinePropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__InlinePropertyType : public xsd__anyType
{ public:
/// @todo <any namespace="##any">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":OwnershipAttributeGroup">.
/// Attribute "owns" of XSD type xs:boolean.
   @bool                                 owns                           0 = false;	///< Default attribute value="false".
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.opengis.net/gml/3.2":AbstractMemberType is an abstract complexType.
///
/// <PRE><BLOCKQUOTE>
///   To create a collection of GML Objects that are not all features, a property type shall be derived by extension from gml:AbstractMemberType.
///   This abstract property type is intended to be used only in object types where software shall be able to identify that an instance of such an object type is to be interpreted as a collection of objects.
///   By default, this abstract property type does not imply any ownership of the objects in the collection. The owns attribute of gml:OwnershipAttributeGroup may be used on a property element instance to assert ownership of an object in the collection. A collection shall not own an object already owned by another object.
/// </BLOCKQUOTE></PRE>
/// class gml__AbstractMemberType operations:
/// - gml__AbstractMemberType* soap_new_gml__AbstractMemberType(soap*) allocate and default initialize
/// - gml__AbstractMemberType* soap_new_gml__AbstractMemberType(soap*, int num) allocate array and default initialize values
/// - gml__AbstractMemberType* soap_new_req_gml__AbstractMemberType(soap*, ...) allocate, set required members
/// - gml__AbstractMemberType* soap_new_set_gml__AbstractMemberType(soap*, ...) allocate, set all public members
/// - gml__AbstractMemberType::soap_default(soap*) default initialize members
/// - int soap_read_gml__AbstractMemberType(soap*, gml__AbstractMemberType*) deserialize from a stream
/// - int soap_write_gml__AbstractMemberType(soap*, gml__AbstractMemberType*) serialize to a stream
/// - gml__AbstractMemberType* gml__AbstractMemberType::soap_dup(soap*) returns deep copy of gml__AbstractMemberType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__AbstractMemberType::soap_del() deep deletes gml__AbstractMemberType data members, use only after gml__AbstractMemberType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__AbstractMemberType : public xsd__anyType
{ public:
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":OwnershipAttributeGroup">.
/// Attribute "owns" of XSD type xs:boolean.
   @bool                                 owns                           0 = false;	///< Default attribute value="false".
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.opengis.net/gml/3.2":AbstractMetadataPropertyType is an abstract complexType.
///
/// <PRE><BLOCKQUOTE>
///   To associate metadata described by any XML Schema with a GML object, a property element shall be defined whose content model is derived by extension from gml:AbstractMetadataPropertyType. The value of such a property shall be metadata. The content model of such a property type, i.e. the metadata application schema shall be specified by the GML Application Schema.
///   By default, this abstract property type does not imply any ownership of the metadata. The owns attribute of gml:OwnershipAttributeGroup may be used on a metadata property element instance to assert ownership of the metadata. If metadata following the conceptual model of ISO 19115 is to be encoded in a GML document, the corresponding Implementation Specification specified in ISO/TS 19139 shall be used to encode the metadata information.
/// </BLOCKQUOTE></PRE>
/// class gml__AbstractMetadataPropertyType operations:
/// - gml__AbstractMetadataPropertyType* soap_new_gml__AbstractMetadataPropertyType(soap*) allocate and default initialize
/// - gml__AbstractMetadataPropertyType* soap_new_gml__AbstractMetadataPropertyType(soap*, int num) allocate array and default initialize values
/// - gml__AbstractMetadataPropertyType* soap_new_req_gml__AbstractMetadataPropertyType(soap*, ...) allocate, set required members
/// - gml__AbstractMetadataPropertyType* soap_new_set_gml__AbstractMetadataPropertyType(soap*, ...) allocate, set all public members
/// - gml__AbstractMetadataPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gml__AbstractMetadataPropertyType(soap*, gml__AbstractMetadataPropertyType*) deserialize from a stream
/// - int soap_write_gml__AbstractMetadataPropertyType(soap*, gml__AbstractMetadataPropertyType*) serialize to a stream
/// - gml__AbstractMetadataPropertyType* gml__AbstractMetadataPropertyType::soap_dup(soap*) returns deep copy of gml__AbstractMetadataPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__AbstractMetadataPropertyType::soap_del() deep deletes gml__AbstractMetadataPropertyType data members, use only after gml__AbstractMetadataPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__AbstractMetadataPropertyType : public xsd__anyType
{ public:
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":OwnershipAttributeGroup">.
/// Attribute "owns" of XSD type xs:boolean.
   @bool                                 owns                           0 = false;	///< Default attribute value="false".
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.opengis.net/gml/3.2":DomainSetType is a complexType.
///
/// class gml__DomainSetType operations:
/// - gml__DomainSetType* soap_new_gml__DomainSetType(soap*) allocate and default initialize
/// - gml__DomainSetType* soap_new_gml__DomainSetType(soap*, int num) allocate array and default initialize values
/// - gml__DomainSetType* soap_new_req_gml__DomainSetType(soap*, ...) allocate, set required members
/// - gml__DomainSetType* soap_new_set_gml__DomainSetType(soap*, ...) allocate, set all public members
/// - gml__DomainSetType::soap_default(soap*) default initialize members
/// - int soap_read_gml__DomainSetType(soap*, gml__DomainSetType*) deserialize from a stream
/// - int soap_write_gml__DomainSetType(soap*, gml__DomainSetType*) serialize to a stream
/// - gml__DomainSetType* gml__DomainSetType::soap_dup(soap*) returns deep copy of gml__DomainSetType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__DomainSetType::soap_del() deep deletes gml__DomainSetType data members, use only after gml__DomainSetType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__DomainSetType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gml__DomainSetType_sequence
    {
//  BEGIN CHOICE <xs:choice>
   $int                                  __union_DomainSetType         ;	///< Union _gml__union_DomainSetType selector: set to SOAP_UNION__gml__union_DomainSetType_<fieldname>
    union _gml__union_DomainSetType
    {
/// <PRE><BLOCKQUOTE>
///   The AbstractGeometry element is the abstract head of the substitution group for all geometry elements of GML. This includes pre-defined and user-defined geometry elements. Any geometry element shall be a direct or indirect extension/restriction of AbstractGeometryType and shall be directly or indirectly in the substitution group of AbstractGeometry.
/// </BLOCKQUOTE></PRE>
/// Reference "http://www.opengis.net/gml/3.2":AbstractGeometry to abstract element.
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractGeometry"> with global elements <GeometricComplex>
/// Element "http://www.opengis.net/gml/3.2":GeometricComplex.
    gml__GeometricComplexType*           GeometricComplex               nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
//  END OF SUBSTITUTIONS
/// <PRE><BLOCKQUOTE>
///   gml:AbstractTimeObject acts as the head of a substitution group for all temporal primitives and complexes.
/// </BLOCKQUOTE></PRE>
/// Reference "http://www.opengis.net/gml/3.2":AbstractTimeObject to abstract element.
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractTimeObject"> with global elements
//  END OF SUBSTITUTIONS
    }                                    union_DomainSetType           ;
//  END OF CHOICE
    }                                   *__DomainSetType_sequence       0;
//  END OF SEQUENCE
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":OwnershipAttributeGroup">.
/// Attribute "owns" of XSD type xs:boolean.
   @bool                                 owns                           0 = false;	///< Default attribute value="false".
//  END OF ATTRIBUTEGROUP
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":AssociationAttributeGroup">.
/// Attribute "nilReason" of XSD type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         gml__remoteSchema              0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.opengis.net/gml/3.2":RangeSetType is a complexType.
///
/// class gml__RangeSetType operations:
/// - gml__RangeSetType* soap_new_gml__RangeSetType(soap*) allocate and default initialize
/// - gml__RangeSetType* soap_new_gml__RangeSetType(soap*, int num) allocate array and default initialize values
/// - gml__RangeSetType* soap_new_req_gml__RangeSetType(soap*, ...) allocate, set required members
/// - gml__RangeSetType* soap_new_set_gml__RangeSetType(soap*, ...) allocate, set all public members
/// - gml__RangeSetType::soap_default(soap*) default initialize members
/// - int soap_read_gml__RangeSetType(soap*, gml__RangeSetType*) deserialize from a stream
/// - int soap_write_gml__RangeSetType(soap*, gml__RangeSetType*) serialize to a stream
/// - gml__RangeSetType* gml__RangeSetType::soap_dup(soap*) returns deep copy of gml__RangeSetType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__RangeSetType::soap_del() deep deletes gml__RangeSetType data members, use only after gml__RangeSetType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__RangeSetType : public xsd__anyType
{ public:
//  BEGIN CHOICE <xs:choice>
   $int                                  __union_RangeSetType          ;	///< Union _gml__union_RangeSetType selector: set to SOAP_UNION__gml__union_RangeSetType_<fieldname>
/// Union for choice in gml__RangeSetType.
    union _gml__union_RangeSetType
    {
/// <PRE><BLOCKQUOTE>
///   A Value Array is used for homogeneous arrays of primitive and aggregate values. The member values may be scalars, composites, arrays or lists.
///   ValueArray has the same content model as CompositeValue, but the member values shall be homogeneous. The element declaration contains a Schematron constraint which expresses this restriction precisely. Since the members are homogeneous, the gml:referenceSystem (uom, codeSpace) may be specified on the gml:ValueArray itself and inherited by all the members if desired.
/// </BLOCKQUOTE></PRE>
/// Vector of gml__ValueArrayType* element refs of length 1..unbounded.
    std::vector<gml__ValueArrayType*  > *ValueArray                     1;
/// <PRE><BLOCKQUOTE>
///   gml:AbstractScalarValueList is an abstract element which acts as the head of a substitution group which contains gml:BooleanList, gml:CategoryList, gml:CountList and gml:QuantityList, and (transitively) the elements in their substitution groups.
/// </BLOCKQUOTE></PRE>
/// Reference "http://www.opengis.net/gml/3.2":AbstractScalarValueList to abstract element.
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractScalarValueList" maxOccurs="unbounded"> with global elements <BooleanList> <CategoryList> <CountList> <QuantityList>
    struct ___gml__union_RangeSetType_
    {
   $int                                  __sizeAbstractScalarValueList  0;
    class __gml__union_RangeSetType_
    {
   $int                                  __unionAbstractScalarValueList;	///< Union _gml__union_RangeSetType_ selector: set to SOAP_UNION__gml__union_RangeSetType__<fieldname>
/// Union for substitutionGroup gml__AbstractScalarValueList.
    union _gml__union_RangeSetType_
    {
/// Element "http://www.opengis.net/gml/3.2":BooleanList.
    gml__booleanOrNilReasonList*         BooleanList                    nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.opengis.net/gml/3.2":CategoryList.
    gml__CodeOrNilReasonListType*        CategoryList                   nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.opengis.net/gml/3.2":CountList.
    gml__integerOrNilReasonList*         CountList                      nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.opengis.net/gml/3.2":QuantityList.
    gml__MeasureOrNilReasonListType*     QuantityList                   nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_RangeSetType_           ;
    }                                   *__union_RangeSetType_         ;
    }                                    __union_RangeSetType_         ;
//  END OF SUBSTITUTIONS
/// <PRE><BLOCKQUOTE>
///   gml:DataBlock describes the Range as a block of text encoded values similar to a Common Separated Value (CSV) representation.
///   The range set parameterization is described by the property gml:rangeParameters.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":DataBlock.
    gml__DataBlockType*                  DataBlock                      nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   for efficiency reasons, GML also provides a means of encoding the range set in an arbitrary external encoding, such as a binary file. This encoding may be "well-known" but this is not required. This mode uses the gml:File element.
///   The values of the coverage (attribute values in the range set) are transmitted in a external file that is referenced from the XML structure described by gml:FileType. The external file is referenced by the gml:fileReference property that is an anyURI (the gml:fileName property has been deprecated). This means that the external file may be located remotely from the referencing GML instance. The gml:compression property points to a definition of a compression algorithm through an anyURI. This may be a retrievable, computable definition or simply a reference to an unambiguous name for the compression method.
///   The gml:mimeType property points to a definition of the file mime type.
///   The gml:fileStructure property is defined by a codelist. Note further that all values shall be enclosed in a single file. Multi-file structures for values are not supported in GML.
///   The semantics of the range set is described as above using the gml:rangeParameters property.
///   Note that if any compression algorithm is applied, the structure above applies only to the pre-compression or post-decompression structure of the file.
///   Note that the fields within a record match the gml:valueComponents of the gml:CompositeValue in document order.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":File.
    gml__FileType*                       File                           nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_RangeSetType            ;
//  END OF CHOICE
};

/// @brief "http://www.opengis.net/gml/3.2":DataBlockType is a complexType.
///
/// class gml__DataBlockType operations:
/// - gml__DataBlockType* soap_new_gml__DataBlockType(soap*) allocate and default initialize
/// - gml__DataBlockType* soap_new_gml__DataBlockType(soap*, int num) allocate array and default initialize values
/// - gml__DataBlockType* soap_new_req_gml__DataBlockType(soap*, ...) allocate, set required members
/// - gml__DataBlockType* soap_new_set_gml__DataBlockType(soap*, ...) allocate, set all public members
/// - gml__DataBlockType::soap_default(soap*) default initialize members
/// - int soap_read_gml__DataBlockType(soap*, gml__DataBlockType*) deserialize from a stream
/// - int soap_write_gml__DataBlockType(soap*, gml__DataBlockType*) serialize to a stream
/// - gml__DataBlockType* gml__DataBlockType::soap_dup(soap*) returns deep copy of gml__DataBlockType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__DataBlockType::soap_del() deep deletes gml__DataBlockType data members, use only after gml__DataBlockType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__DataBlockType : public xsd__anyType
{ public:
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":rangeParameters.
    gml__AssociationRoleType*            rangeParameters                1;	///< Required element.
//  BEGIN CHOICE <xs:choice>
   $int                                  __union_DataBlockType         ;	///< Union _gml__union_DataBlockType selector: set to SOAP_UNION__gml__union_DataBlockType_<fieldname>
    union _gml__union_DataBlockType
    {
/// <PRE><BLOCKQUOTE>
///   gml:CoordinatesType consists of a list of coordinate tuples, with each coordinate tuple separated by the ts or tuple separator (whitespace), and each coordinate in the tuple by the cs or coordinate separator (comma).
///   The gml:tupleList encoding is effectively "band-interleaved".
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":tupleList.
    gml__CoordinatesType*                tupleList                      nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   gml:doubleOrNilReasonList consists of a list of gml:doubleOrNilReason values, each separated by a whitespace. The gml:doubleOrNilReason values are grouped into tuples where the dimension of each tuple in the list is equal to the number of range parameters.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":doubleOrNilReasonTupleList.
    gml__doubleOrNilReasonList*          doubleOrNilReasonTupleList     nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_DataBlockType           ;
//  END OF CHOICE
};

/// @brief "http://www.opengis.net/gml/3.2":FileType is a complexType.
///
/// class gml__FileType operations:
/// - gml__FileType* soap_new_gml__FileType(soap*) allocate and default initialize
/// - gml__FileType* soap_new_gml__FileType(soap*, int num) allocate array and default initialize values
/// - gml__FileType* soap_new_req_gml__FileType(soap*, ...) allocate, set required members
/// - gml__FileType* soap_new_set_gml__FileType(soap*, ...) allocate, set all public members
/// - gml__FileType::soap_default(soap*) default initialize members
/// - int soap_read_gml__FileType(soap*, gml__FileType*) deserialize from a stream
/// - int soap_write_gml__FileType(soap*, gml__FileType*) serialize to a stream
/// - gml__FileType* gml__FileType::soap_dup(soap*) returns deep copy of gml__FileType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__FileType::soap_del() deep deletes gml__FileType data members, use only after gml__FileType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__FileType : public xsd__anyType
{ public:
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":rangeParameters.
    gml__AssociationRoleType*            rangeParameters                1;	///< Required element.
//  BEGIN CHOICE <xs:choice>
   $int                                  __union_FileType              ;	///< Union _gml__union_FileType selector: set to SOAP_UNION__gml__union_FileType_<fieldname>
    union _gml__union_FileType
    {
/// Element "fileName" of XSD type xs:anyURI.
    xsd__anyURI*                         fileName                       nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "fileReference" of XSD type xs:anyURI.
    xsd__anyURI*                         fileReference                  nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_FileType                ;
//  END OF CHOICE
/// Element "fileStructure" of XSD type "http://www.opengis.net/gml/3.2":CodeType.
    gml__CodeType*                       fileStructure                  1;	///< Required element.
/// Element "mimeType" of XSD type xs:anyURI.
    xsd__anyURI*                         mimeType                       0;	///< Optional element.
/// Element "compression" of XSD type xs:anyURI.
    xsd__anyURI*                         compression                    0;	///< Optional element.
};

/// @brief "http://www.opengis.net/gml/3.2":CoverageFunctionType is a complexType.
///
/// class gml__CoverageFunctionType operations:
/// - gml__CoverageFunctionType* soap_new_gml__CoverageFunctionType(soap*) allocate and default initialize
/// - gml__CoverageFunctionType* soap_new_gml__CoverageFunctionType(soap*, int num) allocate array and default initialize values
/// - gml__CoverageFunctionType* soap_new_req_gml__CoverageFunctionType(soap*, ...) allocate, set required members
/// - gml__CoverageFunctionType* soap_new_set_gml__CoverageFunctionType(soap*, ...) allocate, set all public members
/// - gml__CoverageFunctionType::soap_default(soap*) default initialize members
/// - int soap_read_gml__CoverageFunctionType(soap*, gml__CoverageFunctionType*) deserialize from a stream
/// - int soap_write_gml__CoverageFunctionType(soap*, gml__CoverageFunctionType*) serialize to a stream
/// - gml__CoverageFunctionType* gml__CoverageFunctionType::soap_dup(soap*) returns deep copy of gml__CoverageFunctionType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__CoverageFunctionType::soap_del() deep deletes gml__CoverageFunctionType data members, use only after gml__CoverageFunctionType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__CoverageFunctionType : public xsd__anyType
{ public:
//  BEGIN CHOICE <xs:choice>
   $int                                  __union_CoverageFunctionType  ;	///< Union _gml__union_CoverageFunctionType selector: set to SOAP_UNION__gml__union_CoverageFunctionType_<fieldname>
/// Union for choice in gml__CoverageFunctionType.
    union _gml__union_CoverageFunctionType
    {
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":MappingRule.
    gml__StringOrRefType*                MappingRule                    nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   gml:CoverageMappingRule provides a formal or informal description of the coverage function.
///   The mapping rule may be defined as an in-line string (gml:ruleDefinition) or via a remote reference through xlink:href (gml:ruleReference). If no rule name is specified, the default is 'Linear' with respect to members of the domain in document order.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":CoverageMappingRule.
    gml__MappingRuleType*                CoverageMappingRule            nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   gml:GridFunction provides an explicit mapping rule for grid geometries, i.e. the domain shall be a geometry of type grid. It describes the mapping of grid posts (discrete point grid coverage) or grid cells (discrete surface coverage) to the values in the range set.
///   The gml:startPoint is the index position of a point in the grid that is mapped to the first point in the range set (this is also the index position of the first grid post). If the gml:startPoint property is omitted the gml:startPoint is assumed to be equal to the value of gml:low in the gml:Grid geometry. Subsequent points in the mapping are determined by the value of the gml:sequenceRule.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":GridFunction.
    gml__GridFunctionType*               GridFunction                   nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_CoverageFunctionType    ;
//  END OF CHOICE
};

/// @brief "http://www.opengis.net/gml/3.2":MappingRuleType is a complexType.
///
/// class gml__MappingRuleType operations:
/// - gml__MappingRuleType* soap_new_gml__MappingRuleType(soap*) allocate and default initialize
/// - gml__MappingRuleType* soap_new_gml__MappingRuleType(soap*, int num) allocate array and default initialize values
/// - gml__MappingRuleType* soap_new_req_gml__MappingRuleType(soap*, ...) allocate, set required members
/// - gml__MappingRuleType* soap_new_set_gml__MappingRuleType(soap*, ...) allocate, set all public members
/// - gml__MappingRuleType::soap_default(soap*) default initialize members
/// - int soap_read_gml__MappingRuleType(soap*, gml__MappingRuleType*) deserialize from a stream
/// - int soap_write_gml__MappingRuleType(soap*, gml__MappingRuleType*) serialize to a stream
/// - gml__MappingRuleType* gml__MappingRuleType::soap_dup(soap*) returns deep copy of gml__MappingRuleType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__MappingRuleType::soap_del() deep deletes gml__MappingRuleType data members, use only after gml__MappingRuleType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__MappingRuleType : public xsd__anyType
{ public:
//  BEGIN CHOICE <xs:choice>
   $int                                  __union_MappingRuleType       ;	///< Union _gml__union_MappingRuleType selector: set to SOAP_UNION__gml__union_MappingRuleType_<fieldname>
/// Union for choice in gml__MappingRuleType.
    union _gml__union_MappingRuleType
    {
/// Element "ruleDefinition" of XSD type xs:string.
    std::string*                         ruleDefinition                 nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "ruleReference" of XSD type "http://www.opengis.net/gml/3.2":ReferenceType.
    gml__ReferenceType*                  ruleReference                  nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_MappingRuleType         ;
//  END OF CHOICE
};

/// @brief "http://www.opengis.net/gml/3.2":GridFunctionType is a complexType.
///
/// class gml__GridFunctionType operations:
/// - gml__GridFunctionType* soap_new_gml__GridFunctionType(soap*) allocate and default initialize
/// - gml__GridFunctionType* soap_new_gml__GridFunctionType(soap*, int num) allocate array and default initialize values
/// - gml__GridFunctionType* soap_new_req_gml__GridFunctionType(soap*, ...) allocate, set required members
/// - gml__GridFunctionType* soap_new_set_gml__GridFunctionType(soap*, ...) allocate, set all public members
/// - gml__GridFunctionType::soap_default(soap*) default initialize members
/// - int soap_read_gml__GridFunctionType(soap*, gml__GridFunctionType*) deserialize from a stream
/// - int soap_write_gml__GridFunctionType(soap*, gml__GridFunctionType*) serialize to a stream
/// - gml__GridFunctionType* gml__GridFunctionType::soap_dup(soap*) returns deep copy of gml__GridFunctionType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__GridFunctionType::soap_del() deep deletes gml__GridFunctionType data members, use only after gml__GridFunctionType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__GridFunctionType : public xsd__anyType
{ public:
/// Element "sequenceRule" of XSD type "http://www.opengis.net/gml/3.2":SequenceRuleType.
    gml__SequenceRuleType*               sequenceRule                   0;	///< Optional element.
/// Element "startPoint" of XSD type "http://www.opengis.net/gml/3.2":integerList.
    gml__integerList*                    startPoint                     0;	///< Optional element.
};

/// @brief "http://www.opengis.net/gml/3.2":FeaturePropertyType is a complexType.
///
/// class gml__FeaturePropertyType operations:
/// - gml__FeaturePropertyType* soap_new_gml__FeaturePropertyType(soap*) allocate and default initialize
/// - gml__FeaturePropertyType* soap_new_gml__FeaturePropertyType(soap*, int num) allocate array and default initialize values
/// - gml__FeaturePropertyType* soap_new_req_gml__FeaturePropertyType(soap*, ...) allocate, set required members
/// - gml__FeaturePropertyType* soap_new_set_gml__FeaturePropertyType(soap*, ...) allocate, set all public members
/// - gml__FeaturePropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gml__FeaturePropertyType(soap*, gml__FeaturePropertyType*) deserialize from a stream
/// - int soap_write_gml__FeaturePropertyType(soap*, gml__FeaturePropertyType*) serialize to a stream
/// - gml__FeaturePropertyType* gml__FeaturePropertyType::soap_dup(soap*) returns deep copy of gml__FeaturePropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__FeaturePropertyType::soap_del() deep deletes gml__FeaturePropertyType data members, use only after gml__FeaturePropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__FeaturePropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gml__FeaturePropertyType_sequence
    {
/// <PRE><BLOCKQUOTE>
///   This abstract element serves as the head of a substitution group which may contain any elements whose content model is derived from gml:AbstractFeatureType. This may be used as a variable in the construction of content models. gml:AbstractFeature may be thought of as "anything that is a GML feature" and may be used to define variables or templates in which the value of a GML property is "any feature". This occurs in particular in a GML feature collection where the feature member properties contain one or multiple copies of gml:AbstractFeature respectively.
/// </BLOCKQUOTE></PRE>
/// Reference "http://www.opengis.net/gml/3.2":AbstractFeature to abstract element.
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractFeature"> with global elements <DynamicFeature> <Observation> <FeatureCollection> <SpatialDataSet> <SpatialDataSet> <ZoningElement> <ZoningElement> <OfficialDocumentation> <OfficialDocumentation> <SupplementaryRegulation> <SupplementaryRegulation> <SpatialPlan> <SpatialPlan>
   $int                                  __unionAbstractFeature        ;	///< Union _gml__union_FeaturePropertyType selector: set to SOAP_UNION__gml__union_FeaturePropertyType_<fieldname>
/// Union for substitutionGroup gml__AbstractFeature.
    union _gml__union_FeaturePropertyType
    {
/// <PRE><BLOCKQUOTE>
///   States are captured by time-stamped instances of a feature. The content model extends the standard gml:AbstractFeatureType with the gml:dynamicProperties model group.
///   Each time-stamped instance represents a 'snapshot' of a feature. The dynamic feature classes will normally be extended to suit particular applications. A dynamic feature bears either a time stamp or a history.
/// </BLOCKQUOTE></PRE>
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="DynamicFeature"> with global elements <DynamicFeatureCollection>
/// <PRE><BLOCKQUOTE>
///   States are captured by time-stamped instances of a feature. The content model extends the standard gml:AbstractFeatureType with the gml:dynamicProperties model group.
///   Each time-stamped instance represents a 'snapshot' of a feature. The dynamic feature classes will normally be extended to suit particular applications. A dynamic feature bears either a time stamp or a history.
/// </BLOCKQUOTE></PRE>
/// Element "http://www.opengis.net/gml/3.2":DynamicFeature.
    gml__DynamicFeatureType*             DynamicFeature                 nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   A gml:DynamicFeatureCollection is a feature collection that has a gml:validTime property (i.e. is a snapshot of the feature collection) or which has a gml:history property that contains one or more gml:AbstractTimeSlices each of which contain values of the time varying properties of the feature collection. Note that the gml:DynamicFeatureCollection may be one of the following:
///   1. A feature collection which consists of static feature members (members do not change in time) but which has properties of the collection object as a whole that do change in time . 2. A feature collection which consists of dynamic feature members (the members are gml:DynamicFeatures) but which also has properties of the collection as a whole that vary in time.
/// </BLOCKQUOTE></PRE>
/// Element "http://www.opengis.net/gml/3.2":DynamicFeatureCollection.
    gml__DynamicFeatureCollectionType*   DynamicFeatureCollection       nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
//  END OF SUBSTITUTIONS
/// <PRE><BLOCKQUOTE>
///   The content model is a straightforward extension of gml:AbstractFeatureType; it automatically has the gml:identifier, gml:description, gml:descriptionReference, gml:name, and gml:boundedBy properties. The gml:validTime element describes the time of the observation. Note that this may be a time instant or a time period.
///   The gml:using property contains or references a description of a sensor, instrument or procedure used for the observation.
///   The gml:target property contains or references the specimen, region or station which is the object of the observation. This property is particularly useful for remote observations, such as photographs, where a generic location property might apply to the location of the camera or the location of the field of view, and thus may be ambiguous. The gml:subject element is provided as a convenient synonym for gml:target. This is the term commonly used in phtotography. The gml:resultOf property indicates the result of the observation. The value may be inline, or a reference to a value elsewhere.
/// </BLOCKQUOTE></PRE>
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="Observation"> with global elements <DirectedObservation>
/// <PRE><BLOCKQUOTE>
///   The content model is a straightforward extension of gml:AbstractFeatureType; it automatically has the gml:identifier, gml:description, gml:descriptionReference, gml:name, and gml:boundedBy properties. The gml:validTime element describes the time of the observation. Note that this may be a time instant or a time period.
///   The gml:using property contains or references a description of a sensor, instrument or procedure used for the observation.
///   The gml:target property contains or references the specimen, region or station which is the object of the observation. This property is particularly useful for remote observations, such as photographs, where a generic location property might apply to the location of the camera or the location of the field of view, and thus may be ambiguous. The gml:subject element is provided as a convenient synonym for gml:target. This is the term commonly used in phtotography. The gml:resultOf property indicates the result of the observation. The value may be inline, or a reference to a value elsewhere.
/// </BLOCKQUOTE></PRE>
/// Element "http://www.opengis.net/gml/3.2":Observation.
    gml__ObservationType*                Observation                    nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   A gml:DirectedObservation is the same as an observation except that it adds an additional gml:direction property. This is the direction in which the observation was acquired. Clearly this applies only to certain types of observations such as visual observations by people, or observations obtained from terrestrial cameras.
/// </BLOCKQUOTE></PRE>
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="DirectedObservation"> with global elements <DirectedObservationAtDistance>
/// <PRE><BLOCKQUOTE>
///   A gml:DirectedObservation is the same as an observation except that it adds an additional gml:direction property. This is the direction in which the observation was acquired. Clearly this applies only to certain types of observations such as visual observations by people, or observations obtained from terrestrial cameras.
/// </BLOCKQUOTE></PRE>
/// Element "http://www.opengis.net/gml/3.2":DirectedObservation.
    gml__DirectedObservationType*        DirectedObservation            nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   gml:DirectedObservationAtDistance adds an additional distance property. This is the distance from the observer to the subject of the observation. Clearly this applies only to certain types of observations such as visual observations by people, or observations obtained from terrestrial cameras.
/// </BLOCKQUOTE></PRE>
/// Element "http://www.opengis.net/gml/3.2":DirectedObservationAtDistance.
    gml__DirectedObservationAtDistanceType*  DirectedObservationAtDistance  nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
//  END OF SUBSTITUTIONS
//  END OF SUBSTITUTIONS
/// Element "http://www.opengis.net/gml/3.2":FeatureCollection.
    gml__FeatureCollectionType*          FeatureCollection              nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   -- Definition --
///   Identifiable collection of spatial data.
///   -- Description --
///   WARNING This element has been deprecated in v3.3.1 of this schema (in accordance with D2.7 v3.3 Recommendation 11 stating that wfs:FeatureCollection should be used instead of base:SpatialDataSet).
///   NOTE The type SpatialDataSet is offered as a pre-defined type for spatial data sets. The scope of this type is packaging pre-defined data sets for the non-direct access download service. It may be reused in thematic application schemas, but if it does not fit an application-schema-specific data set object should be modelled. This type may have the same name and definition like this type, but may have a different set of properties.
///   This type specifies three properties: an external object identifier, a container for metadata (may be void), and an association to zero or more spatial objects.
/// </BLOCKQUOTE></PRE>
/// Element "http://inspire.ec.europa.eu/schemas/base/3.3":SpatialDataSet.
    base__SpatialDataSetType*            base__SpatialDataSet           nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   -- Definition --
///   Identifiable collection of spatial data.
///   -- Description --
///   WARNING This element has been deprecated in v3.3.1 of this schema (in accordance with D2.7 v3.3 Recommendation 11 stating that wfs:FeatureCollection should be used instead of base:SpatialDataSet).
///   NOTE The type SpatialDataSet is offered as a pre-defined type for spatial data sets. The scope of this type is packaging pre-defined data sets for the non-direct access download service. It may be reused in thematic application schemas, but if it does not fit an application-schema-specific data set object should be modelled. This type may have the same name and definition like this type, but may have a different set of properties.
///   This type specifies three properties: an external object identifier, a container for metadata (may be void), and an association to zero or more spatial objects.
/// </BLOCKQUOTE></PRE>
/// Element "http://inspire.ec.europa.eu/schemas/base/3.3":SpatialDataSet.
   //jld  base__SpatialDataSetType*            base__SpatialDataSet           nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   -- Name --
///   zoning element
///   -- Definition --
///   A spatial object which is homogeneous regarding the permitted uses of land based on zoning which separate one set of land uses from another.
///   -- Description --
///   Zoning elements refer to the regulation of the kinds of activities which will be acceptable on particular lots (such as open space, residential, agricultural, commercial or industrial). The intensity of use at which those activities can be performed (from low-density housing such as single family homes to high-density such as high-rise apartment buildings), the height of buildings, the amount of space that structures may occupy, the proportions of the types of space on a lot, such as how much landscaped space, impervious surface, traffic lanes, and parking may be provided.
/// </BLOCKQUOTE></PRE>
/// Element "http://inspire.ec.europa.eu/schemas/plu/3.0":ZoningElement.
    plu__ZoningElementType*              plu__ZoningElement             nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   -- Name --
///   zoning element
///   -- Definition --
///   A spatial object which is homogeneous regarding the permitted uses of land based on zoning which separate one set of land uses from another.
///   -- Description --
///   Zoning elements refer to the regulation of the kinds of activities which will be acceptable on particular lots (such as open space, residential, agricultural, commercial or industrial). The intensity of use at which those activities can be performed (from low-density housing such as single family homes to high-density such as high-rise apartment buildings), the height of buildings, the amount of space that structures may occupy, the proportions of the types of space on a lot, such as how much landscaped space, impervious surface, traffic lanes, and parking may be provided.
/// </BLOCKQUOTE></PRE>
/// Element "http://inspire.ec.europa.eu/schemas/plu/3.0":ZoningElement.
    //jld plu__ZoningElementType*              plu__ZoningElement             nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   -- Name --
///   official documentation
///   -- Definition --
///   The official documentation that composes the spatial plan; it may be composed of, the applicable legislation, the regulations, cartographic elements, descriptive elements that may be associated with the complete spatial plan, a zoning element or a supplementary regulation . In some Member States the actual textual regulation will be part of the data set (and can be put in the regulationText attribute), in other Member States the text will not be part of the data set and will be referenced via a reference to a document or a legal act.
///   At least one of the three voidable values shall be provided.
///   -- Description --
///   NOTE: The LegislationCitation is the value type of the attribute regulation reference. An example of a regulation reference would be: http://www2.vlaanderen.be /ruimtelijk/grup/00350/00362_00001/data/ 212_00362_00001_d_0BVR.pdf.
/// </BLOCKQUOTE></PRE>
/// Element "http://inspire.ec.europa.eu/schemas/plu/3.0":OfficialDocumentation.
    plu__OfficialDocumentationType*      plu__OfficialDocumentation     nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   -- Name --
///   official documentation
///   -- Definition --
///   The official documentation that composes the spatial plan; it may be composed of, the applicable legislation, the regulations, cartographic elements, descriptive elements that may be associated with the complete spatial plan, a zoning element or a supplementary regulation . In some Member States the actual textual regulation will be part of the data set (and can be put in the regulationText attribute), in other Member States the text will not be part of the data set and will be referenced via a reference to a document or a legal act.
///   At least one of the three voidable values shall be provided.
///   -- Description --
///   NOTE: The LegislationCitation is the value type of the attribute regulation reference. An example of a regulation reference would be: http://www2.vlaanderen.be /ruimtelijk/grup/00350/00362_00001/data/ 212_00362_00001_d_0BVR.pdf.
/// </BLOCKQUOTE></PRE>
/// Element "http://inspire.ec.europa.eu/schemas/plu/3.0":OfficialDocumentation.
    //jld plu__OfficialDocumentationType*      plu__OfficialDocumentation     nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   -- Name --
///   supplementary regulation
///   -- Definition --
///   A spatial object (point, line or polygon) of a spatial plan that provides supplementary information and/or limitation of the use of land/water necessary for spatial planning reasons or to formalise external rules defined in legal text.
///   -- Description --
///   NOTE the supplementary regulations affects all land use that overlap with the geometry
///   EXAMPLE an air field generates restriction in its surroundings regarding aircraft landing, radar and telecommunication devices. It is the buffer around these artefacts that generates the supplementary regulation on the Land Use.
/// </BLOCKQUOTE></PRE>
/// Element "http://inspire.ec.europa.eu/schemas/plu/3.0":SupplementaryRegulation.
    plu__SupplementaryRegulationType*    plu__SupplementaryRegulation   nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   -- Name --
///   supplementary regulation
///   -- Definition --
///   A spatial object (point, line or polygon) of a spatial plan that provides supplementary information and/or limitation of the use of land/water necessary for spatial planning reasons or to formalise external rules defined in legal text.
///   -- Description --
///   NOTE the supplementary regulations affects all land use that overlap with the geometry
///   EXAMPLE an air field generates restriction in its surroundings regarding aircraft landing, radar and telecommunication devices. It is the buffer around these artefacts that generates the supplementary regulation on the Land Use.
/// </BLOCKQUOTE></PRE>
/// Element "http://inspire.ec.europa.eu/schemas/plu/3.0":SupplementaryRegulation.
    //jld plu__SupplementaryRegulationType*    plu__SupplementaryRegulation   nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   -- Name --
///   spatial plan
///   -- Definition --
///   A set of documents that indicates a strategic direction for the development of a given geographic area, states the policies, priorities, programmes and land allocations that will implement the strategic direction and influences the distribution of people and activities in spaces of various scales. Spatial plans may be developed for urban planning, regional planning, environmental planning, landscape planning, national spatial plans, or spatial planning at the Union level.
/// </BLOCKQUOTE></PRE>
/// Element "http://inspire.ec.europa.eu/schemas/plu/3.0":SpatialPlan.
    plu__SpatialPlanType*                plu__SpatialPlan               nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   -- Name --
///   spatial plan
///   -- Definition --
///   A set of documents that indicates a strategic direction for the development of a given geographic area, states the policies, priorities, programmes and land allocations that will implement the strategic direction and influences the distribution of people and activities in spaces of various scales. Spatial plans may be developed for urban planning, regional planning, environmental planning, landscape planning, national spatial plans, or spatial planning at the Union level.
/// </BLOCKQUOTE></PRE>
/// Element "http://inspire.ec.europa.eu/schemas/plu/3.0":SpatialPlan.
    //jld plu__SpatialPlanType*                plu__SpatialPlan               nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_FeaturePropertyType     ;
//  END OF SUBSTITUTIONS
    }                                   *__FeaturePropertyType_sequence 0;
//  END OF SEQUENCE
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":OwnershipAttributeGroup">.
/// Attribute "owns" of XSD type xs:boolean.
   @bool                                 owns                           0 = false;	///< Default attribute value="false".
//  END OF ATTRIBUTEGROUP
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":AssociationAttributeGroup">.
/// Attribute "nilReason" of XSD type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         gml__remoteSchema              0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.opengis.net/gml/3.2":BoundingShapeType is a complexType.
///
/// class gml__BoundingShapeType operations:
/// - gml__BoundingShapeType* soap_new_gml__BoundingShapeType(soap*) allocate and default initialize
/// - gml__BoundingShapeType* soap_new_gml__BoundingShapeType(soap*, int num) allocate array and default initialize values
/// - gml__BoundingShapeType* soap_new_req_gml__BoundingShapeType(soap*, ...) allocate, set required members
/// - gml__BoundingShapeType* soap_new_set_gml__BoundingShapeType(soap*, ...) allocate, set all public members
/// - gml__BoundingShapeType::soap_default(soap*) default initialize members
/// - int soap_read_gml__BoundingShapeType(soap*, gml__BoundingShapeType*) deserialize from a stream
/// - int soap_write_gml__BoundingShapeType(soap*, gml__BoundingShapeType*) serialize to a stream
/// - gml__BoundingShapeType* gml__BoundingShapeType::soap_dup(soap*) returns deep copy of gml__BoundingShapeType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__BoundingShapeType::soap_del() deep deletes gml__BoundingShapeType data members, use only after gml__BoundingShapeType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__BoundingShapeType : public xsd__anyType
{ public:
//  BEGIN CHOICE <xs:choice>
   $int                                  __union_BoundingShapeType     ;	///< Union _gml__union_BoundingShapeType selector: set to SOAP_UNION__gml__union_BoundingShapeType_<fieldname>
    union _gml__union_BoundingShapeType
    {
/// <PRE><BLOCKQUOTE>
///   Envelope defines an extent using a pair of positions defining opposite corners in arbitrary dimensions. The first direct position is the "lower corner" (a coordinate position consisting of all the minimal ordinates for each dimension for all points within the envelope), the second one the "upper corner" (a coordinate position consisting of all the maximal ordinates for each dimension for all points within the envelope).
///   The use of the properties "coordinates" and "pos" has been deprecated. The explicitly named properties "lowerCorner" and "upperCorner" shall be used instead.
/// </BLOCKQUOTE></PRE>
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="Envelope"> with global elements <EnvelopeWithTimePeriod>
/// <PRE><BLOCKQUOTE>
///   Envelope defines an extent using a pair of positions defining opposite corners in arbitrary dimensions. The first direct position is the "lower corner" (a coordinate position consisting of all the minimal ordinates for each dimension for all points within the envelope), the second one the "upper corner" (a coordinate position consisting of all the maximal ordinates for each dimension for all points within the envelope).
///   The use of the properties "coordinates" and "pos" has been deprecated. The explicitly named properties "lowerCorner" and "upperCorner" shall be used instead.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":Envelope.
    gml__EnvelopeType*                   Envelope                       nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   gml:EnvelopeWithTimePeriod is provided for envelopes that include a temporal extent. It adds two time position properties, gml:beginPosition and gml:endPosition, which describe the extent of a time-envelope. Since gml:EnvelopeWithTimePeriod is assigned to the substitution group headed by gml:Envelope, it may be used whenever gml:Envelope is valid.
/// </BLOCKQUOTE></PRE>
/// Element "http://www.opengis.net/gml/3.2":EnvelopeWithTimePeriod.
    gml__EnvelopeWithTimePeriodType*     EnvelopeWithTimePeriod         nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
//  END OF SUBSTITUTIONS
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":Null.
    gml__NilReasonType*                  Null                           nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_BoundingShapeType       ;
//  END OF CHOICE
/// Attribute "nilReason" of XSD type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
};

/// @brief "http://www.opengis.net/gml/3.2":AbstractFeatureMemberType is an abstract complexType.
///
/// <PRE><BLOCKQUOTE>
///   To create a collection of GML features, a property type shall be derived by extension from gml:AbstractFeatureMemberType.
///   By default, this abstract property type does not imply any ownership of the features in the collection. The owns attribute of gml:OwnershipAttributeGroup may be used on a property element instance to assert ownership of a feature in the collection. A collection shall not own a feature already owned by another object.
/// </BLOCKQUOTE></PRE>
/// class gml__AbstractFeatureMemberType operations:
/// - gml__AbstractFeatureMemberType* soap_new_gml__AbstractFeatureMemberType(soap*) allocate and default initialize
/// - gml__AbstractFeatureMemberType* soap_new_gml__AbstractFeatureMemberType(soap*, int num) allocate array and default initialize values
/// - gml__AbstractFeatureMemberType* soap_new_req_gml__AbstractFeatureMemberType(soap*, ...) allocate, set required members
/// - gml__AbstractFeatureMemberType* soap_new_set_gml__AbstractFeatureMemberType(soap*, ...) allocate, set all public members
/// - gml__AbstractFeatureMemberType::soap_default(soap*) default initialize members
/// - int soap_read_gml__AbstractFeatureMemberType(soap*, gml__AbstractFeatureMemberType*) deserialize from a stream
/// - int soap_write_gml__AbstractFeatureMemberType(soap*, gml__AbstractFeatureMemberType*) serialize to a stream
/// - gml__AbstractFeatureMemberType* gml__AbstractFeatureMemberType::soap_dup(soap*) returns deep copy of gml__AbstractFeatureMemberType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__AbstractFeatureMemberType::soap_del() deep deletes gml__AbstractFeatureMemberType data members, use only after gml__AbstractFeatureMemberType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__AbstractFeatureMemberType : public xsd__anyType
{ public:
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":OwnershipAttributeGroup">.
/// Attribute "owns" of XSD type xs:boolean.
   @bool                                 owns                           0 = false;	///< Default attribute value="false".
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.opengis.net/gml/3.2":TimePrimitivePropertyType is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   gml:TimePrimitivePropertyType provides a standard content model for associations between an arbitrary member of the substitution group whose head is gml:AbstractTimePrimitive and another object.
/// </BLOCKQUOTE></PRE>
/// class gml__TimePrimitivePropertyType operations:
/// - gml__TimePrimitivePropertyType* soap_new_gml__TimePrimitivePropertyType(soap*) allocate and default initialize
/// - gml__TimePrimitivePropertyType* soap_new_gml__TimePrimitivePropertyType(soap*, int num) allocate array and default initialize values
/// - gml__TimePrimitivePropertyType* soap_new_req_gml__TimePrimitivePropertyType(soap*, ...) allocate, set required members
/// - gml__TimePrimitivePropertyType* soap_new_set_gml__TimePrimitivePropertyType(soap*, ...) allocate, set all public members
/// - gml__TimePrimitivePropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gml__TimePrimitivePropertyType(soap*, gml__TimePrimitivePropertyType*) deserialize from a stream
/// - int soap_write_gml__TimePrimitivePropertyType(soap*, gml__TimePrimitivePropertyType*) serialize to a stream
/// - gml__TimePrimitivePropertyType* gml__TimePrimitivePropertyType::soap_dup(soap*) returns deep copy of gml__TimePrimitivePropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__TimePrimitivePropertyType::soap_del() deep deletes gml__TimePrimitivePropertyType data members, use only after gml__TimePrimitivePropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__TimePrimitivePropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gml__TimePrimitivePropertyType_sequence
    {
/// <PRE><BLOCKQUOTE>
///   gml:AbstractTimePrimitive acts as the head of a substitution group for geometric and topological temporal primitives.
/// </BLOCKQUOTE></PRE>
/// Reference "http://www.opengis.net/gml/3.2":AbstractTimePrimitive to abstract element.
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractTimePrimitive"> with global elements
   $int                                  __unionAbstractTimePrimitive  ;	///< Union _gml__union_TimePrimitivePropertyType selector: set to SOAP_UNION__gml__union_TimePrimitivePropertyType_<fieldname>
/// Union for substitutionGroup gml__AbstractTimePrimitive.
    union _gml__union_TimePrimitivePropertyType
    {
    }                                    union_TimePrimitivePropertyType;
//  END OF SUBSTITUTIONS
    }                                   *__TimePrimitivePropertyType_sequence 0;
//  END OF SEQUENCE
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":AssociationAttributeGroup">.
/// Attribute "nilReason" of XSD type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         gml__remoteSchema              0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":OwnershipAttributeGroup">.
/// Attribute "owns" of XSD type xs:boolean.
   @bool                                 owns                           0 = false;	///< Default attribute value="false".
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.opengis.net/gml/3.2":TimeInstantPropertyType is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   gml:TimeInstantPropertyType provides for associating a gml:TimeInstant with an object.
/// </BLOCKQUOTE></PRE>
/// class gml__TimeInstantPropertyType operations:
/// - gml__TimeInstantPropertyType* soap_new_gml__TimeInstantPropertyType(soap*) allocate and default initialize
/// - gml__TimeInstantPropertyType* soap_new_gml__TimeInstantPropertyType(soap*, int num) allocate array and default initialize values
/// - gml__TimeInstantPropertyType* soap_new_req_gml__TimeInstantPropertyType(soap*, ...) allocate, set required members
/// - gml__TimeInstantPropertyType* soap_new_set_gml__TimeInstantPropertyType(soap*, ...) allocate, set all public members
/// - gml__TimeInstantPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gml__TimeInstantPropertyType(soap*, gml__TimeInstantPropertyType*) deserialize from a stream
/// - int soap_write_gml__TimeInstantPropertyType(soap*, gml__TimeInstantPropertyType*) serialize to a stream
/// - gml__TimeInstantPropertyType* gml__TimeInstantPropertyType::soap_dup(soap*) returns deep copy of gml__TimeInstantPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__TimeInstantPropertyType::soap_del() deep deletes gml__TimeInstantPropertyType data members, use only after gml__TimeInstantPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__TimeInstantPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gml__TimeInstantPropertyType_sequence
    {
/// <PRE><BLOCKQUOTE>
///   gml:TimeInstant acts as a zero-dimensional geometric primitive that represents an identifiable position in time.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":TimeInstant.
    gml__TimeInstantType*                TimeInstant                    1;	///< Required element.
    }                                   *__TimeInstantPropertyType_sequence 0;
//  END OF SEQUENCE
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":AssociationAttributeGroup">.
/// Attribute "nilReason" of XSD type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         gml__remoteSchema              0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":OwnershipAttributeGroup">.
/// Attribute "owns" of XSD type xs:boolean.
   @bool                                 owns                           0 = false;	///< Default attribute value="false".
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.opengis.net/gml/3.2":TimePeriodPropertyType is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   gml:TimePeriodPropertyType provides for associating a gml:TimePeriod with an object.
/// </BLOCKQUOTE></PRE>
/// class gml__TimePeriodPropertyType operations:
/// - gml__TimePeriodPropertyType* soap_new_gml__TimePeriodPropertyType(soap*) allocate and default initialize
/// - gml__TimePeriodPropertyType* soap_new_gml__TimePeriodPropertyType(soap*, int num) allocate array and default initialize values
/// - gml__TimePeriodPropertyType* soap_new_req_gml__TimePeriodPropertyType(soap*, ...) allocate, set required members
/// - gml__TimePeriodPropertyType* soap_new_set_gml__TimePeriodPropertyType(soap*, ...) allocate, set all public members
/// - gml__TimePeriodPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gml__TimePeriodPropertyType(soap*, gml__TimePeriodPropertyType*) deserialize from a stream
/// - int soap_write_gml__TimePeriodPropertyType(soap*, gml__TimePeriodPropertyType*) serialize to a stream
/// - gml__TimePeriodPropertyType* gml__TimePeriodPropertyType::soap_dup(soap*) returns deep copy of gml__TimePeriodPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__TimePeriodPropertyType::soap_del() deep deletes gml__TimePeriodPropertyType data members, use only after gml__TimePeriodPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__TimePeriodPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gml__TimePeriodPropertyType_sequence
    {
/// <PRE><BLOCKQUOTE>
///   gml:TimePeriod acts as a one-dimensional geometric primitive that represents an identifiable extent in time.
///   The location in of a gml:TimePeriod is described by the temporal positions of the instants at which it begins and ends. The length of the period is equal to the temporal distance between the two bounding temporal positions. Both beginning and end may be described in terms of their direct position using gml:TimePositionType which is an XML Schema simple content type, or by reference to an indentifiable time instant using gml:TimeInstantPropertyType.
///   Alternatively a limit of a gml:TimePeriod may use the conventional GML property model to make a reference to a time instant described elsewhere, or a limit may be indicated as a direct position.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":TimePeriod.
    gml__TimePeriodType*                 TimePeriod                     1;	///< Required element.
    }                                   *__TimePeriodPropertyType_sequence 0;
//  END OF SEQUENCE
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":AssociationAttributeGroup">.
/// Attribute "nilReason" of XSD type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         gml__remoteSchema              0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":OwnershipAttributeGroup">.
/// Attribute "owns" of XSD type xs:boolean.
   @bool                                 owns                           0 = false;	///< Default attribute value="false".
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.opengis.net/gml/3.2":ValuePropertyType is a complexType.
///
/// class gml__ValuePropertyType operations:
/// - gml__ValuePropertyType* soap_new_gml__ValuePropertyType(soap*) allocate and default initialize
/// - gml__ValuePropertyType* soap_new_gml__ValuePropertyType(soap*, int num) allocate array and default initialize values
/// - gml__ValuePropertyType* soap_new_req_gml__ValuePropertyType(soap*, ...) allocate, set required members
/// - gml__ValuePropertyType* soap_new_set_gml__ValuePropertyType(soap*, ...) allocate, set all public members
/// - gml__ValuePropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gml__ValuePropertyType(soap*, gml__ValuePropertyType*) deserialize from a stream
/// - int soap_write_gml__ValuePropertyType(soap*, gml__ValuePropertyType*) serialize to a stream
/// - gml__ValuePropertyType* gml__ValuePropertyType::soap_dup(soap*) returns deep copy of gml__ValuePropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__ValuePropertyType::soap_del() deep deletes gml__ValuePropertyType data members, use only after gml__ValuePropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__ValuePropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gml__ValuePropertyType_sequence
    {
//  BEGIN GROUP <xs:group name="Value">
/// <PRE><BLOCKQUOTE>
///   This is a convenience choice group which unifies generic values defined in this Clause with spatial and temporal objects and the measures described above, so that any of these may be used within aggregate values.
/// </BLOCKQUOTE></PRE>
//  BEGIN CHOICE <xs:choice>
   $int                                  __union_ValuePropertyType     ;	///< Union _gml__union_ValuePropertyType selector: set to SOAP_UNION__gml__union_ValuePropertyType_<fieldname>
    union _gml__union_ValuePropertyType
    {
/// <PRE><BLOCKQUOTE>
///   gml:AbstractValue is an abstract element which acts as the head of a substitution group which contains gml:AbstractScalarValue, gml:AbstractScalarValueList, gml:CompositeValue and gml:ValueExtent, and (transitively) the elements in their substitution groups.
///   These elements may be used in an application schema as variables, so that in an XML instance document any member of its substitution group may occur.
/// </BLOCKQUOTE></PRE>
/// Reference "http://www.opengis.net/gml/3.2":AbstractValue to abstract element.
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractValue"> with global elements <CompositeValue> <CategoryExtent> <CountExtent> <QuantityExtent>
/// <PRE><BLOCKQUOTE>
///   gml:CompositeValue is an aggregate value built from other values . It contains zero or an arbitrary number of gml:valueComponent elements, and zero or one gml:valueComponents property elements. It may be used for strongly coupled aggregates (vectors, tensors) or for arbitrary collections of values.
/// </BLOCKQUOTE></PRE>
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="CompositeValue"> with global elements <ValueArray>
/// <PRE><BLOCKQUOTE>
///   gml:CompositeValue is an aggregate value built from other values . It contains zero or an arbitrary number of gml:valueComponent elements, and zero or one gml:valueComponents property elements. It may be used for strongly coupled aggregates (vectors, tensors) or for arbitrary collections of values.
/// </BLOCKQUOTE></PRE>
/// Element "http://www.opengis.net/gml/3.2":CompositeValue.
    gml__CompositeValueType*             CompositeValue                 nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   A Value Array is used for homogeneous arrays of primitive and aggregate values. The member values may be scalars, composites, arrays or lists.
///   ValueArray has the same content model as CompositeValue, but the member values shall be homogeneous. The element declaration contains a Schematron constraint which expresses this restriction precisely. Since the members are homogeneous, the gml:referenceSystem (uom, codeSpace) may be specified on the gml:ValueArray itself and inherited by all the members if desired.
/// </BLOCKQUOTE></PRE>
/// Element "http://www.opengis.net/gml/3.2":ValueArray.
    gml__ValueArrayType*                 ValueArray                     nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
//  END OF SUBSTITUTIONS
/// Element "http://www.opengis.net/gml/3.2":CategoryExtent.
    gml__CategoryExtentType*             CategoryExtent                 nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.opengis.net/gml/3.2":CountExtent.
    gml__CountExtentType*                CountExtent                    nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.opengis.net/gml/3.2":QuantityExtent.
    gml__QuantityExtentType*             QuantityExtent                 nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
//  END OF SUBSTITUTIONS
/// <PRE><BLOCKQUOTE>
///   The AbstractGeometry element is the abstract head of the substitution group for all geometry elements of GML. This includes pre-defined and user-defined geometry elements. Any geometry element shall be a direct or indirect extension/restriction of AbstractGeometryType and shall be directly or indirectly in the substitution group of AbstractGeometry.
/// </BLOCKQUOTE></PRE>
/// Reference "http://www.opengis.net/gml/3.2":AbstractGeometry to abstract element.
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractGeometry"> with global elements <GeometricComplex>
/// Element "http://www.opengis.net/gml/3.2":GeometricComplex.
    gml__GeometricComplexType*           GeometricComplex               nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
//  END OF SUBSTITUTIONS
/// <PRE><BLOCKQUOTE>
///   gml:AbstractTimeObject acts as the head of a substitution group for all temporal primitives and complexes.
/// </BLOCKQUOTE></PRE>
/// Reference "http://www.opengis.net/gml/3.2":AbstractTimeObject to abstract element.
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractTimeObject"> with global elements
//  END OF SUBSTITUTIONS
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":Null.
    gml__NilReasonType*                  Null                           nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_ValuePropertyType       ;
//  END OF CHOICE
//  END OF GROUP
    }                                   *__ValuePropertyType_sequence   0;
//  END OF SEQUENCE
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":AssociationAttributeGroup">.
/// Attribute "nilReason" of XSD type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         gml__remoteSchema              0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":OwnershipAttributeGroup">.
/// Attribute "owns" of XSD type xs:boolean.
   @bool                                 owns                           0 = false;	///< Default attribute value="false".
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.opengis.net/gml/3.2":ValueArrayPropertyType is a complexType.
///
/// class gml__ValueArrayPropertyType operations:
/// - gml__ValueArrayPropertyType* soap_new_gml__ValueArrayPropertyType(soap*) allocate and default initialize
/// - gml__ValueArrayPropertyType* soap_new_gml__ValueArrayPropertyType(soap*, int num) allocate array and default initialize values
/// - gml__ValueArrayPropertyType* soap_new_req_gml__ValueArrayPropertyType(soap*, ...) allocate, set required members
/// - gml__ValueArrayPropertyType* soap_new_set_gml__ValueArrayPropertyType(soap*, ...) allocate, set all public members
/// - gml__ValueArrayPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gml__ValueArrayPropertyType(soap*, gml__ValueArrayPropertyType*) deserialize from a stream
/// - int soap_write_gml__ValueArrayPropertyType(soap*, gml__ValueArrayPropertyType*) serialize to a stream
/// - gml__ValueArrayPropertyType* gml__ValueArrayPropertyType::soap_dup(soap*) returns deep copy of gml__ValueArrayPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__ValueArrayPropertyType::soap_del() deep deletes gml__ValueArrayPropertyType data members, use only after gml__ValueArrayPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__ValueArrayPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence maxOccurs="unbounded">
    std::vector<
    class __gml__ValueArrayPropertyType_sequence
    {
//  BEGIN GROUP <xs:group name="Value">
/// <PRE><BLOCKQUOTE>
///   This is a convenience choice group which unifies generic values defined in this Clause with spatial and temporal objects and the measures described above, so that any of these may be used within aggregate values.
/// </BLOCKQUOTE></PRE>
//  BEGIN CHOICE <xs:choice>
   $int                                  __union_ValueArrayPropertyType;	///< Union _gml__union_ValueArrayPropertyType selector: set to SOAP_UNION__gml__union_ValueArrayPropertyType_<fieldname>
    union _gml__union_ValueArrayPropertyType
    {
/// <PRE><BLOCKQUOTE>
///   gml:AbstractValue is an abstract element which acts as the head of a substitution group which contains gml:AbstractScalarValue, gml:AbstractScalarValueList, gml:CompositeValue and gml:ValueExtent, and (transitively) the elements in their substitution groups.
///   These elements may be used in an application schema as variables, so that in an XML instance document any member of its substitution group may occur.
/// </BLOCKQUOTE></PRE>
/// Reference "http://www.opengis.net/gml/3.2":AbstractValue to abstract element.
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractValue"> with global elements <CompositeValue> <CategoryExtent> <CountExtent> <QuantityExtent>
/// <PRE><BLOCKQUOTE>
///   gml:CompositeValue is an aggregate value built from other values . It contains zero or an arbitrary number of gml:valueComponent elements, and zero or one gml:valueComponents property elements. It may be used for strongly coupled aggregates (vectors, tensors) or for arbitrary collections of values.
/// </BLOCKQUOTE></PRE>
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="CompositeValue"> with global elements <ValueArray>
/// <PRE><BLOCKQUOTE>
///   gml:CompositeValue is an aggregate value built from other values . It contains zero or an arbitrary number of gml:valueComponent elements, and zero or one gml:valueComponents property elements. It may be used for strongly coupled aggregates (vectors, tensors) or for arbitrary collections of values.
/// </BLOCKQUOTE></PRE>
/// Element "http://www.opengis.net/gml/3.2":CompositeValue.
    gml__CompositeValueType*             CompositeValue                 nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   A Value Array is used for homogeneous arrays of primitive and aggregate values. The member values may be scalars, composites, arrays or lists.
///   ValueArray has the same content model as CompositeValue, but the member values shall be homogeneous. The element declaration contains a Schematron constraint which expresses this restriction precisely. Since the members are homogeneous, the gml:referenceSystem (uom, codeSpace) may be specified on the gml:ValueArray itself and inherited by all the members if desired.
/// </BLOCKQUOTE></PRE>
/// Element "http://www.opengis.net/gml/3.2":ValueArray.
    gml__ValueArrayType*                 ValueArray                     nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
//  END OF SUBSTITUTIONS
/// Element "http://www.opengis.net/gml/3.2":CategoryExtent.
    gml__CategoryExtentType*             CategoryExtent                 nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.opengis.net/gml/3.2":CountExtent.
    gml__CountExtentType*                CountExtent                    nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.opengis.net/gml/3.2":QuantityExtent.
    gml__QuantityExtentType*             QuantityExtent                 nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
//  END OF SUBSTITUTIONS
/// <PRE><BLOCKQUOTE>
///   The AbstractGeometry element is the abstract head of the substitution group for all geometry elements of GML. This includes pre-defined and user-defined geometry elements. Any geometry element shall be a direct or indirect extension/restriction of AbstractGeometryType and shall be directly or indirectly in the substitution group of AbstractGeometry.
/// </BLOCKQUOTE></PRE>
/// Reference "http://www.opengis.net/gml/3.2":AbstractGeometry to abstract element.
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractGeometry"> with global elements <GeometricComplex>
/// Element "http://www.opengis.net/gml/3.2":GeometricComplex.
    gml__GeometricComplexType*           GeometricComplex               nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
//  END OF SUBSTITUTIONS
/// <PRE><BLOCKQUOTE>
///   gml:AbstractTimeObject acts as the head of a substitution group for all temporal primitives and complexes.
/// </BLOCKQUOTE></PRE>
/// Reference "http://www.opengis.net/gml/3.2":AbstractTimeObject to abstract element.
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractTimeObject"> with global elements
//  END OF SUBSTITUTIONS
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":Null.
    gml__NilReasonType*                  Null                           nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_ValueArrayPropertyType  ;
//  END OF CHOICE
//  END OF GROUP
    }>                                   __ValueArrayPropertyType_sequence;
//  END OF SEQUENCE
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":OwnershipAttributeGroup">.
/// Attribute "owns" of XSD type xs:boolean.
   @bool                                 owns                           0 = false;	///< Default attribute value="false".
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.opengis.net/gml/3.2":BooleanPropertyType is a complexType.
///
/// class gml__BooleanPropertyType operations:
/// - gml__BooleanPropertyType* soap_new_gml__BooleanPropertyType(soap*) allocate and default initialize
/// - gml__BooleanPropertyType* soap_new_gml__BooleanPropertyType(soap*, int num) allocate array and default initialize values
/// - gml__BooleanPropertyType* soap_new_req_gml__BooleanPropertyType(soap*, ...) allocate, set required members
/// - gml__BooleanPropertyType* soap_new_set_gml__BooleanPropertyType(soap*, ...) allocate, set all public members
/// - gml__BooleanPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gml__BooleanPropertyType(soap*, gml__BooleanPropertyType*) deserialize from a stream
/// - int soap_write_gml__BooleanPropertyType(soap*, gml__BooleanPropertyType*) serialize to a stream
/// - gml__BooleanPropertyType* gml__BooleanPropertyType::soap_dup(soap*) returns deep copy of gml__BooleanPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__BooleanPropertyType::soap_del() deep deletes gml__BooleanPropertyType data members, use only after gml__BooleanPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__BooleanPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gml__BooleanPropertyType_sequence
    {
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":Boolean.
    _gml__Boolean*                       Boolean                        1;	///< Required element.
    }                                   *__BooleanPropertyType_sequence 0;
//  END OF SEQUENCE
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":AssociationAttributeGroup">.
/// Attribute "nilReason" of XSD type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         gml__remoteSchema              0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.opengis.net/gml/3.2":CategoryPropertyType is a complexType.
///
/// class gml__CategoryPropertyType operations:
/// - gml__CategoryPropertyType* soap_new_gml__CategoryPropertyType(soap*) allocate and default initialize
/// - gml__CategoryPropertyType* soap_new_gml__CategoryPropertyType(soap*, int num) allocate array and default initialize values
/// - gml__CategoryPropertyType* soap_new_req_gml__CategoryPropertyType(soap*, ...) allocate, set required members
/// - gml__CategoryPropertyType* soap_new_set_gml__CategoryPropertyType(soap*, ...) allocate, set all public members
/// - gml__CategoryPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gml__CategoryPropertyType(soap*, gml__CategoryPropertyType*) deserialize from a stream
/// - int soap_write_gml__CategoryPropertyType(soap*, gml__CategoryPropertyType*) serialize to a stream
/// - gml__CategoryPropertyType* gml__CategoryPropertyType::soap_dup(soap*) returns deep copy of gml__CategoryPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__CategoryPropertyType::soap_del() deep deletes gml__CategoryPropertyType data members, use only after gml__CategoryPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__CategoryPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gml__CategoryPropertyType_sequence
    {
/// <PRE><BLOCKQUOTE>
///   A gml:Category has an optional XML attribute codeSpace, whose value is a URI which identifies a dictionary, codelist or authority for the term.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":Category.
    _gml__Category*                      Category                       1;	///< Required element.
    }                                   *__CategoryPropertyType_sequence 0;
//  END OF SEQUENCE
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":AssociationAttributeGroup">.
/// Attribute "nilReason" of XSD type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         gml__remoteSchema              0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.opengis.net/gml/3.2":QuantityPropertyType is a complexType.
///
/// class gml__QuantityPropertyType operations:
/// - gml__QuantityPropertyType* soap_new_gml__QuantityPropertyType(soap*) allocate and default initialize
/// - gml__QuantityPropertyType* soap_new_gml__QuantityPropertyType(soap*, int num) allocate array and default initialize values
/// - gml__QuantityPropertyType* soap_new_req_gml__QuantityPropertyType(soap*, ...) allocate, set required members
/// - gml__QuantityPropertyType* soap_new_set_gml__QuantityPropertyType(soap*, ...) allocate, set all public members
/// - gml__QuantityPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gml__QuantityPropertyType(soap*, gml__QuantityPropertyType*) deserialize from a stream
/// - int soap_write_gml__QuantityPropertyType(soap*, gml__QuantityPropertyType*) serialize to a stream
/// - gml__QuantityPropertyType* gml__QuantityPropertyType::soap_dup(soap*) returns deep copy of gml__QuantityPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__QuantityPropertyType::soap_del() deep deletes gml__QuantityPropertyType data members, use only after gml__QuantityPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__QuantityPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gml__QuantityPropertyType_sequence
    {
/// <PRE><BLOCKQUOTE>
///   An XML attribute uom ("unit of measure") is required, whose value is a URI which identifies the definition of a ratio scale or units by which the numeric value shall be multiplied, or an interval or position scale on which the value occurs.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":Quantity.
    _gml__Quantity*                      Quantity                       1;	///< Required element.
    }                                   *__QuantityPropertyType_sequence 0;
//  END OF SEQUENCE
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":AssociationAttributeGroup">.
/// Attribute "nilReason" of XSD type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         gml__remoteSchema              0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.opengis.net/gml/3.2":CountPropertyType is a complexType.
///
/// class gml__CountPropertyType operations:
/// - gml__CountPropertyType* soap_new_gml__CountPropertyType(soap*) allocate and default initialize
/// - gml__CountPropertyType* soap_new_gml__CountPropertyType(soap*, int num) allocate array and default initialize values
/// - gml__CountPropertyType* soap_new_req_gml__CountPropertyType(soap*, ...) allocate, set required members
/// - gml__CountPropertyType* soap_new_set_gml__CountPropertyType(soap*, ...) allocate, set all public members
/// - gml__CountPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gml__CountPropertyType(soap*, gml__CountPropertyType*) deserialize from a stream
/// - int soap_write_gml__CountPropertyType(soap*, gml__CountPropertyType*) serialize to a stream
/// - gml__CountPropertyType* gml__CountPropertyType::soap_dup(soap*) returns deep copy of gml__CountPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__CountPropertyType::soap_del() deep deletes gml__CountPropertyType data members, use only after gml__CountPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__CountPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gml__CountPropertyType_sequence
    {
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":Count.
    _gml__Count*                         Count                          1;	///< Required element.
    }                                   *__CountPropertyType_sequence   0;
//  END OF SEQUENCE
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":AssociationAttributeGroup">.
/// Attribute "nilReason" of XSD type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         gml__remoteSchema              0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.opengis.net/gml/3.2":GridLimitsType is a complexType.
///
/// class gml__GridLimitsType operations:
/// - gml__GridLimitsType* soap_new_gml__GridLimitsType(soap*) allocate and default initialize
/// - gml__GridLimitsType* soap_new_gml__GridLimitsType(soap*, int num) allocate array and default initialize values
/// - gml__GridLimitsType* soap_new_req_gml__GridLimitsType(soap*, ...) allocate, set required members
/// - gml__GridLimitsType* soap_new_set_gml__GridLimitsType(soap*, ...) allocate, set all public members
/// - gml__GridLimitsType::soap_default(soap*) default initialize members
/// - int soap_read_gml__GridLimitsType(soap*, gml__GridLimitsType*) deserialize from a stream
/// - int soap_write_gml__GridLimitsType(soap*, gml__GridLimitsType*) serialize to a stream
/// - gml__GridLimitsType* gml__GridLimitsType::soap_dup(soap*) returns deep copy of gml__GridLimitsType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__GridLimitsType::soap_del() deep deletes gml__GridLimitsType data members, use only after gml__GridLimitsType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__GridLimitsType : public xsd__anyType
{ public:
/// Element "GridEnvelope" of XSD type "http://www.opengis.net/gml/3.2":GridEnvelopeType.
    gml__GridEnvelopeType*               GridEnvelope                   1;	///< Required element.
};

/// @brief "http://www.opengis.net/gml/3.2":GridEnvelopeType is a complexType.
///
/// class gml__GridEnvelopeType operations:
/// - gml__GridEnvelopeType* soap_new_gml__GridEnvelopeType(soap*) allocate and default initialize
/// - gml__GridEnvelopeType* soap_new_gml__GridEnvelopeType(soap*, int num) allocate array and default initialize values
/// - gml__GridEnvelopeType* soap_new_req_gml__GridEnvelopeType(soap*, ...) allocate, set required members
/// - gml__GridEnvelopeType* soap_new_set_gml__GridEnvelopeType(soap*, ...) allocate, set all public members
/// - gml__GridEnvelopeType::soap_default(soap*) default initialize members
/// - int soap_read_gml__GridEnvelopeType(soap*, gml__GridEnvelopeType*) deserialize from a stream
/// - int soap_write_gml__GridEnvelopeType(soap*, gml__GridEnvelopeType*) serialize to a stream
/// - gml__GridEnvelopeType* gml__GridEnvelopeType::soap_dup(soap*) returns deep copy of gml__GridEnvelopeType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__GridEnvelopeType::soap_del() deep deletes gml__GridEnvelopeType data members, use only after gml__GridEnvelopeType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__GridEnvelopeType : public xsd__anyType
{ public:
/// Element "low" of XSD type "http://www.opengis.net/gml/3.2":integerList.
    gml__integerList                     low                            1;	///< Required element.
/// Element "high" of XSD type "http://www.opengis.net/gml/3.2":integerList.
    gml__integerList                     high                           1;	///< Required element.
};

/// @brief "http://www.opengis.net/gml/3.2":SingleCRSPropertyType is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   gml:SingleCRSPropertyType is a property type for association roles to a single coordinate reference system, either referencing or containing the definition of that coordinate reference system.
/// </BLOCKQUOTE></PRE>
/// class gml__SingleCRSPropertyType operations:
/// - gml__SingleCRSPropertyType* soap_new_gml__SingleCRSPropertyType(soap*) allocate and default initialize
/// - gml__SingleCRSPropertyType* soap_new_gml__SingleCRSPropertyType(soap*, int num) allocate array and default initialize values
/// - gml__SingleCRSPropertyType* soap_new_req_gml__SingleCRSPropertyType(soap*, ...) allocate, set required members
/// - gml__SingleCRSPropertyType* soap_new_set_gml__SingleCRSPropertyType(soap*, ...) allocate, set all public members
/// - gml__SingleCRSPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gml__SingleCRSPropertyType(soap*, gml__SingleCRSPropertyType*) deserialize from a stream
/// - int soap_write_gml__SingleCRSPropertyType(soap*, gml__SingleCRSPropertyType*) serialize to a stream
/// - gml__SingleCRSPropertyType* gml__SingleCRSPropertyType::soap_dup(soap*) returns deep copy of gml__SingleCRSPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__SingleCRSPropertyType::soap_del() deep deletes gml__SingleCRSPropertyType data members, use only after gml__SingleCRSPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__SingleCRSPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gml__SingleCRSPropertyType_sequence
    {
/// <PRE><BLOCKQUOTE>
///   gml:AbstractSingleCRS implements a coordinate reference system consisting of one coordinate system and one datum (as opposed to a Compound CRS).
/// </BLOCKQUOTE></PRE>
/// Reference "http://www.opengis.net/gml/3.2":AbstractSingleCRS to abstract element.
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractSingleCRS"> with global elements <GeodeticCRS> <VerticalCRS> <EngineeringCRS> <ImageCRS> <TemporalCRS> <GeographicCRS> <GeocentricCRS>
   $int                                  __unionAbstractSingleCRS      ;	///< Union _gml__union_SingleCRSPropertyType selector: set to SOAP_UNION__gml__union_SingleCRSPropertyType_<fieldname>
/// Union for substitutionGroup gml__AbstractSingleCRS.
    union _gml__union_SingleCRSPropertyType
    {
/// Element "http://www.opengis.net/gml/3.2":GeodeticCRS.
    gml__GeodeticCRSType*                GeodeticCRS                    nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   gml:VerticalCRS is a 1D coordinate reference system used for recording heights or depths. Vertical CRSs make use of the direction of gravity to define the concept of height or depth, but the relationship with gravity may not be straightforward. By implication, ellipsoidal heights (h) cannot be captured in a vertical coordinate reference system. Ellipsoidal heights cannot exist independently, but only as an inseparable part of a 3D coordinate tuple defined in a geographic 3D coordinate reference system.
/// </BLOCKQUOTE></PRE>
/// Element "http://www.opengis.net/gml/3.2":VerticalCRS.
    gml__VerticalCRSType*                VerticalCRS                    nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   gml:EngineeringCRS is a contextually local coordinate reference system which can be divided into two broad categories:
///   - earth-fixed systems applied to engineering activities on or near the surface of the earth;
///   - CRSs on moving platforms such as road vehicles, vessels, aircraft, or spacecraft, see ISO 19111 8.3.
/// </BLOCKQUOTE></PRE>
/// Element "http://www.opengis.net/gml/3.2":EngineeringCRS.
    gml__EngineeringCRSType*             EngineeringCRS                 nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   gml:ImageCRS is an engineering coordinate reference system applied to locations in images. Image coordinate reference systems are treated as a separate sub-type because the definition of the associated image datum contains two attributes not relevant to other engineering datums.
/// </BLOCKQUOTE></PRE>
/// Element "http://www.opengis.net/gml/3.2":ImageCRS.
    gml__ImageCRSType*                   ImageCRS                       nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   gml:TemporalCRS is a 1D coordinate reference system used for the recording of time.
/// </BLOCKQUOTE></PRE>
/// Element "http://www.opengis.net/gml/3.2":TemporalCRS.
    gml__TemporalCRSType*                TemporalCRS                    nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.opengis.net/gml/3.2":GeographicCRS.
    gml__GeographicCRSType*              GeographicCRS                  nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.opengis.net/gml/3.2":GeocentricCRS.
    gml__GeocentricCRSType*              GeocentricCRS                  nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_SingleCRSPropertyType   ;
//  END OF SUBSTITUTIONS
    }                                   *__SingleCRSPropertyType_sequence 0;
//  END OF SEQUENCE
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":AssociationAttributeGroup">.
/// Attribute "nilReason" of XSD type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         gml__remoteSchema              0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.opengis.net/gml/3.2":CompoundCRSPropertyType is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   gml:CompoundCRSPropertyType is a property type for association roles to a compound coordinate reference system, either referencing or containing the definition of that reference system.
/// </BLOCKQUOTE></PRE>
/// class gml__CompoundCRSPropertyType operations:
/// - gml__CompoundCRSPropertyType* soap_new_gml__CompoundCRSPropertyType(soap*) allocate and default initialize
/// - gml__CompoundCRSPropertyType* soap_new_gml__CompoundCRSPropertyType(soap*, int num) allocate array and default initialize values
/// - gml__CompoundCRSPropertyType* soap_new_req_gml__CompoundCRSPropertyType(soap*, ...) allocate, set required members
/// - gml__CompoundCRSPropertyType* soap_new_set_gml__CompoundCRSPropertyType(soap*, ...) allocate, set all public members
/// - gml__CompoundCRSPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gml__CompoundCRSPropertyType(soap*, gml__CompoundCRSPropertyType*) deserialize from a stream
/// - int soap_write_gml__CompoundCRSPropertyType(soap*, gml__CompoundCRSPropertyType*) serialize to a stream
/// - gml__CompoundCRSPropertyType* gml__CompoundCRSPropertyType::soap_dup(soap*) returns deep copy of gml__CompoundCRSPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__CompoundCRSPropertyType::soap_del() deep deletes gml__CompoundCRSPropertyType data members, use only after gml__CompoundCRSPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__CompoundCRSPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gml__CompoundCRSPropertyType_sequence
    {
/// <PRE><BLOCKQUOTE>
///   gml:CompundCRS is a coordinate reference system describing the position of points through two or more independent coordinate reference systems. It is associated with a non-repeating sequence of two or more instances of SingleCRS.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":CompoundCRS.
    gml__CompoundCRSType*                CompoundCRS                    1;	///< Required element.
    }                                   *__CompoundCRSPropertyType_sequence 0;
//  END OF SEQUENCE
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":AssociationAttributeGroup">.
/// Attribute "nilReason" of XSD type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         gml__remoteSchema              0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.opengis.net/gml/3.2":GeodeticCRSPropertyType is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   gml:GeodeticCRSPropertyType is a property type for association roles to a geodetic coordinate reference system, either referencing or containing the definition of that reference system.
/// </BLOCKQUOTE></PRE>
/// class gml__GeodeticCRSPropertyType operations:
/// - gml__GeodeticCRSPropertyType* soap_new_gml__GeodeticCRSPropertyType(soap*) allocate and default initialize
/// - gml__GeodeticCRSPropertyType* soap_new_gml__GeodeticCRSPropertyType(soap*, int num) allocate array and default initialize values
/// - gml__GeodeticCRSPropertyType* soap_new_req_gml__GeodeticCRSPropertyType(soap*, ...) allocate, set required members
/// - gml__GeodeticCRSPropertyType* soap_new_set_gml__GeodeticCRSPropertyType(soap*, ...) allocate, set all public members
/// - gml__GeodeticCRSPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gml__GeodeticCRSPropertyType(soap*, gml__GeodeticCRSPropertyType*) deserialize from a stream
/// - int soap_write_gml__GeodeticCRSPropertyType(soap*, gml__GeodeticCRSPropertyType*) serialize to a stream
/// - gml__GeodeticCRSPropertyType* gml__GeodeticCRSPropertyType::soap_dup(soap*) returns deep copy of gml__GeodeticCRSPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__GeodeticCRSPropertyType::soap_del() deep deletes gml__GeodeticCRSPropertyType data members, use only after gml__GeodeticCRSPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__GeodeticCRSPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gml__GeodeticCRSPropertyType_sequence
    {
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":GeodeticCRS.
    gml__GeodeticCRSType*                GeodeticCRS                    1;	///< Required element.
    }                                   *__GeodeticCRSPropertyType_sequence 0;
//  END OF SEQUENCE
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":AssociationAttributeGroup">.
/// Attribute "nilReason" of XSD type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         gml__remoteSchema              0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.opengis.net/gml/3.2":VerticalCRSPropertyType is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   gml:VerticalCRSPropertyType is a property type for association roles to a vertical coordinate reference system, either referencing or containing the definition of that reference system.
/// </BLOCKQUOTE></PRE>
/// class gml__VerticalCRSPropertyType operations:
/// - gml__VerticalCRSPropertyType* soap_new_gml__VerticalCRSPropertyType(soap*) allocate and default initialize
/// - gml__VerticalCRSPropertyType* soap_new_gml__VerticalCRSPropertyType(soap*, int num) allocate array and default initialize values
/// - gml__VerticalCRSPropertyType* soap_new_req_gml__VerticalCRSPropertyType(soap*, ...) allocate, set required members
/// - gml__VerticalCRSPropertyType* soap_new_set_gml__VerticalCRSPropertyType(soap*, ...) allocate, set all public members
/// - gml__VerticalCRSPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gml__VerticalCRSPropertyType(soap*, gml__VerticalCRSPropertyType*) deserialize from a stream
/// - int soap_write_gml__VerticalCRSPropertyType(soap*, gml__VerticalCRSPropertyType*) serialize to a stream
/// - gml__VerticalCRSPropertyType* gml__VerticalCRSPropertyType::soap_dup(soap*) returns deep copy of gml__VerticalCRSPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__VerticalCRSPropertyType::soap_del() deep deletes gml__VerticalCRSPropertyType data members, use only after gml__VerticalCRSPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__VerticalCRSPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gml__VerticalCRSPropertyType_sequence
    {
/// <PRE><BLOCKQUOTE>
///   gml:VerticalCRS is a 1D coordinate reference system used for recording heights or depths. Vertical CRSs make use of the direction of gravity to define the concept of height or depth, but the relationship with gravity may not be straightforward. By implication, ellipsoidal heights (h) cannot be captured in a vertical coordinate reference system. Ellipsoidal heights cannot exist independently, but only as an inseparable part of a 3D coordinate tuple defined in a geographic 3D coordinate reference system.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":VerticalCRS.
    gml__VerticalCRSType*                VerticalCRS                    1;	///< Required element.
    }                                   *__VerticalCRSPropertyType_sequence 0;
//  END OF SEQUENCE
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":AssociationAttributeGroup">.
/// Attribute "nilReason" of XSD type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         gml__remoteSchema              0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.opengis.net/gml/3.2":ProjectedCRSPropertyType is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   gml:ProjectedCRSPropertyType is a property type for association roles to a projected coordinate reference system, either referencing or containing the definition of that reference system.
/// </BLOCKQUOTE></PRE>
/// class gml__ProjectedCRSPropertyType operations:
/// - gml__ProjectedCRSPropertyType* soap_new_gml__ProjectedCRSPropertyType(soap*) allocate and default initialize
/// - gml__ProjectedCRSPropertyType* soap_new_gml__ProjectedCRSPropertyType(soap*, int num) allocate array and default initialize values
/// - gml__ProjectedCRSPropertyType* soap_new_req_gml__ProjectedCRSPropertyType(soap*, ...) allocate, set required members
/// - gml__ProjectedCRSPropertyType* soap_new_set_gml__ProjectedCRSPropertyType(soap*, ...) allocate, set all public members
/// - gml__ProjectedCRSPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gml__ProjectedCRSPropertyType(soap*, gml__ProjectedCRSPropertyType*) deserialize from a stream
/// - int soap_write_gml__ProjectedCRSPropertyType(soap*, gml__ProjectedCRSPropertyType*) serialize to a stream
/// - gml__ProjectedCRSPropertyType* gml__ProjectedCRSPropertyType::soap_dup(soap*) returns deep copy of gml__ProjectedCRSPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__ProjectedCRSPropertyType::soap_del() deep deletes gml__ProjectedCRSPropertyType data members, use only after gml__ProjectedCRSPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__ProjectedCRSPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gml__ProjectedCRSPropertyType_sequence
    {
/// <PRE><BLOCKQUOTE>
///   gml:ProjectedCRS is a 2D coordinate reference system used to approximate the shape of the earth on a planar surface, but in such a way that the distortion that is inherent to the approximation is carefully controlled and known. Distortion correction is commonly applied to calculated bearings and distances to produce values that are a close match to actual field values.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":ProjectedCRS.
    gml__ProjectedCRSType*               ProjectedCRS                   1;	///< Required element.
    }                                   *__ProjectedCRSPropertyType_sequence 0;
//  END OF SEQUENCE
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":AssociationAttributeGroup">.
/// Attribute "nilReason" of XSD type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         gml__remoteSchema              0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.opengis.net/gml/3.2":DerivedCRSPropertyType is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   gml:DerivedCRSPropertyType is a property type for association roles to a non-projected derived coordinate reference system, either referencing or containing the definition of that reference system.
/// </BLOCKQUOTE></PRE>
/// class gml__DerivedCRSPropertyType operations:
/// - gml__DerivedCRSPropertyType* soap_new_gml__DerivedCRSPropertyType(soap*) allocate and default initialize
/// - gml__DerivedCRSPropertyType* soap_new_gml__DerivedCRSPropertyType(soap*, int num) allocate array and default initialize values
/// - gml__DerivedCRSPropertyType* soap_new_req_gml__DerivedCRSPropertyType(soap*, ...) allocate, set required members
/// - gml__DerivedCRSPropertyType* soap_new_set_gml__DerivedCRSPropertyType(soap*, ...) allocate, set all public members
/// - gml__DerivedCRSPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gml__DerivedCRSPropertyType(soap*, gml__DerivedCRSPropertyType*) deserialize from a stream
/// - int soap_write_gml__DerivedCRSPropertyType(soap*, gml__DerivedCRSPropertyType*) serialize to a stream
/// - gml__DerivedCRSPropertyType* gml__DerivedCRSPropertyType::soap_dup(soap*) returns deep copy of gml__DerivedCRSPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__DerivedCRSPropertyType::soap_del() deep deletes gml__DerivedCRSPropertyType data members, use only after gml__DerivedCRSPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__DerivedCRSPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gml__DerivedCRSPropertyType_sequence
    {
/// <PRE><BLOCKQUOTE>
///   gml:DerivedCRS is a single coordinate reference system that is defined by its coordinate conversion from another single coordinate reference system known as the base CRS. The base CRS can be a projected coordinate reference system, if this DerivedCRS is used for a georectified grid coverage as described in ISO 19123, Clause 8.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":DerivedCRS.
    gml__DerivedCRSType*                 DerivedCRS                     1;	///< Required element.
    }                                   *__DerivedCRSPropertyType_sequence 0;
//  END OF SEQUENCE
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":AssociationAttributeGroup">.
/// Attribute "nilReason" of XSD type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         gml__remoteSchema              0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.opengis.net/gml/3.2":EngineeringCRSPropertyType is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   gml:EngineeringCRSPropertyType is a property type for association roles to an engineering coordinate reference system, either referencing or containing the definition of that reference system.
/// </BLOCKQUOTE></PRE>
/// class gml__EngineeringCRSPropertyType operations:
/// - gml__EngineeringCRSPropertyType* soap_new_gml__EngineeringCRSPropertyType(soap*) allocate and default initialize
/// - gml__EngineeringCRSPropertyType* soap_new_gml__EngineeringCRSPropertyType(soap*, int num) allocate array and default initialize values
/// - gml__EngineeringCRSPropertyType* soap_new_req_gml__EngineeringCRSPropertyType(soap*, ...) allocate, set required members
/// - gml__EngineeringCRSPropertyType* soap_new_set_gml__EngineeringCRSPropertyType(soap*, ...) allocate, set all public members
/// - gml__EngineeringCRSPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gml__EngineeringCRSPropertyType(soap*, gml__EngineeringCRSPropertyType*) deserialize from a stream
/// - int soap_write_gml__EngineeringCRSPropertyType(soap*, gml__EngineeringCRSPropertyType*) serialize to a stream
/// - gml__EngineeringCRSPropertyType* gml__EngineeringCRSPropertyType::soap_dup(soap*) returns deep copy of gml__EngineeringCRSPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__EngineeringCRSPropertyType::soap_del() deep deletes gml__EngineeringCRSPropertyType data members, use only after gml__EngineeringCRSPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__EngineeringCRSPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gml__EngineeringCRSPropertyType_sequence
    {
/// <PRE><BLOCKQUOTE>
///   gml:EngineeringCRS is a contextually local coordinate reference system which can be divided into two broad categories:
///   - earth-fixed systems applied to engineering activities on or near the surface of the earth;
///   - CRSs on moving platforms such as road vehicles, vessels, aircraft, or spacecraft, see ISO 19111 8.3.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":EngineeringCRS.
    gml__EngineeringCRSType*             EngineeringCRS                 1;	///< Required element.
    }                                   *__EngineeringCRSPropertyType_sequence 0;
//  END OF SEQUENCE
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":AssociationAttributeGroup">.
/// Attribute "nilReason" of XSD type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         gml__remoteSchema              0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.opengis.net/gml/3.2":ImageCRSPropertyType is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   gml:ImageCRSPropertyType is a property type for association roles to an image coordinate reference system, either referencing or containing the definition of that reference system.
/// </BLOCKQUOTE></PRE>
/// class gml__ImageCRSPropertyType operations:
/// - gml__ImageCRSPropertyType* soap_new_gml__ImageCRSPropertyType(soap*) allocate and default initialize
/// - gml__ImageCRSPropertyType* soap_new_gml__ImageCRSPropertyType(soap*, int num) allocate array and default initialize values
/// - gml__ImageCRSPropertyType* soap_new_req_gml__ImageCRSPropertyType(soap*, ...) allocate, set required members
/// - gml__ImageCRSPropertyType* soap_new_set_gml__ImageCRSPropertyType(soap*, ...) allocate, set all public members
/// - gml__ImageCRSPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gml__ImageCRSPropertyType(soap*, gml__ImageCRSPropertyType*) deserialize from a stream
/// - int soap_write_gml__ImageCRSPropertyType(soap*, gml__ImageCRSPropertyType*) serialize to a stream
/// - gml__ImageCRSPropertyType* gml__ImageCRSPropertyType::soap_dup(soap*) returns deep copy of gml__ImageCRSPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__ImageCRSPropertyType::soap_del() deep deletes gml__ImageCRSPropertyType data members, use only after gml__ImageCRSPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__ImageCRSPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gml__ImageCRSPropertyType_sequence
    {
/// <PRE><BLOCKQUOTE>
///   gml:ImageCRS is an engineering coordinate reference system applied to locations in images. Image coordinate reference systems are treated as a separate sub-type because the definition of the associated image datum contains two attributes not relevant to other engineering datums.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":ImageCRS.
    gml__ImageCRSType*                   ImageCRS                       1;	///< Required element.
    }                                   *__ImageCRSPropertyType_sequence 0;
//  END OF SEQUENCE
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":AssociationAttributeGroup">.
/// Attribute "nilReason" of XSD type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         gml__remoteSchema              0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.opengis.net/gml/3.2":TemporalCRSPropertyType is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   gml:TemporalCRSPropertyType is a property type for association roles to a temporal coordinate reference system, either referencing or containing the definition of that reference system.
/// </BLOCKQUOTE></PRE>
/// class gml__TemporalCRSPropertyType operations:
/// - gml__TemporalCRSPropertyType* soap_new_gml__TemporalCRSPropertyType(soap*) allocate and default initialize
/// - gml__TemporalCRSPropertyType* soap_new_gml__TemporalCRSPropertyType(soap*, int num) allocate array and default initialize values
/// - gml__TemporalCRSPropertyType* soap_new_req_gml__TemporalCRSPropertyType(soap*, ...) allocate, set required members
/// - gml__TemporalCRSPropertyType* soap_new_set_gml__TemporalCRSPropertyType(soap*, ...) allocate, set all public members
/// - gml__TemporalCRSPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gml__TemporalCRSPropertyType(soap*, gml__TemporalCRSPropertyType*) deserialize from a stream
/// - int soap_write_gml__TemporalCRSPropertyType(soap*, gml__TemporalCRSPropertyType*) serialize to a stream
/// - gml__TemporalCRSPropertyType* gml__TemporalCRSPropertyType::soap_dup(soap*) returns deep copy of gml__TemporalCRSPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__TemporalCRSPropertyType::soap_del() deep deletes gml__TemporalCRSPropertyType data members, use only after gml__TemporalCRSPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__TemporalCRSPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gml__TemporalCRSPropertyType_sequence
    {
/// <PRE><BLOCKQUOTE>
///   gml:TemporalCRS is a 1D coordinate reference system used for the recording of time.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":TemporalCRS.
    gml__TemporalCRSType*                TemporalCRS                    1;	///< Required element.
    }                                   *__TemporalCRSPropertyType_sequence 0;
//  END OF SEQUENCE
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":AssociationAttributeGroup">.
/// Attribute "nilReason" of XSD type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         gml__remoteSchema              0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.opengis.net/gml/3.2":CoordinateSystemAxisPropertyType is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   gml:CoordinateSystemAxisPropertyType is a property type for association roles to a coordinate system axis, either referencing or containing the definition of that axis.
/// </BLOCKQUOTE></PRE>
/// class gml__CoordinateSystemAxisPropertyType operations:
/// - gml__CoordinateSystemAxisPropertyType* soap_new_gml__CoordinateSystemAxisPropertyType(soap*) allocate and default initialize
/// - gml__CoordinateSystemAxisPropertyType* soap_new_gml__CoordinateSystemAxisPropertyType(soap*, int num) allocate array and default initialize values
/// - gml__CoordinateSystemAxisPropertyType* soap_new_req_gml__CoordinateSystemAxisPropertyType(soap*, ...) allocate, set required members
/// - gml__CoordinateSystemAxisPropertyType* soap_new_set_gml__CoordinateSystemAxisPropertyType(soap*, ...) allocate, set all public members
/// - gml__CoordinateSystemAxisPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gml__CoordinateSystemAxisPropertyType(soap*, gml__CoordinateSystemAxisPropertyType*) deserialize from a stream
/// - int soap_write_gml__CoordinateSystemAxisPropertyType(soap*, gml__CoordinateSystemAxisPropertyType*) serialize to a stream
/// - gml__CoordinateSystemAxisPropertyType* gml__CoordinateSystemAxisPropertyType::soap_dup(soap*) returns deep copy of gml__CoordinateSystemAxisPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__CoordinateSystemAxisPropertyType::soap_del() deep deletes gml__CoordinateSystemAxisPropertyType data members, use only after gml__CoordinateSystemAxisPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__CoordinateSystemAxisPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gml__CoordinateSystemAxisPropertyType_sequence
    {
/// <PRE><BLOCKQUOTE>
///   gml:CoordinateSystemAxis is a definition of a coordinate system axis.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":CoordinateSystemAxis.
    gml__CoordinateSystemAxisType*       CoordinateSystemAxis           1;	///< Required element.
    }                                   *__CoordinateSystemAxisPropertyType_sequence 0;
//  END OF SEQUENCE
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":AssociationAttributeGroup">.
/// Attribute "nilReason" of XSD type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         gml__remoteSchema              0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.opengis.net/gml/3.2":CoordinateSystemPropertyType is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   gml:CoordinateSystemPropertyType is a property type for association roles to a coordinate system, either referencing or containing the definition of that coordinate system.
/// </BLOCKQUOTE></PRE>
/// class gml__CoordinateSystemPropertyType operations:
/// - gml__CoordinateSystemPropertyType* soap_new_gml__CoordinateSystemPropertyType(soap*) allocate and default initialize
/// - gml__CoordinateSystemPropertyType* soap_new_gml__CoordinateSystemPropertyType(soap*, int num) allocate array and default initialize values
/// - gml__CoordinateSystemPropertyType* soap_new_req_gml__CoordinateSystemPropertyType(soap*, ...) allocate, set required members
/// - gml__CoordinateSystemPropertyType* soap_new_set_gml__CoordinateSystemPropertyType(soap*, ...) allocate, set all public members
/// - gml__CoordinateSystemPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gml__CoordinateSystemPropertyType(soap*, gml__CoordinateSystemPropertyType*) deserialize from a stream
/// - int soap_write_gml__CoordinateSystemPropertyType(soap*, gml__CoordinateSystemPropertyType*) serialize to a stream
/// - gml__CoordinateSystemPropertyType* gml__CoordinateSystemPropertyType::soap_dup(soap*) returns deep copy of gml__CoordinateSystemPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__CoordinateSystemPropertyType::soap_del() deep deletes gml__CoordinateSystemPropertyType data members, use only after gml__CoordinateSystemPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__CoordinateSystemPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gml__CoordinateSystemPropertyType_sequence
    {
/// <PRE><BLOCKQUOTE>
///   gml:AbstractCoordinateSystem is a coordinate system (CS) is the non-repeating sequence of coordinate system axes that spans a given coordinate space. A CS is derived from a set of mathematical rules for specifying how coordinates in a given space are to be assigned to points. The coordinate values in a coordinate tuple shall be recorded in the order in which the coordinate system axes associations are recorded. This abstract complex type shall not be used, extended, or restricted, in an Application Schema, to define a concrete subtype with a meaning equivalent to a concrete subtype specified in this document.
/// </BLOCKQUOTE></PRE>
/// Reference "http://www.opengis.net/gml/3.2":AbstractCoordinateSystem to abstract element.
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractCoordinateSystem"> with global elements <EllipsoidalCS> <CartesianCS> <VerticalCS> <TimeCS> <LinearCS> <UserDefinedCS> <SphericalCS> <PolarCS> <CylindricalCS> <AffineCS> <TemporalCS> <ObliqueCartesianCS>
   $int                                  __unionAbstractCoordinateSystem;	///< Union _gml__union_CoordinateSystemPropertyType selector: set to SOAP_UNION__gml__union_CoordinateSystemPropertyType_<fieldname>
/// Union for substitutionGroup gml__AbstractCoordinateSystem.
    union _gml__union_CoordinateSystemPropertyType
    {
/// <PRE><BLOCKQUOTE>
///   gml:EllipsoidalCS is a two- or three-dimensional coordinate system in which position is specified by geodetic latitude, geodetic longitude, and (in the three-dimensional case) ellipsoidal height. An EllipsoidalCS shall have two or three gml:axis property elements; the number of associations shall equal the dimension of the CS.
/// </BLOCKQUOTE></PRE>
/// Element "http://www.opengis.net/gml/3.2":EllipsoidalCS.
    gml__EllipsoidalCSType*              EllipsoidalCS                  nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   gml:CartesianCS is a 1-, 2-, or 3-dimensional coordinate system. In the 1-dimensional case, it contains a single straight coordinate axis. In the 2- and 3-dimensional cases gives the position of points relative to orthogonal straight axes. In the multi-dimensional case, all axes shall have the same length unit of measure. A CartesianCS shall have one, two, or three gml:axis property elements.
/// </BLOCKQUOTE></PRE>
/// Element "http://www.opengis.net/gml/3.2":CartesianCS.
    gml__CartesianCSType*                CartesianCS                    nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   gml:VerticalCS is a one-dimensional coordinate system used to record the heights or depths of points. Such a coordinate system is usually dependent on the Earth's gravity field, perhaps loosely as when atmospheric pressure is the basis for the vertical coordinate system axis. A VerticalCS shall have one gml:axis property element.
/// </BLOCKQUOTE></PRE>
/// Element "http://www.opengis.net/gml/3.2":VerticalCS.
    gml__VerticalCSType*                 VerticalCS                     nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   gml:TimeCS is a one-dimensional coordinate system containing a time axis, used to describe the temporal position of a point in the specified time units from a specified time origin. A TimeCS shall have one gml:axis property element.
/// </BLOCKQUOTE></PRE>
/// Element "http://www.opengis.net/gml/3.2":TimeCS.
    gml__TimeCSType*                     TimeCS                         nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   gml:LinearCS is a one-dimensional coordinate system that consists of the points that lie on the single axis described. The associated coordinate is the distance with or without offset from the specified datum to the point along the axis. A LinearCS shall have one gml:axis property element.
/// </BLOCKQUOTE></PRE>
/// Element "http://www.opengis.net/gml/3.2":LinearCS.
    gml__LinearCSType*                   LinearCS                       nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   gml:UserDefinedCS is a two- or three-dimensional coordinate system that consists of any combination of coordinate axes not covered by any other coordinate system type. A UserDefinedCS shall have two or three gml:axis property elements; the number of property elements shall equal the dimension of the CS.
/// </BLOCKQUOTE></PRE>
/// Element "http://www.opengis.net/gml/3.2":UserDefinedCS.
    gml__UserDefinedCSType*              UserDefinedCS                  nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   gml:SphericalCS is a three-dimensional coordinate system with one distance measured from the origin and two angular coordinates. A SphericalCS shall have three gml:axis property elements.
/// </BLOCKQUOTE></PRE>
/// Element "http://www.opengis.net/gml/3.2":SphericalCS.
    gml__SphericalCSType*                SphericalCS                    nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   gml:PolarCS ia s two-dimensional coordinate system in which position is specified by the distance from the origin and the angle between the line from the origin to a point and a reference direction. A PolarCS shall have two gml:axis property elements.
/// </BLOCKQUOTE></PRE>
/// Element "http://www.opengis.net/gml/3.2":PolarCS.
    gml__PolarCSType*                    PolarCS                        nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   gml:CylindricalCS is a three-dimensional coordinate system consisting of a polar coordinate system extended by a straight coordinate axis perpendicular to the plane spanned by the polar coordinate system. A CylindricalCS shall have three gml:axis property elements.
/// </BLOCKQUOTE></PRE>
/// Element "http://www.opengis.net/gml/3.2":CylindricalCS.
    gml__CylindricalCSType*              CylindricalCS                  nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   gml:AffineCS is a two- or three-dimensional coordinate system with straight axes that are not necessarily orthogonal. An AffineCS shall have two or three gml:axis property elements; the number of property elements shall equal the dimension of the CS.
/// </BLOCKQUOTE></PRE>
/// Element "http://www.opengis.net/gml/3.2":AffineCS.
    gml__AffineCSType*                   AffineCS                       nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.opengis.net/gml/3.2":TemporalCS.
    gml__TemporalCSType*                 TemporalCS                     nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.opengis.net/gml/3.2":ObliqueCartesianCS.
    gml__ObliqueCartesianCSType*         ObliqueCartesianCS             nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_CoordinateSystemPropertyType;
//  END OF SUBSTITUTIONS
    }                                   *__CoordinateSystemPropertyType_sequence 0;
//  END OF SEQUENCE
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":AssociationAttributeGroup">.
/// Attribute "nilReason" of XSD type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         gml__remoteSchema              0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.opengis.net/gml/3.2":EllipsoidalCSPropertyType is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   gml:EllipsoidalCSPropertyType is a property type for association roles to an ellipsoidal coordinate system, either referencing or containing the definition of that coordinate system.
/// </BLOCKQUOTE></PRE>
/// class gml__EllipsoidalCSPropertyType operations:
/// - gml__EllipsoidalCSPropertyType* soap_new_gml__EllipsoidalCSPropertyType(soap*) allocate and default initialize
/// - gml__EllipsoidalCSPropertyType* soap_new_gml__EllipsoidalCSPropertyType(soap*, int num) allocate array and default initialize values
/// - gml__EllipsoidalCSPropertyType* soap_new_req_gml__EllipsoidalCSPropertyType(soap*, ...) allocate, set required members
/// - gml__EllipsoidalCSPropertyType* soap_new_set_gml__EllipsoidalCSPropertyType(soap*, ...) allocate, set all public members
/// - gml__EllipsoidalCSPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gml__EllipsoidalCSPropertyType(soap*, gml__EllipsoidalCSPropertyType*) deserialize from a stream
/// - int soap_write_gml__EllipsoidalCSPropertyType(soap*, gml__EllipsoidalCSPropertyType*) serialize to a stream
/// - gml__EllipsoidalCSPropertyType* gml__EllipsoidalCSPropertyType::soap_dup(soap*) returns deep copy of gml__EllipsoidalCSPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__EllipsoidalCSPropertyType::soap_del() deep deletes gml__EllipsoidalCSPropertyType data members, use only after gml__EllipsoidalCSPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__EllipsoidalCSPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gml__EllipsoidalCSPropertyType_sequence
    {
/// <PRE><BLOCKQUOTE>
///   gml:EllipsoidalCS is a two- or three-dimensional coordinate system in which position is specified by geodetic latitude, geodetic longitude, and (in the three-dimensional case) ellipsoidal height. An EllipsoidalCS shall have two or three gml:axis property elements; the number of associations shall equal the dimension of the CS.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":EllipsoidalCS.
    gml__EllipsoidalCSType*              EllipsoidalCS                  1;	///< Required element.
    }                                   *__EllipsoidalCSPropertyType_sequence 0;
//  END OF SEQUENCE
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":AssociationAttributeGroup">.
/// Attribute "nilReason" of XSD type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         gml__remoteSchema              0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.opengis.net/gml/3.2":CartesianCSPropertyType is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   gml:CartesianCSPropertyType is a property type for association roles to a Cartesian coordinate system, either referencing or containing the definition of that coordinate system.
/// </BLOCKQUOTE></PRE>
/// class gml__CartesianCSPropertyType operations:
/// - gml__CartesianCSPropertyType* soap_new_gml__CartesianCSPropertyType(soap*) allocate and default initialize
/// - gml__CartesianCSPropertyType* soap_new_gml__CartesianCSPropertyType(soap*, int num) allocate array and default initialize values
/// - gml__CartesianCSPropertyType* soap_new_req_gml__CartesianCSPropertyType(soap*, ...) allocate, set required members
/// - gml__CartesianCSPropertyType* soap_new_set_gml__CartesianCSPropertyType(soap*, ...) allocate, set all public members
/// - gml__CartesianCSPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gml__CartesianCSPropertyType(soap*, gml__CartesianCSPropertyType*) deserialize from a stream
/// - int soap_write_gml__CartesianCSPropertyType(soap*, gml__CartesianCSPropertyType*) serialize to a stream
/// - gml__CartesianCSPropertyType* gml__CartesianCSPropertyType::soap_dup(soap*) returns deep copy of gml__CartesianCSPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__CartesianCSPropertyType::soap_del() deep deletes gml__CartesianCSPropertyType data members, use only after gml__CartesianCSPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__CartesianCSPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gml__CartesianCSPropertyType_sequence
    {
/// <PRE><BLOCKQUOTE>
///   gml:CartesianCS is a 1-, 2-, or 3-dimensional coordinate system. In the 1-dimensional case, it contains a single straight coordinate axis. In the 2- and 3-dimensional cases gives the position of points relative to orthogonal straight axes. In the multi-dimensional case, all axes shall have the same length unit of measure. A CartesianCS shall have one, two, or three gml:axis property elements.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":CartesianCS.
    gml__CartesianCSType*                CartesianCS                    1;	///< Required element.
    }                                   *__CartesianCSPropertyType_sequence 0;
//  END OF SEQUENCE
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":AssociationAttributeGroup">.
/// Attribute "nilReason" of XSD type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         gml__remoteSchema              0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.opengis.net/gml/3.2":VerticalCSPropertyType is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   gml:VerticalCSPropertyType is a property type for association roles to a vertical coordinate system, either referencing or containing the definition of that coordinate system.
/// </BLOCKQUOTE></PRE>
/// class gml__VerticalCSPropertyType operations:
/// - gml__VerticalCSPropertyType* soap_new_gml__VerticalCSPropertyType(soap*) allocate and default initialize
/// - gml__VerticalCSPropertyType* soap_new_gml__VerticalCSPropertyType(soap*, int num) allocate array and default initialize values
/// - gml__VerticalCSPropertyType* soap_new_req_gml__VerticalCSPropertyType(soap*, ...) allocate, set required members
/// - gml__VerticalCSPropertyType* soap_new_set_gml__VerticalCSPropertyType(soap*, ...) allocate, set all public members
/// - gml__VerticalCSPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gml__VerticalCSPropertyType(soap*, gml__VerticalCSPropertyType*) deserialize from a stream
/// - int soap_write_gml__VerticalCSPropertyType(soap*, gml__VerticalCSPropertyType*) serialize to a stream
/// - gml__VerticalCSPropertyType* gml__VerticalCSPropertyType::soap_dup(soap*) returns deep copy of gml__VerticalCSPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__VerticalCSPropertyType::soap_del() deep deletes gml__VerticalCSPropertyType data members, use only after gml__VerticalCSPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__VerticalCSPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gml__VerticalCSPropertyType_sequence
    {
/// <PRE><BLOCKQUOTE>
///   gml:VerticalCS is a one-dimensional coordinate system used to record the heights or depths of points. Such a coordinate system is usually dependent on the Earth's gravity field, perhaps loosely as when atmospheric pressure is the basis for the vertical coordinate system axis. A VerticalCS shall have one gml:axis property element.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":VerticalCS.
    gml__VerticalCSType*                 VerticalCS                     1;	///< Required element.
    }                                   *__VerticalCSPropertyType_sequence 0;
//  END OF SEQUENCE
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":AssociationAttributeGroup">.
/// Attribute "nilReason" of XSD type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         gml__remoteSchema              0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.opengis.net/gml/3.2":TimeCSPropertyType is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   gml:TimeCSPropertyType is a property type for association roles to a time coordinate system, either referencing or containing the definition of that coordinate system.
/// </BLOCKQUOTE></PRE>
/// class gml__TimeCSPropertyType operations:
/// - gml__TimeCSPropertyType* soap_new_gml__TimeCSPropertyType(soap*) allocate and default initialize
/// - gml__TimeCSPropertyType* soap_new_gml__TimeCSPropertyType(soap*, int num) allocate array and default initialize values
/// - gml__TimeCSPropertyType* soap_new_req_gml__TimeCSPropertyType(soap*, ...) allocate, set required members
/// - gml__TimeCSPropertyType* soap_new_set_gml__TimeCSPropertyType(soap*, ...) allocate, set all public members
/// - gml__TimeCSPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gml__TimeCSPropertyType(soap*, gml__TimeCSPropertyType*) deserialize from a stream
/// - int soap_write_gml__TimeCSPropertyType(soap*, gml__TimeCSPropertyType*) serialize to a stream
/// - gml__TimeCSPropertyType* gml__TimeCSPropertyType::soap_dup(soap*) returns deep copy of gml__TimeCSPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__TimeCSPropertyType::soap_del() deep deletes gml__TimeCSPropertyType data members, use only after gml__TimeCSPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__TimeCSPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gml__TimeCSPropertyType_sequence
    {
/// <PRE><BLOCKQUOTE>
///   gml:TimeCS is a one-dimensional coordinate system containing a time axis, used to describe the temporal position of a point in the specified time units from a specified time origin. A TimeCS shall have one gml:axis property element.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":TimeCS.
    gml__TimeCSType*                     TimeCS                         1;	///< Required element.
    }                                   *__TimeCSPropertyType_sequence  0;
//  END OF SEQUENCE
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":AssociationAttributeGroup">.
/// Attribute "nilReason" of XSD type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         gml__remoteSchema              0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.opengis.net/gml/3.2":LinearCSPropertyType is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   gml:LinearCSPropertyType is a property type for association roles to a linear coordinate system, either referencing or containing the definition of that coordinate system.
/// </BLOCKQUOTE></PRE>
/// class gml__LinearCSPropertyType operations:
/// - gml__LinearCSPropertyType* soap_new_gml__LinearCSPropertyType(soap*) allocate and default initialize
/// - gml__LinearCSPropertyType* soap_new_gml__LinearCSPropertyType(soap*, int num) allocate array and default initialize values
/// - gml__LinearCSPropertyType* soap_new_req_gml__LinearCSPropertyType(soap*, ...) allocate, set required members
/// - gml__LinearCSPropertyType* soap_new_set_gml__LinearCSPropertyType(soap*, ...) allocate, set all public members
/// - gml__LinearCSPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gml__LinearCSPropertyType(soap*, gml__LinearCSPropertyType*) deserialize from a stream
/// - int soap_write_gml__LinearCSPropertyType(soap*, gml__LinearCSPropertyType*) serialize to a stream
/// - gml__LinearCSPropertyType* gml__LinearCSPropertyType::soap_dup(soap*) returns deep copy of gml__LinearCSPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__LinearCSPropertyType::soap_del() deep deletes gml__LinearCSPropertyType data members, use only after gml__LinearCSPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__LinearCSPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gml__LinearCSPropertyType_sequence
    {
/// <PRE><BLOCKQUOTE>
///   gml:LinearCS is a one-dimensional coordinate system that consists of the points that lie on the single axis described. The associated coordinate is the distance with or without offset from the specified datum to the point along the axis. A LinearCS shall have one gml:axis property element.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":LinearCS.
    gml__LinearCSType*                   LinearCS                       1;	///< Required element.
    }                                   *__LinearCSPropertyType_sequence 0;
//  END OF SEQUENCE
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":AssociationAttributeGroup">.
/// Attribute "nilReason" of XSD type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         gml__remoteSchema              0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.opengis.net/gml/3.2":UserDefinedCSPropertyType is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   gml:UserDefinedCSPropertyType is a property type for association roles to a user-defined coordinate system, either referencing or containing the definition of that coordinate system.
/// </BLOCKQUOTE></PRE>
/// class gml__UserDefinedCSPropertyType operations:
/// - gml__UserDefinedCSPropertyType* soap_new_gml__UserDefinedCSPropertyType(soap*) allocate and default initialize
/// - gml__UserDefinedCSPropertyType* soap_new_gml__UserDefinedCSPropertyType(soap*, int num) allocate array and default initialize values
/// - gml__UserDefinedCSPropertyType* soap_new_req_gml__UserDefinedCSPropertyType(soap*, ...) allocate, set required members
/// - gml__UserDefinedCSPropertyType* soap_new_set_gml__UserDefinedCSPropertyType(soap*, ...) allocate, set all public members
/// - gml__UserDefinedCSPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gml__UserDefinedCSPropertyType(soap*, gml__UserDefinedCSPropertyType*) deserialize from a stream
/// - int soap_write_gml__UserDefinedCSPropertyType(soap*, gml__UserDefinedCSPropertyType*) serialize to a stream
/// - gml__UserDefinedCSPropertyType* gml__UserDefinedCSPropertyType::soap_dup(soap*) returns deep copy of gml__UserDefinedCSPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__UserDefinedCSPropertyType::soap_del() deep deletes gml__UserDefinedCSPropertyType data members, use only after gml__UserDefinedCSPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__UserDefinedCSPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gml__UserDefinedCSPropertyType_sequence
    {
/// <PRE><BLOCKQUOTE>
///   gml:UserDefinedCS is a two- or three-dimensional coordinate system that consists of any combination of coordinate axes not covered by any other coordinate system type. A UserDefinedCS shall have two or three gml:axis property elements; the number of property elements shall equal the dimension of the CS.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":UserDefinedCS.
    gml__UserDefinedCSType*              UserDefinedCS                  1;	///< Required element.
    }                                   *__UserDefinedCSPropertyType_sequence 0;
//  END OF SEQUENCE
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":AssociationAttributeGroup">.
/// Attribute "nilReason" of XSD type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         gml__remoteSchema              0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.opengis.net/gml/3.2":SphericalCSPropertyType is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   gml:SphericalCSPropertyType is property type for association roles to a spherical coordinate system, either referencing or containing the definition of that coordinate system.
/// </BLOCKQUOTE></PRE>
/// class gml__SphericalCSPropertyType operations:
/// - gml__SphericalCSPropertyType* soap_new_gml__SphericalCSPropertyType(soap*) allocate and default initialize
/// - gml__SphericalCSPropertyType* soap_new_gml__SphericalCSPropertyType(soap*, int num) allocate array and default initialize values
/// - gml__SphericalCSPropertyType* soap_new_req_gml__SphericalCSPropertyType(soap*, ...) allocate, set required members
/// - gml__SphericalCSPropertyType* soap_new_set_gml__SphericalCSPropertyType(soap*, ...) allocate, set all public members
/// - gml__SphericalCSPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gml__SphericalCSPropertyType(soap*, gml__SphericalCSPropertyType*) deserialize from a stream
/// - int soap_write_gml__SphericalCSPropertyType(soap*, gml__SphericalCSPropertyType*) serialize to a stream
/// - gml__SphericalCSPropertyType* gml__SphericalCSPropertyType::soap_dup(soap*) returns deep copy of gml__SphericalCSPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__SphericalCSPropertyType::soap_del() deep deletes gml__SphericalCSPropertyType data members, use only after gml__SphericalCSPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__SphericalCSPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gml__SphericalCSPropertyType_sequence
    {
/// <PRE><BLOCKQUOTE>
///   gml:SphericalCS is a three-dimensional coordinate system with one distance measured from the origin and two angular coordinates. A SphericalCS shall have three gml:axis property elements.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":SphericalCS.
    gml__SphericalCSType*                SphericalCS                    1;	///< Required element.
    }                                   *__SphericalCSPropertyType_sequence 0;
//  END OF SEQUENCE
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":AssociationAttributeGroup">.
/// Attribute "nilReason" of XSD type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         gml__remoteSchema              0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.opengis.net/gml/3.2":PolarCSPropertyType is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   gml:PolarCSPropertyType is a property type for association roles to a polar coordinate system, either referencing or containing the definition of that coordinate system.
/// </BLOCKQUOTE></PRE>
/// class gml__PolarCSPropertyType operations:
/// - gml__PolarCSPropertyType* soap_new_gml__PolarCSPropertyType(soap*) allocate and default initialize
/// - gml__PolarCSPropertyType* soap_new_gml__PolarCSPropertyType(soap*, int num) allocate array and default initialize values
/// - gml__PolarCSPropertyType* soap_new_req_gml__PolarCSPropertyType(soap*, ...) allocate, set required members
/// - gml__PolarCSPropertyType* soap_new_set_gml__PolarCSPropertyType(soap*, ...) allocate, set all public members
/// - gml__PolarCSPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gml__PolarCSPropertyType(soap*, gml__PolarCSPropertyType*) deserialize from a stream
/// - int soap_write_gml__PolarCSPropertyType(soap*, gml__PolarCSPropertyType*) serialize to a stream
/// - gml__PolarCSPropertyType* gml__PolarCSPropertyType::soap_dup(soap*) returns deep copy of gml__PolarCSPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__PolarCSPropertyType::soap_del() deep deletes gml__PolarCSPropertyType data members, use only after gml__PolarCSPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__PolarCSPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gml__PolarCSPropertyType_sequence
    {
/// <PRE><BLOCKQUOTE>
///   gml:PolarCS ia s two-dimensional coordinate system in which position is specified by the distance from the origin and the angle between the line from the origin to a point and a reference direction. A PolarCS shall have two gml:axis property elements.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":PolarCS.
    gml__PolarCSType*                    PolarCS                        1;	///< Required element.
    }                                   *__PolarCSPropertyType_sequence 0;
//  END OF SEQUENCE
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":AssociationAttributeGroup">.
/// Attribute "nilReason" of XSD type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         gml__remoteSchema              0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.opengis.net/gml/3.2":CylindricalCSPropertyType is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   gml:CylindricalCSPropertyType is a property type for association roles to a cylindrical coordinate system, either referencing or containing the definition of that coordinate system.
/// </BLOCKQUOTE></PRE>
/// class gml__CylindricalCSPropertyType operations:
/// - gml__CylindricalCSPropertyType* soap_new_gml__CylindricalCSPropertyType(soap*) allocate and default initialize
/// - gml__CylindricalCSPropertyType* soap_new_gml__CylindricalCSPropertyType(soap*, int num) allocate array and default initialize values
/// - gml__CylindricalCSPropertyType* soap_new_req_gml__CylindricalCSPropertyType(soap*, ...) allocate, set required members
/// - gml__CylindricalCSPropertyType* soap_new_set_gml__CylindricalCSPropertyType(soap*, ...) allocate, set all public members
/// - gml__CylindricalCSPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gml__CylindricalCSPropertyType(soap*, gml__CylindricalCSPropertyType*) deserialize from a stream
/// - int soap_write_gml__CylindricalCSPropertyType(soap*, gml__CylindricalCSPropertyType*) serialize to a stream
/// - gml__CylindricalCSPropertyType* gml__CylindricalCSPropertyType::soap_dup(soap*) returns deep copy of gml__CylindricalCSPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__CylindricalCSPropertyType::soap_del() deep deletes gml__CylindricalCSPropertyType data members, use only after gml__CylindricalCSPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__CylindricalCSPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gml__CylindricalCSPropertyType_sequence
    {
/// <PRE><BLOCKQUOTE>
///   gml:CylindricalCS is a three-dimensional coordinate system consisting of a polar coordinate system extended by a straight coordinate axis perpendicular to the plane spanned by the polar coordinate system. A CylindricalCS shall have three gml:axis property elements.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":CylindricalCS.
    gml__CylindricalCSType*              CylindricalCS                  1;	///< Required element.
    }                                   *__CylindricalCSPropertyType_sequence 0;
//  END OF SEQUENCE
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":AssociationAttributeGroup">.
/// Attribute "nilReason" of XSD type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         gml__remoteSchema              0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.opengis.net/gml/3.2":AffineCSPropertyType is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   gml:AffineCSPropertyType is a property type for association roles to an affine coordinate system, either referencing or containing the definition of that coordinate system.
/// </BLOCKQUOTE></PRE>
/// class gml__AffineCSPropertyType operations:
/// - gml__AffineCSPropertyType* soap_new_gml__AffineCSPropertyType(soap*) allocate and default initialize
/// - gml__AffineCSPropertyType* soap_new_gml__AffineCSPropertyType(soap*, int num) allocate array and default initialize values
/// - gml__AffineCSPropertyType* soap_new_req_gml__AffineCSPropertyType(soap*, ...) allocate, set required members
/// - gml__AffineCSPropertyType* soap_new_set_gml__AffineCSPropertyType(soap*, ...) allocate, set all public members
/// - gml__AffineCSPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gml__AffineCSPropertyType(soap*, gml__AffineCSPropertyType*) deserialize from a stream
/// - int soap_write_gml__AffineCSPropertyType(soap*, gml__AffineCSPropertyType*) serialize to a stream
/// - gml__AffineCSPropertyType* gml__AffineCSPropertyType::soap_dup(soap*) returns deep copy of gml__AffineCSPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__AffineCSPropertyType::soap_del() deep deletes gml__AffineCSPropertyType data members, use only after gml__AffineCSPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__AffineCSPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gml__AffineCSPropertyType_sequence
    {
/// <PRE><BLOCKQUOTE>
///   gml:AffineCS is a two- or three-dimensional coordinate system with straight axes that are not necessarily orthogonal. An AffineCS shall have two or three gml:axis property elements; the number of property elements shall equal the dimension of the CS.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":AffineCS.
    gml__AffineCSType*                   AffineCS                       1;	///< Required element.
    }                                   *__AffineCSPropertyType_sequence 0;
//  END OF SEQUENCE
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":AssociationAttributeGroup">.
/// Attribute "nilReason" of XSD type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         gml__remoteSchema              0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.opengis.net/gml/3.2":CRSPropertyType is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   gml:CRSPropertyType is a property type for association roles to a CRS abstract coordinate reference system, either referencing or containing the definition of that CRS.
/// </BLOCKQUOTE></PRE>
/// class gml__CRSPropertyType operations:
/// - gml__CRSPropertyType* soap_new_gml__CRSPropertyType(soap*) allocate and default initialize
/// - gml__CRSPropertyType* soap_new_gml__CRSPropertyType(soap*, int num) allocate array and default initialize values
/// - gml__CRSPropertyType* soap_new_req_gml__CRSPropertyType(soap*, ...) allocate, set required members
/// - gml__CRSPropertyType* soap_new_set_gml__CRSPropertyType(soap*, ...) allocate, set all public members
/// - gml__CRSPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gml__CRSPropertyType(soap*, gml__CRSPropertyType*) deserialize from a stream
/// - int soap_write_gml__CRSPropertyType(soap*, gml__CRSPropertyType*) serialize to a stream
/// - gml__CRSPropertyType* gml__CRSPropertyType::soap_dup(soap*) returns deep copy of gml__CRSPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__CRSPropertyType::soap_del() deep deletes gml__CRSPropertyType data members, use only after gml__CRSPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__CRSPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gml__CRSPropertyType_sequence
    {
/// <PRE><BLOCKQUOTE>
///   gml:AbstractCRS specifies a coordinate reference system which is usually single but may be compound. This abstract complex type shall not be used, extended, or restricted, in a GML Application Schema, to define a concrete subtype with a meaning equivalent to a concrete subtype specified in this document.
/// </BLOCKQUOTE></PRE>
/// Reference "http://www.opengis.net/gml/3.2":AbstractCRS to abstract element.
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractCRS"> with global elements <CompoundCRS>
   $int                                  __unionAbstractCRS            ;	///< Union _gml__union_CRSPropertyType selector: set to SOAP_UNION__gml__union_CRSPropertyType_<fieldname>
/// Union for substitutionGroup gml__AbstractCRS.
    union _gml__union_CRSPropertyType
    {
/// <PRE><BLOCKQUOTE>
///   gml:CompundCRS is a coordinate reference system describing the position of points through two or more independent coordinate reference systems. It is associated with a non-repeating sequence of two or more instances of SingleCRS.
/// </BLOCKQUOTE></PRE>
/// Element "http://www.opengis.net/gml/3.2":CompoundCRS.
    gml__CompoundCRSType*                CompoundCRS                    nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_CRSPropertyType         ;
//  END OF SUBSTITUTIONS
    }                                   *__CRSPropertyType_sequence     0;
//  END OF SEQUENCE
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":AssociationAttributeGroup">.
/// Attribute "nilReason" of XSD type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         gml__remoteSchema              0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.opengis.net/gml/3.2":DatumPropertyType is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   gml:DatumPropertyType is a property type for association roles to a datum, either referencing or containing the definition of that datum.
/// </BLOCKQUOTE></PRE>
/// class gml__DatumPropertyType operations:
/// - gml__DatumPropertyType* soap_new_gml__DatumPropertyType(soap*) allocate and default initialize
/// - gml__DatumPropertyType* soap_new_gml__DatumPropertyType(soap*, int num) allocate array and default initialize values
/// - gml__DatumPropertyType* soap_new_req_gml__DatumPropertyType(soap*, ...) allocate, set required members
/// - gml__DatumPropertyType* soap_new_set_gml__DatumPropertyType(soap*, ...) allocate, set all public members
/// - gml__DatumPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gml__DatumPropertyType(soap*, gml__DatumPropertyType*) deserialize from a stream
/// - int soap_write_gml__DatumPropertyType(soap*, gml__DatumPropertyType*) serialize to a stream
/// - gml__DatumPropertyType* gml__DatumPropertyType::soap_dup(soap*) returns deep copy of gml__DatumPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__DatumPropertyType::soap_del() deep deletes gml__DatumPropertyType data members, use only after gml__DatumPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__DatumPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gml__DatumPropertyType_sequence
    {
/// <PRE><BLOCKQUOTE>
///   A gml:AbstractDatum specifies the relationship of a coordinate system to the earth, thus creating a coordinate reference system. A datum uses a parameter or set of parameters that determine the location of the origin of the coordinate reference system. Each datum subtype may be associated with only specific types of coordinate systems. This abstract complex type shall not be used, extended, or restricted, in a GML Application Schema, to define a concrete subtype with a meaning equivalent to a concrete subtype specified in this document.
/// </BLOCKQUOTE></PRE>
/// Reference "http://www.opengis.net/gml/3.2":AbstractDatum to abstract element.
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractDatum"> with global elements <GeodeticDatum> <EngineeringDatum> <ImageDatum> <VerticalDatum> <TemporalDatum>
   $int                                  __unionAbstractDatum          ;	///< Union _gml__union_DatumPropertyType selector: set to SOAP_UNION__gml__union_DatumPropertyType_<fieldname>
/// Union for substitutionGroup gml__AbstractDatum.
    union _gml__union_DatumPropertyType
    {
/// <PRE><BLOCKQUOTE>
///   gml:GeodeticDatum is a geodetic datum defines the precise location and orientation in 3-dimensional space of a defined ellipsoid (or sphere), or of a Cartesian coordinate system centered in this ellipsoid (or sphere).
/// </BLOCKQUOTE></PRE>
/// Element "http://www.opengis.net/gml/3.2":GeodeticDatum.
    gml__GeodeticDatumType*              GeodeticDatum                  nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   gml:EngineeringDatum defines the origin of an engineering coordinate reference system, and is used in a region around that origin. This origin may be fixed with respect to the earth (such as a defined point at a construction site), or be a defined point on a moving vehicle (such as on a ship or satellite).
/// </BLOCKQUOTE></PRE>
/// Element "http://www.opengis.net/gml/3.2":EngineeringDatum.
    gml__EngineeringDatumType*           EngineeringDatum               nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   gml:ImageDatum defines the origin of an image coordinate reference system, and is used in a local context only. For an image datum, the anchor definition is usually either the centre of the image or the corner of the image. For more information, see ISO 19111 B.3.5.
/// </BLOCKQUOTE></PRE>
/// Element "http://www.opengis.net/gml/3.2":ImageDatum.
    gml__ImageDatumType*                 ImageDatum                     nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   gml:VerticalDatum is a textual description and/or a set of parameters identifying a particular reference level surface used as a zero-height surface, including its position with respect to the Earth for any of the height types recognized by this International Standard.
/// </BLOCKQUOTE></PRE>
/// Element "http://www.opengis.net/gml/3.2":VerticalDatum.
    gml__VerticalDatumType*              VerticalDatum                  nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   A gml:TemporalDatum defines the origin of a Temporal Reference System. This type omits the "anchorDefinition" and "realizationEpoch" elements and adds the "origin" element with the dateTime type.
/// </BLOCKQUOTE></PRE>
/// Element "http://www.opengis.net/gml/3.2":TemporalDatum.
    gml__TemporalDatumType*              TemporalDatum                  nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_DatumPropertyType       ;
//  END OF SUBSTITUTIONS
    }                                   *__DatumPropertyType_sequence   0;
//  END OF SEQUENCE
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":AssociationAttributeGroup">.
/// Attribute "nilReason" of XSD type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         gml__remoteSchema              0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.opengis.net/gml/3.2":GeodeticDatumPropertyType is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   gml:GeodeticDatumPropertyType is a property type for association roles to a geodetic datum, either referencing or containing the definition of that datum.
/// </BLOCKQUOTE></PRE>
/// class gml__GeodeticDatumPropertyType operations:
/// - gml__GeodeticDatumPropertyType* soap_new_gml__GeodeticDatumPropertyType(soap*) allocate and default initialize
/// - gml__GeodeticDatumPropertyType* soap_new_gml__GeodeticDatumPropertyType(soap*, int num) allocate array and default initialize values
/// - gml__GeodeticDatumPropertyType* soap_new_req_gml__GeodeticDatumPropertyType(soap*, ...) allocate, set required members
/// - gml__GeodeticDatumPropertyType* soap_new_set_gml__GeodeticDatumPropertyType(soap*, ...) allocate, set all public members
/// - gml__GeodeticDatumPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gml__GeodeticDatumPropertyType(soap*, gml__GeodeticDatumPropertyType*) deserialize from a stream
/// - int soap_write_gml__GeodeticDatumPropertyType(soap*, gml__GeodeticDatumPropertyType*) serialize to a stream
/// - gml__GeodeticDatumPropertyType* gml__GeodeticDatumPropertyType::soap_dup(soap*) returns deep copy of gml__GeodeticDatumPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__GeodeticDatumPropertyType::soap_del() deep deletes gml__GeodeticDatumPropertyType data members, use only after gml__GeodeticDatumPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__GeodeticDatumPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gml__GeodeticDatumPropertyType_sequence
    {
/// <PRE><BLOCKQUOTE>
///   gml:GeodeticDatum is a geodetic datum defines the precise location and orientation in 3-dimensional space of a defined ellipsoid (or sphere), or of a Cartesian coordinate system centered in this ellipsoid (or sphere).
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":GeodeticDatum.
    gml__GeodeticDatumType*              GeodeticDatum                  1;	///< Required element.
    }                                   *__GeodeticDatumPropertyType_sequence 0;
//  END OF SEQUENCE
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":AssociationAttributeGroup">.
/// Attribute "nilReason" of XSD type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         gml__remoteSchema              0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.opengis.net/gml/3.2":EllipsoidPropertyType is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   gml:EllipsoidPropertyType is a property type for association roles to an ellipsoid, either referencing or containing the definition of that ellipsoid.
/// </BLOCKQUOTE></PRE>
/// class gml__EllipsoidPropertyType operations:
/// - gml__EllipsoidPropertyType* soap_new_gml__EllipsoidPropertyType(soap*) allocate and default initialize
/// - gml__EllipsoidPropertyType* soap_new_gml__EllipsoidPropertyType(soap*, int num) allocate array and default initialize values
/// - gml__EllipsoidPropertyType* soap_new_req_gml__EllipsoidPropertyType(soap*, ...) allocate, set required members
/// - gml__EllipsoidPropertyType* soap_new_set_gml__EllipsoidPropertyType(soap*, ...) allocate, set all public members
/// - gml__EllipsoidPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gml__EllipsoidPropertyType(soap*, gml__EllipsoidPropertyType*) deserialize from a stream
/// - int soap_write_gml__EllipsoidPropertyType(soap*, gml__EllipsoidPropertyType*) serialize to a stream
/// - gml__EllipsoidPropertyType* gml__EllipsoidPropertyType::soap_dup(soap*) returns deep copy of gml__EllipsoidPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__EllipsoidPropertyType::soap_del() deep deletes gml__EllipsoidPropertyType data members, use only after gml__EllipsoidPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__EllipsoidPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gml__EllipsoidPropertyType_sequence
    {
/// <PRE><BLOCKQUOTE>
///   A gml:Ellipsoid is a geometric figure that may be used to describe the approximate shape of the earth. In mathematical terms, it is a surface formed by the rotation of an ellipse about its minor axis.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":Ellipsoid.
    gml__EllipsoidType*                  Ellipsoid                      1;	///< Required element.
    }                                   *__EllipsoidPropertyType_sequence 0;
//  END OF SEQUENCE
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":AssociationAttributeGroup">.
/// Attribute "nilReason" of XSD type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         gml__remoteSchema              0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.opengis.net/gml/3.2":PrimeMeridianPropertyType is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   gml:PrimeMeridianPropertyType is a property type for association roles to a prime meridian, either referencing or containing the definition of that meridian.
/// </BLOCKQUOTE></PRE>
/// class gml__PrimeMeridianPropertyType operations:
/// - gml__PrimeMeridianPropertyType* soap_new_gml__PrimeMeridianPropertyType(soap*) allocate and default initialize
/// - gml__PrimeMeridianPropertyType* soap_new_gml__PrimeMeridianPropertyType(soap*, int num) allocate array and default initialize values
/// - gml__PrimeMeridianPropertyType* soap_new_req_gml__PrimeMeridianPropertyType(soap*, ...) allocate, set required members
/// - gml__PrimeMeridianPropertyType* soap_new_set_gml__PrimeMeridianPropertyType(soap*, ...) allocate, set all public members
/// - gml__PrimeMeridianPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gml__PrimeMeridianPropertyType(soap*, gml__PrimeMeridianPropertyType*) deserialize from a stream
/// - int soap_write_gml__PrimeMeridianPropertyType(soap*, gml__PrimeMeridianPropertyType*) serialize to a stream
/// - gml__PrimeMeridianPropertyType* gml__PrimeMeridianPropertyType::soap_dup(soap*) returns deep copy of gml__PrimeMeridianPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__PrimeMeridianPropertyType::soap_del() deep deletes gml__PrimeMeridianPropertyType data members, use only after gml__PrimeMeridianPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__PrimeMeridianPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gml__PrimeMeridianPropertyType_sequence
    {
/// <PRE><BLOCKQUOTE>
///   A gml:PrimeMeridian defines the origin from which longitude values are determined. The default value for the prime meridian gml:identifier value is "Greenwich".
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":PrimeMeridian.
    gml__PrimeMeridianType*              PrimeMeridian                  1;	///< Required element.
    }                                   *__PrimeMeridianPropertyType_sequence 0;
//  END OF SEQUENCE
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":AssociationAttributeGroup">.
/// Attribute "nilReason" of XSD type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         gml__remoteSchema              0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.opengis.net/gml/3.2":EngineeringDatumPropertyType is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   gml:EngineeringDatumPropertyType is a property type for association roles to an engineering datum, either referencing or containing the definition of that datum.
/// </BLOCKQUOTE></PRE>
/// class gml__EngineeringDatumPropertyType operations:
/// - gml__EngineeringDatumPropertyType* soap_new_gml__EngineeringDatumPropertyType(soap*) allocate and default initialize
/// - gml__EngineeringDatumPropertyType* soap_new_gml__EngineeringDatumPropertyType(soap*, int num) allocate array and default initialize values
/// - gml__EngineeringDatumPropertyType* soap_new_req_gml__EngineeringDatumPropertyType(soap*, ...) allocate, set required members
/// - gml__EngineeringDatumPropertyType* soap_new_set_gml__EngineeringDatumPropertyType(soap*, ...) allocate, set all public members
/// - gml__EngineeringDatumPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gml__EngineeringDatumPropertyType(soap*, gml__EngineeringDatumPropertyType*) deserialize from a stream
/// - int soap_write_gml__EngineeringDatumPropertyType(soap*, gml__EngineeringDatumPropertyType*) serialize to a stream
/// - gml__EngineeringDatumPropertyType* gml__EngineeringDatumPropertyType::soap_dup(soap*) returns deep copy of gml__EngineeringDatumPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__EngineeringDatumPropertyType::soap_del() deep deletes gml__EngineeringDatumPropertyType data members, use only after gml__EngineeringDatumPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__EngineeringDatumPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gml__EngineeringDatumPropertyType_sequence
    {
/// <PRE><BLOCKQUOTE>
///   gml:EngineeringDatum defines the origin of an engineering coordinate reference system, and is used in a region around that origin. This origin may be fixed with respect to the earth (such as a defined point at a construction site), or be a defined point on a moving vehicle (such as on a ship or satellite).
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":EngineeringDatum.
    gml__EngineeringDatumType*           EngineeringDatum               1;	///< Required element.
    }                                   *__EngineeringDatumPropertyType_sequence 0;
//  END OF SEQUENCE
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":AssociationAttributeGroup">.
/// Attribute "nilReason" of XSD type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         gml__remoteSchema              0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.opengis.net/gml/3.2":ImageDatumPropertyType is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   gml:ImageDatumPropertyType is a property type for association roles to an image datum, either referencing or containing the definition of that datum.
/// </BLOCKQUOTE></PRE>
/// class gml__ImageDatumPropertyType operations:
/// - gml__ImageDatumPropertyType* soap_new_gml__ImageDatumPropertyType(soap*) allocate and default initialize
/// - gml__ImageDatumPropertyType* soap_new_gml__ImageDatumPropertyType(soap*, int num) allocate array and default initialize values
/// - gml__ImageDatumPropertyType* soap_new_req_gml__ImageDatumPropertyType(soap*, ...) allocate, set required members
/// - gml__ImageDatumPropertyType* soap_new_set_gml__ImageDatumPropertyType(soap*, ...) allocate, set all public members
/// - gml__ImageDatumPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gml__ImageDatumPropertyType(soap*, gml__ImageDatumPropertyType*) deserialize from a stream
/// - int soap_write_gml__ImageDatumPropertyType(soap*, gml__ImageDatumPropertyType*) serialize to a stream
/// - gml__ImageDatumPropertyType* gml__ImageDatumPropertyType::soap_dup(soap*) returns deep copy of gml__ImageDatumPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__ImageDatumPropertyType::soap_del() deep deletes gml__ImageDatumPropertyType data members, use only after gml__ImageDatumPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__ImageDatumPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gml__ImageDatumPropertyType_sequence
    {
/// <PRE><BLOCKQUOTE>
///   gml:ImageDatum defines the origin of an image coordinate reference system, and is used in a local context only. For an image datum, the anchor definition is usually either the centre of the image or the corner of the image. For more information, see ISO 19111 B.3.5.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":ImageDatum.
    gml__ImageDatumType*                 ImageDatum                     1;	///< Required element.
    }                                   *__ImageDatumPropertyType_sequence 0;
//  END OF SEQUENCE
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":AssociationAttributeGroup">.
/// Attribute "nilReason" of XSD type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         gml__remoteSchema              0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.opengis.net/gml/3.2":VerticalDatumPropertyType is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   gml:VerticalDatumPropertyType is property type for association roles to a vertical datum, either referencing or containing the definition of that datum.
/// </BLOCKQUOTE></PRE>
/// class gml__VerticalDatumPropertyType operations:
/// - gml__VerticalDatumPropertyType* soap_new_gml__VerticalDatumPropertyType(soap*) allocate and default initialize
/// - gml__VerticalDatumPropertyType* soap_new_gml__VerticalDatumPropertyType(soap*, int num) allocate array and default initialize values
/// - gml__VerticalDatumPropertyType* soap_new_req_gml__VerticalDatumPropertyType(soap*, ...) allocate, set required members
/// - gml__VerticalDatumPropertyType* soap_new_set_gml__VerticalDatumPropertyType(soap*, ...) allocate, set all public members
/// - gml__VerticalDatumPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gml__VerticalDatumPropertyType(soap*, gml__VerticalDatumPropertyType*) deserialize from a stream
/// - int soap_write_gml__VerticalDatumPropertyType(soap*, gml__VerticalDatumPropertyType*) serialize to a stream
/// - gml__VerticalDatumPropertyType* gml__VerticalDatumPropertyType::soap_dup(soap*) returns deep copy of gml__VerticalDatumPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__VerticalDatumPropertyType::soap_del() deep deletes gml__VerticalDatumPropertyType data members, use only after gml__VerticalDatumPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__VerticalDatumPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gml__VerticalDatumPropertyType_sequence
    {
/// <PRE><BLOCKQUOTE>
///   gml:VerticalDatum is a textual description and/or a set of parameters identifying a particular reference level surface used as a zero-height surface, including its position with respect to the Earth for any of the height types recognized by this International Standard.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":VerticalDatum.
    gml__VerticalDatumType*              VerticalDatum                  1;	///< Required element.
    }                                   *__VerticalDatumPropertyType_sequence 0;
//  END OF SEQUENCE
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":AssociationAttributeGroup">.
/// Attribute "nilReason" of XSD type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         gml__remoteSchema              0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.opengis.net/gml/3.2":TemporalDatumPropertyType is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   gml:TemporalDatumPropertyType is a property type for association roles to a temporal datum, either referencing or containing the definition of that datum.
/// </BLOCKQUOTE></PRE>
/// class gml__TemporalDatumPropertyType operations:
/// - gml__TemporalDatumPropertyType* soap_new_gml__TemporalDatumPropertyType(soap*) allocate and default initialize
/// - gml__TemporalDatumPropertyType* soap_new_gml__TemporalDatumPropertyType(soap*, int num) allocate array and default initialize values
/// - gml__TemporalDatumPropertyType* soap_new_req_gml__TemporalDatumPropertyType(soap*, ...) allocate, set required members
/// - gml__TemporalDatumPropertyType* soap_new_set_gml__TemporalDatumPropertyType(soap*, ...) allocate, set all public members
/// - gml__TemporalDatumPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gml__TemporalDatumPropertyType(soap*, gml__TemporalDatumPropertyType*) deserialize from a stream
/// - int soap_write_gml__TemporalDatumPropertyType(soap*, gml__TemporalDatumPropertyType*) serialize to a stream
/// - gml__TemporalDatumPropertyType* gml__TemporalDatumPropertyType::soap_dup(soap*) returns deep copy of gml__TemporalDatumPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__TemporalDatumPropertyType::soap_del() deep deletes gml__TemporalDatumPropertyType data members, use only after gml__TemporalDatumPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__TemporalDatumPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gml__TemporalDatumPropertyType_sequence
    {
/// <PRE><BLOCKQUOTE>
///   A gml:TemporalDatum defines the origin of a Temporal Reference System. This type omits the "anchorDefinition" and "realizationEpoch" elements and adds the "origin" element with the dateTime type.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":TemporalDatum.
    gml__TemporalDatumType*              TemporalDatum                  1;	///< Required element.
    }                                   *__TemporalDatumPropertyType_sequence 0;
//  END OF SEQUENCE
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":AssociationAttributeGroup">.
/// Attribute "nilReason" of XSD type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         gml__remoteSchema              0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.opengis.net/gml/3.2":CoordinateOperationPropertyType is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   gml:CoordinateOperationPropertyType is a property type for association roles to a coordinate operation, either referencing or containing the definition of that coordinate operation.
/// </BLOCKQUOTE></PRE>
/// class gml__CoordinateOperationPropertyType operations:
/// - gml__CoordinateOperationPropertyType* soap_new_gml__CoordinateOperationPropertyType(soap*) allocate and default initialize
/// - gml__CoordinateOperationPropertyType* soap_new_gml__CoordinateOperationPropertyType(soap*, int num) allocate array and default initialize values
/// - gml__CoordinateOperationPropertyType* soap_new_req_gml__CoordinateOperationPropertyType(soap*, ...) allocate, set required members
/// - gml__CoordinateOperationPropertyType* soap_new_set_gml__CoordinateOperationPropertyType(soap*, ...) allocate, set all public members
/// - gml__CoordinateOperationPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gml__CoordinateOperationPropertyType(soap*, gml__CoordinateOperationPropertyType*) deserialize from a stream
/// - int soap_write_gml__CoordinateOperationPropertyType(soap*, gml__CoordinateOperationPropertyType*) serialize to a stream
/// - gml__CoordinateOperationPropertyType* gml__CoordinateOperationPropertyType::soap_dup(soap*) returns deep copy of gml__CoordinateOperationPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__CoordinateOperationPropertyType::soap_del() deep deletes gml__CoordinateOperationPropertyType data members, use only after gml__CoordinateOperationPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__CoordinateOperationPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gml__CoordinateOperationPropertyType_sequence
    {
/// <PRE><BLOCKQUOTE>
///   gml:AbstractCoordinateOperation is a mathematical operation on coordinates that transforms or converts coordinates to another coordinate reference system. Many but not all coordinate operations (from CRS A to CRS B) also uniquely define the inverse operation (from CRS B to CRS A). In some cases, the operation method algorithm for the inverse operation is the same as for the forward algorithm, but the signs of some operation parameter values shall be reversed. In other cases, different algorithms are required for the forward and inverse operations, but the same operation parameter values are used. If (some) entirely different parameter values are needed, a different coordinate operation shall be defined.
///   The optional coordinateOperationAccuracy property elements provide estimates of the impact of this coordinate operation on point position accuracy.
/// </BLOCKQUOTE></PRE>
/// Reference "http://www.opengis.net/gml/3.2":AbstractCoordinateOperation to abstract element.
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractCoordinateOperation"> with global elements <ConcatenatedOperation>
   $int                                  __unionAbstractCoordinateOperation;	///< Union _gml__union_CoordinateOperationPropertyType selector: set to SOAP_UNION__gml__union_CoordinateOperationPropertyType_<fieldname>
/// Union for substitutionGroup gml__AbstractCoordinateOperation.
    union _gml__union_CoordinateOperationPropertyType
    {
/// Element "http://www.opengis.net/gml/3.2":ConcatenatedOperation.
    gml__ConcatenatedOperationType*      ConcatenatedOperation          nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_CoordinateOperationPropertyType;
//  END OF SUBSTITUTIONS
    }                                   *__CoordinateOperationPropertyType_sequence 0;
//  END OF SEQUENCE
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":AssociationAttributeGroup">.
/// Attribute "nilReason" of XSD type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         gml__remoteSchema              0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.opengis.net/gml/3.2":SingleOperationPropertyType is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   gml:SingleOperationPropertyType is a property type for association roles to a single operation, either referencing or containing the definition of that single operation.
/// </BLOCKQUOTE></PRE>
/// class gml__SingleOperationPropertyType operations:
/// - gml__SingleOperationPropertyType* soap_new_gml__SingleOperationPropertyType(soap*) allocate and default initialize
/// - gml__SingleOperationPropertyType* soap_new_gml__SingleOperationPropertyType(soap*, int num) allocate array and default initialize values
/// - gml__SingleOperationPropertyType* soap_new_req_gml__SingleOperationPropertyType(soap*, ...) allocate, set required members
/// - gml__SingleOperationPropertyType* soap_new_set_gml__SingleOperationPropertyType(soap*, ...) allocate, set all public members
/// - gml__SingleOperationPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gml__SingleOperationPropertyType(soap*, gml__SingleOperationPropertyType*) deserialize from a stream
/// - int soap_write_gml__SingleOperationPropertyType(soap*, gml__SingleOperationPropertyType*) serialize to a stream
/// - gml__SingleOperationPropertyType* gml__SingleOperationPropertyType::soap_dup(soap*) returns deep copy of gml__SingleOperationPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__SingleOperationPropertyType::soap_del() deep deletes gml__SingleOperationPropertyType data members, use only after gml__SingleOperationPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__SingleOperationPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gml__SingleOperationPropertyType_sequence
    {
/// <PRE><BLOCKQUOTE>
///   gml:AbstractSingleOperation is a single (not concatenated) coordinate operation.
/// </BLOCKQUOTE></PRE>
/// Reference "http://www.opengis.net/gml/3.2":AbstractSingleOperation to abstract element.
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractSingleOperation"> with global elements <PassThroughOperation>
   $int                                  __unionAbstractSingleOperation;	///< Union _gml__union_SingleOperationPropertyType selector: set to SOAP_UNION__gml__union_SingleOperationPropertyType_<fieldname>
/// Union for substitutionGroup gml__AbstractSingleOperation.
    union _gml__union_SingleOperationPropertyType
    {
/// <PRE><BLOCKQUOTE>
///   gml:PassThroughOperation is a pass-through operation specifies that a subset of a coordinate tuple is subject to a specific coordinate operation.
///   The modifiedCoordinate property elements are an ordered sequence of positive integers defining the positions in a coordinate tuple of the coordinates affected by this pass-through operation. The AggregationAttributeGroup should be used to specify that the modifiedCoordinate elements are ordered.
/// </BLOCKQUOTE></PRE>
/// Element "http://www.opengis.net/gml/3.2":PassThroughOperation.
    gml__PassThroughOperationType*       PassThroughOperation           nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_SingleOperationPropertyType;
//  END OF SUBSTITUTIONS
    }                                   *__SingleOperationPropertyType_sequence 0;
//  END OF SEQUENCE
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":AssociationAttributeGroup">.
/// Attribute "nilReason" of XSD type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         gml__remoteSchema              0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.opengis.net/gml/3.2":GeneralConversionPropertyType is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   gml:GeneralConversionPropertyType is a property type for association roles to a general conversion, either referencing or containing the definition of that conversion.
/// </BLOCKQUOTE></PRE>
/// class gml__GeneralConversionPropertyType operations:
/// - gml__GeneralConversionPropertyType* soap_new_gml__GeneralConversionPropertyType(soap*) allocate and default initialize
/// - gml__GeneralConversionPropertyType* soap_new_gml__GeneralConversionPropertyType(soap*, int num) allocate array and default initialize values
/// - gml__GeneralConversionPropertyType* soap_new_req_gml__GeneralConversionPropertyType(soap*, ...) allocate, set required members
/// - gml__GeneralConversionPropertyType* soap_new_set_gml__GeneralConversionPropertyType(soap*, ...) allocate, set all public members
/// - gml__GeneralConversionPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gml__GeneralConversionPropertyType(soap*, gml__GeneralConversionPropertyType*) deserialize from a stream
/// - int soap_write_gml__GeneralConversionPropertyType(soap*, gml__GeneralConversionPropertyType*) serialize to a stream
/// - gml__GeneralConversionPropertyType* gml__GeneralConversionPropertyType::soap_dup(soap*) returns deep copy of gml__GeneralConversionPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__GeneralConversionPropertyType::soap_del() deep deletes gml__GeneralConversionPropertyType data members, use only after gml__GeneralConversionPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__GeneralConversionPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gml__GeneralConversionPropertyType_sequence
    {
/// <PRE><BLOCKQUOTE>
///   gm:AbstractGeneralConversion is an abstract operation on coordinates that does not include any change of datum. The best-known example of a coordinate conversion is a map projection. The parameters describing coordinate conversions are defined rather than empirically derived. Note that some conversions have no parameters. The operationVersion, sourceCRS, and targetCRS elements are omitted in a coordinate conversion.
///   This abstract complex type is expected to be extended for well-known operation methods with many Conversion instances, in GML Application Schemas that define operation-method-specialized element names and contents. This conversion uses an operation method, usually with associated parameter values. However, operation methods and parameter values are directly associated with concrete subtypes, not with this abstract type. All concrete types derived from this type shall extend this type to include a "usesMethod" element that references the "OperationMethod" element. Similarly, all concrete types derived from this type shall extend this type to include zero or more elements each named "uses...Value" that each use the type of an element substitutable for the "AbstractGeneralParameterValue" element.
/// </BLOCKQUOTE></PRE>
/// Reference "http://www.opengis.net/gml/3.2":AbstractGeneralConversion to abstract element.
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractGeneralConversion"> with global elements <Conversion>
   $int                                  __unionAbstractGeneralConversion;	///< Union _gml__union_GeneralConversionPropertyType selector: set to SOAP_UNION__gml__union_GeneralConversionPropertyType_<fieldname>
/// Union for substitutionGroup gml__AbstractGeneralConversion.
    union _gml__union_GeneralConversionPropertyType
    {
/// <PRE><BLOCKQUOTE>
///   gml:Conversion is a concrete operation on coordinates that does not include any change of Datum. The best-known example of a coordinate conversion is a map projection. The parameters describing coordinate conversions are defined rather than empirically derived. Note that some conversions have no parameters.
///   This concrete complex type can be used without using a GML Application Schema that defines operation-method-specialized element names and contents, especially for methods with only one Conversion instance.
///   The usesValue property elements are an unordered list of composition associations to the set of parameter values used by this conversion operation.
/// </BLOCKQUOTE></PRE>
/// Element "http://www.opengis.net/gml/3.2":Conversion.
    gml__ConversionType*                 Conversion                     nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_GeneralConversionPropertyType;
//  END OF SUBSTITUTIONS
    }                                   *__GeneralConversionPropertyType_sequence 0;
//  END OF SEQUENCE
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":AssociationAttributeGroup">.
/// Attribute "nilReason" of XSD type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         gml__remoteSchema              0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.opengis.net/gml/3.2":GeneralTransformationPropertyType is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   gml:GeneralTransformationPropertyType is a property type for association roles to a general transformation, either referencing or containing the definition of that transformation.
/// </BLOCKQUOTE></PRE>
/// class gml__GeneralTransformationPropertyType operations:
/// - gml__GeneralTransformationPropertyType* soap_new_gml__GeneralTransformationPropertyType(soap*) allocate and default initialize
/// - gml__GeneralTransformationPropertyType* soap_new_gml__GeneralTransformationPropertyType(soap*, int num) allocate array and default initialize values
/// - gml__GeneralTransformationPropertyType* soap_new_req_gml__GeneralTransformationPropertyType(soap*, ...) allocate, set required members
/// - gml__GeneralTransformationPropertyType* soap_new_set_gml__GeneralTransformationPropertyType(soap*, ...) allocate, set all public members
/// - gml__GeneralTransformationPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gml__GeneralTransformationPropertyType(soap*, gml__GeneralTransformationPropertyType*) deserialize from a stream
/// - int soap_write_gml__GeneralTransformationPropertyType(soap*, gml__GeneralTransformationPropertyType*) serialize to a stream
/// - gml__GeneralTransformationPropertyType* gml__GeneralTransformationPropertyType::soap_dup(soap*) returns deep copy of gml__GeneralTransformationPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__GeneralTransformationPropertyType::soap_del() deep deletes gml__GeneralTransformationPropertyType data members, use only after gml__GeneralTransformationPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__GeneralTransformationPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gml__GeneralTransformationPropertyType_sequence
    {
/// <PRE><BLOCKQUOTE>
///   gml:AbstractGeneralTransformation is an abstract operation on coordinates that usually includes a change of Datum. The parameters of a coordinate transformation are empirically derived from data containing the coordinates of a series of points in both coordinate reference systems. This computational process is usually "over-determined", allowing derivation of error (or accuracy) estimates for the transformation. Also, the stochastic nature of the parameters may result in multiple (different) versions of the same coordinate transformation. The operationVersion, sourceCRS, and targetCRS proeprty elements are mandatory in a coordinate transformation.
///   This abstract complex type is expected to be extended for well-known operation methods with many Transformation instances, in Application Schemas that define operation-method-specialized value element names and contents. This transformation uses an operation method with associated parameter values. However, operation methods and parameter values are directly associated with concrete subtypes, not with this abstract type. All concrete types derived from this type shall extend this type to include a "usesMethod" element that references one "OperationMethod" element. Similarly, all concrete types derived from this type shall extend this type to include one or more elements each named "uses...Value" that each use the type of an element substitutable for the "AbstractGeneralParameterValue" element.
/// </BLOCKQUOTE></PRE>
/// Reference "http://www.opengis.net/gml/3.2":AbstractGeneralTransformation to abstract element.
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractGeneralTransformation"> with global elements <Transformation>
   $int                                  __unionAbstractGeneralTransformation;	///< Union _gml__union_GeneralTransformationPropertyType selector: set to SOAP_UNION__gml__union_GeneralTransformationPropertyType_<fieldname>
/// Union for substitutionGroup gml__AbstractGeneralTransformation.
    union _gml__union_GeneralTransformationPropertyType
    {
/// <PRE><BLOCKQUOTE>
///   gml:Transformation is a concrete object element derived from gml:GeneralTransformation (13.6.2.13).
///   This concrete object can be used for all operation methods, without using a GML Application Schema that defines operation-method-specialized element names and contents, especially for methods with only one Transformation instance.
///   The parameterValue elements are an unordered list of composition associations to the set of parameter values used by this conversion operation.
/// </BLOCKQUOTE></PRE>
/// Element "http://www.opengis.net/gml/3.2":Transformation.
    gml__TransformationType*             Transformation                 nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_GeneralTransformationPropertyType;
//  END OF SUBSTITUTIONS
    }                                   *__GeneralTransformationPropertyType_sequence 0;
//  END OF SEQUENCE
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":AssociationAttributeGroup">.
/// Attribute "nilReason" of XSD type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         gml__remoteSchema              0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.opengis.net/gml/3.2":ConcatenatedOperationPropertyType is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   gml:ConcatenatedOperationPropertyType is a property type for association roles to a concatenated operation, either referencing or containing the definition of that concatenated operation.
/// </BLOCKQUOTE></PRE>
/// class gml__ConcatenatedOperationPropertyType operations:
/// - gml__ConcatenatedOperationPropertyType* soap_new_gml__ConcatenatedOperationPropertyType(soap*) allocate and default initialize
/// - gml__ConcatenatedOperationPropertyType* soap_new_gml__ConcatenatedOperationPropertyType(soap*, int num) allocate array and default initialize values
/// - gml__ConcatenatedOperationPropertyType* soap_new_req_gml__ConcatenatedOperationPropertyType(soap*, ...) allocate, set required members
/// - gml__ConcatenatedOperationPropertyType* soap_new_set_gml__ConcatenatedOperationPropertyType(soap*, ...) allocate, set all public members
/// - gml__ConcatenatedOperationPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gml__ConcatenatedOperationPropertyType(soap*, gml__ConcatenatedOperationPropertyType*) deserialize from a stream
/// - int soap_write_gml__ConcatenatedOperationPropertyType(soap*, gml__ConcatenatedOperationPropertyType*) serialize to a stream
/// - gml__ConcatenatedOperationPropertyType* gml__ConcatenatedOperationPropertyType::soap_dup(soap*) returns deep copy of gml__ConcatenatedOperationPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__ConcatenatedOperationPropertyType::soap_del() deep deletes gml__ConcatenatedOperationPropertyType data members, use only after gml__ConcatenatedOperationPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__ConcatenatedOperationPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gml__ConcatenatedOperationPropertyType_sequence
    {
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":ConcatenatedOperation.
    gml__ConcatenatedOperationType*      ConcatenatedOperation          1;	///< Required element.
    }                                   *__ConcatenatedOperationPropertyType_sequence 0;
//  END OF SEQUENCE
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":AssociationAttributeGroup">.
/// Attribute "nilReason" of XSD type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         gml__remoteSchema              0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.opengis.net/gml/3.2":PassThroughOperationPropertyType is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   gml:PassThroughOperationPropertyType is a property type for association roles to a pass through operation, either referencing or containing the definition of that pass through operation.
/// </BLOCKQUOTE></PRE>
/// class gml__PassThroughOperationPropertyType operations:
/// - gml__PassThroughOperationPropertyType* soap_new_gml__PassThroughOperationPropertyType(soap*) allocate and default initialize
/// - gml__PassThroughOperationPropertyType* soap_new_gml__PassThroughOperationPropertyType(soap*, int num) allocate array and default initialize values
/// - gml__PassThroughOperationPropertyType* soap_new_req_gml__PassThroughOperationPropertyType(soap*, ...) allocate, set required members
/// - gml__PassThroughOperationPropertyType* soap_new_set_gml__PassThroughOperationPropertyType(soap*, ...) allocate, set all public members
/// - gml__PassThroughOperationPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gml__PassThroughOperationPropertyType(soap*, gml__PassThroughOperationPropertyType*) deserialize from a stream
/// - int soap_write_gml__PassThroughOperationPropertyType(soap*, gml__PassThroughOperationPropertyType*) serialize to a stream
/// - gml__PassThroughOperationPropertyType* gml__PassThroughOperationPropertyType::soap_dup(soap*) returns deep copy of gml__PassThroughOperationPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__PassThroughOperationPropertyType::soap_del() deep deletes gml__PassThroughOperationPropertyType data members, use only after gml__PassThroughOperationPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__PassThroughOperationPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gml__PassThroughOperationPropertyType_sequence
    {
/// <PRE><BLOCKQUOTE>
///   gml:PassThroughOperation is a pass-through operation specifies that a subset of a coordinate tuple is subject to a specific coordinate operation.
///   The modifiedCoordinate property elements are an ordered sequence of positive integers defining the positions in a coordinate tuple of the coordinates affected by this pass-through operation. The AggregationAttributeGroup should be used to specify that the modifiedCoordinate elements are ordered.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":PassThroughOperation.
    gml__PassThroughOperationType*       PassThroughOperation           1;	///< Required element.
    }                                   *__PassThroughOperationPropertyType_sequence 0;
//  END OF SEQUENCE
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":AssociationAttributeGroup">.
/// Attribute "nilReason" of XSD type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         gml__remoteSchema              0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.opengis.net/gml/3.2":ConversionPropertyType is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   gml:ConversionPropertyType is a property type for association roles to a concrete general-purpose conversion, either referencing or containing the definition of that conversion.
/// </BLOCKQUOTE></PRE>
/// class gml__ConversionPropertyType operations:
/// - gml__ConversionPropertyType* soap_new_gml__ConversionPropertyType(soap*) allocate and default initialize
/// - gml__ConversionPropertyType* soap_new_gml__ConversionPropertyType(soap*, int num) allocate array and default initialize values
/// - gml__ConversionPropertyType* soap_new_req_gml__ConversionPropertyType(soap*, ...) allocate, set required members
/// - gml__ConversionPropertyType* soap_new_set_gml__ConversionPropertyType(soap*, ...) allocate, set all public members
/// - gml__ConversionPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gml__ConversionPropertyType(soap*, gml__ConversionPropertyType*) deserialize from a stream
/// - int soap_write_gml__ConversionPropertyType(soap*, gml__ConversionPropertyType*) serialize to a stream
/// - gml__ConversionPropertyType* gml__ConversionPropertyType::soap_dup(soap*) returns deep copy of gml__ConversionPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__ConversionPropertyType::soap_del() deep deletes gml__ConversionPropertyType data members, use only after gml__ConversionPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__ConversionPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gml__ConversionPropertyType_sequence
    {
/// <PRE><BLOCKQUOTE>
///   gml:Conversion is a concrete operation on coordinates that does not include any change of Datum. The best-known example of a coordinate conversion is a map projection. The parameters describing coordinate conversions are defined rather than empirically derived. Note that some conversions have no parameters.
///   This concrete complex type can be used without using a GML Application Schema that defines operation-method-specialized element names and contents, especially for methods with only one Conversion instance.
///   The usesValue property elements are an unordered list of composition associations to the set of parameter values used by this conversion operation.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":Conversion.
    gml__ConversionType*                 Conversion                     1;	///< Required element.
    }                                   *__ConversionPropertyType_sequence 0;
//  END OF SEQUENCE
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":AssociationAttributeGroup">.
/// Attribute "nilReason" of XSD type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         gml__remoteSchema              0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.opengis.net/gml/3.2":TransformationPropertyType is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   gml:TransformationPropertyType is a property type for association roles to a transformation, either referencing or containing the definition of that transformation.
/// </BLOCKQUOTE></PRE>
/// class gml__TransformationPropertyType operations:
/// - gml__TransformationPropertyType* soap_new_gml__TransformationPropertyType(soap*) allocate and default initialize
/// - gml__TransformationPropertyType* soap_new_gml__TransformationPropertyType(soap*, int num) allocate array and default initialize values
/// - gml__TransformationPropertyType* soap_new_req_gml__TransformationPropertyType(soap*, ...) allocate, set required members
/// - gml__TransformationPropertyType* soap_new_set_gml__TransformationPropertyType(soap*, ...) allocate, set all public members
/// - gml__TransformationPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gml__TransformationPropertyType(soap*, gml__TransformationPropertyType*) deserialize from a stream
/// - int soap_write_gml__TransformationPropertyType(soap*, gml__TransformationPropertyType*) serialize to a stream
/// - gml__TransformationPropertyType* gml__TransformationPropertyType::soap_dup(soap*) returns deep copy of gml__TransformationPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__TransformationPropertyType::soap_del() deep deletes gml__TransformationPropertyType data members, use only after gml__TransformationPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__TransformationPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gml__TransformationPropertyType_sequence
    {
/// <PRE><BLOCKQUOTE>
///   gml:Transformation is a concrete object element derived from gml:GeneralTransformation (13.6.2.13).
///   This concrete object can be used for all operation methods, without using a GML Application Schema that defines operation-method-specialized element names and contents, especially for methods with only one Transformation instance.
///   The parameterValue elements are an unordered list of composition associations to the set of parameter values used by this conversion operation.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":Transformation.
    gml__TransformationType*             Transformation                 1;	///< Required element.
    }                                   *__TransformationPropertyType_sequence 0;
//  END OF SEQUENCE
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":AssociationAttributeGroup">.
/// Attribute "nilReason" of XSD type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         gml__remoteSchema              0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.opengis.net/gml/3.2":AbstractGeneralParameterValueType is an abstract complexType.
///
/// class gml__AbstractGeneralParameterValueType operations:
/// - gml__AbstractGeneralParameterValueType* soap_new_gml__AbstractGeneralParameterValueType(soap*) allocate and default initialize
/// - gml__AbstractGeneralParameterValueType* soap_new_gml__AbstractGeneralParameterValueType(soap*, int num) allocate array and default initialize values
/// - gml__AbstractGeneralParameterValueType* soap_new_req_gml__AbstractGeneralParameterValueType(soap*, ...) allocate, set required members
/// - gml__AbstractGeneralParameterValueType* soap_new_set_gml__AbstractGeneralParameterValueType(soap*, ...) allocate, set all public members
/// - gml__AbstractGeneralParameterValueType::soap_default(soap*) default initialize members
/// - int soap_read_gml__AbstractGeneralParameterValueType(soap*, gml__AbstractGeneralParameterValueType*) deserialize from a stream
/// - int soap_write_gml__AbstractGeneralParameterValueType(soap*, gml__AbstractGeneralParameterValueType*) serialize to a stream
/// - gml__AbstractGeneralParameterValueType* gml__AbstractGeneralParameterValueType::soap_dup(soap*) returns deep copy of gml__AbstractGeneralParameterValueType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__AbstractGeneralParameterValueType::soap_del() deep deletes gml__AbstractGeneralParameterValueType data members, use only after gml__AbstractGeneralParameterValueType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__AbstractGeneralParameterValueType : public xsd__anyType
{ public:
};

/// @brief "http://www.opengis.net/gml/3.2":AbstractGeneralParameterValuePropertyType is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   gml:AbstractGeneralParameterValuePropertyType is a property type for inline association roles to a parameter value or group of parameter values, always containing the values.
/// </BLOCKQUOTE></PRE>
/// class gml__AbstractGeneralParameterValuePropertyType operations:
/// - gml__AbstractGeneralParameterValuePropertyType* soap_new_gml__AbstractGeneralParameterValuePropertyType(soap*) allocate and default initialize
/// - gml__AbstractGeneralParameterValuePropertyType* soap_new_gml__AbstractGeneralParameterValuePropertyType(soap*, int num) allocate array and default initialize values
/// - gml__AbstractGeneralParameterValuePropertyType* soap_new_req_gml__AbstractGeneralParameterValuePropertyType(soap*, ...) allocate, set required members
/// - gml__AbstractGeneralParameterValuePropertyType* soap_new_set_gml__AbstractGeneralParameterValuePropertyType(soap*, ...) allocate, set all public members
/// - gml__AbstractGeneralParameterValuePropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gml__AbstractGeneralParameterValuePropertyType(soap*, gml__AbstractGeneralParameterValuePropertyType*) deserialize from a stream
/// - int soap_write_gml__AbstractGeneralParameterValuePropertyType(soap*, gml__AbstractGeneralParameterValuePropertyType*) serialize to a stream
/// - gml__AbstractGeneralParameterValuePropertyType* gml__AbstractGeneralParameterValuePropertyType::soap_dup(soap*) returns deep copy of gml__AbstractGeneralParameterValuePropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__AbstractGeneralParameterValuePropertyType::soap_del() deep deletes gml__AbstractGeneralParameterValuePropertyType data members, use only after gml__AbstractGeneralParameterValuePropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__AbstractGeneralParameterValuePropertyType : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   gml:AbstractGeneralParameterValue is an abstract parameter value or group of parameter values.
///   This abstract complexType is expected to be extended and restricted for well-known operation methods with many instances, in Application Schemas that define operation-method-specialized element names and contents. Specific parameter value elements are directly contained in concrete subtypes, not in this abstract type. All concrete types derived from this type shall extend this type to include one "...Value" element with an appropriate type, which should be one of the element types allowed in the ParameterValueType. In addition, all derived concrete types shall extend this type to include a "operationParameter" property element that references one element substitutable for the "OperationParameter" object element.
/// </BLOCKQUOTE></PRE>
/// Reference "http://www.opengis.net/gml/3.2":AbstractGeneralParameterValue to abstract element.
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractGeneralParameterValue"> with global elements <ParameterValue> <ParameterValueGroup>
   $int                                  __unionAbstractGeneralParameterValue;	///< Union _gml__union_AbstractGeneralParameterValuePropertyType selector: set to SOAP_UNION__gml__union_AbstractGeneralParameterValuePropertyType_<fieldname>
/// Union for substitutionGroup gml__AbstractGeneralParameterValue.
    union _gml__union_AbstractGeneralParameterValuePropertyType
    {
/// <PRE><BLOCKQUOTE>
///   gml:ParameterValue is a parameter value, an ordered sequence of values, or a reference to a file of parameter values. This concrete complex type may be used for operation methods without using an Application Schema that defines operation-method-specialized element names and contents, especially for methods with only one instance. This complex type may be used, extended, or restricted for well-known operation methods, especially for methods with many instances.
/// </BLOCKQUOTE></PRE>
/// Element "http://www.opengis.net/gml/3.2":ParameterValue.
    gml__ParameterValueType*             ParameterValue                 nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   gml:ParameterValueGroup is a group of related parameter values. The same group can be repeated more than once in a Conversion, Transformation, or higher level ParameterValueGroup, if those instances contain different values of one or more parameterValues which suitably distinquish among those groups. This concrete complex type can be used for operation methods without using an Application Schema that defines operation-method-specialized element names and contents. This complex type may be used, extended, or restricted for well-known operation methods, especially for methods with only one instance.
///   The parameterValue elements are an unordered set of composition association roles to the parameter values and groups of values included in this group.
/// </BLOCKQUOTE></PRE>
/// Element "http://www.opengis.net/gml/3.2":ParameterValueGroup.
    gml__ParameterValueGroupType*        ParameterValueGroup            nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_AbstractGeneralParameterValuePropertyType;
//  END OF SUBSTITUTIONS
};

/// @brief "http://www.opengis.net/gml/3.2":OperationMethodPropertyType is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   gml:OperationMethodPropertyType is a property type for association roles to a concrete general-purpose operation method, either referencing or containing the definition of that method.
/// </BLOCKQUOTE></PRE>
/// class gml__OperationMethodPropertyType operations:
/// - gml__OperationMethodPropertyType* soap_new_gml__OperationMethodPropertyType(soap*) allocate and default initialize
/// - gml__OperationMethodPropertyType* soap_new_gml__OperationMethodPropertyType(soap*, int num) allocate array and default initialize values
/// - gml__OperationMethodPropertyType* soap_new_req_gml__OperationMethodPropertyType(soap*, ...) allocate, set required members
/// - gml__OperationMethodPropertyType* soap_new_set_gml__OperationMethodPropertyType(soap*, ...) allocate, set all public members
/// - gml__OperationMethodPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gml__OperationMethodPropertyType(soap*, gml__OperationMethodPropertyType*) deserialize from a stream
/// - int soap_write_gml__OperationMethodPropertyType(soap*, gml__OperationMethodPropertyType*) serialize to a stream
/// - gml__OperationMethodPropertyType* gml__OperationMethodPropertyType::soap_dup(soap*) returns deep copy of gml__OperationMethodPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__OperationMethodPropertyType::soap_del() deep deletes gml__OperationMethodPropertyType data members, use only after gml__OperationMethodPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__OperationMethodPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gml__OperationMethodPropertyType_sequence
    {
/// <PRE><BLOCKQUOTE>
///   gml:OperationMethod is a method (algorithm or procedure) used to perform a coordinate operation. Most operation methods use a number of operation parameters, although some coordinate conversions use none. Each coordinate operation using the method assigns values to these parameters.
///   The parameter elements are an unordered list of associations to the set of operation parameters and parameter groups used by this operation method.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":OperationMethod.
    gml__OperationMethodType*            OperationMethod                1;	///< Required element.
    }                                   *__OperationMethodPropertyType_sequence 0;
//  END OF SEQUENCE
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":AssociationAttributeGroup">.
/// Attribute "nilReason" of XSD type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         gml__remoteSchema              0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.opengis.net/gml/3.2":AbstractGeneralOperationParameterPropertyType is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   gml:AbstractGeneralOperationParameterPropertyType is a property type for association roles to an operation parameter or group, either referencing or containing the definition of that parameter or group.
/// </BLOCKQUOTE></PRE>
/// class gml__AbstractGeneralOperationParameterPropertyType operations:
/// - gml__AbstractGeneralOperationParameterPropertyType* soap_new_gml__AbstractGeneralOperationParameterPropertyType(soap*) allocate and default initialize
/// - gml__AbstractGeneralOperationParameterPropertyType* soap_new_gml__AbstractGeneralOperationParameterPropertyType(soap*, int num) allocate array and default initialize values
/// - gml__AbstractGeneralOperationParameterPropertyType* soap_new_req_gml__AbstractGeneralOperationParameterPropertyType(soap*, ...) allocate, set required members
/// - gml__AbstractGeneralOperationParameterPropertyType* soap_new_set_gml__AbstractGeneralOperationParameterPropertyType(soap*, ...) allocate, set all public members
/// - gml__AbstractGeneralOperationParameterPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gml__AbstractGeneralOperationParameterPropertyType(soap*, gml__AbstractGeneralOperationParameterPropertyType*) deserialize from a stream
/// - int soap_write_gml__AbstractGeneralOperationParameterPropertyType(soap*, gml__AbstractGeneralOperationParameterPropertyType*) serialize to a stream
/// - gml__AbstractGeneralOperationParameterPropertyType* gml__AbstractGeneralOperationParameterPropertyType::soap_dup(soap*) returns deep copy of gml__AbstractGeneralOperationParameterPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__AbstractGeneralOperationParameterPropertyType::soap_del() deep deletes gml__AbstractGeneralOperationParameterPropertyType data members, use only after gml__AbstractGeneralOperationParameterPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__AbstractGeneralOperationParameterPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gml__AbstractGeneralOperationParameterPropertyType_sequence
    {
/// <PRE><BLOCKQUOTE>
///   gml:GeneralOperationParameter is the abstract definition of a parameter or group of parameters used by an operation method.
/// </BLOCKQUOTE></PRE>
/// Reference "http://www.opengis.net/gml/3.2":AbstractGeneralOperationParameter to abstract element.
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractGeneralOperationParameter"> with global elements <OperationParameter> <OperationParameterGroup>
   $int                                  __unionAbstractGeneralOperationParameter;	///< Union _gml__union_AbstractGeneralOperationParameterPropertyType selector: set to SOAP_UNION__gml__union_AbstractGeneralOperationParameterPropertyType_<fieldname>
/// Union for substitutionGroup gml__AbstractGeneralOperationParameter.
    union _gml__union_AbstractGeneralOperationParameterPropertyType
    {
/// <PRE><BLOCKQUOTE>
///   gml:OperationParameter is the definition of a parameter used by an operation method. Most parameter values are numeric, but other types of parameter values are possible. This complex type is expected to be used or extended for all operation methods, without defining operation-method-specialized element names.
/// </BLOCKQUOTE></PRE>
/// Element "http://www.opengis.net/gml/3.2":OperationParameter.
    gml__OperationParameterType*         OperationParameter             nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   gml:OperationParameterGroup is the definition of a group of parameters used by an operation method. This complex type is expected to be used or extended for all applicable operation methods, without defining operation-method-specialized element names.
///   The generalOperationParameter elements are an unordered list of associations to the set of operation parameters that are members of this group.
/// </BLOCKQUOTE></PRE>
/// Element "http://www.opengis.net/gml/3.2":OperationParameterGroup.
    gml__OperationParameterGroupType*    OperationParameterGroup        nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_AbstractGeneralOperationParameterPropertyType;
//  END OF SUBSTITUTIONS
    }                                   *__AbstractGeneralOperationParameterPropertyType_sequence 0;
//  END OF SEQUENCE
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":AssociationAttributeGroup">.
/// Attribute "nilReason" of XSD type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         gml__remoteSchema              0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.opengis.net/gml/3.2":OperationParameterPropertyType is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   gml:OperationParameterPropertyType is a property type for association roles to an operation parameter, either referencing or containing the definition of that parameter.
/// </BLOCKQUOTE></PRE>
/// class gml__OperationParameterPropertyType operations:
/// - gml__OperationParameterPropertyType* soap_new_gml__OperationParameterPropertyType(soap*) allocate and default initialize
/// - gml__OperationParameterPropertyType* soap_new_gml__OperationParameterPropertyType(soap*, int num) allocate array and default initialize values
/// - gml__OperationParameterPropertyType* soap_new_req_gml__OperationParameterPropertyType(soap*, ...) allocate, set required members
/// - gml__OperationParameterPropertyType* soap_new_set_gml__OperationParameterPropertyType(soap*, ...) allocate, set all public members
/// - gml__OperationParameterPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gml__OperationParameterPropertyType(soap*, gml__OperationParameterPropertyType*) deserialize from a stream
/// - int soap_write_gml__OperationParameterPropertyType(soap*, gml__OperationParameterPropertyType*) serialize to a stream
/// - gml__OperationParameterPropertyType* gml__OperationParameterPropertyType::soap_dup(soap*) returns deep copy of gml__OperationParameterPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__OperationParameterPropertyType::soap_del() deep deletes gml__OperationParameterPropertyType data members, use only after gml__OperationParameterPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__OperationParameterPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gml__OperationParameterPropertyType_sequence
    {
/// <PRE><BLOCKQUOTE>
///   gml:OperationParameter is the definition of a parameter used by an operation method. Most parameter values are numeric, but other types of parameter values are possible. This complex type is expected to be used or extended for all operation methods, without defining operation-method-specialized element names.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":OperationParameter.
    gml__OperationParameterType*         OperationParameter             1;	///< Required element.
    }                                   *__OperationParameterPropertyType_sequence 0;
//  END OF SEQUENCE
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":AssociationAttributeGroup">.
/// Attribute "nilReason" of XSD type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         gml__remoteSchema              0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.opengis.net/gml/3.2":OperationParameterGroupPropertyType is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   gml:OperationParameterPropertyType is a property type for association roles to an operation parameter group, either referencing or containing the definition of that parameter group.
/// </BLOCKQUOTE></PRE>
/// class gml__OperationParameterGroupPropertyType operations:
/// - gml__OperationParameterGroupPropertyType* soap_new_gml__OperationParameterGroupPropertyType(soap*) allocate and default initialize
/// - gml__OperationParameterGroupPropertyType* soap_new_gml__OperationParameterGroupPropertyType(soap*, int num) allocate array and default initialize values
/// - gml__OperationParameterGroupPropertyType* soap_new_req_gml__OperationParameterGroupPropertyType(soap*, ...) allocate, set required members
/// - gml__OperationParameterGroupPropertyType* soap_new_set_gml__OperationParameterGroupPropertyType(soap*, ...) allocate, set all public members
/// - gml__OperationParameterGroupPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gml__OperationParameterGroupPropertyType(soap*, gml__OperationParameterGroupPropertyType*) deserialize from a stream
/// - int soap_write_gml__OperationParameterGroupPropertyType(soap*, gml__OperationParameterGroupPropertyType*) serialize to a stream
/// - gml__OperationParameterGroupPropertyType* gml__OperationParameterGroupPropertyType::soap_dup(soap*) returns deep copy of gml__OperationParameterGroupPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__OperationParameterGroupPropertyType::soap_del() deep deletes gml__OperationParameterGroupPropertyType data members, use only after gml__OperationParameterGroupPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__OperationParameterGroupPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gml__OperationParameterGroupPropertyType_sequence
    {
/// <PRE><BLOCKQUOTE>
///   gml:OperationParameterGroup is the definition of a group of parameters used by an operation method. This complex type is expected to be used or extended for all applicable operation methods, without defining operation-method-specialized element names.
///   The generalOperationParameter elements are an unordered list of associations to the set of operation parameters that are members of this group.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":OperationParameterGroup.
    gml__OperationParameterGroupType*    OperationParameterGroup        1;	///< Required element.
    }                                   *__OperationParameterGroupPropertyType_sequence 0;
//  END OF SEQUENCE
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":AssociationAttributeGroup">.
/// Attribute "nilReason" of XSD type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         gml__remoteSchema              0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.opengis.net/gml/3.2":ProcedurePropertyType is a complexType.
///
/// class gml__ProcedurePropertyType operations:
/// - gml__ProcedurePropertyType* soap_new_gml__ProcedurePropertyType(soap*) allocate and default initialize
/// - gml__ProcedurePropertyType* soap_new_gml__ProcedurePropertyType(soap*, int num) allocate array and default initialize values
/// - gml__ProcedurePropertyType* soap_new_req_gml__ProcedurePropertyType(soap*, ...) allocate, set required members
/// - gml__ProcedurePropertyType* soap_new_set_gml__ProcedurePropertyType(soap*, ...) allocate, set all public members
/// - gml__ProcedurePropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gml__ProcedurePropertyType(soap*, gml__ProcedurePropertyType*) deserialize from a stream
/// - int soap_write_gml__ProcedurePropertyType(soap*, gml__ProcedurePropertyType*) serialize to a stream
/// - gml__ProcedurePropertyType* gml__ProcedurePropertyType::soap_dup(soap*) returns deep copy of gml__ProcedurePropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__ProcedurePropertyType::soap_del() deep deletes gml__ProcedurePropertyType data members, use only after gml__ProcedurePropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__ProcedurePropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gml__ProcedurePropertyType_sequence
    {
/// <PRE><BLOCKQUOTE>
///   This abstract element serves as the head of a substitution group which may contain any elements whose content model is derived from gml:AbstractFeatureType. This may be used as a variable in the construction of content models. gml:AbstractFeature may be thought of as "anything that is a GML feature" and may be used to define variables or templates in which the value of a GML property is "any feature". This occurs in particular in a GML feature collection where the feature member properties contain one or multiple copies of gml:AbstractFeature respectively.
/// </BLOCKQUOTE></PRE>
/// Reference "http://www.opengis.net/gml/3.2":AbstractFeature to abstract element.
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractFeature"> with global elements <DynamicFeature> <Observation> <FeatureCollection> <SpatialDataSet> <SpatialDataSet> <ZoningElement> <ZoningElement> <OfficialDocumentation> <OfficialDocumentation> <SupplementaryRegulation> <SupplementaryRegulation> <SpatialPlan> <SpatialPlan>
   $int                                  __unionAbstractFeature        ;	///< Union _gml__union_ProcedurePropertyType selector: set to SOAP_UNION__gml__union_ProcedurePropertyType_<fieldname>
/// Union for substitutionGroup gml__AbstractFeature.
    union _gml__union_ProcedurePropertyType
    {
/// <PRE><BLOCKQUOTE>
///   States are captured by time-stamped instances of a feature. The content model extends the standard gml:AbstractFeatureType with the gml:dynamicProperties model group.
///   Each time-stamped instance represents a 'snapshot' of a feature. The dynamic feature classes will normally be extended to suit particular applications. A dynamic feature bears either a time stamp or a history.
/// </BLOCKQUOTE></PRE>
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="DynamicFeature"> with global elements <DynamicFeatureCollection>
/// <PRE><BLOCKQUOTE>
///   States are captured by time-stamped instances of a feature. The content model extends the standard gml:AbstractFeatureType with the gml:dynamicProperties model group.
///   Each time-stamped instance represents a 'snapshot' of a feature. The dynamic feature classes will normally be extended to suit particular applications. A dynamic feature bears either a time stamp or a history.
/// </BLOCKQUOTE></PRE>
/// Element "http://www.opengis.net/gml/3.2":DynamicFeature.
    gml__DynamicFeatureType*             DynamicFeature                 nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   A gml:DynamicFeatureCollection is a feature collection that has a gml:validTime property (i.e. is a snapshot of the feature collection) or which has a gml:history property that contains one or more gml:AbstractTimeSlices each of which contain values of the time varying properties of the feature collection. Note that the gml:DynamicFeatureCollection may be one of the following:
///   1. A feature collection which consists of static feature members (members do not change in time) but which has properties of the collection object as a whole that do change in time . 2. A feature collection which consists of dynamic feature members (the members are gml:DynamicFeatures) but which also has properties of the collection as a whole that vary in time.
/// </BLOCKQUOTE></PRE>
/// Element "http://www.opengis.net/gml/3.2":DynamicFeatureCollection.
    gml__DynamicFeatureCollectionType*   DynamicFeatureCollection       nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
//  END OF SUBSTITUTIONS
/// <PRE><BLOCKQUOTE>
///   The content model is a straightforward extension of gml:AbstractFeatureType; it automatically has the gml:identifier, gml:description, gml:descriptionReference, gml:name, and gml:boundedBy properties. The gml:validTime element describes the time of the observation. Note that this may be a time instant or a time period.
///   The gml:using property contains or references a description of a sensor, instrument or procedure used for the observation.
///   The gml:target property contains or references the specimen, region or station which is the object of the observation. This property is particularly useful for remote observations, such as photographs, where a generic location property might apply to the location of the camera or the location of the field of view, and thus may be ambiguous. The gml:subject element is provided as a convenient synonym for gml:target. This is the term commonly used in phtotography. The gml:resultOf property indicates the result of the observation. The value may be inline, or a reference to a value elsewhere.
/// </BLOCKQUOTE></PRE>
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="Observation"> with global elements <DirectedObservation>
/// <PRE><BLOCKQUOTE>
///   The content model is a straightforward extension of gml:AbstractFeatureType; it automatically has the gml:identifier, gml:description, gml:descriptionReference, gml:name, and gml:boundedBy properties. The gml:validTime element describes the time of the observation. Note that this may be a time instant or a time period.
///   The gml:using property contains or references a description of a sensor, instrument or procedure used for the observation.
///   The gml:target property contains or references the specimen, region or station which is the object of the observation. This property is particularly useful for remote observations, such as photographs, where a generic location property might apply to the location of the camera or the location of the field of view, and thus may be ambiguous. The gml:subject element is provided as a convenient synonym for gml:target. This is the term commonly used in phtotography. The gml:resultOf property indicates the result of the observation. The value may be inline, or a reference to a value elsewhere.
/// </BLOCKQUOTE></PRE>
/// Element "http://www.opengis.net/gml/3.2":Observation.
    gml__ObservationType*                Observation                    nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   A gml:DirectedObservation is the same as an observation except that it adds an additional gml:direction property. This is the direction in which the observation was acquired. Clearly this applies only to certain types of observations such as visual observations by people, or observations obtained from terrestrial cameras.
/// </BLOCKQUOTE></PRE>
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="DirectedObservation"> with global elements <DirectedObservationAtDistance>
/// <PRE><BLOCKQUOTE>
///   A gml:DirectedObservation is the same as an observation except that it adds an additional gml:direction property. This is the direction in which the observation was acquired. Clearly this applies only to certain types of observations such as visual observations by people, or observations obtained from terrestrial cameras.
/// </BLOCKQUOTE></PRE>
/// Element "http://www.opengis.net/gml/3.2":DirectedObservation.
    gml__DirectedObservationType*        DirectedObservation            nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   gml:DirectedObservationAtDistance adds an additional distance property. This is the distance from the observer to the subject of the observation. Clearly this applies only to certain types of observations such as visual observations by people, or observations obtained from terrestrial cameras.
/// </BLOCKQUOTE></PRE>
/// Element "http://www.opengis.net/gml/3.2":DirectedObservationAtDistance.
    gml__DirectedObservationAtDistanceType*  DirectedObservationAtDistance  nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
//  END OF SUBSTITUTIONS
//  END OF SUBSTITUTIONS
/// Element "http://www.opengis.net/gml/3.2":FeatureCollection.
    gml__FeatureCollectionType*          FeatureCollection              nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   -- Definition --
///   Identifiable collection of spatial data.
///   -- Description --
///   WARNING This element has been deprecated in v3.3.1 of this schema (in accordance with D2.7 v3.3 Recommendation 11 stating that wfs:FeatureCollection should be used instead of base:SpatialDataSet).
///   NOTE The type SpatialDataSet is offered as a pre-defined type for spatial data sets. The scope of this type is packaging pre-defined data sets for the non-direct access download service. It may be reused in thematic application schemas, but if it does not fit an application-schema-specific data set object should be modelled. This type may have the same name and definition like this type, but may have a different set of properties.
///   This type specifies three properties: an external object identifier, a container for metadata (may be void), and an association to zero or more spatial objects.
/// </BLOCKQUOTE></PRE>
/// Element "http://inspire.ec.europa.eu/schemas/base/3.3":SpatialDataSet.
    base__SpatialDataSetType*            base__SpatialDataSet           nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   -- Definition --
///   Identifiable collection of spatial data.
///   -- Description --
///   WARNING This element has been deprecated in v3.3.1 of this schema (in accordance with D2.7 v3.3 Recommendation 11 stating that wfs:FeatureCollection should be used instead of base:SpatialDataSet).
///   NOTE The type SpatialDataSet is offered as a pre-defined type for spatial data sets. The scope of this type is packaging pre-defined data sets for the non-direct access download service. It may be reused in thematic application schemas, but if it does not fit an application-schema-specific data set object should be modelled. This type may have the same name and definition like this type, but may have a different set of properties.
///   This type specifies three properties: an external object identifier, a container for metadata (may be void), and an association to zero or more spatial objects.
/// </BLOCKQUOTE></PRE>
/// Element "http://inspire.ec.europa.eu/schemas/base/3.3":SpatialDataSet.
    //jld base__SpatialDataSetType*            base__SpatialDataSet           nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   -- Name --
///   zoning element
///   -- Definition --
///   A spatial object which is homogeneous regarding the permitted uses of land based on zoning which separate one set of land uses from another.
///   -- Description --
///   Zoning elements refer to the regulation of the kinds of activities which will be acceptable on particular lots (such as open space, residential, agricultural, commercial or industrial). The intensity of use at which those activities can be performed (from low-density housing such as single family homes to high-density such as high-rise apartment buildings), the height of buildings, the amount of space that structures may occupy, the proportions of the types of space on a lot, such as how much landscaped space, impervious surface, traffic lanes, and parking may be provided.
/// </BLOCKQUOTE></PRE>
/// Element "http://inspire.ec.europa.eu/schemas/plu/3.0":ZoningElement.
    plu__ZoningElementType*              plu__ZoningElement             nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   -- Name --
///   zoning element
///   -- Definition --
///   A spatial object which is homogeneous regarding the permitted uses of land based on zoning which separate one set of land uses from another.
///   -- Description --
///   Zoning elements refer to the regulation of the kinds of activities which will be acceptable on particular lots (such as open space, residential, agricultural, commercial or industrial). The intensity of use at which those activities can be performed (from low-density housing such as single family homes to high-density such as high-rise apartment buildings), the height of buildings, the amount of space that structures may occupy, the proportions of the types of space on a lot, such as how much landscaped space, impervious surface, traffic lanes, and parking may be provided.
/// </BLOCKQUOTE></PRE>
/// Element "http://inspire.ec.europa.eu/schemas/plu/3.0":ZoningElement.
    //jld plu__ZoningElementType*              plu__ZoningElement             nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   -- Name --
///   official documentation
///   -- Definition --
///   The official documentation that composes the spatial plan; it may be composed of, the applicable legislation, the regulations, cartographic elements, descriptive elements that may be associated with the complete spatial plan, a zoning element or a supplementary regulation . In some Member States the actual textual regulation will be part of the data set (and can be put in the regulationText attribute), in other Member States the text will not be part of the data set and will be referenced via a reference to a document or a legal act.
///   At least one of the three voidable values shall be provided.
///   -- Description --
///   NOTE: The LegislationCitation is the value type of the attribute regulation reference. An example of a regulation reference would be: http://www2.vlaanderen.be /ruimtelijk/grup/00350/00362_00001/data/ 212_00362_00001_d_0BVR.pdf.
/// </BLOCKQUOTE></PRE>
/// Element "http://inspire.ec.europa.eu/schemas/plu/3.0":OfficialDocumentation.
    plu__OfficialDocumentationType*      plu__OfficialDocumentation     nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   -- Name --
///   official documentation
///   -- Definition --
///   The official documentation that composes the spatial plan; it may be composed of, the applicable legislation, the regulations, cartographic elements, descriptive elements that may be associated with the complete spatial plan, a zoning element or a supplementary regulation . In some Member States the actual textual regulation will be part of the data set (and can be put in the regulationText attribute), in other Member States the text will not be part of the data set and will be referenced via a reference to a document or a legal act.
///   At least one of the three voidable values shall be provided.
///   -- Description --
///   NOTE: The LegislationCitation is the value type of the attribute regulation reference. An example of a regulation reference would be: http://www2.vlaanderen.be /ruimtelijk/grup/00350/00362_00001/data/ 212_00362_00001_d_0BVR.pdf.
/// </BLOCKQUOTE></PRE>
/// Element "http://inspire.ec.europa.eu/schemas/plu/3.0":OfficialDocumentation.
    //jld plu__OfficialDocumentationType*      plu__OfficialDocumentation     nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   -- Name --
///   supplementary regulation
///   -- Definition --
///   A spatial object (point, line or polygon) of a spatial plan that provides supplementary information and/or limitation of the use of land/water necessary for spatial planning reasons or to formalise external rules defined in legal text.
///   -- Description --
///   NOTE the supplementary regulations affects all land use that overlap with the geometry
///   EXAMPLE an air field generates restriction in its surroundings regarding aircraft landing, radar and telecommunication devices. It is the buffer around these artefacts that generates the supplementary regulation on the Land Use.
/// </BLOCKQUOTE></PRE>
/// Element "http://inspire.ec.europa.eu/schemas/plu/3.0":SupplementaryRegulation.
    plu__SupplementaryRegulationType*    plu__SupplementaryRegulation   nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   -- Name --
///   supplementary regulation
///   -- Definition --
///   A spatial object (point, line or polygon) of a spatial plan that provides supplementary information and/or limitation of the use of land/water necessary for spatial planning reasons or to formalise external rules defined in legal text.
///   -- Description --
///   NOTE the supplementary regulations affects all land use that overlap with the geometry
///   EXAMPLE an air field generates restriction in its surroundings regarding aircraft landing, radar and telecommunication devices. It is the buffer around these artefacts that generates the supplementary regulation on the Land Use.
/// </BLOCKQUOTE></PRE>
/// Element "http://inspire.ec.europa.eu/schemas/plu/3.0":SupplementaryRegulation.
    //jld plu__SupplementaryRegulationType*    plu__SupplementaryRegulation   nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   -- Name --
///   spatial plan
///   -- Definition --
///   A set of documents that indicates a strategic direction for the development of a given geographic area, states the policies, priorities, programmes and land allocations that will implement the strategic direction and influences the distribution of people and activities in spaces of various scales. Spatial plans may be developed for urban planning, regional planning, environmental planning, landscape planning, national spatial plans, or spatial planning at the Union level.
/// </BLOCKQUOTE></PRE>
/// Element "http://inspire.ec.europa.eu/schemas/plu/3.0":SpatialPlan.
    plu__SpatialPlanType*                plu__SpatialPlan               nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   -- Name --
///   spatial plan
///   -- Definition --
///   A set of documents that indicates a strategic direction for the development of a given geographic area, states the policies, priorities, programmes and land allocations that will implement the strategic direction and influences the distribution of people and activities in spaces of various scales. Spatial plans may be developed for urban planning, regional planning, environmental planning, landscape planning, national spatial plans, or spatial planning at the Union level.
/// </BLOCKQUOTE></PRE>
/// Element "http://inspire.ec.europa.eu/schemas/plu/3.0":SpatialPlan.
    //jld plu__SpatialPlanType*                plu__SpatialPlan               nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_ProcedurePropertyType   ;
//  END OF SUBSTITUTIONS
    }                                   *__ProcedurePropertyType_sequence 0;
//  END OF SEQUENCE
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":OwnershipAttributeGroup">.
/// Attribute "owns" of XSD type xs:boolean.
   @bool                                 owns                           0 = false;	///< Default attribute value="false".
//  END OF ATTRIBUTEGROUP
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":AssociationAttributeGroup">.
/// Attribute "nilReason" of XSD type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         gml__remoteSchema              0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.opengis.net/gml/3.2":TargetPropertyType is a complexType.
///
/// class gml__TargetPropertyType operations:
/// - gml__TargetPropertyType* soap_new_gml__TargetPropertyType(soap*) allocate and default initialize
/// - gml__TargetPropertyType* soap_new_gml__TargetPropertyType(soap*, int num) allocate array and default initialize values
/// - gml__TargetPropertyType* soap_new_req_gml__TargetPropertyType(soap*, ...) allocate, set required members
/// - gml__TargetPropertyType* soap_new_set_gml__TargetPropertyType(soap*, ...) allocate, set all public members
/// - gml__TargetPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gml__TargetPropertyType(soap*, gml__TargetPropertyType*) deserialize from a stream
/// - int soap_write_gml__TargetPropertyType(soap*, gml__TargetPropertyType*) serialize to a stream
/// - gml__TargetPropertyType* gml__TargetPropertyType::soap_dup(soap*) returns deep copy of gml__TargetPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__TargetPropertyType::soap_del() deep deletes gml__TargetPropertyType data members, use only after gml__TargetPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__TargetPropertyType : public xsd__anyType
{ public:
//  BEGIN CHOICE <xs:choice minOccurs="0">
   $int                                  __union_TargetPropertyType     0;	///< Union _gml__union_TargetPropertyType selector: set to SOAP_UNION__gml__union_TargetPropertyType_<fieldname> or 0 to omit
/// Union for choice in gml__TargetPropertyType.
    union _gml__union_TargetPropertyType
    {
/// <PRE><BLOCKQUOTE>
///   This abstract element serves as the head of a substitution group which may contain any elements whose content model is derived from gml:AbstractFeatureType. This may be used as a variable in the construction of content models. gml:AbstractFeature may be thought of as "anything that is a GML feature" and may be used to define variables or templates in which the value of a GML property is "any feature". This occurs in particular in a GML feature collection where the feature member properties contain one or multiple copies of gml:AbstractFeature respectively.
/// </BLOCKQUOTE></PRE>
/// Reference "http://www.opengis.net/gml/3.2":AbstractFeature to abstract element.
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractFeature"> with global elements <DynamicFeature> <Observation> <FeatureCollection> <SpatialDataSet> <SpatialDataSet> <ZoningElement> <ZoningElement> <OfficialDocumentation> <OfficialDocumentation> <SupplementaryRegulation> <SupplementaryRegulation> <SpatialPlan> <SpatialPlan>
/// <PRE><BLOCKQUOTE>
///   States are captured by time-stamped instances of a feature. The content model extends the standard gml:AbstractFeatureType with the gml:dynamicProperties model group.
///   Each time-stamped instance represents a 'snapshot' of a feature. The dynamic feature classes will normally be extended to suit particular applications. A dynamic feature bears either a time stamp or a history.
/// </BLOCKQUOTE></PRE>
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="DynamicFeature"> with global elements <DynamicFeatureCollection>
/// <PRE><BLOCKQUOTE>
///   States are captured by time-stamped instances of a feature. The content model extends the standard gml:AbstractFeatureType with the gml:dynamicProperties model group.
///   Each time-stamped instance represents a 'snapshot' of a feature. The dynamic feature classes will normally be extended to suit particular applications. A dynamic feature bears either a time stamp or a history.
/// </BLOCKQUOTE></PRE>
/// Element "http://www.opengis.net/gml/3.2":DynamicFeature.
    gml__DynamicFeatureType*             DynamicFeature                 nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   A gml:DynamicFeatureCollection is a feature collection that has a gml:validTime property (i.e. is a snapshot of the feature collection) or which has a gml:history property that contains one or more gml:AbstractTimeSlices each of which contain values of the time varying properties of the feature collection. Note that the gml:DynamicFeatureCollection may be one of the following:
///   1. A feature collection which consists of static feature members (members do not change in time) but which has properties of the collection object as a whole that do change in time . 2. A feature collection which consists of dynamic feature members (the members are gml:DynamicFeatures) but which also has properties of the collection as a whole that vary in time.
/// </BLOCKQUOTE></PRE>
/// Element "http://www.opengis.net/gml/3.2":DynamicFeatureCollection.
    gml__DynamicFeatureCollectionType*   DynamicFeatureCollection       nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
//  END OF SUBSTITUTIONS
/// <PRE><BLOCKQUOTE>
///   The content model is a straightforward extension of gml:AbstractFeatureType; it automatically has the gml:identifier, gml:description, gml:descriptionReference, gml:name, and gml:boundedBy properties. The gml:validTime element describes the time of the observation. Note that this may be a time instant or a time period.
///   The gml:using property contains or references a description of a sensor, instrument or procedure used for the observation.
///   The gml:target property contains or references the specimen, region or station which is the object of the observation. This property is particularly useful for remote observations, such as photographs, where a generic location property might apply to the location of the camera or the location of the field of view, and thus may be ambiguous. The gml:subject element is provided as a convenient synonym for gml:target. This is the term commonly used in phtotography. The gml:resultOf property indicates the result of the observation. The value may be inline, or a reference to a value elsewhere.
/// </BLOCKQUOTE></PRE>
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="Observation"> with global elements <DirectedObservation>
/// <PRE><BLOCKQUOTE>
///   The content model is a straightforward extension of gml:AbstractFeatureType; it automatically has the gml:identifier, gml:description, gml:descriptionReference, gml:name, and gml:boundedBy properties. The gml:validTime element describes the time of the observation. Note that this may be a time instant or a time period.
///   :The gml:using property contains or references a description of a sensor, instrument or procedure used for the observation.
///   The gml:target property contains or references the specimen, region or station which is the object of the observation. This property is particularly useful for remote observations, such as photographs, where a generic location property might apply to the location of the camera or the location of the field of view, and thus may be ambiguous. The gml:subject element is provided as a convenient synonym for gml:target. This is the term commonly used in phtotography. The gml:resultOf property indicates the result of the observation. The value may be inline, or a reference to a value elsewhere.
/// </BLOCKQUOTE></PRE>
/// Element "http://www.opengis.net/gml/3.2":Observation.
    gml__ObservationType*                Observation                    nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   A gml:DirectedObservation is the same as an observation except that it adds an additional gml:direction property. This is the direction in which the observation was acquired. Clearly this applies only to certain types of observations such as visual observations by people, or observations obtained from terrestrial cameras.
/// </BLOCKQUOTE></PRE>
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="DirectedObservation"> with global elements <DirectedObservationAtDistance>
/// <PRE><BLOCKQUOTE>
///   A gml:DirectedObservation is the same as an observation except that it adds an additional gml:direction property. This is the direction in which the observation was acquired. Clearly this applies only to certain types of observations such as visual observations by people, or observations obtained from terrestrial cameras.
/// </BLOCKQUOTE></PRE>
/// Element "http://www.opengis.net/gml/3.2":DirectedObservation.
    gml__DirectedObservationType*        DirectedObservation            nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   gml:DirectedObservationAtDistance adds an additional distance property. This is the distance from the observer to the subject of the observation. Clearly this applies only to certain types of observations such as visual observations by people, or observations obtained from terrestrial cameras.
/// </BLOCKQUOTE></PRE>
/// Element "http://www.opengis.net/gml/3.2":DirectedObservationAtDistance.
    gml__DirectedObservationAtDistanceType*  DirectedObservationAtDistance  nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
//  END OF SUBSTITUTIONS
//  END OF SUBSTITUTIONS
/// Element "http://www.opengis.net/gml/3.2":FeatureCollection.
    gml__FeatureCollectionType*          FeatureCollection              nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   -- Definition --
///   Identifiable collection of spatial data.
///   -- Description --
///   WARNING This element has been deprecated in v3.3.1 of this schema (in accordance with D2.7 v3.3 Recommendation 11 stating that wfs:FeatureCollection should be used instead of base:SpatialDataSet).
///   NOTE The type SpatialDataSet is offered as a pre-defined type for spatial data sets. The scope of this type is packaging pre-defined data sets for the non-direct access download service. It may be reused in thematic application schemas, but if it does not fit an application-schema-specific data set object should be modelled. This type may have the same name and definition like this type, but may have a different set of properties.
///   This type specifies three properties: an external object identifier, a container for metadata (may be void), and an association to zero or more spatial objects.
/// </BLOCKQUOTE></PRE>
/// Element "http://inspire.ec.europa.eu/schemas/base/3.3":SpatialDataSet.
    base__SpatialDataSetType*            base__SpatialDataSet           nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   -- Definition --
///   Identifiable collection of spatial data.
///   -- Description --
///   WARNING This element has been deprecated in v3.3.1 of this schema (in accordance with D2.7 v3.3 Recommendation 11 stating that wfs:FeatureCollection should be used instead of base:SpatialDataSet).
///   NOTE The type SpatialDataSet is offered as a pre-defined type for spatial data sets. The scope of this type is packaging pre-defined data sets for the non-direct access download service. It may be reused in thematic application schemas, but if it does not fit an application-schema-specific data set object should be modelled. This type may have the same name and definition like this type, but may have a different set of properties.
///   This type specifies three properties: an external object identifier, a container for metadata (may be void), and an association to zero or more spatial objects.
/// </BLOCKQUOTE></PRE>
/// Element "http://inspire.ec.europa.eu/schemas/base/3.3":SpatialDataSet.
    //jld base__SpatialDataSetType*            base__SpatialDataSet           nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   -- Name --
///   zoning element
///   -- Definition --
///   A spatial object which is homogeneous regarding the permitted uses of land based on zoning which separate one set of land uses from another.
///   -- Description --
///   Zoning elements refer to the regulation of the kinds of activities which will be acceptable on particular lots (such as open space, residential, agricultural, commercial or industrial). The intensity of use at which those activities can be performed (from low-density housing such as single family homes to high-density such as high-rise apartment buildings), the height of buildings, the amount of space that structures may occupy, the proportions of the types of space on a lot, such as how much landscaped space, impervious surface, traffic lanes, and parking may be provided.
/// </BLOCKQUOTE></PRE>
/// Element "http://inspire.ec.europa.eu/schemas/plu/3.0":ZoningElement.
    plu__ZoningElementType*              plu__ZoningElement             nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   -- Name --
///   zoning element
///   -- Definition --
///   A spatial object which is homogeneous regarding the permitted uses of land based on zoning which separate one set of land uses from another.
///   -- Description --
///   Zoning elements refer to the regulation of the kinds of activities which will be acceptable on particular lots (such as open space, residential, agricultural, commercial or industrial). The intensity of use at which those activities can be performed (from low-density housing such as single family homes to high-density such as high-rise apartment buildings), the height of buildings, the amount of space that structures may occupy, the proportions of the types of space on a lot, such as how much landscaped space, impervious surface, traffic lanes, and parking may be provided.
/// </BLOCKQUOTE></PRE>
/// Element "http://inspire.ec.europa.eu/schemas/plu/3.0":ZoningElement.
    //jld plu__ZoningElementType*              plu__ZoningElement             nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   -- Name --
///   official documentation
///   -- Definition --
///   The official documentation that composes the spatial plan; it may be composed of, the applicable legislation, the regulations, cartographic elements, descriptive elements that may be associated with the complete spatial plan, a zoning element or a supplementary regulation . In some Member States the actual textual regulation will be part of the data set (and can be put in the regulationText attribute), in other Member States the text will not be part of the data set and will be referenced via a reference to a document or a legal act.
///   At least one of the three voidable values shall be provided.
///   -- Description --
///   NOTE: The LegislationCitation is the value type of the attribute regulation reference. An example of a regulation reference would be: http://www2.vlaanderen.be /ruimtelijk/grup/00350/00362_00001/data/ 212_00362_00001_d_0BVR.pdf.
/// </BLOCKQUOTE></PRE>
/// Element "http://inspire.ec.europa.eu/schemas/plu/3.0":OfficialDocumentation.
    plu__OfficialDocumentationType*      plu__OfficialDocumentation     nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   -- Name --
///   official documentation
///   -- Definition --
///   The official documentation that composes the spatial plan; it may be composed of, the applicable legislation, the regulations, cartographic elements, descriptive elements that may be associated with the complete spatial plan, a zoning element or a supplementary regulation . In some Member States the actual textual regulation will be part of the data set (and can be put in the regulationText attribute), in other Member States the text will not be part of the data set and will be referenced via a reference to a document or a legal act.
///   At least one of the three voidable values shall be provided.
///   -- Description --
///   NOTE: The LegislationCitation is the value type of the attribute regulation reference. An example of a regulation reference would be: http://www2.vlaanderen.be /ruimtelijk/grup/00350/00362_00001/data/ 212_00362_00001_d_0BVR.pdf.
/// </BLOCKQUOTE></PRE>
/// Element "http://inspire.ec.europa.eu/schemas/plu/3.0":OfficialDocumentation.
    //jld plu__OfficialDocumentationType*      plu__OfficialDocumentation     nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   -- Name --
///   supplementary regulation
///   -- Definition --
///   A spatial object (point, line or polygon) of a spatial plan that provides supplementary information and/or limitation of the use of land/water necessary for spatial planning reasons or to formalise external rules defined in legal text.
///   -- Description --
///   NOTE the supplementary regulations affects all land use that overlap with the geometry
///   EXAMPLE an air field generates restriction in its surroundings regarding aircraft landing, radar and telecommunication devices. It is the buffer around these artefacts that generates the supplementary regulation on the Land Use.
/// </BLOCKQUOTE></PRE>
/// Element "http://inspire.ec.europa.eu/schemas/plu/3.0":SupplementaryRegulation.
    plu__SupplementaryRegulationType*    plu__SupplementaryRegulation   nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   -- Name --
///   supplementary regulation
///   -- Definition --
///   A spatial object (point, line or polygon) of a spatial plan that provides supplementary information and/or limitation of the use of land/water necessary for spatial planning reasons or to formalise external rules defined in legal text.
///   -- Description --
///   NOTE the supplementary regulations affects all land use that overlap with the geometry
///   EXAMPLE an air field generates restriction in its surroundings regarding aircraft landing, radar and telecommunication devices. It is the buffer around these artefacts that generates the supplementary regulation on the Land Use.
/// </BLOCKQUOTE></PRE>
/// Element "http://inspire.ec.europa.eu/schemas/plu/3.0":SupplementaryRegulation.
    //jld plu__SupplementaryRegulationType*    plu__SupplementaryRegulation   nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   -- Name --
///   spatial plan
///   -- Definition --
///   A set of documents that indicates a strategic direction for the development of a given geographic area, states the policies, priorities, programmes and land allocations that will implement the strategic direction and influences the distribution of people and activities in spaces of various scales. Spatial plans may be developed for urban planning, regional planning, environmental planning, landscape planning, national spatial plans, or spatial planning at the Union level.
/// </BLOCKQUOTE></PRE>
/// Element "http://inspire.ec.europa.eu/schemas/plu/3.0":SpatialPlan.
    plu__SpatialPlanType*                plu__SpatialPlan               nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   -- Name --
///   spatial plan
///   -- Definition --
///   A set of documents that indicates a strategic direction for the development of a given geographic area, states the policies, priorities, programmes and land allocations that will implement the strategic direction and influences the distribution of people and activities in spaces of various scales. Spatial plans may be developed for urban planning, regional planning, environmental planning, landscape planning, national spatial plans, or spatial planning at the Union level.
/// </BLOCKQUOTE></PRE>
/// Element "http://inspire.ec.europa.eu/schemas/plu/3.0":SpatialPlan.
    //jld plu__SpatialPlanType*                plu__SpatialPlan               nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
//  END OF SUBSTITUTIONS
/// <PRE><BLOCKQUOTE>
///   The AbstractGeometry element is the abstract head of the substitution group for all geometry elements of GML. This includes pre-defined and user-defined geometry elements. Any geometry element shall be a direct or indirect extension/restriction of AbstractGeometryType and shall be directly or indirectly in the substitution group of AbstractGeometry.
/// </BLOCKQUOTE></PRE>
/// Reference "http://www.opengis.net/gml/3.2":AbstractGeometry to abstract element.
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractGeometry"> with global elements <GeometricComplex>
/// Element "http://www.opengis.net/gml/3.2":GeometricComplex.
    gml__GeometricComplexType*           GeometricComplex               nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
//  END OF SUBSTITUTIONS
    }                                    union_TargetPropertyType      ;
//  END OF CHOICE
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":OwnershipAttributeGroup">.
/// Attribute "owns" of XSD type xs:boolean.
   @bool                                 owns                           0 = false;	///< Default attribute value="false".
//  END OF ATTRIBUTEGROUP
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":AssociationAttributeGroup">.
/// Attribute "nilReason" of XSD type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         gml__remoteSchema              0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.opengis.net/gml/3.2":ResultType is a complexType.
///
/// class gml__ResultType operations:
/// - gml__ResultType* soap_new_gml__ResultType(soap*) allocate and default initialize
/// - gml__ResultType* soap_new_gml__ResultType(soap*, int num) allocate array and default initialize values
/// - gml__ResultType* soap_new_req_gml__ResultType(soap*, ...) allocate, set required members
/// - gml__ResultType* soap_new_set_gml__ResultType(soap*, ...) allocate, set all public members
/// - gml__ResultType::soap_default(soap*) default initialize members
/// - int soap_read_gml__ResultType(soap*, gml__ResultType*) deserialize from a stream
/// - int soap_write_gml__ResultType(soap*, gml__ResultType*) serialize to a stream
/// - gml__ResultType* gml__ResultType::soap_dup(soap*) returns deep copy of gml__ResultType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__ResultType::soap_del() deep deletes gml__ResultType data members, use only after gml__ResultType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__ResultType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gml__ResultType_sequence
    {
/// @todo <any namespace="##any">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
    }                                   *__ResultType_sequence          0;
//  END OF SEQUENCE
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":OwnershipAttributeGroup">.
/// Attribute "owns" of XSD type xs:boolean.
   @bool                                 owns                           0 = false;	///< Default attribute value="false".
//  END OF ATTRIBUTEGROUP
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":AssociationAttributeGroup">.
/// Attribute "nilReason" of XSD type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         gml__remoteSchema              0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.opengis.net/gml/3.2":DirectionPropertyType is a complexType.
///
/// class gml__DirectionPropertyType operations:
/// - gml__DirectionPropertyType* soap_new_gml__DirectionPropertyType(soap*) allocate and default initialize
/// - gml__DirectionPropertyType* soap_new_gml__DirectionPropertyType(soap*, int num) allocate array and default initialize values
/// - gml__DirectionPropertyType* soap_new_req_gml__DirectionPropertyType(soap*, ...) allocate, set required members
/// - gml__DirectionPropertyType* soap_new_set_gml__DirectionPropertyType(soap*, ...) allocate, set all public members
/// - gml__DirectionPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gml__DirectionPropertyType(soap*, gml__DirectionPropertyType*) deserialize from a stream
/// - int soap_write_gml__DirectionPropertyType(soap*, gml__DirectionPropertyType*) serialize to a stream
/// - gml__DirectionPropertyType* gml__DirectionPropertyType::soap_dup(soap*) returns deep copy of gml__DirectionPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__DirectionPropertyType::soap_del() deep deletes gml__DirectionPropertyType data members, use only after gml__DirectionPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__DirectionPropertyType : public xsd__anyType
{ public:
//  BEGIN CHOICE <xs:choice minOccurs="0">
   $int                                  __union_DirectionPropertyType  0;	///< Union _gml__union_DirectionPropertyType selector: set to SOAP_UNION__gml__union_DirectionPropertyType_<fieldname> or 0 to omit
/// Union for choice in gml__DirectionPropertyType.
    union _gml__union_DirectionPropertyType
    {
/// Element "DirectionVector" of XSD type "http://www.opengis.net/gml/3.2":DirectionVectorType.
    gml__DirectionVectorType*            DirectionVector                nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "DirectionDescription" of XSD type "http://www.opengis.net/gml/3.2":DirectionDescriptionType.
    gml__DirectionDescriptionType*       DirectionDescription           nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "CompassPoint" of XSD type "http://www.opengis.net/gml/3.2":CompassPointEnumeration.
    enum gml__CompassPointEnumeration    CompassPoint                   1;	///< Required element.
/// Element "DirectionKeyword" of XSD type "http://www.opengis.net/gml/3.2":CodeType.
    gml__CodeType*                       DirectionKeyword               nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "DirectionString" of XSD type "http://www.opengis.net/gml/3.2":StringOrRefType.
    gml__StringOrRefType*                DirectionString                nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_DirectionPropertyType   ;
//  END OF CHOICE
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":OwnershipAttributeGroup">.
/// Attribute "owns" of XSD type xs:boolean.
   @bool                                 owns                           0 = false;	///< Default attribute value="false".
//  END OF ATTRIBUTEGROUP
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":AssociationAttributeGroup">.
/// Attribute "nilReason" of XSD type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         gml__remoteSchema              0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.opengis.net/gml/3.2":DirectionVectorType is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Direction vectors are specified by providing components of a vector.
/// </BLOCKQUOTE></PRE>
/// class gml__DirectionVectorType operations:
/// - gml__DirectionVectorType* soap_new_gml__DirectionVectorType(soap*) allocate and default initialize
/// - gml__DirectionVectorType* soap_new_gml__DirectionVectorType(soap*, int num) allocate array and default initialize values
/// - gml__DirectionVectorType* soap_new_req_gml__DirectionVectorType(soap*, ...) allocate, set required members
/// - gml__DirectionVectorType* soap_new_set_gml__DirectionVectorType(soap*, ...) allocate, set all public members
/// - gml__DirectionVectorType::soap_default(soap*) default initialize members
/// - int soap_read_gml__DirectionVectorType(soap*, gml__DirectionVectorType*) deserialize from a stream
/// - int soap_write_gml__DirectionVectorType(soap*, gml__DirectionVectorType*) serialize to a stream
/// - gml__DirectionVectorType* gml__DirectionVectorType::soap_dup(soap*) returns deep copy of gml__DirectionVectorType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__DirectionVectorType::soap_del() deep deletes gml__DirectionVectorType data members, use only after gml__DirectionVectorType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__DirectionVectorType : public xsd__anyType
{ public:
//  BEGIN CHOICE <xs:choice>
/// @note <xs:choice> with embedded <xs:sequence> or <xs:group> prevents the use of a union for <xs:choice>. Instead of being members of a union, the following members are declared optional. Only one member should be non-NULL by choice.
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":vector.
    gml__VectorType*                     vector                         nullptr;	///< Required nillable (xsi:nil when NULL) element.
//  BEGIN SEQUENCE <xs:sequence>
/// Element "horizontalAngle" of XSD type "http://www.opengis.net/gml/3.2":AngleType.
    gml__AngleType*                      horizontalAngle                nullptr;	///< Required nillable (xsi:nil when NULL) element.
/// Element "verticalAngle" of XSD type "http://www.opengis.net/gml/3.2":AngleType.
    gml__AngleType*                      verticalAngle                  nullptr;	///< Required nillable (xsi:nil when NULL) element.
//  END OF SEQUENCE
//  END OF CHOICE
};

/// @brief "http://www.opengis.net/gml/3.2":DirectionDescriptionType is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   direction descriptions are specified by a compass point code, a keyword, a textual description or a reference to a description.
///   A gml:compassPoint is specified by a simple enumeration. In addition, thre elements to contain text-based descriptions of direction are provided. If the direction is specified using a term from a list, gml:keyword should be used, and the list indicated using the value of the codeSpace attribute. if the direction is decribed in prose, gml:direction or gml:reference should be used, allowing the value to be included inline or by reference.
/// </BLOCKQUOTE></PRE>
/// class gml__DirectionDescriptionType operations:
/// - gml__DirectionDescriptionType* soap_new_gml__DirectionDescriptionType(soap*) allocate and default initialize
/// - gml__DirectionDescriptionType* soap_new_gml__DirectionDescriptionType(soap*, int num) allocate array and default initialize values
/// - gml__DirectionDescriptionType* soap_new_req_gml__DirectionDescriptionType(soap*, ...) allocate, set required members
/// - gml__DirectionDescriptionType* soap_new_set_gml__DirectionDescriptionType(soap*, ...) allocate, set all public members
/// - gml__DirectionDescriptionType::soap_default(soap*) default initialize members
/// - int soap_read_gml__DirectionDescriptionType(soap*, gml__DirectionDescriptionType*) deserialize from a stream
/// - int soap_write_gml__DirectionDescriptionType(soap*, gml__DirectionDescriptionType*) serialize to a stream
/// - gml__DirectionDescriptionType* gml__DirectionDescriptionType::soap_dup(soap*) returns deep copy of gml__DirectionDescriptionType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__DirectionDescriptionType::soap_del() deep deletes gml__DirectionDescriptionType data members, use only after gml__DirectionDescriptionType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__DirectionDescriptionType : public xsd__anyType
{ public:
//  BEGIN CHOICE <xs:choice>
   $int                                  __union_DirectionDescriptionType;	///< Union _gml__union_DirectionDescriptionType selector: set to SOAP_UNION__gml__union_DirectionDescriptionType_<fieldname>
/// Union for choice in gml__DirectionDescriptionType.
    union _gml__union_DirectionDescriptionType
    {
/// Element "compassPoint" of XSD type "http://www.opengis.net/gml/3.2":CompassPointEnumeration.
    enum gml__CompassPointEnumeration    compassPoint                   1;	///< Required element.
/// Element "keyword" of XSD type "http://www.opengis.net/gml/3.2":CodeType.
    gml__CodeType*                       keyword                        nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "description" of XSD type xs:string.
    std::string*                         description                    nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "reference" of XSD type "http://www.opengis.net/gml/3.2":ReferenceType.
    gml__ReferenceType*                  reference                      nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_DirectionDescriptionType;
//  END OF CHOICE
};

/// @brief "http://www.opengis.net/gml/3.2":TimeCalendarPropertyType is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   gml:TimeCalendarPropertyType provides for associating a gml:TimeCalendar with an object.
/// </BLOCKQUOTE></PRE>
/// class gml__TimeCalendarPropertyType operations:
/// - gml__TimeCalendarPropertyType* soap_new_gml__TimeCalendarPropertyType(soap*) allocate and default initialize
/// - gml__TimeCalendarPropertyType* soap_new_gml__TimeCalendarPropertyType(soap*, int num) allocate array and default initialize values
/// - gml__TimeCalendarPropertyType* soap_new_req_gml__TimeCalendarPropertyType(soap*, ...) allocate, set required members
/// - gml__TimeCalendarPropertyType* soap_new_set_gml__TimeCalendarPropertyType(soap*, ...) allocate, set all public members
/// - gml__TimeCalendarPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gml__TimeCalendarPropertyType(soap*, gml__TimeCalendarPropertyType*) deserialize from a stream
/// - int soap_write_gml__TimeCalendarPropertyType(soap*, gml__TimeCalendarPropertyType*) serialize to a stream
/// - gml__TimeCalendarPropertyType* gml__TimeCalendarPropertyType::soap_dup(soap*) returns deep copy of gml__TimeCalendarPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__TimeCalendarPropertyType::soap_del() deep deletes gml__TimeCalendarPropertyType data members, use only after gml__TimeCalendarPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__TimeCalendarPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gml__TimeCalendarPropertyType_sequence
    {
/// <PRE><BLOCKQUOTE>
///   A calendar is a discrete temporal reference system that provides a basis for defining temporal position to a resolution of one day.
///   gml:TimeCalendar adds one property to those inherited from gml:TimeReferenceSystem. A gml:referenceFrame provides a link to a gml:TimeCalendarEra that it uses. A gml:TimeCalendar may reference more than one calendar era. The referenceFrame element follows the standard GML property model, allowing the association to be instantiated either using an inline description using the gml:TimeCalendarEra element, or a link to a gml:TimeCalendarEra which is explicit elsewhere.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":TimeCalendar.
    gml__TimeCalendarType*               TimeCalendar                   1;	///< Required element.
    }                                   *__TimeCalendarPropertyType_sequence 0;
//  END OF SEQUENCE
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":OwnershipAttributeGroup">.
/// Attribute "owns" of XSD type xs:boolean.
   @bool                                 owns                           0 = false;	///< Default attribute value="false".
//  END OF ATTRIBUTEGROUP
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":AssociationAttributeGroup">.
/// Attribute "nilReason" of XSD type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         gml__remoteSchema              0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.opengis.net/gml/3.2":TimeCalendarEraPropertyType is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   gml:TimeCalendarEraPropertyType provides for associating a gml:TimeCalendarEra with an object.
/// </BLOCKQUOTE></PRE>
/// class gml__TimeCalendarEraPropertyType operations:
/// - gml__TimeCalendarEraPropertyType* soap_new_gml__TimeCalendarEraPropertyType(soap*) allocate and default initialize
/// - gml__TimeCalendarEraPropertyType* soap_new_gml__TimeCalendarEraPropertyType(soap*, int num) allocate array and default initialize values
/// - gml__TimeCalendarEraPropertyType* soap_new_req_gml__TimeCalendarEraPropertyType(soap*, ...) allocate, set required members
/// - gml__TimeCalendarEraPropertyType* soap_new_set_gml__TimeCalendarEraPropertyType(soap*, ...) allocate, set all public members
/// - gml__TimeCalendarEraPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gml__TimeCalendarEraPropertyType(soap*, gml__TimeCalendarEraPropertyType*) deserialize from a stream
/// - int soap_write_gml__TimeCalendarEraPropertyType(soap*, gml__TimeCalendarEraPropertyType*) serialize to a stream
/// - gml__TimeCalendarEraPropertyType* gml__TimeCalendarEraPropertyType::soap_dup(soap*) returns deep copy of gml__TimeCalendarEraPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__TimeCalendarEraPropertyType::soap_del() deep deletes gml__TimeCalendarEraPropertyType data members, use only after gml__TimeCalendarEraPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__TimeCalendarEraPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gml__TimeCalendarEraPropertyType_sequence
    {
/// <PRE><BLOCKQUOTE>
///   gml:TimeCalendarEra inherits basic properties from gml:DefinitionType and has the following additional properties:
///   - gml:referenceEvent is the name or description of a mythical or historic event which fixes the position of the base scale of the calendar era. This is given as text or using a link to description held elsewhere.
///   - gml:referenceDate specifies the date of the referenceEvent expressed as a date in the given calendar. In most calendars, this date is the origin (i.e., the first day) of the scale, but this is not always true.
///   - gml:julianReference specifies the Julian date that corresponds to the reference date. The Julian day number is an integer value; the Julian date is a decimal value that allows greater resolution. Transforming calendar dates to and from Julian dates provides a relatively simple basis for transforming dates from one calendar to another.
///   - gml:epochOfUse is the period for which the calendar era was used as a basis for dating.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":TimeCalendarEra.
    gml__TimeCalendarEraType*            TimeCalendarEra                1;	///< Required element.
    }                                   *__TimeCalendarEraPropertyType_sequence 0;
//  END OF SEQUENCE
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":OwnershipAttributeGroup">.
/// Attribute "owns" of XSD type xs:boolean.
   @bool                                 owns                           0 = false;	///< Default attribute value="false".
//  END OF ATTRIBUTEGROUP
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":AssociationAttributeGroup">.
/// Attribute "nilReason" of XSD type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         gml__remoteSchema              0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.opengis.net/gml/3.2":TimeClockPropertyType is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   gml:TimeClockPropertyType provides for associating a gml:TimeClock with an object.
/// </BLOCKQUOTE></PRE>
/// class gml__TimeClockPropertyType operations:
/// - gml__TimeClockPropertyType* soap_new_gml__TimeClockPropertyType(soap*) allocate and default initialize
/// - gml__TimeClockPropertyType* soap_new_gml__TimeClockPropertyType(soap*, int num) allocate array and default initialize values
/// - gml__TimeClockPropertyType* soap_new_req_gml__TimeClockPropertyType(soap*, ...) allocate, set required members
/// - gml__TimeClockPropertyType* soap_new_set_gml__TimeClockPropertyType(soap*, ...) allocate, set all public members
/// - gml__TimeClockPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gml__TimeClockPropertyType(soap*, gml__TimeClockPropertyType*) deserialize from a stream
/// - int soap_write_gml__TimeClockPropertyType(soap*, gml__TimeClockPropertyType*) serialize to a stream
/// - gml__TimeClockPropertyType* gml__TimeClockPropertyType::soap_dup(soap*) returns deep copy of gml__TimeClockPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__TimeClockPropertyType::soap_del() deep deletes gml__TimeClockPropertyType data members, use only after gml__TimeClockPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__TimeClockPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gml__TimeClockPropertyType_sequence
    {
/// <PRE><BLOCKQUOTE>
///   A clock provides a basis for defining temporal position within a day. A clock shall be used with a calendar in order to provide a complete description of a temporal position within a specific day.
///   gml:TimeClock adds the following properties to those inherited from gml:TimeReferenceSystemType:
///   - gml:referenceEvent is the name or description of an event, such as solar noon or sunrise, which fixes the position of the base scale of the clock.
///   - gml:referenceTime specifies the time of day associated with the reference event expressed as a time of day in the given clock. The reference time is usually the origin of the clock scale. - gml:utcReference specifies the 24 hour local or UTC time that corresponds to the reference time.
///   - gml:dateBasis contains or references the calendars that use this clock.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":TimeClock.
    gml__TimeClockType*                  TimeClock                      1;	///< Required element.
    }                                   *__TimeClockPropertyType_sequence 0;
//  END OF SEQUENCE
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":OwnershipAttributeGroup">.
/// Attribute "owns" of XSD type xs:boolean.
   @bool                                 owns                           0 = false;	///< Default attribute value="false".
//  END OF ATTRIBUTEGROUP
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":AssociationAttributeGroup">.
/// Attribute "nilReason" of XSD type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         gml__remoteSchema              0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.opengis.net/gml/3.2":TimeOrdinalEraPropertyType is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   gml:TimeOrdinalEraPropertyType provides for associating a gml:TimeOrdinalEra with an object.
/// </BLOCKQUOTE></PRE>
/// class gml__TimeOrdinalEraPropertyType operations:
/// - gml__TimeOrdinalEraPropertyType* soap_new_gml__TimeOrdinalEraPropertyType(soap*) allocate and default initialize
/// - gml__TimeOrdinalEraPropertyType* soap_new_gml__TimeOrdinalEraPropertyType(soap*, int num) allocate array and default initialize values
/// - gml__TimeOrdinalEraPropertyType* soap_new_req_gml__TimeOrdinalEraPropertyType(soap*, ...) allocate, set required members
/// - gml__TimeOrdinalEraPropertyType* soap_new_set_gml__TimeOrdinalEraPropertyType(soap*, ...) allocate, set all public members
/// - gml__TimeOrdinalEraPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gml__TimeOrdinalEraPropertyType(soap*, gml__TimeOrdinalEraPropertyType*) deserialize from a stream
/// - int soap_write_gml__TimeOrdinalEraPropertyType(soap*, gml__TimeOrdinalEraPropertyType*) serialize to a stream
/// - gml__TimeOrdinalEraPropertyType* gml__TimeOrdinalEraPropertyType::soap_dup(soap*) returns deep copy of gml__TimeOrdinalEraPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__TimeOrdinalEraPropertyType::soap_del() deep deletes gml__TimeOrdinalEraPropertyType data members, use only after gml__TimeOrdinalEraPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__TimeOrdinalEraPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gml__TimeOrdinalEraPropertyType_sequence
    {
/// <PRE><BLOCKQUOTE>
///   Its content model follows the pattern of gml:TimeEdge, inheriting standard properties from gml:DefinitionType, and adding gml:start, gml:end and gml:extent properties, a set of gml:member properties which indicate ordered gml:TimeOrdinalEra elements, and a gml:group property which points to the parent era.
///   The recursive inclusion of gml:TimeOrdinalEra elements allow the construction of an arbitrary depth hierarchical ordinal reference schema, such that an ordinal era at a given level of the hierarchy includes a sequence of shorter, coterminous ordinal eras.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":TimeOrdinalEra.
    gml__TimeOrdinalEraType*             TimeOrdinalEra                 1;	///< Required element.
    }                                   *__TimeOrdinalEraPropertyType_sequence 0;
//  END OF SEQUENCE
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":OwnershipAttributeGroup">.
/// Attribute "owns" of XSD type xs:boolean.
   @bool                                 owns                           0 = false;	///< Default attribute value="false".
//  END OF ATTRIBUTEGROUP
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":AssociationAttributeGroup">.
/// Attribute "nilReason" of XSD type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         gml__remoteSchema              0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.opengis.net/gml/3.2":TimeTopologyPrimitivePropertyType is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   gml:TimeTopologyPrimitivePropertyType provides for associating a gml:AbstractTimeTopologyPrimitive with an object.
/// </BLOCKQUOTE></PRE>
/// class gml__TimeTopologyPrimitivePropertyType operations:
/// - gml__TimeTopologyPrimitivePropertyType* soap_new_gml__TimeTopologyPrimitivePropertyType(soap*) allocate and default initialize
/// - gml__TimeTopologyPrimitivePropertyType* soap_new_gml__TimeTopologyPrimitivePropertyType(soap*, int num) allocate array and default initialize values
/// - gml__TimeTopologyPrimitivePropertyType* soap_new_req_gml__TimeTopologyPrimitivePropertyType(soap*, ...) allocate, set required members
/// - gml__TimeTopologyPrimitivePropertyType* soap_new_set_gml__TimeTopologyPrimitivePropertyType(soap*, ...) allocate, set all public members
/// - gml__TimeTopologyPrimitivePropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gml__TimeTopologyPrimitivePropertyType(soap*, gml__TimeTopologyPrimitivePropertyType*) deserialize from a stream
/// - int soap_write_gml__TimeTopologyPrimitivePropertyType(soap*, gml__TimeTopologyPrimitivePropertyType*) serialize to a stream
/// - gml__TimeTopologyPrimitivePropertyType* gml__TimeTopologyPrimitivePropertyType::soap_dup(soap*) returns deep copy of gml__TimeTopologyPrimitivePropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__TimeTopologyPrimitivePropertyType::soap_del() deep deletes gml__TimeTopologyPrimitivePropertyType data members, use only after gml__TimeTopologyPrimitivePropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__TimeTopologyPrimitivePropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gml__TimeTopologyPrimitivePropertyType_sequence
    {
/// <PRE><BLOCKQUOTE>
///   gml:TimeTopologyPrimitive acts as the head of a substitution group for topological temporal primitives.
///   Temporal topology primitives shall imply the ordering information between features or feature properties. The temporal connection of features can be examined if they have temporal topology primitives as values of their properties. Usually, an instantaneous feature associates with a time node, and a static feature associates with a time edge. A feature with both modes associates with the temporal topology primitive: a supertype of time nodes and time edges.
///   A topological primitive is always connected to one or more other topological primitives, and is, therefore, always a member of a topological complex. In a GML instance, this will often be indicated by the primitives being described by elements that are descendents of an element describing a complex. However, in order to support the case where a temporal topological primitive is described in another context, the optional complex property is provided, which carries a reference to the parent temporal topological complex.
/// </BLOCKQUOTE></PRE>
/// Reference "http://www.opengis.net/gml/3.2":AbstractTimeTopologyPrimitive to abstract element.
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractTimeTopologyPrimitive"> with global elements <TimeNode> <TimeEdge>
   $int                                  __unionAbstractTimeTopologyPrimitive;	///< Union _gml__union_TimeTopologyPrimitivePropertyType selector: set to SOAP_UNION__gml__union_TimeTopologyPrimitivePropertyType_<fieldname>
/// Union for substitutionGroup gml__AbstractTimeTopologyPrimitive.
    union _gml__union_TimeTopologyPrimitivePropertyType
    {
/// <PRE><BLOCKQUOTE>
///   A time node is a zero-dimensional topological primitive that represents an identifiable node in time (it is equivalent to a point in space). A node may act as the termination or initiation of any number of time edges. A time node may be realised as a geometry, its position, whose value is a time instant.
/// </BLOCKQUOTE></PRE>
/// Element "http://www.opengis.net/gml/3.2":TimeNode.
    gml__TimeNodeType*                   TimeNode                       nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   A time edge is a one-dimensional topological primitive. It is an open interval that starts and ends at a node. The edge may be realised as a geometry whose value is a time period.
/// </BLOCKQUOTE></PRE>
/// Element "http://www.opengis.net/gml/3.2":TimeEdge.
    gml__TimeEdgeType*                   TimeEdge                       nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_TimeTopologyPrimitivePropertyType;
//  END OF SUBSTITUTIONS
    }                                   *__TimeTopologyPrimitivePropertyType_sequence 0;
//  END OF SEQUENCE
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":AssociationAttributeGroup">.
/// Attribute "nilReason" of XSD type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         gml__remoteSchema              0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":OwnershipAttributeGroup">.
/// Attribute "owns" of XSD type xs:boolean.
   @bool                                 owns                           0 = false;	///< Default attribute value="false".
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.opengis.net/gml/3.2":TimeTopologyComplexPropertyType is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   gml:TimeTopologyComplexPropertyType provides for associating a gml:TimeTopologyComplex with an object.
/// </BLOCKQUOTE></PRE>
/// class gml__TimeTopologyComplexPropertyType operations:
/// - gml__TimeTopologyComplexPropertyType* soap_new_gml__TimeTopologyComplexPropertyType(soap*) allocate and default initialize
/// - gml__TimeTopologyComplexPropertyType* soap_new_gml__TimeTopologyComplexPropertyType(soap*, int num) allocate array and default initialize values
/// - gml__TimeTopologyComplexPropertyType* soap_new_req_gml__TimeTopologyComplexPropertyType(soap*, ...) allocate, set required members
/// - gml__TimeTopologyComplexPropertyType* soap_new_set_gml__TimeTopologyComplexPropertyType(soap*, ...) allocate, set all public members
/// - gml__TimeTopologyComplexPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gml__TimeTopologyComplexPropertyType(soap*, gml__TimeTopologyComplexPropertyType*) deserialize from a stream
/// - int soap_write_gml__TimeTopologyComplexPropertyType(soap*, gml__TimeTopologyComplexPropertyType*) serialize to a stream
/// - gml__TimeTopologyComplexPropertyType* gml__TimeTopologyComplexPropertyType::soap_dup(soap*) returns deep copy of gml__TimeTopologyComplexPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__TimeTopologyComplexPropertyType::soap_del() deep deletes gml__TimeTopologyComplexPropertyType data members, use only after gml__TimeTopologyComplexPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__TimeTopologyComplexPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gml__TimeTopologyComplexPropertyType_sequence
    {
/// <PRE><BLOCKQUOTE>
///   A temporal topology complex shall be the connected acyclic directed graph composed of temporal topological primitives, i.e. time nodes and time edges. Because a time edge may not exist without two time nodes on its boundaries, static features have time edges from a temporal topology complex as the values of their temporal properties, regardless of explicit declarations.
///   A temporal topology complex expresses a linear or a non-linear graph. A temporal linear graph, composed of a sequence of time edges, provides a lineage described only by "substitution" of feature instances or feature element values. A time node as the start or the end of the graph connects with at least one time edge. A time node other than the start and the end shall connect to at least two time edges: one of starting from the node, and another ending at the node.
///   A temporal topological complex is a set of connected temporal topological primitives. The member primtives are indicated, either by reference or by value, using the primitive property.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":TimeTopologyComplex.
    gml__TimeTopologyComplexType*        TimeTopologyComplex            1;	///< Required element.
    }                                   *__TimeTopologyComplexPropertyType_sequence 0;
//  END OF SEQUENCE
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":AssociationAttributeGroup">.
/// Attribute "nilReason" of XSD type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         gml__remoteSchema              0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":OwnershipAttributeGroup">.
/// Attribute "owns" of XSD type xs:boolean.
   @bool                                 owns                           0 = false;	///< Default attribute value="false".
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.opengis.net/gml/3.2":TimeNodePropertyType is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   gml:TimeNodePropertyType provides for associating a gml:TimeNode with an object
/// </BLOCKQUOTE></PRE>
/// class gml__TimeNodePropertyType operations:
/// - gml__TimeNodePropertyType* soap_new_gml__TimeNodePropertyType(soap*) allocate and default initialize
/// - gml__TimeNodePropertyType* soap_new_gml__TimeNodePropertyType(soap*, int num) allocate array and default initialize values
/// - gml__TimeNodePropertyType* soap_new_req_gml__TimeNodePropertyType(soap*, ...) allocate, set required members
/// - gml__TimeNodePropertyType* soap_new_set_gml__TimeNodePropertyType(soap*, ...) allocate, set all public members
/// - gml__TimeNodePropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gml__TimeNodePropertyType(soap*, gml__TimeNodePropertyType*) deserialize from a stream
/// - int soap_write_gml__TimeNodePropertyType(soap*, gml__TimeNodePropertyType*) serialize to a stream
/// - gml__TimeNodePropertyType* gml__TimeNodePropertyType::soap_dup(soap*) returns deep copy of gml__TimeNodePropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__TimeNodePropertyType::soap_del() deep deletes gml__TimeNodePropertyType data members, use only after gml__TimeNodePropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__TimeNodePropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gml__TimeNodePropertyType_sequence
    {
/// <PRE><BLOCKQUOTE>
///   A time node is a zero-dimensional topological primitive that represents an identifiable node in time (it is equivalent to a point in space). A node may act as the termination or initiation of any number of time edges. A time node may be realised as a geometry, its position, whose value is a time instant.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":TimeNode.
    gml__TimeNodeType*                   TimeNode                       1;	///< Required element.
    }                                   *__TimeNodePropertyType_sequence 0;
//  END OF SEQUENCE
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":AssociationAttributeGroup">.
/// Attribute "nilReason" of XSD type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         gml__remoteSchema              0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":OwnershipAttributeGroup">.
/// Attribute "owns" of XSD type xs:boolean.
   @bool                                 owns                           0 = false;	///< Default attribute value="false".
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.opengis.net/gml/3.2":TimeEdgePropertyType is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   gml:TimeEdgePropertyType provides for associating a gml:TimeEdge with an object.
/// </BLOCKQUOTE></PRE>
/// class gml__TimeEdgePropertyType operations:
/// - gml__TimeEdgePropertyType* soap_new_gml__TimeEdgePropertyType(soap*) allocate and default initialize
/// - gml__TimeEdgePropertyType* soap_new_gml__TimeEdgePropertyType(soap*, int num) allocate array and default initialize values
/// - gml__TimeEdgePropertyType* soap_new_req_gml__TimeEdgePropertyType(soap*, ...) allocate, set required members
/// - gml__TimeEdgePropertyType* soap_new_set_gml__TimeEdgePropertyType(soap*, ...) allocate, set all public members
/// - gml__TimeEdgePropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gml__TimeEdgePropertyType(soap*, gml__TimeEdgePropertyType*) deserialize from a stream
/// - int soap_write_gml__TimeEdgePropertyType(soap*, gml__TimeEdgePropertyType*) serialize to a stream
/// - gml__TimeEdgePropertyType* gml__TimeEdgePropertyType::soap_dup(soap*) returns deep copy of gml__TimeEdgePropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__TimeEdgePropertyType::soap_del() deep deletes gml__TimeEdgePropertyType data members, use only after gml__TimeEdgePropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__TimeEdgePropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gml__TimeEdgePropertyType_sequence
    {
/// <PRE><BLOCKQUOTE>
///   A time edge is a one-dimensional topological primitive. It is an open interval that starts and ends at a node. The edge may be realised as a geometry whose value is a time period.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":TimeEdge.
    gml__TimeEdgeType*                   TimeEdge                       1;	///< Required element.
    }                                   *__TimeEdgePropertyType_sequence 0;
//  END OF SEQUENCE
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":AssociationAttributeGroup">.
/// Attribute "nilReason" of XSD type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         gml__remoteSchema              0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":OwnershipAttributeGroup">.
/// Attribute "owns" of XSD type xs:boolean.
   @bool                                 owns                           0 = false;	///< Default attribute value="false".
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.opengis.net/gml/3.2":OperationPropertyType is a complexType.
///
/// class gml__OperationPropertyType operations:
/// - gml__OperationPropertyType* soap_new_gml__OperationPropertyType(soap*) allocate and default initialize
/// - gml__OperationPropertyType* soap_new_gml__OperationPropertyType(soap*, int num) allocate array and default initialize values
/// - gml__OperationPropertyType* soap_new_req_gml__OperationPropertyType(soap*, ...) allocate, set required members
/// - gml__OperationPropertyType* soap_new_set_gml__OperationPropertyType(soap*, ...) allocate, set all public members
/// - gml__OperationPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gml__OperationPropertyType(soap*, gml__OperationPropertyType*) deserialize from a stream
/// - int soap_write_gml__OperationPropertyType(soap*, gml__OperationPropertyType*) serialize to a stream
/// - gml__OperationPropertyType* gml__OperationPropertyType::soap_dup(soap*) returns deep copy of gml__OperationPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__OperationPropertyType::soap_del() deep deletes gml__OperationPropertyType data members, use only after gml__OperationPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__OperationPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gml__OperationPropertyType_sequence
    {
/// Reference "http://www.opengis.net/gml/3.2":AbstractOperation to abstract element.
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractOperation"> with global elements
   $int                                  __unionAbstractOperation      ;	///< Union _gml__union_OperationPropertyType selector: set to SOAP_UNION__gml__union_OperationPropertyType_<fieldname>
/// Union for substitutionGroup gml__AbstractOperation.
    union _gml__union_OperationPropertyType
    {
    }                                    union_OperationPropertyType   ;
//  END OF SUBSTITUTIONS
    }                                   *__OperationPropertyType_sequence 0;
//  END OF SEQUENCE
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":AssociationAttributeGroup">.
/// Attribute "nilReason" of XSD type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         gml__remoteSchema              0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.opengis.net/gml/3.2":TemporalCSPropertyType is a complexType.
///
/// class gml__TemporalCSPropertyType operations:
/// - gml__TemporalCSPropertyType* soap_new_gml__TemporalCSPropertyType(soap*) allocate and default initialize
/// - gml__TemporalCSPropertyType* soap_new_gml__TemporalCSPropertyType(soap*, int num) allocate array and default initialize values
/// - gml__TemporalCSPropertyType* soap_new_req_gml__TemporalCSPropertyType(soap*, ...) allocate, set required members
/// - gml__TemporalCSPropertyType* soap_new_set_gml__TemporalCSPropertyType(soap*, ...) allocate, set all public members
/// - gml__TemporalCSPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gml__TemporalCSPropertyType(soap*, gml__TemporalCSPropertyType*) deserialize from a stream
/// - int soap_write_gml__TemporalCSPropertyType(soap*, gml__TemporalCSPropertyType*) serialize to a stream
/// - gml__TemporalCSPropertyType* gml__TemporalCSPropertyType::soap_dup(soap*) returns deep copy of gml__TemporalCSPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__TemporalCSPropertyType::soap_del() deep deletes gml__TemporalCSPropertyType data members, use only after gml__TemporalCSPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__TemporalCSPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gml__TemporalCSPropertyType_sequence
    {
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":TemporalCS.
    gml__TemporalCSType*                 TemporalCS                     1;	///< Required element.
    }                                   *__TemporalCSPropertyType_sequence 0;
//  END OF SEQUENCE
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":AssociationAttributeGroup">.
/// Attribute "nilReason" of XSD type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         gml__remoteSchema              0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.opengis.net/gml/3.2":ObliqueCartesianCSPropertyType is a complexType.
///
/// class gml__ObliqueCartesianCSPropertyType operations:
/// - gml__ObliqueCartesianCSPropertyType* soap_new_gml__ObliqueCartesianCSPropertyType(soap*) allocate and default initialize
/// - gml__ObliqueCartesianCSPropertyType* soap_new_gml__ObliqueCartesianCSPropertyType(soap*, int num) allocate array and default initialize values
/// - gml__ObliqueCartesianCSPropertyType* soap_new_req_gml__ObliqueCartesianCSPropertyType(soap*, ...) allocate, set required members
/// - gml__ObliqueCartesianCSPropertyType* soap_new_set_gml__ObliqueCartesianCSPropertyType(soap*, ...) allocate, set all public members
/// - gml__ObliqueCartesianCSPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gml__ObliqueCartesianCSPropertyType(soap*, gml__ObliqueCartesianCSPropertyType*) deserialize from a stream
/// - int soap_write_gml__ObliqueCartesianCSPropertyType(soap*, gml__ObliqueCartesianCSPropertyType*) serialize to a stream
/// - gml__ObliqueCartesianCSPropertyType* gml__ObliqueCartesianCSPropertyType::soap_dup(soap*) returns deep copy of gml__ObliqueCartesianCSPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__ObliqueCartesianCSPropertyType::soap_del() deep deletes gml__ObliqueCartesianCSPropertyType data members, use only after gml__ObliqueCartesianCSPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__ObliqueCartesianCSPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gml__ObliqueCartesianCSPropertyType_sequence
    {
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":ObliqueCartesianCS.
    gml__ObliqueCartesianCSType*         ObliqueCartesianCS             1;	///< Required element.
    }                                   *__ObliqueCartesianCSPropertyType_sequence 0;
//  END OF SEQUENCE
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":AssociationAttributeGroup">.
/// Attribute "nilReason" of XSD type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         gml__remoteSchema              0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.opengis.net/gml/3.2":GeographicCRSPropertyType is a complexType.
///
/// class gml__GeographicCRSPropertyType operations:
/// - gml__GeographicCRSPropertyType* soap_new_gml__GeographicCRSPropertyType(soap*) allocate and default initialize
/// - gml__GeographicCRSPropertyType* soap_new_gml__GeographicCRSPropertyType(soap*, int num) allocate array and default initialize values
/// - gml__GeographicCRSPropertyType* soap_new_req_gml__GeographicCRSPropertyType(soap*, ...) allocate, set required members
/// - gml__GeographicCRSPropertyType* soap_new_set_gml__GeographicCRSPropertyType(soap*, ...) allocate, set all public members
/// - gml__GeographicCRSPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gml__GeographicCRSPropertyType(soap*, gml__GeographicCRSPropertyType*) deserialize from a stream
/// - int soap_write_gml__GeographicCRSPropertyType(soap*, gml__GeographicCRSPropertyType*) serialize to a stream
/// - gml__GeographicCRSPropertyType* gml__GeographicCRSPropertyType::soap_dup(soap*) returns deep copy of gml__GeographicCRSPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__GeographicCRSPropertyType::soap_del() deep deletes gml__GeographicCRSPropertyType data members, use only after gml__GeographicCRSPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__GeographicCRSPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gml__GeographicCRSPropertyType_sequence
    {
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":GeographicCRS.
    gml__GeographicCRSType*              GeographicCRS                  1;	///< Required element.
    }                                   *__GeographicCRSPropertyType_sequence 0;
//  END OF SEQUENCE
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":AssociationAttributeGroup">.
/// Attribute "nilReason" of XSD type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         gml__remoteSchema              0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.opengis.net/gml/3.2":GeocentricCRSPropertyType is a complexType.
///
/// class gml__GeocentricCRSPropertyType operations:
/// - gml__GeocentricCRSPropertyType* soap_new_gml__GeocentricCRSPropertyType(soap*) allocate and default initialize
/// - gml__GeocentricCRSPropertyType* soap_new_gml__GeocentricCRSPropertyType(soap*, int num) allocate array and default initialize values
/// - gml__GeocentricCRSPropertyType* soap_new_req_gml__GeocentricCRSPropertyType(soap*, ...) allocate, set required members
/// - gml__GeocentricCRSPropertyType* soap_new_set_gml__GeocentricCRSPropertyType(soap*, ...) allocate, set all public members
/// - gml__GeocentricCRSPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gml__GeocentricCRSPropertyType(soap*, gml__GeocentricCRSPropertyType*) deserialize from a stream
/// - int soap_write_gml__GeocentricCRSPropertyType(soap*, gml__GeocentricCRSPropertyType*) serialize to a stream
/// - gml__GeocentricCRSPropertyType* gml__GeocentricCRSPropertyType::soap_dup(soap*) returns deep copy of gml__GeocentricCRSPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__GeocentricCRSPropertyType::soap_del() deep deletes gml__GeocentricCRSPropertyType data members, use only after gml__GeocentricCRSPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__GeocentricCRSPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gml__GeocentricCRSPropertyType_sequence
    {
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":GeocentricCRS.
    gml__GeocentricCRSType*              GeocentricCRS                  1;	///< Required element.
    }                                   *__GeocentricCRSPropertyType_sequence 0;
//  END OF SEQUENCE
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":AssociationAttributeGroup">.
/// Attribute "nilReason" of XSD type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         gml__remoteSchema              0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.opengis.net/gml/3.2":DMSAngleType is a complexType.
///
/// class gml__DMSAngleType operations:
/// - gml__DMSAngleType* soap_new_gml__DMSAngleType(soap*) allocate and default initialize
/// - gml__DMSAngleType* soap_new_gml__DMSAngleType(soap*, int num) allocate array and default initialize values
/// - gml__DMSAngleType* soap_new_req_gml__DMSAngleType(soap*, ...) allocate, set required members
/// - gml__DMSAngleType* soap_new_set_gml__DMSAngleType(soap*, ...) allocate, set all public members
/// - gml__DMSAngleType::soap_default(soap*) default initialize members
/// - int soap_read_gml__DMSAngleType(soap*, gml__DMSAngleType*) deserialize from a stream
/// - int soap_write_gml__DMSAngleType(soap*, gml__DMSAngleType*) serialize to a stream
/// - gml__DMSAngleType* gml__DMSAngleType::soap_dup(soap*) returns deep copy of gml__DMSAngleType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__DMSAngleType::soap_del() deep deletes gml__DMSAngleType data members, use only after gml__DMSAngleType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__DMSAngleType : public xsd__anyType
{ public:
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":degrees.
    gml__DegreesType*                    degrees                        1;	///< Required element.
//  BEGIN CHOICE <xs:choice minOccurs="0">
/// @note <xs:choice> with embedded <xs:sequence> or <xs:group> prevents the use of a union for <xs:choice>. Instead of being members of a union, the following members are declared optional. Only one member should be non-NULL by choice.
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":decimalMinutes.
    gml__DecimalMinutesType*             decimalMinutes                 nullptr;	///< Required nillable (xsi:nil when NULL) element.
//  BEGIN SEQUENCE <xs:sequence>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":minutes.
    gml__ArcMinutesType*                 minutes                        nullptr;	///< Required nillable (xsi:nil when NULL) element.
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":seconds.
    gml__ArcSecondsType*                 seconds                       ;
//  END OF SEQUENCE
//  END OF CHOICE
};

/// @brief "http://www.opengis.net/gml/3.2":AngleChoiceType is a complexType.
///
/// class gml__AngleChoiceType operations:
/// - gml__AngleChoiceType* soap_new_gml__AngleChoiceType(soap*) allocate and default initialize
/// - gml__AngleChoiceType* soap_new_gml__AngleChoiceType(soap*, int num) allocate array and default initialize values
/// - gml__AngleChoiceType* soap_new_req_gml__AngleChoiceType(soap*, ...) allocate, set required members
/// - gml__AngleChoiceType* soap_new_set_gml__AngleChoiceType(soap*, ...) allocate, set all public members
/// - gml__AngleChoiceType::soap_default(soap*) default initialize members
/// - int soap_read_gml__AngleChoiceType(soap*, gml__AngleChoiceType*) deserialize from a stream
/// - int soap_write_gml__AngleChoiceType(soap*, gml__AngleChoiceType*) serialize to a stream
/// - gml__AngleChoiceType* gml__AngleChoiceType::soap_dup(soap*) returns deep copy of gml__AngleChoiceType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__AngleChoiceType::soap_del() deep deletes gml__AngleChoiceType data members, use only after gml__AngleChoiceType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__AngleChoiceType : public xsd__anyType
{ public:
//  BEGIN CHOICE <xs:choice>
   $int                                  __union_AngleChoiceType       ;	///< Union _gml__union_AngleChoiceType selector: set to SOAP_UNION__gml__union_AngleChoiceType_<fieldname>
/// Union for choice in gml__AngleChoiceType.
    union _gml__union_AngleChoiceType
    {
/// <PRE><BLOCKQUOTE>
///   The gml:angle property element is used to record the value of an angle quantity as a single number, with its units.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":angle.
    gml__AngleType*                      angle                          nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":dmsAngle.
    gml__DMSAngleType*                   dmsAngle                       nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_AngleChoiceType         ;
//  END OF CHOICE
};

/// @brief "http://www.opengis.net/gml/3.2":ArrayAssociationType is a complexType.
///
/// class gml__ArrayAssociationType operations:
/// - gml__ArrayAssociationType* soap_new_gml__ArrayAssociationType(soap*) allocate and default initialize
/// - gml__ArrayAssociationType* soap_new_gml__ArrayAssociationType(soap*, int num) allocate array and default initialize values
/// - gml__ArrayAssociationType* soap_new_req_gml__ArrayAssociationType(soap*, ...) allocate, set required members
/// - gml__ArrayAssociationType* soap_new_set_gml__ArrayAssociationType(soap*, ...) allocate, set all public members
/// - gml__ArrayAssociationType::soap_default(soap*) default initialize members
/// - int soap_read_gml__ArrayAssociationType(soap*, gml__ArrayAssociationType*) deserialize from a stream
/// - int soap_write_gml__ArrayAssociationType(soap*, gml__ArrayAssociationType*) serialize to a stream
/// - gml__ArrayAssociationType* gml__ArrayAssociationType::soap_dup(soap*) returns deep copy of gml__ArrayAssociationType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__ArrayAssociationType::soap_del() deep deletes gml__ArrayAssociationType data members, use only after gml__ArrayAssociationType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__ArrayAssociationType : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   This element has no type defined, and is therefore implicitly (according to the rules of W3C XML Schema) an XML Schema anyType. It is used as the head of an XML Schema substitution group which unifies complex content and certain simple content elements used for datatypes in GML, including the gml:AbstractGML substitution group.
/// </BLOCKQUOTE></PRE>
/// Reference "http://www.opengis.net/gml/3.2":AbstractObject to abstract element.
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractObject" minOccurs="0" maxOccurs="unbounded"> with global elements <HILUCSPresence> <SpecificPercentage> <SpecificPresence> <HILUCSPercentage> <OfficialJournalInformation> <Contact> <RelatedParty> <ThematicIdentifier> <AffinePlacement> <Envelope> <DataBlock> <File> <coverageFunction> <CoverageMappingRule> <GridFunction> <Identifier> <Identifier> <DimensioningIndicationValue> <DimensioningIndicationValue> <OrdinanceValue> <OrdinanceValue> <BackgroundMapValue> <BackgroundMapValue>
   $int                                  __sizeAbstractObject           0;
    class __gml__union_ArrayAssociationType
    {
   $int                                  __unionAbstractObject          0;	///< Union _gml__union_ArrayAssociationType selector: set to SOAP_UNION__gml__union_ArrayAssociationType_<fieldname> or 0 to omit
/// Union for substitutionGroup gml__AbstractObject.
    union _gml__union_ArrayAssociationType
    {
/// <PRE><BLOCKQUOTE>
///   -- Name --
///   HILUCS presence
///   -- Definition --
///   Presence of one or several HILUCS values in an area, indicated either as the percentage covered for each value or as the values listed in their order of importance.
///   -- Description --
///   The HILUCS presence data type enables the provision of information on land uses inside one land use object in order to collect more than one land use existence perfectly identifiable by importance order or percentages. NOTE 1: The order of land use value presence without percentages enable providing an order of dominance/importance of each land use present in the land use object
///   NOTE 2: The sum of the percentages can be below 100%, or above. The order is provided according to the respective importance when the percentages are not known.
/// </BLOCKQUOTE></PRE>
/// Element "http://inspire.ec.europa.eu/schemas/lunom/3.0":HILUCSPresence.
    lunom__HILUCSPresenceType*           lunom__HILUCSPresence          nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   -- Name --
///   specific percentage
///   -- Definition --
///   Percentage of land use object that is covered by this specific presence.
/// </BLOCKQUOTE></PRE>
/// Element "http://inspire.ec.europa.eu/schemas/lunom/3.0":SpecificPercentage.
    lunom__SpecificPercentageType*       lunom__SpecificPercentage      nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   -- Name --
///   specific presence
///   -- Definition --
///   Presence of one or several land use classification values in an area according to the code list
///   provided by the data provider, indicated either as the percentage covered for each value or as
///   the values listed in their order of importance.
///   -- Description --
///   NOTE 1: The order of land use value presence without percentages enable providing an order of dominance/importance of each land use present in the land use object
///   NOTE 2: The sum of the percentages can be below 100%, or above. The order is provided according to the respective importance when the percentages are not known.
/// </BLOCKQUOTE></PRE>
/// Element "http://inspire.ec.europa.eu/schemas/lunom/3.0":SpecificPresence.
    lunom__SpecificPresenceType*         lunom__SpecificPresence        nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   -- Name --
///   HILUCS percentage
///   -- Definition --
///   Percentage of land use object that is covered by this HILUCS presence.
///   -- Description --
///   NOTE1:The percentage is according to the socio-economic or functional importance of the use.
///   NOTE2:examples are provided in the narrative description part of the data specification.
/// </BLOCKQUOTE></PRE>
/// Element "http://inspire.ec.europa.eu/schemas/lunom/3.0":HILUCSPercentage.
    lunom__HILUCSPercentageType*         lunom__HILUCSPercentage        nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   -- Name --
///   official journal information
///   -- Definition --
///   Full citation of the location of the legislative instrument within the official journal.
/// </BLOCKQUOTE></PRE>
/// Element "http://inspire.ec.europa.eu/schemas/base2/1.0":OfficialJournalInformation.
    base2__OfficialJournalInformationType*  base2__OfficialJournalInformation nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   -- Name --
///   contact
///   -- Definition --
///   Communication channels by which it is possible to gain access to someone or something.
///   -- Description --
/// </BLOCKQUOTE></PRE>
/// Element "http://inspire.ec.europa.eu/schemas/base2/1.0":Contact.
    base2__ContactType*                  base2__Contact                 nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   -- Name --
///   related party
///   -- Definition --
///   An organisation or a person with a role related to a resource.
///   -- Description --
///   NOTE 1 A party, typically an individual person, acting as a general point of contact for a resource can be specified without providing any particular role.
/// </BLOCKQUOTE></PRE>
/// Element "http://inspire.ec.europa.eu/schemas/base2/1.0":RelatedParty.
    base2__RelatedPartyType*             base2__RelatedParty            nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   -- Name --
///   thematic identifier
///   -- Definition --
///   Thematic identifier to uniquely identify the spatial object. -- Description --
///   Some spatial objects may be assigned multiple unique identifiers. These may have been established to meet data exchange requirements of different reporting obligations at International, European or national levels and/or internal data maintenance requirements.
/// </BLOCKQUOTE></PRE>
/// Element "http://inspire.ec.europa.eu/schemas/base2/1.0":ThematicIdentifier.
    base2__ThematicIdentifierType*       base2__ThematicIdentifier      nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   location, refDirection, inDimension and outDimension have the same meaning as specified in ISO 19107:2003, 6.4.21.
/// </BLOCKQUOTE></PRE>
/// Element "http://www.opengis.net/gml/3.2":AffinePlacement.
    gml__AffinePlacementType*            AffinePlacement                nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   Envelope defines an extent using a pair of positions defining opposite corners in arbitrary dimensions. The first direct position is the "lower corner" (a coordinate position consisting of all the minimal ordinates for each dimension for all points within the envelope), the second one the "upper corner" (a coordinate position consisting of all the maximal ordinates for each dimension for all points within the envelope).
///   The use of the properties "coordinates" and "pos" has been deprecated. The explicitly named properties "lowerCorner" and "upperCorner" shall be used instead.
/// </BLOCKQUOTE></PRE>
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="Envelope"> with global elements <EnvelopeWithTimePeriod>
/// <PRE><BLOCKQUOTE>
///   Envelope defines an extent using a pair of positions defining opposite corners in arbitrary dimensions. The first direct position is the "lower corner" (a coordinate position consisting of all the minimal ordinates for each dimension for all points within the envelope), the second one the "upper corner" (a coordinate position consisting of all the maximal ordinates for each dimension for all points within the envelope).
///   The use of the properties "coordinates" and "pos" has been deprecated. The explicitly named properties "lowerCorner" and "upperCorner" shall be used instead.
/// </BLOCKQUOTE></PRE>
/// Element "http://www.opengis.net/gml/3.2":Envelope.
    gml__EnvelopeType*                   Envelope                       nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   gml:EnvelopeWithTimePeriod is provided for envelopes that include a temporal extent. It adds two time position properties, gml:beginPosition and gml:endPosition, which describe the extent of a time-envelope. Since gml:EnvelopeWithTimePeriod is assigned to the substitution group headed by gml:Envelope, it may be used whenever gml:Envelope is valid.
/// </BLOCKQUOTE></PRE>
/// Element "http://www.opengis.net/gml/3.2":EnvelopeWithTimePeriod.
    gml__EnvelopeWithTimePeriodType*     EnvelopeWithTimePeriod         nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
//  END OF SUBSTITUTIONS
/// <PRE><BLOCKQUOTE>
///   gml:DataBlock describes the Range as a block of text encoded values similar to a Common Separated Value (CSV) representation.
///   The range set parameterization is described by the property gml:rangeParameters.
/// </BLOCKQUOTE></PRE>
/// Element "http://www.opengis.net/gml/3.2":DataBlock.
    gml__DataBlockType*                  DataBlock                      nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   for efficiency reasons, GML also provides a means of encoding the range set in an arbitrary external encoding, such as a binary file. This encoding may be "well-known" but this is not required. This mode uses the gml:File element.
///   The values of the coverage (attribute values in the range set) are transmitted in a external file that is referenced from the XML structure described by gml:FileType. The external file is referenced by the gml:fileReference property that is an anyURI (the gml:fileName property has been deprecated). This means that the external file may be located remotely from the referencing GML instance. The gml:compression property points to a definition of a compression algorithm through an anyURI. This may be a retrievable, computable definition or simply a reference to an unambiguous name for the compression method.
///   The gml:mimeType property points to a definition of the file mime type.
///   The gml:fileStructure property is defined by a codelist. Note further that all values shall be enclosed in a single file. Multi-file structures for values are not supported in GML.
///   The semantics of the range set is described as above using the gml:rangeParameters property.
///   Note that if any compression algorithm is applied, the structure above applies only to the pre-compression or post-decompression structure of the file.
///   Note that the fields within a record match the gml:valueComponents of the gml:CompositeValue in document order.
/// </BLOCKQUOTE></PRE>
/// Element "http://www.opengis.net/gml/3.2":File.
    gml__FileType*                       File                           nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   The gml:coverageFunction property describes the mapping function from the domain to the range of the coverage.
///   The value of the CoverageFunction is one of gml:CoverageMappingRule and gml:GridFunction.
///   If the gml:coverageFunction property is omitted for a gridded coverage (including rectified gridded coverages) the gml:startPoint is assumed to be the value of the gml:low property in the gml:Grid geometry, and the gml:sequenceRule is assumed to be linear and the gml:axisOrder property is assumed to be "+1 +2".
/// </BLOCKQUOTE></PRE>
/// Element "http://www.opengis.net/gml/3.2":coverageFunction.
    gml__CoverageFunctionType*           coverageFunction               nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   gml:CoverageMappingRule provides a formal or informal description of the coverage function.
///   The mapping rule may be defined as an in-line string (gml:ruleDefinition) or via a remote reference through xlink:href (gml:ruleReference). If no rule name is specified, the default is 'Linear' with respect to members of the domain in document order.
/// </BLOCKQUOTE></PRE>
/// Element "http://www.opengis.net/gml/3.2":CoverageMappingRule.
    gml__MappingRuleType*                CoverageMappingRule            nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   gml:GridFunction provides an explicit mapping rule for grid geometries, i.e. the domain shall be a geometry of type grid. It describes the mapping of grid posts (discrete point grid coverage) or grid cells (discrete surface coverage) to the values in the range set.
///   The gml:startPoint is the index position of a point in the grid that is mapped to the first point in the range set (this is also the index position of the first grid post). If the gml:startPoint property is omitted the gml:startPoint is assumed to be equal to the value of gml:low in the gml:Grid geometry. Subsequent points in the mapping are determined by the value of the gml:sequenceRule.
/// </BLOCKQUOTE></PRE>
/// Element "http://www.opengis.net/gml/3.2":GridFunction.
    gml__GridFunctionType*               GridFunction                   nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   -- Definition --
///   External unique object identifier published by the responsible body, which may be used by external applications to reference the spatial object.
///   -- Description --
///   NOTE1 External object identifiers are distinct from thematic object identifiers.
///   NOTE 2 The voidable version identifier attribute is not part of the unique identifier of a spatial object and may be used to distinguish two versions of the same spatial object.
///   NOTE 3 The unique identifier will not change during the life-time of a spatial object.
/// </BLOCKQUOTE></PRE>
/// Element "http://inspire.ec.europa.eu/schemas/base/3.3":Identifier.
    base__IdentifierType*                base__Identifier               nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   -- Definition --
///   External unique object identifier published by the responsible body, which may be used by external applications to reference the spatial object.
///   -- Description --
///   NOTE1 External object identifiers are distinct from thematic object identifiers.
///   NOTE 2 The voidable version identifier attribute is not part of the unique identifier of a spatial object and may be used to distinguish two versions of the same spatial object.
///   NOTE 3 The unique identifier will not change during the life-time of a spatial object.
/// </BLOCKQUOTE></PRE>
/// Element "http://inspire.ec.europa.eu/schemas/base/3.3":Identifier.
    //jld base__IdentifierType*                base__Identifier               nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   -- Name --
///   Dimension Indication
///   -- Definition --
///   Specifications about the dimensioning of the urban developments.
/// </BLOCKQUOTE></PRE>
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="DimensioningIndicationValue"> with global elements <DimensioningIndicationMeasureValue> <DimensioningIndicationIntegerValue> <DimensioningIndicationCharacterValue> <DimensioningIndicationRealValue>
/// <PRE><BLOCKQUOTE>
///   -- Name --
///   Dimension Indication
///   -- Definition --
///   Specifications about the dimensioning of the urban developments.
/// </BLOCKQUOTE></PRE>
/// Element "http://inspire.ec.europa.eu/schemas/plu/3.0":DimensioningIndicationValue.
    plu__DimensioningIndicationValueType*  plu__DimensioningIndicationValue nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   -- Name --
///   dimension indication measure value
///   -- Definition --
///   Dimensioning indication whose value is a measure.
/// </BLOCKQUOTE></PRE>
/// Element "http://inspire.ec.europa.eu/schemas/plu/3.0":DimensioningIndicationMeasureValue.
    //jld plu__DimensioningIndicationMeasureValueType*  plu__DimensioningIndicationMeasureValue nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   -- Name --
///   dimension indication integer value
///   -- Definition --
///   Dimensioning indication whose value is of type integer.
/// </BLOCKQUOTE></PRE>
/// Element "http://inspire.ec.europa.eu/schemas/plu/3.0":DimensioningIndicationIntegerValue.
    plu__DimensioningIndicationIntegerValueType*  plu__DimensioningIndicationIntegerValue nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   -- Name --
///   dimension indication character value
///   -- Definition --
///   Dimensioning indication whose value is of type CharacterString.
/// </BLOCKQUOTE></PRE>
/// Element "http://inspire.ec.europa.eu/schemas/plu/3.0":DimensioningIndicationCharacterValue.
    //jld plu__DimensioningIndicationCharacterValueType*  plu__DimensioningIndicationCharacterValue nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   -- Name --
///   dimension indication real value
///   -- Definition --
///   Dimensioning indication whose value is a floating point number.
/// </BLOCKQUOTE></PRE>
/// Element "http://inspire.ec.europa.eu/schemas/plu/3.0":DimensioningIndicationRealValue.
    plu__DimensioningIndicationRealValueType*  plu__DimensioningIndicationRealValue nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
//  END OF SUBSTITUTIONS
/// <PRE><BLOCKQUOTE>
///   -- Name --
///   Dimension Indication
///   -- Definition --
///   Specifications about the dimensioning of the urban developments.
/// </BLOCKQUOTE></PRE>
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="DimensioningIndicationValue"> with global elements <DimensioningIndicationMeasureValue> <DimensioningIndicationIntegerValue> <DimensioningIndicationCharacterValue> <DimensioningIndicationRealValue>
/// <PRE><BLOCKQUOTE>
///   -- Name --
///   Dimension Indication
///   -- Definition --
///   Specifications about the dimensioning of the urban developments.
/// </BLOCKQUOTE></PRE>
/// Element "http://inspire.ec.europa.eu/schemas/plu/3.0":DimensioningIndicationValue.
    //jld plu__DimensioningIndicationValueType*  plu__DimensioningIndicationValue nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   -- Name --
///   dimension indication measure value
///   -- Definition --
///   Dimensioning indication whose value is a measure.
/// </BLOCKQUOTE></PRE>
/// Element "http://inspire.ec.europa.eu/schemas/plu/3.0":DimensioningIndicationMeasureValue.
    plu__DimensioningIndicationMeasureValueType*  plu__DimensioningIndicationMeasureValue nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   -- Name --
///   dimension indication integer value
///   -- Definition --
///   Dimensioning indication whose value is of type integer.
/// </BLOCKQUOTE></PRE>
/// Element "http://inspire.ec.europa.eu/schemas/plu/3.0":DimensioningIndicationIntegerValue.
    //jld plu__DimensioningIndicationIntegerValueType*  plu__DimensioningIndicationIntegerValue nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   -- Name --
///   dimension indication character value
///   -- Definition --
///   Dimensioning indication whose value is of type CharacterString.
/// </BLOCKQUOTE></PRE>
/// Element "http://inspire.ec.europa.eu/schemas/plu/3.0":DimensioningIndicationCharacterValue.
    plu__DimensioningIndicationCharacterValueType*  plu__DimensioningIndicationCharacterValue nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   -- Name --
///   dimension indication real value
///   -- Definition --
///   Dimensioning indication whose value is a floating point number.
/// </BLOCKQUOTE></PRE>
/// Element "http://inspire.ec.europa.eu/schemas/plu/3.0":DimensioningIndicationRealValue.
    //jld plu__DimensioningIndicationRealValueType*  plu__DimensioningIndicationRealValue nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
//  END OF SUBSTITUTIONS
/// <PRE><BLOCKQUOTE>
///   -- Definition --
///   Reference to administrative ordinance. Ordinance is a regulation/rule that is adopted by an authority that is legally mandated to take such ordinance.
/// </BLOCKQUOTE></PRE>
/// Element "http://inspire.ec.europa.eu/schemas/plu/3.0":OrdinanceValue.
    plu__OrdinanceValueType*             plu__OrdinanceValue            nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   -- Definition --
///   Reference to administrative ordinance. Ordinance is a regulation/rule that is adopted by an authority that is legally mandated to take such ordinance.
/// </BLOCKQUOTE></PRE>
/// Element "http://inspire.ec.europa.eu/schemas/plu/3.0":OrdinanceValue.
    //jld plu__OrdinanceValueType*             plu__OrdinanceValue            nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   -- Definition --
///   Information regarding the map that has been used as a background in the definition of a spatial plan, a zoning element or a supplementary regulation.
/// </BLOCKQUOTE></PRE>
/// Element "http://inspire.ec.europa.eu/schemas/plu/3.0":BackgroundMapValue.
    plu__BackgroundMapValueType*         plu__BackgroundMapValue        nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   -- Definition --
///   Information regarding the map that has been used as a background in the definition of a spatial plan, a zoning element or a supplementary regulation.
/// </BLOCKQUOTE></PRE>
/// Element "http://inspire.ec.europa.eu/schemas/plu/3.0":BackgroundMapValue.
    //jld plu__BackgroundMapValueType*         plu__BackgroundMapValue        nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_ArrayAssociationType    ;
    }                                   *__union_ArrayAssociationType  ;
//  END OF SUBSTITUTIONS
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":OwnershipAttributeGroup">.
/// Attribute "owns" of XSD type xs:boolean.
   @bool                                 owns                           0 = false;	///< Default attribute value="false".
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.opengis.net/gml/3.2":MetaDataPropertyType is a complexType.
///
/// class gml__MetaDataPropertyType operations:
/// - gml__MetaDataPropertyType* soap_new_gml__MetaDataPropertyType(soap*) allocate and default initialize
/// - gml__MetaDataPropertyType* soap_new_gml__MetaDataPropertyType(soap*, int num) allocate array and default initialize values
/// - gml__MetaDataPropertyType* soap_new_req_gml__MetaDataPropertyType(soap*, ...) allocate, set required members
/// - gml__MetaDataPropertyType* soap_new_set_gml__MetaDataPropertyType(soap*, ...) allocate, set all public members
/// - gml__MetaDataPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gml__MetaDataPropertyType(soap*, gml__MetaDataPropertyType*) deserialize from a stream
/// - int soap_write_gml__MetaDataPropertyType(soap*, gml__MetaDataPropertyType*) serialize to a stream
/// - gml__MetaDataPropertyType* gml__MetaDataPropertyType::soap_dup(soap*) returns deep copy of gml__MetaDataPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__MetaDataPropertyType::soap_del() deep deletes gml__MetaDataPropertyType data members, use only after gml__MetaDataPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__MetaDataPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gml__MetaDataPropertyType_sequence
    {
/// Reference "http://www.opengis.net/gml/3.2":AbstractMetaData to abstract element.
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractMetaData"> with global elements <GenericMetaData>
   $int                                  __unionAbstractMetaData       ;	///< Union _gml__union_MetaDataPropertyType selector: set to SOAP_UNION__gml__union_MetaDataPropertyType_<fieldname>
/// Union for substitutionGroup gml__AbstractMetaData.
    union _gml__union_MetaDataPropertyType
    {
/// Element "http://www.opengis.net/gml/3.2":GenericMetaData.
    gml__GenericMetaDataType*            GenericMetaData                nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_MetaDataPropertyType    ;
//  END OF SUBSTITUTIONS
    }                                   *__MetaDataPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute "about" of XSD type xs:anyURI.
   @xsd__anyURI*                         about                          0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":AssociationAttributeGroup">.
/// Attribute "nilReason" of XSD type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         gml__remoteSchema              0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.opengis.net/gml/3.2":AbstractMetaDataType is an abstract complexType.
///
/// class gml__AbstractMetaDataType operations:
/// - gml__AbstractMetaDataType* soap_new_gml__AbstractMetaDataType(soap*) allocate and default initialize
/// - gml__AbstractMetaDataType* soap_new_gml__AbstractMetaDataType(soap*, int num) allocate array and default initialize values
/// - gml__AbstractMetaDataType* soap_new_req_gml__AbstractMetaDataType(soap*, ...) allocate, set required members
/// - gml__AbstractMetaDataType* soap_new_set_gml__AbstractMetaDataType(soap*, ...) allocate, set all public members
/// - gml__AbstractMetaDataType::soap_default(soap*) default initialize members
/// - int soap_read_gml__AbstractMetaDataType(soap*, gml__AbstractMetaDataType*) deserialize from a stream
/// - int soap_write_gml__AbstractMetaDataType(soap*, gml__AbstractMetaDataType*) serialize to a stream
/// - gml__AbstractMetaDataType* gml__AbstractMetaDataType::soap_dup(soap*) returns deep copy of gml__AbstractMetaDataType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__AbstractMetaDataType::soap_del() deep deletes gml__AbstractMetaDataType data members, use only after gml__AbstractMetaDataType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__AbstractMetaDataType : public xsd__anyType
{ public:
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":id.
/// <PRE><BLOCKQUOTE>
///   The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.
/// </BLOCKQUOTE></PRE>
   @xsd__ID*                             gml__id                        0;	///< Optional attribute.
/// @todo This mixed content complexType is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __mixed                       0;	///< Catch mixed content in XML string.
};

/// @brief "http://www.opengis.net/gml/3.2":LocationPropertyType is a complexType.
///
/// class gml__LocationPropertyType operations:
/// - gml__LocationPropertyType* soap_new_gml__LocationPropertyType(soap*) allocate and default initialize
/// - gml__LocationPropertyType* soap_new_gml__LocationPropertyType(soap*, int num) allocate array and default initialize values
/// - gml__LocationPropertyType* soap_new_req_gml__LocationPropertyType(soap*, ...) allocate, set required members
/// - gml__LocationPropertyType* soap_new_set_gml__LocationPropertyType(soap*, ...) allocate, set all public members
/// - gml__LocationPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gml__LocationPropertyType(soap*, gml__LocationPropertyType*) deserialize from a stream
/// - int soap_write_gml__LocationPropertyType(soap*, gml__LocationPropertyType*) serialize to a stream
/// - gml__LocationPropertyType* gml__LocationPropertyType::soap_dup(soap*) returns deep copy of gml__LocationPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__LocationPropertyType::soap_del() deep deletes gml__LocationPropertyType data members, use only after gml__LocationPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__LocationPropertyType : public xsd__anyType
{ public:
//  BEGIN CHOICE <xs:choice>
   $int                                  __union_LocationPropertyType  ;	///< Union _gml__union_LocationPropertyType selector: set to SOAP_UNION__gml__union_LocationPropertyType_<fieldname>
    union _gml__union_LocationPropertyType
    {
/// <PRE><BLOCKQUOTE>
///   The AbstractGeometry element is the abstract head of the substitution group for all geometry elements of GML. This includes pre-defined and user-defined geometry elements. Any geometry element shall be a direct or indirect extension/restriction of AbstractGeometryType and shall be directly or indirectly in the substitution group of AbstractGeometry.
/// </BLOCKQUOTE></PRE>
/// Reference "http://www.opengis.net/gml/3.2":AbstractGeometry to abstract element.
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractGeometry"> with global elements <GeometricComplex>
/// Element "http://www.opengis.net/gml/3.2":GeometricComplex.
    gml__GeometricComplexType*           GeometricComplex               nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
//  END OF SUBSTITUTIONS
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":LocationKeyWord.
    gml__CodeType*                       LocationKeyWord                nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":LocationString.
    gml__StringOrRefType*                LocationString                 nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":Null.
    gml__NilReasonType*                  Null                           nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_LocationPropertyType    ;
//  END OF CHOICE
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":AssociationAttributeGroup">.
/// Attribute "nilReason" of XSD type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         gml__remoteSchema              0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.opengis.net/gml/3.2":FeatureArrayPropertyType is a complexType.
///
/// class gml__FeatureArrayPropertyType operations:
/// - gml__FeatureArrayPropertyType* soap_new_gml__FeatureArrayPropertyType(soap*) allocate and default initialize
/// - gml__FeatureArrayPropertyType* soap_new_gml__FeatureArrayPropertyType(soap*, int num) allocate array and default initialize values
/// - gml__FeatureArrayPropertyType* soap_new_req_gml__FeatureArrayPropertyType(soap*, ...) allocate, set required members
/// - gml__FeatureArrayPropertyType* soap_new_set_gml__FeatureArrayPropertyType(soap*, ...) allocate, set all public members
/// - gml__FeatureArrayPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gml__FeatureArrayPropertyType(soap*, gml__FeatureArrayPropertyType*) deserialize from a stream
/// - int soap_write_gml__FeatureArrayPropertyType(soap*, gml__FeatureArrayPropertyType*) serialize to a stream
/// - gml__FeatureArrayPropertyType* gml__FeatureArrayPropertyType::soap_dup(soap*) returns deep copy of gml__FeatureArrayPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__FeatureArrayPropertyType::soap_del() deep deletes gml__FeatureArrayPropertyType data members, use only after gml__FeatureArrayPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__FeatureArrayPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0" maxOccurs="unbounded">
    std::vector<
    class __gml__FeatureArrayPropertyType_sequence
    {
/// <PRE><BLOCKQUOTE>
///   This abstract element serves as the head of a substitution group which may contain any elements whose content model is derived from gml:AbstractFeatureType. This may be used as a variable in the construction of content models. gml:AbstractFeature may be thought of as "anything that is a GML feature" and may be used to define variables or templates in which the value of a GML property is "any feature". This occurs in particular in a GML feature collection where the feature member properties contain one or multiple copies of gml:AbstractFeature respectively.
/// </BLOCKQUOTE></PRE>
/// Reference "http://www.opengis.net/gml/3.2":AbstractFeature to abstract element.
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractFeature"> with global elements <DynamicFeature> <Observation> <FeatureCollection> <SpatialDataSet> <SpatialDataSet> <ZoningElement> <ZoningElement> <OfficialDocumentation> <OfficialDocumentation> <SupplementaryRegulation> <SupplementaryRegulation> <SpatialPlan> <SpatialPlan>
   $int                                  __unionAbstractFeature        ;	///< Union _gml__union_FeatureArrayPropertyType selector: set to SOAP_UNION__gml__union_FeatureArrayPropertyType_<fieldname>
/// Union for substitutionGroup gml__AbstractFeature.
    union _gml__union_FeatureArrayPropertyType
    {
/// <PRE><BLOCKQUOTE>
///   States are captured by time-stamped instances of a feature. The content model extends the standard gml:AbstractFeatureType with the gml:dynamicProperties model group.
///   Each time-stamped instance represents a 'snapshot' of a feature. The dynamic feature classes will normally be extended to suit particular applications. A dynamic feature bears either a time stamp or a history.
/// </BLOCKQUOTE></PRE>
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="DynamicFeature"> with global elements <DynamicFeatureCollection>
/// <PRE><BLOCKQUOTE>
///   States are captured by time-stamped instances of a feature. The content model extends the standard gml:AbstractFeatureType with the gml:dynamicProperties model group.
///   Each time-stamped instance represents a 'snapshot' of a feature. The dynamic feature classes will normally be extended to suit particular applications. A dynamic feature bears either a time stamp or a history.
/// </BLOCKQUOTE></PRE>
/// Element "http://www.opengis.net/gml/3.2":DynamicFeature.
    gml__DynamicFeatureType*             DynamicFeature                 nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   A gml:DynamicFeatureCollection is a feature collection that has a gml:validTime property (i.e. is a snapshot of the feature collection) or which has a gml:history property that contains one or more gml:AbstractTimeSlices each of which contain values of the time varying properties of the feature collection. Note that the gml:DynamicFeatureCollection may be one of the following:
///   1. A feature collection which consists of static feature members (members do not change in time) but which has properties of the collection object as a whole that do change in time . 2. A feature collection which consists of dynamic feature members (the members are gml:DynamicFeatures) but which also has properties of the collection as a whole that vary in time.
/// </BLOCKQUOTE></PRE>
/// Element "http://www.opengis.net/gml/3.2":DynamicFeatureCollection.
    gml__DynamicFeatureCollectionType*   DynamicFeatureCollection       nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
//  END OF SUBSTITUTIONS
/// <PRE><BLOCKQUOTE>
///   The content model is a straightforward extension of gml:AbstractFeatureType; it automatically has the gml:identifier, gml:description, gml:descriptionReference, gml:name, and gml:boundedBy properties. The gml:validTime element describes the time of the observation. Note that this may be a time instant or a time period.
///   The gml:using property contains or references a description of a sensor, instrument or procedure used for the observation.
///   The gml:target property contains or references the specimen, region or station which is the object of the observation. This property is particularly useful for remote observations, such as photographs, where a generic location property might apply to the location of the camera or the location of the field of view, and thus may be ambiguous. The gml:subject element is provided as a convenient synonym for gml:target. This is the term commonly used in phtotography. The gml:resultOf property indicates the result of the observation. The value may be inline, or a reference to a value elsewhere.
/// </BLOCKQUOTE></PRE>
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="Observation"> with global elements <DirectedObservation>
/// <PRE><BLOCKQUOTE>
///   The content model is a straightforward extension of gml:AbstractFeatureType; it automatically has the gml:identifier, gml:description, gml:descriptionReference, gml:name, and gml:boundedBy properties. The gml:validTime element describes the time of the observation. Note that this may be a time instant or a time period.
///   The gml:using property contains or references a description of a sensor, instrument or procedure used for the observation.
///   The gml:target property contains or references the specimen, region or station which is the object of the observation. This property is particularly useful for remote observations, such as photographs, where a generic location property might apply to the location of the camera or the location of the field of view, and thus may be ambiguous. The gml:subject element is provided as a convenient synonym for gml:target. This is the term commonly used in phtotography. The gml:resultOf property indicates the result of the observation. The value may be inline, or a reference to a value elsewhere.
/// </BLOCKQUOTE></PRE>
/// Element "http://www.opengis.net/gml/3.2":Observation.
    gml__ObservationType*                Observation                    nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   A gml:DirectedObservation is the same as an observation except that it adds an additional gml:direction property. This is the direction in which the observation was acquired. Clearly this applies only to certain types of observations such as visual observations by people, or observations obtained from terrestrial cameras.
/// </BLOCKQUOTE></PRE>
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="DirectedObservation"> with global elements <DirectedObservationAtDistance>
/// <PRE><BLOCKQUOTE>
///   A gml:DirectedObservation is the same as an observation except that it adds an additional gml:direction property. This is the direction in which the observation was acquired. Clearly this applies only to certain types of observations such as visual observations by people, or observations obtained from terrestrial cameras.
/// </BLOCKQUOTE></PRE>
/// Element "http://www.opengis.net/gml/3.2":DirectedObservation.
    gml__DirectedObservationType*        DirectedObservation            nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   gml:DirectedObservationAtDistance adds an additional distance property. This is the distance from the observer to the subject of the observation. Clearly this applies only to certain types of observations such as visual observations by people, or observations obtained from terrestrial cameras.
/// </BLOCKQUOTE></PRE>
/// Element "http://www.opengis.net/gml/3.2":DirectedObservationAtDistance.
    gml__DirectedObservationAtDistanceType*  DirectedObservationAtDistance  nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
//  END OF SUBSTITUTIONS
//  END OF SUBSTITUTIONS
/// Element "http://www.opengis.net/gml/3.2":FeatureCollection.
    gml__FeatureCollectionType*          FeatureCollection              nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   -- Definition --
///   Identifiable collection of spatial data.
///   -- Description --
///   WARNING This element has been deprecated in v3.3.1 of this schema (in accordance with D2.7 v3.3 Recommendation 11 stating that wfs:FeatureCollection should be used instead of base:SpatialDataSet).
///   NOTE The type SpatialDataSet is offered as a pre-defined type for spatial data sets. The scope of this type is packaging pre-defined data sets for the non-direct access download service. It may be reused in thematic application schemas, but if it does not fit an application-schema-specific data set object should be modelled. This type may have the same name and definition like this type, but may have a different set of properties.
///   This type specifies three properties: an external object identifier, a container for metadata (may be void), and an association to zero or more spatial objects.
/// </BLOCKQUOTE></PRE>
/// Element "http://inspire.ec.europa.eu/schemas/base/3.3":SpatialDataSet.
    //jld base__SpatialDataSetType*            base__SpatialDataSet           nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   -- Definition --
///   Identifiable collection of spatial data.
///   -- Description --
///   WARNING This element has been deprecated in v3.3.1 of this schema (in accordance with D2.7 v3.3 Recommendation 11 stating that wfs:FeatureCollection should be used instead of base:SpatialDataSet).
///   NOTE The type SpatialDataSet is offered as a pre-defined type for spatial data sets. The scope of this type is packaging pre-defined data sets for the non-direct access download service. It may be reused in thematic application schemas, but if it does not fit an application-schema-specific data set object should be modelled. This type may have the same name and definition like this type, but may have a different set of properties.
///   This type specifies three properties: an external object identifier, a container for metadata (may be void), and an association to zero or more spatial objects.
/// </BLOCKQUOTE></PRE>
/// Element "http://inspire.ec.europa.eu/schemas/base/3.3":SpatialDataSet.
    base__SpatialDataSetType*            base__SpatialDataSet           nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   -- Name --
///   zoning element
///   -- Definition --
///   A spatial object which is homogeneous regarding the permitted uses of land based on zoning which separate one set of land uses from another.
///   -- Description --
///   Zoning elements refer to the regulation of the kinds of activities which will be acceptable on particular lots (such as open space, residential, agricultural, commercial or industrial). The intensity of use at which those activities can be performed (from low-density housing such as single family homes to high-density such as high-rise apartment buildings), the height of buildings, the amount of space that structures may occupy, the proportions of the types of space on a lot, such as how much landscaped space, impervious surface, traffic lanes, and parking may be provided.
/// </BLOCKQUOTE></PRE>
/// Element "http://inspire.ec.europa.eu/schemas/plu/3.0":ZoningElement.
    plu__ZoningElementType*              plu__ZoningElement             nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   -- Name --
///   zoning element
///   -- Definition --
///   A spatial object which is homogeneous regarding the permitted uses of land based on zoning which separate one set of land uses from another.
///   -- Description --
///   Zoning elements refer to the regulation of the kinds of activities which will be acceptable on particular lots (such as open space, residential, agricultural, commercial or industrial). The intensity of use at which those activities can be performed (from low-density housing such as single family homes to high-density such as high-rise apartment buildings), the height of buildings, the amount of space that structures may occupy, the proportions of the types of space on a lot, such as how much landscaped space, impervious surface, traffic lanes, and parking may be provided.
/// </BLOCKQUOTE></PRE>
/// Element "http://inspire.ec.europa.eu/schemas/plu/3.0":ZoningElement.
    //jld plu__ZoningElementType*              plu__ZoningElement             nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   -- Name --
///   official documentation
///   -- Definition --
///   The official documentation that composes the spatial plan; it may be composed of, the applicable legislation, the regulations, cartographic elements, descriptive elements that may be associated with the complete spatial plan, a zoning element or a supplementary regulation . In some Member States the actual textual regulation will be part of the data set (and can be put in the regulationText attribute), in other Member States the text will not be part of the data set and will be referenced via a reference to a document or a legal act.
///   At least one of the three voidable values shall be provided.
///   -- Description --
///   NOTE: The LegislationCitation is the value type of the attribute regulation reference. An example of a regulation reference would be: http://www2.vlaanderen.be /ruimtelijk/grup/00350/00362_00001/data/ 212_00362_00001_d_0BVR.pdf.
/// </BLOCKQUOTE></PRE>
/// Element "http://inspire.ec.europa.eu/schemas/plu/3.0":OfficialDocumentation.
    plu__OfficialDocumentationType*      plu__OfficialDocumentation     nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   -- Name --
///   official documentation
///   -- Definition --
///   The official documentation that composes the spatial plan; it may be composed of, the applicable legislation, the regulations, cartographic elements, descriptive elements that may be associated with the complete spatial plan, a zoning element or a supplementary regulation . In some Member States the actual textual regulation will be part of the data set (and can be put in the regulationText attribute), in other Member States the text will not be part of the data set and will be referenced via a reference to a document or a legal act.
///   At least one of the three voidable values shall be provided.
///   -- Description --
///   NOTE: The LegislationCitation is the value type of the attribute regulation reference. An example of a regulation reference would be: http://www2.vlaanderen.be /ruimtelijk/grup/00350/00362_00001/data/ 212_00362_00001_d_0BVR.pdf.
/// </BLOCKQUOTE></PRE>
/// Element "http://inspire.ec.europa.eu/schemas/plu/3.0":OfficialDocumentation.
    //jld plu__OfficialDocumentationType*      plu__OfficialDocumentation     nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   -- Name --
///   supplementary regulation
///   -- Definition --
///   A spatial object (point, line or polygon) of a spatial plan that provides supplementary information and/or limitation of the use of land/water necessary for spatial planning reasons or to formalise external rules defined in legal text.
///   -- Description --
///   NOTE the supplementary regulations affects all land use that overlap with the geometry
///   EXAMPLE an air field generates restriction in its surroundings regarding aircraft landing, radar and telecommunication devices. It is the buffer around these artefacts that generates the supplementary regulation on the Land Use.
/// </BLOCKQUOTE></PRE>
/// Element "http://inspire.ec.europa.eu/schemas/plu/3.0":SupplementaryRegulation.
    plu__SupplementaryRegulationType*    plu__SupplementaryRegulation   nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   -- Name --
///   supplementary regulation
///   -- Definition --
///   A spatial object (point, line or polygon) of a spatial plan that provides supplementary information and/or limitation of the use of land/water necessary for spatial planning reasons or to formalise external rules defined in legal text.
///   -- Description --
///   NOTE the supplementary regulations affects all land use that overlap with the geometry
///   EXAMPLE an air field generates restriction in its surroundings regarding aircraft landing, radar and telecommunication devices. It is the buffer around these artefacts that generates the supplementary regulation on the Land Use.
/// </BLOCKQUOTE></PRE>
/// Element "http://inspire.ec.europa.eu/schemas/plu/3.0":SupplementaryRegulation.
    //jld plu__SupplementaryRegulationType*    plu__SupplementaryRegulation   nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   -- Name --
///   spatial plan
///   -- Definition --
///   A set of documents that indicates a strategic direction for the development of a given geographic area, states the policies, priorities, programmes and land allocations that will implement the strategic direction and influences the distribution of people and activities in spaces of various scales. Spatial plans may be developed for urban planning, regional planning, environmental planning, landscape planning, national spatial plans, or spatial planning at the Union level.
/// </BLOCKQUOTE></PRE>
/// Element "http://inspire.ec.europa.eu/schemas/plu/3.0":SpatialPlan.
    plu__SpatialPlanType*                plu__SpatialPlan               nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   -- Name --
///   spatial plan
///   -- Definition --
///   A set of documents that indicates a strategic direction for the development of a given geographic area, states the policies, priorities, programmes and land allocations that will implement the strategic direction and influences the distribution of people and activities in spaces of various scales. Spatial plans may be developed for urban planning, regional planning, environmental planning, landscape planning, national spatial plans, or spatial planning at the Union level.
/// </BLOCKQUOTE></PRE>
/// Element "http://inspire.ec.europa.eu/schemas/plu/3.0":SpatialPlan.
    //jld plu__SpatialPlanType*                plu__SpatialPlan               nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_FeatureArrayPropertyType;
//  END OF SUBSTITUTIONS
    }>                                   __FeatureArrayPropertyType_sequence 0;
//  END OF SEQUENCE
};

/// @brief "http://www.opengis.net/gml/3.2":IndirectEntryType is a complexType.
///
/// class gml__IndirectEntryType operations:
/// - gml__IndirectEntryType* soap_new_gml__IndirectEntryType(soap*) allocate and default initialize
/// - gml__IndirectEntryType* soap_new_gml__IndirectEntryType(soap*, int num) allocate array and default initialize values
/// - gml__IndirectEntryType* soap_new_req_gml__IndirectEntryType(soap*, ...) allocate, set required members
/// - gml__IndirectEntryType* soap_new_set_gml__IndirectEntryType(soap*, ...) allocate, set all public members
/// - gml__IndirectEntryType::soap_default(soap*) default initialize members
/// - int soap_read_gml__IndirectEntryType(soap*, gml__IndirectEntryType*) deserialize from a stream
/// - int soap_write_gml__IndirectEntryType(soap*, gml__IndirectEntryType*) serialize to a stream
/// - gml__IndirectEntryType* gml__IndirectEntryType::soap_dup(soap*) returns deep copy of gml__IndirectEntryType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__IndirectEntryType::soap_del() deep deletes gml__IndirectEntryType data members, use only after gml__IndirectEntryType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__IndirectEntryType : public xsd__anyType
{ public:
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":DefinitionProxy.
    gml__DefinitionProxyType*            DefinitionProxy                1;	///< Required element.
};

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":domainOfValidity
/// <PRE><BLOCKQUOTE>
///   The gml:domainOfValidity property implements an association role to an EX_Extent object as encoded in ISO/TS 19139, either referencing or containing the definition of that extent.
/// </BLOCKQUOTE></PRE>
/// @brief "http://www.opengis.net/gml/3.2":domainOfValidity is a complexType.
///
/// class _gml__domainOfValidity operations:
/// - _gml__domainOfValidity* soap_new__gml__domainOfValidity(soap*) allocate and default initialize
/// - _gml__domainOfValidity* soap_new__gml__domainOfValidity(soap*, int num) allocate array and default initialize values
/// - _gml__domainOfValidity* soap_new_req__gml__domainOfValidity(soap*, ...) allocate, set required members
/// - _gml__domainOfValidity* soap_new_set__gml__domainOfValidity(soap*, ...) allocate, set all public members
/// - _gml__domainOfValidity::soap_default(soap*) default initialize members
/// - int soap_read__gml__domainOfValidity(soap*, _gml__domainOfValidity*) deserialize from a stream
/// - int soap_write__gml__domainOfValidity(soap*, _gml__domainOfValidity*) serialize to a stream
/// - _gml__domainOfValidity* _gml__domainOfValidity::soap_dup(soap*) returns deep copy of _gml__domainOfValidity, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _gml__domainOfValidity::soap_del() deep deletes _gml__domainOfValidity data members, use only after _gml__domainOfValidity::soap_dup(NULL) (use soapcpp2 -Ed)
class _gml__domainOfValidity
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gml__domainOfValidity_sequence
    {
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.isotc211.org/2005/gmd":EX_Extent.
    gmd__EX_x005fExtent_x005fType*       gmd__EX_x005fExtent            1;	///< Required element.
    }                                   *__domainOfValidity_sequence    0;
//  END OF SEQUENCE
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":AssociationAttributeGroup">.
/// Attribute "nilReason" of XSD type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         gml__remoteSchema              0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
/// A handle to the soap struct context that manages this instance when instantiated by a context or NULL otherwise (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":secondDefiningParameter
/// <PRE><BLOCKQUOTE>
///   gml:secondDefiningParameter is a property containing the definition of the second parameter that defines the shape of an ellipsoid. An ellipsoid requires two defining parameters: semi-major axis and inverse flattening or semi-major axis and semi-minor axis. When the reference body is a sphere rather than an ellipsoid, only a single defining parameter is required, namely the radius of the sphere; in that case, the semi-major axis "degenerates" into the radius of the sphere.
///   The inverseFlattening element contains the inverse flattening value of the ellipsoid. This value is a scale factor (or ratio). It uses gml:LengthType with the restriction that the unit of measure referenced by the uom attribute must be suitable for a scale factor, such as percent, permil, or parts-per-million.
///   The semiMinorAxis element contains the length of the semi-minor axis of the ellipsoid. When the isSphere element is included, the ellipsoid is degenerate and is actually a sphere. The sphere is completely defined by the semi-major axis, which is the radius of the sphere.
/// </BLOCKQUOTE></PRE>
/// @brief "http://www.opengis.net/gml/3.2":secondDefiningParameter is a complexType.
///
/// class _gml__secondDefiningParameter operations:
/// - _gml__secondDefiningParameter* soap_new__gml__secondDefiningParameter(soap*) allocate and default initialize
/// - _gml__secondDefiningParameter* soap_new__gml__secondDefiningParameter(soap*, int num) allocate array and default initialize values
/// - _gml__secondDefiningParameter* soap_new_req__gml__secondDefiningParameter(soap*, ...) allocate, set required members
/// - _gml__secondDefiningParameter* soap_new_set__gml__secondDefiningParameter(soap*, ...) allocate, set all public members
/// - _gml__secondDefiningParameter::soap_default(soap*) default initialize members
/// - int soap_read__gml__secondDefiningParameter(soap*, _gml__secondDefiningParameter*) deserialize from a stream
/// - int soap_write__gml__secondDefiningParameter(soap*, _gml__secondDefiningParameter*) serialize to a stream
/// - _gml__secondDefiningParameter* _gml__secondDefiningParameter::soap_dup(soap*) returns deep copy of _gml__secondDefiningParameter, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _gml__secondDefiningParameter::soap_del() deep deletes _gml__secondDefiningParameter data members, use only after _gml__secondDefiningParameter::soap_dup(NULL) (use soapcpp2 -Ed)
class _gml__secondDefiningParameter
{ public:
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":SecondDefiningParameter.
    _gml__SecondDefiningParameter*       SecondDefiningParameter        1;	///< Required element.
/// A handle to the soap struct context that manages this instance when instantiated by a context or NULL otherwise (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":SecondDefiningParameter
/// @brief "http://www.opengis.net/gml/3.2":SecondDefiningParameter is a complexType.
///
/// class _gml__SecondDefiningParameter operations:
/// - _gml__SecondDefiningParameter* soap_new__gml__SecondDefiningParameter(soap*) allocate and default initialize
/// - _gml__SecondDefiningParameter* soap_new__gml__SecondDefiningParameter(soap*, int num) allocate array and default initialize values
/// - _gml__SecondDefiningParameter* soap_new_req__gml__SecondDefiningParameter(soap*, ...) allocate, set required members
/// - _gml__SecondDefiningParameter* soap_new_set__gml__SecondDefiningParameter(soap*, ...) allocate, set all public members
/// - _gml__SecondDefiningParameter::soap_default(soap*) default initialize members
/// - int soap_read__gml__SecondDefiningParameter(soap*, _gml__SecondDefiningParameter*) deserialize from a stream
/// - int soap_write__gml__SecondDefiningParameter(soap*, _gml__SecondDefiningParameter*) serialize to a stream
/// - _gml__SecondDefiningParameter* _gml__SecondDefiningParameter::soap_dup(soap*) returns deep copy of _gml__SecondDefiningParameter, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _gml__SecondDefiningParameter::soap_del() deep deletes _gml__SecondDefiningParameter data members, use only after _gml__SecondDefiningParameter::soap_dup(NULL) (use soapcpp2 -Ed)
class _gml__SecondDefiningParameter
{ public:
//  BEGIN CHOICE <xs:choice>
   $int                                  __union_SecondDefiningParameter;	///< Union _gml__union_SecondDefiningParameter selector: set to SOAP_UNION__gml__union_SecondDefiningParameter_<fieldname>
/// Union for choice in gml__SecondDefiningParameter.
    union _gml__union_SecondDefiningParameter
    {
/// Element "inverseFlattening" of XSD type "http://www.opengis.net/gml/3.2":MeasureType.
    gml__MeasureType*                    inverseFlattening              nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "semiMinorAxis" of XSD type "http://www.opengis.net/gml/3.2":LengthType.
    gml__LengthType*                     semiMinorAxis                  nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "isSphere" of XSD type xs:boolean.
    bool                                 isSphere                       0 = true;	///< Default element value="true".
    }                                    union_SecondDefiningParameter ;
//  END OF CHOICE
/// A handle to the soap struct context that manages this instance when instantiated by a context or NULL otherwise (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":coordinateOperationAccuracy
/// <PRE><BLOCKQUOTE>
///   gml:coordinateOperationAccuracy is an association role to a DQ_PositionalAccuracy object as encoded in ISO/TS 19139, either referencing or containing the definition of that positional accuracy. That object contains an estimate of the impact of this coordinate operation on point accuracy. That is, it gives position error estimates for the target coordinates of this coordinate operation, assuming no errors in the source coordinates.
/// </BLOCKQUOTE></PRE>
/// @brief "http://www.opengis.net/gml/3.2":coordinateOperationAccuracy is a complexType.
///
/// class _gml__coordinateOperationAccuracy operations:
/// - _gml__coordinateOperationAccuracy* soap_new__gml__coordinateOperationAccuracy(soap*) allocate and default initialize
/// - _gml__coordinateOperationAccuracy* soap_new__gml__coordinateOperationAccuracy(soap*, int num) allocate array and default initialize values
/// - _gml__coordinateOperationAccuracy* soap_new_req__gml__coordinateOperationAccuracy(soap*, ...) allocate, set required members
/// - _gml__coordinateOperationAccuracy* soap_new_set__gml__coordinateOperationAccuracy(soap*, ...) allocate, set all public members
/// - _gml__coordinateOperationAccuracy::soap_default(soap*) default initialize members
/// - int soap_read__gml__coordinateOperationAccuracy(soap*, _gml__coordinateOperationAccuracy*) deserialize from a stream
/// - int soap_write__gml__coordinateOperationAccuracy(soap*, _gml__coordinateOperationAccuracy*) serialize to a stream
/// - _gml__coordinateOperationAccuracy* _gml__coordinateOperationAccuracy::soap_dup(soap*) returns deep copy of _gml__coordinateOperationAccuracy, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _gml__coordinateOperationAccuracy::soap_del() deep deletes _gml__coordinateOperationAccuracy data members, use only after _gml__coordinateOperationAccuracy::soap_dup(NULL) (use soapcpp2 -Ed)
class _gml__coordinateOperationAccuracy
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gml__coordinateOperationAccuracy_sequence
    {
/// Reference "http://www.isotc211.org/2005/gmd":AbstractDQ_PositionalAccuracy to abstract element.
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractDQ_PositionalAccuracy"> with global elements <DQ_RelativeInternalPositionalAccuracy> <DQ_GriddedDataPositionalAccuracy> <DQ_AbsoluteExternalPositionalAccuracy>
   $int                                  __unionAbstractDQ_x005fPositionalAccuracy;	///< Union _gml__union_coordinateOperationAccuracy selector: set to SOAP_UNION__gml__union_coordinateOperationAccuracy_<fieldname>
/// Union for substitutionGroup gml__AbstractDQ_x005fPositionalAccuracy.
    union _gml__union_coordinateOperationAccuracy
    {
/// Element "http://www.isotc211.org/2005/gmd":DQ_RelativeInternalPositionalAccuracy.
    gmd__DQ_x005fRelativeInternalPositionalAccuracy_x005fType*  gmd__DQ_x005fRelativeInternalPositionalAccuracy nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.isotc211.org/2005/gmd":DQ_GriddedDataPositionalAccuracy.
    gmd__DQ_x005fGriddedDataPositionalAccuracy_x005fType*  gmd__DQ_x005fGriddedDataPositionalAccuracy nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.isotc211.org/2005/gmd":DQ_AbsoluteExternalPositionalAccuracy.
    gmd__DQ_x005fAbsoluteExternalPositionalAccuracy_x005fType*  gmd__DQ_x005fAbsoluteExternalPositionalAccuracy nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_coordinateOperationAccuracy;
//  END OF SUBSTITUTIONS
    }                                   *__coordinateOperationAccuracy_sequence 0;
//  END OF SEQUENCE
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":AssociationAttributeGroup">.
/// Attribute "nilReason" of XSD type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         gml__remoteSchema              0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
/// A handle to the soap struct context that manages this instance when instantiated by a context or NULL otherwise (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":formulaCitation
/// <PRE><BLOCKQUOTE>
///   gml:formulaCitation provides a reference to a publication giving the formula(s) or procedure used by an coordinate operation method.
/// </BLOCKQUOTE></PRE>
/// @brief "http://www.opengis.net/gml/3.2":formulaCitation is a complexType.
///
/// class _gml__formulaCitation operations:
/// - _gml__formulaCitation* soap_new__gml__formulaCitation(soap*) allocate and default initialize
/// - _gml__formulaCitation* soap_new__gml__formulaCitation(soap*, int num) allocate array and default initialize values
/// - _gml__formulaCitation* soap_new_req__gml__formulaCitation(soap*, ...) allocate, set required members
/// - _gml__formulaCitation* soap_new_set__gml__formulaCitation(soap*, ...) allocate, set all public members
/// - _gml__formulaCitation::soap_default(soap*) default initialize members
/// - int soap_read__gml__formulaCitation(soap*, _gml__formulaCitation*) deserialize from a stream
/// - int soap_write__gml__formulaCitation(soap*, _gml__formulaCitation*) serialize to a stream
/// - _gml__formulaCitation* _gml__formulaCitation::soap_dup(soap*) returns deep copy of _gml__formulaCitation, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _gml__formulaCitation::soap_del() deep deletes _gml__formulaCitation data members, use only after _gml__formulaCitation::soap_dup(NULL) (use soapcpp2 -Ed)
class _gml__formulaCitation
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gml__formulaCitation_sequence
    {
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.isotc211.org/2005/gmd":CI_Citation.
    gmd__CI_x005fCitation_x005fType*     gmd__CI_x005fCitation          1;	///< Required element.
    }                                   *__formulaCitation_sequence     0;
//  END OF SEQUENCE
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":AssociationAttributeGroup">.
/// Attribute "nilReason" of XSD type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         gml__remoteSchema              0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
/// A handle to the soap struct context that manages this instance when instantiated by a context or NULL otherwise (automatically set).
    struct soap                         *soap                          ;
};


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://www.isotc211.org/2005/gmd                                         *
 *                                                                            *
\******************************************************************************/

/// @brief "http://www.isotc211.org/2005/gmd":DS_Aggregate_PropertyType is a complexType.
///
/// class gmd__DS_x005fAggregate_x005fPropertyType operations:
/// - gmd__DS_x005fAggregate_x005fPropertyType* soap_new_gmd__DS_x005fAggregate_x005fPropertyType(soap*) allocate and default initialize
/// - gmd__DS_x005fAggregate_x005fPropertyType* soap_new_gmd__DS_x005fAggregate_x005fPropertyType(soap*, int num) allocate array and default initialize values
/// - gmd__DS_x005fAggregate_x005fPropertyType* soap_new_req_gmd__DS_x005fAggregate_x005fPropertyType(soap*, ...) allocate, set required members
/// - gmd__DS_x005fAggregate_x005fPropertyType* soap_new_set_gmd__DS_x005fAggregate_x005fPropertyType(soap*, ...) allocate, set all public members
/// - gmd__DS_x005fAggregate_x005fPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__DS_x005fAggregate_x005fPropertyType(soap*, gmd__DS_x005fAggregate_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__DS_x005fAggregate_x005fPropertyType(soap*, gmd__DS_x005fAggregate_x005fPropertyType*) serialize to a stream
/// - gmd__DS_x005fAggregate_x005fPropertyType* gmd__DS_x005fAggregate_x005fPropertyType::soap_dup(soap*) returns deep copy of gmd__DS_x005fAggregate_x005fPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__DS_x005fAggregate_x005fPropertyType::soap_del() deep deletes gmd__DS_x005fAggregate_x005fPropertyType data members, use only after gmd__DS_x005fAggregate_x005fPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__DS_x005fAggregate_x005fPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gmd__DS_x005fAggregate_x005fPropertyType_sequence
    {
/// Reference "http://www.isotc211.org/2005/gmd":AbstractDS_Aggregate to abstract element.
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractDS_Aggregate"> with global elements <DS_OtherAggregate> <DS_Series> <DS_Initiative>
   $int                                  __unionAbstractDS_x005fAggregate;	///< Union _gmd__union_DS_x005fAggregate_x005fPropertyType selector: set to SOAP_UNION__gmd__union_DS_x005fAggregate_x005fPropertyType_<fieldname>
/// Union for substitutionGroup gmd__AbstractDS_x005fAggregate.
    union _gmd__union_DS_x005fAggregate_x005fPropertyType
    {
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="DS_OtherAggregate"> with global elements <DS_StereoMate>
/// Element "http://www.isotc211.org/2005/gmd":DS_OtherAggregate.
    gmd__DS_x005fOtherAggregate_x005fType*  DS_x005fOtherAggregate         nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.isotc211.org/2005/gmd":DS_StereoMate.
    gmd__DS_x005fStereoMate_x005fType*   DS_x005fStereoMate             nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
//  END OF SUBSTITUTIONS
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="DS_Series"> with global elements <DS_Platform> <DS_Sensor> <DS_ProductionSeries>
/// Element "http://www.isotc211.org/2005/gmd":DS_Series.
    gmd__DS_x005fSeries_x005fType*       DS_x005fSeries                 nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.isotc211.org/2005/gmd":DS_Platform.
    gmd__DS_x005fPlatform_x005fType*     DS_x005fPlatform               nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.isotc211.org/2005/gmd":DS_Sensor.
    gmd__DS_x005fSensor_x005fType*       DS_x005fSensor                 nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.isotc211.org/2005/gmd":DS_ProductionSeries.
    gmd__DS_x005fProductionSeries_x005fType*  DS_x005fProductionSeries       nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
//  END OF SUBSTITUTIONS
/// Element "http://www.isotc211.org/2005/gmd":DS_Initiative.
    gmd__DS_x005fInitiative_x005fType*   DS_x005fInitiative             nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_DS_x005fAggregate_x005fPropertyType;
//  END OF SUBSTITUTIONS
    }                                   *__DS_x005fAggregate_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gmd":"http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectReference">.
/// Attribute "uuidref" of XSD type xs:string.
   @std::string*                         :uuidref                       0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.isotc211.org/2005/gmd":DS_DataSet_PropertyType is a complexType.
///
/// class gmd__DS_x005fDataSet_x005fPropertyType operations:
/// - gmd__DS_x005fDataSet_x005fPropertyType* soap_new_gmd__DS_x005fDataSet_x005fPropertyType(soap*) allocate and default initialize
/// - gmd__DS_x005fDataSet_x005fPropertyType* soap_new_gmd__DS_x005fDataSet_x005fPropertyType(soap*, int num) allocate array and default initialize values
/// - gmd__DS_x005fDataSet_x005fPropertyType* soap_new_req_gmd__DS_x005fDataSet_x005fPropertyType(soap*, ...) allocate, set required members
/// - gmd__DS_x005fDataSet_x005fPropertyType* soap_new_set_gmd__DS_x005fDataSet_x005fPropertyType(soap*, ...) allocate, set all public members
/// - gmd__DS_x005fDataSet_x005fPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__DS_x005fDataSet_x005fPropertyType(soap*, gmd__DS_x005fDataSet_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__DS_x005fDataSet_x005fPropertyType(soap*, gmd__DS_x005fDataSet_x005fPropertyType*) serialize to a stream
/// - gmd__DS_x005fDataSet_x005fPropertyType* gmd__DS_x005fDataSet_x005fPropertyType::soap_dup(soap*) returns deep copy of gmd__DS_x005fDataSet_x005fPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__DS_x005fDataSet_x005fPropertyType::soap_del() deep deletes gmd__DS_x005fDataSet_x005fPropertyType data members, use only after gmd__DS_x005fDataSet_x005fPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__DS_x005fDataSet_x005fPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gmd__DS_x005fDataSet_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd:""http://www.isotc211.org/2005/gmd":DS_DataSet.
    gmd__DS_x005fDataSet_x005fType*      DS_x005fDataSet                1;	///< Required element.
    }                                   *__DS_x005fDataSet_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gmd":"http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectReference">.
/// Attribute "uuidref" of XSD type xs:string.
   @std::string*                         :uuidref                       0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.isotc211.org/2005/gmd":DS_OtherAggregate_PropertyType is a complexType.
///
/// class gmd__DS_x005fOtherAggregate_x005fPropertyType operations:
/// - gmd__DS_x005fOtherAggregate_x005fPropertyType* soap_new_gmd__DS_x005fOtherAggregate_x005fPropertyType(soap*) allocate and default initialize
/// - gmd__DS_x005fOtherAggregate_x005fPropertyType* soap_new_gmd__DS_x005fOtherAggregate_x005fPropertyType(soap*, int num) allocate array and default initialize values
/// - gmd__DS_x005fOtherAggregate_x005fPropertyType* soap_new_req_gmd__DS_x005fOtherAggregate_x005fPropertyType(soap*, ...) allocate, set required members
/// - gmd__DS_x005fOtherAggregate_x005fPropertyType* soap_new_set_gmd__DS_x005fOtherAggregate_x005fPropertyType(soap*, ...) allocate, set all public members
/// - gmd__DS_x005fOtherAggregate_x005fPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__DS_x005fOtherAggregate_x005fPropertyType(soap*, gmd__DS_x005fOtherAggregate_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__DS_x005fOtherAggregate_x005fPropertyType(soap*, gmd__DS_x005fOtherAggregate_x005fPropertyType*) serialize to a stream
/// - gmd__DS_x005fOtherAggregate_x005fPropertyType* gmd__DS_x005fOtherAggregate_x005fPropertyType::soap_dup(soap*) returns deep copy of gmd__DS_x005fOtherAggregate_x005fPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__DS_x005fOtherAggregate_x005fPropertyType::soap_del() deep deletes gmd__DS_x005fOtherAggregate_x005fPropertyType data members, use only after gmd__DS_x005fOtherAggregate_x005fPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__DS_x005fOtherAggregate_x005fPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gmd__DS_x005fOtherAggregate_x005fPropertyType_sequence
    {
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="DS_OtherAggregate"> with global elements <DS_StereoMate>
   $int                                  __unionDS_x005fOtherAggregate ;	///< Union _gmd__union_DS_x005fOtherAggregate_x005fPropertyType selector: set to SOAP_UNION__gmd__union_DS_x005fOtherAggregate_x005fPropertyType_<fieldname>
/// Union for substitutionGroup gmd__DS_x005fOtherAggregate.
    union _gmd__union_DS_x005fOtherAggregate_x005fPropertyType
    {
/// Element reference "http://www.isotc211.org/2005/gmd:""http://www.isotc211.org/2005/gmd":DS_OtherAggregate.
    gmd__DS_x005fOtherAggregate_x005fType*  DS_x005fOtherAggregate         nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.isotc211.org/2005/gmd":DS_StereoMate.
    gmd__DS_x005fStereoMate_x005fType*   DS_x005fStereoMate             nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_DS_x005fOtherAggregate_x005fPropertyType;
//  END OF SUBSTITUTIONS
    }                                   *__DS_x005fOtherAggregate_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gmd":"http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectReference">.
/// Attribute "uuidref" of XSD type xs:string.
   @std::string*                         :uuidref                       0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.isotc211.org/2005/gmd":DS_Series_PropertyType is a complexType.
///
/// class gmd__DS_x005fSeries_x005fPropertyType operations:
/// - gmd__DS_x005fSeries_x005fPropertyType* soap_new_gmd__DS_x005fSeries_x005fPropertyType(soap*) allocate and default initialize
/// - gmd__DS_x005fSeries_x005fPropertyType* soap_new_gmd__DS_x005fSeries_x005fPropertyType(soap*, int num) allocate array and default initialize values
/// - gmd__DS_x005fSeries_x005fPropertyType* soap_new_req_gmd__DS_x005fSeries_x005fPropertyType(soap*, ...) allocate, set required members
/// - gmd__DS_x005fSeries_x005fPropertyType* soap_new_set_gmd__DS_x005fSeries_x005fPropertyType(soap*, ...) allocate, set all public members
/// - gmd__DS_x005fSeries_x005fPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__DS_x005fSeries_x005fPropertyType(soap*, gmd__DS_x005fSeries_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__DS_x005fSeries_x005fPropertyType(soap*, gmd__DS_x005fSeries_x005fPropertyType*) serialize to a stream
/// - gmd__DS_x005fSeries_x005fPropertyType* gmd__DS_x005fSeries_x005fPropertyType::soap_dup(soap*) returns deep copy of gmd__DS_x005fSeries_x005fPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__DS_x005fSeries_x005fPropertyType::soap_del() deep deletes gmd__DS_x005fSeries_x005fPropertyType data members, use only after gmd__DS_x005fSeries_x005fPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__DS_x005fSeries_x005fPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gmd__DS_x005fSeries_x005fPropertyType_sequence
    {
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="DS_Series"> with global elements <DS_Platform> <DS_Sensor> <DS_ProductionSeries>
   $int                                  __unionDS_x005fSeries         ;	///< Union _gmd__union_DS_x005fSeries_x005fPropertyType selector: set to SOAP_UNION__gmd__union_DS_x005fSeries_x005fPropertyType_<fieldname>
/// Union for substitutionGroup gmd__DS_x005fSeries.
    union _gmd__union_DS_x005fSeries_x005fPropertyType
    {
/// Element reference "http://www.isotc211.org/2005/gmd:""http://www.isotc211.org/2005/gmd":DS_Series.
    gmd__DS_x005fSeries_x005fType*       DS_x005fSeries                 nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.isotc211.org/2005/gmd":DS_Platform.
    gmd__DS_x005fPlatform_x005fType*     DS_x005fPlatform               nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.isotc211.org/2005/gmd":DS_Sensor.
    gmd__DS_x005fSensor_x005fType*       DS_x005fSensor                 nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.isotc211.org/2005/gmd":DS_ProductionSeries.
    gmd__DS_x005fProductionSeries_x005fType*  DS_x005fProductionSeries       nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_DS_x005fSeries_x005fPropertyType;
//  END OF SUBSTITUTIONS
    }                                   *__DS_x005fSeries_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gmd":"http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectReference">.
/// Attribute "uuidref" of XSD type xs:string.
   @std::string*                         :uuidref                       0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.isotc211.org/2005/gmd":DS_Initiative_PropertyType is a complexType.
///
/// class gmd__DS_x005fInitiative_x005fPropertyType operations:
/// - gmd__DS_x005fInitiative_x005fPropertyType* soap_new_gmd__DS_x005fInitiative_x005fPropertyType(soap*) allocate and default initialize
/// - gmd__DS_x005fInitiative_x005fPropertyType* soap_new_gmd__DS_x005fInitiative_x005fPropertyType(soap*, int num) allocate array and default initialize values
/// - gmd__DS_x005fInitiative_x005fPropertyType* soap_new_req_gmd__DS_x005fInitiative_x005fPropertyType(soap*, ...) allocate, set required members
/// - gmd__DS_x005fInitiative_x005fPropertyType* soap_new_set_gmd__DS_x005fInitiative_x005fPropertyType(soap*, ...) allocate, set all public members
/// - gmd__DS_x005fInitiative_x005fPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__DS_x005fInitiative_x005fPropertyType(soap*, gmd__DS_x005fInitiative_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__DS_x005fInitiative_x005fPropertyType(soap*, gmd__DS_x005fInitiative_x005fPropertyType*) serialize to a stream
/// - gmd__DS_x005fInitiative_x005fPropertyType* gmd__DS_x005fInitiative_x005fPropertyType::soap_dup(soap*) returns deep copy of gmd__DS_x005fInitiative_x005fPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__DS_x005fInitiative_x005fPropertyType::soap_del() deep deletes gmd__DS_x005fInitiative_x005fPropertyType data members, use only after gmd__DS_x005fInitiative_x005fPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__DS_x005fInitiative_x005fPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gmd__DS_x005fInitiative_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd:""http://www.isotc211.org/2005/gmd":DS_Initiative.
    gmd__DS_x005fInitiative_x005fType*   DS_x005fInitiative             1;	///< Required element.
    }                                   *__DS_x005fInitiative_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gmd":"http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectReference">.
/// Attribute "uuidref" of XSD type xs:string.
   @std::string*                         :uuidref                       0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.isotc211.org/2005/gmd":DS_Platform_PropertyType is a complexType.
///
/// class gmd__DS_x005fPlatform_x005fPropertyType operations:
/// - gmd__DS_x005fPlatform_x005fPropertyType* soap_new_gmd__DS_x005fPlatform_x005fPropertyType(soap*) allocate and default initialize
/// - gmd__DS_x005fPlatform_x005fPropertyType* soap_new_gmd__DS_x005fPlatform_x005fPropertyType(soap*, int num) allocate array and default initialize values
/// - gmd__DS_x005fPlatform_x005fPropertyType* soap_new_req_gmd__DS_x005fPlatform_x005fPropertyType(soap*, ...) allocate, set required members
/// - gmd__DS_x005fPlatform_x005fPropertyType* soap_new_set_gmd__DS_x005fPlatform_x005fPropertyType(soap*, ...) allocate, set all public members
/// - gmd__DS_x005fPlatform_x005fPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__DS_x005fPlatform_x005fPropertyType(soap*, gmd__DS_x005fPlatform_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__DS_x005fPlatform_x005fPropertyType(soap*, gmd__DS_x005fPlatform_x005fPropertyType*) serialize to a stream
/// - gmd__DS_x005fPlatform_x005fPropertyType* gmd__DS_x005fPlatform_x005fPropertyType::soap_dup(soap*) returns deep copy of gmd__DS_x005fPlatform_x005fPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__DS_x005fPlatform_x005fPropertyType::soap_del() deep deletes gmd__DS_x005fPlatform_x005fPropertyType data members, use only after gmd__DS_x005fPlatform_x005fPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__DS_x005fPlatform_x005fPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gmd__DS_x005fPlatform_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd:""http://www.isotc211.org/2005/gmd":DS_Platform.
    gmd__DS_x005fPlatform_x005fType*     DS_x005fPlatform               1;	///< Required element.
    }                                   *__DS_x005fPlatform_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gmd":"http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectReference">.
/// Attribute "uuidref" of XSD type xs:string.
   @std::string*                         :uuidref                       0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.isotc211.org/2005/gmd":DS_Sensor_PropertyType is a complexType.
///
/// class gmd__DS_x005fSensor_x005fPropertyType operations:
/// - gmd__DS_x005fSensor_x005fPropertyType* soap_new_gmd__DS_x005fSensor_x005fPropertyType(soap*) allocate and default initialize
/// - gmd__DS_x005fSensor_x005fPropertyType* soap_new_gmd__DS_x005fSensor_x005fPropertyType(soap*, int num) allocate array and default initialize values
/// - gmd__DS_x005fSensor_x005fPropertyType* soap_new_req_gmd__DS_x005fSensor_x005fPropertyType(soap*, ...) allocate, set required members
/// - gmd__DS_x005fSensor_x005fPropertyType* soap_new_set_gmd__DS_x005fSensor_x005fPropertyType(soap*, ...) allocate, set all public members
/// - gmd__DS_x005fSensor_x005fPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__DS_x005fSensor_x005fPropertyType(soap*, gmd__DS_x005fSensor_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__DS_x005fSensor_x005fPropertyType(soap*, gmd__DS_x005fSensor_x005fPropertyType*) serialize to a stream
/// - gmd__DS_x005fSensor_x005fPropertyType* gmd__DS_x005fSensor_x005fPropertyType::soap_dup(soap*) returns deep copy of gmd__DS_x005fSensor_x005fPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__DS_x005fSensor_x005fPropertyType::soap_del() deep deletes gmd__DS_x005fSensor_x005fPropertyType data members, use only after gmd__DS_x005fSensor_x005fPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__DS_x005fSensor_x005fPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gmd__DS_x005fSensor_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd:""http://www.isotc211.org/2005/gmd":DS_Sensor.
    gmd__DS_x005fSensor_x005fType*       DS_x005fSensor                 1;	///< Required element.
    }                                   *__DS_x005fSensor_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gmd":"http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectReference">.
/// Attribute "uuidref" of XSD type xs:string.
   @std::string*                         :uuidref                       0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.isotc211.org/2005/gmd":DS_ProductionSeries_PropertyType is a complexType.
///
/// class gmd__DS_x005fProductionSeries_x005fPropertyType operations:
/// - gmd__DS_x005fProductionSeries_x005fPropertyType* soap_new_gmd__DS_x005fProductionSeries_x005fPropertyType(soap*) allocate and default initialize
/// - gmd__DS_x005fProductionSeries_x005fPropertyType* soap_new_gmd__DS_x005fProductionSeries_x005fPropertyType(soap*, int num) allocate array and default initialize values
/// - gmd__DS_x005fProductionSeries_x005fPropertyType* soap_new_req_gmd__DS_x005fProductionSeries_x005fPropertyType(soap*, ...) allocate, set required members
/// - gmd__DS_x005fProductionSeries_x005fPropertyType* soap_new_set_gmd__DS_x005fProductionSeries_x005fPropertyType(soap*, ...) allocate, set all public members
/// - gmd__DS_x005fProductionSeries_x005fPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__DS_x005fProductionSeries_x005fPropertyType(soap*, gmd__DS_x005fProductionSeries_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__DS_x005fProductionSeries_x005fPropertyType(soap*, gmd__DS_x005fProductionSeries_x005fPropertyType*) serialize to a stream
/// - gmd__DS_x005fProductionSeries_x005fPropertyType* gmd__DS_x005fProductionSeries_x005fPropertyType::soap_dup(soap*) returns deep copy of gmd__DS_x005fProductionSeries_x005fPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__DS_x005fProductionSeries_x005fPropertyType::soap_del() deep deletes gmd__DS_x005fProductionSeries_x005fPropertyType data members, use only after gmd__DS_x005fProductionSeries_x005fPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__DS_x005fProductionSeries_x005fPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gmd__DS_x005fProductionSeries_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd:""http://www.isotc211.org/2005/gmd":DS_ProductionSeries.
    gmd__DS_x005fProductionSeries_x005fType*  DS_x005fProductionSeries       1;	///< Required element.
    }                                   *__DS_x005fProductionSeries_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gmd":"http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectReference">.
/// Attribute "uuidref" of XSD type xs:string.
   @std::string*                         :uuidref                       0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.isotc211.org/2005/gmd":DS_StereoMate_PropertyType is a complexType.
///
/// class gmd__DS_x005fStereoMate_x005fPropertyType operations:
/// - gmd__DS_x005fStereoMate_x005fPropertyType* soap_new_gmd__DS_x005fStereoMate_x005fPropertyType(soap*) allocate and default initialize
/// - gmd__DS_x005fStereoMate_x005fPropertyType* soap_new_gmd__DS_x005fStereoMate_x005fPropertyType(soap*, int num) allocate array and default initialize values
/// - gmd__DS_x005fStereoMate_x005fPropertyType* soap_new_req_gmd__DS_x005fStereoMate_x005fPropertyType(soap*, ...) allocate, set required members
/// - gmd__DS_x005fStereoMate_x005fPropertyType* soap_new_set_gmd__DS_x005fStereoMate_x005fPropertyType(soap*, ...) allocate, set all public members
/// - gmd__DS_x005fStereoMate_x005fPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__DS_x005fStereoMate_x005fPropertyType(soap*, gmd__DS_x005fStereoMate_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__DS_x005fStereoMate_x005fPropertyType(soap*, gmd__DS_x005fStereoMate_x005fPropertyType*) serialize to a stream
/// - gmd__DS_x005fStereoMate_x005fPropertyType* gmd__DS_x005fStereoMate_x005fPropertyType::soap_dup(soap*) returns deep copy of gmd__DS_x005fStereoMate_x005fPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__DS_x005fStereoMate_x005fPropertyType::soap_del() deep deletes gmd__DS_x005fStereoMate_x005fPropertyType data members, use only after gmd__DS_x005fStereoMate_x005fPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__DS_x005fStereoMate_x005fPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gmd__DS_x005fStereoMate_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd:""http://www.isotc211.org/2005/gmd":DS_StereoMate.
    gmd__DS_x005fStereoMate_x005fType*   DS_x005fStereoMate             1;	///< Required element.
    }                                   *__DS_x005fStereoMate_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gmd":"http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectReference">.
/// Attribute "uuidref" of XSD type xs:string.
   @std::string*                         :uuidref                       0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.isotc211.org/2005/gmd":MD_Metadata_PropertyType is a complexType.
///
/// class gmd__MD_x005fMetadata_x005fPropertyType operations:
/// - gmd__MD_x005fMetadata_x005fPropertyType* soap_new_gmd__MD_x005fMetadata_x005fPropertyType(soap*) allocate and default initialize
/// - gmd__MD_x005fMetadata_x005fPropertyType* soap_new_gmd__MD_x005fMetadata_x005fPropertyType(soap*, int num) allocate array and default initialize values
/// - gmd__MD_x005fMetadata_x005fPropertyType* soap_new_req_gmd__MD_x005fMetadata_x005fPropertyType(soap*, ...) allocate, set required members
/// - gmd__MD_x005fMetadata_x005fPropertyType* soap_new_set_gmd__MD_x005fMetadata_x005fPropertyType(soap*, ...) allocate, set all public members
/// - gmd__MD_x005fMetadata_x005fPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__MD_x005fMetadata_x005fPropertyType(soap*, gmd__MD_x005fMetadata_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fMetadata_x005fPropertyType(soap*, gmd__MD_x005fMetadata_x005fPropertyType*) serialize to a stream
/// - gmd__MD_x005fMetadata_x005fPropertyType* gmd__MD_x005fMetadata_x005fPropertyType::soap_dup(soap*) returns deep copy of gmd__MD_x005fMetadata_x005fPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__MD_x005fMetadata_x005fPropertyType::soap_del() deep deletes gmd__MD_x005fMetadata_x005fPropertyType data members, use only after gmd__MD_x005fMetadata_x005fPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__MD_x005fMetadata_x005fPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gmd__MD_x005fMetadata_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd:""http://www.isotc211.org/2005/gmd":MD_Metadata.
    gmd__MD_x005fMetadata_x005fType*     MD_x005fMetadata               1;	///< Required element.
    }                                   *__MD_x005fMetadata_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gmd":"http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectReference">.
/// Attribute "uuidref" of XSD type xs:string.
   @std::string*                         :uuidref                       0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.isotc211.org/2005/gmd":MD_GridSpatialRepresentation_PropertyType is a complexType.
///
/// class gmd__MD_x005fGridSpatialRepresentation_x005fPropertyType operations:
/// - gmd__MD_x005fGridSpatialRepresentation_x005fPropertyType* soap_new_gmd__MD_x005fGridSpatialRepresentation_x005fPropertyType(soap*) allocate and default initialize
/// - gmd__MD_x005fGridSpatialRepresentation_x005fPropertyType* soap_new_gmd__MD_x005fGridSpatialRepresentation_x005fPropertyType(soap*, int num) allocate array and default initialize values
/// - gmd__MD_x005fGridSpatialRepresentation_x005fPropertyType* soap_new_req_gmd__MD_x005fGridSpatialRepresentation_x005fPropertyType(soap*, ...) allocate, set required members
/// - gmd__MD_x005fGridSpatialRepresentation_x005fPropertyType* soap_new_set_gmd__MD_x005fGridSpatialRepresentation_x005fPropertyType(soap*, ...) allocate, set all public members
/// - gmd__MD_x005fGridSpatialRepresentation_x005fPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__MD_x005fGridSpatialRepresentation_x005fPropertyType(soap*, gmd__MD_x005fGridSpatialRepresentation_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fGridSpatialRepresentation_x005fPropertyType(soap*, gmd__MD_x005fGridSpatialRepresentation_x005fPropertyType*) serialize to a stream
/// - gmd__MD_x005fGridSpatialRepresentation_x005fPropertyType* gmd__MD_x005fGridSpatialRepresentation_x005fPropertyType::soap_dup(soap*) returns deep copy of gmd__MD_x005fGridSpatialRepresentation_x005fPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__MD_x005fGridSpatialRepresentation_x005fPropertyType::soap_del() deep deletes gmd__MD_x005fGridSpatialRepresentation_x005fPropertyType data members, use only after gmd__MD_x005fGridSpatialRepresentation_x005fPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__MD_x005fGridSpatialRepresentation_x005fPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gmd__MD_x005fGridSpatialRepresentation_x005fPropertyType_sequence
    {
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="MD_GridSpatialRepresentation"> with global elements <MD_Georeferenceable> <MD_Georectified>
   $int                                  __unionMD_x005fGridSpatialRepresentation;	///< Union _gmd__union_MD_x005fGridSpatialRepresentation_x005fPropertyType selector: set to SOAP_UNION__gmd__union_MD_x005fGridSpatialRepresentation_x005fPropertyType_<fieldname>
/// Union for substitutionGroup gmd__MD_x005fGridSpatialRepresentation.
    union _gmd__union_MD_x005fGridSpatialRepresentation_x005fPropertyType
    {
/// Element reference "http://www.isotc211.org/2005/gmd:""http://www.isotc211.org/2005/gmd":MD_GridSpatialRepresentation.
    gmd__MD_x005fGridSpatialRepresentation_x005fType*  MD_x005fGridSpatialRepresentation nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.isotc211.org/2005/gmd":MD_Georeferenceable.
    gmd__MD_x005fGeoreferenceable_x005fType*  MD_x005fGeoreferenceable       nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.isotc211.org/2005/gmd":MD_Georectified.
    gmd__MD_x005fGeorectified_x005fType*  MD_x005fGeorectified           nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_MD_x005fGridSpatialRepresentation_x005fPropertyType;
//  END OF SUBSTITUTIONS
    }                                   *__MD_x005fGridSpatialRepresentation_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gmd":"http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectReference">.
/// Attribute "uuidref" of XSD type xs:string.
   @std::string*                         :uuidref                       0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.isotc211.org/2005/gmd":MD_VectorSpatialRepresentation_PropertyType is a complexType.
///
/// class gmd__MD_x005fVectorSpatialRepresentation_x005fPropertyType operations:
/// - gmd__MD_x005fVectorSpatialRepresentation_x005fPropertyType* soap_new_gmd__MD_x005fVectorSpatialRepresentation_x005fPropertyType(soap*) allocate and default initialize
/// - gmd__MD_x005fVectorSpatialRepresentation_x005fPropertyType* soap_new_gmd__MD_x005fVectorSpatialRepresentation_x005fPropertyType(soap*, int num) allocate array and default initialize values
/// - gmd__MD_x005fVectorSpatialRepresentation_x005fPropertyType* soap_new_req_gmd__MD_x005fVectorSpatialRepresentation_x005fPropertyType(soap*, ...) allocate, set required members
/// - gmd__MD_x005fVectorSpatialRepresentation_x005fPropertyType* soap_new_set_gmd__MD_x005fVectorSpatialRepresentation_x005fPropertyType(soap*, ...) allocate, set all public members
/// - gmd__MD_x005fVectorSpatialRepresentation_x005fPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__MD_x005fVectorSpatialRepresentation_x005fPropertyType(soap*, gmd__MD_x005fVectorSpatialRepresentation_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fVectorSpatialRepresentation_x005fPropertyType(soap*, gmd__MD_x005fVectorSpatialRepresentation_x005fPropertyType*) serialize to a stream
/// - gmd__MD_x005fVectorSpatialRepresentation_x005fPropertyType* gmd__MD_x005fVectorSpatialRepresentation_x005fPropertyType::soap_dup(soap*) returns deep copy of gmd__MD_x005fVectorSpatialRepresentation_x005fPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__MD_x005fVectorSpatialRepresentation_x005fPropertyType::soap_del() deep deletes gmd__MD_x005fVectorSpatialRepresentation_x005fPropertyType data members, use only after gmd__MD_x005fVectorSpatialRepresentation_x005fPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__MD_x005fVectorSpatialRepresentation_x005fPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gmd__MD_x005fVectorSpatialRepresentation_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd:""http://www.isotc211.org/2005/gmd":MD_VectorSpatialRepresentation.
    gmd__MD_x005fVectorSpatialRepresentation_x005fType*  MD_x005fVectorSpatialRepresentation 1;	///< Required element.
    }                                   *__MD_x005fVectorSpatialRepresentation_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gmd":"http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectReference">.
/// Attribute "uuidref" of XSD type xs:string.
   @std::string*                         :uuidref                       0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.isotc211.org/2005/gmd":MD_SpatialRepresentation_PropertyType is a complexType.
///
/// class gmd__MD_x005fSpatialRepresentation_x005fPropertyType operations:
/// - gmd__MD_x005fSpatialRepresentation_x005fPropertyType* soap_new_gmd__MD_x005fSpatialRepresentation_x005fPropertyType(soap*) allocate and default initialize
/// - gmd__MD_x005fSpatialRepresentation_x005fPropertyType* soap_new_gmd__MD_x005fSpatialRepresentation_x005fPropertyType(soap*, int num) allocate array and default initialize values
/// - gmd__MD_x005fSpatialRepresentation_x005fPropertyType* soap_new_req_gmd__MD_x005fSpatialRepresentation_x005fPropertyType(soap*, ...) allocate, set required members
/// - gmd__MD_x005fSpatialRepresentation_x005fPropertyType* soap_new_set_gmd__MD_x005fSpatialRepresentation_x005fPropertyType(soap*, ...) allocate, set all public members
/// - gmd__MD_x005fSpatialRepresentation_x005fPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__MD_x005fSpatialRepresentation_x005fPropertyType(soap*, gmd__MD_x005fSpatialRepresentation_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fSpatialRepresentation_x005fPropertyType(soap*, gmd__MD_x005fSpatialRepresentation_x005fPropertyType*) serialize to a stream
/// - gmd__MD_x005fSpatialRepresentation_x005fPropertyType* gmd__MD_x005fSpatialRepresentation_x005fPropertyType::soap_dup(soap*) returns deep copy of gmd__MD_x005fSpatialRepresentation_x005fPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__MD_x005fSpatialRepresentation_x005fPropertyType::soap_del() deep deletes gmd__MD_x005fSpatialRepresentation_x005fPropertyType data members, use only after gmd__MD_x005fSpatialRepresentation_x005fPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__MD_x005fSpatialRepresentation_x005fPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gmd__MD_x005fSpatialRepresentation_x005fPropertyType_sequence
    {
/// Reference "http://www.isotc211.org/2005/gmd":AbstractMD_SpatialRepresentation to abstract element.
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractMD_SpatialRepresentation"> with global elements <MD_GridSpatialRepresentation> <MD_VectorSpatialRepresentation>
   $int                                  __unionAbstractMD_x005fSpatialRepresentation;	///< Union _gmd__union_MD_x005fSpatialRepresentation_x005fPropertyType selector: set to SOAP_UNION__gmd__union_MD_x005fSpatialRepresentation_x005fPropertyType_<fieldname>
/// Union for substitutionGroup gmd__AbstractMD_x005fSpatialRepresentation.
    union _gmd__union_MD_x005fSpatialRepresentation_x005fPropertyType
    {
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="MD_GridSpatialRepresentation"> with global elements <MD_Georeferenceable> <MD_Georectified>
/// Element "http://www.isotc211.org/2005/gmd":MD_GridSpatialRepresentation.
    gmd__MD_x005fGridSpatialRepresentation_x005fType*  MD_x005fGridSpatialRepresentation nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.isotc211.org/2005/gmd":MD_Georeferenceable.
    gmd__MD_x005fGeoreferenceable_x005fType*  MD_x005fGeoreferenceable       nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.isotc211.org/2005/gmd":MD_Georectified.
    gmd__MD_x005fGeorectified_x005fType*  MD_x005fGeorectified           nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
//  END OF SUBSTITUTIONS
/// Element "http://www.isotc211.org/2005/gmd":MD_VectorSpatialRepresentation.
    gmd__MD_x005fVectorSpatialRepresentation_x005fType*  MD_x005fVectorSpatialRepresentation nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_MD_x005fSpatialRepresentation_x005fPropertyType;
//  END OF SUBSTITUTIONS
    }                                   *__MD_x005fSpatialRepresentation_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gmd":"http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectReference">.
/// Attribute "uuidref" of XSD type xs:string.
   @std::string*                         :uuidref                       0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.isotc211.org/2005/gmd":MD_Georeferenceable_PropertyType is a complexType.
///
/// class gmd__MD_x005fGeoreferenceable_x005fPropertyType operations:
/// - gmd__MD_x005fGeoreferenceable_x005fPropertyType* soap_new_gmd__MD_x005fGeoreferenceable_x005fPropertyType(soap*) allocate and default initialize
/// - gmd__MD_x005fGeoreferenceable_x005fPropertyType* soap_new_gmd__MD_x005fGeoreferenceable_x005fPropertyType(soap*, int num) allocate array and default initialize values
/// - gmd__MD_x005fGeoreferenceable_x005fPropertyType* soap_new_req_gmd__MD_x005fGeoreferenceable_x005fPropertyType(soap*, ...) allocate, set required members
/// - gmd__MD_x005fGeoreferenceable_x005fPropertyType* soap_new_set_gmd__MD_x005fGeoreferenceable_x005fPropertyType(soap*, ...) allocate, set all public members
/// - gmd__MD_x005fGeoreferenceable_x005fPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__MD_x005fGeoreferenceable_x005fPropertyType(soap*, gmd__MD_x005fGeoreferenceable_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fGeoreferenceable_x005fPropertyType(soap*, gmd__MD_x005fGeoreferenceable_x005fPropertyType*) serialize to a stream
/// - gmd__MD_x005fGeoreferenceable_x005fPropertyType* gmd__MD_x005fGeoreferenceable_x005fPropertyType::soap_dup(soap*) returns deep copy of gmd__MD_x005fGeoreferenceable_x005fPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__MD_x005fGeoreferenceable_x005fPropertyType::soap_del() deep deletes gmd__MD_x005fGeoreferenceable_x005fPropertyType data members, use only after gmd__MD_x005fGeoreferenceable_x005fPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__MD_x005fGeoreferenceable_x005fPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gmd__MD_x005fGeoreferenceable_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd:""http://www.isotc211.org/2005/gmd":MD_Georeferenceable.
    gmd__MD_x005fGeoreferenceable_x005fType*  MD_x005fGeoreferenceable       1;	///< Required element.
    }                                   *__MD_x005fGeoreferenceable_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gmd":"http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectReference">.
/// Attribute "uuidref" of XSD type xs:string.
   @std::string*                         :uuidref                       0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.isotc211.org/2005/gmd":MD_Dimension_PropertyType is a complexType.
///
/// class gmd__MD_x005fDimension_x005fPropertyType operations:
/// - gmd__MD_x005fDimension_x005fPropertyType* soap_new_gmd__MD_x005fDimension_x005fPropertyType(soap*) allocate and default initialize
/// - gmd__MD_x005fDimension_x005fPropertyType* soap_new_gmd__MD_x005fDimension_x005fPropertyType(soap*, int num) allocate array and default initialize values
/// - gmd__MD_x005fDimension_x005fPropertyType* soap_new_req_gmd__MD_x005fDimension_x005fPropertyType(soap*, ...) allocate, set required members
/// - gmd__MD_x005fDimension_x005fPropertyType* soap_new_set_gmd__MD_x005fDimension_x005fPropertyType(soap*, ...) allocate, set all public members
/// - gmd__MD_x005fDimension_x005fPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__MD_x005fDimension_x005fPropertyType(soap*, gmd__MD_x005fDimension_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fDimension_x005fPropertyType(soap*, gmd__MD_x005fDimension_x005fPropertyType*) serialize to a stream
/// - gmd__MD_x005fDimension_x005fPropertyType* gmd__MD_x005fDimension_x005fPropertyType::soap_dup(soap*) returns deep copy of gmd__MD_x005fDimension_x005fPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__MD_x005fDimension_x005fPropertyType::soap_del() deep deletes gmd__MD_x005fDimension_x005fPropertyType data members, use only after gmd__MD_x005fDimension_x005fPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__MD_x005fDimension_x005fPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gmd__MD_x005fDimension_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd:""http://www.isotc211.org/2005/gmd":MD_Dimension.
    gmd__MD_x005fDimension_x005fType*    MD_x005fDimension              1;	///< Required element.
    }                                   *__MD_x005fDimension_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gmd":"http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectReference">.
/// Attribute "uuidref" of XSD type xs:string.
   @std::string*                         :uuidref                       0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.isotc211.org/2005/gmd":MD_Georectified_PropertyType is a complexType.
///
/// class gmd__MD_x005fGeorectified_x005fPropertyType operations:
/// - gmd__MD_x005fGeorectified_x005fPropertyType* soap_new_gmd__MD_x005fGeorectified_x005fPropertyType(soap*) allocate and default initialize
/// - gmd__MD_x005fGeorectified_x005fPropertyType* soap_new_gmd__MD_x005fGeorectified_x005fPropertyType(soap*, int num) allocate array and default initialize values
/// - gmd__MD_x005fGeorectified_x005fPropertyType* soap_new_req_gmd__MD_x005fGeorectified_x005fPropertyType(soap*, ...) allocate, set required members
/// - gmd__MD_x005fGeorectified_x005fPropertyType* soap_new_set_gmd__MD_x005fGeorectified_x005fPropertyType(soap*, ...) allocate, set all public members
/// - gmd__MD_x005fGeorectified_x005fPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__MD_x005fGeorectified_x005fPropertyType(soap*, gmd__MD_x005fGeorectified_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fGeorectified_x005fPropertyType(soap*, gmd__MD_x005fGeorectified_x005fPropertyType*) serialize to a stream
/// - gmd__MD_x005fGeorectified_x005fPropertyType* gmd__MD_x005fGeorectified_x005fPropertyType::soap_dup(soap*) returns deep copy of gmd__MD_x005fGeorectified_x005fPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__MD_x005fGeorectified_x005fPropertyType::soap_del() deep deletes gmd__MD_x005fGeorectified_x005fPropertyType data members, use only after gmd__MD_x005fGeorectified_x005fPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__MD_x005fGeorectified_x005fPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gmd__MD_x005fGeorectified_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd:""http://www.isotc211.org/2005/gmd":MD_Georectified.
    gmd__MD_x005fGeorectified_x005fType*  MD_x005fGeorectified           1;	///< Required element.
    }                                   *__MD_x005fGeorectified_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gmd":"http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectReference">.
/// Attribute "uuidref" of XSD type xs:string.
   @std::string*                         :uuidref                       0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.isotc211.org/2005/gmd":MD_GeometricObjects_PropertyType is a complexType.
///
/// class gmd__MD_x005fGeometricObjects_x005fPropertyType operations:
/// - gmd__MD_x005fGeometricObjects_x005fPropertyType* soap_new_gmd__MD_x005fGeometricObjects_x005fPropertyType(soap*) allocate and default initialize
/// - gmd__MD_x005fGeometricObjects_x005fPropertyType* soap_new_gmd__MD_x005fGeometricObjects_x005fPropertyType(soap*, int num) allocate array and default initialize values
/// - gmd__MD_x005fGeometricObjects_x005fPropertyType* soap_new_req_gmd__MD_x005fGeometricObjects_x005fPropertyType(soap*, ...) allocate, set required members
/// - gmd__MD_x005fGeometricObjects_x005fPropertyType* soap_new_set_gmd__MD_x005fGeometricObjects_x005fPropertyType(soap*, ...) allocate, set all public members
/// - gmd__MD_x005fGeometricObjects_x005fPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__MD_x005fGeometricObjects_x005fPropertyType(soap*, gmd__MD_x005fGeometricObjects_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fGeometricObjects_x005fPropertyType(soap*, gmd__MD_x005fGeometricObjects_x005fPropertyType*) serialize to a stream
/// - gmd__MD_x005fGeometricObjects_x005fPropertyType* gmd__MD_x005fGeometricObjects_x005fPropertyType::soap_dup(soap*) returns deep copy of gmd__MD_x005fGeometricObjects_x005fPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__MD_x005fGeometricObjects_x005fPropertyType::soap_del() deep deletes gmd__MD_x005fGeometricObjects_x005fPropertyType data members, use only after gmd__MD_x005fGeometricObjects_x005fPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__MD_x005fGeometricObjects_x005fPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gmd__MD_x005fGeometricObjects_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd:""http://www.isotc211.org/2005/gmd":MD_GeometricObjects.
    gmd__MD_x005fGeometricObjects_x005fType*  MD_x005fGeometricObjects       1;	///< Required element.
    }                                   *__MD_x005fGeometricObjects_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gmd":"http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectReference">.
/// Attribute "uuidref" of XSD type xs:string.
   @std::string*                         :uuidref                       0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.isotc211.org/2005/gmd":MD_PixelOrientationCode_PropertyType is a complexType.
///
/// class gmd__MD_x005fPixelOrientationCode_x005fPropertyType operations:
/// - gmd__MD_x005fPixelOrientationCode_x005fPropertyType* soap_new_gmd__MD_x005fPixelOrientationCode_x005fPropertyType(soap*) allocate and default initialize
/// - gmd__MD_x005fPixelOrientationCode_x005fPropertyType* soap_new_gmd__MD_x005fPixelOrientationCode_x005fPropertyType(soap*, int num) allocate array and default initialize values
/// - gmd__MD_x005fPixelOrientationCode_x005fPropertyType* soap_new_req_gmd__MD_x005fPixelOrientationCode_x005fPropertyType(soap*, ...) allocate, set required members
/// - gmd__MD_x005fPixelOrientationCode_x005fPropertyType* soap_new_set_gmd__MD_x005fPixelOrientationCode_x005fPropertyType(soap*, ...) allocate, set all public members
/// - gmd__MD_x005fPixelOrientationCode_x005fPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__MD_x005fPixelOrientationCode_x005fPropertyType(soap*, gmd__MD_x005fPixelOrientationCode_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fPixelOrientationCode_x005fPropertyType(soap*, gmd__MD_x005fPixelOrientationCode_x005fPropertyType*) serialize to a stream
/// - gmd__MD_x005fPixelOrientationCode_x005fPropertyType* gmd__MD_x005fPixelOrientationCode_x005fPropertyType::soap_dup(soap*) returns deep copy of gmd__MD_x005fPixelOrientationCode_x005fPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__MD_x005fPixelOrientationCode_x005fPropertyType::soap_del() deep deletes gmd__MD_x005fPixelOrientationCode_x005fPropertyType data members, use only after gmd__MD_x005fPixelOrientationCode_x005fPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__MD_x005fPixelOrientationCode_x005fPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gmd__MD_x005fPixelOrientationCode_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd:""http://www.isotc211.org/2005/gmd":MD_PixelOrientationCode.
    enum gmd__MD_x005fPixelOrientationCode_x005fType  MD_x005fPixelOrientationCode   1;	///< Required element.
    }                                   *__MD_x005fPixelOrientationCode_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gmd":"http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
};

/// @brief "http://www.isotc211.org/2005/gmd":MD_TopologyLevelCode_PropertyType is a complexType.
///
/// class gmd__MD_x005fTopologyLevelCode_x005fPropertyType operations:
/// - gmd__MD_x005fTopologyLevelCode_x005fPropertyType* soap_new_gmd__MD_x005fTopologyLevelCode_x005fPropertyType(soap*) allocate and default initialize
/// - gmd__MD_x005fTopologyLevelCode_x005fPropertyType* soap_new_gmd__MD_x005fTopologyLevelCode_x005fPropertyType(soap*, int num) allocate array and default initialize values
/// - gmd__MD_x005fTopologyLevelCode_x005fPropertyType* soap_new_req_gmd__MD_x005fTopologyLevelCode_x005fPropertyType(soap*, ...) allocate, set required members
/// - gmd__MD_x005fTopologyLevelCode_x005fPropertyType* soap_new_set_gmd__MD_x005fTopologyLevelCode_x005fPropertyType(soap*, ...) allocate, set all public members
/// - gmd__MD_x005fTopologyLevelCode_x005fPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__MD_x005fTopologyLevelCode_x005fPropertyType(soap*, gmd__MD_x005fTopologyLevelCode_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fTopologyLevelCode_x005fPropertyType(soap*, gmd__MD_x005fTopologyLevelCode_x005fPropertyType*) serialize to a stream
/// - gmd__MD_x005fTopologyLevelCode_x005fPropertyType* gmd__MD_x005fTopologyLevelCode_x005fPropertyType::soap_dup(soap*) returns deep copy of gmd__MD_x005fTopologyLevelCode_x005fPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__MD_x005fTopologyLevelCode_x005fPropertyType::soap_del() deep deletes gmd__MD_x005fTopologyLevelCode_x005fPropertyType data members, use only after gmd__MD_x005fTopologyLevelCode_x005fPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__MD_x005fTopologyLevelCode_x005fPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gmd__MD_x005fTopologyLevelCode_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd:""http://www.isotc211.org/2005/gmd":MD_TopologyLevelCode.
    gco__CodeListValue_x005fType*        MD_x005fTopologyLevelCode      1;	///< Required element.
    }                                   *__MD_x005fTopologyLevelCode_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gmd":"http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
};

/// @brief "http://www.isotc211.org/2005/gmd":MD_GeometricObjectTypeCode_PropertyType is a complexType.
///
/// class gmd__MD_x005fGeometricObjectTypeCode_x005fPropertyType operations:
/// - gmd__MD_x005fGeometricObjectTypeCode_x005fPropertyType* soap_new_gmd__MD_x005fGeometricObjectTypeCode_x005fPropertyType(soap*) allocate and default initialize
/// - gmd__MD_x005fGeometricObjectTypeCode_x005fPropertyType* soap_new_gmd__MD_x005fGeometricObjectTypeCode_x005fPropertyType(soap*, int num) allocate array and default initialize values
/// - gmd__MD_x005fGeometricObjectTypeCode_x005fPropertyType* soap_new_req_gmd__MD_x005fGeometricObjectTypeCode_x005fPropertyType(soap*, ...) allocate, set required members
/// - gmd__MD_x005fGeometricObjectTypeCode_x005fPropertyType* soap_new_set_gmd__MD_x005fGeometricObjectTypeCode_x005fPropertyType(soap*, ...) allocate, set all public members
/// - gmd__MD_x005fGeometricObjectTypeCode_x005fPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__MD_x005fGeometricObjectTypeCode_x005fPropertyType(soap*, gmd__MD_x005fGeometricObjectTypeCode_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fGeometricObjectTypeCode_x005fPropertyType(soap*, gmd__MD_x005fGeometricObjectTypeCode_x005fPropertyType*) serialize to a stream
/// - gmd__MD_x005fGeometricObjectTypeCode_x005fPropertyType* gmd__MD_x005fGeometricObjectTypeCode_x005fPropertyType::soap_dup(soap*) returns deep copy of gmd__MD_x005fGeometricObjectTypeCode_x005fPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__MD_x005fGeometricObjectTypeCode_x005fPropertyType::soap_del() deep deletes gmd__MD_x005fGeometricObjectTypeCode_x005fPropertyType data members, use only after gmd__MD_x005fGeometricObjectTypeCode_x005fPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__MD_x005fGeometricObjectTypeCode_x005fPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gmd__MD_x005fGeometricObjectTypeCode_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd:""http://www.isotc211.org/2005/gmd":MD_GeometricObjectTypeCode.
    gco__CodeListValue_x005fType*        MD_x005fGeometricObjectTypeCode 1;	///< Required element.
    }                                   *__MD_x005fGeometricObjectTypeCode_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gmd":"http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
};

/// @brief "http://www.isotc211.org/2005/gmd":MD_CellGeometryCode_PropertyType is a complexType.
///
/// class gmd__MD_x005fCellGeometryCode_x005fPropertyType operations:
/// - gmd__MD_x005fCellGeometryCode_x005fPropertyType* soap_new_gmd__MD_x005fCellGeometryCode_x005fPropertyType(soap*) allocate and default initialize
/// - gmd__MD_x005fCellGeometryCode_x005fPropertyType* soap_new_gmd__MD_x005fCellGeometryCode_x005fPropertyType(soap*, int num) allocate array and default initialize values
/// - gmd__MD_x005fCellGeometryCode_x005fPropertyType* soap_new_req_gmd__MD_x005fCellGeometryCode_x005fPropertyType(soap*, ...) allocate, set required members
/// - gmd__MD_x005fCellGeometryCode_x005fPropertyType* soap_new_set_gmd__MD_x005fCellGeometryCode_x005fPropertyType(soap*, ...) allocate, set all public members
/// - gmd__MD_x005fCellGeometryCode_x005fPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__MD_x005fCellGeometryCode_x005fPropertyType(soap*, gmd__MD_x005fCellGeometryCode_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fCellGeometryCode_x005fPropertyType(soap*, gmd__MD_x005fCellGeometryCode_x005fPropertyType*) serialize to a stream
/// - gmd__MD_x005fCellGeometryCode_x005fPropertyType* gmd__MD_x005fCellGeometryCode_x005fPropertyType::soap_dup(soap*) returns deep copy of gmd__MD_x005fCellGeometryCode_x005fPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__MD_x005fCellGeometryCode_x005fPropertyType::soap_del() deep deletes gmd__MD_x005fCellGeometryCode_x005fPropertyType data members, use only after gmd__MD_x005fCellGeometryCode_x005fPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__MD_x005fCellGeometryCode_x005fPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gmd__MD_x005fCellGeometryCode_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd:""http://www.isotc211.org/2005/gmd":MD_CellGeometryCode.
    gco__CodeListValue_x005fType*        MD_x005fCellGeometryCode       1;	///< Required element.
    }                                   *__MD_x005fCellGeometryCode_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gmd":"http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
};

/// @brief "http://www.isotc211.org/2005/gmd":MD_DimensionNameTypeCode_PropertyType is a complexType.
///
/// class gmd__MD_x005fDimensionNameTypeCode_x005fPropertyType operations:
/// - gmd__MD_x005fDimensionNameTypeCode_x005fPropertyType* soap_new_gmd__MD_x005fDimensionNameTypeCode_x005fPropertyType(soap*) allocate and default initialize
/// - gmd__MD_x005fDimensionNameTypeCode_x005fPropertyType* soap_new_gmd__MD_x005fDimensionNameTypeCode_x005fPropertyType(soap*, int num) allocate array and default initialize values
/// - gmd__MD_x005fDimensionNameTypeCode_x005fPropertyType* soap_new_req_gmd__MD_x005fDimensionNameTypeCode_x005fPropertyType(soap*, ...) allocate, set required members
/// - gmd__MD_x005fDimensionNameTypeCode_x005fPropertyType* soap_new_set_gmd__MD_x005fDimensionNameTypeCode_x005fPropertyType(soap*, ...) allocate, set all public members
/// - gmd__MD_x005fDimensionNameTypeCode_x005fPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__MD_x005fDimensionNameTypeCode_x005fPropertyType(soap*, gmd__MD_x005fDimensionNameTypeCode_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fDimensionNameTypeCode_x005fPropertyType(soap*, gmd__MD_x005fDimensionNameTypeCode_x005fPropertyType*) serialize to a stream
/// - gmd__MD_x005fDimensionNameTypeCode_x005fPropertyType* gmd__MD_x005fDimensionNameTypeCode_x005fPropertyType::soap_dup(soap*) returns deep copy of gmd__MD_x005fDimensionNameTypeCode_x005fPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__MD_x005fDimensionNameTypeCode_x005fPropertyType::soap_del() deep deletes gmd__MD_x005fDimensionNameTypeCode_x005fPropertyType data members, use only after gmd__MD_x005fDimensionNameTypeCode_x005fPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__MD_x005fDimensionNameTypeCode_x005fPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gmd__MD_x005fDimensionNameTypeCode_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd:""http://www.isotc211.org/2005/gmd":MD_DimensionNameTypeCode.
    gco__CodeListValue_x005fType*        MD_x005fDimensionNameTypeCode  1;	///< Required element.
    }                                   *__MD_x005fDimensionNameTypeCode_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gmd":"http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
};

/// @brief "http://www.isotc211.org/2005/gmd":CI_ResponsibleParty_PropertyType is a complexType.
///
/// class gmd__CI_x005fResponsibleParty_x005fPropertyType operations:
/// - gmd__CI_x005fResponsibleParty_x005fPropertyType* soap_new_gmd__CI_x005fResponsibleParty_x005fPropertyType(soap*) allocate and default initialize
/// - gmd__CI_x005fResponsibleParty_x005fPropertyType* soap_new_gmd__CI_x005fResponsibleParty_x005fPropertyType(soap*, int num) allocate array and default initialize values
/// - gmd__CI_x005fResponsibleParty_x005fPropertyType* soap_new_req_gmd__CI_x005fResponsibleParty_x005fPropertyType(soap*, ...) allocate, set required members
/// - gmd__CI_x005fResponsibleParty_x005fPropertyType* soap_new_set_gmd__CI_x005fResponsibleParty_x005fPropertyType(soap*, ...) allocate, set all public members
/// - gmd__CI_x005fResponsibleParty_x005fPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__CI_x005fResponsibleParty_x005fPropertyType(soap*, gmd__CI_x005fResponsibleParty_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__CI_x005fResponsibleParty_x005fPropertyType(soap*, gmd__CI_x005fResponsibleParty_x005fPropertyType*) serialize to a stream
/// - gmd__CI_x005fResponsibleParty_x005fPropertyType* gmd__CI_x005fResponsibleParty_x005fPropertyType::soap_dup(soap*) returns deep copy of gmd__CI_x005fResponsibleParty_x005fPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__CI_x005fResponsibleParty_x005fPropertyType::soap_del() deep deletes gmd__CI_x005fResponsibleParty_x005fPropertyType data members, use only after gmd__CI_x005fResponsibleParty_x005fPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__CI_x005fResponsibleParty_x005fPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gmd__CI_x005fResponsibleParty_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd:""http://www.isotc211.org/2005/gmd":CI_ResponsibleParty.
    gmd__CI_x005fResponsibleParty_x005fType*  CI_x005fResponsibleParty       1;	///< Required element.
    }                                   *__CI_x005fResponsibleParty_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gmd":"http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectReference">.
/// Attribute "uuidref" of XSD type xs:string.
   @std::string*                         :uuidref                       0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.isotc211.org/2005/gmd":CI_Citation_PropertyType is a complexType.
///
/// class gmd__CI_x005fCitation_x005fPropertyType operations:
/// - gmd__CI_x005fCitation_x005fPropertyType* soap_new_gmd__CI_x005fCitation_x005fPropertyType(soap*) allocate and default initialize
/// - gmd__CI_x005fCitation_x005fPropertyType* soap_new_gmd__CI_x005fCitation_x005fPropertyType(soap*, int num) allocate array and default initialize values
/// - gmd__CI_x005fCitation_x005fPropertyType* soap_new_req_gmd__CI_x005fCitation_x005fPropertyType(soap*, ...) allocate, set required members
/// - gmd__CI_x005fCitation_x005fPropertyType* soap_new_set_gmd__CI_x005fCitation_x005fPropertyType(soap*, ...) allocate, set all public members
/// - gmd__CI_x005fCitation_x005fPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__CI_x005fCitation_x005fPropertyType(soap*, gmd__CI_x005fCitation_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__CI_x005fCitation_x005fPropertyType(soap*, gmd__CI_x005fCitation_x005fPropertyType*) serialize to a stream
/// - gmd__CI_x005fCitation_x005fPropertyType* gmd__CI_x005fCitation_x005fPropertyType::soap_dup(soap*) returns deep copy of gmd__CI_x005fCitation_x005fPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__CI_x005fCitation_x005fPropertyType::soap_del() deep deletes gmd__CI_x005fCitation_x005fPropertyType data members, use only after gmd__CI_x005fCitation_x005fPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__CI_x005fCitation_x005fPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gmd__CI_x005fCitation_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd:""http://www.isotc211.org/2005/gmd":CI_Citation.
    gmd__CI_x005fCitation_x005fType*     CI_x005fCitation               1;	///< Required element.
    }                                   *__CI_x005fCitation_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gmd":"http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectReference">.
/// Attribute "uuidref" of XSD type xs:string.
   @std::string*                         :uuidref                       0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.isotc211.org/2005/gmd":CI_Address_PropertyType is a complexType.
///
/// class gmd__CI_x005fAddress_x005fPropertyType operations:
/// - gmd__CI_x005fAddress_x005fPropertyType* soap_new_gmd__CI_x005fAddress_x005fPropertyType(soap*) allocate and default initialize
/// - gmd__CI_x005fAddress_x005fPropertyType* soap_new_gmd__CI_x005fAddress_x005fPropertyType(soap*, int num) allocate array and default initialize values
/// - gmd__CI_x005fAddress_x005fPropertyType* soap_new_req_gmd__CI_x005fAddress_x005fPropertyType(soap*, ...) allocate, set required members
/// - gmd__CI_x005fAddress_x005fPropertyType* soap_new_set_gmd__CI_x005fAddress_x005fPropertyType(soap*, ...) allocate, set all public members
/// - gmd__CI_x005fAddress_x005fPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__CI_x005fAddress_x005fPropertyType(soap*, gmd__CI_x005fAddress_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__CI_x005fAddress_x005fPropertyType(soap*, gmd__CI_x005fAddress_x005fPropertyType*) serialize to a stream
/// - gmd__CI_x005fAddress_x005fPropertyType* gmd__CI_x005fAddress_x005fPropertyType::soap_dup(soap*) returns deep copy of gmd__CI_x005fAddress_x005fPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__CI_x005fAddress_x005fPropertyType::soap_del() deep deletes gmd__CI_x005fAddress_x005fPropertyType data members, use only after gmd__CI_x005fAddress_x005fPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__CI_x005fAddress_x005fPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gmd__CI_x005fAddress_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd:""http://www.isotc211.org/2005/gmd":CI_Address.
    gmd__CI_x005fAddress_x005fType*      CI_x005fAddress                1;	///< Required element.
    }                                   *__CI_x005fAddress_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gmd":"http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectReference">.
/// Attribute "uuidref" of XSD type xs:string.
   @std::string*                         :uuidref                       0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.isotc211.org/2005/gmd":CI_OnlineResource_PropertyType is a complexType.
///
/// class gmd__CI_x005fOnlineResource_x005fPropertyType operations:
/// - gmd__CI_x005fOnlineResource_x005fPropertyType* soap_new_gmd__CI_x005fOnlineResource_x005fPropertyType(soap*) allocate and default initialize
/// - gmd__CI_x005fOnlineResource_x005fPropertyType* soap_new_gmd__CI_x005fOnlineResource_x005fPropertyType(soap*, int num) allocate array and default initialize values
/// - gmd__CI_x005fOnlineResource_x005fPropertyType* soap_new_req_gmd__CI_x005fOnlineResource_x005fPropertyType(soap*, ...) allocate, set required members
/// - gmd__CI_x005fOnlineResource_x005fPropertyType* soap_new_set_gmd__CI_x005fOnlineResource_x005fPropertyType(soap*, ...) allocate, set all public members
/// - gmd__CI_x005fOnlineResource_x005fPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__CI_x005fOnlineResource_x005fPropertyType(soap*, gmd__CI_x005fOnlineResource_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__CI_x005fOnlineResource_x005fPropertyType(soap*, gmd__CI_x005fOnlineResource_x005fPropertyType*) serialize to a stream
/// - gmd__CI_x005fOnlineResource_x005fPropertyType* gmd__CI_x005fOnlineResource_x005fPropertyType::soap_dup(soap*) returns deep copy of gmd__CI_x005fOnlineResource_x005fPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__CI_x005fOnlineResource_x005fPropertyType::soap_del() deep deletes gmd__CI_x005fOnlineResource_x005fPropertyType data members, use only after gmd__CI_x005fOnlineResource_x005fPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__CI_x005fOnlineResource_x005fPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gmd__CI_x005fOnlineResource_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd:""http://www.isotc211.org/2005/gmd":CI_OnlineResource.
    gmd__CI_x005fOnlineResource_x005fType*  CI_x005fOnlineResource         1;	///< Required element.
    }                                   *__CI_x005fOnlineResource_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gmd":"http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectReference">.
/// Attribute "uuidref" of XSD type xs:string.
   @std::string*                         :uuidref                       0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.isotc211.org/2005/gmd":CI_Contact_PropertyType is a complexType.
///
/// class gmd__CI_x005fContact_x005fPropertyType operations:
/// - gmd__CI_x005fContact_x005fPropertyType* soap_new_gmd__CI_x005fContact_x005fPropertyType(soap*) allocate and default initialize
/// - gmd__CI_x005fContact_x005fPropertyType* soap_new_gmd__CI_x005fContact_x005fPropertyType(soap*, int num) allocate array and default initialize values
/// - gmd__CI_x005fContact_x005fPropertyType* soap_new_req_gmd__CI_x005fContact_x005fPropertyType(soap*, ...) allocate, set required members
/// - gmd__CI_x005fContact_x005fPropertyType* soap_new_set_gmd__CI_x005fContact_x005fPropertyType(soap*, ...) allocate, set all public members
/// - gmd__CI_x005fContact_x005fPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__CI_x005fContact_x005fPropertyType(soap*, gmd__CI_x005fContact_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__CI_x005fContact_x005fPropertyType(soap*, gmd__CI_x005fContact_x005fPropertyType*) serialize to a stream
/// - gmd__CI_x005fContact_x005fPropertyType* gmd__CI_x005fContact_x005fPropertyType::soap_dup(soap*) returns deep copy of gmd__CI_x005fContact_x005fPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__CI_x005fContact_x005fPropertyType::soap_del() deep deletes gmd__CI_x005fContact_x005fPropertyType data members, use only after gmd__CI_x005fContact_x005fPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__CI_x005fContact_x005fPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gmd__CI_x005fContact_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd:""http://www.isotc211.org/2005/gmd":CI_Contact.
    gmd__CI_x005fContact_x005fType*      CI_x005fContact                1;	///< Required element.
    }                                   *__CI_x005fContact_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gmd":"http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectReference">.
/// Attribute "uuidref" of XSD type xs:string.
   @std::string*                         :uuidref                       0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.isotc211.org/2005/gmd":CI_Telephone_PropertyType is a complexType.
///
/// class gmd__CI_x005fTelephone_x005fPropertyType operations:
/// - gmd__CI_x005fTelephone_x005fPropertyType* soap_new_gmd__CI_x005fTelephone_x005fPropertyType(soap*) allocate and default initialize
/// - gmd__CI_x005fTelephone_x005fPropertyType* soap_new_gmd__CI_x005fTelephone_x005fPropertyType(soap*, int num) allocate array and default initialize values
/// - gmd__CI_x005fTelephone_x005fPropertyType* soap_new_req_gmd__CI_x005fTelephone_x005fPropertyType(soap*, ...) allocate, set required members
/// - gmd__CI_x005fTelephone_x005fPropertyType* soap_new_set_gmd__CI_x005fTelephone_x005fPropertyType(soap*, ...) allocate, set all public members
/// - gmd__CI_x005fTelephone_x005fPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__CI_x005fTelephone_x005fPropertyType(soap*, gmd__CI_x005fTelephone_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__CI_x005fTelephone_x005fPropertyType(soap*, gmd__CI_x005fTelephone_x005fPropertyType*) serialize to a stream
/// - gmd__CI_x005fTelephone_x005fPropertyType* gmd__CI_x005fTelephone_x005fPropertyType::soap_dup(soap*) returns deep copy of gmd__CI_x005fTelephone_x005fPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__CI_x005fTelephone_x005fPropertyType::soap_del() deep deletes gmd__CI_x005fTelephone_x005fPropertyType data members, use only after gmd__CI_x005fTelephone_x005fPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__CI_x005fTelephone_x005fPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gmd__CI_x005fTelephone_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd:""http://www.isotc211.org/2005/gmd":CI_Telephone.
    gmd__CI_x005fTelephone_x005fType*    CI_x005fTelephone              1;	///< Required element.
    }                                   *__CI_x005fTelephone_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gmd":"http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectReference">.
/// Attribute "uuidref" of XSD type xs:string.
   @std::string*                         :uuidref                       0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.isotc211.org/2005/gmd":CI_Date_PropertyType is a complexType.
///
/// class gmd__CI_x005fDate_x005fPropertyType operations:
/// - gmd__CI_x005fDate_x005fPropertyType* soap_new_gmd__CI_x005fDate_x005fPropertyType(soap*) allocate and default initialize
/// - gmd__CI_x005fDate_x005fPropertyType* soap_new_gmd__CI_x005fDate_x005fPropertyType(soap*, int num) allocate array and default initialize values
/// - gmd__CI_x005fDate_x005fPropertyType* soap_new_req_gmd__CI_x005fDate_x005fPropertyType(soap*, ...) allocate, set required members
/// - gmd__CI_x005fDate_x005fPropertyType* soap_new_set_gmd__CI_x005fDate_x005fPropertyType(soap*, ...) allocate, set all public members
/// - gmd__CI_x005fDate_x005fPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__CI_x005fDate_x005fPropertyType(soap*, gmd__CI_x005fDate_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__CI_x005fDate_x005fPropertyType(soap*, gmd__CI_x005fDate_x005fPropertyType*) serialize to a stream
/// - gmd__CI_x005fDate_x005fPropertyType* gmd__CI_x005fDate_x005fPropertyType::soap_dup(soap*) returns deep copy of gmd__CI_x005fDate_x005fPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__CI_x005fDate_x005fPropertyType::soap_del() deep deletes gmd__CI_x005fDate_x005fPropertyType data members, use only after gmd__CI_x005fDate_x005fPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__CI_x005fDate_x005fPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gmd__CI_x005fDate_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd:""http://www.isotc211.org/2005/gmd":CI_Date.
    gmd__CI_x005fDate_x005fType*         CI_x005fDate                   1;	///< Required element.
    }                                   *__CI_x005fDate_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gmd":"http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectReference">.
/// Attribute "uuidref" of XSD type xs:string.
   @std::string*                         :uuidref                       0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.isotc211.org/2005/gmd":CI_Series_PropertyType is a complexType.
///
/// class gmd__CI_x005fSeries_x005fPropertyType operations:
/// - gmd__CI_x005fSeries_x005fPropertyType* soap_new_gmd__CI_x005fSeries_x005fPropertyType(soap*) allocate and default initialize
/// - gmd__CI_x005fSeries_x005fPropertyType* soap_new_gmd__CI_x005fSeries_x005fPropertyType(soap*, int num) allocate array and default initialize values
/// - gmd__CI_x005fSeries_x005fPropertyType* soap_new_req_gmd__CI_x005fSeries_x005fPropertyType(soap*, ...) allocate, set required members
/// - gmd__CI_x005fSeries_x005fPropertyType* soap_new_set_gmd__CI_x005fSeries_x005fPropertyType(soap*, ...) allocate, set all public members
/// - gmd__CI_x005fSeries_x005fPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__CI_x005fSeries_x005fPropertyType(soap*, gmd__CI_x005fSeries_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__CI_x005fSeries_x005fPropertyType(soap*, gmd__CI_x005fSeries_x005fPropertyType*) serialize to a stream
/// - gmd__CI_x005fSeries_x005fPropertyType* gmd__CI_x005fSeries_x005fPropertyType::soap_dup(soap*) returns deep copy of gmd__CI_x005fSeries_x005fPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__CI_x005fSeries_x005fPropertyType::soap_del() deep deletes gmd__CI_x005fSeries_x005fPropertyType data members, use only after gmd__CI_x005fSeries_x005fPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__CI_x005fSeries_x005fPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gmd__CI_x005fSeries_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd:""http://www.isotc211.org/2005/gmd":CI_Series.
    gmd__CI_x005fSeries_x005fType*       CI_x005fSeries                 1;	///< Required element.
    }                                   *__CI_x005fSeries_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gmd":"http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectReference">.
/// Attribute "uuidref" of XSD type xs:string.
   @std::string*                         :uuidref                       0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.isotc211.org/2005/gmd":URL_PropertyType is a complexType.
///
/// class gmd__URL_x005fPropertyType operations:
/// - gmd__URL_x005fPropertyType* soap_new_gmd__URL_x005fPropertyType(soap*) allocate and default initialize
/// - gmd__URL_x005fPropertyType* soap_new_gmd__URL_x005fPropertyType(soap*, int num) allocate array and default initialize values
/// - gmd__URL_x005fPropertyType* soap_new_req_gmd__URL_x005fPropertyType(soap*, ...) allocate, set required members
/// - gmd__URL_x005fPropertyType* soap_new_set_gmd__URL_x005fPropertyType(soap*, ...) allocate, set all public members
/// - gmd__URL_x005fPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__URL_x005fPropertyType(soap*, gmd__URL_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__URL_x005fPropertyType(soap*, gmd__URL_x005fPropertyType*) serialize to a stream
/// - gmd__URL_x005fPropertyType* gmd__URL_x005fPropertyType::soap_dup(soap*) returns deep copy of gmd__URL_x005fPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__URL_x005fPropertyType::soap_del() deep deletes gmd__URL_x005fPropertyType data members, use only after gmd__URL_x005fPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__URL_x005fPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gmd__URL_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd:""http://www.isotc211.org/2005/gmd":URL.
    xsd__anyURI                          URL                            1;	///< Required element.
    }                                   *__URL_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gmd":"http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
};

/// @brief "http://www.isotc211.org/2005/gmd":CI_RoleCode_PropertyType is a complexType.
///
/// class gmd__CI_x005fRoleCode_x005fPropertyType operations:
/// - gmd__CI_x005fRoleCode_x005fPropertyType* soap_new_gmd__CI_x005fRoleCode_x005fPropertyType(soap*) allocate and default initialize
/// - gmd__CI_x005fRoleCode_x005fPropertyType* soap_new_gmd__CI_x005fRoleCode_x005fPropertyType(soap*, int num) allocate array and default initialize values
/// - gmd__CI_x005fRoleCode_x005fPropertyType* soap_new_req_gmd__CI_x005fRoleCode_x005fPropertyType(soap*, ...) allocate, set required members
/// - gmd__CI_x005fRoleCode_x005fPropertyType* soap_new_set_gmd__CI_x005fRoleCode_x005fPropertyType(soap*, ...) allocate, set all public members
/// - gmd__CI_x005fRoleCode_x005fPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__CI_x005fRoleCode_x005fPropertyType(soap*, gmd__CI_x005fRoleCode_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__CI_x005fRoleCode_x005fPropertyType(soap*, gmd__CI_x005fRoleCode_x005fPropertyType*) serialize to a stream
/// - gmd__CI_x005fRoleCode_x005fPropertyType* gmd__CI_x005fRoleCode_x005fPropertyType::soap_dup(soap*) returns deep copy of gmd__CI_x005fRoleCode_x005fPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__CI_x005fRoleCode_x005fPropertyType::soap_del() deep deletes gmd__CI_x005fRoleCode_x005fPropertyType data members, use only after gmd__CI_x005fRoleCode_x005fPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__CI_x005fRoleCode_x005fPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gmd__CI_x005fRoleCode_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd:""http://www.isotc211.org/2005/gmd":CI_RoleCode.
    gco__CodeListValue_x005fType*        CI_x005fRoleCode               1;	///< Required element.
    }                                   *__CI_x005fRoleCode_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gmd":"http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
};

/// @brief "http://www.isotc211.org/2005/gmd":CI_PresentationFormCode_PropertyType is a complexType.
///
/// class gmd__CI_x005fPresentationFormCode_x005fPropertyType operations:
/// - gmd__CI_x005fPresentationFormCode_x005fPropertyType* soap_new_gmd__CI_x005fPresentationFormCode_x005fPropertyType(soap*) allocate and default initialize
/// - gmd__CI_x005fPresentationFormCode_x005fPropertyType* soap_new_gmd__CI_x005fPresentationFormCode_x005fPropertyType(soap*, int num) allocate array and default initialize values
/// - gmd__CI_x005fPresentationFormCode_x005fPropertyType* soap_new_req_gmd__CI_x005fPresentationFormCode_x005fPropertyType(soap*, ...) allocate, set required members
/// - gmd__CI_x005fPresentationFormCode_x005fPropertyType* soap_new_set_gmd__CI_x005fPresentationFormCode_x005fPropertyType(soap*, ...) allocate, set all public members
/// - gmd__CI_x005fPresentationFormCode_x005fPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__CI_x005fPresentationFormCode_x005fPropertyType(soap*, gmd__CI_x005fPresentationFormCode_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__CI_x005fPresentationFormCode_x005fPropertyType(soap*, gmd__CI_x005fPresentationFormCode_x005fPropertyType*) serialize to a stream
/// - gmd__CI_x005fPresentationFormCode_x005fPropertyType* gmd__CI_x005fPresentationFormCode_x005fPropertyType::soap_dup(soap*) returns deep copy of gmd__CI_x005fPresentationFormCode_x005fPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__CI_x005fPresentationFormCode_x005fPropertyType::soap_del() deep deletes gmd__CI_x005fPresentationFormCode_x005fPropertyType data members, use only after gmd__CI_x005fPresentationFormCode_x005fPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__CI_x005fPresentationFormCode_x005fPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gmd__CI_x005fPresentationFormCode_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd:""http://www.isotc211.org/2005/gmd":CI_PresentationFormCode.
    gco__CodeListValue_x005fType*        CI_x005fPresentationFormCode   1;	///< Required element.
    }                                   *__CI_x005fPresentationFormCode_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gmd":"http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
};

/// @brief "http://www.isotc211.org/2005/gmd":CI_OnLineFunctionCode_PropertyType is a complexType.
///
/// class gmd__CI_x005fOnLineFunctionCode_x005fPropertyType operations:
/// - gmd__CI_x005fOnLineFunctionCode_x005fPropertyType* soap_new_gmd__CI_x005fOnLineFunctionCode_x005fPropertyType(soap*) allocate and default initialize
/// - gmd__CI_x005fOnLineFunctionCode_x005fPropertyType* soap_new_gmd__CI_x005fOnLineFunctionCode_x005fPropertyType(soap*, int num) allocate array and default initialize values
/// - gmd__CI_x005fOnLineFunctionCode_x005fPropertyType* soap_new_req_gmd__CI_x005fOnLineFunctionCode_x005fPropertyType(soap*, ...) allocate, set required members
/// - gmd__CI_x005fOnLineFunctionCode_x005fPropertyType* soap_new_set_gmd__CI_x005fOnLineFunctionCode_x005fPropertyType(soap*, ...) allocate, set all public members
/// - gmd__CI_x005fOnLineFunctionCode_x005fPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__CI_x005fOnLineFunctionCode_x005fPropertyType(soap*, gmd__CI_x005fOnLineFunctionCode_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__CI_x005fOnLineFunctionCode_x005fPropertyType(soap*, gmd__CI_x005fOnLineFunctionCode_x005fPropertyType*) serialize to a stream
/// - gmd__CI_x005fOnLineFunctionCode_x005fPropertyType* gmd__CI_x005fOnLineFunctionCode_x005fPropertyType::soap_dup(soap*) returns deep copy of gmd__CI_x005fOnLineFunctionCode_x005fPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__CI_x005fOnLineFunctionCode_x005fPropertyType::soap_del() deep deletes gmd__CI_x005fOnLineFunctionCode_x005fPropertyType data members, use only after gmd__CI_x005fOnLineFunctionCode_x005fPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__CI_x005fOnLineFunctionCode_x005fPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gmd__CI_x005fOnLineFunctionCode_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd:""http://www.isotc211.org/2005/gmd":CI_OnLineFunctionCode.
    gco__CodeListValue_x005fType*        CI_x005fOnLineFunctionCode     1;	///< Required element.
    }                                   *__CI_x005fOnLineFunctionCode_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gmd":"http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
};

/// @brief "http://www.isotc211.org/2005/gmd":CI_DateTypeCode_PropertyType is a complexType.
///
/// class gmd__CI_x005fDateTypeCode_x005fPropertyType operations:
/// - gmd__CI_x005fDateTypeCode_x005fPropertyType* soap_new_gmd__CI_x005fDateTypeCode_x005fPropertyType(soap*) allocate and default initialize
/// - gmd__CI_x005fDateTypeCode_x005fPropertyType* soap_new_gmd__CI_x005fDateTypeCode_x005fPropertyType(soap*, int num) allocate array and default initialize values
/// - gmd__CI_x005fDateTypeCode_x005fPropertyType* soap_new_req_gmd__CI_x005fDateTypeCode_x005fPropertyType(soap*, ...) allocate, set required members
/// - gmd__CI_x005fDateTypeCode_x005fPropertyType* soap_new_set_gmd__CI_x005fDateTypeCode_x005fPropertyType(soap*, ...) allocate, set all public members
/// - gmd__CI_x005fDateTypeCode_x005fPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__CI_x005fDateTypeCode_x005fPropertyType(soap*, gmd__CI_x005fDateTypeCode_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__CI_x005fDateTypeCode_x005fPropertyType(soap*, gmd__CI_x005fDateTypeCode_x005fPropertyType*) serialize to a stream
/// - gmd__CI_x005fDateTypeCode_x005fPropertyType* gmd__CI_x005fDateTypeCode_x005fPropertyType::soap_dup(soap*) returns deep copy of gmd__CI_x005fDateTypeCode_x005fPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__CI_x005fDateTypeCode_x005fPropertyType::soap_del() deep deletes gmd__CI_x005fDateTypeCode_x005fPropertyType data members, use only after gmd__CI_x005fDateTypeCode_x005fPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__CI_x005fDateTypeCode_x005fPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gmd__CI_x005fDateTypeCode_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd:""http://www.isotc211.org/2005/gmd":CI_DateTypeCode.
    gco__CodeListValue_x005fType*        CI_x005fDateTypeCode           1;	///< Required element.
    }                                   *__CI_x005fDateTypeCode_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gmd":"http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
};

/// @brief "http://www.isotc211.org/2005/gmd":RS_Identifier_PropertyType is a complexType.
///
/// class gmd__RS_x005fIdentifier_x005fPropertyType operations:
/// - gmd__RS_x005fIdentifier_x005fPropertyType* soap_new_gmd__RS_x005fIdentifier_x005fPropertyType(soap*) allocate and default initialize
/// - gmd__RS_x005fIdentifier_x005fPropertyType* soap_new_gmd__RS_x005fIdentifier_x005fPropertyType(soap*, int num) allocate array and default initialize values
/// - gmd__RS_x005fIdentifier_x005fPropertyType* soap_new_req_gmd__RS_x005fIdentifier_x005fPropertyType(soap*, ...) allocate, set required members
/// - gmd__RS_x005fIdentifier_x005fPropertyType* soap_new_set_gmd__RS_x005fIdentifier_x005fPropertyType(soap*, ...) allocate, set all public members
/// - gmd__RS_x005fIdentifier_x005fPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__RS_x005fIdentifier_x005fPropertyType(soap*, gmd__RS_x005fIdentifier_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__RS_x005fIdentifier_x005fPropertyType(soap*, gmd__RS_x005fIdentifier_x005fPropertyType*) serialize to a stream
/// - gmd__RS_x005fIdentifier_x005fPropertyType* gmd__RS_x005fIdentifier_x005fPropertyType::soap_dup(soap*) returns deep copy of gmd__RS_x005fIdentifier_x005fPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__RS_x005fIdentifier_x005fPropertyType::soap_del() deep deletes gmd__RS_x005fIdentifier_x005fPropertyType data members, use only after gmd__RS_x005fIdentifier_x005fPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__RS_x005fIdentifier_x005fPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gmd__RS_x005fIdentifier_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd:""http://www.isotc211.org/2005/gmd":RS_Identifier.
    gmd__RS_x005fIdentifier_x005fType*   RS_x005fIdentifier             1;	///< Required element.
    }                                   *__RS_x005fIdentifier_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gmd":"http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectReference">.
/// Attribute "uuidref" of XSD type xs:string.
   @std::string*                         :uuidref                       0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.isotc211.org/2005/gmd":MD_ReferenceSystem_PropertyType is a complexType.
///
/// class gmd__MD_x005fReferenceSystem_x005fPropertyType operations:
/// - gmd__MD_x005fReferenceSystem_x005fPropertyType* soap_new_gmd__MD_x005fReferenceSystem_x005fPropertyType(soap*) allocate and default initialize
/// - gmd__MD_x005fReferenceSystem_x005fPropertyType* soap_new_gmd__MD_x005fReferenceSystem_x005fPropertyType(soap*, int num) allocate array and default initialize values
/// - gmd__MD_x005fReferenceSystem_x005fPropertyType* soap_new_req_gmd__MD_x005fReferenceSystem_x005fPropertyType(soap*, ...) allocate, set required members
/// - gmd__MD_x005fReferenceSystem_x005fPropertyType* soap_new_set_gmd__MD_x005fReferenceSystem_x005fPropertyType(soap*, ...) allocate, set all public members
/// - gmd__MD_x005fReferenceSystem_x005fPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__MD_x005fReferenceSystem_x005fPropertyType(soap*, gmd__MD_x005fReferenceSystem_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fReferenceSystem_x005fPropertyType(soap*, gmd__MD_x005fReferenceSystem_x005fPropertyType*) serialize to a stream
/// - gmd__MD_x005fReferenceSystem_x005fPropertyType* gmd__MD_x005fReferenceSystem_x005fPropertyType::soap_dup(soap*) returns deep copy of gmd__MD_x005fReferenceSystem_x005fPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__MD_x005fReferenceSystem_x005fPropertyType::soap_del() deep deletes gmd__MD_x005fReferenceSystem_x005fPropertyType data members, use only after gmd__MD_x005fReferenceSystem_x005fPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__MD_x005fReferenceSystem_x005fPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gmd__MD_x005fReferenceSystem_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd:""http://www.isotc211.org/2005/gmd":MD_ReferenceSystem.
    gmd__MD_x005fReferenceSystem_x005fType*  MD_x005fReferenceSystem        1;	///< Required element.
    }                                   *__MD_x005fReferenceSystem_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gmd":"http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectReference">.
/// Attribute "uuidref" of XSD type xs:string.
   @std::string*                         :uuidref                       0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.isotc211.org/2005/gmd":MD_Identifier_PropertyType is a complexType.
///
/// class gmd__MD_x005fIdentifier_x005fPropertyType operations:
/// - gmd__MD_x005fIdentifier_x005fPropertyType* soap_new_gmd__MD_x005fIdentifier_x005fPropertyType(soap*) allocate and default initialize
/// - gmd__MD_x005fIdentifier_x005fPropertyType* soap_new_gmd__MD_x005fIdentifier_x005fPropertyType(soap*, int num) allocate array and default initialize values
/// - gmd__MD_x005fIdentifier_x005fPropertyType* soap_new_req_gmd__MD_x005fIdentifier_x005fPropertyType(soap*, ...) allocate, set required members
/// - gmd__MD_x005fIdentifier_x005fPropertyType* soap_new_set_gmd__MD_x005fIdentifier_x005fPropertyType(soap*, ...) allocate, set all public members
/// - gmd__MD_x005fIdentifier_x005fPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__MD_x005fIdentifier_x005fPropertyType(soap*, gmd__MD_x005fIdentifier_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fIdentifier_x005fPropertyType(soap*, gmd__MD_x005fIdentifier_x005fPropertyType*) serialize to a stream
/// - gmd__MD_x005fIdentifier_x005fPropertyType* gmd__MD_x005fIdentifier_x005fPropertyType::soap_dup(soap*) returns deep copy of gmd__MD_x005fIdentifier_x005fPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__MD_x005fIdentifier_x005fPropertyType::soap_del() deep deletes gmd__MD_x005fIdentifier_x005fPropertyType data members, use only after gmd__MD_x005fIdentifier_x005fPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__MD_x005fIdentifier_x005fPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gmd__MD_x005fIdentifier_x005fPropertyType_sequence
    {
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="MD_Identifier"> with global elements <RS_Identifier>
   $int                                  __unionMD_x005fIdentifier     ;	///< Union _gmd__union_MD_x005fIdentifier_x005fPropertyType selector: set to SOAP_UNION__gmd__union_MD_x005fIdentifier_x005fPropertyType_<fieldname>
/// Union for substitutionGroup gmd__MD_x005fIdentifier.
    union _gmd__union_MD_x005fIdentifier_x005fPropertyType
    {
/// Element reference "http://www.isotc211.org/2005/gmd:""http://www.isotc211.org/2005/gmd":MD_Identifier.
    gmd__MD_x005fIdentifier_x005fType*   MD_x005fIdentifier             nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.isotc211.org/2005/gmd":RS_Identifier.
    gmd__RS_x005fIdentifier_x005fType*   RS_x005fIdentifier             nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_MD_x005fIdentifier_x005fPropertyType;
//  END OF SUBSTITUTIONS
    }                                   *__MD_x005fIdentifier_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gmd":"http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectReference">.
/// Attribute "uuidref" of XSD type xs:string.
   @std::string*                         :uuidref                       0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.isotc211.org/2005/gmd":RS_ReferenceSystem_PropertyType is a complexType.
///
/// class gmd__RS_x005fReferenceSystem_x005fPropertyType operations:
/// - gmd__RS_x005fReferenceSystem_x005fPropertyType* soap_new_gmd__RS_x005fReferenceSystem_x005fPropertyType(soap*) allocate and default initialize
/// - gmd__RS_x005fReferenceSystem_x005fPropertyType* soap_new_gmd__RS_x005fReferenceSystem_x005fPropertyType(soap*, int num) allocate array and default initialize values
/// - gmd__RS_x005fReferenceSystem_x005fPropertyType* soap_new_req_gmd__RS_x005fReferenceSystem_x005fPropertyType(soap*, ...) allocate, set required members
/// - gmd__RS_x005fReferenceSystem_x005fPropertyType* soap_new_set_gmd__RS_x005fReferenceSystem_x005fPropertyType(soap*, ...) allocate, set all public members
/// - gmd__RS_x005fReferenceSystem_x005fPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__RS_x005fReferenceSystem_x005fPropertyType(soap*, gmd__RS_x005fReferenceSystem_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__RS_x005fReferenceSystem_x005fPropertyType(soap*, gmd__RS_x005fReferenceSystem_x005fPropertyType*) serialize to a stream
/// - gmd__RS_x005fReferenceSystem_x005fPropertyType* gmd__RS_x005fReferenceSystem_x005fPropertyType::soap_dup(soap*) returns deep copy of gmd__RS_x005fReferenceSystem_x005fPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__RS_x005fReferenceSystem_x005fPropertyType::soap_del() deep deletes gmd__RS_x005fReferenceSystem_x005fPropertyType data members, use only after gmd__RS_x005fReferenceSystem_x005fPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__RS_x005fReferenceSystem_x005fPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gmd__RS_x005fReferenceSystem_x005fPropertyType_sequence
    {
/// Reference "http://www.isotc211.org/2005/gmd":AbstractRS_ReferenceSystem to abstract element.
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractRS_ReferenceSystem"> with global elements
   $int                                  __unionAbstractRS_x005fReferenceSystem;	///< Union _gmd__union_RS_x005fReferenceSystem_x005fPropertyType selector: set to SOAP_UNION__gmd__union_RS_x005fReferenceSystem_x005fPropertyType_<fieldname>
/// Union for substitutionGroup gmd__AbstractRS_x005fReferenceSystem.
    union _gmd__union_RS_x005fReferenceSystem_x005fPropertyType
    {
    }                                    union_RS_x005fReferenceSystem_x005fPropertyType;
//  END OF SUBSTITUTIONS
    }                                   *__RS_x005fReferenceSystem_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gmd":"http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectReference">.
/// Attribute "uuidref" of XSD type xs:string.
   @std::string*                         :uuidref                       0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.isotc211.org/2005/gmd":EX_TemporalExtent_PropertyType is a complexType.
///
/// class gmd__EX_x005fTemporalExtent_x005fPropertyType operations:
/// - gmd__EX_x005fTemporalExtent_x005fPropertyType* soap_new_gmd__EX_x005fTemporalExtent_x005fPropertyType(soap*) allocate and default initialize
/// - gmd__EX_x005fTemporalExtent_x005fPropertyType* soap_new_gmd__EX_x005fTemporalExtent_x005fPropertyType(soap*, int num) allocate array and default initialize values
/// - gmd__EX_x005fTemporalExtent_x005fPropertyType* soap_new_req_gmd__EX_x005fTemporalExtent_x005fPropertyType(soap*, ...) allocate, set required members
/// - gmd__EX_x005fTemporalExtent_x005fPropertyType* soap_new_set_gmd__EX_x005fTemporalExtent_x005fPropertyType(soap*, ...) allocate, set all public members
/// - gmd__EX_x005fTemporalExtent_x005fPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__EX_x005fTemporalExtent_x005fPropertyType(soap*, gmd__EX_x005fTemporalExtent_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__EX_x005fTemporalExtent_x005fPropertyType(soap*, gmd__EX_x005fTemporalExtent_x005fPropertyType*) serialize to a stream
/// - gmd__EX_x005fTemporalExtent_x005fPropertyType* gmd__EX_x005fTemporalExtent_x005fPropertyType::soap_dup(soap*) returns deep copy of gmd__EX_x005fTemporalExtent_x005fPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__EX_x005fTemporalExtent_x005fPropertyType::soap_del() deep deletes gmd__EX_x005fTemporalExtent_x005fPropertyType data members, use only after gmd__EX_x005fTemporalExtent_x005fPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__EX_x005fTemporalExtent_x005fPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gmd__EX_x005fTemporalExtent_x005fPropertyType_sequence
    {
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="EX_TemporalExtent"> with global elements <EX_SpatialTemporalExtent>
   $int                                  __unionEX_x005fTemporalExtent ;	///< Union _gmd__union_EX_x005fTemporalExtent_x005fPropertyType selector: set to SOAP_UNION__gmd__union_EX_x005fTemporalExtent_x005fPropertyType_<fieldname>
/// Union for substitutionGroup gmd__EX_x005fTemporalExtent.
    union _gmd__union_EX_x005fTemporalExtent_x005fPropertyType
    {
/// Element reference "http://www.isotc211.org/2005/gmd:""http://www.isotc211.org/2005/gmd":EX_TemporalExtent.
    gmd__EX_x005fTemporalExtent_x005fType*  EX_x005fTemporalExtent         nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.isotc211.org/2005/gmd":EX_SpatialTemporalExtent.
    gmd__EX_x005fSpatialTemporalExtent_x005fType*  EX_x005fSpatialTemporalExtent  nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_EX_x005fTemporalExtent_x005fPropertyType;
//  END OF SUBSTITUTIONS
    }                                   *__EX_x005fTemporalExtent_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gmd":"http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectReference">.
/// Attribute "uuidref" of XSD type xs:string.
   @std::string*                         :uuidref                       0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.isotc211.org/2005/gmd":EX_VerticalExtent_PropertyType is a complexType.
///
/// class gmd__EX_x005fVerticalExtent_x005fPropertyType operations:
/// - gmd__EX_x005fVerticalExtent_x005fPropertyType* soap_new_gmd__EX_x005fVerticalExtent_x005fPropertyType(soap*) allocate and default initialize
/// - gmd__EX_x005fVerticalExtent_x005fPropertyType* soap_new_gmd__EX_x005fVerticalExtent_x005fPropertyType(soap*, int num) allocate array and default initialize values
/// - gmd__EX_x005fVerticalExtent_x005fPropertyType* soap_new_req_gmd__EX_x005fVerticalExtent_x005fPropertyType(soap*, ...) allocate, set required members
/// - gmd__EX_x005fVerticalExtent_x005fPropertyType* soap_new_set_gmd__EX_x005fVerticalExtent_x005fPropertyType(soap*, ...) allocate, set all public members
/// - gmd__EX_x005fVerticalExtent_x005fPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__EX_x005fVerticalExtent_x005fPropertyType(soap*, gmd__EX_x005fVerticalExtent_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__EX_x005fVerticalExtent_x005fPropertyType(soap*, gmd__EX_x005fVerticalExtent_x005fPropertyType*) serialize to a stream
/// - gmd__EX_x005fVerticalExtent_x005fPropertyType* gmd__EX_x005fVerticalExtent_x005fPropertyType::soap_dup(soap*) returns deep copy of gmd__EX_x005fVerticalExtent_x005fPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__EX_x005fVerticalExtent_x005fPropertyType::soap_del() deep deletes gmd__EX_x005fVerticalExtent_x005fPropertyType data members, use only after gmd__EX_x005fVerticalExtent_x005fPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__EX_x005fVerticalExtent_x005fPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gmd__EX_x005fVerticalExtent_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd:""http://www.isotc211.org/2005/gmd":EX_VerticalExtent.
    gmd__EX_x005fVerticalExtent_x005fType*  EX_x005fVerticalExtent         1;	///< Required element.
    }                                   *__EX_x005fVerticalExtent_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gmd":"http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectReference">.
/// Attribute "uuidref" of XSD type xs:string.
   @std::string*                         :uuidref                       0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.isotc211.org/2005/gmd":EX_BoundingPolygon_PropertyType is a complexType.
///
/// class gmd__EX_x005fBoundingPolygon_x005fPropertyType operations:
/// - gmd__EX_x005fBoundingPolygon_x005fPropertyType* soap_new_gmd__EX_x005fBoundingPolygon_x005fPropertyType(soap*) allocate and default initialize
/// - gmd__EX_x005fBoundingPolygon_x005fPropertyType* soap_new_gmd__EX_x005fBoundingPolygon_x005fPropertyType(soap*, int num) allocate array and default initialize values
/// - gmd__EX_x005fBoundingPolygon_x005fPropertyType* soap_new_req_gmd__EX_x005fBoundingPolygon_x005fPropertyType(soap*, ...) allocate, set required members
/// - gmd__EX_x005fBoundingPolygon_x005fPropertyType* soap_new_set_gmd__EX_x005fBoundingPolygon_x005fPropertyType(soap*, ...) allocate, set all public members
/// - gmd__EX_x005fBoundingPolygon_x005fPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__EX_x005fBoundingPolygon_x005fPropertyType(soap*, gmd__EX_x005fBoundingPolygon_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__EX_x005fBoundingPolygon_x005fPropertyType(soap*, gmd__EX_x005fBoundingPolygon_x005fPropertyType*) serialize to a stream
/// - gmd__EX_x005fBoundingPolygon_x005fPropertyType* gmd__EX_x005fBoundingPolygon_x005fPropertyType::soap_dup(soap*) returns deep copy of gmd__EX_x005fBoundingPolygon_x005fPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__EX_x005fBoundingPolygon_x005fPropertyType::soap_del() deep deletes gmd__EX_x005fBoundingPolygon_x005fPropertyType data members, use only after gmd__EX_x005fBoundingPolygon_x005fPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__EX_x005fBoundingPolygon_x005fPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gmd__EX_x005fBoundingPolygon_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd:""http://www.isotc211.org/2005/gmd":EX_BoundingPolygon.
    gmd__EX_x005fBoundingPolygon_x005fType*  EX_x005fBoundingPolygon        1;	///< Required element.
    }                                   *__EX_x005fBoundingPolygon_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gmd":"http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectReference">.
/// Attribute "uuidref" of XSD type xs:string.
   @std::string*                         :uuidref                       0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.isotc211.org/2005/gmd":EX_Extent_PropertyType is a complexType.
///
/// class gmd__EX_x005fExtent_x005fPropertyType operations:
/// - gmd__EX_x005fExtent_x005fPropertyType* soap_new_gmd__EX_x005fExtent_x005fPropertyType(soap*) allocate and default initialize
/// - gmd__EX_x005fExtent_x005fPropertyType* soap_new_gmd__EX_x005fExtent_x005fPropertyType(soap*, int num) allocate array and default initialize values
/// - gmd__EX_x005fExtent_x005fPropertyType* soap_new_req_gmd__EX_x005fExtent_x005fPropertyType(soap*, ...) allocate, set required members
/// - gmd__EX_x005fExtent_x005fPropertyType* soap_new_set_gmd__EX_x005fExtent_x005fPropertyType(soap*, ...) allocate, set all public members
/// - gmd__EX_x005fExtent_x005fPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__EX_x005fExtent_x005fPropertyType(soap*, gmd__EX_x005fExtent_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__EX_x005fExtent_x005fPropertyType(soap*, gmd__EX_x005fExtent_x005fPropertyType*) serialize to a stream
/// - gmd__EX_x005fExtent_x005fPropertyType* gmd__EX_x005fExtent_x005fPropertyType::soap_dup(soap*) returns deep copy of gmd__EX_x005fExtent_x005fPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__EX_x005fExtent_x005fPropertyType::soap_del() deep deletes gmd__EX_x005fExtent_x005fPropertyType data members, use only after gmd__EX_x005fExtent_x005fPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__EX_x005fExtent_x005fPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gmd__EX_x005fExtent_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd:""http://www.isotc211.org/2005/gmd":EX_Extent.
    gmd__EX_x005fExtent_x005fType*       EX_x005fExtent                 1;	///< Required element.
    }                                   *__EX_x005fExtent_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gmd":"http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectReference">.
/// Attribute "uuidref" of XSD type xs:string.
   @std::string*                         :uuidref                       0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.isotc211.org/2005/gmd":EX_GeographicExtent_PropertyType is a complexType.
///
/// class gmd__EX_x005fGeographicExtent_x005fPropertyType operations:
/// - gmd__EX_x005fGeographicExtent_x005fPropertyType* soap_new_gmd__EX_x005fGeographicExtent_x005fPropertyType(soap*) allocate and default initialize
/// - gmd__EX_x005fGeographicExtent_x005fPropertyType* soap_new_gmd__EX_x005fGeographicExtent_x005fPropertyType(soap*, int num) allocate array and default initialize values
/// - gmd__EX_x005fGeographicExtent_x005fPropertyType* soap_new_req_gmd__EX_x005fGeographicExtent_x005fPropertyType(soap*, ...) allocate, set required members
/// - gmd__EX_x005fGeographicExtent_x005fPropertyType* soap_new_set_gmd__EX_x005fGeographicExtent_x005fPropertyType(soap*, ...) allocate, set all public members
/// - gmd__EX_x005fGeographicExtent_x005fPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__EX_x005fGeographicExtent_x005fPropertyType(soap*, gmd__EX_x005fGeographicExtent_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__EX_x005fGeographicExtent_x005fPropertyType(soap*, gmd__EX_x005fGeographicExtent_x005fPropertyType*) serialize to a stream
/// - gmd__EX_x005fGeographicExtent_x005fPropertyType* gmd__EX_x005fGeographicExtent_x005fPropertyType::soap_dup(soap*) returns deep copy of gmd__EX_x005fGeographicExtent_x005fPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__EX_x005fGeographicExtent_x005fPropertyType::soap_del() deep deletes gmd__EX_x005fGeographicExtent_x005fPropertyType data members, use only after gmd__EX_x005fGeographicExtent_x005fPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__EX_x005fGeographicExtent_x005fPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gmd__EX_x005fGeographicExtent_x005fPropertyType_sequence
    {
/// Reference "http://www.isotc211.org/2005/gmd":AbstractEX_GeographicExtent to abstract element.
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractEX_GeographicExtent"> with global elements <EX_BoundingPolygon> <EX_GeographicBoundingBox> <EX_GeographicDescription>
   $int                                  __unionAbstractEX_x005fGeographicExtent;	///< Union _gmd__union_EX_x005fGeographicExtent_x005fPropertyType selector: set to SOAP_UNION__gmd__union_EX_x005fGeographicExtent_x005fPropertyType_<fieldname>
/// Union for substitutionGroup gmd__AbstractEX_x005fGeographicExtent.
    union _gmd__union_EX_x005fGeographicExtent_x005fPropertyType
    {
/// Element "http://www.isotc211.org/2005/gmd":EX_BoundingPolygon.
    gmd__EX_x005fBoundingPolygon_x005fType*  EX_x005fBoundingPolygon        nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.isotc211.org/2005/gmd":EX_GeographicBoundingBox.
    gmd__EX_x005fGeographicBoundingBox_x005fType*  EX_x005fGeographicBoundingBox  nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.isotc211.org/2005/gmd":EX_GeographicDescription.
    gmd__EX_x005fGeographicDescription_x005fType*  EX_x005fGeographicDescription  nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_EX_x005fGeographicExtent_x005fPropertyType;
//  END OF SUBSTITUTIONS
    }                                   *__EX_x005fGeographicExtent_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gmd":"http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectReference">.
/// Attribute "uuidref" of XSD type xs:string.
   @std::string*                         :uuidref                       0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.isotc211.org/2005/gmd":EX_GeographicBoundingBox_PropertyType is a complexType.
///
/// class gmd__EX_x005fGeographicBoundingBox_x005fPropertyType operations:
/// - gmd__EX_x005fGeographicBoundingBox_x005fPropertyType* soap_new_gmd__EX_x005fGeographicBoundingBox_x005fPropertyType(soap*) allocate and default initialize
/// - gmd__EX_x005fGeographicBoundingBox_x005fPropertyType* soap_new_gmd__EX_x005fGeographicBoundingBox_x005fPropertyType(soap*, int num) allocate array and default initialize values
/// - gmd__EX_x005fGeographicBoundingBox_x005fPropertyType* soap_new_req_gmd__EX_x005fGeographicBoundingBox_x005fPropertyType(soap*, ...) allocate, set required members
/// - gmd__EX_x005fGeographicBoundingBox_x005fPropertyType* soap_new_set_gmd__EX_x005fGeographicBoundingBox_x005fPropertyType(soap*, ...) allocate, set all public members
/// - gmd__EX_x005fGeographicBoundingBox_x005fPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__EX_x005fGeographicBoundingBox_x005fPropertyType(soap*, gmd__EX_x005fGeographicBoundingBox_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__EX_x005fGeographicBoundingBox_x005fPropertyType(soap*, gmd__EX_x005fGeographicBoundingBox_x005fPropertyType*) serialize to a stream
/// - gmd__EX_x005fGeographicBoundingBox_x005fPropertyType* gmd__EX_x005fGeographicBoundingBox_x005fPropertyType::soap_dup(soap*) returns deep copy of gmd__EX_x005fGeographicBoundingBox_x005fPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__EX_x005fGeographicBoundingBox_x005fPropertyType::soap_del() deep deletes gmd__EX_x005fGeographicBoundingBox_x005fPropertyType data members, use only after gmd__EX_x005fGeographicBoundingBox_x005fPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__EX_x005fGeographicBoundingBox_x005fPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gmd__EX_x005fGeographicBoundingBox_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd:""http://www.isotc211.org/2005/gmd":EX_GeographicBoundingBox.
    gmd__EX_x005fGeographicBoundingBox_x005fType*  EX_x005fGeographicBoundingBox  1;	///< Required element.
    }                                   *__EX_x005fGeographicBoundingBox_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gmd":"http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectReference">.
/// Attribute "uuidref" of XSD type xs:string.
   @std::string*                         :uuidref                       0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.isotc211.org/2005/gmd":EX_SpatialTemporalExtent_PropertyType is a complexType.
///
/// class gmd__EX_x005fSpatialTemporalExtent_x005fPropertyType operations:
/// - gmd__EX_x005fSpatialTemporalExtent_x005fPropertyType* soap_new_gmd__EX_x005fSpatialTemporalExtent_x005fPropertyType(soap*) allocate and default initialize
/// - gmd__EX_x005fSpatialTemporalExtent_x005fPropertyType* soap_new_gmd__EX_x005fSpatialTemporalExtent_x005fPropertyType(soap*, int num) allocate array and default initialize values
/// - gmd__EX_x005fSpatialTemporalExtent_x005fPropertyType* soap_new_req_gmd__EX_x005fSpatialTemporalExtent_x005fPropertyType(soap*, ...) allocate, set required members
/// - gmd__EX_x005fSpatialTemporalExtent_x005fPropertyType* soap_new_set_gmd__EX_x005fSpatialTemporalExtent_x005fPropertyType(soap*, ...) allocate, set all public members
/// - gmd__EX_x005fSpatialTemporalExtent_x005fPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__EX_x005fSpatialTemporalExtent_x005fPropertyType(soap*, gmd__EX_x005fSpatialTemporalExtent_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__EX_x005fSpatialTemporalExtent_x005fPropertyType(soap*, gmd__EX_x005fSpatialTemporalExtent_x005fPropertyType*) serialize to a stream
/// - gmd__EX_x005fSpatialTemporalExtent_x005fPropertyType* gmd__EX_x005fSpatialTemporalExtent_x005fPropertyType::soap_dup(soap*) returns deep copy of gmd__EX_x005fSpatialTemporalExtent_x005fPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__EX_x005fSpatialTemporalExtent_x005fPropertyType::soap_del() deep deletes gmd__EX_x005fSpatialTemporalExtent_x005fPropertyType data members, use only after gmd__EX_x005fSpatialTemporalExtent_x005fPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__EX_x005fSpatialTemporalExtent_x005fPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gmd__EX_x005fSpatialTemporalExtent_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd:""http://www.isotc211.org/2005/gmd":EX_SpatialTemporalExtent.
    gmd__EX_x005fSpatialTemporalExtent_x005fType*  EX_x005fSpatialTemporalExtent  1;	///< Required element.
    }                                   *__EX_x005fSpatialTemporalExtent_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gmd":"http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectReference">.
/// Attribute "uuidref" of XSD type xs:string.
   @std::string*                         :uuidref                       0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.isotc211.org/2005/gmd":EX_GeographicDescription_PropertyType is a complexType.
///
/// class gmd__EX_x005fGeographicDescription_x005fPropertyType operations:
/// - gmd__EX_x005fGeographicDescription_x005fPropertyType* soap_new_gmd__EX_x005fGeographicDescription_x005fPropertyType(soap*) allocate and default initialize
/// - gmd__EX_x005fGeographicDescription_x005fPropertyType* soap_new_gmd__EX_x005fGeographicDescription_x005fPropertyType(soap*, int num) allocate array and default initialize values
/// - gmd__EX_x005fGeographicDescription_x005fPropertyType* soap_new_req_gmd__EX_x005fGeographicDescription_x005fPropertyType(soap*, ...) allocate, set required members
/// - gmd__EX_x005fGeographicDescription_x005fPropertyType* soap_new_set_gmd__EX_x005fGeographicDescription_x005fPropertyType(soap*, ...) allocate, set all public members
/// - gmd__EX_x005fGeographicDescription_x005fPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__EX_x005fGeographicDescription_x005fPropertyType(soap*, gmd__EX_x005fGeographicDescription_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__EX_x005fGeographicDescription_x005fPropertyType(soap*, gmd__EX_x005fGeographicDescription_x005fPropertyType*) serialize to a stream
/// - gmd__EX_x005fGeographicDescription_x005fPropertyType* gmd__EX_x005fGeographicDescription_x005fPropertyType::soap_dup(soap*) returns deep copy of gmd__EX_x005fGeographicDescription_x005fPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__EX_x005fGeographicDescription_x005fPropertyType::soap_del() deep deletes gmd__EX_x005fGeographicDescription_x005fPropertyType data members, use only after gmd__EX_x005fGeographicDescription_x005fPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__EX_x005fGeographicDescription_x005fPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gmd__EX_x005fGeographicDescription_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd:""http://www.isotc211.org/2005/gmd":EX_GeographicDescription.
    gmd__EX_x005fGeographicDescription_x005fType*  EX_x005fGeographicDescription  1;	///< Required element.
    }                                   *__EX_x005fGeographicDescription_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gmd":"http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectReference">.
/// Attribute "uuidref" of XSD type xs:string.
   @std::string*                         :uuidref                       0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.isotc211.org/2005/gmd":MD_ExtendedElementInformation_PropertyType is a complexType.
///
/// class gmd__MD_x005fExtendedElementInformation_x005fPropertyType operations:
/// - gmd__MD_x005fExtendedElementInformation_x005fPropertyType* soap_new_gmd__MD_x005fExtendedElementInformation_x005fPropertyType(soap*) allocate and default initialize
/// - gmd__MD_x005fExtendedElementInformation_x005fPropertyType* soap_new_gmd__MD_x005fExtendedElementInformation_x005fPropertyType(soap*, int num) allocate array and default initialize values
/// - gmd__MD_x005fExtendedElementInformation_x005fPropertyType* soap_new_req_gmd__MD_x005fExtendedElementInformation_x005fPropertyType(soap*, ...) allocate, set required members
/// - gmd__MD_x005fExtendedElementInformation_x005fPropertyType* soap_new_set_gmd__MD_x005fExtendedElementInformation_x005fPropertyType(soap*, ...) allocate, set all public members
/// - gmd__MD_x005fExtendedElementInformation_x005fPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__MD_x005fExtendedElementInformation_x005fPropertyType(soap*, gmd__MD_x005fExtendedElementInformation_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fExtendedElementInformation_x005fPropertyType(soap*, gmd__MD_x005fExtendedElementInformation_x005fPropertyType*) serialize to a stream
/// - gmd__MD_x005fExtendedElementInformation_x005fPropertyType* gmd__MD_x005fExtendedElementInformation_x005fPropertyType::soap_dup(soap*) returns deep copy of gmd__MD_x005fExtendedElementInformation_x005fPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__MD_x005fExtendedElementInformation_x005fPropertyType::soap_del() deep deletes gmd__MD_x005fExtendedElementInformation_x005fPropertyType data members, use only after gmd__MD_x005fExtendedElementInformation_x005fPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__MD_x005fExtendedElementInformation_x005fPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gmd__MD_x005fExtendedElementInformation_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd:""http://www.isotc211.org/2005/gmd":MD_ExtendedElementInformation.
    gmd__MD_x005fExtendedElementInformation_x005fType*  MD_x005fExtendedElementInformation 1;	///< Required element.
    }                                   *__MD_x005fExtendedElementInformation_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gmd":"http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectReference">.
/// Attribute "uuidref" of XSD type xs:string.
   @std::string*                         :uuidref                       0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.isotc211.org/2005/gmd":MD_MetadataExtensionInformation_PropertyType is a complexType.
///
/// class gmd__MD_x005fMetadataExtensionInformation_x005fPropertyType operations:
/// - gmd__MD_x005fMetadataExtensionInformation_x005fPropertyType* soap_new_gmd__MD_x005fMetadataExtensionInformation_x005fPropertyType(soap*) allocate and default initialize
/// - gmd__MD_x005fMetadataExtensionInformation_x005fPropertyType* soap_new_gmd__MD_x005fMetadataExtensionInformation_x005fPropertyType(soap*, int num) allocate array and default initialize values
/// - gmd__MD_x005fMetadataExtensionInformation_x005fPropertyType* soap_new_req_gmd__MD_x005fMetadataExtensionInformation_x005fPropertyType(soap*, ...) allocate, set required members
/// - gmd__MD_x005fMetadataExtensionInformation_x005fPropertyType* soap_new_set_gmd__MD_x005fMetadataExtensionInformation_x005fPropertyType(soap*, ...) allocate, set all public members
/// - gmd__MD_x005fMetadataExtensionInformation_x005fPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__MD_x005fMetadataExtensionInformation_x005fPropertyType(soap*, gmd__MD_x005fMetadataExtensionInformation_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fMetadataExtensionInformation_x005fPropertyType(soap*, gmd__MD_x005fMetadataExtensionInformation_x005fPropertyType*) serialize to a stream
/// - gmd__MD_x005fMetadataExtensionInformation_x005fPropertyType* gmd__MD_x005fMetadataExtensionInformation_x005fPropertyType::soap_dup(soap*) returns deep copy of gmd__MD_x005fMetadataExtensionInformation_x005fPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__MD_x005fMetadataExtensionInformation_x005fPropertyType::soap_del() deep deletes gmd__MD_x005fMetadataExtensionInformation_x005fPropertyType data members, use only after gmd__MD_x005fMetadataExtensionInformation_x005fPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__MD_x005fMetadataExtensionInformation_x005fPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gmd__MD_x005fMetadataExtensionInformation_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd:""http://www.isotc211.org/2005/gmd":MD_MetadataExtensionInformation.
    gmd__MD_x005fMetadataExtensionInformation_x005fType*  MD_x005fMetadataExtensionInformation 1;	///< Required element.
    }                                   *__MD_x005fMetadataExtensionInformation_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gmd":"http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectReference">.
/// Attribute "uuidref" of XSD type xs:string.
   @std::string*                         :uuidref                       0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.isotc211.org/2005/gmd":MD_ObligationCode_PropertyType is a complexType.
///
/// class gmd__MD_x005fObligationCode_x005fPropertyType operations:
/// - gmd__MD_x005fObligationCode_x005fPropertyType* soap_new_gmd__MD_x005fObligationCode_x005fPropertyType(soap*) allocate and default initialize
/// - gmd__MD_x005fObligationCode_x005fPropertyType* soap_new_gmd__MD_x005fObligationCode_x005fPropertyType(soap*, int num) allocate array and default initialize values
/// - gmd__MD_x005fObligationCode_x005fPropertyType* soap_new_req_gmd__MD_x005fObligationCode_x005fPropertyType(soap*, ...) allocate, set required members
/// - gmd__MD_x005fObligationCode_x005fPropertyType* soap_new_set_gmd__MD_x005fObligationCode_x005fPropertyType(soap*, ...) allocate, set all public members
/// - gmd__MD_x005fObligationCode_x005fPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__MD_x005fObligationCode_x005fPropertyType(soap*, gmd__MD_x005fObligationCode_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fObligationCode_x005fPropertyType(soap*, gmd__MD_x005fObligationCode_x005fPropertyType*) serialize to a stream
/// - gmd__MD_x005fObligationCode_x005fPropertyType* gmd__MD_x005fObligationCode_x005fPropertyType::soap_dup(soap*) returns deep copy of gmd__MD_x005fObligationCode_x005fPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__MD_x005fObligationCode_x005fPropertyType::soap_del() deep deletes gmd__MD_x005fObligationCode_x005fPropertyType data members, use only after gmd__MD_x005fObligationCode_x005fPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__MD_x005fObligationCode_x005fPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gmd__MD_x005fObligationCode_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd:""http://www.isotc211.org/2005/gmd":MD_ObligationCode.
    enum gmd__MD_x005fObligationCode_x005fType  MD_x005fObligationCode         1;	///< Required element.
    }                                   *__MD_x005fObligationCode_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gmd":"http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
};

/// @brief "http://www.isotc211.org/2005/gmd":MD_DatatypeCode_PropertyType is a complexType.
///
/// class gmd__MD_x005fDatatypeCode_x005fPropertyType operations:
/// - gmd__MD_x005fDatatypeCode_x005fPropertyType* soap_new_gmd__MD_x005fDatatypeCode_x005fPropertyType(soap*) allocate and default initialize
/// - gmd__MD_x005fDatatypeCode_x005fPropertyType* soap_new_gmd__MD_x005fDatatypeCode_x005fPropertyType(soap*, int num) allocate array and default initialize values
/// - gmd__MD_x005fDatatypeCode_x005fPropertyType* soap_new_req_gmd__MD_x005fDatatypeCode_x005fPropertyType(soap*, ...) allocate, set required members
/// - gmd__MD_x005fDatatypeCode_x005fPropertyType* soap_new_set_gmd__MD_x005fDatatypeCode_x005fPropertyType(soap*, ...) allocate, set all public members
/// - gmd__MD_x005fDatatypeCode_x005fPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__MD_x005fDatatypeCode_x005fPropertyType(soap*, gmd__MD_x005fDatatypeCode_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fDatatypeCode_x005fPropertyType(soap*, gmd__MD_x005fDatatypeCode_x005fPropertyType*) serialize to a stream
/// - gmd__MD_x005fDatatypeCode_x005fPropertyType* gmd__MD_x005fDatatypeCode_x005fPropertyType::soap_dup(soap*) returns deep copy of gmd__MD_x005fDatatypeCode_x005fPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__MD_x005fDatatypeCode_x005fPropertyType::soap_del() deep deletes gmd__MD_x005fDatatypeCode_x005fPropertyType data members, use only after gmd__MD_x005fDatatypeCode_x005fPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__MD_x005fDatatypeCode_x005fPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gmd__MD_x005fDatatypeCode_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd:""http://www.isotc211.org/2005/gmd":MD_DatatypeCode.
    gco__CodeListValue_x005fType*        MD_x005fDatatypeCode           1;	///< Required element.
    }                                   *__MD_x005fDatatypeCode_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gmd":"http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
};

/// @brief "http://www.isotc211.org/2005/gmd":MD_FeatureCatalogueDescription_PropertyType is a complexType.
///
/// class gmd__MD_x005fFeatureCatalogueDescription_x005fPropertyType operations:
/// - gmd__MD_x005fFeatureCatalogueDescription_x005fPropertyType* soap_new_gmd__MD_x005fFeatureCatalogueDescription_x005fPropertyType(soap*) allocate and default initialize
/// - gmd__MD_x005fFeatureCatalogueDescription_x005fPropertyType* soap_new_gmd__MD_x005fFeatureCatalogueDescription_x005fPropertyType(soap*, int num) allocate array and default initialize values
/// - gmd__MD_x005fFeatureCatalogueDescription_x005fPropertyType* soap_new_req_gmd__MD_x005fFeatureCatalogueDescription_x005fPropertyType(soap*, ...) allocate, set required members
/// - gmd__MD_x005fFeatureCatalogueDescription_x005fPropertyType* soap_new_set_gmd__MD_x005fFeatureCatalogueDescription_x005fPropertyType(soap*, ...) allocate, set all public members
/// - gmd__MD_x005fFeatureCatalogueDescription_x005fPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__MD_x005fFeatureCatalogueDescription_x005fPropertyType(soap*, gmd__MD_x005fFeatureCatalogueDescription_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fFeatureCatalogueDescription_x005fPropertyType(soap*, gmd__MD_x005fFeatureCatalogueDescription_x005fPropertyType*) serialize to a stream
/// - gmd__MD_x005fFeatureCatalogueDescription_x005fPropertyType* gmd__MD_x005fFeatureCatalogueDescription_x005fPropertyType::soap_dup(soap*) returns deep copy of gmd__MD_x005fFeatureCatalogueDescription_x005fPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__MD_x005fFeatureCatalogueDescription_x005fPropertyType::soap_del() deep deletes gmd__MD_x005fFeatureCatalogueDescription_x005fPropertyType data members, use only after gmd__MD_x005fFeatureCatalogueDescription_x005fPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__MD_x005fFeatureCatalogueDescription_x005fPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gmd__MD_x005fFeatureCatalogueDescription_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd:""http://www.isotc211.org/2005/gmd":MD_FeatureCatalogueDescription.
    gmd__MD_x005fFeatureCatalogueDescription_x005fType*  MD_x005fFeatureCatalogueDescription 1;	///< Required element.
    }                                   *__MD_x005fFeatureCatalogueDescription_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gmd":"http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectReference">.
/// Attribute "uuidref" of XSD type xs:string.
   @std::string*                         :uuidref                       0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.isotc211.org/2005/gmd":MD_CoverageDescription_PropertyType is a complexType.
///
/// class gmd__MD_x005fCoverageDescription_x005fPropertyType operations:
/// - gmd__MD_x005fCoverageDescription_x005fPropertyType* soap_new_gmd__MD_x005fCoverageDescription_x005fPropertyType(soap*) allocate and default initialize
/// - gmd__MD_x005fCoverageDescription_x005fPropertyType* soap_new_gmd__MD_x005fCoverageDescription_x005fPropertyType(soap*, int num) allocate array and default initialize values
/// - gmd__MD_x005fCoverageDescription_x005fPropertyType* soap_new_req_gmd__MD_x005fCoverageDescription_x005fPropertyType(soap*, ...) allocate, set required members
/// - gmd__MD_x005fCoverageDescription_x005fPropertyType* soap_new_set_gmd__MD_x005fCoverageDescription_x005fPropertyType(soap*, ...) allocate, set all public members
/// - gmd__MD_x005fCoverageDescription_x005fPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__MD_x005fCoverageDescription_x005fPropertyType(soap*, gmd__MD_x005fCoverageDescription_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fCoverageDescription_x005fPropertyType(soap*, gmd__MD_x005fCoverageDescription_x005fPropertyType*) serialize to a stream
/// - gmd__MD_x005fCoverageDescription_x005fPropertyType* gmd__MD_x005fCoverageDescription_x005fPropertyType::soap_dup(soap*) returns deep copy of gmd__MD_x005fCoverageDescription_x005fPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__MD_x005fCoverageDescription_x005fPropertyType::soap_del() deep deletes gmd__MD_x005fCoverageDescription_x005fPropertyType data members, use only after gmd__MD_x005fCoverageDescription_x005fPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__MD_x005fCoverageDescription_x005fPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gmd__MD_x005fCoverageDescription_x005fPropertyType_sequence
    {
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="MD_CoverageDescription"> with global elements <MD_ImageDescription>
   $int                                  __unionMD_x005fCoverageDescription;	///< Union _gmd__union_MD_x005fCoverageDescription_x005fPropertyType selector: set to SOAP_UNION__gmd__union_MD_x005fCoverageDescription_x005fPropertyType_<fieldname>
/// Union for substitutionGroup gmd__MD_x005fCoverageDescription.
    union _gmd__union_MD_x005fCoverageDescription_x005fPropertyType
    {
/// Element reference "http://www.isotc211.org/2005/gmd:""http://www.isotc211.org/2005/gmd":MD_CoverageDescription.
    gmd__MD_x005fCoverageDescription_x005fType*  MD_x005fCoverageDescription    nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.isotc211.org/2005/gmd":MD_ImageDescription.
    gmd__MD_x005fImageDescription_x005fType*  MD_x005fImageDescription       nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_MD_x005fCoverageDescription_x005fPropertyType;
//  END OF SUBSTITUTIONS
    }                                   *__MD_x005fCoverageDescription_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gmd":"http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectReference">.
/// Attribute "uuidref" of XSD type xs:string.
   @std::string*                         :uuidref                       0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.isotc211.org/2005/gmd":MD_ImageDescription_PropertyType is a complexType.
///
/// class gmd__MD_x005fImageDescription_x005fPropertyType operations:
/// - gmd__MD_x005fImageDescription_x005fPropertyType* soap_new_gmd__MD_x005fImageDescription_x005fPropertyType(soap*) allocate and default initialize
/// - gmd__MD_x005fImageDescription_x005fPropertyType* soap_new_gmd__MD_x005fImageDescription_x005fPropertyType(soap*, int num) allocate array and default initialize values
/// - gmd__MD_x005fImageDescription_x005fPropertyType* soap_new_req_gmd__MD_x005fImageDescription_x005fPropertyType(soap*, ...) allocate, set required members
/// - gmd__MD_x005fImageDescription_x005fPropertyType* soap_new_set_gmd__MD_x005fImageDescription_x005fPropertyType(soap*, ...) allocate, set all public members
/// - gmd__MD_x005fImageDescription_x005fPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__MD_x005fImageDescription_x005fPropertyType(soap*, gmd__MD_x005fImageDescription_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fImageDescription_x005fPropertyType(soap*, gmd__MD_x005fImageDescription_x005fPropertyType*) serialize to a stream
/// - gmd__MD_x005fImageDescription_x005fPropertyType* gmd__MD_x005fImageDescription_x005fPropertyType::soap_dup(soap*) returns deep copy of gmd__MD_x005fImageDescription_x005fPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__MD_x005fImageDescription_x005fPropertyType::soap_del() deep deletes gmd__MD_x005fImageDescription_x005fPropertyType data members, use only after gmd__MD_x005fImageDescription_x005fPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__MD_x005fImageDescription_x005fPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gmd__MD_x005fImageDescription_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd:""http://www.isotc211.org/2005/gmd":MD_ImageDescription.
    gmd__MD_x005fImageDescription_x005fType*  MD_x005fImageDescription       1;	///< Required element.
    }                                   *__MD_x005fImageDescription_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gmd":"http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectReference">.
/// Attribute "uuidref" of XSD type xs:string.
   @std::string*                         :uuidref                       0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.isotc211.org/2005/gmd":MD_ContentInformation_PropertyType is a complexType.
///
/// class gmd__MD_x005fContentInformation_x005fPropertyType operations:
/// - gmd__MD_x005fContentInformation_x005fPropertyType* soap_new_gmd__MD_x005fContentInformation_x005fPropertyType(soap*) allocate and default initialize
/// - gmd__MD_x005fContentInformation_x005fPropertyType* soap_new_gmd__MD_x005fContentInformation_x005fPropertyType(soap*, int num) allocate array and default initialize values
/// - gmd__MD_x005fContentInformation_x005fPropertyType* soap_new_req_gmd__MD_x005fContentInformation_x005fPropertyType(soap*, ...) allocate, set required members
/// - gmd__MD_x005fContentInformation_x005fPropertyType* soap_new_set_gmd__MD_x005fContentInformation_x005fPropertyType(soap*, ...) allocate, set all public members
/// - gmd__MD_x005fContentInformation_x005fPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__MD_x005fContentInformation_x005fPropertyType(soap*, gmd__MD_x005fContentInformation_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fContentInformation_x005fPropertyType(soap*, gmd__MD_x005fContentInformation_x005fPropertyType*) serialize to a stream
/// - gmd__MD_x005fContentInformation_x005fPropertyType* gmd__MD_x005fContentInformation_x005fPropertyType::soap_dup(soap*) returns deep copy of gmd__MD_x005fContentInformation_x005fPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__MD_x005fContentInformation_x005fPropertyType::soap_del() deep deletes gmd__MD_x005fContentInformation_x005fPropertyType data members, use only after gmd__MD_x005fContentInformation_x005fPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__MD_x005fContentInformation_x005fPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gmd__MD_x005fContentInformation_x005fPropertyType_sequence
    {
/// Reference "http://www.isotc211.org/2005/gmd":AbstractMD_ContentInformation to abstract element.
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractMD_ContentInformation"> with global elements <MD_FeatureCatalogueDescription> <MD_CoverageDescription>
   $int                                  __unionAbstractMD_x005fContentInformation;	///< Union _gmd__union_MD_x005fContentInformation_x005fPropertyType selector: set to SOAP_UNION__gmd__union_MD_x005fContentInformation_x005fPropertyType_<fieldname>
/// Union for substitutionGroup gmd__AbstractMD_x005fContentInformation.
    union _gmd__union_MD_x005fContentInformation_x005fPropertyType
    {
/// Element "http://www.isotc211.org/2005/gmd":MD_FeatureCatalogueDescription.
    gmd__MD_x005fFeatureCatalogueDescription_x005fType*  MD_x005fFeatureCatalogueDescription nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="MD_CoverageDescription"> with global elements <MD_ImageDescription>
/// Element "http://www.isotc211.org/2005/gmd":MD_CoverageDescription.
    gmd__MD_x005fCoverageDescription_x005fType*  MD_x005fCoverageDescription    nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.isotc211.org/2005/gmd":MD_ImageDescription.
    gmd__MD_x005fImageDescription_x005fType*  MD_x005fImageDescription       nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
//  END OF SUBSTITUTIONS
    }                                    union_MD_x005fContentInformation_x005fPropertyType;
//  END OF SUBSTITUTIONS
    }                                   *__MD_x005fContentInformation_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gmd":"http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectReference">.
/// Attribute "uuidref" of XSD type xs:string.
   @std::string*                         :uuidref                       0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.isotc211.org/2005/gmd":MD_RangeDimension_PropertyType is a complexType.
///
/// class gmd__MD_x005fRangeDimension_x005fPropertyType operations:
/// - gmd__MD_x005fRangeDimension_x005fPropertyType* soap_new_gmd__MD_x005fRangeDimension_x005fPropertyType(soap*) allocate and default initialize
/// - gmd__MD_x005fRangeDimension_x005fPropertyType* soap_new_gmd__MD_x005fRangeDimension_x005fPropertyType(soap*, int num) allocate array and default initialize values
/// - gmd__MD_x005fRangeDimension_x005fPropertyType* soap_new_req_gmd__MD_x005fRangeDimension_x005fPropertyType(soap*, ...) allocate, set required members
/// - gmd__MD_x005fRangeDimension_x005fPropertyType* soap_new_set_gmd__MD_x005fRangeDimension_x005fPropertyType(soap*, ...) allocate, set all public members
/// - gmd__MD_x005fRangeDimension_x005fPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__MD_x005fRangeDimension_x005fPropertyType(soap*, gmd__MD_x005fRangeDimension_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fRangeDimension_x005fPropertyType(soap*, gmd__MD_x005fRangeDimension_x005fPropertyType*) serialize to a stream
/// - gmd__MD_x005fRangeDimension_x005fPropertyType* gmd__MD_x005fRangeDimension_x005fPropertyType::soap_dup(soap*) returns deep copy of gmd__MD_x005fRangeDimension_x005fPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__MD_x005fRangeDimension_x005fPropertyType::soap_del() deep deletes gmd__MD_x005fRangeDimension_x005fPropertyType data members, use only after gmd__MD_x005fRangeDimension_x005fPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__MD_x005fRangeDimension_x005fPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gmd__MD_x005fRangeDimension_x005fPropertyType_sequence
    {
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="MD_RangeDimension"> with global elements <MD_Band>
   $int                                  __unionMD_x005fRangeDimension ;	///< Union _gmd__union_MD_x005fRangeDimension_x005fPropertyType selector: set to SOAP_UNION__gmd__union_MD_x005fRangeDimension_x005fPropertyType_<fieldname>
/// Union for substitutionGroup gmd__MD_x005fRangeDimension.
    union _gmd__union_MD_x005fRangeDimension_x005fPropertyType
    {
/// Element reference "http://www.isotc211.org/2005/gmd:""http://www.isotc211.org/2005/gmd":MD_RangeDimension.
    gmd__MD_x005fRangeDimension_x005fType*  MD_x005fRangeDimension         nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.isotc211.org/2005/gmd":MD_Band.
    gmd__MD_x005fBand_x005fType*         MD_x005fBand                   nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_MD_x005fRangeDimension_x005fPropertyType;
//  END OF SUBSTITUTIONS
    }                                   *__MD_x005fRangeDimension_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gmd":"http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectReference">.
/// Attribute "uuidref" of XSD type xs:string.
   @std::string*                         :uuidref                       0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.isotc211.org/2005/gmd":MD_Band_PropertyType is a complexType.
///
/// class gmd__MD_x005fBand_x005fPropertyType operations:
/// - gmd__MD_x005fBand_x005fPropertyType* soap_new_gmd__MD_x005fBand_x005fPropertyType(soap*) allocate and default initialize
/// - gmd__MD_x005fBand_x005fPropertyType* soap_new_gmd__MD_x005fBand_x005fPropertyType(soap*, int num) allocate array and default initialize values
/// - gmd__MD_x005fBand_x005fPropertyType* soap_new_req_gmd__MD_x005fBand_x005fPropertyType(soap*, ...) allocate, set required members
/// - gmd__MD_x005fBand_x005fPropertyType* soap_new_set_gmd__MD_x005fBand_x005fPropertyType(soap*, ...) allocate, set all public members
/// - gmd__MD_x005fBand_x005fPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__MD_x005fBand_x005fPropertyType(soap*, gmd__MD_x005fBand_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fBand_x005fPropertyType(soap*, gmd__MD_x005fBand_x005fPropertyType*) serialize to a stream
/// - gmd__MD_x005fBand_x005fPropertyType* gmd__MD_x005fBand_x005fPropertyType::soap_dup(soap*) returns deep copy of gmd__MD_x005fBand_x005fPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__MD_x005fBand_x005fPropertyType::soap_del() deep deletes gmd__MD_x005fBand_x005fPropertyType data members, use only after gmd__MD_x005fBand_x005fPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__MD_x005fBand_x005fPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gmd__MD_x005fBand_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd:""http://www.isotc211.org/2005/gmd":MD_Band.
    gmd__MD_x005fBand_x005fType*         MD_x005fBand                   1;	///< Required element.
    }                                   *__MD_x005fBand_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gmd":"http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectReference">.
/// Attribute "uuidref" of XSD type xs:string.
   @std::string*                         :uuidref                       0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.isotc211.org/2005/gmd":MD_CoverageContentTypeCode_PropertyType is a complexType.
///
/// class gmd__MD_x005fCoverageContentTypeCode_x005fPropertyType operations:
/// - gmd__MD_x005fCoverageContentTypeCode_x005fPropertyType* soap_new_gmd__MD_x005fCoverageContentTypeCode_x005fPropertyType(soap*) allocate and default initialize
/// - gmd__MD_x005fCoverageContentTypeCode_x005fPropertyType* soap_new_gmd__MD_x005fCoverageContentTypeCode_x005fPropertyType(soap*, int num) allocate array and default initialize values
/// - gmd__MD_x005fCoverageContentTypeCode_x005fPropertyType* soap_new_req_gmd__MD_x005fCoverageContentTypeCode_x005fPropertyType(soap*, ...) allocate, set required members
/// - gmd__MD_x005fCoverageContentTypeCode_x005fPropertyType* soap_new_set_gmd__MD_x005fCoverageContentTypeCode_x005fPropertyType(soap*, ...) allocate, set all public members
/// - gmd__MD_x005fCoverageContentTypeCode_x005fPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__MD_x005fCoverageContentTypeCode_x005fPropertyType(soap*, gmd__MD_x005fCoverageContentTypeCode_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fCoverageContentTypeCode_x005fPropertyType(soap*, gmd__MD_x005fCoverageContentTypeCode_x005fPropertyType*) serialize to a stream
/// - gmd__MD_x005fCoverageContentTypeCode_x005fPropertyType* gmd__MD_x005fCoverageContentTypeCode_x005fPropertyType::soap_dup(soap*) returns deep copy of gmd__MD_x005fCoverageContentTypeCode_x005fPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__MD_x005fCoverageContentTypeCode_x005fPropertyType::soap_del() deep deletes gmd__MD_x005fCoverageContentTypeCode_x005fPropertyType data members, use only after gmd__MD_x005fCoverageContentTypeCode_x005fPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__MD_x005fCoverageContentTypeCode_x005fPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gmd__MD_x005fCoverageContentTypeCode_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd:""http://www.isotc211.org/2005/gmd":MD_CoverageContentTypeCode.
    gco__CodeListValue_x005fType*        MD_x005fCoverageContentTypeCode 1;	///< Required element.
    }                                   *__MD_x005fCoverageContentTypeCode_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gmd":"http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
};

/// @brief "http://www.isotc211.org/2005/gmd":MD_ImagingConditionCode_PropertyType is a complexType.
///
/// class gmd__MD_x005fImagingConditionCode_x005fPropertyType operations:
/// - gmd__MD_x005fImagingConditionCode_x005fPropertyType* soap_new_gmd__MD_x005fImagingConditionCode_x005fPropertyType(soap*) allocate and default initialize
/// - gmd__MD_x005fImagingConditionCode_x005fPropertyType* soap_new_gmd__MD_x005fImagingConditionCode_x005fPropertyType(soap*, int num) allocate array and default initialize values
/// - gmd__MD_x005fImagingConditionCode_x005fPropertyType* soap_new_req_gmd__MD_x005fImagingConditionCode_x005fPropertyType(soap*, ...) allocate, set required members
/// - gmd__MD_x005fImagingConditionCode_x005fPropertyType* soap_new_set_gmd__MD_x005fImagingConditionCode_x005fPropertyType(soap*, ...) allocate, set all public members
/// - gmd__MD_x005fImagingConditionCode_x005fPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__MD_x005fImagingConditionCode_x005fPropertyType(soap*, gmd__MD_x005fImagingConditionCode_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fImagingConditionCode_x005fPropertyType(soap*, gmd__MD_x005fImagingConditionCode_x005fPropertyType*) serialize to a stream
/// - gmd__MD_x005fImagingConditionCode_x005fPropertyType* gmd__MD_x005fImagingConditionCode_x005fPropertyType::soap_dup(soap*) returns deep copy of gmd__MD_x005fImagingConditionCode_x005fPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__MD_x005fImagingConditionCode_x005fPropertyType::soap_del() deep deletes gmd__MD_x005fImagingConditionCode_x005fPropertyType data members, use only after gmd__MD_x005fImagingConditionCode_x005fPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__MD_x005fImagingConditionCode_x005fPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gmd__MD_x005fImagingConditionCode_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd:""http://www.isotc211.org/2005/gmd":MD_ImagingConditionCode.
    gco__CodeListValue_x005fType*        MD_x005fImagingConditionCode   1;	///< Required element.
    }                                   *__MD_x005fImagingConditionCode_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gmd":"http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
};

/// @brief "http://www.isotc211.org/2005/gmd":MD_ApplicationSchemaInformation_PropertyType is a complexType.
///
/// class gmd__MD_x005fApplicationSchemaInformation_x005fPropertyType operations:
/// - gmd__MD_x005fApplicationSchemaInformation_x005fPropertyType* soap_new_gmd__MD_x005fApplicationSchemaInformation_x005fPropertyType(soap*) allocate and default initialize
/// - gmd__MD_x005fApplicationSchemaInformation_x005fPropertyType* soap_new_gmd__MD_x005fApplicationSchemaInformation_x005fPropertyType(soap*, int num) allocate array and default initialize values
/// - gmd__MD_x005fApplicationSchemaInformation_x005fPropertyType* soap_new_req_gmd__MD_x005fApplicationSchemaInformation_x005fPropertyType(soap*, ...) allocate, set required members
/// - gmd__MD_x005fApplicationSchemaInformation_x005fPropertyType* soap_new_set_gmd__MD_x005fApplicationSchemaInformation_x005fPropertyType(soap*, ...) allocate, set all public members
/// - gmd__MD_x005fApplicationSchemaInformation_x005fPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__MD_x005fApplicationSchemaInformation_x005fPropertyType(soap*, gmd__MD_x005fApplicationSchemaInformation_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fApplicationSchemaInformation_x005fPropertyType(soap*, gmd__MD_x005fApplicationSchemaInformation_x005fPropertyType*) serialize to a stream
/// - gmd__MD_x005fApplicationSchemaInformation_x005fPropertyType* gmd__MD_x005fApplicationSchemaInformation_x005fPropertyType::soap_dup(soap*) returns deep copy of gmd__MD_x005fApplicationSchemaInformation_x005fPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__MD_x005fApplicationSchemaInformation_x005fPropertyType::soap_del() deep deletes gmd__MD_x005fApplicationSchemaInformation_x005fPropertyType data members, use only after gmd__MD_x005fApplicationSchemaInformation_x005fPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__MD_x005fApplicationSchemaInformation_x005fPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gmd__MD_x005fApplicationSchemaInformation_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd:""http://www.isotc211.org/2005/gmd":MD_ApplicationSchemaInformation.
    gmd__MD_x005fApplicationSchemaInformation_x005fType*  MD_x005fApplicationSchemaInformation 1;	///< Required element.
    }                                   *__MD_x005fApplicationSchemaInformation_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gmd":"http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectReference">.
/// Attribute "uuidref" of XSD type xs:string.
   @std::string*                         :uuidref                       0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.isotc211.org/2005/gmd":MD_PortrayalCatalogueReference_PropertyType is a complexType.
///
/// class gmd__MD_x005fPortrayalCatalogueReference_x005fPropertyType operations:
/// - gmd__MD_x005fPortrayalCatalogueReference_x005fPropertyType* soap_new_gmd__MD_x005fPortrayalCatalogueReference_x005fPropertyType(soap*) allocate and default initialize
/// - gmd__MD_x005fPortrayalCatalogueReference_x005fPropertyType* soap_new_gmd__MD_x005fPortrayalCatalogueReference_x005fPropertyType(soap*, int num) allocate array and default initialize values
/// - gmd__MD_x005fPortrayalCatalogueReference_x005fPropertyType* soap_new_req_gmd__MD_x005fPortrayalCatalogueReference_x005fPropertyType(soap*, ...) allocate, set required members
/// - gmd__MD_x005fPortrayalCatalogueReference_x005fPropertyType* soap_new_set_gmd__MD_x005fPortrayalCatalogueReference_x005fPropertyType(soap*, ...) allocate, set all public members
/// - gmd__MD_x005fPortrayalCatalogueReference_x005fPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__MD_x005fPortrayalCatalogueReference_x005fPropertyType(soap*, gmd__MD_x005fPortrayalCatalogueReference_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fPortrayalCatalogueReference_x005fPropertyType(soap*, gmd__MD_x005fPortrayalCatalogueReference_x005fPropertyType*) serialize to a stream
/// - gmd__MD_x005fPortrayalCatalogueReference_x005fPropertyType* gmd__MD_x005fPortrayalCatalogueReference_x005fPropertyType::soap_dup(soap*) returns deep copy of gmd__MD_x005fPortrayalCatalogueReference_x005fPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__MD_x005fPortrayalCatalogueReference_x005fPropertyType::soap_del() deep deletes gmd__MD_x005fPortrayalCatalogueReference_x005fPropertyType data members, use only after gmd__MD_x005fPortrayalCatalogueReference_x005fPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__MD_x005fPortrayalCatalogueReference_x005fPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gmd__MD_x005fPortrayalCatalogueReference_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd:""http://www.isotc211.org/2005/gmd":MD_PortrayalCatalogueReference.
    gmd__MD_x005fPortrayalCatalogueReference_x005fType*  MD_x005fPortrayalCatalogueReference 1;	///< Required element.
    }                                   *__MD_x005fPortrayalCatalogueReference_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gmd":"http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectReference">.
/// Attribute "uuidref" of XSD type xs:string.
   @std::string*                         :uuidref                       0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.isotc211.org/2005/gmd":LI_ProcessStep_PropertyType is a complexType.
///
/// class gmd__LI_x005fProcessStep_x005fPropertyType operations:
/// - gmd__LI_x005fProcessStep_x005fPropertyType* soap_new_gmd__LI_x005fProcessStep_x005fPropertyType(soap*) allocate and default initialize
/// - gmd__LI_x005fProcessStep_x005fPropertyType* soap_new_gmd__LI_x005fProcessStep_x005fPropertyType(soap*, int num) allocate array and default initialize values
/// - gmd__LI_x005fProcessStep_x005fPropertyType* soap_new_req_gmd__LI_x005fProcessStep_x005fPropertyType(soap*, ...) allocate, set required members
/// - gmd__LI_x005fProcessStep_x005fPropertyType* soap_new_set_gmd__LI_x005fProcessStep_x005fPropertyType(soap*, ...) allocate, set all public members
/// - gmd__LI_x005fProcessStep_x005fPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__LI_x005fProcessStep_x005fPropertyType(soap*, gmd__LI_x005fProcessStep_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__LI_x005fProcessStep_x005fPropertyType(soap*, gmd__LI_x005fProcessStep_x005fPropertyType*) serialize to a stream
/// - gmd__LI_x005fProcessStep_x005fPropertyType* gmd__LI_x005fProcessStep_x005fPropertyType::soap_dup(soap*) returns deep copy of gmd__LI_x005fProcessStep_x005fPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__LI_x005fProcessStep_x005fPropertyType::soap_del() deep deletes gmd__LI_x005fProcessStep_x005fPropertyType data members, use only after gmd__LI_x005fProcessStep_x005fPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__LI_x005fProcessStep_x005fPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gmd__LI_x005fProcessStep_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd:""http://www.isotc211.org/2005/gmd":LI_ProcessStep.
    gmd__LI_x005fProcessStep_x005fType*  LI_x005fProcessStep            1;	///< Required element.
    }                                   *__LI_x005fProcessStep_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gmd":"http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectReference">.
/// Attribute "uuidref" of XSD type xs:string.
   @std::string*                         :uuidref                       0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.isotc211.org/2005/gmd":LI_Source_PropertyType is a complexType.
///
/// class gmd__LI_x005fSource_x005fPropertyType operations:
/// - gmd__LI_x005fSource_x005fPropertyType* soap_new_gmd__LI_x005fSource_x005fPropertyType(soap*) allocate and default initialize
/// - gmd__LI_x005fSource_x005fPropertyType* soap_new_gmd__LI_x005fSource_x005fPropertyType(soap*, int num) allocate array and default initialize values
/// - gmd__LI_x005fSource_x005fPropertyType* soap_new_req_gmd__LI_x005fSource_x005fPropertyType(soap*, ...) allocate, set required members
/// - gmd__LI_x005fSource_x005fPropertyType* soap_new_set_gmd__LI_x005fSource_x005fPropertyType(soap*, ...) allocate, set all public members
/// - gmd__LI_x005fSource_x005fPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__LI_x005fSource_x005fPropertyType(soap*, gmd__LI_x005fSource_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__LI_x005fSource_x005fPropertyType(soap*, gmd__LI_x005fSource_x005fPropertyType*) serialize to a stream
/// - gmd__LI_x005fSource_x005fPropertyType* gmd__LI_x005fSource_x005fPropertyType::soap_dup(soap*) returns deep copy of gmd__LI_x005fSource_x005fPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__LI_x005fSource_x005fPropertyType::soap_del() deep deletes gmd__LI_x005fSource_x005fPropertyType data members, use only after gmd__LI_x005fSource_x005fPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__LI_x005fSource_x005fPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gmd__LI_x005fSource_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd:""http://www.isotc211.org/2005/gmd":LI_Source.
    gmd__LI_x005fSource_x005fType*       LI_x005fSource                 1;	///< Required element.
    }                                   *__LI_x005fSource_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gmd":"http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectReference">.
/// Attribute "uuidref" of XSD type xs:string.
   @std::string*                         :uuidref                       0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.isotc211.org/2005/gmd":LI_Lineage_PropertyType is a complexType.
///
/// class gmd__LI_x005fLineage_x005fPropertyType operations:
/// - gmd__LI_x005fLineage_x005fPropertyType* soap_new_gmd__LI_x005fLineage_x005fPropertyType(soap*) allocate and default initialize
/// - gmd__LI_x005fLineage_x005fPropertyType* soap_new_gmd__LI_x005fLineage_x005fPropertyType(soap*, int num) allocate array and default initialize values
/// - gmd__LI_x005fLineage_x005fPropertyType* soap_new_req_gmd__LI_x005fLineage_x005fPropertyType(soap*, ...) allocate, set required members
/// - gmd__LI_x005fLineage_x005fPropertyType* soap_new_set_gmd__LI_x005fLineage_x005fPropertyType(soap*, ...) allocate, set all public members
/// - gmd__LI_x005fLineage_x005fPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__LI_x005fLineage_x005fPropertyType(soap*, gmd__LI_x005fLineage_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__LI_x005fLineage_x005fPropertyType(soap*, gmd__LI_x005fLineage_x005fPropertyType*) serialize to a stream
/// - gmd__LI_x005fLineage_x005fPropertyType* gmd__LI_x005fLineage_x005fPropertyType::soap_dup(soap*) returns deep copy of gmd__LI_x005fLineage_x005fPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__LI_x005fLineage_x005fPropertyType::soap_del() deep deletes gmd__LI_x005fLineage_x005fPropertyType data members, use only after gmd__LI_x005fLineage_x005fPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__LI_x005fLineage_x005fPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gmd__LI_x005fLineage_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd:""http://www.isotc211.org/2005/gmd":LI_Lineage.
    gmd__LI_x005fLineage_x005fType*      LI_x005fLineage                1;	///< Required element.
    }                                   *__LI_x005fLineage_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gmd":"http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectReference">.
/// Attribute "uuidref" of XSD type xs:string.
   @std::string*                         :uuidref                       0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.isotc211.org/2005/gmd":DQ_ConformanceResult_PropertyType is a complexType.
///
/// class gmd__DQ_x005fConformanceResult_x005fPropertyType operations:
/// - gmd__DQ_x005fConformanceResult_x005fPropertyType* soap_new_gmd__DQ_x005fConformanceResult_x005fPropertyType(soap*) allocate and default initialize
/// - gmd__DQ_x005fConformanceResult_x005fPropertyType* soap_new_gmd__DQ_x005fConformanceResult_x005fPropertyType(soap*, int num) allocate array and default initialize values
/// - gmd__DQ_x005fConformanceResult_x005fPropertyType* soap_new_req_gmd__DQ_x005fConformanceResult_x005fPropertyType(soap*, ...) allocate, set required members
/// - gmd__DQ_x005fConformanceResult_x005fPropertyType* soap_new_set_gmd__DQ_x005fConformanceResult_x005fPropertyType(soap*, ...) allocate, set all public members
/// - gmd__DQ_x005fConformanceResult_x005fPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__DQ_x005fConformanceResult_x005fPropertyType(soap*, gmd__DQ_x005fConformanceResult_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__DQ_x005fConformanceResult_x005fPropertyType(soap*, gmd__DQ_x005fConformanceResult_x005fPropertyType*) serialize to a stream
/// - gmd__DQ_x005fConformanceResult_x005fPropertyType* gmd__DQ_x005fConformanceResult_x005fPropertyType::soap_dup(soap*) returns deep copy of gmd__DQ_x005fConformanceResult_x005fPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__DQ_x005fConformanceResult_x005fPropertyType::soap_del() deep deletes gmd__DQ_x005fConformanceResult_x005fPropertyType data members, use only after gmd__DQ_x005fConformanceResult_x005fPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__DQ_x005fConformanceResult_x005fPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gmd__DQ_x005fConformanceResult_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd:""http://www.isotc211.org/2005/gmd":DQ_ConformanceResult.
    gmd__DQ_x005fConformanceResult_x005fType*  DQ_x005fConformanceResult      1;	///< Required element.
    }                                   *__DQ_x005fConformanceResult_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gmd":"http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectReference">.
/// Attribute "uuidref" of XSD type xs:string.
   @std::string*                         :uuidref                       0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.isotc211.org/2005/gmd":DQ_QuantitativeResult_PropertyType is a complexType.
///
/// class gmd__DQ_x005fQuantitativeResult_x005fPropertyType operations:
/// - gmd__DQ_x005fQuantitativeResult_x005fPropertyType* soap_new_gmd__DQ_x005fQuantitativeResult_x005fPropertyType(soap*) allocate and default initialize
/// - gmd__DQ_x005fQuantitativeResult_x005fPropertyType* soap_new_gmd__DQ_x005fQuantitativeResult_x005fPropertyType(soap*, int num) allocate array and default initialize values
/// - gmd__DQ_x005fQuantitativeResult_x005fPropertyType* soap_new_req_gmd__DQ_x005fQuantitativeResult_x005fPropertyType(soap*, ...) allocate, set required members
/// - gmd__DQ_x005fQuantitativeResult_x005fPropertyType* soap_new_set_gmd__DQ_x005fQuantitativeResult_x005fPropertyType(soap*, ...) allocate, set all public members
/// - gmd__DQ_x005fQuantitativeResult_x005fPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__DQ_x005fQuantitativeResult_x005fPropertyType(soap*, gmd__DQ_x005fQuantitativeResult_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__DQ_x005fQuantitativeResult_x005fPropertyType(soap*, gmd__DQ_x005fQuantitativeResult_x005fPropertyType*) serialize to a stream
/// - gmd__DQ_x005fQuantitativeResult_x005fPropertyType* gmd__DQ_x005fQuantitativeResult_x005fPropertyType::soap_dup(soap*) returns deep copy of gmd__DQ_x005fQuantitativeResult_x005fPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__DQ_x005fQuantitativeResult_x005fPropertyType::soap_del() deep deletes gmd__DQ_x005fQuantitativeResult_x005fPropertyType data members, use only after gmd__DQ_x005fQuantitativeResult_x005fPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__DQ_x005fQuantitativeResult_x005fPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gmd__DQ_x005fQuantitativeResult_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd:""http://www.isotc211.org/2005/gmd":DQ_QuantitativeResult.
    gmd__DQ_x005fQuantitativeResult_x005fType*  DQ_x005fQuantitativeResult     1;	///< Required element.
    }                                   *__DQ_x005fQuantitativeResult_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gmd":"http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectReference">.
/// Attribute "uuidref" of XSD type xs:string.
   @std::string*                         :uuidref                       0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.isotc211.org/2005/gmd":DQ_Result_PropertyType is a complexType.
///
/// class gmd__DQ_x005fResult_x005fPropertyType operations:
/// - gmd__DQ_x005fResult_x005fPropertyType* soap_new_gmd__DQ_x005fResult_x005fPropertyType(soap*) allocate and default initialize
/// - gmd__DQ_x005fResult_x005fPropertyType* soap_new_gmd__DQ_x005fResult_x005fPropertyType(soap*, int num) allocate array and default initialize values
/// - gmd__DQ_x005fResult_x005fPropertyType* soap_new_req_gmd__DQ_x005fResult_x005fPropertyType(soap*, ...) allocate, set required members
/// - gmd__DQ_x005fResult_x005fPropertyType* soap_new_set_gmd__DQ_x005fResult_x005fPropertyType(soap*, ...) allocate, set all public members
/// - gmd__DQ_x005fResult_x005fPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__DQ_x005fResult_x005fPropertyType(soap*, gmd__DQ_x005fResult_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__DQ_x005fResult_x005fPropertyType(soap*, gmd__DQ_x005fResult_x005fPropertyType*) serialize to a stream
/// - gmd__DQ_x005fResult_x005fPropertyType* gmd__DQ_x005fResult_x005fPropertyType::soap_dup(soap*) returns deep copy of gmd__DQ_x005fResult_x005fPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__DQ_x005fResult_x005fPropertyType::soap_del() deep deletes gmd__DQ_x005fResult_x005fPropertyType data members, use only after gmd__DQ_x005fResult_x005fPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__DQ_x005fResult_x005fPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gmd__DQ_x005fResult_x005fPropertyType_sequence
    {
/// Reference "http://www.isotc211.org/2005/gmd":AbstractDQ_Result to abstract element.
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractDQ_Result"> with global elements <DQ_ConformanceResult> <DQ_QuantitativeResult>
   $int                                  __unionAbstractDQ_x005fResult ;	///< Union _gmd__union_DQ_x005fResult_x005fPropertyType selector: set to SOAP_UNION__gmd__union_DQ_x005fResult_x005fPropertyType_<fieldname>
/// Union for substitutionGroup gmd__AbstractDQ_x005fResult.
    union _gmd__union_DQ_x005fResult_x005fPropertyType
    {
/// Element "http://www.isotc211.org/2005/gmd":DQ_ConformanceResult.
    gmd__DQ_x005fConformanceResult_x005fType*  DQ_x005fConformanceResult      nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.isotc211.org/2005/gmd":DQ_QuantitativeResult.
    gmd__DQ_x005fQuantitativeResult_x005fType*  DQ_x005fQuantitativeResult     nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_DQ_x005fResult_x005fPropertyType;
//  END OF SUBSTITUTIONS
    }                                   *__DQ_x005fResult_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gmd":"http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectReference">.
/// Attribute "uuidref" of XSD type xs:string.
   @std::string*                         :uuidref                       0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.isotc211.org/2005/gmd":DQ_TemporalValidity_PropertyType is a complexType.
///
/// class gmd__DQ_x005fTemporalValidity_x005fPropertyType operations:
/// - gmd__DQ_x005fTemporalValidity_x005fPropertyType* soap_new_gmd__DQ_x005fTemporalValidity_x005fPropertyType(soap*) allocate and default initialize
/// - gmd__DQ_x005fTemporalValidity_x005fPropertyType* soap_new_gmd__DQ_x005fTemporalValidity_x005fPropertyType(soap*, int num) allocate array and default initialize values
/// - gmd__DQ_x005fTemporalValidity_x005fPropertyType* soap_new_req_gmd__DQ_x005fTemporalValidity_x005fPropertyType(soap*, ...) allocate, set required members
/// - gmd__DQ_x005fTemporalValidity_x005fPropertyType* soap_new_set_gmd__DQ_x005fTemporalValidity_x005fPropertyType(soap*, ...) allocate, set all public members
/// - gmd__DQ_x005fTemporalValidity_x005fPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__DQ_x005fTemporalValidity_x005fPropertyType(soap*, gmd__DQ_x005fTemporalValidity_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__DQ_x005fTemporalValidity_x005fPropertyType(soap*, gmd__DQ_x005fTemporalValidity_x005fPropertyType*) serialize to a stream
/// - gmd__DQ_x005fTemporalValidity_x005fPropertyType* gmd__DQ_x005fTemporalValidity_x005fPropertyType::soap_dup(soap*) returns deep copy of gmd__DQ_x005fTemporalValidity_x005fPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__DQ_x005fTemporalValidity_x005fPropertyType::soap_del() deep deletes gmd__DQ_x005fTemporalValidity_x005fPropertyType data members, use only after gmd__DQ_x005fTemporalValidity_x005fPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__DQ_x005fTemporalValidity_x005fPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gmd__DQ_x005fTemporalValidity_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd:""http://www.isotc211.org/2005/gmd":DQ_TemporalValidity.
    gmd__DQ_x005fTemporalValidity_x005fType*  DQ_x005fTemporalValidity       1;	///< Required element.
    }                                   *__DQ_x005fTemporalValidity_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gmd":"http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectReference">.
/// Attribute "uuidref" of XSD type xs:string.
   @std::string*                         :uuidref                       0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.isotc211.org/2005/gmd":DQ_TemporalConsistency_PropertyType is a complexType.
///
/// class gmd__DQ_x005fTemporalConsistency_x005fPropertyType operations:
/// - gmd__DQ_x005fTemporalConsistency_x005fPropertyType* soap_new_gmd__DQ_x005fTemporalConsistency_x005fPropertyType(soap*) allocate and default initialize
/// - gmd__DQ_x005fTemporalConsistency_x005fPropertyType* soap_new_gmd__DQ_x005fTemporalConsistency_x005fPropertyType(soap*, int num) allocate array and default initialize values
/// - gmd__DQ_x005fTemporalConsistency_x005fPropertyType* soap_new_req_gmd__DQ_x005fTemporalConsistency_x005fPropertyType(soap*, ...) allocate, set required members
/// - gmd__DQ_x005fTemporalConsistency_x005fPropertyType* soap_new_set_gmd__DQ_x005fTemporalConsistency_x005fPropertyType(soap*, ...) allocate, set all public members
/// - gmd__DQ_x005fTemporalConsistency_x005fPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__DQ_x005fTemporalConsistency_x005fPropertyType(soap*, gmd__DQ_x005fTemporalConsistency_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__DQ_x005fTemporalConsistency_x005fPropertyType(soap*, gmd__DQ_x005fTemporalConsistency_x005fPropertyType*) serialize to a stream
/// - gmd__DQ_x005fTemporalConsistency_x005fPropertyType* gmd__DQ_x005fTemporalConsistency_x005fPropertyType::soap_dup(soap*) returns deep copy of gmd__DQ_x005fTemporalConsistency_x005fPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__DQ_x005fTemporalConsistency_x005fPropertyType::soap_del() deep deletes gmd__DQ_x005fTemporalConsistency_x005fPropertyType data members, use only after gmd__DQ_x005fTemporalConsistency_x005fPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__DQ_x005fTemporalConsistency_x005fPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gmd__DQ_x005fTemporalConsistency_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd:""http://www.isotc211.org/2005/gmd":DQ_TemporalConsistency.
    gmd__DQ_x005fTemporalConsistency_x005fType*  DQ_x005fTemporalConsistency    1;	///< Required element.
    }                                   *__DQ_x005fTemporalConsistency_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gmd":"http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectReference">.
/// Attribute "uuidref" of XSD type xs:string.
   @std::string*                         :uuidref                       0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.isotc211.org/2005/gmd":DQ_AccuracyOfATimeMeasurement_PropertyType is a complexType.
///
/// class gmd__DQ_x005fAccuracyOfATimeMeasurement_x005fPropertyType operations:
/// - gmd__DQ_x005fAccuracyOfATimeMeasurement_x005fPropertyType* soap_new_gmd__DQ_x005fAccuracyOfATimeMeasurement_x005fPropertyType(soap*) allocate and default initialize
/// - gmd__DQ_x005fAccuracyOfATimeMeasurement_x005fPropertyType* soap_new_gmd__DQ_x005fAccuracyOfATimeMeasurement_x005fPropertyType(soap*, int num) allocate array and default initialize values
/// - gmd__DQ_x005fAccuracyOfATimeMeasurement_x005fPropertyType* soap_new_req_gmd__DQ_x005fAccuracyOfATimeMeasurement_x005fPropertyType(soap*, ...) allocate, set required members
/// - gmd__DQ_x005fAccuracyOfATimeMeasurement_x005fPropertyType* soap_new_set_gmd__DQ_x005fAccuracyOfATimeMeasurement_x005fPropertyType(soap*, ...) allocate, set all public members
/// - gmd__DQ_x005fAccuracyOfATimeMeasurement_x005fPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__DQ_x005fAccuracyOfATimeMeasurement_x005fPropertyType(soap*, gmd__DQ_x005fAccuracyOfATimeMeasurement_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__DQ_x005fAccuracyOfATimeMeasurement_x005fPropertyType(soap*, gmd__DQ_x005fAccuracyOfATimeMeasurement_x005fPropertyType*) serialize to a stream
/// - gmd__DQ_x005fAccuracyOfATimeMeasurement_x005fPropertyType* gmd__DQ_x005fAccuracyOfATimeMeasurement_x005fPropertyType::soap_dup(soap*) returns deep copy of gmd__DQ_x005fAccuracyOfATimeMeasurement_x005fPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__DQ_x005fAccuracyOfATimeMeasurement_x005fPropertyType::soap_del() deep deletes gmd__DQ_x005fAccuracyOfATimeMeasurement_x005fPropertyType data members, use only after gmd__DQ_x005fAccuracyOfATimeMeasurement_x005fPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__DQ_x005fAccuracyOfATimeMeasurement_x005fPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gmd__DQ_x005fAccuracyOfATimeMeasurement_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd:""http://www.isotc211.org/2005/gmd":DQ_AccuracyOfATimeMeasurement.
    gmd__DQ_x005fAccuracyOfATimeMeasurement_x005fType*  DQ_x005fAccuracyOfATimeMeasurement 1;	///< Required element.
    }                                   *__DQ_x005fAccuracyOfATimeMeasurement_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gmd":"http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectReference">.
/// Attribute "uuidref" of XSD type xs:string.
   @std::string*                         :uuidref                       0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.isotc211.org/2005/gmd":DQ_QuantitativeAttributeAccuracy_PropertyType is a complexType.
///
/// class gmd__DQ_x005fQuantitativeAttributeAccuracy_x005fPropertyType operations:
/// - gmd__DQ_x005fQuantitativeAttributeAccuracy_x005fPropertyType* soap_new_gmd__DQ_x005fQuantitativeAttributeAccuracy_x005fPropertyType(soap*) allocate and default initialize
/// - gmd__DQ_x005fQuantitativeAttributeAccuracy_x005fPropertyType* soap_new_gmd__DQ_x005fQuantitativeAttributeAccuracy_x005fPropertyType(soap*, int num) allocate array and default initialize values
/// - gmd__DQ_x005fQuantitativeAttributeAccuracy_x005fPropertyType* soap_new_req_gmd__DQ_x005fQuantitativeAttributeAccuracy_x005fPropertyType(soap*, ...) allocate, set required members
/// - gmd__DQ_x005fQuantitativeAttributeAccuracy_x005fPropertyType* soap_new_set_gmd__DQ_x005fQuantitativeAttributeAccuracy_x005fPropertyType(soap*, ...) allocate, set all public members
/// - gmd__DQ_x005fQuantitativeAttributeAccuracy_x005fPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__DQ_x005fQuantitativeAttributeAccuracy_x005fPropertyType(soap*, gmd__DQ_x005fQuantitativeAttributeAccuracy_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__DQ_x005fQuantitativeAttributeAccuracy_x005fPropertyType(soap*, gmd__DQ_x005fQuantitativeAttributeAccuracy_x005fPropertyType*) serialize to a stream
/// - gmd__DQ_x005fQuantitativeAttributeAccuracy_x005fPropertyType* gmd__DQ_x005fQuantitativeAttributeAccuracy_x005fPropertyType::soap_dup(soap*) returns deep copy of gmd__DQ_x005fQuantitativeAttributeAccuracy_x005fPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__DQ_x005fQuantitativeAttributeAccuracy_x005fPropertyType::soap_del() deep deletes gmd__DQ_x005fQuantitativeAttributeAccuracy_x005fPropertyType data members, use only after gmd__DQ_x005fQuantitativeAttributeAccuracy_x005fPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__DQ_x005fQuantitativeAttributeAccuracy_x005fPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gmd__DQ_x005fQuantitativeAttributeAccuracy_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd:""http://www.isotc211.org/2005/gmd":DQ_QuantitativeAttributeAccuracy.
    gmd__DQ_x005fQuantitativeAttributeAccuracy_x005fType*  DQ_x005fQuantitativeAttributeAccuracy 1;	///< Required element.
    }                                   *__DQ_x005fQuantitativeAttributeAccuracy_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gmd":"http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectReference">.
/// Attribute "uuidref" of XSD type xs:string.
   @std::string*                         :uuidref                       0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.isotc211.org/2005/gmd":DQ_NonQuantitativeAttributeAccuracy_PropertyType is a complexType.
///
/// class gmd__DQ_x005fNonQuantitativeAttributeAccuracy_x005fPropertyType operations:
/// - gmd__DQ_x005fNonQuantitativeAttributeAccuracy_x005fPropertyType* soap_new_gmd__DQ_x005fNonQuantitativeAttributeAccuracy_x005fPropertyType(soap*) allocate and default initialize
/// - gmd__DQ_x005fNonQuantitativeAttributeAccuracy_x005fPropertyType* soap_new_gmd__DQ_x005fNonQuantitativeAttributeAccuracy_x005fPropertyType(soap*, int num) allocate array and default initialize values
/// - gmd__DQ_x005fNonQuantitativeAttributeAccuracy_x005fPropertyType* soap_new_req_gmd__DQ_x005fNonQuantitativeAttributeAccuracy_x005fPropertyType(soap*, ...) allocate, set required members
/// - gmd__DQ_x005fNonQuantitativeAttributeAccuracy_x005fPropertyType* soap_new_set_gmd__DQ_x005fNonQuantitativeAttributeAccuracy_x005fPropertyType(soap*, ...) allocate, set all public members
/// - gmd__DQ_x005fNonQuantitativeAttributeAccuracy_x005fPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__DQ_x005fNonQuantitativeAttributeAccuracy_x005fPropertyType(soap*, gmd__DQ_x005fNonQuantitativeAttributeAccuracy_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__DQ_x005fNonQuantitativeAttributeAccuracy_x005fPropertyType(soap*, gmd__DQ_x005fNonQuantitativeAttributeAccuracy_x005fPropertyType*) serialize to a stream
/// - gmd__DQ_x005fNonQuantitativeAttributeAccuracy_x005fPropertyType* gmd__DQ_x005fNonQuantitativeAttributeAccuracy_x005fPropertyType::soap_dup(soap*) returns deep copy of gmd__DQ_x005fNonQuantitativeAttributeAccuracy_x005fPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__DQ_x005fNonQuantitativeAttributeAccuracy_x005fPropertyType::soap_del() deep deletes gmd__DQ_x005fNonQuantitativeAttributeAccuracy_x005fPropertyType data members, use only after gmd__DQ_x005fNonQuantitativeAttributeAccuracy_x005fPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__DQ_x005fNonQuantitativeAttributeAccuracy_x005fPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gmd__DQ_x005fNonQuantitativeAttributeAccuracy_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd:""http://www.isotc211.org/2005/gmd":DQ_NonQuantitativeAttributeAccuracy.
    gmd__DQ_x005fNonQuantitativeAttributeAccuracy_x005fType*  DQ_x005fNonQuantitativeAttributeAccuracy 1;	///< Required element.
    }                                   *__DQ_x005fNonQuantitativeAttributeAccuracy_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gmd":"http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectReference">.
/// Attribute "uuidref" of XSD type xs:string.
   @std::string*                         :uuidref                       0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.isotc211.org/2005/gmd":DQ_ThematicClassificationCorrectness_PropertyType is a complexType.
///
/// class gmd__DQ_x005fThematicClassificationCorrectness_x005fPropertyType operations:
/// - gmd__DQ_x005fThematicClassificationCorrectness_x005fPropertyType* soap_new_gmd__DQ_x005fThematicClassificationCorrectness_x005fPropertyType(soap*) allocate and default initialize
/// - gmd__DQ_x005fThematicClassificationCorrectness_x005fPropertyType* soap_new_gmd__DQ_x005fThematicClassificationCorrectness_x005fPropertyType(soap*, int num) allocate array and default initialize values
/// - gmd__DQ_x005fThematicClassificationCorrectness_x005fPropertyType* soap_new_req_gmd__DQ_x005fThematicClassificationCorrectness_x005fPropertyType(soap*, ...) allocate, set required members
/// - gmd__DQ_x005fThematicClassificationCorrectness_x005fPropertyType* soap_new_set_gmd__DQ_x005fThematicClassificationCorrectness_x005fPropertyType(soap*, ...) allocate, set all public members
/// - gmd__DQ_x005fThematicClassificationCorrectness_x005fPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__DQ_x005fThematicClassificationCorrectness_x005fPropertyType(soap*, gmd__DQ_x005fThematicClassificationCorrectness_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__DQ_x005fThematicClassificationCorrectness_x005fPropertyType(soap*, gmd__DQ_x005fThematicClassificationCorrectness_x005fPropertyType*) serialize to a stream
/// - gmd__DQ_x005fThematicClassificationCorrectness_x005fPropertyType* gmd__DQ_x005fThematicClassificationCorrectness_x005fPropertyType::soap_dup(soap*) returns deep copy of gmd__DQ_x005fThematicClassificationCorrectness_x005fPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__DQ_x005fThematicClassificationCorrectness_x005fPropertyType::soap_del() deep deletes gmd__DQ_x005fThematicClassificationCorrectness_x005fPropertyType data members, use only after gmd__DQ_x005fThematicClassificationCorrectness_x005fPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__DQ_x005fThematicClassificationCorrectness_x005fPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gmd__DQ_x005fThematicClassificationCorrectness_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd:""http://www.isotc211.org/2005/gmd":DQ_ThematicClassificationCorrectness.
    gmd__DQ_x005fThematicClassificationCorrectness_x005fType*  DQ_x005fThematicClassificationCorrectness 1;	///< Required element.
    }                                   *__DQ_x005fThematicClassificationCorrectness_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gmd":"http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectReference">.
/// Attribute "uuidref" of XSD type xs:string.
   @std::string*                         :uuidref                       0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.isotc211.org/2005/gmd":DQ_RelativeInternalPositionalAccuracy_PropertyType is a complexType.
///
/// class gmd__DQ_x005fRelativeInternalPositionalAccuracy_x005fPropertyType operations:
/// - gmd__DQ_x005fRelativeInternalPositionalAccuracy_x005fPropertyType* soap_new_gmd__DQ_x005fRelativeInternalPositionalAccuracy_x005fPropertyType(soap*) allocate and default initialize
/// - gmd__DQ_x005fRelativeInternalPositionalAccuracy_x005fPropertyType* soap_new_gmd__DQ_x005fRelativeInternalPositionalAccuracy_x005fPropertyType(soap*, int num) allocate array and default initialize values
/// - gmd__DQ_x005fRelativeInternalPositionalAccuracy_x005fPropertyType* soap_new_req_gmd__DQ_x005fRelativeInternalPositionalAccuracy_x005fPropertyType(soap*, ...) allocate, set required members
/// - gmd__DQ_x005fRelativeInternalPositionalAccuracy_x005fPropertyType* soap_new_set_gmd__DQ_x005fRelativeInternalPositionalAccuracy_x005fPropertyType(soap*, ...) allocate, set all public members
/// - gmd__DQ_x005fRelativeInternalPositionalAccuracy_x005fPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__DQ_x005fRelativeInternalPositionalAccuracy_x005fPropertyType(soap*, gmd__DQ_x005fRelativeInternalPositionalAccuracy_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__DQ_x005fRelativeInternalPositionalAccuracy_x005fPropertyType(soap*, gmd__DQ_x005fRelativeInternalPositionalAccuracy_x005fPropertyType*) serialize to a stream
/// - gmd__DQ_x005fRelativeInternalPositionalAccuracy_x005fPropertyType* gmd__DQ_x005fRelativeInternalPositionalAccuracy_x005fPropertyType::soap_dup(soap*) returns deep copy of gmd__DQ_x005fRelativeInternalPositionalAccuracy_x005fPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__DQ_x005fRelativeInternalPositionalAccuracy_x005fPropertyType::soap_del() deep deletes gmd__DQ_x005fRelativeInternalPositionalAccuracy_x005fPropertyType data members, use only after gmd__DQ_x005fRelativeInternalPositionalAccuracy_x005fPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__DQ_x005fRelativeInternalPositionalAccuracy_x005fPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gmd__DQ_x005fRelativeInternalPositionalAccuracy_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd:""http://www.isotc211.org/2005/gmd":DQ_RelativeInternalPositionalAccuracy.
    gmd__DQ_x005fRelativeInternalPositionalAccuracy_x005fType*  DQ_x005fRelativeInternalPositionalAccuracy 1;	///< Required element.
    }                                   *__DQ_x005fRelativeInternalPositionalAccuracy_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gmd":"http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectReference">.
/// Attribute "uuidref" of XSD type xs:string.
   @std::string*                         :uuidref                       0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.isotc211.org/2005/gmd":DQ_GriddedDataPositionalAccuracy_PropertyType is a complexType.
///
/// class gmd__DQ_x005fGriddedDataPositionalAccuracy_x005fPropertyType operations:
/// - gmd__DQ_x005fGriddedDataPositionalAccuracy_x005fPropertyType* soap_new_gmd__DQ_x005fGriddedDataPositionalAccuracy_x005fPropertyType(soap*) allocate and default initialize
/// - gmd__DQ_x005fGriddedDataPositionalAccuracy_x005fPropertyType* soap_new_gmd__DQ_x005fGriddedDataPositionalAccuracy_x005fPropertyType(soap*, int num) allocate array and default initialize values
/// - gmd__DQ_x005fGriddedDataPositionalAccuracy_x005fPropertyType* soap_new_req_gmd__DQ_x005fGriddedDataPositionalAccuracy_x005fPropertyType(soap*, ...) allocate, set required members
/// - gmd__DQ_x005fGriddedDataPositionalAccuracy_x005fPropertyType* soap_new_set_gmd__DQ_x005fGriddedDataPositionalAccuracy_x005fPropertyType(soap*, ...) allocate, set all public members
/// - gmd__DQ_x005fGriddedDataPositionalAccuracy_x005fPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__DQ_x005fGriddedDataPositionalAccuracy_x005fPropertyType(soap*, gmd__DQ_x005fGriddedDataPositionalAccuracy_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__DQ_x005fGriddedDataPositionalAccuracy_x005fPropertyType(soap*, gmd__DQ_x005fGriddedDataPositionalAccuracy_x005fPropertyType*) serialize to a stream
/// - gmd__DQ_x005fGriddedDataPositionalAccuracy_x005fPropertyType* gmd__DQ_x005fGriddedDataPositionalAccuracy_x005fPropertyType::soap_dup(soap*) returns deep copy of gmd__DQ_x005fGriddedDataPositionalAccuracy_x005fPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__DQ_x005fGriddedDataPositionalAccuracy_x005fPropertyType::soap_del() deep deletes gmd__DQ_x005fGriddedDataPositionalAccuracy_x005fPropertyType data members, use only after gmd__DQ_x005fGriddedDataPositionalAccuracy_x005fPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__DQ_x005fGriddedDataPositionalAccuracy_x005fPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gmd__DQ_x005fGriddedDataPositionalAccuracy_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd:""http://www.isotc211.org/2005/gmd":DQ_GriddedDataPositionalAccuracy.
    gmd__DQ_x005fGriddedDataPositionalAccuracy_x005fType*  DQ_x005fGriddedDataPositionalAccuracy 1;	///< Required element.
    }                                   *__DQ_x005fGriddedDataPositionalAccuracy_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gmd":"http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectReference">.
/// Attribute "uuidref" of XSD type xs:string.
   @std::string*                         :uuidref                       0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.isotc211.org/2005/gmd":DQ_AbsoluteExternalPositionalAccuracy_PropertyType is a complexType.
///
/// class gmd__DQ_x005fAbsoluteExternalPositionalAccuracy_x005fPropertyType operations:
/// - gmd__DQ_x005fAbsoluteExternalPositionalAccuracy_x005fPropertyType* soap_new_gmd__DQ_x005fAbsoluteExternalPositionalAccuracy_x005fPropertyType(soap*) allocate and default initialize
/// - gmd__DQ_x005fAbsoluteExternalPositionalAccuracy_x005fPropertyType* soap_new_gmd__DQ_x005fAbsoluteExternalPositionalAccuracy_x005fPropertyType(soap*, int num) allocate array and default initialize values
/// - gmd__DQ_x005fAbsoluteExternalPositionalAccuracy_x005fPropertyType* soap_new_req_gmd__DQ_x005fAbsoluteExternalPositionalAccuracy_x005fPropertyType(soap*, ...) allocate, set required members
/// - gmd__DQ_x005fAbsoluteExternalPositionalAccuracy_x005fPropertyType* soap_new_set_gmd__DQ_x005fAbsoluteExternalPositionalAccuracy_x005fPropertyType(soap*, ...) allocate, set all public members
/// - gmd__DQ_x005fAbsoluteExternalPositionalAccuracy_x005fPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__DQ_x005fAbsoluteExternalPositionalAccuracy_x005fPropertyType(soap*, gmd__DQ_x005fAbsoluteExternalPositionalAccuracy_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__DQ_x005fAbsoluteExternalPositionalAccuracy_x005fPropertyType(soap*, gmd__DQ_x005fAbsoluteExternalPositionalAccuracy_x005fPropertyType*) serialize to a stream
/// - gmd__DQ_x005fAbsoluteExternalPositionalAccuracy_x005fPropertyType* gmd__DQ_x005fAbsoluteExternalPositionalAccuracy_x005fPropertyType::soap_dup(soap*) returns deep copy of gmd__DQ_x005fAbsoluteExternalPositionalAccuracy_x005fPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__DQ_x005fAbsoluteExternalPositionalAccuracy_x005fPropertyType::soap_del() deep deletes gmd__DQ_x005fAbsoluteExternalPositionalAccuracy_x005fPropertyType data members, use only after gmd__DQ_x005fAbsoluteExternalPositionalAccuracy_x005fPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__DQ_x005fAbsoluteExternalPositionalAccuracy_x005fPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gmd__DQ_x005fAbsoluteExternalPositionalAccuracy_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd:""http://www.isotc211.org/2005/gmd":DQ_AbsoluteExternalPositionalAccuracy.
    gmd__DQ_x005fAbsoluteExternalPositionalAccuracy_x005fType*  DQ_x005fAbsoluteExternalPositionalAccuracy 1;	///< Required element.
    }                                   *__DQ_x005fAbsoluteExternalPositionalAccuracy_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gmd":"http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectReference">.
/// Attribute "uuidref" of XSD type xs:string.
   @std::string*                         :uuidref                       0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.isotc211.org/2005/gmd":DQ_TopologicalConsistency_PropertyType is a complexType.
///
/// class gmd__DQ_x005fTopologicalConsistency_x005fPropertyType operations:
/// - gmd__DQ_x005fTopologicalConsistency_x005fPropertyType* soap_new_gmd__DQ_x005fTopologicalConsistency_x005fPropertyType(soap*) allocate and default initialize
/// - gmd__DQ_x005fTopologicalConsistency_x005fPropertyType* soap_new_gmd__DQ_x005fTopologicalConsistency_x005fPropertyType(soap*, int num) allocate array and default initialize values
/// - gmd__DQ_x005fTopologicalConsistency_x005fPropertyType* soap_new_req_gmd__DQ_x005fTopologicalConsistency_x005fPropertyType(soap*, ...) allocate, set required members
/// - gmd__DQ_x005fTopologicalConsistency_x005fPropertyType* soap_new_set_gmd__DQ_x005fTopologicalConsistency_x005fPropertyType(soap*, ...) allocate, set all public members
/// - gmd__DQ_x005fTopologicalConsistency_x005fPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__DQ_x005fTopologicalConsistency_x005fPropertyType(soap*, gmd__DQ_x005fTopologicalConsistency_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__DQ_x005fTopologicalConsistency_x005fPropertyType(soap*, gmd__DQ_x005fTopologicalConsistency_x005fPropertyType*) serialize to a stream
/// - gmd__DQ_x005fTopologicalConsistency_x005fPropertyType* gmd__DQ_x005fTopologicalConsistency_x005fPropertyType::soap_dup(soap*) returns deep copy of gmd__DQ_x005fTopologicalConsistency_x005fPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__DQ_x005fTopologicalConsistency_x005fPropertyType::soap_del() deep deletes gmd__DQ_x005fTopologicalConsistency_x005fPropertyType data members, use only after gmd__DQ_x005fTopologicalConsistency_x005fPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__DQ_x005fTopologicalConsistency_x005fPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gmd__DQ_x005fTopologicalConsistency_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd:""http://www.isotc211.org/2005/gmd":DQ_TopologicalConsistency.
    gmd__DQ_x005fTopologicalConsistency_x005fType*  DQ_x005fTopologicalConsistency 1;	///< Required element.
    }                                   *__DQ_x005fTopologicalConsistency_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gmd":"http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectReference">.
/// Attribute "uuidref" of XSD type xs:string.
   @std::string*                         :uuidref                       0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.isotc211.org/2005/gmd":DQ_FormatConsistency_PropertyType is a complexType.
///
/// class gmd__DQ_x005fFormatConsistency_x005fPropertyType operations:
/// - gmd__DQ_x005fFormatConsistency_x005fPropertyType* soap_new_gmd__DQ_x005fFormatConsistency_x005fPropertyType(soap*) allocate and default initialize
/// - gmd__DQ_x005fFormatConsistency_x005fPropertyType* soap_new_gmd__DQ_x005fFormatConsistency_x005fPropertyType(soap*, int num) allocate array and default initialize values
/// - gmd__DQ_x005fFormatConsistency_x005fPropertyType* soap_new_req_gmd__DQ_x005fFormatConsistency_x005fPropertyType(soap*, ...) allocate, set required members
/// - gmd__DQ_x005fFormatConsistency_x005fPropertyType* soap_new_set_gmd__DQ_x005fFormatConsistency_x005fPropertyType(soap*, ...) allocate, set all public members
/// - gmd__DQ_x005fFormatConsistency_x005fPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__DQ_x005fFormatConsistency_x005fPropertyType(soap*, gmd__DQ_x005fFormatConsistency_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__DQ_x005fFormatConsistency_x005fPropertyType(soap*, gmd__DQ_x005fFormatConsistency_x005fPropertyType*) serialize to a stream
/// - gmd__DQ_x005fFormatConsistency_x005fPropertyType* gmd__DQ_x005fFormatConsistency_x005fPropertyType::soap_dup(soap*) returns deep copy of gmd__DQ_x005fFormatConsistency_x005fPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__DQ_x005fFormatConsistency_x005fPropertyType::soap_del() deep deletes gmd__DQ_x005fFormatConsistency_x005fPropertyType data members, use only after gmd__DQ_x005fFormatConsistency_x005fPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__DQ_x005fFormatConsistency_x005fPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gmd__DQ_x005fFormatConsistency_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd:""http://www.isotc211.org/2005/gmd":DQ_FormatConsistency.
    gmd__DQ_x005fFormatConsistency_x005fType*  DQ_x005fFormatConsistency      1;	///< Required element.
    }                                   *__DQ_x005fFormatConsistency_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gmd":"http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectReference">.
/// Attribute "uuidref" of XSD type xs:string.
   @std::string*                         :uuidref                       0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.isotc211.org/2005/gmd":DQ_DomainConsistency_PropertyType is a complexType.
///
/// class gmd__DQ_x005fDomainConsistency_x005fPropertyType operations:
/// - gmd__DQ_x005fDomainConsistency_x005fPropertyType* soap_new_gmd__DQ_x005fDomainConsistency_x005fPropertyType(soap*) allocate and default initialize
/// - gmd__DQ_x005fDomainConsistency_x005fPropertyType* soap_new_gmd__DQ_x005fDomainConsistency_x005fPropertyType(soap*, int num) allocate array and default initialize values
/// - gmd__DQ_x005fDomainConsistency_x005fPropertyType* soap_new_req_gmd__DQ_x005fDomainConsistency_x005fPropertyType(soap*, ...) allocate, set required members
/// - gmd__DQ_x005fDomainConsistency_x005fPropertyType* soap_new_set_gmd__DQ_x005fDomainConsistency_x005fPropertyType(soap*, ...) allocate, set all public members
/// - gmd__DQ_x005fDomainConsistency_x005fPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__DQ_x005fDomainConsistency_x005fPropertyType(soap*, gmd__DQ_x005fDomainConsistency_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__DQ_x005fDomainConsistency_x005fPropertyType(soap*, gmd__DQ_x005fDomainConsistency_x005fPropertyType*) serialize to a stream
/// - gmd__DQ_x005fDomainConsistency_x005fPropertyType* gmd__DQ_x005fDomainConsistency_x005fPropertyType::soap_dup(soap*) returns deep copy of gmd__DQ_x005fDomainConsistency_x005fPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__DQ_x005fDomainConsistency_x005fPropertyType::soap_del() deep deletes gmd__DQ_x005fDomainConsistency_x005fPropertyType data members, use only after gmd__DQ_x005fDomainConsistency_x005fPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__DQ_x005fDomainConsistency_x005fPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gmd__DQ_x005fDomainConsistency_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd:""http://www.isotc211.org/2005/gmd":DQ_DomainConsistency.
    gmd__DQ_x005fDomainConsistency_x005fType*  DQ_x005fDomainConsistency      1;	///< Required element.
    }                                   *__DQ_x005fDomainConsistency_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gmd":"http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectReference">.
/// Attribute "uuidref" of XSD type xs:string.
   @std::string*                         :uuidref                       0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.isotc211.org/2005/gmd":DQ_ConceptualConsistency_PropertyType is a complexType.
///
/// class gmd__DQ_x005fConceptualConsistency_x005fPropertyType operations:
/// - gmd__DQ_x005fConceptualConsistency_x005fPropertyType* soap_new_gmd__DQ_x005fConceptualConsistency_x005fPropertyType(soap*) allocate and default initialize
/// - gmd__DQ_x005fConceptualConsistency_x005fPropertyType* soap_new_gmd__DQ_x005fConceptualConsistency_x005fPropertyType(soap*, int num) allocate array and default initialize values
/// - gmd__DQ_x005fConceptualConsistency_x005fPropertyType* soap_new_req_gmd__DQ_x005fConceptualConsistency_x005fPropertyType(soap*, ...) allocate, set required members
/// - gmd__DQ_x005fConceptualConsistency_x005fPropertyType* soap_new_set_gmd__DQ_x005fConceptualConsistency_x005fPropertyType(soap*, ...) allocate, set all public members
/// - gmd__DQ_x005fConceptualConsistency_x005fPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__DQ_x005fConceptualConsistency_x005fPropertyType(soap*, gmd__DQ_x005fConceptualConsistency_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__DQ_x005fConceptualConsistency_x005fPropertyType(soap*, gmd__DQ_x005fConceptualConsistency_x005fPropertyType*) serialize to a stream
/// - gmd__DQ_x005fConceptualConsistency_x005fPropertyType* gmd__DQ_x005fConceptualConsistency_x005fPropertyType::soap_dup(soap*) returns deep copy of gmd__DQ_x005fConceptualConsistency_x005fPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__DQ_x005fConceptualConsistency_x005fPropertyType::soap_del() deep deletes gmd__DQ_x005fConceptualConsistency_x005fPropertyType data members, use only after gmd__DQ_x005fConceptualConsistency_x005fPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__DQ_x005fConceptualConsistency_x005fPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gmd__DQ_x005fConceptualConsistency_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd:""http://www.isotc211.org/2005/gmd":DQ_ConceptualConsistency.
    gmd__DQ_x005fConceptualConsistency_x005fType*  DQ_x005fConceptualConsistency  1;	///< Required element.
    }                                   *__DQ_x005fConceptualConsistency_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gmd":"http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectReference">.
/// Attribute "uuidref" of XSD type xs:string.
   @std::string*                         :uuidref                       0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.isotc211.org/2005/gmd":DQ_CompletenessOmission_PropertyType is a complexType.
///
/// class gmd__DQ_x005fCompletenessOmission_x005fPropertyType operations:
/// - gmd__DQ_x005fCompletenessOmission_x005fPropertyType* soap_new_gmd__DQ_x005fCompletenessOmission_x005fPropertyType(soap*) allocate and default initialize
/// - gmd__DQ_x005fCompletenessOmission_x005fPropertyType* soap_new_gmd__DQ_x005fCompletenessOmission_x005fPropertyType(soap*, int num) allocate array and default initialize values
/// - gmd__DQ_x005fCompletenessOmission_x005fPropertyType* soap_new_req_gmd__DQ_x005fCompletenessOmission_x005fPropertyType(soap*, ...) allocate, set required members
/// - gmd__DQ_x005fCompletenessOmission_x005fPropertyType* soap_new_set_gmd__DQ_x005fCompletenessOmission_x005fPropertyType(soap*, ...) allocate, set all public members
/// - gmd__DQ_x005fCompletenessOmission_x005fPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__DQ_x005fCompletenessOmission_x005fPropertyType(soap*, gmd__DQ_x005fCompletenessOmission_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__DQ_x005fCompletenessOmission_x005fPropertyType(soap*, gmd__DQ_x005fCompletenessOmission_x005fPropertyType*) serialize to a stream
/// - gmd__DQ_x005fCompletenessOmission_x005fPropertyType* gmd__DQ_x005fCompletenessOmission_x005fPropertyType::soap_dup(soap*) returns deep copy of gmd__DQ_x005fCompletenessOmission_x005fPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__DQ_x005fCompletenessOmission_x005fPropertyType::soap_del() deep deletes gmd__DQ_x005fCompletenessOmission_x005fPropertyType data members, use only after gmd__DQ_x005fCompletenessOmission_x005fPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__DQ_x005fCompletenessOmission_x005fPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gmd__DQ_x005fCompletenessOmission_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd:""http://www.isotc211.org/2005/gmd":DQ_CompletenessOmission.
    gmd__DQ_x005fCompletenessOmission_x005fType*  DQ_x005fCompletenessOmission   1;	///< Required element.
    }                                   *__DQ_x005fCompletenessOmission_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gmd":"http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectReference">.
/// Attribute "uuidref" of XSD type xs:string.
   @std::string*                         :uuidref                       0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.isotc211.org/2005/gmd":DQ_CompletenessCommission_PropertyType is a complexType.
///
/// class gmd__DQ_x005fCompletenessCommission_x005fPropertyType operations:
/// - gmd__DQ_x005fCompletenessCommission_x005fPropertyType* soap_new_gmd__DQ_x005fCompletenessCommission_x005fPropertyType(soap*) allocate and default initialize
/// - gmd__DQ_x005fCompletenessCommission_x005fPropertyType* soap_new_gmd__DQ_x005fCompletenessCommission_x005fPropertyType(soap*, int num) allocate array and default initialize values
/// - gmd__DQ_x005fCompletenessCommission_x005fPropertyType* soap_new_req_gmd__DQ_x005fCompletenessCommission_x005fPropertyType(soap*, ...) allocate, set required members
/// - gmd__DQ_x005fCompletenessCommission_x005fPropertyType* soap_new_set_gmd__DQ_x005fCompletenessCommission_x005fPropertyType(soap*, ...) allocate, set all public members
/// - gmd__DQ_x005fCompletenessCommission_x005fPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__DQ_x005fCompletenessCommission_x005fPropertyType(soap*, gmd__DQ_x005fCompletenessCommission_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__DQ_x005fCompletenessCommission_x005fPropertyType(soap*, gmd__DQ_x005fCompletenessCommission_x005fPropertyType*) serialize to a stream
/// - gmd__DQ_x005fCompletenessCommission_x005fPropertyType* gmd__DQ_x005fCompletenessCommission_x005fPropertyType::soap_dup(soap*) returns deep copy of gmd__DQ_x005fCompletenessCommission_x005fPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__DQ_x005fCompletenessCommission_x005fPropertyType::soap_del() deep deletes gmd__DQ_x005fCompletenessCommission_x005fPropertyType data members, use only after gmd__DQ_x005fCompletenessCommission_x005fPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__DQ_x005fCompletenessCommission_x005fPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gmd__DQ_x005fCompletenessCommission_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd:""http://www.isotc211.org/2005/gmd":DQ_CompletenessCommission.
    gmd__DQ_x005fCompletenessCommission_x005fType*  DQ_x005fCompletenessCommission 1;	///< Required element.
    }                                   *__DQ_x005fCompletenessCommission_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gmd":"http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectReference">.
/// Attribute "uuidref" of XSD type xs:string.
   @std::string*                         :uuidref                       0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.isotc211.org/2005/gmd":DQ_TemporalAccuracy_PropertyType is a complexType.
///
/// class gmd__DQ_x005fTemporalAccuracy_x005fPropertyType operations:
/// - gmd__DQ_x005fTemporalAccuracy_x005fPropertyType* soap_new_gmd__DQ_x005fTemporalAccuracy_x005fPropertyType(soap*) allocate and default initialize
/// - gmd__DQ_x005fTemporalAccuracy_x005fPropertyType* soap_new_gmd__DQ_x005fTemporalAccuracy_x005fPropertyType(soap*, int num) allocate array and default initialize values
/// - gmd__DQ_x005fTemporalAccuracy_x005fPropertyType* soap_new_req_gmd__DQ_x005fTemporalAccuracy_x005fPropertyType(soap*, ...) allocate, set required members
/// - gmd__DQ_x005fTemporalAccuracy_x005fPropertyType* soap_new_set_gmd__DQ_x005fTemporalAccuracy_x005fPropertyType(soap*, ...) allocate, set all public members
/// - gmd__DQ_x005fTemporalAccuracy_x005fPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__DQ_x005fTemporalAccuracy_x005fPropertyType(soap*, gmd__DQ_x005fTemporalAccuracy_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__DQ_x005fTemporalAccuracy_x005fPropertyType(soap*, gmd__DQ_x005fTemporalAccuracy_x005fPropertyType*) serialize to a stream
/// - gmd__DQ_x005fTemporalAccuracy_x005fPropertyType* gmd__DQ_x005fTemporalAccuracy_x005fPropertyType::soap_dup(soap*) returns deep copy of gmd__DQ_x005fTemporalAccuracy_x005fPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__DQ_x005fTemporalAccuracy_x005fPropertyType::soap_del() deep deletes gmd__DQ_x005fTemporalAccuracy_x005fPropertyType data members, use only after gmd__DQ_x005fTemporalAccuracy_x005fPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__DQ_x005fTemporalAccuracy_x005fPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gmd__DQ_x005fTemporalAccuracy_x005fPropertyType_sequence
    {
/// Reference "http://www.isotc211.org/2005/gmd":AbstractDQ_TemporalAccuracy to abstract element.
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractDQ_TemporalAccuracy"> with global elements <DQ_TemporalValidity> <DQ_TemporalConsistency> <DQ_AccuracyOfATimeMeasurement>
   $int                                  __unionAbstractDQ_x005fTemporalAccuracy;	///< Union _gmd__union_DQ_x005fTemporalAccuracy_x005fPropertyType selector: set to SOAP_UNION__gmd__union_DQ_x005fTemporalAccuracy_x005fPropertyType_<fieldname>
/// Union for substitutionGroup gmd__AbstractDQ_x005fTemporalAccuracy.
    union _gmd__union_DQ_x005fTemporalAccuracy_x005fPropertyType
    {
/// Element "http://www.isotc211.org/2005/gmd":DQ_TemporalValidity.
    gmd__DQ_x005fTemporalValidity_x005fType*  DQ_x005fTemporalValidity       nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.isotc211.org/2005/gmd":DQ_TemporalConsistency.
    gmd__DQ_x005fTemporalConsistency_x005fType*  DQ_x005fTemporalConsistency    nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.isotc211.org/2005/gmd":DQ_AccuracyOfATimeMeasurement.
    gmd__DQ_x005fAccuracyOfATimeMeasurement_x005fType*  DQ_x005fAccuracyOfATimeMeasurement nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_DQ_x005fTemporalAccuracy_x005fPropertyType;
//  END OF SUBSTITUTIONS
    }                                   *__DQ_x005fTemporalAccuracy_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gmd":"http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectReference">.
/// Attribute "uuidref" of XSD type xs:string.
   @std::string*                         :uuidref                       0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.isotc211.org/2005/gmd":DQ_ThematicAccuracy_PropertyType is a complexType.
///
/// class gmd__DQ_x005fThematicAccuracy_x005fPropertyType operations:
/// - gmd__DQ_x005fThematicAccuracy_x005fPropertyType* soap_new_gmd__DQ_x005fThematicAccuracy_x005fPropertyType(soap*) allocate and default initialize
/// - gmd__DQ_x005fThematicAccuracy_x005fPropertyType* soap_new_gmd__DQ_x005fThematicAccuracy_x005fPropertyType(soap*, int num) allocate array and default initialize values
/// - gmd__DQ_x005fThematicAccuracy_x005fPropertyType* soap_new_req_gmd__DQ_x005fThematicAccuracy_x005fPropertyType(soap*, ...) allocate, set required members
/// - gmd__DQ_x005fThematicAccuracy_x005fPropertyType* soap_new_set_gmd__DQ_x005fThematicAccuracy_x005fPropertyType(soap*, ...) allocate, set all public members
/// - gmd__DQ_x005fThematicAccuracy_x005fPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__DQ_x005fThematicAccuracy_x005fPropertyType(soap*, gmd__DQ_x005fThematicAccuracy_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__DQ_x005fThematicAccuracy_x005fPropertyType(soap*, gmd__DQ_x005fThematicAccuracy_x005fPropertyType*) serialize to a stream
/// - gmd__DQ_x005fThematicAccuracy_x005fPropertyType* gmd__DQ_x005fThematicAccuracy_x005fPropertyType::soap_dup(soap*) returns deep copy of gmd__DQ_x005fThematicAccuracy_x005fPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__DQ_x005fThematicAccuracy_x005fPropertyType::soap_del() deep deletes gmd__DQ_x005fThematicAccuracy_x005fPropertyType data members, use only after gmd__DQ_x005fThematicAccuracy_x005fPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__DQ_x005fThematicAccuracy_x005fPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gmd__DQ_x005fThematicAccuracy_x005fPropertyType_sequence
    {
/// Reference "http://www.isotc211.org/2005/gmd":AbstractDQ_ThematicAccuracy to abstract element.
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractDQ_ThematicAccuracy"> with global elements <DQ_QuantitativeAttributeAccuracy> <DQ_NonQuantitativeAttributeAccuracy> <DQ_ThematicClassificationCorrectness>
   $int                                  __unionAbstractDQ_x005fThematicAccuracy;	///< Union _gmd__union_DQ_x005fThematicAccuracy_x005fPropertyType selector: set to SOAP_UNION__gmd__union_DQ_x005fThematicAccuracy_x005fPropertyType_<fieldname>
/// Union for substitutionGroup gmd__AbstractDQ_x005fThematicAccuracy.
    union _gmd__union_DQ_x005fThematicAccuracy_x005fPropertyType
    {
/// Element "http://www.isotc211.org/2005/gmd":DQ_QuantitativeAttributeAccuracy.
    gmd__DQ_x005fQuantitativeAttributeAccuracy_x005fType*  DQ_x005fQuantitativeAttributeAccuracy nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.isotc211.org/2005/gmd":DQ_NonQuantitativeAttributeAccuracy.
    gmd__DQ_x005fNonQuantitativeAttributeAccuracy_x005fType*  DQ_x005fNonQuantitativeAttributeAccuracy nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.isotc211.org/2005/gmd":DQ_ThematicClassificationCorrectness.
    gmd__DQ_x005fThematicClassificationCorrectness_x005fType*  DQ_x005fThematicClassificationCorrectness nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_DQ_x005fThematicAccuracy_x005fPropertyType;
//  END OF SUBSTITUTIONS
    }                                   *__DQ_x005fThematicAccuracy_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gmd":"http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectReference">.
/// Attribute "uuidref" of XSD type xs:string.
   @std::string*                         :uuidref                       0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.isotc211.org/2005/gmd":DQ_PositionalAccuracy_PropertyType is a complexType.
///
/// class gmd__DQ_x005fPositionalAccuracy_x005fPropertyType operations:
/// - gmd__DQ_x005fPositionalAccuracy_x005fPropertyType* soap_new_gmd__DQ_x005fPositionalAccuracy_x005fPropertyType(soap*) allocate and default initialize
/// - gmd__DQ_x005fPositionalAccuracy_x005fPropertyType* soap_new_gmd__DQ_x005fPositionalAccuracy_x005fPropertyType(soap*, int num) allocate array and default initialize values
/// - gmd__DQ_x005fPositionalAccuracy_x005fPropertyType* soap_new_req_gmd__DQ_x005fPositionalAccuracy_x005fPropertyType(soap*, ...) allocate, set required members
/// - gmd__DQ_x005fPositionalAccuracy_x005fPropertyType* soap_new_set_gmd__DQ_x005fPositionalAccuracy_x005fPropertyType(soap*, ...) allocate, set all public members
/// - gmd__DQ_x005fPositionalAccuracy_x005fPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__DQ_x005fPositionalAccuracy_x005fPropertyType(soap*, gmd__DQ_x005fPositionalAccuracy_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__DQ_x005fPositionalAccuracy_x005fPropertyType(soap*, gmd__DQ_x005fPositionalAccuracy_x005fPropertyType*) serialize to a stream
/// - gmd__DQ_x005fPositionalAccuracy_x005fPropertyType* gmd__DQ_x005fPositionalAccuracy_x005fPropertyType::soap_dup(soap*) returns deep copy of gmd__DQ_x005fPositionalAccuracy_x005fPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__DQ_x005fPositionalAccuracy_x005fPropertyType::soap_del() deep deletes gmd__DQ_x005fPositionalAccuracy_x005fPropertyType data members, use only after gmd__DQ_x005fPositionalAccuracy_x005fPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__DQ_x005fPositionalAccuracy_x005fPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gmd__DQ_x005fPositionalAccuracy_x005fPropertyType_sequence
    {
/// Reference "http://www.isotc211.org/2005/gmd":AbstractDQ_PositionalAccuracy to abstract element.
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractDQ_PositionalAccuracy"> with global elements <DQ_RelativeInternalPositionalAccuracy> <DQ_GriddedDataPositionalAccuracy> <DQ_AbsoluteExternalPositionalAccuracy>
   $int                                  __unionAbstractDQ_x005fPositionalAccuracy;	///< Union _gmd__union_DQ_x005fPositionalAccuracy_x005fPropertyType selector: set to SOAP_UNION__gmd__union_DQ_x005fPositionalAccuracy_x005fPropertyType_<fieldname>
/// Union for substitutionGroup gmd__AbstractDQ_x005fPositionalAccuracy.
    union _gmd__union_DQ_x005fPositionalAccuracy_x005fPropertyType
    {
/// Element "http://www.isotc211.org/2005/gmd":DQ_RelativeInternalPositionalAccuracy.
    gmd__DQ_x005fRelativeInternalPositionalAccuracy_x005fType*  DQ_x005fRelativeInternalPositionalAccuracy nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.isotc211.org/2005/gmd":DQ_GriddedDataPositionalAccuracy.
    gmd__DQ_x005fGriddedDataPositionalAccuracy_x005fType*  DQ_x005fGriddedDataPositionalAccuracy nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.isotc211.org/2005/gmd":DQ_AbsoluteExternalPositionalAccuracy.
    gmd__DQ_x005fAbsoluteExternalPositionalAccuracy_x005fType*  DQ_x005fAbsoluteExternalPositionalAccuracy nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_DQ_x005fPositionalAccuracy_x005fPropertyType;
//  END OF SUBSTITUTIONS
    }                                   *__DQ_x005fPositionalAccuracy_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gmd":"http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectReference">.
/// Attribute "uuidref" of XSD type xs:string.
   @std::string*                         :uuidref                       0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.isotc211.org/2005/gmd":DQ_LogicalConsistency_PropertyType is a complexType.
///
/// class gmd__DQ_x005fLogicalConsistency_x005fPropertyType operations:
/// - gmd__DQ_x005fLogicalConsistency_x005fPropertyType* soap_new_gmd__DQ_x005fLogicalConsistency_x005fPropertyType(soap*) allocate and default initialize
/// - gmd__DQ_x005fLogicalConsistency_x005fPropertyType* soap_new_gmd__DQ_x005fLogicalConsistency_x005fPropertyType(soap*, int num) allocate array and default initialize values
/// - gmd__DQ_x005fLogicalConsistency_x005fPropertyType* soap_new_req_gmd__DQ_x005fLogicalConsistency_x005fPropertyType(soap*, ...) allocate, set required members
/// - gmd__DQ_x005fLogicalConsistency_x005fPropertyType* soap_new_set_gmd__DQ_x005fLogicalConsistency_x005fPropertyType(soap*, ...) allocate, set all public members
/// - gmd__DQ_x005fLogicalConsistency_x005fPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__DQ_x005fLogicalConsistency_x005fPropertyType(soap*, gmd__DQ_x005fLogicalConsistency_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__DQ_x005fLogicalConsistency_x005fPropertyType(soap*, gmd__DQ_x005fLogicalConsistency_x005fPropertyType*) serialize to a stream
/// - gmd__DQ_x005fLogicalConsistency_x005fPropertyType* gmd__DQ_x005fLogicalConsistency_x005fPropertyType::soap_dup(soap*) returns deep copy of gmd__DQ_x005fLogicalConsistency_x005fPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__DQ_x005fLogicalConsistency_x005fPropertyType::soap_del() deep deletes gmd__DQ_x005fLogicalConsistency_x005fPropertyType data members, use only after gmd__DQ_x005fLogicalConsistency_x005fPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__DQ_x005fLogicalConsistency_x005fPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gmd__DQ_x005fLogicalConsistency_x005fPropertyType_sequence
    {
/// Reference "http://www.isotc211.org/2005/gmd":AbstractDQ_LogicalConsistency to abstract element.
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractDQ_LogicalConsistency"> with global elements <DQ_TopologicalConsistency> <DQ_FormatConsistency> <DQ_DomainConsistency> <DQ_ConceptualConsistency>
   $int                                  __unionAbstractDQ_x005fLogicalConsistency;	///< Union _gmd__union_DQ_x005fLogicalConsistency_x005fPropertyType selector: set to SOAP_UNION__gmd__union_DQ_x005fLogicalConsistency_x005fPropertyType_<fieldname>
/// Union for substitutionGroup gmd__AbstractDQ_x005fLogicalConsistency.
    union _gmd__union_DQ_x005fLogicalConsistency_x005fPropertyType
    {
/// Element "http://www.isotc211.org/2005/gmd":DQ_TopologicalConsistency.
    gmd__DQ_x005fTopologicalConsistency_x005fType*  DQ_x005fTopologicalConsistency nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.isotc211.org/2005/gmd":DQ_FormatConsistency.
    gmd__DQ_x005fFormatConsistency_x005fType*  DQ_x005fFormatConsistency      nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.isotc211.org/2005/gmd":DQ_DomainConsistency.
    gmd__DQ_x005fDomainConsistency_x005fType*  DQ_x005fDomainConsistency      nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.isotc211.org/2005/gmd":DQ_ConceptualConsistency.
    gmd__DQ_x005fConceptualConsistency_x005fType*  DQ_x005fConceptualConsistency  nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_DQ_x005fLogicalConsistency_x005fPropertyType;
//  END OF SUBSTITUTIONS
    }                                   *__DQ_x005fLogicalConsistency_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gmd":"http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectReference">.
/// Attribute "uuidref" of XSD type xs:string.
   @std::string*                         :uuidref                       0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.isotc211.org/2005/gmd":DQ_Completeness_PropertyType is a complexType.
///
/// class gmd__DQ_x005fCompleteness_x005fPropertyType operations:
/// - gmd__DQ_x005fCompleteness_x005fPropertyType* soap_new_gmd__DQ_x005fCompleteness_x005fPropertyType(soap*) allocate and default initialize
/// - gmd__DQ_x005fCompleteness_x005fPropertyType* soap_new_gmd__DQ_x005fCompleteness_x005fPropertyType(soap*, int num) allocate array and default initialize values
/// - gmd__DQ_x005fCompleteness_x005fPropertyType* soap_new_req_gmd__DQ_x005fCompleteness_x005fPropertyType(soap*, ...) allocate, set required members
/// - gmd__DQ_x005fCompleteness_x005fPropertyType* soap_new_set_gmd__DQ_x005fCompleteness_x005fPropertyType(soap*, ...) allocate, set all public members
/// - gmd__DQ_x005fCompleteness_x005fPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__DQ_x005fCompleteness_x005fPropertyType(soap*, gmd__DQ_x005fCompleteness_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__DQ_x005fCompleteness_x005fPropertyType(soap*, gmd__DQ_x005fCompleteness_x005fPropertyType*) serialize to a stream
/// - gmd__DQ_x005fCompleteness_x005fPropertyType* gmd__DQ_x005fCompleteness_x005fPropertyType::soap_dup(soap*) returns deep copy of gmd__DQ_x005fCompleteness_x005fPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__DQ_x005fCompleteness_x005fPropertyType::soap_del() deep deletes gmd__DQ_x005fCompleteness_x005fPropertyType data members, use only after gmd__DQ_x005fCompleteness_x005fPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__DQ_x005fCompleteness_x005fPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gmd__DQ_x005fCompleteness_x005fPropertyType_sequence
    {
/// Reference "http://www.isotc211.org/2005/gmd":AbstractDQ_Completeness to abstract element.
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractDQ_Completeness"> with global elements <DQ_CompletenessOmission> <DQ_CompletenessCommission>
   $int                                  __unionAbstractDQ_x005fCompleteness;	///< Union _gmd__union_DQ_x005fCompleteness_x005fPropertyType selector: set to SOAP_UNION__gmd__union_DQ_x005fCompleteness_x005fPropertyType_<fieldname>
/// Union for substitutionGroup gmd__AbstractDQ_x005fCompleteness.
    union _gmd__union_DQ_x005fCompleteness_x005fPropertyType
    {
/// Element "http://www.isotc211.org/2005/gmd":DQ_CompletenessOmission.
    gmd__DQ_x005fCompletenessOmission_x005fType*  DQ_x005fCompletenessOmission   nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.isotc211.org/2005/gmd":DQ_CompletenessCommission.
    gmd__DQ_x005fCompletenessCommission_x005fType*  DQ_x005fCompletenessCommission nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_DQ_x005fCompleteness_x005fPropertyType;
//  END OF SUBSTITUTIONS
    }                                   *__DQ_x005fCompleteness_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gmd":"http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectReference">.
/// Attribute "uuidref" of XSD type xs:string.
   @std::string*                         :uuidref                       0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.isotc211.org/2005/gmd":DQ_Element_PropertyType is a complexType.
///
/// class gmd__DQ_x005fElement_x005fPropertyType operations:
/// - gmd__DQ_x005fElement_x005fPropertyType* soap_new_gmd__DQ_x005fElement_x005fPropertyType(soap*) allocate and default initialize
/// - gmd__DQ_x005fElement_x005fPropertyType* soap_new_gmd__DQ_x005fElement_x005fPropertyType(soap*, int num) allocate array and default initialize values
/// - gmd__DQ_x005fElement_x005fPropertyType* soap_new_req_gmd__DQ_x005fElement_x005fPropertyType(soap*, ...) allocate, set required members
/// - gmd__DQ_x005fElement_x005fPropertyType* soap_new_set_gmd__DQ_x005fElement_x005fPropertyType(soap*, ...) allocate, set all public members
/// - gmd__DQ_x005fElement_x005fPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__DQ_x005fElement_x005fPropertyType(soap*, gmd__DQ_x005fElement_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__DQ_x005fElement_x005fPropertyType(soap*, gmd__DQ_x005fElement_x005fPropertyType*) serialize to a stream
/// - gmd__DQ_x005fElement_x005fPropertyType* gmd__DQ_x005fElement_x005fPropertyType::soap_dup(soap*) returns deep copy of gmd__DQ_x005fElement_x005fPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__DQ_x005fElement_x005fPropertyType::soap_del() deep deletes gmd__DQ_x005fElement_x005fPropertyType data members, use only after gmd__DQ_x005fElement_x005fPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__DQ_x005fElement_x005fPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gmd__DQ_x005fElement_x005fPropertyType_sequence
    {
/// Reference "http://www.isotc211.org/2005/gmd":AbstractDQ_Element to abstract element.
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractDQ_Element"> with global elements
   $int                                  __unionAbstractDQ_x005fElement;	///< Union _gmd__union_DQ_x005fElement_x005fPropertyType selector: set to SOAP_UNION__gmd__union_DQ_x005fElement_x005fPropertyType_<fieldname>
/// Union for substitutionGroup gmd__AbstractDQ_x005fElement.
    union _gmd__union_DQ_x005fElement_x005fPropertyType
    {
    }                                    union_DQ_x005fElement_x005fPropertyType;
//  END OF SUBSTITUTIONS
    }                                   *__DQ_x005fElement_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gmd":"http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectReference">.
/// Attribute "uuidref" of XSD type xs:string.
   @std::string*                         :uuidref                       0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.isotc211.org/2005/gmd":DQ_DataQuality_PropertyType is a complexType.
///
/// class gmd__DQ_x005fDataQuality_x005fPropertyType operations:
/// - gmd__DQ_x005fDataQuality_x005fPropertyType* soap_new_gmd__DQ_x005fDataQuality_x005fPropertyType(soap*) allocate and default initialize
/// - gmd__DQ_x005fDataQuality_x005fPropertyType* soap_new_gmd__DQ_x005fDataQuality_x005fPropertyType(soap*, int num) allocate array and default initialize values
/// - gmd__DQ_x005fDataQuality_x005fPropertyType* soap_new_req_gmd__DQ_x005fDataQuality_x005fPropertyType(soap*, ...) allocate, set required members
/// - gmd__DQ_x005fDataQuality_x005fPropertyType* soap_new_set_gmd__DQ_x005fDataQuality_x005fPropertyType(soap*, ...) allocate, set all public members
/// - gmd__DQ_x005fDataQuality_x005fPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__DQ_x005fDataQuality_x005fPropertyType(soap*, gmd__DQ_x005fDataQuality_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__DQ_x005fDataQuality_x005fPropertyType(soap*, gmd__DQ_x005fDataQuality_x005fPropertyType*) serialize to a stream
/// - gmd__DQ_x005fDataQuality_x005fPropertyType* gmd__DQ_x005fDataQuality_x005fPropertyType::soap_dup(soap*) returns deep copy of gmd__DQ_x005fDataQuality_x005fPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__DQ_x005fDataQuality_x005fPropertyType::soap_del() deep deletes gmd__DQ_x005fDataQuality_x005fPropertyType data members, use only after gmd__DQ_x005fDataQuality_x005fPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__DQ_x005fDataQuality_x005fPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gmd__DQ_x005fDataQuality_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd:""http://www.isotc211.org/2005/gmd":DQ_DataQuality.
    gmd__DQ_x005fDataQuality_x005fType*  DQ_x005fDataQuality            1;	///< Required element.
    }                                   *__DQ_x005fDataQuality_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gmd":"http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectReference">.
/// Attribute "uuidref" of XSD type xs:string.
   @std::string*                         :uuidref                       0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.isotc211.org/2005/gmd":DQ_Scope_PropertyType is a complexType.
///
/// class gmd__DQ_x005fScope_x005fPropertyType operations:
/// - gmd__DQ_x005fScope_x005fPropertyType* soap_new_gmd__DQ_x005fScope_x005fPropertyType(soap*) allocate and default initialize
/// - gmd__DQ_x005fScope_x005fPropertyType* soap_new_gmd__DQ_x005fScope_x005fPropertyType(soap*, int num) allocate array and default initialize values
/// - gmd__DQ_x005fScope_x005fPropertyType* soap_new_req_gmd__DQ_x005fScope_x005fPropertyType(soap*, ...) allocate, set required members
/// - gmd__DQ_x005fScope_x005fPropertyType* soap_new_set_gmd__DQ_x005fScope_x005fPropertyType(soap*, ...) allocate, set all public members
/// - gmd__DQ_x005fScope_x005fPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__DQ_x005fScope_x005fPropertyType(soap*, gmd__DQ_x005fScope_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__DQ_x005fScope_x005fPropertyType(soap*, gmd__DQ_x005fScope_x005fPropertyType*) serialize to a stream
/// - gmd__DQ_x005fScope_x005fPropertyType* gmd__DQ_x005fScope_x005fPropertyType::soap_dup(soap*) returns deep copy of gmd__DQ_x005fScope_x005fPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__DQ_x005fScope_x005fPropertyType::soap_del() deep deletes gmd__DQ_x005fScope_x005fPropertyType data members, use only after gmd__DQ_x005fScope_x005fPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__DQ_x005fScope_x005fPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gmd__DQ_x005fScope_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd:""http://www.isotc211.org/2005/gmd":DQ_Scope.
    gmd__DQ_x005fScope_x005fType*        DQ_x005fScope                  1;	///< Required element.
    }                                   *__DQ_x005fScope_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gmd":"http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectReference">.
/// Attribute "uuidref" of XSD type xs:string.
   @std::string*                         :uuidref                       0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.isotc211.org/2005/gmd":DQ_EvaluationMethodTypeCode_PropertyType is a complexType.
///
/// class gmd__DQ_x005fEvaluationMethodTypeCode_x005fPropertyType operations:
/// - gmd__DQ_x005fEvaluationMethodTypeCode_x005fPropertyType* soap_new_gmd__DQ_x005fEvaluationMethodTypeCode_x005fPropertyType(soap*) allocate and default initialize
/// - gmd__DQ_x005fEvaluationMethodTypeCode_x005fPropertyType* soap_new_gmd__DQ_x005fEvaluationMethodTypeCode_x005fPropertyType(soap*, int num) allocate array and default initialize values
/// - gmd__DQ_x005fEvaluationMethodTypeCode_x005fPropertyType* soap_new_req_gmd__DQ_x005fEvaluationMethodTypeCode_x005fPropertyType(soap*, ...) allocate, set required members
/// - gmd__DQ_x005fEvaluationMethodTypeCode_x005fPropertyType* soap_new_set_gmd__DQ_x005fEvaluationMethodTypeCode_x005fPropertyType(soap*, ...) allocate, set all public members
/// - gmd__DQ_x005fEvaluationMethodTypeCode_x005fPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__DQ_x005fEvaluationMethodTypeCode_x005fPropertyType(soap*, gmd__DQ_x005fEvaluationMethodTypeCode_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__DQ_x005fEvaluationMethodTypeCode_x005fPropertyType(soap*, gmd__DQ_x005fEvaluationMethodTypeCode_x005fPropertyType*) serialize to a stream
/// - gmd__DQ_x005fEvaluationMethodTypeCode_x005fPropertyType* gmd__DQ_x005fEvaluationMethodTypeCode_x005fPropertyType::soap_dup(soap*) returns deep copy of gmd__DQ_x005fEvaluationMethodTypeCode_x005fPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__DQ_x005fEvaluationMethodTypeCode_x005fPropertyType::soap_del() deep deletes gmd__DQ_x005fEvaluationMethodTypeCode_x005fPropertyType data members, use only after gmd__DQ_x005fEvaluationMethodTypeCode_x005fPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__DQ_x005fEvaluationMethodTypeCode_x005fPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gmd__DQ_x005fEvaluationMethodTypeCode_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd:""http://www.isotc211.org/2005/gmd":DQ_EvaluationMethodTypeCode.
    gco__CodeListValue_x005fType*        DQ_x005fEvaluationMethodTypeCode 1;	///< Required element.
    }                                   *__DQ_x005fEvaluationMethodTypeCode_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gmd":"http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
};

/// @brief "http://www.isotc211.org/2005/gmd":MD_Identification_PropertyType is a complexType.
///
/// class gmd__MD_x005fIdentification_x005fPropertyType operations:
/// - gmd__MD_x005fIdentification_x005fPropertyType* soap_new_gmd__MD_x005fIdentification_x005fPropertyType(soap*) allocate and default initialize
/// - gmd__MD_x005fIdentification_x005fPropertyType* soap_new_gmd__MD_x005fIdentification_x005fPropertyType(soap*, int num) allocate array and default initialize values
/// - gmd__MD_x005fIdentification_x005fPropertyType* soap_new_req_gmd__MD_x005fIdentification_x005fPropertyType(soap*, ...) allocate, set required members
/// - gmd__MD_x005fIdentification_x005fPropertyType* soap_new_set_gmd__MD_x005fIdentification_x005fPropertyType(soap*, ...) allocate, set all public members
/// - gmd__MD_x005fIdentification_x005fPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__MD_x005fIdentification_x005fPropertyType(soap*, gmd__MD_x005fIdentification_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fIdentification_x005fPropertyType(soap*, gmd__MD_x005fIdentification_x005fPropertyType*) serialize to a stream
/// - gmd__MD_x005fIdentification_x005fPropertyType* gmd__MD_x005fIdentification_x005fPropertyType::soap_dup(soap*) returns deep copy of gmd__MD_x005fIdentification_x005fPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__MD_x005fIdentification_x005fPropertyType::soap_del() deep deletes gmd__MD_x005fIdentification_x005fPropertyType data members, use only after gmd__MD_x005fIdentification_x005fPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__MD_x005fIdentification_x005fPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gmd__MD_x005fIdentification_x005fPropertyType_sequence
    {
/// Reference "http://www.isotc211.org/2005/gmd":AbstractMD_Identification to abstract element.
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractMD_Identification"> with global elements <MD_DataIdentification> <MD_ServiceIdentification>
   $int                                  __unionAbstractMD_x005fIdentification;	///< Union _gmd__union_MD_x005fIdentification_x005fPropertyType selector: set to SOAP_UNION__gmd__union_MD_x005fIdentification_x005fPropertyType_<fieldname>
/// Union for substitutionGroup gmd__AbstractMD_x005fIdentification.
    union _gmd__union_MD_x005fIdentification_x005fPropertyType
    {
/// Element "http://www.isotc211.org/2005/gmd":MD_DataIdentification.
    gmd__MD_x005fDataIdentification_x005fType*  MD_x005fDataIdentification     nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.isotc211.org/2005/gmd":MD_ServiceIdentification.
    gmd__MD_x005fServiceIdentification_x005fType*  MD_x005fServiceIdentification  nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_MD_x005fIdentification_x005fPropertyType;
//  END OF SUBSTITUTIONS
    }                                   *__MD_x005fIdentification_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gmd":"http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectReference">.
/// Attribute "uuidref" of XSD type xs:string.
   @std::string*                         :uuidref                       0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.isotc211.org/2005/gmd":MD_BrowseGraphic_PropertyType is a complexType.
///
/// class gmd__MD_x005fBrowseGraphic_x005fPropertyType operations:
/// - gmd__MD_x005fBrowseGraphic_x005fPropertyType* soap_new_gmd__MD_x005fBrowseGraphic_x005fPropertyType(soap*) allocate and default initialize
/// - gmd__MD_x005fBrowseGraphic_x005fPropertyType* soap_new_gmd__MD_x005fBrowseGraphic_x005fPropertyType(soap*, int num) allocate array and default initialize values
/// - gmd__MD_x005fBrowseGraphic_x005fPropertyType* soap_new_req_gmd__MD_x005fBrowseGraphic_x005fPropertyType(soap*, ...) allocate, set required members
/// - gmd__MD_x005fBrowseGraphic_x005fPropertyType* soap_new_set_gmd__MD_x005fBrowseGraphic_x005fPropertyType(soap*, ...) allocate, set all public members
/// - gmd__MD_x005fBrowseGraphic_x005fPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__MD_x005fBrowseGraphic_x005fPropertyType(soap*, gmd__MD_x005fBrowseGraphic_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fBrowseGraphic_x005fPropertyType(soap*, gmd__MD_x005fBrowseGraphic_x005fPropertyType*) serialize to a stream
/// - gmd__MD_x005fBrowseGraphic_x005fPropertyType* gmd__MD_x005fBrowseGraphic_x005fPropertyType::soap_dup(soap*) returns deep copy of gmd__MD_x005fBrowseGraphic_x005fPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__MD_x005fBrowseGraphic_x005fPropertyType::soap_del() deep deletes gmd__MD_x005fBrowseGraphic_x005fPropertyType data members, use only after gmd__MD_x005fBrowseGraphic_x005fPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__MD_x005fBrowseGraphic_x005fPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gmd__MD_x005fBrowseGraphic_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd:""http://www.isotc211.org/2005/gmd":MD_BrowseGraphic.
    gmd__MD_x005fBrowseGraphic_x005fType*  MD_x005fBrowseGraphic          1;	///< Required element.
    }                                   *__MD_x005fBrowseGraphic_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gmd":"http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectReference">.
/// Attribute "uuidref" of XSD type xs:string.
   @std::string*                         :uuidref                       0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.isotc211.org/2005/gmd":MD_DataIdentification_PropertyType is a complexType.
///
/// class gmd__MD_x005fDataIdentification_x005fPropertyType operations:
/// - gmd__MD_x005fDataIdentification_x005fPropertyType* soap_new_gmd__MD_x005fDataIdentification_x005fPropertyType(soap*) allocate and default initialize
/// - gmd__MD_x005fDataIdentification_x005fPropertyType* soap_new_gmd__MD_x005fDataIdentification_x005fPropertyType(soap*, int num) allocate array and default initialize values
/// - gmd__MD_x005fDataIdentification_x005fPropertyType* soap_new_req_gmd__MD_x005fDataIdentification_x005fPropertyType(soap*, ...) allocate, set required members
/// - gmd__MD_x005fDataIdentification_x005fPropertyType* soap_new_set_gmd__MD_x005fDataIdentification_x005fPropertyType(soap*, ...) allocate, set all public members
/// - gmd__MD_x005fDataIdentification_x005fPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__MD_x005fDataIdentification_x005fPropertyType(soap*, gmd__MD_x005fDataIdentification_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fDataIdentification_x005fPropertyType(soap*, gmd__MD_x005fDataIdentification_x005fPropertyType*) serialize to a stream
/// - gmd__MD_x005fDataIdentification_x005fPropertyType* gmd__MD_x005fDataIdentification_x005fPropertyType::soap_dup(soap*) returns deep copy of gmd__MD_x005fDataIdentification_x005fPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__MD_x005fDataIdentification_x005fPropertyType::soap_del() deep deletes gmd__MD_x005fDataIdentification_x005fPropertyType data members, use only after gmd__MD_x005fDataIdentification_x005fPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__MD_x005fDataIdentification_x005fPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gmd__MD_x005fDataIdentification_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd:""http://www.isotc211.org/2005/gmd":MD_DataIdentification.
    gmd__MD_x005fDataIdentification_x005fType*  MD_x005fDataIdentification     1;	///< Required element.
    }                                   *__MD_x005fDataIdentification_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gmd":"http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectReference">.
/// Attribute "uuidref" of XSD type xs:string.
   @std::string*                         :uuidref                       0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.isotc211.org/2005/gmd":MD_ServiceIdentification_PropertyType is a complexType.
///
/// class gmd__MD_x005fServiceIdentification_x005fPropertyType operations:
/// - gmd__MD_x005fServiceIdentification_x005fPropertyType* soap_new_gmd__MD_x005fServiceIdentification_x005fPropertyType(soap*) allocate and default initialize
/// - gmd__MD_x005fServiceIdentification_x005fPropertyType* soap_new_gmd__MD_x005fServiceIdentification_x005fPropertyType(soap*, int num) allocate array and default initialize values
/// - gmd__MD_x005fServiceIdentification_x005fPropertyType* soap_new_req_gmd__MD_x005fServiceIdentification_x005fPropertyType(soap*, ...) allocate, set required members
/// - gmd__MD_x005fServiceIdentification_x005fPropertyType* soap_new_set_gmd__MD_x005fServiceIdentification_x005fPropertyType(soap*, ...) allocate, set all public members
/// - gmd__MD_x005fServiceIdentification_x005fPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__MD_x005fServiceIdentification_x005fPropertyType(soap*, gmd__MD_x005fServiceIdentification_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fServiceIdentification_x005fPropertyType(soap*, gmd__MD_x005fServiceIdentification_x005fPropertyType*) serialize to a stream
/// - gmd__MD_x005fServiceIdentification_x005fPropertyType* gmd__MD_x005fServiceIdentification_x005fPropertyType::soap_dup(soap*) returns deep copy of gmd__MD_x005fServiceIdentification_x005fPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__MD_x005fServiceIdentification_x005fPropertyType::soap_del() deep deletes gmd__MD_x005fServiceIdentification_x005fPropertyType data members, use only after gmd__MD_x005fServiceIdentification_x005fPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__MD_x005fServiceIdentification_x005fPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gmd__MD_x005fServiceIdentification_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd:""http://www.isotc211.org/2005/gmd":MD_ServiceIdentification.
    gmd__MD_x005fServiceIdentification_x005fType*  MD_x005fServiceIdentification  1;	///< Required element.
    }                                   *__MD_x005fServiceIdentification_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gmd":"http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectReference">.
/// Attribute "uuidref" of XSD type xs:string.
   @std::string*                         :uuidref                       0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.isotc211.org/2005/gmd":MD_RepresentativeFraction_PropertyType is a complexType.
///
/// class gmd__MD_x005fRepresentativeFraction_x005fPropertyType operations:
/// - gmd__MD_x005fRepresentativeFraction_x005fPropertyType* soap_new_gmd__MD_x005fRepresentativeFraction_x005fPropertyType(soap*) allocate and default initialize
/// - gmd__MD_x005fRepresentativeFraction_x005fPropertyType* soap_new_gmd__MD_x005fRepresentativeFraction_x005fPropertyType(soap*, int num) allocate array and default initialize values
/// - gmd__MD_x005fRepresentativeFraction_x005fPropertyType* soap_new_req_gmd__MD_x005fRepresentativeFraction_x005fPropertyType(soap*, ...) allocate, set required members
/// - gmd__MD_x005fRepresentativeFraction_x005fPropertyType* soap_new_set_gmd__MD_x005fRepresentativeFraction_x005fPropertyType(soap*, ...) allocate, set all public members
/// - gmd__MD_x005fRepresentativeFraction_x005fPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__MD_x005fRepresentativeFraction_x005fPropertyType(soap*, gmd__MD_x005fRepresentativeFraction_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fRepresentativeFraction_x005fPropertyType(soap*, gmd__MD_x005fRepresentativeFraction_x005fPropertyType*) serialize to a stream
/// - gmd__MD_x005fRepresentativeFraction_x005fPropertyType* gmd__MD_x005fRepresentativeFraction_x005fPropertyType::soap_dup(soap*) returns deep copy of gmd__MD_x005fRepresentativeFraction_x005fPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__MD_x005fRepresentativeFraction_x005fPropertyType::soap_del() deep deletes gmd__MD_x005fRepresentativeFraction_x005fPropertyType data members, use only after gmd__MD_x005fRepresentativeFraction_x005fPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__MD_x005fRepresentativeFraction_x005fPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gmd__MD_x005fRepresentativeFraction_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd:""http://www.isotc211.org/2005/gmd":MD_RepresentativeFraction.
    gmd__MD_x005fRepresentativeFraction_x005fType*  MD_x005fRepresentativeFraction 1;	///< Required element.
    }                                   *__MD_x005fRepresentativeFraction_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gmd":"http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectReference">.
/// Attribute "uuidref" of XSD type xs:string.
   @std::string*                         :uuidref                       0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.isotc211.org/2005/gmd":MD_Usage_PropertyType is a complexType.
///
/// class gmd__MD_x005fUsage_x005fPropertyType operations:
/// - gmd__MD_x005fUsage_x005fPropertyType* soap_new_gmd__MD_x005fUsage_x005fPropertyType(soap*) allocate and default initialize
/// - gmd__MD_x005fUsage_x005fPropertyType* soap_new_gmd__MD_x005fUsage_x005fPropertyType(soap*, int num) allocate array and default initialize values
/// - gmd__MD_x005fUsage_x005fPropertyType* soap_new_req_gmd__MD_x005fUsage_x005fPropertyType(soap*, ...) allocate, set required members
/// - gmd__MD_x005fUsage_x005fPropertyType* soap_new_set_gmd__MD_x005fUsage_x005fPropertyType(soap*, ...) allocate, set all public members
/// - gmd__MD_x005fUsage_x005fPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__MD_x005fUsage_x005fPropertyType(soap*, gmd__MD_x005fUsage_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fUsage_x005fPropertyType(soap*, gmd__MD_x005fUsage_x005fPropertyType*) serialize to a stream
/// - gmd__MD_x005fUsage_x005fPropertyType* gmd__MD_x005fUsage_x005fPropertyType::soap_dup(soap*) returns deep copy of gmd__MD_x005fUsage_x005fPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__MD_x005fUsage_x005fPropertyType::soap_del() deep deletes gmd__MD_x005fUsage_x005fPropertyType data members, use only after gmd__MD_x005fUsage_x005fPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__MD_x005fUsage_x005fPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gmd__MD_x005fUsage_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd:""http://www.isotc211.org/2005/gmd":MD_Usage.
    gmd__MD_x005fUsage_x005fType*        MD_x005fUsage                  1;	///< Required element.
    }                                   *__MD_x005fUsage_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gmd":"http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectReference">.
/// Attribute "uuidref" of XSD type xs:string.
   @std::string*                         :uuidref                       0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.isotc211.org/2005/gmd":MD_Keywords_PropertyType is a complexType.
///
/// class gmd__MD_x005fKeywords_x005fPropertyType operations:
/// - gmd__MD_x005fKeywords_x005fPropertyType* soap_new_gmd__MD_x005fKeywords_x005fPropertyType(soap*) allocate and default initialize
/// - gmd__MD_x005fKeywords_x005fPropertyType* soap_new_gmd__MD_x005fKeywords_x005fPropertyType(soap*, int num) allocate array and default initialize values
/// - gmd__MD_x005fKeywords_x005fPropertyType* soap_new_req_gmd__MD_x005fKeywords_x005fPropertyType(soap*, ...) allocate, set required members
/// - gmd__MD_x005fKeywords_x005fPropertyType* soap_new_set_gmd__MD_x005fKeywords_x005fPropertyType(soap*, ...) allocate, set all public members
/// - gmd__MD_x005fKeywords_x005fPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__MD_x005fKeywords_x005fPropertyType(soap*, gmd__MD_x005fKeywords_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fKeywords_x005fPropertyType(soap*, gmd__MD_x005fKeywords_x005fPropertyType*) serialize to a stream
/// - gmd__MD_x005fKeywords_x005fPropertyType* gmd__MD_x005fKeywords_x005fPropertyType::soap_dup(soap*) returns deep copy of gmd__MD_x005fKeywords_x005fPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__MD_x005fKeywords_x005fPropertyType::soap_del() deep deletes gmd__MD_x005fKeywords_x005fPropertyType data members, use only after gmd__MD_x005fKeywords_x005fPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__MD_x005fKeywords_x005fPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gmd__MD_x005fKeywords_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd:""http://www.isotc211.org/2005/gmd":MD_Keywords.
    gmd__MD_x005fKeywords_x005fType*     MD_x005fKeywords               1;	///< Required element.
    }                                   *__MD_x005fKeywords_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gmd":"http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectReference">.
/// Attribute "uuidref" of XSD type xs:string.
   @std::string*                         :uuidref                       0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.isotc211.org/2005/gmd":DS_Association_PropertyType is a complexType.
///
/// class gmd__DS_x005fAssociation_x005fPropertyType operations:
/// - gmd__DS_x005fAssociation_x005fPropertyType* soap_new_gmd__DS_x005fAssociation_x005fPropertyType(soap*) allocate and default initialize
/// - gmd__DS_x005fAssociation_x005fPropertyType* soap_new_gmd__DS_x005fAssociation_x005fPropertyType(soap*, int num) allocate array and default initialize values
/// - gmd__DS_x005fAssociation_x005fPropertyType* soap_new_req_gmd__DS_x005fAssociation_x005fPropertyType(soap*, ...) allocate, set required members
/// - gmd__DS_x005fAssociation_x005fPropertyType* soap_new_set_gmd__DS_x005fAssociation_x005fPropertyType(soap*, ...) allocate, set all public members
/// - gmd__DS_x005fAssociation_x005fPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__DS_x005fAssociation_x005fPropertyType(soap*, gmd__DS_x005fAssociation_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__DS_x005fAssociation_x005fPropertyType(soap*, gmd__DS_x005fAssociation_x005fPropertyType*) serialize to a stream
/// - gmd__DS_x005fAssociation_x005fPropertyType* gmd__DS_x005fAssociation_x005fPropertyType::soap_dup(soap*) returns deep copy of gmd__DS_x005fAssociation_x005fPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__DS_x005fAssociation_x005fPropertyType::soap_del() deep deletes gmd__DS_x005fAssociation_x005fPropertyType data members, use only after gmd__DS_x005fAssociation_x005fPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__DS_x005fAssociation_x005fPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gmd__DS_x005fAssociation_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd:""http://www.isotc211.org/2005/gmd":DS_Association.
    gmd__DS_x005fAssociation_x005fType*  DS_x005fAssociation            1;	///< Required element.
    }                                   *__DS_x005fAssociation_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gmd":"http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectReference">.
/// Attribute "uuidref" of XSD type xs:string.
   @std::string*                         :uuidref                       0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.isotc211.org/2005/gmd":MD_AggregateInformation_PropertyType is a complexType.
///
/// class gmd__MD_x005fAggregateInformation_x005fPropertyType operations:
/// - gmd__MD_x005fAggregateInformation_x005fPropertyType* soap_new_gmd__MD_x005fAggregateInformation_x005fPropertyType(soap*) allocate and default initialize
/// - gmd__MD_x005fAggregateInformation_x005fPropertyType* soap_new_gmd__MD_x005fAggregateInformation_x005fPropertyType(soap*, int num) allocate array and default initialize values
/// - gmd__MD_x005fAggregateInformation_x005fPropertyType* soap_new_req_gmd__MD_x005fAggregateInformation_x005fPropertyType(soap*, ...) allocate, set required members
/// - gmd__MD_x005fAggregateInformation_x005fPropertyType* soap_new_set_gmd__MD_x005fAggregateInformation_x005fPropertyType(soap*, ...) allocate, set all public members
/// - gmd__MD_x005fAggregateInformation_x005fPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__MD_x005fAggregateInformation_x005fPropertyType(soap*, gmd__MD_x005fAggregateInformation_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fAggregateInformation_x005fPropertyType(soap*, gmd__MD_x005fAggregateInformation_x005fPropertyType*) serialize to a stream
/// - gmd__MD_x005fAggregateInformation_x005fPropertyType* gmd__MD_x005fAggregateInformation_x005fPropertyType::soap_dup(soap*) returns deep copy of gmd__MD_x005fAggregateInformation_x005fPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__MD_x005fAggregateInformation_x005fPropertyType::soap_del() deep deletes gmd__MD_x005fAggregateInformation_x005fPropertyType data members, use only after gmd__MD_x005fAggregateInformation_x005fPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__MD_x005fAggregateInformation_x005fPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gmd__MD_x005fAggregateInformation_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd:""http://www.isotc211.org/2005/gmd":MD_AggregateInformation.
    gmd__MD_x005fAggregateInformation_x005fType*  MD_x005fAggregateInformation   1;	///< Required element.
    }                                   *__MD_x005fAggregateInformation_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gmd":"http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectReference">.
/// Attribute "uuidref" of XSD type xs:string.
   @std::string*                         :uuidref                       0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.isotc211.org/2005/gmd":MD_Resolution_Type is a complexType.
///
/// class gmd__MD_x005fResolution_x005fType operations:
/// - gmd__MD_x005fResolution_x005fType* soap_new_gmd__MD_x005fResolution_x005fType(soap*) allocate and default initialize
/// - gmd__MD_x005fResolution_x005fType* soap_new_gmd__MD_x005fResolution_x005fType(soap*, int num) allocate array and default initialize values
/// - gmd__MD_x005fResolution_x005fType* soap_new_req_gmd__MD_x005fResolution_x005fType(soap*, ...) allocate, set required members
/// - gmd__MD_x005fResolution_x005fType* soap_new_set_gmd__MD_x005fResolution_x005fType(soap*, ...) allocate, set all public members
/// - gmd__MD_x005fResolution_x005fType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__MD_x005fResolution_x005fType(soap*, gmd__MD_x005fResolution_x005fType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fResolution_x005fType(soap*, gmd__MD_x005fResolution_x005fType*) serialize to a stream
/// - gmd__MD_x005fResolution_x005fType* gmd__MD_x005fResolution_x005fType::soap_dup(soap*) returns deep copy of gmd__MD_x005fResolution_x005fType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__MD_x005fResolution_x005fType::soap_del() deep deletes gmd__MD_x005fResolution_x005fType data members, use only after gmd__MD_x005fResolution_x005fType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__MD_x005fResolution_x005fType : public xsd__anyType
{ public:
//  BEGIN CHOICE <xs:choice>
   $int                                  __union_MD_x005fResolution_x005fType;	///< Union _gmd__union_MD_x005fResolution_x005fType selector: set to SOAP_UNION__gmd__union_MD_x005fResolution_x005fType_<fieldname>
/// Union for choice in gmd__MD_x005fResolution_x005fType.
    union _gmd__union_MD_x005fResolution_x005fType
    {
/// Element "equivalentScale" of XSD type "http://www.isotc211.org/2005/gmd":MD_RepresentativeFraction_PropertyType.
    gmd__MD_x005fRepresentativeFraction_x005fPropertyType*  equivalentScale                nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "distance" of XSD type "http://www.isotc211.org/2005/gco":Distance_PropertyType.
    gco__Distance_x005fPropertyType*     distance                       nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_MD_x005fResolution_x005fType;
//  END OF CHOICE
};

/// @brief "http://www.isotc211.org/2005/gmd":MD_Resolution_PropertyType is a complexType.
///
/// class gmd__MD_x005fResolution_x005fPropertyType operations:
/// - gmd__MD_x005fResolution_x005fPropertyType* soap_new_gmd__MD_x005fResolution_x005fPropertyType(soap*) allocate and default initialize
/// - gmd__MD_x005fResolution_x005fPropertyType* soap_new_gmd__MD_x005fResolution_x005fPropertyType(soap*, int num) allocate array and default initialize values
/// - gmd__MD_x005fResolution_x005fPropertyType* soap_new_req_gmd__MD_x005fResolution_x005fPropertyType(soap*, ...) allocate, set required members
/// - gmd__MD_x005fResolution_x005fPropertyType* soap_new_set_gmd__MD_x005fResolution_x005fPropertyType(soap*, ...) allocate, set all public members
/// - gmd__MD_x005fResolution_x005fPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__MD_x005fResolution_x005fPropertyType(soap*, gmd__MD_x005fResolution_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fResolution_x005fPropertyType(soap*, gmd__MD_x005fResolution_x005fPropertyType*) serialize to a stream
/// - gmd__MD_x005fResolution_x005fPropertyType* gmd__MD_x005fResolution_x005fPropertyType::soap_dup(soap*) returns deep copy of gmd__MD_x005fResolution_x005fPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__MD_x005fResolution_x005fPropertyType::soap_del() deep deletes gmd__MD_x005fResolution_x005fPropertyType data members, use only after gmd__MD_x005fResolution_x005fPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__MD_x005fResolution_x005fPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gmd__MD_x005fResolution_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd:""http://www.isotc211.org/2005/gmd":MD_Resolution.
    gmd__MD_x005fResolution_x005fType*   MD_x005fResolution             1;	///< Required element.
    }                                   *__MD_x005fResolution_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gmd":"http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
};

/// @brief "http://www.isotc211.org/2005/gmd":MD_TopicCategoryCode_PropertyType is a complexType.
///
/// class gmd__MD_x005fTopicCategoryCode_x005fPropertyType operations:
/// - gmd__MD_x005fTopicCategoryCode_x005fPropertyType* soap_new_gmd__MD_x005fTopicCategoryCode_x005fPropertyType(soap*) allocate and default initialize
/// - gmd__MD_x005fTopicCategoryCode_x005fPropertyType* soap_new_gmd__MD_x005fTopicCategoryCode_x005fPropertyType(soap*, int num) allocate array and default initialize values
/// - gmd__MD_x005fTopicCategoryCode_x005fPropertyType* soap_new_req_gmd__MD_x005fTopicCategoryCode_x005fPropertyType(soap*, ...) allocate, set required members
/// - gmd__MD_x005fTopicCategoryCode_x005fPropertyType* soap_new_set_gmd__MD_x005fTopicCategoryCode_x005fPropertyType(soap*, ...) allocate, set all public members
/// - gmd__MD_x005fTopicCategoryCode_x005fPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__MD_x005fTopicCategoryCode_x005fPropertyType(soap*, gmd__MD_x005fTopicCategoryCode_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fTopicCategoryCode_x005fPropertyType(soap*, gmd__MD_x005fTopicCategoryCode_x005fPropertyType*) serialize to a stream
/// - gmd__MD_x005fTopicCategoryCode_x005fPropertyType* gmd__MD_x005fTopicCategoryCode_x005fPropertyType::soap_dup(soap*) returns deep copy of gmd__MD_x005fTopicCategoryCode_x005fPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__MD_x005fTopicCategoryCode_x005fPropertyType::soap_del() deep deletes gmd__MD_x005fTopicCategoryCode_x005fPropertyType data members, use only after gmd__MD_x005fTopicCategoryCode_x005fPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__MD_x005fTopicCategoryCode_x005fPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gmd__MD_x005fTopicCategoryCode_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd:""http://www.isotc211.org/2005/gmd":MD_TopicCategoryCode.
    enum gmd__MD_x005fTopicCategoryCode_x005fType  MD_x005fTopicCategoryCode      1;	///< Required element.
    }                                   *__MD_x005fTopicCategoryCode_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gmd":"http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
};

/// @brief "http://www.isotc211.org/2005/gmd":MD_CharacterSetCode_PropertyType is a complexType.
///
/// class gmd__MD_x005fCharacterSetCode_x005fPropertyType operations:
/// - gmd__MD_x005fCharacterSetCode_x005fPropertyType* soap_new_gmd__MD_x005fCharacterSetCode_x005fPropertyType(soap*) allocate and default initialize
/// - gmd__MD_x005fCharacterSetCode_x005fPropertyType* soap_new_gmd__MD_x005fCharacterSetCode_x005fPropertyType(soap*, int num) allocate array and default initialize values
/// - gmd__MD_x005fCharacterSetCode_x005fPropertyType* soap_new_req_gmd__MD_x005fCharacterSetCode_x005fPropertyType(soap*, ...) allocate, set required members
/// - gmd__MD_x005fCharacterSetCode_x005fPropertyType* soap_new_set_gmd__MD_x005fCharacterSetCode_x005fPropertyType(soap*, ...) allocate, set all public members
/// - gmd__MD_x005fCharacterSetCode_x005fPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__MD_x005fCharacterSetCode_x005fPropertyType(soap*, gmd__MD_x005fCharacterSetCode_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fCharacterSetCode_x005fPropertyType(soap*, gmd__MD_x005fCharacterSetCode_x005fPropertyType*) serialize to a stream
/// - gmd__MD_x005fCharacterSetCode_x005fPropertyType* gmd__MD_x005fCharacterSetCode_x005fPropertyType::soap_dup(soap*) returns deep copy of gmd__MD_x005fCharacterSetCode_x005fPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__MD_x005fCharacterSetCode_x005fPropertyType::soap_del() deep deletes gmd__MD_x005fCharacterSetCode_x005fPropertyType data members, use only after gmd__MD_x005fCharacterSetCode_x005fPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__MD_x005fCharacterSetCode_x005fPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gmd__MD_x005fCharacterSetCode_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd:""http://www.isotc211.org/2005/gmd":MD_CharacterSetCode.
    gco__CodeListValue_x005fType*        MD_x005fCharacterSetCode       1;	///< Required element.
    }                                   *__MD_x005fCharacterSetCode_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gmd":"http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
};

/// @brief "http://www.isotc211.org/2005/gmd":MD_SpatialRepresentationTypeCode_PropertyType is a complexType.
///
/// class gmd__MD_x005fSpatialRepresentationTypeCode_x005fPropertyType operations:
/// - gmd__MD_x005fSpatialRepresentationTypeCode_x005fPropertyType* soap_new_gmd__MD_x005fSpatialRepresentationTypeCode_x005fPropertyType(soap*) allocate and default initialize
/// - gmd__MD_x005fSpatialRepresentationTypeCode_x005fPropertyType* soap_new_gmd__MD_x005fSpatialRepresentationTypeCode_x005fPropertyType(soap*, int num) allocate array and default initialize values
/// - gmd__MD_x005fSpatialRepresentationTypeCode_x005fPropertyType* soap_new_req_gmd__MD_x005fSpatialRepresentationTypeCode_x005fPropertyType(soap*, ...) allocate, set required members
/// - gmd__MD_x005fSpatialRepresentationTypeCode_x005fPropertyType* soap_new_set_gmd__MD_x005fSpatialRepresentationTypeCode_x005fPropertyType(soap*, ...) allocate, set all public members
/// - gmd__MD_x005fSpatialRepresentationTypeCode_x005fPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__MD_x005fSpatialRepresentationTypeCode_x005fPropertyType(soap*, gmd__MD_x005fSpatialRepresentationTypeCode_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fSpatialRepresentationTypeCode_x005fPropertyType(soap*, gmd__MD_x005fSpatialRepresentationTypeCode_x005fPropertyType*) serialize to a stream
/// - gmd__MD_x005fSpatialRepresentationTypeCode_x005fPropertyType* gmd__MD_x005fSpatialRepresentationTypeCode_x005fPropertyType::soap_dup(soap*) returns deep copy of gmd__MD_x005fSpatialRepresentationTypeCode_x005fPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__MD_x005fSpatialRepresentationTypeCode_x005fPropertyType::soap_del() deep deletes gmd__MD_x005fSpatialRepresentationTypeCode_x005fPropertyType data members, use only after gmd__MD_x005fSpatialRepresentationTypeCode_x005fPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__MD_x005fSpatialRepresentationTypeCode_x005fPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gmd__MD_x005fSpatialRepresentationTypeCode_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd:""http://www.isotc211.org/2005/gmd":MD_SpatialRepresentationTypeCode.
    gco__CodeListValue_x005fType*        MD_x005fSpatialRepresentationTypeCode 1;	///< Required element.
    }                                   *__MD_x005fSpatialRepresentationTypeCode_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gmd":"http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
};

/// @brief "http://www.isotc211.org/2005/gmd":MD_ProgressCode_PropertyType is a complexType.
///
/// class gmd__MD_x005fProgressCode_x005fPropertyType operations:
/// - gmd__MD_x005fProgressCode_x005fPropertyType* soap_new_gmd__MD_x005fProgressCode_x005fPropertyType(soap*) allocate and default initialize
/// - gmd__MD_x005fProgressCode_x005fPropertyType* soap_new_gmd__MD_x005fProgressCode_x005fPropertyType(soap*, int num) allocate array and default initialize values
/// - gmd__MD_x005fProgressCode_x005fPropertyType* soap_new_req_gmd__MD_x005fProgressCode_x005fPropertyType(soap*, ...) allocate, set required members
/// - gmd__MD_x005fProgressCode_x005fPropertyType* soap_new_set_gmd__MD_x005fProgressCode_x005fPropertyType(soap*, ...) allocate, set all public members
/// - gmd__MD_x005fProgressCode_x005fPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__MD_x005fProgressCode_x005fPropertyType(soap*, gmd__MD_x005fProgressCode_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fProgressCode_x005fPropertyType(soap*, gmd__MD_x005fProgressCode_x005fPropertyType*) serialize to a stream
/// - gmd__MD_x005fProgressCode_x005fPropertyType* gmd__MD_x005fProgressCode_x005fPropertyType::soap_dup(soap*) returns deep copy of gmd__MD_x005fProgressCode_x005fPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__MD_x005fProgressCode_x005fPropertyType::soap_del() deep deletes gmd__MD_x005fProgressCode_x005fPropertyType data members, use only after gmd__MD_x005fProgressCode_x005fPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__MD_x005fProgressCode_x005fPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gmd__MD_x005fProgressCode_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd:""http://www.isotc211.org/2005/gmd":MD_ProgressCode.
    gco__CodeListValue_x005fType*        MD_x005fProgressCode           1;	///< Required element.
    }                                   *__MD_x005fProgressCode_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gmd":"http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
};

/// @brief "http://www.isotc211.org/2005/gmd":MD_KeywordTypeCode_PropertyType is a complexType.
///
/// class gmd__MD_x005fKeywordTypeCode_x005fPropertyType operations:
/// - gmd__MD_x005fKeywordTypeCode_x005fPropertyType* soap_new_gmd__MD_x005fKeywordTypeCode_x005fPropertyType(soap*) allocate and default initialize
/// - gmd__MD_x005fKeywordTypeCode_x005fPropertyType* soap_new_gmd__MD_x005fKeywordTypeCode_x005fPropertyType(soap*, int num) allocate array and default initialize values
/// - gmd__MD_x005fKeywordTypeCode_x005fPropertyType* soap_new_req_gmd__MD_x005fKeywordTypeCode_x005fPropertyType(soap*, ...) allocate, set required members
/// - gmd__MD_x005fKeywordTypeCode_x005fPropertyType* soap_new_set_gmd__MD_x005fKeywordTypeCode_x005fPropertyType(soap*, ...) allocate, set all public members
/// - gmd__MD_x005fKeywordTypeCode_x005fPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__MD_x005fKeywordTypeCode_x005fPropertyType(soap*, gmd__MD_x005fKeywordTypeCode_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fKeywordTypeCode_x005fPropertyType(soap*, gmd__MD_x005fKeywordTypeCode_x005fPropertyType*) serialize to a stream
/// - gmd__MD_x005fKeywordTypeCode_x005fPropertyType* gmd__MD_x005fKeywordTypeCode_x005fPropertyType::soap_dup(soap*) returns deep copy of gmd__MD_x005fKeywordTypeCode_x005fPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__MD_x005fKeywordTypeCode_x005fPropertyType::soap_del() deep deletes gmd__MD_x005fKeywordTypeCode_x005fPropertyType data members, use only after gmd__MD_x005fKeywordTypeCode_x005fPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__MD_x005fKeywordTypeCode_x005fPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gmd__MD_x005fKeywordTypeCode_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd:""http://www.isotc211.org/2005/gmd":MD_KeywordTypeCode.
    gco__CodeListValue_x005fType*        MD_x005fKeywordTypeCode        1;	///< Required element.
    }                                   *__MD_x005fKeywordTypeCode_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gmd":"http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
};

/// @brief "http://www.isotc211.org/2005/gmd":DS_AssociationTypeCode_PropertyType is a complexType.
///
/// class gmd__DS_x005fAssociationTypeCode_x005fPropertyType operations:
/// - gmd__DS_x005fAssociationTypeCode_x005fPropertyType* soap_new_gmd__DS_x005fAssociationTypeCode_x005fPropertyType(soap*) allocate and default initialize
/// - gmd__DS_x005fAssociationTypeCode_x005fPropertyType* soap_new_gmd__DS_x005fAssociationTypeCode_x005fPropertyType(soap*, int num) allocate array and default initialize values
/// - gmd__DS_x005fAssociationTypeCode_x005fPropertyType* soap_new_req_gmd__DS_x005fAssociationTypeCode_x005fPropertyType(soap*, ...) allocate, set required members
/// - gmd__DS_x005fAssociationTypeCode_x005fPropertyType* soap_new_set_gmd__DS_x005fAssociationTypeCode_x005fPropertyType(soap*, ...) allocate, set all public members
/// - gmd__DS_x005fAssociationTypeCode_x005fPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__DS_x005fAssociationTypeCode_x005fPropertyType(soap*, gmd__DS_x005fAssociationTypeCode_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__DS_x005fAssociationTypeCode_x005fPropertyType(soap*, gmd__DS_x005fAssociationTypeCode_x005fPropertyType*) serialize to a stream
/// - gmd__DS_x005fAssociationTypeCode_x005fPropertyType* gmd__DS_x005fAssociationTypeCode_x005fPropertyType::soap_dup(soap*) returns deep copy of gmd__DS_x005fAssociationTypeCode_x005fPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__DS_x005fAssociationTypeCode_x005fPropertyType::soap_del() deep deletes gmd__DS_x005fAssociationTypeCode_x005fPropertyType data members, use only after gmd__DS_x005fAssociationTypeCode_x005fPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__DS_x005fAssociationTypeCode_x005fPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gmd__DS_x005fAssociationTypeCode_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd:""http://www.isotc211.org/2005/gmd":DS_AssociationTypeCode.
    gco__CodeListValue_x005fType*        DS_x005fAssociationTypeCode    1;	///< Required element.
    }                                   *__DS_x005fAssociationTypeCode_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gmd":"http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
};

/// @brief "http://www.isotc211.org/2005/gmd":DS_InitiativeTypeCode_PropertyType is a complexType.
///
/// class gmd__DS_x005fInitiativeTypeCode_x005fPropertyType operations:
/// - gmd__DS_x005fInitiativeTypeCode_x005fPropertyType* soap_new_gmd__DS_x005fInitiativeTypeCode_x005fPropertyType(soap*) allocate and default initialize
/// - gmd__DS_x005fInitiativeTypeCode_x005fPropertyType* soap_new_gmd__DS_x005fInitiativeTypeCode_x005fPropertyType(soap*, int num) allocate array and default initialize values
/// - gmd__DS_x005fInitiativeTypeCode_x005fPropertyType* soap_new_req_gmd__DS_x005fInitiativeTypeCode_x005fPropertyType(soap*, ...) allocate, set required members
/// - gmd__DS_x005fInitiativeTypeCode_x005fPropertyType* soap_new_set_gmd__DS_x005fInitiativeTypeCode_x005fPropertyType(soap*, ...) allocate, set all public members
/// - gmd__DS_x005fInitiativeTypeCode_x005fPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__DS_x005fInitiativeTypeCode_x005fPropertyType(soap*, gmd__DS_x005fInitiativeTypeCode_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__DS_x005fInitiativeTypeCode_x005fPropertyType(soap*, gmd__DS_x005fInitiativeTypeCode_x005fPropertyType*) serialize to a stream
/// - gmd__DS_x005fInitiativeTypeCode_x005fPropertyType* gmd__DS_x005fInitiativeTypeCode_x005fPropertyType::soap_dup(soap*) returns deep copy of gmd__DS_x005fInitiativeTypeCode_x005fPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__DS_x005fInitiativeTypeCode_x005fPropertyType::soap_del() deep deletes gmd__DS_x005fInitiativeTypeCode_x005fPropertyType data members, use only after gmd__DS_x005fInitiativeTypeCode_x005fPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__DS_x005fInitiativeTypeCode_x005fPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gmd__DS_x005fInitiativeTypeCode_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd:""http://www.isotc211.org/2005/gmd":DS_InitiativeTypeCode.
    gco__CodeListValue_x005fType*        DS_x005fInitiativeTypeCode     1;	///< Required element.
    }                                   *__DS_x005fInitiativeTypeCode_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gmd":"http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
};

/// @brief "http://www.isotc211.org/2005/gmd":MD_Constraints_PropertyType is a complexType.
///
/// class gmd__MD_x005fConstraints_x005fPropertyType operations:
/// - gmd__MD_x005fConstraints_x005fPropertyType* soap_new_gmd__MD_x005fConstraints_x005fPropertyType(soap*) allocate and default initialize
/// - gmd__MD_x005fConstraints_x005fPropertyType* soap_new_gmd__MD_x005fConstraints_x005fPropertyType(soap*, int num) allocate array and default initialize values
/// - gmd__MD_x005fConstraints_x005fPropertyType* soap_new_req_gmd__MD_x005fConstraints_x005fPropertyType(soap*, ...) allocate, set required members
/// - gmd__MD_x005fConstraints_x005fPropertyType* soap_new_set_gmd__MD_x005fConstraints_x005fPropertyType(soap*, ...) allocate, set all public members
/// - gmd__MD_x005fConstraints_x005fPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__MD_x005fConstraints_x005fPropertyType(soap*, gmd__MD_x005fConstraints_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fConstraints_x005fPropertyType(soap*, gmd__MD_x005fConstraints_x005fPropertyType*) serialize to a stream
/// - gmd__MD_x005fConstraints_x005fPropertyType* gmd__MD_x005fConstraints_x005fPropertyType::soap_dup(soap*) returns deep copy of gmd__MD_x005fConstraints_x005fPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__MD_x005fConstraints_x005fPropertyType::soap_del() deep deletes gmd__MD_x005fConstraints_x005fPropertyType data members, use only after gmd__MD_x005fConstraints_x005fPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__MD_x005fConstraints_x005fPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gmd__MD_x005fConstraints_x005fPropertyType_sequence
    {
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="MD_Constraints"> with global elements <MD_LegalConstraints> <MD_SecurityConstraints>
   $int                                  __unionMD_x005fConstraints    ;	///< Union _gmd__union_MD_x005fConstraints_x005fPropertyType selector: set to SOAP_UNION__gmd__union_MD_x005fConstraints_x005fPropertyType_<fieldname>
/// Union for substitutionGroup gmd__MD_x005fConstraints.
    union _gmd__union_MD_x005fConstraints_x005fPropertyType
    {
/// Element reference "http://www.isotc211.org/2005/gmd:""http://www.isotc211.org/2005/gmd":MD_Constraints.
    gmd__MD_x005fConstraints_x005fType*  MD_x005fConstraints            nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.isotc211.org/2005/gmd":MD_LegalConstraints.
    gmd__MD_x005fLegalConstraints_x005fType*  MD_x005fLegalConstraints       nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.isotc211.org/2005/gmd":MD_SecurityConstraints.
    gmd__MD_x005fSecurityConstraints_x005fType*  MD_x005fSecurityConstraints    nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_MD_x005fConstraints_x005fPropertyType;
//  END OF SUBSTITUTIONS
    }                                   *__MD_x005fConstraints_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gmd":"http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectReference">.
/// Attribute "uuidref" of XSD type xs:string.
   @std::string*                         :uuidref                       0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.isotc211.org/2005/gmd":MD_LegalConstraints_PropertyType is a complexType.
///
/// class gmd__MD_x005fLegalConstraints_x005fPropertyType operations:
/// - gmd__MD_x005fLegalConstraints_x005fPropertyType* soap_new_gmd__MD_x005fLegalConstraints_x005fPropertyType(soap*) allocate and default initialize
/// - gmd__MD_x005fLegalConstraints_x005fPropertyType* soap_new_gmd__MD_x005fLegalConstraints_x005fPropertyType(soap*, int num) allocate array and default initialize values
/// - gmd__MD_x005fLegalConstraints_x005fPropertyType* soap_new_req_gmd__MD_x005fLegalConstraints_x005fPropertyType(soap*, ...) allocate, set required members
/// - gmd__MD_x005fLegalConstraints_x005fPropertyType* soap_new_set_gmd__MD_x005fLegalConstraints_x005fPropertyType(soap*, ...) allocate, set all public members
/// - gmd__MD_x005fLegalConstraints_x005fPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__MD_x005fLegalConstraints_x005fPropertyType(soap*, gmd__MD_x005fLegalConstraints_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fLegalConstraints_x005fPropertyType(soap*, gmd__MD_x005fLegalConstraints_x005fPropertyType*) serialize to a stream
/// - gmd__MD_x005fLegalConstraints_x005fPropertyType* gmd__MD_x005fLegalConstraints_x005fPropertyType::soap_dup(soap*) returns deep copy of gmd__MD_x005fLegalConstraints_x005fPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__MD_x005fLegalConstraints_x005fPropertyType::soap_del() deep deletes gmd__MD_x005fLegalConstraints_x005fPropertyType data members, use only after gmd__MD_x005fLegalConstraints_x005fPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__MD_x005fLegalConstraints_x005fPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gmd__MD_x005fLegalConstraints_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd:""http://www.isotc211.org/2005/gmd":MD_LegalConstraints.
    gmd__MD_x005fLegalConstraints_x005fType*  MD_x005fLegalConstraints       1;	///< Required element.
    }                                   *__MD_x005fLegalConstraints_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gmd":"http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectReference">.
/// Attribute "uuidref" of XSD type xs:string.
   @std::string*                         :uuidref                       0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.isotc211.org/2005/gmd":MD_SecurityConstraints_PropertyType is a complexType.
///
/// class gmd__MD_x005fSecurityConstraints_x005fPropertyType operations:
/// - gmd__MD_x005fSecurityConstraints_x005fPropertyType* soap_new_gmd__MD_x005fSecurityConstraints_x005fPropertyType(soap*) allocate and default initialize
/// - gmd__MD_x005fSecurityConstraints_x005fPropertyType* soap_new_gmd__MD_x005fSecurityConstraints_x005fPropertyType(soap*, int num) allocate array and default initialize values
/// - gmd__MD_x005fSecurityConstraints_x005fPropertyType* soap_new_req_gmd__MD_x005fSecurityConstraints_x005fPropertyType(soap*, ...) allocate, set required members
/// - gmd__MD_x005fSecurityConstraints_x005fPropertyType* soap_new_set_gmd__MD_x005fSecurityConstraints_x005fPropertyType(soap*, ...) allocate, set all public members
/// - gmd__MD_x005fSecurityConstraints_x005fPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__MD_x005fSecurityConstraints_x005fPropertyType(soap*, gmd__MD_x005fSecurityConstraints_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fSecurityConstraints_x005fPropertyType(soap*, gmd__MD_x005fSecurityConstraints_x005fPropertyType*) serialize to a stream
/// - gmd__MD_x005fSecurityConstraints_x005fPropertyType* gmd__MD_x005fSecurityConstraints_x005fPropertyType::soap_dup(soap*) returns deep copy of gmd__MD_x005fSecurityConstraints_x005fPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__MD_x005fSecurityConstraints_x005fPropertyType::soap_del() deep deletes gmd__MD_x005fSecurityConstraints_x005fPropertyType data members, use only after gmd__MD_x005fSecurityConstraints_x005fPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__MD_x005fSecurityConstraints_x005fPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gmd__MD_x005fSecurityConstraints_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd:""http://www.isotc211.org/2005/gmd":MD_SecurityConstraints.
    gmd__MD_x005fSecurityConstraints_x005fType*  MD_x005fSecurityConstraints    1;	///< Required element.
    }                                   *__MD_x005fSecurityConstraints_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gmd":"http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectReference">.
/// Attribute "uuidref" of XSD type xs:string.
   @std::string*                         :uuidref                       0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.isotc211.org/2005/gmd":MD_ClassificationCode_PropertyType is a complexType.
///
/// class gmd__MD_x005fClassificationCode_x005fPropertyType operations:
/// - gmd__MD_x005fClassificationCode_x005fPropertyType* soap_new_gmd__MD_x005fClassificationCode_x005fPropertyType(soap*) allocate and default initialize
/// - gmd__MD_x005fClassificationCode_x005fPropertyType* soap_new_gmd__MD_x005fClassificationCode_x005fPropertyType(soap*, int num) allocate array and default initialize values
/// - gmd__MD_x005fClassificationCode_x005fPropertyType* soap_new_req_gmd__MD_x005fClassificationCode_x005fPropertyType(soap*, ...) allocate, set required members
/// - gmd__MD_x005fClassificationCode_x005fPropertyType* soap_new_set_gmd__MD_x005fClassificationCode_x005fPropertyType(soap*, ...) allocate, set all public members
/// - gmd__MD_x005fClassificationCode_x005fPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__MD_x005fClassificationCode_x005fPropertyType(soap*, gmd__MD_x005fClassificationCode_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fClassificationCode_x005fPropertyType(soap*, gmd__MD_x005fClassificationCode_x005fPropertyType*) serialize to a stream
/// - gmd__MD_x005fClassificationCode_x005fPropertyType* gmd__MD_x005fClassificationCode_x005fPropertyType::soap_dup(soap*) returns deep copy of gmd__MD_x005fClassificationCode_x005fPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__MD_x005fClassificationCode_x005fPropertyType::soap_del() deep deletes gmd__MD_x005fClassificationCode_x005fPropertyType data members, use only after gmd__MD_x005fClassificationCode_x005fPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__MD_x005fClassificationCode_x005fPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gmd__MD_x005fClassificationCode_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd:""http://www.isotc211.org/2005/gmd":MD_ClassificationCode.
    gco__CodeListValue_x005fType*        MD_x005fClassificationCode     1;	///< Required element.
    }                                   *__MD_x005fClassificationCode_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gmd":"http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
};

/// @brief "http://www.isotc211.org/2005/gmd":MD_RestrictionCode_PropertyType is a complexType.
///
/// class gmd__MD_x005fRestrictionCode_x005fPropertyType operations:
/// - gmd__MD_x005fRestrictionCode_x005fPropertyType* soap_new_gmd__MD_x005fRestrictionCode_x005fPropertyType(soap*) allocate and default initialize
/// - gmd__MD_x005fRestrictionCode_x005fPropertyType* soap_new_gmd__MD_x005fRestrictionCode_x005fPropertyType(soap*, int num) allocate array and default initialize values
/// - gmd__MD_x005fRestrictionCode_x005fPropertyType* soap_new_req_gmd__MD_x005fRestrictionCode_x005fPropertyType(soap*, ...) allocate, set required members
/// - gmd__MD_x005fRestrictionCode_x005fPropertyType* soap_new_set_gmd__MD_x005fRestrictionCode_x005fPropertyType(soap*, ...) allocate, set all public members
/// - gmd__MD_x005fRestrictionCode_x005fPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__MD_x005fRestrictionCode_x005fPropertyType(soap*, gmd__MD_x005fRestrictionCode_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fRestrictionCode_x005fPropertyType(soap*, gmd__MD_x005fRestrictionCode_x005fPropertyType*) serialize to a stream
/// - gmd__MD_x005fRestrictionCode_x005fPropertyType* gmd__MD_x005fRestrictionCode_x005fPropertyType::soap_dup(soap*) returns deep copy of gmd__MD_x005fRestrictionCode_x005fPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__MD_x005fRestrictionCode_x005fPropertyType::soap_del() deep deletes gmd__MD_x005fRestrictionCode_x005fPropertyType data members, use only after gmd__MD_x005fRestrictionCode_x005fPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__MD_x005fRestrictionCode_x005fPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gmd__MD_x005fRestrictionCode_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd:""http://www.isotc211.org/2005/gmd":MD_RestrictionCode.
    gco__CodeListValue_x005fType*        MD_x005fRestrictionCode        1;	///< Required element.
    }                                   *__MD_x005fRestrictionCode_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gmd":"http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
};

/// @brief "http://www.isotc211.org/2005/gmd":MD_Medium_PropertyType is a complexType.
///
/// class gmd__MD_x005fMedium_x005fPropertyType operations:
/// - gmd__MD_x005fMedium_x005fPropertyType* soap_new_gmd__MD_x005fMedium_x005fPropertyType(soap*) allocate and default initialize
/// - gmd__MD_x005fMedium_x005fPropertyType* soap_new_gmd__MD_x005fMedium_x005fPropertyType(soap*, int num) allocate array and default initialize values
/// - gmd__MD_x005fMedium_x005fPropertyType* soap_new_req_gmd__MD_x005fMedium_x005fPropertyType(soap*, ...) allocate, set required members
/// - gmd__MD_x005fMedium_x005fPropertyType* soap_new_set_gmd__MD_x005fMedium_x005fPropertyType(soap*, ...) allocate, set all public members
/// - gmd__MD_x005fMedium_x005fPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__MD_x005fMedium_x005fPropertyType(soap*, gmd__MD_x005fMedium_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fMedium_x005fPropertyType(soap*, gmd__MD_x005fMedium_x005fPropertyType*) serialize to a stream
/// - gmd__MD_x005fMedium_x005fPropertyType* gmd__MD_x005fMedium_x005fPropertyType::soap_dup(soap*) returns deep copy of gmd__MD_x005fMedium_x005fPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__MD_x005fMedium_x005fPropertyType::soap_del() deep deletes gmd__MD_x005fMedium_x005fPropertyType data members, use only after gmd__MD_x005fMedium_x005fPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__MD_x005fMedium_x005fPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gmd__MD_x005fMedium_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd:""http://www.isotc211.org/2005/gmd":MD_Medium.
    gmd__MD_x005fMedium_x005fType*       MD_x005fMedium                 1;	///< Required element.
    }                                   *__MD_x005fMedium_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gmd":"http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectReference">.
/// Attribute "uuidref" of XSD type xs:string.
   @std::string*                         :uuidref                       0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.isotc211.org/2005/gmd":MD_DigitalTransferOptions_PropertyType is a complexType.
///
/// class gmd__MD_x005fDigitalTransferOptions_x005fPropertyType operations:
/// - gmd__MD_x005fDigitalTransferOptions_x005fPropertyType* soap_new_gmd__MD_x005fDigitalTransferOptions_x005fPropertyType(soap*) allocate and default initialize
/// - gmd__MD_x005fDigitalTransferOptions_x005fPropertyType* soap_new_gmd__MD_x005fDigitalTransferOptions_x005fPropertyType(soap*, int num) allocate array and default initialize values
/// - gmd__MD_x005fDigitalTransferOptions_x005fPropertyType* soap_new_req_gmd__MD_x005fDigitalTransferOptions_x005fPropertyType(soap*, ...) allocate, set required members
/// - gmd__MD_x005fDigitalTransferOptions_x005fPropertyType* soap_new_set_gmd__MD_x005fDigitalTransferOptions_x005fPropertyType(soap*, ...) allocate, set all public members
/// - gmd__MD_x005fDigitalTransferOptions_x005fPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__MD_x005fDigitalTransferOptions_x005fPropertyType(soap*, gmd__MD_x005fDigitalTransferOptions_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fDigitalTransferOptions_x005fPropertyType(soap*, gmd__MD_x005fDigitalTransferOptions_x005fPropertyType*) serialize to a stream
/// - gmd__MD_x005fDigitalTransferOptions_x005fPropertyType* gmd__MD_x005fDigitalTransferOptions_x005fPropertyType::soap_dup(soap*) returns deep copy of gmd__MD_x005fDigitalTransferOptions_x005fPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__MD_x005fDigitalTransferOptions_x005fPropertyType::soap_del() deep deletes gmd__MD_x005fDigitalTransferOptions_x005fPropertyType data members, use only after gmd__MD_x005fDigitalTransferOptions_x005fPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__MD_x005fDigitalTransferOptions_x005fPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gmd__MD_x005fDigitalTransferOptions_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd:""http://www.isotc211.org/2005/gmd":MD_DigitalTransferOptions.
    gmd__MD_x005fDigitalTransferOptions_x005fType*  MD_x005fDigitalTransferOptions 1;	///< Required element.
    }                                   *__MD_x005fDigitalTransferOptions_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gmd":"http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectReference">.
/// Attribute "uuidref" of XSD type xs:string.
   @std::string*                         :uuidref                       0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.isotc211.org/2005/gmd":MD_StandardOrderProcess_PropertyType is a complexType.
///
/// class gmd__MD_x005fStandardOrderProcess_x005fPropertyType operations:
/// - gmd__MD_x005fStandardOrderProcess_x005fPropertyType* soap_new_gmd__MD_x005fStandardOrderProcess_x005fPropertyType(soap*) allocate and default initialize
/// - gmd__MD_x005fStandardOrderProcess_x005fPropertyType* soap_new_gmd__MD_x005fStandardOrderProcess_x005fPropertyType(soap*, int num) allocate array and default initialize values
/// - gmd__MD_x005fStandardOrderProcess_x005fPropertyType* soap_new_req_gmd__MD_x005fStandardOrderProcess_x005fPropertyType(soap*, ...) allocate, set required members
/// - gmd__MD_x005fStandardOrderProcess_x005fPropertyType* soap_new_set_gmd__MD_x005fStandardOrderProcess_x005fPropertyType(soap*, ...) allocate, set all public members
/// - gmd__MD_x005fStandardOrderProcess_x005fPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__MD_x005fStandardOrderProcess_x005fPropertyType(soap*, gmd__MD_x005fStandardOrderProcess_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fStandardOrderProcess_x005fPropertyType(soap*, gmd__MD_x005fStandardOrderProcess_x005fPropertyType*) serialize to a stream
/// - gmd__MD_x005fStandardOrderProcess_x005fPropertyType* gmd__MD_x005fStandardOrderProcess_x005fPropertyType::soap_dup(soap*) returns deep copy of gmd__MD_x005fStandardOrderProcess_x005fPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__MD_x005fStandardOrderProcess_x005fPropertyType::soap_del() deep deletes gmd__MD_x005fStandardOrderProcess_x005fPropertyType data members, use only after gmd__MD_x005fStandardOrderProcess_x005fPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__MD_x005fStandardOrderProcess_x005fPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gmd__MD_x005fStandardOrderProcess_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd:""http://www.isotc211.org/2005/gmd":MD_StandardOrderProcess.
    gmd__MD_x005fStandardOrderProcess_x005fType*  MD_x005fStandardOrderProcess   1;	///< Required element.
    }                                   *__MD_x005fStandardOrderProcess_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gmd":"http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectReference">.
/// Attribute "uuidref" of XSD type xs:string.
   @std::string*                         :uuidref                       0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.isotc211.org/2005/gmd":MD_Distributor_PropertyType is a complexType.
///
/// class gmd__MD_x005fDistributor_x005fPropertyType operations:
/// - gmd__MD_x005fDistributor_x005fPropertyType* soap_new_gmd__MD_x005fDistributor_x005fPropertyType(soap*) allocate and default initialize
/// - gmd__MD_x005fDistributor_x005fPropertyType* soap_new_gmd__MD_x005fDistributor_x005fPropertyType(soap*, int num) allocate array and default initialize values
/// - gmd__MD_x005fDistributor_x005fPropertyType* soap_new_req_gmd__MD_x005fDistributor_x005fPropertyType(soap*, ...) allocate, set required members
/// - gmd__MD_x005fDistributor_x005fPropertyType* soap_new_set_gmd__MD_x005fDistributor_x005fPropertyType(soap*, ...) allocate, set all public members
/// - gmd__MD_x005fDistributor_x005fPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__MD_x005fDistributor_x005fPropertyType(soap*, gmd__MD_x005fDistributor_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fDistributor_x005fPropertyType(soap*, gmd__MD_x005fDistributor_x005fPropertyType*) serialize to a stream
/// - gmd__MD_x005fDistributor_x005fPropertyType* gmd__MD_x005fDistributor_x005fPropertyType::soap_dup(soap*) returns deep copy of gmd__MD_x005fDistributor_x005fPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__MD_x005fDistributor_x005fPropertyType::soap_del() deep deletes gmd__MD_x005fDistributor_x005fPropertyType data members, use only after gmd__MD_x005fDistributor_x005fPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__MD_x005fDistributor_x005fPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gmd__MD_x005fDistributor_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd:""http://www.isotc211.org/2005/gmd":MD_Distributor.
    gmd__MD_x005fDistributor_x005fType*  MD_x005fDistributor            1;	///< Required element.
    }                                   *__MD_x005fDistributor_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gmd":"http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectReference">.
/// Attribute "uuidref" of XSD type xs:string.
   @std::string*                         :uuidref                       0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.isotc211.org/2005/gmd":MD_Distribution_PropertyType is a complexType.
///
/// class gmd__MD_x005fDistribution_x005fPropertyType operations:
/// - gmd__MD_x005fDistribution_x005fPropertyType* soap_new_gmd__MD_x005fDistribution_x005fPropertyType(soap*) allocate and default initialize
/// - gmd__MD_x005fDistribution_x005fPropertyType* soap_new_gmd__MD_x005fDistribution_x005fPropertyType(soap*, int num) allocate array and default initialize values
/// - gmd__MD_x005fDistribution_x005fPropertyType* soap_new_req_gmd__MD_x005fDistribution_x005fPropertyType(soap*, ...) allocate, set required members
/// - gmd__MD_x005fDistribution_x005fPropertyType* soap_new_set_gmd__MD_x005fDistribution_x005fPropertyType(soap*, ...) allocate, set all public members
/// - gmd__MD_x005fDistribution_x005fPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__MD_x005fDistribution_x005fPropertyType(soap*, gmd__MD_x005fDistribution_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fDistribution_x005fPropertyType(soap*, gmd__MD_x005fDistribution_x005fPropertyType*) serialize to a stream
/// - gmd__MD_x005fDistribution_x005fPropertyType* gmd__MD_x005fDistribution_x005fPropertyType::soap_dup(soap*) returns deep copy of gmd__MD_x005fDistribution_x005fPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__MD_x005fDistribution_x005fPropertyType::soap_del() deep deletes gmd__MD_x005fDistribution_x005fPropertyType data members, use only after gmd__MD_x005fDistribution_x005fPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__MD_x005fDistribution_x005fPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gmd__MD_x005fDistribution_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd:""http://www.isotc211.org/2005/gmd":MD_Distribution.
    gmd__MD_x005fDistribution_x005fType*  MD_x005fDistribution           1;	///< Required element.
    }                                   *__MD_x005fDistribution_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gmd":"http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectReference">.
/// Attribute "uuidref" of XSD type xs:string.
   @std::string*                         :uuidref                       0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.isotc211.org/2005/gmd":MD_Format_PropertyType is a complexType.
///
/// class gmd__MD_x005fFormat_x005fPropertyType operations:
/// - gmd__MD_x005fFormat_x005fPropertyType* soap_new_gmd__MD_x005fFormat_x005fPropertyType(soap*) allocate and default initialize
/// - gmd__MD_x005fFormat_x005fPropertyType* soap_new_gmd__MD_x005fFormat_x005fPropertyType(soap*, int num) allocate array and default initialize values
/// - gmd__MD_x005fFormat_x005fPropertyType* soap_new_req_gmd__MD_x005fFormat_x005fPropertyType(soap*, ...) allocate, set required members
/// - gmd__MD_x005fFormat_x005fPropertyType* soap_new_set_gmd__MD_x005fFormat_x005fPropertyType(soap*, ...) allocate, set all public members
/// - gmd__MD_x005fFormat_x005fPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__MD_x005fFormat_x005fPropertyType(soap*, gmd__MD_x005fFormat_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fFormat_x005fPropertyType(soap*, gmd__MD_x005fFormat_x005fPropertyType*) serialize to a stream
/// - gmd__MD_x005fFormat_x005fPropertyType* gmd__MD_x005fFormat_x005fPropertyType::soap_dup(soap*) returns deep copy of gmd__MD_x005fFormat_x005fPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__MD_x005fFormat_x005fPropertyType::soap_del() deep deletes gmd__MD_x005fFormat_x005fPropertyType data members, use only after gmd__MD_x005fFormat_x005fPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__MD_x005fFormat_x005fPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gmd__MD_x005fFormat_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd:""http://www.isotc211.org/2005/gmd":MD_Format.
    gmd__MD_x005fFormat_x005fType*       MD_x005fFormat                 1;	///< Required element.
    }                                   *__MD_x005fFormat_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gmd":"http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectReference">.
/// Attribute "uuidref" of XSD type xs:string.
   @std::string*                         :uuidref                       0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.isotc211.org/2005/gmd":MD_DistributionUnits_PropertyType is a complexType.
///
/// class gmd__MD_x005fDistributionUnits_x005fPropertyType operations:
/// - gmd__MD_x005fDistributionUnits_x005fPropertyType* soap_new_gmd__MD_x005fDistributionUnits_x005fPropertyType(soap*) allocate and default initialize
/// - gmd__MD_x005fDistributionUnits_x005fPropertyType* soap_new_gmd__MD_x005fDistributionUnits_x005fPropertyType(soap*, int num) allocate array and default initialize values
/// - gmd__MD_x005fDistributionUnits_x005fPropertyType* soap_new_req_gmd__MD_x005fDistributionUnits_x005fPropertyType(soap*, ...) allocate, set required members
/// - gmd__MD_x005fDistributionUnits_x005fPropertyType* soap_new_set_gmd__MD_x005fDistributionUnits_x005fPropertyType(soap*, ...) allocate, set all public members
/// - gmd__MD_x005fDistributionUnits_x005fPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__MD_x005fDistributionUnits_x005fPropertyType(soap*, gmd__MD_x005fDistributionUnits_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fDistributionUnits_x005fPropertyType(soap*, gmd__MD_x005fDistributionUnits_x005fPropertyType*) serialize to a stream
/// - gmd__MD_x005fDistributionUnits_x005fPropertyType* gmd__MD_x005fDistributionUnits_x005fPropertyType::soap_dup(soap*) returns deep copy of gmd__MD_x005fDistributionUnits_x005fPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__MD_x005fDistributionUnits_x005fPropertyType::soap_del() deep deletes gmd__MD_x005fDistributionUnits_x005fPropertyType data members, use only after gmd__MD_x005fDistributionUnits_x005fPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__MD_x005fDistributionUnits_x005fPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gmd__MD_x005fDistributionUnits_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd:""http://www.isotc211.org/2005/gmd":MD_DistributionUnits.
    gco__CodeListValue_x005fType*        MD_x005fDistributionUnits      1;	///< Required element.
    }                                   *__MD_x005fDistributionUnits_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gmd":"http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
};

/// @brief "http://www.isotc211.org/2005/gmd":MD_MediumFormatCode_PropertyType is a complexType.
///
/// class gmd__MD_x005fMediumFormatCode_x005fPropertyType operations:
/// - gmd__MD_x005fMediumFormatCode_x005fPropertyType* soap_new_gmd__MD_x005fMediumFormatCode_x005fPropertyType(soap*) allocate and default initialize
/// - gmd__MD_x005fMediumFormatCode_x005fPropertyType* soap_new_gmd__MD_x005fMediumFormatCode_x005fPropertyType(soap*, int num) allocate array and default initialize values
/// - gmd__MD_x005fMediumFormatCode_x005fPropertyType* soap_new_req_gmd__MD_x005fMediumFormatCode_x005fPropertyType(soap*, ...) allocate, set required members
/// - gmd__MD_x005fMediumFormatCode_x005fPropertyType* soap_new_set_gmd__MD_x005fMediumFormatCode_x005fPropertyType(soap*, ...) allocate, set all public members
/// - gmd__MD_x005fMediumFormatCode_x005fPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__MD_x005fMediumFormatCode_x005fPropertyType(soap*, gmd__MD_x005fMediumFormatCode_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fMediumFormatCode_x005fPropertyType(soap*, gmd__MD_x005fMediumFormatCode_x005fPropertyType*) serialize to a stream
/// - gmd__MD_x005fMediumFormatCode_x005fPropertyType* gmd__MD_x005fMediumFormatCode_x005fPropertyType::soap_dup(soap*) returns deep copy of gmd__MD_x005fMediumFormatCode_x005fPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__MD_x005fMediumFormatCode_x005fPropertyType::soap_del() deep deletes gmd__MD_x005fMediumFormatCode_x005fPropertyType data members, use only after gmd__MD_x005fMediumFormatCode_x005fPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__MD_x005fMediumFormatCode_x005fPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gmd__MD_x005fMediumFormatCode_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd:""http://www.isotc211.org/2005/gmd":MD_MediumFormatCode.
    gco__CodeListValue_x005fType*        MD_x005fMediumFormatCode       1;	///< Required element.
    }                                   *__MD_x005fMediumFormatCode_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gmd":"http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
};

/// @brief "http://www.isotc211.org/2005/gmd":MD_MediumNameCode_PropertyType is a complexType.
///
/// class gmd__MD_x005fMediumNameCode_x005fPropertyType operations:
/// - gmd__MD_x005fMediumNameCode_x005fPropertyType* soap_new_gmd__MD_x005fMediumNameCode_x005fPropertyType(soap*) allocate and default initialize
/// - gmd__MD_x005fMediumNameCode_x005fPropertyType* soap_new_gmd__MD_x005fMediumNameCode_x005fPropertyType(soap*, int num) allocate array and default initialize values
/// - gmd__MD_x005fMediumNameCode_x005fPropertyType* soap_new_req_gmd__MD_x005fMediumNameCode_x005fPropertyType(soap*, ...) allocate, set required members
/// - gmd__MD_x005fMediumNameCode_x005fPropertyType* soap_new_set_gmd__MD_x005fMediumNameCode_x005fPropertyType(soap*, ...) allocate, set all public members
/// - gmd__MD_x005fMediumNameCode_x005fPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__MD_x005fMediumNameCode_x005fPropertyType(soap*, gmd__MD_x005fMediumNameCode_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fMediumNameCode_x005fPropertyType(soap*, gmd__MD_x005fMediumNameCode_x005fPropertyType*) serialize to a stream
/// - gmd__MD_x005fMediumNameCode_x005fPropertyType* gmd__MD_x005fMediumNameCode_x005fPropertyType::soap_dup(soap*) returns deep copy of gmd__MD_x005fMediumNameCode_x005fPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__MD_x005fMediumNameCode_x005fPropertyType::soap_del() deep deletes gmd__MD_x005fMediumNameCode_x005fPropertyType data members, use only after gmd__MD_x005fMediumNameCode_x005fPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__MD_x005fMediumNameCode_x005fPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gmd__MD_x005fMediumNameCode_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd:""http://www.isotc211.org/2005/gmd":MD_MediumNameCode.
    gco__CodeListValue_x005fType*        MD_x005fMediumNameCode         1;	///< Required element.
    }                                   *__MD_x005fMediumNameCode_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gmd":"http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
};

/// @brief "http://www.isotc211.org/2005/gmd":MD_MaintenanceInformation_PropertyType is a complexType.
///
/// class gmd__MD_x005fMaintenanceInformation_x005fPropertyType operations:
/// - gmd__MD_x005fMaintenanceInformation_x005fPropertyType* soap_new_gmd__MD_x005fMaintenanceInformation_x005fPropertyType(soap*) allocate and default initialize
/// - gmd__MD_x005fMaintenanceInformation_x005fPropertyType* soap_new_gmd__MD_x005fMaintenanceInformation_x005fPropertyType(soap*, int num) allocate array and default initialize values
/// - gmd__MD_x005fMaintenanceInformation_x005fPropertyType* soap_new_req_gmd__MD_x005fMaintenanceInformation_x005fPropertyType(soap*, ...) allocate, set required members
/// - gmd__MD_x005fMaintenanceInformation_x005fPropertyType* soap_new_set_gmd__MD_x005fMaintenanceInformation_x005fPropertyType(soap*, ...) allocate, set all public members
/// - gmd__MD_x005fMaintenanceInformation_x005fPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__MD_x005fMaintenanceInformation_x005fPropertyType(soap*, gmd__MD_x005fMaintenanceInformation_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fMaintenanceInformation_x005fPropertyType(soap*, gmd__MD_x005fMaintenanceInformation_x005fPropertyType*) serialize to a stream
/// - gmd__MD_x005fMaintenanceInformation_x005fPropertyType* gmd__MD_x005fMaintenanceInformation_x005fPropertyType::soap_dup(soap*) returns deep copy of gmd__MD_x005fMaintenanceInformation_x005fPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__MD_x005fMaintenanceInformation_x005fPropertyType::soap_del() deep deletes gmd__MD_x005fMaintenanceInformation_x005fPropertyType data members, use only after gmd__MD_x005fMaintenanceInformation_x005fPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__MD_x005fMaintenanceInformation_x005fPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gmd__MD_x005fMaintenanceInformation_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd:""http://www.isotc211.org/2005/gmd":MD_MaintenanceInformation.
    gmd__MD_x005fMaintenanceInformation_x005fType*  MD_x005fMaintenanceInformation 1;	///< Required element.
    }                                   *__MD_x005fMaintenanceInformation_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gmd":"http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectReference">.
/// Attribute "uuidref" of XSD type xs:string.
   @std::string*                         :uuidref                       0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.isotc211.org/2005/gmd":MD_ScopeDescription_Type is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Description of the class of information covered by the information
/// </BLOCKQUOTE></PRE>
/// class gmd__MD_x005fScopeDescription_x005fType operations:
/// - gmd__MD_x005fScopeDescription_x005fType* soap_new_gmd__MD_x005fScopeDescription_x005fType(soap*) allocate and default initialize
/// - gmd__MD_x005fScopeDescription_x005fType* soap_new_gmd__MD_x005fScopeDescription_x005fType(soap*, int num) allocate array and default initialize values
/// - gmd__MD_x005fScopeDescription_x005fType* soap_new_req_gmd__MD_x005fScopeDescription_x005fType(soap*, ...) allocate, set required members
/// - gmd__MD_x005fScopeDescription_x005fType* soap_new_set_gmd__MD_x005fScopeDescription_x005fType(soap*, ...) allocate, set all public members
/// - gmd__MD_x005fScopeDescription_x005fType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__MD_x005fScopeDescription_x005fType(soap*, gmd__MD_x005fScopeDescription_x005fType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fScopeDescription_x005fType(soap*, gmd__MD_x005fScopeDescription_x005fType*) serialize to a stream
/// - gmd__MD_x005fScopeDescription_x005fType* gmd__MD_x005fScopeDescription_x005fType::soap_dup(soap*) returns deep copy of gmd__MD_x005fScopeDescription_x005fType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__MD_x005fScopeDescription_x005fType::soap_del() deep deletes gmd__MD_x005fScopeDescription_x005fType data members, use only after gmd__MD_x005fScopeDescription_x005fType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__MD_x005fScopeDescription_x005fType : public xsd__anyType
{ public:
//  BEGIN CHOICE <xs:choice>
   $int                                  __union_MD_x005fScopeDescription_x005fType;	///< Union _gmd__union_MD_x005fScopeDescription_x005fType selector: set to SOAP_UNION__gmd__union_MD_x005fScopeDescription_x005fType_<fieldname>
/// Union for choice in gmd__MD_x005fScopeDescription_x005fType.
    union _gmd__union_MD_x005fScopeDescription_x005fType
    {
/// Vector of gco__ObjectReference_x005fPropertyType* of length 1..unbounded.
    std::vector<gco__ObjectReference_x005fPropertyType*> *attributes                     1;
/// Vector of gco__ObjectReference_x005fPropertyType* of length 1..unbounded.
    std::vector<gco__ObjectReference_x005fPropertyType*> *features                       1;
/// Vector of gco__ObjectReference_x005fPropertyType* of length 1..unbounded.
    std::vector<gco__ObjectReference_x005fPropertyType*> *featureInstances               1;
/// Vector of gco__ObjectReference_x005fPropertyType* of length 1..unbounded.
    std::vector<gco__ObjectReference_x005fPropertyType*> *attributeInstances             1;
/// Element "dataset" of XSD type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  dataset                        nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "other" of XSD type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  other                          nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_MD_x005fScopeDescription_x005fType;
//  END OF CHOICE
};

/// @brief "http://www.isotc211.org/2005/gmd":MD_ScopeDescription_PropertyType is a complexType.
///
/// class gmd__MD_x005fScopeDescription_x005fPropertyType operations:
/// - gmd__MD_x005fScopeDescription_x005fPropertyType* soap_new_gmd__MD_x005fScopeDescription_x005fPropertyType(soap*) allocate and default initialize
/// - gmd__MD_x005fScopeDescription_x005fPropertyType* soap_new_gmd__MD_x005fScopeDescription_x005fPropertyType(soap*, int num) allocate array and default initialize values
/// - gmd__MD_x005fScopeDescription_x005fPropertyType* soap_new_req_gmd__MD_x005fScopeDescription_x005fPropertyType(soap*, ...) allocate, set required members
/// - gmd__MD_x005fScopeDescription_x005fPropertyType* soap_new_set_gmd__MD_x005fScopeDescription_x005fPropertyType(soap*, ...) allocate, set all public members
/// - gmd__MD_x005fScopeDescription_x005fPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__MD_x005fScopeDescription_x005fPropertyType(soap*, gmd__MD_x005fScopeDescription_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fScopeDescription_x005fPropertyType(soap*, gmd__MD_x005fScopeDescription_x005fPropertyType*) serialize to a stream
/// - gmd__MD_x005fScopeDescription_x005fPropertyType* gmd__MD_x005fScopeDescription_x005fPropertyType::soap_dup(soap*) returns deep copy of gmd__MD_x005fScopeDescription_x005fPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__MD_x005fScopeDescription_x005fPropertyType::soap_del() deep deletes gmd__MD_x005fScopeDescription_x005fPropertyType data members, use only after gmd__MD_x005fScopeDescription_x005fPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__MD_x005fScopeDescription_x005fPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gmd__MD_x005fScopeDescription_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd:""http://www.isotc211.org/2005/gmd":MD_ScopeDescription.
    gmd__MD_x005fScopeDescription_x005fType*  MD_x005fScopeDescription       1;	///< Required element.
    }                                   *__MD_x005fScopeDescription_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gmd":"http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
};

/// @brief "http://www.isotc211.org/2005/gmd":MD_MaintenanceFrequencyCode_PropertyType is a complexType.
///
/// class gmd__MD_x005fMaintenanceFrequencyCode_x005fPropertyType operations:
/// - gmd__MD_x005fMaintenanceFrequencyCode_x005fPropertyType* soap_new_gmd__MD_x005fMaintenanceFrequencyCode_x005fPropertyType(soap*) allocate and default initialize
/// - gmd__MD_x005fMaintenanceFrequencyCode_x005fPropertyType* soap_new_gmd__MD_x005fMaintenanceFrequencyCode_x005fPropertyType(soap*, int num) allocate array and default initialize values
/// - gmd__MD_x005fMaintenanceFrequencyCode_x005fPropertyType* soap_new_req_gmd__MD_x005fMaintenanceFrequencyCode_x005fPropertyType(soap*, ...) allocate, set required members
/// - gmd__MD_x005fMaintenanceFrequencyCode_x005fPropertyType* soap_new_set_gmd__MD_x005fMaintenanceFrequencyCode_x005fPropertyType(soap*, ...) allocate, set all public members
/// - gmd__MD_x005fMaintenanceFrequencyCode_x005fPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__MD_x005fMaintenanceFrequencyCode_x005fPropertyType(soap*, gmd__MD_x005fMaintenanceFrequencyCode_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fMaintenanceFrequencyCode_x005fPropertyType(soap*, gmd__MD_x005fMaintenanceFrequencyCode_x005fPropertyType*) serialize to a stream
/// - gmd__MD_x005fMaintenanceFrequencyCode_x005fPropertyType* gmd__MD_x005fMaintenanceFrequencyCode_x005fPropertyType::soap_dup(soap*) returns deep copy of gmd__MD_x005fMaintenanceFrequencyCode_x005fPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__MD_x005fMaintenanceFrequencyCode_x005fPropertyType::soap_del() deep deletes gmd__MD_x005fMaintenanceFrequencyCode_x005fPropertyType data members, use only after gmd__MD_x005fMaintenanceFrequencyCode_x005fPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__MD_x005fMaintenanceFrequencyCode_x005fPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gmd__MD_x005fMaintenanceFrequencyCode_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd:""http://www.isotc211.org/2005/gmd":MD_MaintenanceFrequencyCode.
    gco__CodeListValue_x005fType*        MD_x005fMaintenanceFrequencyCode 1;	///< Required element.
    }                                   *__MD_x005fMaintenanceFrequencyCode_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gmd":"http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
};

/// @brief "http://www.isotc211.org/2005/gmd":MD_ScopeCode_PropertyType is a complexType.
///
/// class gmd__MD_x005fScopeCode_x005fPropertyType operations:
/// - gmd__MD_x005fScopeCode_x005fPropertyType* soap_new_gmd__MD_x005fScopeCode_x005fPropertyType(soap*) allocate and default initialize
/// - gmd__MD_x005fScopeCode_x005fPropertyType* soap_new_gmd__MD_x005fScopeCode_x005fPropertyType(soap*, int num) allocate array and default initialize values
/// - gmd__MD_x005fScopeCode_x005fPropertyType* soap_new_req_gmd__MD_x005fScopeCode_x005fPropertyType(soap*, ...) allocate, set required members
/// - gmd__MD_x005fScopeCode_x005fPropertyType* soap_new_set_gmd__MD_x005fScopeCode_x005fPropertyType(soap*, ...) allocate, set all public members
/// - gmd__MD_x005fScopeCode_x005fPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__MD_x005fScopeCode_x005fPropertyType(soap*, gmd__MD_x005fScopeCode_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fScopeCode_x005fPropertyType(soap*, gmd__MD_x005fScopeCode_x005fPropertyType*) serialize to a stream
/// - gmd__MD_x005fScopeCode_x005fPropertyType* gmd__MD_x005fScopeCode_x005fPropertyType::soap_dup(soap*) returns deep copy of gmd__MD_x005fScopeCode_x005fPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__MD_x005fScopeCode_x005fPropertyType::soap_del() deep deletes gmd__MD_x005fScopeCode_x005fPropertyType data members, use only after gmd__MD_x005fScopeCode_x005fPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__MD_x005fScopeCode_x005fPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gmd__MD_x005fScopeCode_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd:""http://www.isotc211.org/2005/gmd":MD_ScopeCode.
    gco__CodeListValue_x005fType*        MD_x005fScopeCode              1;	///< Required element.
    }                                   *__MD_x005fScopeCode_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gmd":"http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
};

/// @brief "http://www.isotc211.org/2005/gmd":PT_Locale_PropertyType is a complexType.
///
/// class gmd__PT_x005fLocale_x005fPropertyType operations:
/// - gmd__PT_x005fLocale_x005fPropertyType* soap_new_gmd__PT_x005fLocale_x005fPropertyType(soap*) allocate and default initialize
/// - gmd__PT_x005fLocale_x005fPropertyType* soap_new_gmd__PT_x005fLocale_x005fPropertyType(soap*, int num) allocate array and default initialize values
/// - gmd__PT_x005fLocale_x005fPropertyType* soap_new_req_gmd__PT_x005fLocale_x005fPropertyType(soap*, ...) allocate, set required members
/// - gmd__PT_x005fLocale_x005fPropertyType* soap_new_set_gmd__PT_x005fLocale_x005fPropertyType(soap*, ...) allocate, set all public members
/// - gmd__PT_x005fLocale_x005fPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__PT_x005fLocale_x005fPropertyType(soap*, gmd__PT_x005fLocale_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__PT_x005fLocale_x005fPropertyType(soap*, gmd__PT_x005fLocale_x005fPropertyType*) serialize to a stream
/// - gmd__PT_x005fLocale_x005fPropertyType* gmd__PT_x005fLocale_x005fPropertyType::soap_dup(soap*) returns deep copy of gmd__PT_x005fLocale_x005fPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__PT_x005fLocale_x005fPropertyType::soap_del() deep deletes gmd__PT_x005fLocale_x005fPropertyType data members, use only after gmd__PT_x005fLocale_x005fPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__PT_x005fLocale_x005fPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gmd__PT_x005fLocale_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd:""http://www.isotc211.org/2005/gmd":PT_Locale.
    gmd__PT_x005fLocale_x005fType*       PT_x005fLocale                 1;	///< Required element.
    }                                   *__PT_x005fLocale_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gmd":"http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectReference">.
/// Attribute "uuidref" of XSD type xs:string.
   @std::string*                         :uuidref                       0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.isotc211.org/2005/gmd":PT_LocaleContainer_Type is a complexType.
///
/// class gmd__PT_x005fLocaleContainer_x005fType operations:
/// - gmd__PT_x005fLocaleContainer_x005fType* soap_new_gmd__PT_x005fLocaleContainer_x005fType(soap*) allocate and default initialize
/// - gmd__PT_x005fLocaleContainer_x005fType* soap_new_gmd__PT_x005fLocaleContainer_x005fType(soap*, int num) allocate array and default initialize values
/// - gmd__PT_x005fLocaleContainer_x005fType* soap_new_req_gmd__PT_x005fLocaleContainer_x005fType(soap*, ...) allocate, set required members
/// - gmd__PT_x005fLocaleContainer_x005fType* soap_new_set_gmd__PT_x005fLocaleContainer_x005fType(soap*, ...) allocate, set all public members
/// - gmd__PT_x005fLocaleContainer_x005fType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__PT_x005fLocaleContainer_x005fType(soap*, gmd__PT_x005fLocaleContainer_x005fType*) deserialize from a stream
/// - int soap_write_gmd__PT_x005fLocaleContainer_x005fType(soap*, gmd__PT_x005fLocaleContainer_x005fType*) serialize to a stream
/// - gmd__PT_x005fLocaleContainer_x005fType* gmd__PT_x005fLocaleContainer_x005fType::soap_dup(soap*) returns deep copy of gmd__PT_x005fLocaleContainer_x005fType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__PT_x005fLocaleContainer_x005fType::soap_del() deep deletes gmd__PT_x005fLocaleContainer_x005fType data members, use only after gmd__PT_x005fLocaleContainer_x005fType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__PT_x005fLocaleContainer_x005fType : public xsd__anyType
{ public:
/// Element "description" of XSD type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  description                    1;	///< Required element.
/// Element "locale" of XSD type "http://www.isotc211.org/2005/gmd":PT_Locale_PropertyType.
    gmd__PT_x005fLocale_x005fPropertyType*  locale                         1;	///< Required element.
/// Vector of gmd__CI_x005fDate_x005fPropertyType* of length 1..unbounded.
    std::vector<gmd__CI_x005fDate_x005fPropertyType*> date                           1;
/// Vector of gmd__CI_x005fResponsibleParty_x005fPropertyType* of length 1..unbounded.
    std::vector<gmd__CI_x005fResponsibleParty_x005fPropertyType*> responsibleParty               1;
/// Vector of gmd__LocalisedCharacterString_x005fPropertyType* of length 1..unbounded.
    std::vector<gmd__LocalisedCharacterString_x005fPropertyType*> localisedString                1;
};

/// @brief "http://www.isotc211.org/2005/gmd":PT_LocaleContainer_PropertyType is a complexType.
///
/// class gmd__PT_x005fLocaleContainer_x005fPropertyType operations:
/// - gmd__PT_x005fLocaleContainer_x005fPropertyType* soap_new_gmd__PT_x005fLocaleContainer_x005fPropertyType(soap*) allocate and default initialize
/// - gmd__PT_x005fLocaleContainer_x005fPropertyType* soap_new_gmd__PT_x005fLocaleContainer_x005fPropertyType(soap*, int num) allocate array and default initialize values
/// - gmd__PT_x005fLocaleContainer_x005fPropertyType* soap_new_req_gmd__PT_x005fLocaleContainer_x005fPropertyType(soap*, ...) allocate, set required members
/// - gmd__PT_x005fLocaleContainer_x005fPropertyType* soap_new_set_gmd__PT_x005fLocaleContainer_x005fPropertyType(soap*, ...) allocate, set all public members
/// - gmd__PT_x005fLocaleContainer_x005fPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__PT_x005fLocaleContainer_x005fPropertyType(soap*, gmd__PT_x005fLocaleContainer_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__PT_x005fLocaleContainer_x005fPropertyType(soap*, gmd__PT_x005fLocaleContainer_x005fPropertyType*) serialize to a stream
/// - gmd__PT_x005fLocaleContainer_x005fPropertyType* gmd__PT_x005fLocaleContainer_x005fPropertyType::soap_dup(soap*) returns deep copy of gmd__PT_x005fLocaleContainer_x005fPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__PT_x005fLocaleContainer_x005fPropertyType::soap_del() deep deletes gmd__PT_x005fLocaleContainer_x005fPropertyType data members, use only after gmd__PT_x005fLocaleContainer_x005fPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__PT_x005fLocaleContainer_x005fPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gmd__PT_x005fLocaleContainer_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd:""http://www.isotc211.org/2005/gmd":PT_LocaleContainer.
    gmd__PT_x005fLocaleContainer_x005fType*  PT_x005fLocaleContainer        1;	///< Required element.
    }                                   *__PT_x005fLocaleContainer_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gmd":"http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectReference">.
/// Attribute "uuidref" of XSD type xs:string.
   @std::string*                         :uuidref                       0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.isotc211.org/2005/gmd":LanguageCode_PropertyType is a complexType.
///
/// class gmd__LanguageCode_x005fPropertyType operations:
/// - gmd__LanguageCode_x005fPropertyType* soap_new_gmd__LanguageCode_x005fPropertyType(soap*) allocate and default initialize
/// - gmd__LanguageCode_x005fPropertyType* soap_new_gmd__LanguageCode_x005fPropertyType(soap*, int num) allocate array and default initialize values
/// - gmd__LanguageCode_x005fPropertyType* soap_new_req_gmd__LanguageCode_x005fPropertyType(soap*, ...) allocate, set required members
/// - gmd__LanguageCode_x005fPropertyType* soap_new_set_gmd__LanguageCode_x005fPropertyType(soap*, ...) allocate, set all public members
/// - gmd__LanguageCode_x005fPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__LanguageCode_x005fPropertyType(soap*, gmd__LanguageCode_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__LanguageCode_x005fPropertyType(soap*, gmd__LanguageCode_x005fPropertyType*) serialize to a stream
/// - gmd__LanguageCode_x005fPropertyType* gmd__LanguageCode_x005fPropertyType::soap_dup(soap*) returns deep copy of gmd__LanguageCode_x005fPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__LanguageCode_x005fPropertyType::soap_del() deep deletes gmd__LanguageCode_x005fPropertyType data members, use only after gmd__LanguageCode_x005fPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__LanguageCode_x005fPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gmd__LanguageCode_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd:""http://www.isotc211.org/2005/gmd":LanguageCode.
    gco__CodeListValue_x005fType*        LanguageCode                   1;	///< Required element.
    }                                   *__LanguageCode_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gmd":"http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
};

/// @brief "http://www.isotc211.org/2005/gmd":Country_PropertyType is a complexType.
///
/// class gmd__Country_x005fPropertyType operations:
/// - gmd__Country_x005fPropertyType* soap_new_gmd__Country_x005fPropertyType(soap*) allocate and default initialize
/// - gmd__Country_x005fPropertyType* soap_new_gmd__Country_x005fPropertyType(soap*, int num) allocate array and default initialize values
/// - gmd__Country_x005fPropertyType* soap_new_req_gmd__Country_x005fPropertyType(soap*, ...) allocate, set required members
/// - gmd__Country_x005fPropertyType* soap_new_set_gmd__Country_x005fPropertyType(soap*, ...) allocate, set all public members
/// - gmd__Country_x005fPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__Country_x005fPropertyType(soap*, gmd__Country_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__Country_x005fPropertyType(soap*, gmd__Country_x005fPropertyType*) serialize to a stream
/// - gmd__Country_x005fPropertyType* gmd__Country_x005fPropertyType::soap_dup(soap*) returns deep copy of gmd__Country_x005fPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__Country_x005fPropertyType::soap_del() deep deletes gmd__Country_x005fPropertyType data members, use only after gmd__Country_x005fPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__Country_x005fPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gmd__Country_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd:""http://www.isotc211.org/2005/gmd":Country.
    gco__CodeListValue_x005fType*        Country                        1;	///< Required element.
    }                                   *__Country_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gmd":"http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
};


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://www.w3.org/1999/xlink                                             *
 *                                                                            *
\******************************************************************************/

/// @brief "http://www.w3.org/1999/xlink":simple is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Intended for use as the type of user-declared elements to make them
///   simple links.
/// </BLOCKQUOTE></PRE>
/// class xlink__simple operations:
/// - xlink__simple* soap_new_xlink__simple(soap*) allocate and default initialize
/// - xlink__simple* soap_new_xlink__simple(soap*, int num) allocate array and default initialize values
/// - xlink__simple* soap_new_req_xlink__simple(soap*, ...) allocate, set required members
/// - xlink__simple* soap_new_set_xlink__simple(soap*, ...) allocate, set all public members
/// - xlink__simple::soap_default(soap*) default initialize members
/// - int soap_read_xlink__simple(soap*, xlink__simple*) deserialize from a stream
/// - int soap_write_xlink__simple(soap*, xlink__simple*) serialize to a stream
/// - xlink__simple* xlink__simple::soap_dup(soap*) returns deep copy of xlink__simple, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - xlink__simple::soap_del() deep deletes xlink__simple data members, use only after xlink__simple::soap_dup(NULL) (use soapcpp2 -Ed)
class xlink__simple : public xsd__anyType
{ public:
//  BEGIN GROUP <xs:group name="simpleModel">
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
//  END OF GROUP
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
/// @todo This mixed content complexType is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __mixed                       0;	///< Catch mixed content in XML string.
};

/// @brief "http://www.w3.org/1999/xlink":extended is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Intended for use as the type of user-declared elements to make them
///   extended links.
///   Note that the elements referenced in the content model are all abstract.
///   The intention is that by simply declaring elements with these as their
///   substitutionGroup, all the right things will happen.
/// </BLOCKQUOTE></PRE>
/// class xlink__extended operations:
/// - xlink__extended* soap_new_xlink__extended(soap*) allocate and default initialize
/// - xlink__extended* soap_new_xlink__extended(soap*, int num) allocate array and default initialize values
/// - xlink__extended* soap_new_req_xlink__extended(soap*, ...) allocate, set required members
/// - xlink__extended* soap_new_set_xlink__extended(soap*, ...) allocate, set all public members
/// - xlink__extended::soap_default(soap*) default initialize members
/// - int soap_read_xlink__extended(soap*, xlink__extended*) deserialize from a stream
/// - int soap_write_xlink__extended(soap*, xlink__extended*) serialize to a stream
/// - xlink__extended* xlink__extended::soap_dup(soap*) returns deep copy of xlink__extended, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - xlink__extended::soap_del() deep deletes xlink__extended data members, use only after xlink__extended::soap_dup(NULL) (use soapcpp2 -Ed)
class xlink__extended : public xsd__anyType
{ public:
//  BEGIN GROUP <xs:group name="extendedModel" minOccurs="0" maxOccurs="unbounded">
//  BEGIN CHOICE <xs:choice minOccurs="0" maxOccurs="unbounded">
   $int                                  __size_extended                0;
    class __xlink__union_extended
    {
   $int                                  __union_extended               0;	///< Union _xlink__union_extended selector: set to SOAP_UNION__xlink__union_extended_<fieldname> or 0 to omit
    union _xlink__union_extended
    {
/// Reference "http://www.w3.org/1999/xlink":title to abstract element.
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="title"> with global elements
//  END OF SUBSTITUTIONS
/// Reference "http://www.w3.org/1999/xlink":resource to abstract element.
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="resource"> with global elements
//  END OF SUBSTITUTIONS
/// Reference "http://www.w3.org/1999/xlink":locator to abstract element.
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="locator"> with global elements
//  END OF SUBSTITUTIONS
/// Reference "http://www.w3.org/1999/xlink":arc to abstract element.
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="arc"> with global elements
//  END OF SUBSTITUTIONS
    }                                    union_extended                ;
    }                                   *__union_extended              ;
//  END OF CHOICE
//  END OF GROUP
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":extendedAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType                 xlink__type                    1;	///< Fixed attribute value="extended".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.w3.org/1999/xlink":titleEltType is a complexType.
///
/// class xlink__titleEltType operations:
/// - xlink__titleEltType* soap_new_xlink__titleEltType(soap*) allocate and default initialize
/// - xlink__titleEltType* soap_new_xlink__titleEltType(soap*, int num) allocate array and default initialize values
/// - xlink__titleEltType* soap_new_req_xlink__titleEltType(soap*, ...) allocate, set required members
/// - xlink__titleEltType* soap_new_set_xlink__titleEltType(soap*, ...) allocate, set all public members
/// - xlink__titleEltType::soap_default(soap*) default initialize members
/// - int soap_read_xlink__titleEltType(soap*, xlink__titleEltType*) deserialize from a stream
/// - int soap_write_xlink__titleEltType(soap*, xlink__titleEltType*) serialize to a stream
/// - xlink__titleEltType* xlink__titleEltType::soap_dup(soap*) returns deep copy of xlink__titleEltType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - xlink__titleEltType::soap_del() deep deletes xlink__titleEltType data members, use only after xlink__titleEltType::soap_dup(NULL) (use soapcpp2 -Ed)
class xlink__titleEltType : public xsd__anyType
{ public:
//  BEGIN GROUP <xs:group name="titleModel">
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
//  END OF GROUP
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":titleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType                 xlink__type                    1;	///< Fixed attribute value="title".
/// <PRE><BLOCKQUOTE>
///   xml:lang is not required, but provides much of the
///   motivation for title elements in addition to attributes, and so
///   is provided here for convenience.
/// </BLOCKQUOTE></PRE>
/// Imported attribute reference xml:lang.
   @_xml__lang*                          xml__lang                      0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
/// @todo This mixed content complexType is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __mixed                       0;	///< Catch mixed content in XML string.
};

/// @brief "http://www.w3.org/1999/xlink":resourceType is a complexType.
///
/// class xlink__resourceType operations:
/// - xlink__resourceType* soap_new_xlink__resourceType(soap*) allocate and default initialize
/// - xlink__resourceType* soap_new_xlink__resourceType(soap*, int num) allocate array and default initialize values
/// - xlink__resourceType* soap_new_req_xlink__resourceType(soap*, ...) allocate, set required members
/// - xlink__resourceType* soap_new_set_xlink__resourceType(soap*, ...) allocate, set all public members
/// - xlink__resourceType::soap_default(soap*) default initialize members
/// - int soap_read_xlink__resourceType(soap*, xlink__resourceType*) deserialize from a stream
/// - int soap_write_xlink__resourceType(soap*, xlink__resourceType*) serialize to a stream
/// - xlink__resourceType* xlink__resourceType::soap_dup(soap*) returns deep copy of xlink__resourceType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - xlink__resourceType::soap_del() deep deletes xlink__resourceType data members, use only after xlink__resourceType::soap_dup(NULL) (use soapcpp2 -Ed)
class xlink__resourceType : public xsd__anyType
{ public:
//  BEGIN GROUP <xs:group name="resourceModel">
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
//  END OF GROUP
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":resourceAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType                 xlink__type                    1;	///< Fixed attribute value="resource".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":label.
   @xlink__labelType*                    xlink__label                   0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
/// @todo This mixed content complexType is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __mixed                       0;	///< Catch mixed content in XML string.
};

/// @brief "http://www.w3.org/1999/xlink":locatorType is a complexType.
///
/// class xlink__locatorType operations:
/// - xlink__locatorType* soap_new_xlink__locatorType(soap*) allocate and default initialize
/// - xlink__locatorType* soap_new_xlink__locatorType(soap*, int num) allocate array and default initialize values
/// - xlink__locatorType* soap_new_req_xlink__locatorType(soap*, ...) allocate, set required members
/// - xlink__locatorType* soap_new_set_xlink__locatorType(soap*, ...) allocate, set all public members
/// - xlink__locatorType::soap_default(soap*) default initialize members
/// - int soap_read_xlink__locatorType(soap*, xlink__locatorType*) deserialize from a stream
/// - int soap_write_xlink__locatorType(soap*, xlink__locatorType*) serialize to a stream
/// - xlink__locatorType* xlink__locatorType::soap_dup(soap*) returns deep copy of xlink__locatorType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - xlink__locatorType::soap_del() deep deletes xlink__locatorType data members, use only after xlink__locatorType::soap_dup(NULL) (use soapcpp2 -Ed)
class xlink__locatorType : public xsd__anyType
{ public:
//  BEGIN GROUP <xs:group name="locatorModel">
/// Reference "http://www.w3.org/1999/xlink":title to abstract element.
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="title" minOccurs="0" maxOccurs="unbounded"> with global elements
   $int                                  __sizetitle                    0;
    class __xlink__union_locatorType
    {
   $int                                  __uniontitle                   0;	///< Union _xlink__union_locatorType selector: set to SOAP_UNION__xlink__union_locatorType_<fieldname> or 0 to omit
/// Union for substitutionGroup xlink__title.
    union _xlink__union_locatorType
    {
    }                                    union_locatorType             ;
    }                                   *__union_locatorType           ;
//  END OF SUBSTITUTIONS
//  END OF GROUP
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":locatorAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType                 xlink__type                    1;	///< Fixed attribute value="locator".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType                      xlink__href                    1;	///< Required attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   label is not required, but locators have no particular
///   XLink function if they are not labeled.
/// </BLOCKQUOTE></PRE>
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":label.
   @xlink__labelType*                    xlink__label                   0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.w3.org/1999/xlink":arcType is a complexType.
///
/// class xlink__arcType operations:
/// - xlink__arcType* soap_new_xlink__arcType(soap*) allocate and default initialize
/// - xlink__arcType* soap_new_xlink__arcType(soap*, int num) allocate array and default initialize values
/// - xlink__arcType* soap_new_req_xlink__arcType(soap*, ...) allocate, set required members
/// - xlink__arcType* soap_new_set_xlink__arcType(soap*, ...) allocate, set all public members
/// - xlink__arcType::soap_default(soap*) default initialize members
/// - int soap_read_xlink__arcType(soap*, xlink__arcType*) deserialize from a stream
/// - int soap_write_xlink__arcType(soap*, xlink__arcType*) serialize to a stream
/// - xlink__arcType* xlink__arcType::soap_dup(soap*) returns deep copy of xlink__arcType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - xlink__arcType::soap_del() deep deletes xlink__arcType data members, use only after xlink__arcType::soap_dup(NULL) (use soapcpp2 -Ed)
class xlink__arcType : public xsd__anyType
{ public:
//  BEGIN GROUP <xs:group name="arcModel">
/// Reference "http://www.w3.org/1999/xlink":title to abstract element.
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="title" minOccurs="0" maxOccurs="unbounded"> with global elements
   $int                                  __sizetitle                    0;
    class __xlink__union_arcType
    {
   $int                                  __uniontitle                   0;	///< Union _xlink__union_arcType selector: set to SOAP_UNION__xlink__union_arcType_<fieldname> or 0 to omit
/// Union for substitutionGroup xlink__title.
    union _xlink__union_arcType
    {
    }                                    union_arcType                 ;
    }                                   *__union_arcType               ;
//  END OF SUBSTITUTIONS
//  END OF GROUP
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":arcAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType                 xlink__type                    1;	///< Fixed attribute value="arc".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":from.
   @xlink__fromType*                     xlink__from                    0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   from and to have default behavior when values are missing
/// </BLOCKQUOTE></PRE>
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":to.
   @xlink__toType*                       xlink__to                      0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
};


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://www.isotc211.org/2005/gco                                         *
 *                                                                            *
\******************************************************************************/

/// @brief "http://www.isotc211.org/2005/gco":TypeName_PropertyType is a complexType.
///
/// class gco__TypeName_x005fPropertyType operations:
/// - gco__TypeName_x005fPropertyType* soap_new_gco__TypeName_x005fPropertyType(soap*) allocate and default initialize
/// - gco__TypeName_x005fPropertyType* soap_new_gco__TypeName_x005fPropertyType(soap*, int num) allocate array and default initialize values
/// - gco__TypeName_x005fPropertyType* soap_new_req_gco__TypeName_x005fPropertyType(soap*, ...) allocate, set required members
/// - gco__TypeName_x005fPropertyType* soap_new_set_gco__TypeName_x005fPropertyType(soap*, ...) allocate, set all public members
/// - gco__TypeName_x005fPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gco__TypeName_x005fPropertyType(soap*, gco__TypeName_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gco__TypeName_x005fPropertyType(soap*, gco__TypeName_x005fPropertyType*) serialize to a stream
/// - gco__TypeName_x005fPropertyType* gco__TypeName_x005fPropertyType::soap_dup(soap*) returns deep copy of gco__TypeName_x005fPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gco__TypeName_x005fPropertyType::soap_del() deep deletes gco__TypeName_x005fPropertyType data members, use only after gco__TypeName_x005fPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gco__TypeName_x005fPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gco__TypeName_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gco:""http://www.isotc211.org/2005/gco":TypeName.
    gco__TypeName_x005fType*             TypeName                       1;	///< Required element.
    }                                   *__TypeName_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":"http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectReference">.
/// Attribute "uuidref" of XSD type xs:string.
   @std::string*                         uuidref                        0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.isotc211.org/2005/gco":MemberName_PropertyType is a complexType.
///
/// class gco__MemberName_x005fPropertyType operations:
/// - gco__MemberName_x005fPropertyType* soap_new_gco__MemberName_x005fPropertyType(soap*) allocate and default initialize
/// - gco__MemberName_x005fPropertyType* soap_new_gco__MemberName_x005fPropertyType(soap*, int num) allocate array and default initialize values
/// - gco__MemberName_x005fPropertyType* soap_new_req_gco__MemberName_x005fPropertyType(soap*, ...) allocate, set required members
/// - gco__MemberName_x005fPropertyType* soap_new_set_gco__MemberName_x005fPropertyType(soap*, ...) allocate, set all public members
/// - gco__MemberName_x005fPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gco__MemberName_x005fPropertyType(soap*, gco__MemberName_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gco__MemberName_x005fPropertyType(soap*, gco__MemberName_x005fPropertyType*) serialize to a stream
/// - gco__MemberName_x005fPropertyType* gco__MemberName_x005fPropertyType::soap_dup(soap*) returns deep copy of gco__MemberName_x005fPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gco__MemberName_x005fPropertyType::soap_del() deep deletes gco__MemberName_x005fPropertyType data members, use only after gco__MemberName_x005fPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gco__MemberName_x005fPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gco__MemberName_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gco:""http://www.isotc211.org/2005/gco":MemberName.
    gco__MemberName_x005fType*           MemberName                     1;	///< Required element.
    }                                   *__MemberName_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":"http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectReference">.
/// Attribute "uuidref" of XSD type xs:string.
   @std::string*                         uuidref                        0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.isotc211.org/2005/gco":Multiplicity_PropertyType is a complexType.
///
/// class gco__Multiplicity_x005fPropertyType operations:
/// - gco__Multiplicity_x005fPropertyType* soap_new_gco__Multiplicity_x005fPropertyType(soap*) allocate and default initialize
/// - gco__Multiplicity_x005fPropertyType* soap_new_gco__Multiplicity_x005fPropertyType(soap*, int num) allocate array and default initialize values
/// - gco__Multiplicity_x005fPropertyType* soap_new_req_gco__Multiplicity_x005fPropertyType(soap*, ...) allocate, set required members
/// - gco__Multiplicity_x005fPropertyType* soap_new_set_gco__Multiplicity_x005fPropertyType(soap*, ...) allocate, set all public members
/// - gco__Multiplicity_x005fPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gco__Multiplicity_x005fPropertyType(soap*, gco__Multiplicity_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gco__Multiplicity_x005fPropertyType(soap*, gco__Multiplicity_x005fPropertyType*) serialize to a stream
/// - gco__Multiplicity_x005fPropertyType* gco__Multiplicity_x005fPropertyType::soap_dup(soap*) returns deep copy of gco__Multiplicity_x005fPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gco__Multiplicity_x005fPropertyType::soap_del() deep deletes gco__Multiplicity_x005fPropertyType data members, use only after gco__Multiplicity_x005fPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gco__Multiplicity_x005fPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gco__Multiplicity_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gco:""http://www.isotc211.org/2005/gco":Multiplicity.
    gco__Multiplicity_x005fType*         Multiplicity                   1;	///< Required element.
    }                                   *__Multiplicity_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":"http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectReference">.
/// Attribute "uuidref" of XSD type xs:string.
   @std::string*                         uuidref                        0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.isotc211.org/2005/gco":MultiplicityRange_PropertyType is a complexType.
///
/// class gco__MultiplicityRange_x005fPropertyType operations:
/// - gco__MultiplicityRange_x005fPropertyType* soap_new_gco__MultiplicityRange_x005fPropertyType(soap*) allocate and default initialize
/// - gco__MultiplicityRange_x005fPropertyType* soap_new_gco__MultiplicityRange_x005fPropertyType(soap*, int num) allocate array and default initialize values
/// - gco__MultiplicityRange_x005fPropertyType* soap_new_req_gco__MultiplicityRange_x005fPropertyType(soap*, ...) allocate, set required members
/// - gco__MultiplicityRange_x005fPropertyType* soap_new_set_gco__MultiplicityRange_x005fPropertyType(soap*, ...) allocate, set all public members
/// - gco__MultiplicityRange_x005fPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gco__MultiplicityRange_x005fPropertyType(soap*, gco__MultiplicityRange_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gco__MultiplicityRange_x005fPropertyType(soap*, gco__MultiplicityRange_x005fPropertyType*) serialize to a stream
/// - gco__MultiplicityRange_x005fPropertyType* gco__MultiplicityRange_x005fPropertyType::soap_dup(soap*) returns deep copy of gco__MultiplicityRange_x005fPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gco__MultiplicityRange_x005fPropertyType::soap_del() deep deletes gco__MultiplicityRange_x005fPropertyType data members, use only after gco__MultiplicityRange_x005fPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gco__MultiplicityRange_x005fPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gco__MultiplicityRange_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gco:""http://www.isotc211.org/2005/gco":MultiplicityRange.
    gco__MultiplicityRange_x005fType*    MultiplicityRange              1;	///< Required element.
    }                                   *__MultiplicityRange_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":"http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectReference">.
/// Attribute "uuidref" of XSD type xs:string.
   @std::string*                         uuidref                        0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.isotc211.org/2005/gco":Measure_PropertyType is a complexType.
///
/// class gco__Measure_x005fPropertyType operations:
/// - gco__Measure_x005fPropertyType* soap_new_gco__Measure_x005fPropertyType(soap*) allocate and default initialize
/// - gco__Measure_x005fPropertyType* soap_new_gco__Measure_x005fPropertyType(soap*, int num) allocate array and default initialize values
/// - gco__Measure_x005fPropertyType* soap_new_req_gco__Measure_x005fPropertyType(soap*, ...) allocate, set required members
/// - gco__Measure_x005fPropertyType* soap_new_set_gco__Measure_x005fPropertyType(soap*, ...) allocate, set all public members
/// - gco__Measure_x005fPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gco__Measure_x005fPropertyType(soap*, gco__Measure_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gco__Measure_x005fPropertyType(soap*, gco__Measure_x005fPropertyType*) serialize to a stream
/// - gco__Measure_x005fPropertyType* gco__Measure_x005fPropertyType::soap_dup(soap*) returns deep copy of gco__Measure_x005fPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gco__Measure_x005fPropertyType::soap_del() deep deletes gco__Measure_x005fPropertyType data members, use only after gco__Measure_x005fPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gco__Measure_x005fPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gco__Measure_x005fPropertyType_sequence
    {
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="Measure"> with global elements <Length> <Angle> <Scale>
   $int                                  __unionMeasure                ;	///< Union _gco__union_Measure_x005fPropertyType selector: set to SOAP_UNION__gco__union_Measure_x005fPropertyType_<fieldname>
/// Union for substitutionGroup gco__Measure.
    union _gco__union_Measure_x005fPropertyType
    {
/// Element reference "http://www.isotc211.org/2005/gco:""http://www.isotc211.org/2005/gco":Measure.
    gml__MeasureType*                    Measure                        nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="Length"> with global elements <Distance>
/// Element "http://www.isotc211.org/2005/gco":Length.
    gml__LengthType*                     Length                         nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.isotc211.org/2005/gco":Distance.
    gml__LengthType*                     Distance                       nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
//  END OF SUBSTITUTIONS
/// Element "http://www.isotc211.org/2005/gco":Angle.
    gml__AngleType*                      Angle                          nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.isotc211.org/2005/gco":Scale.
    gml__ScaleType*                      Scale                          nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_Measure_x005fPropertyType;
//  END OF SUBSTITUTIONS
    }                                   *__Measure_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":"http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
};

/// @brief "http://www.isotc211.org/2005/gco":Length_PropertyType is a complexType.
///
/// class gco__Length_x005fPropertyType operations:
/// - gco__Length_x005fPropertyType* soap_new_gco__Length_x005fPropertyType(soap*) allocate and default initialize
/// - gco__Length_x005fPropertyType* soap_new_gco__Length_x005fPropertyType(soap*, int num) allocate array and default initialize values
/// - gco__Length_x005fPropertyType* soap_new_req_gco__Length_x005fPropertyType(soap*, ...) allocate, set required members
/// - gco__Length_x005fPropertyType* soap_new_set_gco__Length_x005fPropertyType(soap*, ...) allocate, set all public members
/// - gco__Length_x005fPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gco__Length_x005fPropertyType(soap*, gco__Length_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gco__Length_x005fPropertyType(soap*, gco__Length_x005fPropertyType*) serialize to a stream
/// - gco__Length_x005fPropertyType* gco__Length_x005fPropertyType::soap_dup(soap*) returns deep copy of gco__Length_x005fPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gco__Length_x005fPropertyType::soap_del() deep deletes gco__Length_x005fPropertyType data members, use only after gco__Length_x005fPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gco__Length_x005fPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gco__Length_x005fPropertyType_sequence
    {
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="Length"> with global elements <Distance>
   $int                                  __unionLength                 ;	///< Union _gco__union_Length_x005fPropertyType selector: set to SOAP_UNION__gco__union_Length_x005fPropertyType_<fieldname>
/// Union for substitutionGroup gco__Length.
    union _gco__union_Length_x005fPropertyType
    {
/// Element reference "http://www.isotc211.org/2005/gco:""http://www.isotc211.org/2005/gco":Length.
    gml__LengthType*                     Length                         nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.isotc211.org/2005/gco":Distance.
    gml__LengthType*                     Distance                       nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_Length_x005fPropertyType;
//  END OF SUBSTITUTIONS
    }                                   *__Length_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":"http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
};

/// @brief "http://www.isotc211.org/2005/gco":Angle_PropertyType is a complexType.
///
/// class gco__Angle_x005fPropertyType operations:
/// - gco__Angle_x005fPropertyType* soap_new_gco__Angle_x005fPropertyType(soap*) allocate and default initialize
/// - gco__Angle_x005fPropertyType* soap_new_gco__Angle_x005fPropertyType(soap*, int num) allocate array and default initialize values
/// - gco__Angle_x005fPropertyType* soap_new_req_gco__Angle_x005fPropertyType(soap*, ...) allocate, set required members
/// - gco__Angle_x005fPropertyType* soap_new_set_gco__Angle_x005fPropertyType(soap*, ...) allocate, set all public members
/// - gco__Angle_x005fPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gco__Angle_x005fPropertyType(soap*, gco__Angle_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gco__Angle_x005fPropertyType(soap*, gco__Angle_x005fPropertyType*) serialize to a stream
/// - gco__Angle_x005fPropertyType* gco__Angle_x005fPropertyType::soap_dup(soap*) returns deep copy of gco__Angle_x005fPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gco__Angle_x005fPropertyType::soap_del() deep deletes gco__Angle_x005fPropertyType data members, use only after gco__Angle_x005fPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gco__Angle_x005fPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gco__Angle_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gco:""http://www.isotc211.org/2005/gco":Angle.
    gml__AngleType*                      Angle                          1;	///< Required element.
    }                                   *__Angle_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":"http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
};

/// @brief "http://www.isotc211.org/2005/gco":Scale_PropertyType is a complexType.
///
/// class gco__Scale_x005fPropertyType operations:
/// - gco__Scale_x005fPropertyType* soap_new_gco__Scale_x005fPropertyType(soap*) allocate and default initialize
/// - gco__Scale_x005fPropertyType* soap_new_gco__Scale_x005fPropertyType(soap*, int num) allocate array and default initialize values
/// - gco__Scale_x005fPropertyType* soap_new_req_gco__Scale_x005fPropertyType(soap*, ...) allocate, set required members
/// - gco__Scale_x005fPropertyType* soap_new_set_gco__Scale_x005fPropertyType(soap*, ...) allocate, set all public members
/// - gco__Scale_x005fPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gco__Scale_x005fPropertyType(soap*, gco__Scale_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gco__Scale_x005fPropertyType(soap*, gco__Scale_x005fPropertyType*) serialize to a stream
/// - gco__Scale_x005fPropertyType* gco__Scale_x005fPropertyType::soap_dup(soap*) returns deep copy of gco__Scale_x005fPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gco__Scale_x005fPropertyType::soap_del() deep deletes gco__Scale_x005fPropertyType data members, use only after gco__Scale_x005fPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gco__Scale_x005fPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gco__Scale_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gco:""http://www.isotc211.org/2005/gco":Scale.
    gml__ScaleType*                      Scale                          1;	///< Required element.
    }                                   *__Scale_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":"http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
};

/// @brief "http://www.isotc211.org/2005/gco":Distance_PropertyType is a complexType.
///
/// class gco__Distance_x005fPropertyType operations:
/// - gco__Distance_x005fPropertyType* soap_new_gco__Distance_x005fPropertyType(soap*) allocate and default initialize
/// - gco__Distance_x005fPropertyType* soap_new_gco__Distance_x005fPropertyType(soap*, int num) allocate array and default initialize values
/// - gco__Distance_x005fPropertyType* soap_new_req_gco__Distance_x005fPropertyType(soap*, ...) allocate, set required members
/// - gco__Distance_x005fPropertyType* soap_new_set_gco__Distance_x005fPropertyType(soap*, ...) allocate, set all public members
/// - gco__Distance_x005fPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gco__Distance_x005fPropertyType(soap*, gco__Distance_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gco__Distance_x005fPropertyType(soap*, gco__Distance_x005fPropertyType*) serialize to a stream
/// - gco__Distance_x005fPropertyType* gco__Distance_x005fPropertyType::soap_dup(soap*) returns deep copy of gco__Distance_x005fPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gco__Distance_x005fPropertyType::soap_del() deep deletes gco__Distance_x005fPropertyType data members, use only after gco__Distance_x005fPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gco__Distance_x005fPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gco__Distance_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gco:""http://www.isotc211.org/2005/gco":Distance.
    gml__LengthType*                     Distance                       1;	///< Required element.
    }                                   *__Distance_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":"http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
};

/// @brief "http://www.isotc211.org/2005/gco":CharacterString_PropertyType is a complexType.
///
/// class gco__CharacterString_x005fPropertyType operations:
/// - gco__CharacterString_x005fPropertyType* soap_new_gco__CharacterString_x005fPropertyType(soap*) allocate and default initialize
/// - gco__CharacterString_x005fPropertyType* soap_new_gco__CharacterString_x005fPropertyType(soap*, int num) allocate array and default initialize values
/// - gco__CharacterString_x005fPropertyType* soap_new_req_gco__CharacterString_x005fPropertyType(soap*, ...) allocate, set required members
/// - gco__CharacterString_x005fPropertyType* soap_new_set_gco__CharacterString_x005fPropertyType(soap*, ...) allocate, set all public members
/// - gco__CharacterString_x005fPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gco__CharacterString_x005fPropertyType(soap*, gco__CharacterString_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gco__CharacterString_x005fPropertyType(soap*, gco__CharacterString_x005fPropertyType*) serialize to a stream
/// - gco__CharacterString_x005fPropertyType* gco__CharacterString_x005fPropertyType::soap_dup(soap*) returns deep copy of gco__CharacterString_x005fPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gco__CharacterString_x005fPropertyType::soap_del() deep deletes gco__CharacterString_x005fPropertyType data members, use only after gco__CharacterString_x005fPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gco__CharacterString_x005fPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gco__CharacterString_x005fPropertyType_sequence
    {
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="CharacterString"> with global elements <MD_PixelOrientationCode> <MD_PixelOrientationCode> <MD_TopologyLevelCode> <MD_TopologyLevelCode> <MD_GeometricObjectTypeCode> <MD_GeometricObjectTypeCode> <MD_CellGeometryCode> <MD_CellGeometryCode> <MD_DimensionNameTypeCode> <MD_DimensionNameTypeCode> <CI_RoleCode> <CI_RoleCode> <CI_PresentationFormCode> <CI_PresentationFormCode> <CI_OnLineFunctionCode> <CI_OnLineFunctionCode> <CI_DateTypeCode> <CI_DateTypeCode> <MD_ObligationCode> <MD_ObligationCode> <MD_DatatypeCode> <MD_DatatypeCode> <MD_CoverageContentTypeCode> <MD_CoverageContentTypeCode> <MD_ImagingConditionCode> <MD_ImagingConditionCode> <DQ_EvaluationMethodTypeCode> <DQ_EvaluationMethodTypeCode> <MD_TopicCategoryCode> <MD_TopicCategoryCode> <MD_CharacterSetCode> <MD_CharacterSetCode> <MD_SpatialRepresentationTypeCode> <MD_SpatialRepresentationTypeCode> <MD_ProgressCode> <MD_ProgressCode> <MD_KeywordTypeCode> <MD_KeywordTypeCode> <DS_AssociationTypeCode> <DS_AssociationTypeCode> <DS_InitiativeTypeCode> <DS_InitiativeTypeCode> <MD_ClassificationCode> <MD_ClassificationCode> <MD_RestrictionCode> <MD_RestrictionCode> <MD_DistributionUnits> <MD_DistributionUnits> <MD_MediumFormatCode> <MD_MediumFormatCode> <MD_MediumNameCode> <MD_MediumNameCode> <MD_MaintenanceFrequencyCode> <MD_MaintenanceFrequencyCode> <MD_ScopeCode> <MD_ScopeCode> <LocalisedCharacterString> <LocalisedCharacterString> <LanguageCode> <LanguageCode> <Country> <Country>
   $int                                  __unionCharacterString        ;	///< Union _gco__union_CharacterString_x005fPropertyType selector: set to SOAP_UNION__gco__union_CharacterString_x005fPropertyType_<fieldname>
/// Union for substitutionGroup gco__CharacterString.
    union _gco__union_CharacterString_x005fPropertyType
    {
/// Element reference "http://www.isotc211.org/2005/gco:""http://www.isotc211.org/2005/gco":CharacterString.
    std::string*                         CharacterString                nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.isotc211.org/2005/gmd":MD_PixelOrientationCode.
    enum gmd__MD_x005fPixelOrientationCode_x005fType  gmd__MD_x005fPixelOrientationCode 1;	///< Required element.
/// Element "http://www.isotc211.org/2005/gmd":MD_PixelOrientationCode.
    //jld enum gmd__MD_x005fPixelOrientationCode_x005fType  gmd__MD_x005fPixelOrientationCode 1;	///< Required element.
/// Element "http://www.isotc211.org/2005/gmd":MD_TopologyLevelCode.
    gco__CodeListValue_x005fType*        gmd__MD_x005fTopologyLevelCode nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.isotc211.org/2005/gmd":MD_TopologyLevelCode.
    //jld gco__CodeListValue_x005fType*        gmd__MD_x005fTopologyLevelCode nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.isotc211.org/2005/gmd":MD_GeometricObjectTypeCode.
    gco__CodeListValue_x005fType*        gmd__MD_x005fGeometricObjectTypeCode nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.isotc211.org/2005/gmd":MD_GeometricObjectTypeCode.
    //jld gco__CodeListValue_x005fType*        gmd__MD_x005fGeometricObjectTypeCode nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.isotc211.org/2005/gmd":MD_CellGeometryCode.
    gco__CodeListValue_x005fType*        gmd__MD_x005fCellGeometryCode  nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.isotc211.org/2005/gmd":MD_CellGeometryCode.
    //jld gco__CodeListValue_x005fType*        gmd__MD_x005fCellGeometryCode  nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.isotc211.org/2005/gmd":MD_DimensionNameTypeCode.
    gco__CodeListValue_x005fType*        gmd__MD_x005fDimensionNameTypeCode nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.isotc211.org/2005/gmd":MD_DimensionNameTypeCode.
    //jld gco__CodeListValue_x005fType*        gmd__MD_x005fDimensionNameTypeCode nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.isotc211.org/2005/gmd":CI_RoleCode.
    gco__CodeListValue_x005fType*        gmd__CI_x005fRoleCode          nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.isotc211.org/2005/gmd":CI_RoleCode.
    //jld gco__CodeListValue_x005fType*        gmd__CI_x005fRoleCode          nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.isotc211.org/2005/gmd":CI_PresentationFormCode.
    gco__CodeListValue_x005fType*        gmd__CI_x005fPresentationFormCode nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.isotc211.org/2005/gmd":CI_PresentationFormCode.
    //jld gco__CodeListValue_x005fType*        gmd__CI_x005fPresentationFormCode nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.isotc211.org/2005/gmd":CI_OnLineFunctionCode.
    gco__CodeListValue_x005fType*        gmd__CI_x005fOnLineFunctionCode nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.isotc211.org/2005/gmd":CI_OnLineFunctionCode.
    //jld gco__CodeListValue_x005fType*        gmd__CI_x005fOnLineFunctionCode nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.isotc211.org/2005/gmd":CI_DateTypeCode.
    gco__CodeListValue_x005fType*        gmd__CI_x005fDateTypeCode      nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.isotc211.org/2005/gmd":CI_DateTypeCode.
    //jld gco__CodeListValue_x005fType*        gmd__CI_x005fDateTypeCode      nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.isotc211.org/2005/gmd":MD_ObligationCode.
    enum gmd__MD_x005fObligationCode_x005fType  gmd__MD_x005fObligationCode    1;	///< Required element.
/// Element "http://www.isotc211.org/2005/gmd":MD_ObligationCode.
    //jld enum gmd__MD_x005fObligationCode_x005fType  gmd__MD_x005fObligationCode    1;	///< Required element.
/// Element "http://www.isotc211.org/2005/gmd":MD_DatatypeCode.
    gco__CodeListValue_x005fType*        gmd__MD_x005fDatatypeCode      nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.isotc211.org/2005/gmd":MD_DatatypeCode.
    //jld gco__CodeListValue_x005fType*        gmd__MD_x005fDatatypeCode      nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.isotc211.org/2005/gmd":MD_CoverageContentTypeCode.
    gco__CodeListValue_x005fType*        gmd__MD_x005fCoverageContentTypeCode nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.isotc211.org/2005/gmd":MD_CoverageContentTypeCode.
    //jld gco__CodeListValue_x005fType*        gmd__MD_x005fCoverageContentTypeCode nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.isotc211.org/2005/gmd":MD_ImagingConditionCode.
    gco__CodeListValue_x005fType*        gmd__MD_x005fImagingConditionCode nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.isotc211.org/2005/gmd":MD_ImagingConditionCode.
    //jld gco__CodeListValue_x005fType*        gmd__MD_x005fImagingConditionCode nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.isotc211.org/2005/gmd":DQ_EvaluationMethodTypeCode.
    gco__CodeListValue_x005fType*        gmd__DQ_x005fEvaluationMethodTypeCode nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.isotc211.org/2005/gmd":DQ_EvaluationMethodTypeCode.
    //jld gco__CodeListValue_x005fType*        gmd__DQ_x005fEvaluationMethodTypeCode nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.isotc211.org/2005/gmd":MD_TopicCategoryCode.
    enum gmd__MD_x005fTopicCategoryCode_x005fType  gmd__MD_x005fTopicCategoryCode 1;	///< Required element.
/// Element "http://www.isotc211.org/2005/gmd":MD_TopicCategoryCode.
    //jld enum gmd__MD_x005fTopicCategoryCode_x005fType  gmd__MD_x005fTopicCategoryCode 1;	///< Required element.
/// Element "http://www.isotc211.org/2005/gmd":MD_CharacterSetCode.
    gco__CodeListValue_x005fType*        gmd__MD_x005fCharacterSetCode  nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.isotc211.org/2005/gmd":MD_CharacterSetCode.
    //jld gco__CodeListValue_x005fType*        gmd__MD_x005fCharacterSetCode  nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.isotc211.org/2005/gmd":MD_SpatialRepresentationTypeCode.
    gco__CodeListValue_x005fType*        gmd__MD_x005fSpatialRepresentationTypeCode nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.isotc211.org/2005/gmd":MD_SpatialRepresentationTypeCode.
    //jld gco__CodeListValue_x005fType*        gmd__MD_x005fSpatialRepresentationTypeCode nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.isotc211.org/2005/gmd":MD_ProgressCode.
    gco__CodeListValue_x005fType*        gmd__MD_x005fProgressCode      nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.isotc211.org/2005/gmd":MD_ProgressCode.
    //jld gco__CodeListValue_x005fType*        gmd__MD_x005fProgressCode      nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.isotc211.org/2005/gmd":MD_KeywordTypeCode.
    gco__CodeListValue_x005fType*        gmd__MD_x005fKeywordTypeCode   nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.isotc211.org/2005/gmd":MD_KeywordTypeCode.
    //jld gco__CodeListValue_x005fType*        gmd__MD_x005fKeywordTypeCode   nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.isotc211.org/2005/gmd":DS_AssociationTypeCode.
    gco__CodeListValue_x005fType*        gmd__DS_x005fAssociationTypeCode nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.isotc211.org/2005/gmd":DS_AssociationTypeCode.
    //jld gco__CodeListValue_x005fType*        gmd__DS_x005fAssociationTypeCode nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.isotc211.org/2005/gmd":DS_InitiativeTypeCode.
    gco__CodeListValue_x005fType*        gmd__DS_x005fInitiativeTypeCode nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.isotc211.org/2005/gmd":DS_InitiativeTypeCode.
    //jld gco__CodeListValue_x005fType*        gmd__DS_x005fInitiativeTypeCode nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.isotc211.org/2005/gmd":MD_ClassificationCode.
    gco__CodeListValue_x005fType*        gmd__MD_x005fClassificationCode nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.isotc211.org/2005/gmd":MD_ClassificationCode.
    //jld gco__CodeListValue_x005fType*        gmd__MD_x005fClassificationCode nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.isotc211.org/2005/gmd":MD_RestrictionCode.
    gco__CodeListValue_x005fType*        gmd__MD_x005fRestrictionCode   nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.isotc211.org/2005/gmd":MD_RestrictionCode.
    //jld gco__CodeListValue_x005fType*        gmd__MD_x005fRestrictionCode   nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.isotc211.org/2005/gmd":MD_DistributionUnits.
    gco__CodeListValue_x005fType*        gmd__MD_x005fDistributionUnits nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.isotc211.org/2005/gmd":MD_DistributionUnits.
    //jld gco__CodeListValue_x005fType*        gmd__MD_x005fDistributionUnits nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.isotc211.org/2005/gmd":MD_MediumFormatCode.
    gco__CodeListValue_x005fType*        gmd__MD_x005fMediumFormatCode  nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.isotc211.org/2005/gmd":MD_MediumFormatCode.
    //jld gco__CodeListValue_x005fType*        gmd__MD_x005fMediumFormatCode  nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.isotc211.org/2005/gmd":MD_MediumNameCode.
    gco__CodeListValue_x005fType*        gmd__MD_x005fMediumNameCode    nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.isotc211.org/2005/gmd":MD_MediumNameCode.
    //jld gco__CodeListValue_x005fType*        gmd__MD_x005fMediumNameCode    nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.isotc211.org/2005/gmd":MD_MaintenanceFrequencyCode.
    gco__CodeListValue_x005fType*        gmd__MD_x005fMaintenanceFrequencyCode nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.isotc211.org/2005/gmd":MD_MaintenanceFrequencyCode.
    //jld gco__CodeListValue_x005fType*        gmd__MD_x005fMaintenanceFrequencyCode nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.isotc211.org/2005/gmd":MD_ScopeCode.
    gco__CodeListValue_x005fType*        gmd__MD_x005fScopeCode         nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.isotc211.org/2005/gmd":MD_ScopeCode.
    //jld gco__CodeListValue_x005fType*        gmd__MD_x005fScopeCode         nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.isotc211.org/2005/gmd":LocalisedCharacterString.
    gmd__LocalisedCharacterString_x005fType*  gmd__LocalisedCharacterString  nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.isotc211.org/2005/gmd":LocalisedCharacterString.
    //jld gmd__LocalisedCharacterString_x005fType*  gmd__LocalisedCharacterString  nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.isotc211.org/2005/gmd":LanguageCode.
    gco__CodeListValue_x005fType*        gmd__LanguageCode              nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.isotc211.org/2005/gmd":LanguageCode.
    //jld gco__CodeListValue_x005fType*        gmd__LanguageCode              nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.isotc211.org/2005/gmd":Country.
    gco__CodeListValue_x005fType*        gmd__Country                   nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.isotc211.org/2005/gmd":Country.
    //jld gco__CodeListValue_x005fType*        gmd__Country                   nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_CharacterString_x005fPropertyType;
//  END OF SUBSTITUTIONS
    }                                   *__CharacterString_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":"http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
};

/// @brief "http://www.isotc211.org/2005/gco":Boolean_PropertyType is a complexType.
///
/// class gco__Boolean_x005fPropertyType operations:
/// - gco__Boolean_x005fPropertyType* soap_new_gco__Boolean_x005fPropertyType(soap*) allocate and default initialize
/// - gco__Boolean_x005fPropertyType* soap_new_gco__Boolean_x005fPropertyType(soap*, int num) allocate array and default initialize values
/// - gco__Boolean_x005fPropertyType* soap_new_req_gco__Boolean_x005fPropertyType(soap*, ...) allocate, set required members
/// - gco__Boolean_x005fPropertyType* soap_new_set_gco__Boolean_x005fPropertyType(soap*, ...) allocate, set all public members
/// - gco__Boolean_x005fPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gco__Boolean_x005fPropertyType(soap*, gco__Boolean_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gco__Boolean_x005fPropertyType(soap*, gco__Boolean_x005fPropertyType*) serialize to a stream
/// - gco__Boolean_x005fPropertyType* gco__Boolean_x005fPropertyType::soap_dup(soap*) returns deep copy of gco__Boolean_x005fPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gco__Boolean_x005fPropertyType::soap_del() deep deletes gco__Boolean_x005fPropertyType data members, use only after gco__Boolean_x005fPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gco__Boolean_x005fPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gco__Boolean_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gco:""http://www.isotc211.org/2005/gco":Boolean.
    bool                                 Boolean                        1;	///< Required element.
    }                                   *__Boolean_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":"http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
};

/// @brief "http://www.isotc211.org/2005/gco":GenericName_PropertyType is a complexType.
///
/// class gco__GenericName_x005fPropertyType operations:
/// - gco__GenericName_x005fPropertyType* soap_new_gco__GenericName_x005fPropertyType(soap*) allocate and default initialize
/// - gco__GenericName_x005fPropertyType* soap_new_gco__GenericName_x005fPropertyType(soap*, int num) allocate array and default initialize values
/// - gco__GenericName_x005fPropertyType* soap_new_req_gco__GenericName_x005fPropertyType(soap*, ...) allocate, set required members
/// - gco__GenericName_x005fPropertyType* soap_new_set_gco__GenericName_x005fPropertyType(soap*, ...) allocate, set all public members
/// - gco__GenericName_x005fPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gco__GenericName_x005fPropertyType(soap*, gco__GenericName_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gco__GenericName_x005fPropertyType(soap*, gco__GenericName_x005fPropertyType*) serialize to a stream
/// - gco__GenericName_x005fPropertyType* gco__GenericName_x005fPropertyType::soap_dup(soap*) returns deep copy of gco__GenericName_x005fPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gco__GenericName_x005fPropertyType::soap_del() deep deletes gco__GenericName_x005fPropertyType data members, use only after gco__GenericName_x005fPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gco__GenericName_x005fPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gco__GenericName_x005fPropertyType_sequence
    {
/// Reference "http://www.isotc211.org/2005/gco":AbstractGenericName to abstract element.
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractGenericName"> with global elements <LocalName> <ScopedName>
   $int                                  __unionAbstractGenericName    ;	///< Union _gco__union_GenericName_x005fPropertyType selector: set to SOAP_UNION__gco__union_GenericName_x005fPropertyType_<fieldname>
/// Union for substitutionGroup gco__AbstractGenericName.
    union _gco__union_GenericName_x005fPropertyType
    {
/// Element "http://www.isotc211.org/2005/gco":LocalName.
    gml__CodeType*                       LocalName                      nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.isotc211.org/2005/gco":ScopedName.
    gml__CodeType*                       ScopedName                     nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_GenericName_x005fPropertyType;
//  END OF SUBSTITUTIONS
    }                                   *__GenericName_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":"http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
};

/// @brief "http://www.isotc211.org/2005/gco":LocalName_PropertyType is a complexType.
///
/// class gco__LocalName_x005fPropertyType operations:
/// - gco__LocalName_x005fPropertyType* soap_new_gco__LocalName_x005fPropertyType(soap*) allocate and default initialize
/// - gco__LocalName_x005fPropertyType* soap_new_gco__LocalName_x005fPropertyType(soap*, int num) allocate array and default initialize values
/// - gco__LocalName_x005fPropertyType* soap_new_req_gco__LocalName_x005fPropertyType(soap*, ...) allocate, set required members
/// - gco__LocalName_x005fPropertyType* soap_new_set_gco__LocalName_x005fPropertyType(soap*, ...) allocate, set all public members
/// - gco__LocalName_x005fPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gco__LocalName_x005fPropertyType(soap*, gco__LocalName_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gco__LocalName_x005fPropertyType(soap*, gco__LocalName_x005fPropertyType*) serialize to a stream
/// - gco__LocalName_x005fPropertyType* gco__LocalName_x005fPropertyType::soap_dup(soap*) returns deep copy of gco__LocalName_x005fPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gco__LocalName_x005fPropertyType::soap_del() deep deletes gco__LocalName_x005fPropertyType data members, use only after gco__LocalName_x005fPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gco__LocalName_x005fPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gco__LocalName_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gco:""http://www.isotc211.org/2005/gco":LocalName.
    gml__CodeType*                       LocalName                      1;	///< Required element.
    }                                   *__LocalName_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":"http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
};

/// @brief "http://www.isotc211.org/2005/gco":ScopedName_PropertyType is a complexType.
///
/// class gco__ScopedName_x005fPropertyType operations:
/// - gco__ScopedName_x005fPropertyType* soap_new_gco__ScopedName_x005fPropertyType(soap*) allocate and default initialize
/// - gco__ScopedName_x005fPropertyType* soap_new_gco__ScopedName_x005fPropertyType(soap*, int num) allocate array and default initialize values
/// - gco__ScopedName_x005fPropertyType* soap_new_req_gco__ScopedName_x005fPropertyType(soap*, ...) allocate, set required members
/// - gco__ScopedName_x005fPropertyType* soap_new_set_gco__ScopedName_x005fPropertyType(soap*, ...) allocate, set all public members
/// - gco__ScopedName_x005fPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gco__ScopedName_x005fPropertyType(soap*, gco__ScopedName_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gco__ScopedName_x005fPropertyType(soap*, gco__ScopedName_x005fPropertyType*) serialize to a stream
/// - gco__ScopedName_x005fPropertyType* gco__ScopedName_x005fPropertyType::soap_dup(soap*) returns deep copy of gco__ScopedName_x005fPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gco__ScopedName_x005fPropertyType::soap_del() deep deletes gco__ScopedName_x005fPropertyType data members, use only after gco__ScopedName_x005fPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gco__ScopedName_x005fPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gco__ScopedName_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gco:""http://www.isotc211.org/2005/gco":ScopedName.
    gml__CodeType*                       ScopedName                     1;	///< Required element.
    }                                   *__ScopedName_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":"http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
};

/// @brief "http://www.isotc211.org/2005/gco":UomAngle_PropertyType is a complexType.
///
/// class gco__UomAngle_x005fPropertyType operations:
/// - gco__UomAngle_x005fPropertyType* soap_new_gco__UomAngle_x005fPropertyType(soap*) allocate and default initialize
/// - gco__UomAngle_x005fPropertyType* soap_new_gco__UomAngle_x005fPropertyType(soap*, int num) allocate array and default initialize values
/// - gco__UomAngle_x005fPropertyType* soap_new_req_gco__UomAngle_x005fPropertyType(soap*, ...) allocate, set required members
/// - gco__UomAngle_x005fPropertyType* soap_new_set_gco__UomAngle_x005fPropertyType(soap*, ...) allocate, set all public members
/// - gco__UomAngle_x005fPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gco__UomAngle_x005fPropertyType(soap*, gco__UomAngle_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gco__UomAngle_x005fPropertyType(soap*, gco__UomAngle_x005fPropertyType*) serialize to a stream
/// - gco__UomAngle_x005fPropertyType* gco__UomAngle_x005fPropertyType::soap_dup(soap*) returns deep copy of gco__UomAngle_x005fPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gco__UomAngle_x005fPropertyType::soap_del() deep deletes gco__UomAngle_x005fPropertyType data members, use only after gco__UomAngle_x005fPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gco__UomAngle_x005fPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gco__UomAngle_x005fPropertyType_sequence
    {
/// <PRE><BLOCKQUOTE>
///   A gml:UnitDefinition is a general definition of a unit of measure. This generic element is used only for units for which no relationship with other units or units systems is known.
///   The content model of gml:UnitDefinition adds three additional properties to gml:Definition, gml:quantityType, gml:quantityTypeReference and gml:catalogSymbol. The gml:catalogSymbol property optionally gives the short symbol used for this unit. This element is usually used when the relationship of this unit to other units or units systems is unknown.
/// </BLOCKQUOTE></PRE>
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="UnitDefinition"> with global elements <BaseUnit> <DerivedUnit> <ConventionalUnit>
   $int                                  __unionUnitDefinition         ;	///< Union _gco__union_UomAngle_x005fPropertyType selector: set to SOAP_UNION__gco__union_UomAngle_x005fPropertyType_<fieldname>
/// Union for substitutionGroup gco__UnitDefinition.
    union _gco__union_UomAngle_x005fPropertyType
    {
/// <PRE><BLOCKQUOTE>
///   A gml:UnitDefinition is a general definition of a unit of measure. This generic element is used only for units for which no relationship with other units or units systems is known.
///   The content model of gml:UnitDefinition adds three additional properties to gml:Definition, gml:quantityType, gml:quantityTypeReference and gml:catalogSymbol. The gml:catalogSymbol property optionally gives the short symbol used for this unit. This element is usually used when the relationship of this unit to other units or units systems is unknown.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.isotc211.org/2005/gco:""http://www.opengis.net/gml/3.2":UnitDefinition.
    gml__UnitDefinitionType*             gml__UnitDefinition            nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   A base unit is a unit of measure that cannot be derived by combination of other base units within a particular system of units. For example, in the SI system of units, the base units are metre, kilogram, second, Ampere, Kelvin, mole, and candela, for the physical quantity types length, mass, time interval, electric current, thermodynamic temperature, amount of substance and luminous intensity, respectively.
///   gml:BaseUnit extends generic gml:UnitDefinition with the property gml:unitsSystem, which carries a reference to the units system to which this base unit is asserted to belong.
/// </BLOCKQUOTE></PRE>
/// Element "http://www.opengis.net/gml/3.2":BaseUnit.
    gml__BaseUnitType*                   gml__BaseUnit                  nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   Derived units are defined by combination of other units. Derived units are used for quantities other than those corresponding to the base units, such as hertz (s-1) for frequency, Newton (kg.m/s2) for force. Derived units based directly on base units are usually preferred for quantities other than the fundamental quantities within a system. If a derived unit is not the preferred unit, the gml:ConventionalUnit element should be used instead.
///   The gml:DerivedUnit extends gml:UnitDefinition with the property gml:derivationUnitTerms.
/// </BLOCKQUOTE></PRE>
/// Element "http://www.opengis.net/gml/3.2":DerivedUnit.
    gml__DerivedUnitType*                gml__DerivedUnit               nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   Conventional units that are neither base units nor defined by direct combination of base units are used in many application domains. For example electronVolt for energy, feet and nautical miles for length. In most cases there is a known, usually linear, conversion to a preferred unit which is either a base unit or derived by direct combination of base units.
///   The gml:ConventionalUnit extends gml:UnitDefinition with a property that describes a conversion to a preferred unit for this physical quantity. When the conversion is exact, the element gml:conversionToPreferredUnit should be used, or when the conversion is not exact the element gml:roughConversionToPreferredUnit is available. Both of these elements have the same content model. The gml:derivationUnitTerm property defined above is included to allow a user to optionally record how this unit may be derived from other ("more primitive") units.
/// </BLOCKQUOTE></PRE>
/// Element "http://www.opengis.net/gml/3.2":ConventionalUnit.
    gml__ConventionalUnitType*           gml__ConventionalUnit          nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_UomAngle_x005fPropertyType;
//  END OF SUBSTITUTIONS
    }                                   *__UomAngle_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":"http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectReference">.
/// Attribute "uuidref" of XSD type xs:string.
   @std::string*                         uuidref                        0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.isotc211.org/2005/gco":UomLength_PropertyType is a complexType.
///
/// class gco__UomLength_x005fPropertyType operations:
/// - gco__UomLength_x005fPropertyType* soap_new_gco__UomLength_x005fPropertyType(soap*) allocate and default initialize
/// - gco__UomLength_x005fPropertyType* soap_new_gco__UomLength_x005fPropertyType(soap*, int num) allocate array and default initialize values
/// - gco__UomLength_x005fPropertyType* soap_new_req_gco__UomLength_x005fPropertyType(soap*, ...) allocate, set required members
/// - gco__UomLength_x005fPropertyType* soap_new_set_gco__UomLength_x005fPropertyType(soap*, ...) allocate, set all public members
/// - gco__UomLength_x005fPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gco__UomLength_x005fPropertyType(soap*, gco__UomLength_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gco__UomLength_x005fPropertyType(soap*, gco__UomLength_x005fPropertyType*) serialize to a stream
/// - gco__UomLength_x005fPropertyType* gco__UomLength_x005fPropertyType::soap_dup(soap*) returns deep copy of gco__UomLength_x005fPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gco__UomLength_x005fPropertyType::soap_del() deep deletes gco__UomLength_x005fPropertyType data members, use only after gco__UomLength_x005fPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gco__UomLength_x005fPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gco__UomLength_x005fPropertyType_sequence
    {
/// <PRE><BLOCKQUOTE>
///   A gml:UnitDefinition is a general definition of a unit of measure. This generic element is used only for units for which no relationship with other units or units systems is known.
///   The content model of gml:UnitDefinition adds three additional properties to gml:Definition, gml:quantityType, gml:quantityTypeReference and gml:catalogSymbol. The gml:catalogSymbol property optionally gives the short symbol used for this unit. This element is usually used when the relationship of this unit to other units or units systems is unknown.
/// </BLOCKQUOTE></PRE>
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="UnitDefinition"> with global elements <BaseUnit> <DerivedUnit> <ConventionalUnit>
   $int                                  __unionUnitDefinition         ;	///< Union _gco__union_UomLength_x005fPropertyType selector: set to SOAP_UNION__gco__union_UomLength_x005fPropertyType_<fieldname>
/// Union for substitutionGroup gco__UnitDefinition.
    union _gco__union_UomLength_x005fPropertyType
    {
/// <PRE><BLOCKQUOTE>
///   A gml:UnitDefinition is a general definition of a unit of measure. This generic element is used only for units for which no relationship with other units or units systems is known.
///   The content model of gml:UnitDefinition adds three additional properties to gml:Definition, gml:quantityType, gml:quantityTypeReference and gml:catalogSymbol. The gml:catalogSymbol property optionally gives the short symbol used for this unit. This element is usually used when the relationship of this unit to other units or units systems is unknown.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.isotc211.org/2005/gco:""http://www.opengis.net/gml/3.2":UnitDefinition.
    gml__UnitDefinitionType*             gml__UnitDefinition            nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   A base unit is a unit of measure that cannot be derived by combination of other base units within a particular system of units. For example, in the SI system of units, the base units are metre, kilogram, second, Ampere, Kelvin, mole, and candela, for the physical quantity types length, mass, time interval, electric current, thermodynamic temperature, amount of substance and luminous intensity, respectively.
///   gml:BaseUnit extends generic gml:UnitDefinition with the property gml:unitsSystem, which carries a reference to the units system to which this base unit is asserted to belong.
/// </BLOCKQUOTE></PRE>
/// Element "http://www.opengis.net/gml/3.2":BaseUnit.
    gml__BaseUnitType*                   gml__BaseUnit                  nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   Derived units are defined by combination of other units. Derived units are used for quantities other than those corresponding to the base units, such as hertz (s-1) for frequency, Newton (kg.m/s2) for force. Derived units based directly on base units are usually preferred for quantities other than the fundamental quantities within a system. If a derived unit is not the preferred unit, the gml:ConventionalUnit element should be used instead.
///   The gml:DerivedUnit extends gml:UnitDefinition with the property gml:derivationUnitTerms.
/// </BLOCKQUOTE></PRE>
/// Element "http://www.opengis.net/gml/3.2":DerivedUnit.
    gml__DerivedUnitType*                gml__DerivedUnit               nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   Conventional units that are neither base units nor defined by direct combination of base units are used in many application domains. For example electronVolt for energy, feet and nautical miles for length. In most cases there is a known, usually linear, conversion to a preferred unit which is either a base unit or derived by direct combination of base units.
///   The gml:ConventionalUnit extends gml:UnitDefinition with a property that describes a conversion to a preferred unit for this physical quantity. When the conversion is exact, the element gml:conversionToPreferredUnit should be used, or when the conversion is not exact the element gml:roughConversionToPreferredUnit is available. Both of these elements have the same content model. The gml:derivationUnitTerm property defined above is included to allow a user to optionally record how this unit may be derived from other ("more primitive") units.
/// </BLOCKQUOTE></PRE>
/// Element "http://www.opengis.net/gml/3.2":ConventionalUnit.
    gml__ConventionalUnitType*           gml__ConventionalUnit          nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_UomLength_x005fPropertyType;
//  END OF SUBSTITUTIONS
    }                                   *__UomLength_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":"http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectReference">.
/// Attribute "uuidref" of XSD type xs:string.
   @std::string*                         uuidref                        0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.isotc211.org/2005/gco":UomScale_PropertyType is a complexType.
///
/// class gco__UomScale_x005fPropertyType operations:
/// - gco__UomScale_x005fPropertyType* soap_new_gco__UomScale_x005fPropertyType(soap*) allocate and default initialize
/// - gco__UomScale_x005fPropertyType* soap_new_gco__UomScale_x005fPropertyType(soap*, int num) allocate array and default initialize values
/// - gco__UomScale_x005fPropertyType* soap_new_req_gco__UomScale_x005fPropertyType(soap*, ...) allocate, set required members
/// - gco__UomScale_x005fPropertyType* soap_new_set_gco__UomScale_x005fPropertyType(soap*, ...) allocate, set all public members
/// - gco__UomScale_x005fPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gco__UomScale_x005fPropertyType(soap*, gco__UomScale_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gco__UomScale_x005fPropertyType(soap*, gco__UomScale_x005fPropertyType*) serialize to a stream
/// - gco__UomScale_x005fPropertyType* gco__UomScale_x005fPropertyType::soap_dup(soap*) returns deep copy of gco__UomScale_x005fPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gco__UomScale_x005fPropertyType::soap_del() deep deletes gco__UomScale_x005fPropertyType data members, use only after gco__UomScale_x005fPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gco__UomScale_x005fPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gco__UomScale_x005fPropertyType_sequence
    {
/// <PRE><BLOCKQUOTE>
///   A gml:UnitDefinition is a general definition of a unit of measure. This generic element is used only for units for which no relationship with other units or units systems is known.
///   The content model of gml:UnitDefinition adds three additional properties to gml:Definition, gml:quantityType, gml:quantityTypeReference and gml:catalogSymbol. The gml:catalogSymbol property optionally gives the short symbol used for this unit. This element is usually used when the relationship of this unit to other units or units systems is unknown.
/// </BLOCKQUOTE></PRE>
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="UnitDefinition"> with global elements <BaseUnit> <DerivedUnit> <ConventionalUnit>
   $int                                  __unionUnitDefinition         ;	///< Union _gco__union_UomScale_x005fPropertyType selector: set to SOAP_UNION__gco__union_UomScale_x005fPropertyType_<fieldname>
/// Union for substitutionGroup gco__UnitDefinition.
    union _gco__union_UomScale_x005fPropertyType
    {
/// <PRE><BLOCKQUOTE>
///   A gml:UnitDefinition is a general definition of a unit of measure. This generic element is used only for units for which no relationship with other units or units systems is known.
///   The content model of gml:UnitDefinition adds three additional properties to gml:Definition, gml:quantityType, gml:quantityTypeReference and gml:catalogSymbol. The gml:catalogSymbol property optionally gives the short symbol used for this unit. This element is usually used when the relationship of this unit to other units or units systems is unknown.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.isotc211.org/2005/gco:""http://www.opengis.net/gml/3.2":UnitDefinition.
    gml__UnitDefinitionType*             gml__UnitDefinition            nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   A base unit is a unit of measure that cannot be derived by combination of other base units within a particular system of units. For example, in the SI system of units, the base units are metre, kilogram, second, Ampere, Kelvin, mole, and candela, for the physical quantity types length, mass, time interval, electric current, thermodynamic temperature, amount of substance and luminous intensity, respectively.
///   gml:BaseUnit extends generic gml:UnitDefinition with the property gml:unitsSystem, which carries a reference to the units system to which this base unit is asserted to belong.
/// </BLOCKQUOTE></PRE>
/// Element "http://www.opengis.net/gml/3.2":BaseUnit.
    gml__BaseUnitType*                   gml__BaseUnit                  nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   Derived units are defined by combination of other units. Derived units are used for quantities other than those corresponding to the base units, such as hertz (s-1) for frequency, Newton (kg.m/s2) for force. Derived units based directly on base units are usually preferred for quantities other than the fundamental quantities within a system. If a derived unit is not the preferred unit, the gml:ConventionalUnit element should be used instead.
///   The gml:DerivedUnit extends gml:UnitDefinition with the property gml:derivationUnitTerms.
/// </BLOCKQUOTE></PRE>
/// Element "http://www.opengis.net/gml/3.2":DerivedUnit.
    gml__DerivedUnitType*                gml__DerivedUnit               nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   Conventional units that are neither base units nor defined by direct combination of base units are used in many application domains. For example electronVolt for energy, feet and nautical miles for length. In most cases there is a known, usually linear, conversion to a preferred unit which is either a base unit or derived by direct combination of base units.
///   The gml:ConventionalUnit extends gml:UnitDefinition with a property that describes a conversion to a preferred unit for this physical quantity. When the conversion is exact, the element gml:conversionToPreferredUnit should be used, or when the conversion is not exact the element gml:roughConversionToPreferredUnit is available. Both of these elements have the same content model. The gml:derivationUnitTerm property defined above is included to allow a user to optionally record how this unit may be derived from other ("more primitive") units.
/// </BLOCKQUOTE></PRE>
/// Element "http://www.opengis.net/gml/3.2":ConventionalUnit.
    gml__ConventionalUnitType*           gml__ConventionalUnit          nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_UomScale_x005fPropertyType;
//  END OF SUBSTITUTIONS
    }                                   *__UomScale_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":"http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectReference">.
/// Attribute "uuidref" of XSD type xs:string.
   @std::string*                         uuidref                        0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.isotc211.org/2005/gco":UnitOfMeasure_PropertyType is a complexType.
///
/// class gco__UnitOfMeasure_x005fPropertyType operations:
/// - gco__UnitOfMeasure_x005fPropertyType* soap_new_gco__UnitOfMeasure_x005fPropertyType(soap*) allocate and default initialize
/// - gco__UnitOfMeasure_x005fPropertyType* soap_new_gco__UnitOfMeasure_x005fPropertyType(soap*, int num) allocate array and default initialize values
/// - gco__UnitOfMeasure_x005fPropertyType* soap_new_req_gco__UnitOfMeasure_x005fPropertyType(soap*, ...) allocate, set required members
/// - gco__UnitOfMeasure_x005fPropertyType* soap_new_set_gco__UnitOfMeasure_x005fPropertyType(soap*, ...) allocate, set all public members
/// - gco__UnitOfMeasure_x005fPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gco__UnitOfMeasure_x005fPropertyType(soap*, gco__UnitOfMeasure_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gco__UnitOfMeasure_x005fPropertyType(soap*, gco__UnitOfMeasure_x005fPropertyType*) serialize to a stream
/// - gco__UnitOfMeasure_x005fPropertyType* gco__UnitOfMeasure_x005fPropertyType::soap_dup(soap*) returns deep copy of gco__UnitOfMeasure_x005fPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gco__UnitOfMeasure_x005fPropertyType::soap_del() deep deletes gco__UnitOfMeasure_x005fPropertyType data members, use only after gco__UnitOfMeasure_x005fPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gco__UnitOfMeasure_x005fPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gco__UnitOfMeasure_x005fPropertyType_sequence
    {
/// <PRE><BLOCKQUOTE>
///   A gml:UnitDefinition is a general definition of a unit of measure. This generic element is used only for units for which no relationship with other units or units systems is known.
///   The content model of gml:UnitDefinition adds three additional properties to gml:Definition, gml:quantityType, gml:quantityTypeReference and gml:catalogSymbol. The gml:catalogSymbol property optionally gives the short symbol used for this unit. This element is usually used when the relationship of this unit to other units or units systems is unknown.
/// </BLOCKQUOTE></PRE>
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="UnitDefinition"> with global elements <BaseUnit> <DerivedUnit> <ConventionalUnit>
   $int                                  __unionUnitDefinition         ;	///< Union _gco__union_UnitOfMeasure_x005fPropertyType selector: set to SOAP_UNION__gco__union_UnitOfMeasure_x005fPropertyType_<fieldname>
/// Union for substitutionGroup gco__UnitDefinition.
    union _gco__union_UnitOfMeasure_x005fPropertyType
    {
/// <PRE><BLOCKQUOTE>
///   A gml:UnitDefinition is a general definition of a unit of measure. This generic element is used only for units for which no relationship with other units or units systems is known.
///   The content model of gml:UnitDefinition adds three additional properties to gml:Definition, gml:quantityType, gml:quantityTypeReference and gml:catalogSymbol. The gml:catalogSymbol property optionally gives the short symbol used for this unit. This element is usually used when the relationship of this unit to other units or units systems is unknown.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.isotc211.org/2005/gco:""http://www.opengis.net/gml/3.2":UnitDefinition.
    gml__UnitDefinitionType*             gml__UnitDefinition            nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   A base unit is a unit of measure that cannot be derived by combination of other base units within a particular system of units. For example, in the SI system of units, the base units are metre, kilogram, second, Ampere, Kelvin, mole, and candela, for the physical quantity types length, mass, time interval, electric current, thermodynamic temperature, amount of substance and luminous intensity, respectively.
///   gml:BaseUnit extends generic gml:UnitDefinition with the property gml:unitsSystem, which carries a reference to the units system to which this base unit is asserted to belong.
/// </BLOCKQUOTE></PRE>
/// Element "http://www.opengis.net/gml/3.2":BaseUnit.
    gml__BaseUnitType*                   gml__BaseUnit                  nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   Derived units are defined by combination of other units. Derived units are used for quantities other than those corresponding to the base units, such as hertz (s-1) for frequency, Newton (kg.m/s2) for force. Derived units based directly on base units are usually preferred for quantities other than the fundamental quantities within a system. If a derived unit is not the preferred unit, the gml:ConventionalUnit element should be used instead.
///   The gml:DerivedUnit extends gml:UnitDefinition with the property gml:derivationUnitTerms.
/// </BLOCKQUOTE></PRE>
/// Element "http://www.opengis.net/gml/3.2":DerivedUnit.
    gml__DerivedUnitType*                gml__DerivedUnit               nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   Conventional units that are neither base units nor defined by direct combination of base units are used in many application domains. For example electronVolt for energy, feet and nautical miles for length. In most cases there is a known, usually linear, conversion to a preferred unit which is either a base unit or derived by direct combination of base units.
///   The gml:ConventionalUnit extends gml:UnitDefinition with a property that describes a conversion to a preferred unit for this physical quantity. When the conversion is exact, the element gml:conversionToPreferredUnit should be used, or when the conversion is not exact the element gml:roughConversionToPreferredUnit is available. Both of these elements have the same content model. The gml:derivationUnitTerm property defined above is included to allow a user to optionally record how this unit may be derived from other ("more primitive") units.
/// </BLOCKQUOTE></PRE>
/// Element "http://www.opengis.net/gml/3.2":ConventionalUnit.
    gml__ConventionalUnitType*           gml__ConventionalUnit          nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_UnitOfMeasure_x005fPropertyType;
//  END OF SUBSTITUTIONS
    }                                   *__UnitOfMeasure_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":"http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectReference">.
/// Attribute "uuidref" of XSD type xs:string.
   @std::string*                         uuidref                        0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.isotc211.org/2005/gco":UomArea_PropertyType is a complexType.
///
/// class gco__UomArea_x005fPropertyType operations:
/// - gco__UomArea_x005fPropertyType* soap_new_gco__UomArea_x005fPropertyType(soap*) allocate and default initialize
/// - gco__UomArea_x005fPropertyType* soap_new_gco__UomArea_x005fPropertyType(soap*, int num) allocate array and default initialize values
/// - gco__UomArea_x005fPropertyType* soap_new_req_gco__UomArea_x005fPropertyType(soap*, ...) allocate, set required members
/// - gco__UomArea_x005fPropertyType* soap_new_set_gco__UomArea_x005fPropertyType(soap*, ...) allocate, set all public members
/// - gco__UomArea_x005fPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gco__UomArea_x005fPropertyType(soap*, gco__UomArea_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gco__UomArea_x005fPropertyType(soap*, gco__UomArea_x005fPropertyType*) serialize to a stream
/// - gco__UomArea_x005fPropertyType* gco__UomArea_x005fPropertyType::soap_dup(soap*) returns deep copy of gco__UomArea_x005fPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gco__UomArea_x005fPropertyType::soap_del() deep deletes gco__UomArea_x005fPropertyType data members, use only after gco__UomArea_x005fPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gco__UomArea_x005fPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gco__UomArea_x005fPropertyType_sequence
    {
/// <PRE><BLOCKQUOTE>
///   A gml:UnitDefinition is a general definition of a unit of measure. This generic element is used only for units for which no relationship with other units or units systems is known.
///   The content model of gml:UnitDefinition adds three additional properties to gml:Definition, gml:quantityType, gml:quantityTypeReference and gml:catalogSymbol. The gml:catalogSymbol property optionally gives the short symbol used for this unit. This element is usually used when the relationship of this unit to other units or units systems is unknown.
/// </BLOCKQUOTE></PRE>
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="UnitDefinition"> with global elements <BaseUnit> <DerivedUnit> <ConventionalUnit>
   $int                                  __unionUnitDefinition         ;	///< Union _gco__union_UomArea_x005fPropertyType selector: set to SOAP_UNION__gco__union_UomArea_x005fPropertyType_<fieldname>
/// Union for substitutionGroup gco__UnitDefinition.
    union _gco__union_UomArea_x005fPropertyType
    {
/// <PRE><BLOCKQUOTE>
///   A gml:UnitDefinition is a general definition of a unit of measure. This generic element is used only for units for which no relationship with other units or units systems is known.
///   The content model of gml:UnitDefinition adds three additional properties to gml:Definition, gml:quantityType, gml:quantityTypeReference and gml:catalogSymbol. The gml:catalogSymbol property optionally gives the short symbol used for this unit. This element is usually used when the relationship of this unit to other units or units systems is unknown.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.isotc211.org/2005/gco:""http://www.opengis.net/gml/3.2":UnitDefinition.
    gml__UnitDefinitionType*             gml__UnitDefinition            nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   A base unit is a unit of measure that cannot be derived by combination of other base units within a particular system of units. For example, in the SI system of units, the base units are metre, kilogram, second, Ampere, Kelvin, mole, and candela, for the physical quantity types length, mass, time interval, electric current, thermodynamic temperature, amount of substance and luminous intensity, respectively.
///   gml:BaseUnit extends generic gml:UnitDefinition with the property gml:unitsSystem, which carries a reference to the units system to which this base unit is asserted to belong.
/// </BLOCKQUOTE></PRE>
/// Element "http://www.opengis.net/gml/3.2":BaseUnit.
    gml__BaseUnitType*                   gml__BaseUnit                  nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   Derived units are defined by combination of other units. Derived units are used for quantities other than those corresponding to the base units, such as hertz (s-1) for frequency, Newton (kg.m/s2) for force. Derived units based directly on base units are usually preferred for quantities other than the fundamental quantities within a system. If a derived unit is not the preferred unit, the gml:ConventionalUnit element should be used instead.
///   The gml:DerivedUnit extends gml:UnitDefinition with the property gml:derivationUnitTerms.
/// </BLOCKQUOTE></PRE>
/// Element "http://www.opengis.net/gml/3.2":DerivedUnit.
    gml__DerivedUnitType*                gml__DerivedUnit               nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   Conventional units that are neither base units nor defined by direct combination of base units are used in many application domains. For example electronVolt for energy, feet and nautical miles for length. In most cases there is a known, usually linear, conversion to a preferred unit which is either a base unit or derived by direct combination of base units.
///   The gml:ConventionalUnit extends gml:UnitDefinition with a property that describes a conversion to a preferred unit for this physical quantity. When the conversion is exact, the element gml:conversionToPreferredUnit should be used, or when the conversion is not exact the element gml:roughConversionToPreferredUnit is available. Both of these elements have the same content model. The gml:derivationUnitTerm property defined above is included to allow a user to optionally record how this unit may be derived from other ("more primitive") units.
/// </BLOCKQUOTE></PRE>
/// Element "http://www.opengis.net/gml/3.2":ConventionalUnit.
    gml__ConventionalUnitType*           gml__ConventionalUnit          nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_UomArea_x005fPropertyType;
//  END OF SUBSTITUTIONS
    }                                   *__UomArea_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":"http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectReference">.
/// Attribute "uuidref" of XSD type xs:string.
   @std::string*                         uuidref                        0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.isotc211.org/2005/gco":UomVelocity_PropertyType is a complexType.
///
/// class gco__UomVelocity_x005fPropertyType operations:
/// - gco__UomVelocity_x005fPropertyType* soap_new_gco__UomVelocity_x005fPropertyType(soap*) allocate and default initialize
/// - gco__UomVelocity_x005fPropertyType* soap_new_gco__UomVelocity_x005fPropertyType(soap*, int num) allocate array and default initialize values
/// - gco__UomVelocity_x005fPropertyType* soap_new_req_gco__UomVelocity_x005fPropertyType(soap*, ...) allocate, set required members
/// - gco__UomVelocity_x005fPropertyType* soap_new_set_gco__UomVelocity_x005fPropertyType(soap*, ...) allocate, set all public members
/// - gco__UomVelocity_x005fPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gco__UomVelocity_x005fPropertyType(soap*, gco__UomVelocity_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gco__UomVelocity_x005fPropertyType(soap*, gco__UomVelocity_x005fPropertyType*) serialize to a stream
/// - gco__UomVelocity_x005fPropertyType* gco__UomVelocity_x005fPropertyType::soap_dup(soap*) returns deep copy of gco__UomVelocity_x005fPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gco__UomVelocity_x005fPropertyType::soap_del() deep deletes gco__UomVelocity_x005fPropertyType data members, use only after gco__UomVelocity_x005fPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gco__UomVelocity_x005fPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gco__UomVelocity_x005fPropertyType_sequence
    {
/// <PRE><BLOCKQUOTE>
///   A gml:UnitDefinition is a general definition of a unit of measure. This generic element is used only for units for which no relationship with other units or units systems is known.
///   The content model of gml:UnitDefinition adds three additional properties to gml:Definition, gml:quantityType, gml:quantityTypeReference and gml:catalogSymbol. The gml:catalogSymbol property optionally gives the short symbol used for this unit. This element is usually used when the relationship of this unit to other units or units systems is unknown.
/// </BLOCKQUOTE></PRE>
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="UnitDefinition"> with global elements <BaseUnit> <DerivedUnit> <ConventionalUnit>
   $int                                  __unionUnitDefinition         ;	///< Union _gco__union_UomVelocity_x005fPropertyType selector: set to SOAP_UNION__gco__union_UomVelocity_x005fPropertyType_<fieldname>
/// Union for substitutionGroup gco__UnitDefinition.
    union _gco__union_UomVelocity_x005fPropertyType
    {
/// <PRE><BLOCKQUOTE>
///   A gml:UnitDefinition is a general definition of a unit of measure. This generic element is used only for units for which no relationship with other units or units systems is known.
///   The content model of gml:UnitDefinition adds three additional properties to gml:Definition, gml:quantityType, gml:quantityTypeReference and gml:catalogSymbol. The gml:catalogSymbol property optionally gives the short symbol used for this unit. This element is usually used when the relationship of this unit to other units or units systems is unknown.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.isotc211.org/2005/gco:""http://www.opengis.net/gml/3.2":UnitDefinition.
    gml__UnitDefinitionType*             gml__UnitDefinition            nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   A base unit is a unit of measure that cannot be derived by combination of other base units within a particular system of units. For example, in the SI system of units, the base units are metre, kilogram, second, Ampere, Kelvin, mole, and candela, for the physical quantity types length, mass, time interval, electric current, thermodynamic temperature, amount of substance and luminous intensity, respectively.
///   gml:BaseUnit extends generic gml:UnitDefinition with the property gml:unitsSystem, which carries a reference to the units system to which this base unit is asserted to belong.
/// </BLOCKQUOTE></PRE>
/// Element "http://www.opengis.net/gml/3.2":BaseUnit.
    gml__BaseUnitType*                   gml__BaseUnit                  nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   Derived units are defined by combination of other units. Derived units are used for quantities other than those corresponding to the base units, such as hertz (s-1) for frequency, Newton (kg.m/s2) for force. Derived units based directly on base units are usually preferred for quantities other than the fundamental quantities within a system. If a derived unit is not the preferred unit, the gml:ConventionalUnit element should be used instead.
///   The gml:DerivedUnit extends gml:UnitDefinition with the property gml:derivationUnitTerms.
/// </BLOCKQUOTE></PRE>
/// Element "http://www.opengis.net/gml/3.2":DerivedUnit.
    gml__DerivedUnitType*                gml__DerivedUnit               nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   Conventional units that are neither base units nor defined by direct combination of base units are used in many application domains. For example electronVolt for energy, feet and nautical miles for length. In most cases there is a known, usually linear, conversion to a preferred unit which is either a base unit or derived by direct combination of base units.
///   The gml:ConventionalUnit extends gml:UnitDefinition with a property that describes a conversion to a preferred unit for this physical quantity. When the conversion is exact, the element gml:conversionToPreferredUnit should be used, or when the conversion is not exact the element gml:roughConversionToPreferredUnit is available. Both of these elements have the same content model. The gml:derivationUnitTerm property defined above is included to allow a user to optionally record how this unit may be derived from other ("more primitive") units.
/// </BLOCKQUOTE></PRE>
/// Element "http://www.opengis.net/gml/3.2":ConventionalUnit.
    gml__ConventionalUnitType*           gml__ConventionalUnit          nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_UomVelocity_x005fPropertyType;
//  END OF SUBSTITUTIONS
    }                                   *__UomVelocity_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":"http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectReference">.
/// Attribute "uuidref" of XSD type xs:string.
   @std::string*                         uuidref                        0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.isotc211.org/2005/gco":UomTime_PropertyType is a complexType.
///
/// class gco__UomTime_x005fPropertyType operations:
/// - gco__UomTime_x005fPropertyType* soap_new_gco__UomTime_x005fPropertyType(soap*) allocate and default initialize
/// - gco__UomTime_x005fPropertyType* soap_new_gco__UomTime_x005fPropertyType(soap*, int num) allocate array and default initialize values
/// - gco__UomTime_x005fPropertyType* soap_new_req_gco__UomTime_x005fPropertyType(soap*, ...) allocate, set required members
/// - gco__UomTime_x005fPropertyType* soap_new_set_gco__UomTime_x005fPropertyType(soap*, ...) allocate, set all public members
/// - gco__UomTime_x005fPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gco__UomTime_x005fPropertyType(soap*, gco__UomTime_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gco__UomTime_x005fPropertyType(soap*, gco__UomTime_x005fPropertyType*) serialize to a stream
/// - gco__UomTime_x005fPropertyType* gco__UomTime_x005fPropertyType::soap_dup(soap*) returns deep copy of gco__UomTime_x005fPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gco__UomTime_x005fPropertyType::soap_del() deep deletes gco__UomTime_x005fPropertyType data members, use only after gco__UomTime_x005fPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gco__UomTime_x005fPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gco__UomTime_x005fPropertyType_sequence
    {
/// <PRE><BLOCKQUOTE>
///   A gml:UnitDefinition is a general definition of a unit of measure. This generic element is used only for units for which no relationship with other units or units systems is known.
///   The content model of gml:UnitDefinition adds three additional properties to gml:Definition, gml:quantityType, gml:quantityTypeReference and gml:catalogSymbol. The gml:catalogSymbol property optionally gives the short symbol used for this unit. This element is usually used when the relationship of this unit to other units or units systems is unknown.
/// </BLOCKQUOTE></PRE>
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="UnitDefinition"> with global elements <BaseUnit> <DerivedUnit> <ConventionalUnit>
   $int                                  __unionUnitDefinition         ;	///< Union _gco__union_UomTime_x005fPropertyType selector: set to SOAP_UNION__gco__union_UomTime_x005fPropertyType_<fieldname>
/// Union for substitutionGroup gco__UnitDefinition.
    union _gco__union_UomTime_x005fPropertyType
    {
/// <PRE><BLOCKQUOTE>
///   A gml:UnitDefinition is a general definition of a unit of measure. This generic element is used only for units for which no relationship with other units or units systems is known.
///   The content model of gml:UnitDefinition adds three additional properties to gml:Definition, gml:quantityType, gml:quantityTypeReference and gml:catalogSymbol. The gml:catalogSymbol property optionally gives the short symbol used for this unit. This element is usually used when the relationship of this unit to other units or units systems is unknown.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.isotc211.org/2005/gco:""http://www.opengis.net/gml/3.2":UnitDefinition.
    gml__UnitDefinitionType*             gml__UnitDefinition            nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   A base unit is a unit of measure that cannot be derived by combination of other base units within a particular system of units. For example, in the SI system of units, the base units are metre, kilogram, second, Ampere, Kelvin, mole, and candela, for the physical quantity types length, mass, time interval, electric current, thermodynamic temperature, amount of substance and luminous intensity, respectively.
///   gml:BaseUnit extends generic gml:UnitDefinition with the property gml:unitsSystem, which carries a reference to the units system to which this base unit is asserted to belong.
/// </BLOCKQUOTE></PRE>
/// Element "http://www.opengis.net/gml/3.2":BaseUnit.
    gml__BaseUnitType*                   gml__BaseUnit                  nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   Derived units are defined by combination of other units. Derived units are used for quantities other than those corresponding to the base units, such as hertz (s-1) for frequency, Newton (kg.m/s2) for force. Derived units based directly on base units are usually preferred for quantities other than the fundamental quantities within a system. If a derived unit is not the preferred unit, the gml:ConventionalUnit element should be used instead.
///   The gml:DerivedUnit extends gml:UnitDefinition with the property gml:derivationUnitTerms.
/// </BLOCKQUOTE></PRE>
/// Element "http://www.opengis.net/gml/3.2":DerivedUnit.
    gml__DerivedUnitType*                gml__DerivedUnit               nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   Conventional units that are neither base units nor defined by direct combination of base units are used in many application domains. For example electronVolt for energy, feet and nautical miles for length. In most cases there is a known, usually linear, conversion to a preferred unit which is either a base unit or derived by direct combination of base units.
///   The gml:ConventionalUnit extends gml:UnitDefinition with a property that describes a conversion to a preferred unit for this physical quantity. When the conversion is exact, the element gml:conversionToPreferredUnit should be used, or when the conversion is not exact the element gml:roughConversionToPreferredUnit is available. Both of these elements have the same content model. The gml:derivationUnitTerm property defined above is included to allow a user to optionally record how this unit may be derived from other ("more primitive") units.
/// </BLOCKQUOTE></PRE>
/// Element "http://www.opengis.net/gml/3.2":ConventionalUnit.
    gml__ConventionalUnitType*           gml__ConventionalUnit          nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_UomTime_x005fPropertyType;
//  END OF SUBSTITUTIONS
    }                                   *__UomTime_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":"http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectReference">.
/// Attribute "uuidref" of XSD type xs:string.
   @std::string*                         uuidref                        0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.isotc211.org/2005/gco":UomVolume_PropertyType is a complexType.
///
/// class gco__UomVolume_x005fPropertyType operations:
/// - gco__UomVolume_x005fPropertyType* soap_new_gco__UomVolume_x005fPropertyType(soap*) allocate and default initialize
/// - gco__UomVolume_x005fPropertyType* soap_new_gco__UomVolume_x005fPropertyType(soap*, int num) allocate array and default initialize values
/// - gco__UomVolume_x005fPropertyType* soap_new_req_gco__UomVolume_x005fPropertyType(soap*, ...) allocate, set required members
/// - gco__UomVolume_x005fPropertyType* soap_new_set_gco__UomVolume_x005fPropertyType(soap*, ...) allocate, set all public members
/// - gco__UomVolume_x005fPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gco__UomVolume_x005fPropertyType(soap*, gco__UomVolume_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gco__UomVolume_x005fPropertyType(soap*, gco__UomVolume_x005fPropertyType*) serialize to a stream
/// - gco__UomVolume_x005fPropertyType* gco__UomVolume_x005fPropertyType::soap_dup(soap*) returns deep copy of gco__UomVolume_x005fPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gco__UomVolume_x005fPropertyType::soap_del() deep deletes gco__UomVolume_x005fPropertyType data members, use only after gco__UomVolume_x005fPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gco__UomVolume_x005fPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gco__UomVolume_x005fPropertyType_sequence
    {
/// <PRE><BLOCKQUOTE>
///   A gml:UnitDefinition is a general definition of a unit of measure. This generic element is used only for units for which no relationship with other units or units systems is known.
///   The content model of gml:UnitDefinition adds three additional properties to gml:Definition, gml:quantityType, gml:quantityTypeReference and gml:catalogSymbol. The gml:catalogSymbol property optionally gives the short symbol used for this unit. This element is usually used when the relationship of this unit to other units or units systems is unknown.
/// </BLOCKQUOTE></PRE>
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="UnitDefinition"> with global elements <BaseUnit> <DerivedUnit> <ConventionalUnit>
   $int                                  __unionUnitDefinition         ;	///< Union _gco__union_UomVolume_x005fPropertyType selector: set to SOAP_UNION__gco__union_UomVolume_x005fPropertyType_<fieldname>
/// Union for substitutionGroup gco__UnitDefinition.
    union _gco__union_UomVolume_x005fPropertyType
    {
/// <PRE><BLOCKQUOTE>
///   A gml:UnitDefinition is a general definition of a unit of measure. This generic element is used only for units for which no relationship with other units or units systems is known.
///   The content model of gml:UnitDefinition adds three additional properties to gml:Definition, gml:quantityType, gml:quantityTypeReference and gml:catalogSymbol. The gml:catalogSymbol property optionally gives the short symbol used for this unit. This element is usually used when the relationship of this unit to other units or units systems is unknown.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.isotc211.org/2005/gco:""http://www.opengis.net/gml/3.2":UnitDefinition.
    gml__UnitDefinitionType*             gml__UnitDefinition            nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   A base unit is a unit of measure that cannot be derived by combination of other base units within a particular system of units. For example, in the SI system of units, the base units are metre, kilogram, second, Ampere, Kelvin, mole, and candela, for the physical quantity types length, mass, time interval, electric current, thermodynamic temperature, amount of substance and luminous intensity, respectively.
///   gml:BaseUnit extends generic gml:UnitDefinition with the property gml:unitsSystem, which carries a reference to the units system to which this base unit is asserted to belong.
/// </BLOCKQUOTE></PRE>
/// Element "http://www.opengis.net/gml/3.2":BaseUnit.
    gml__BaseUnitType*                   gml__BaseUnit                  nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   Derived units are defined by combination of other units. Derived units are used for quantities other than those corresponding to the base units, such as hertz (s-1) for frequency, Newton (kg.m/s2) for force. Derived units based directly on base units are usually preferred for quantities other than the fundamental quantities within a system. If a derived unit is not the preferred unit, the gml:ConventionalUnit element should be used instead.
///   The gml:DerivedUnit extends gml:UnitDefinition with the property gml:derivationUnitTerms.
/// </BLOCKQUOTE></PRE>
/// Element "http://www.opengis.net/gml/3.2":DerivedUnit.
    gml__DerivedUnitType*                gml__DerivedUnit               nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   Conventional units that are neither base units nor defined by direct combination of base units are used in many application domains. For example electronVolt for energy, feet and nautical miles for length. In most cases there is a known, usually linear, conversion to a preferred unit which is either a base unit or derived by direct combination of base units.
///   The gml:ConventionalUnit extends gml:UnitDefinition with a property that describes a conversion to a preferred unit for this physical quantity. When the conversion is exact, the element gml:conversionToPreferredUnit should be used, or when the conversion is not exact the element gml:roughConversionToPreferredUnit is available. Both of these elements have the same content model. The gml:derivationUnitTerm property defined above is included to allow a user to optionally record how this unit may be derived from other ("more primitive") units.
/// </BLOCKQUOTE></PRE>
/// Element "http://www.opengis.net/gml/3.2":ConventionalUnit.
    gml__ConventionalUnitType*           gml__ConventionalUnit          nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_UomVolume_x005fPropertyType;
//  END OF SUBSTITUTIONS
    }                                   *__UomVolume_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":"http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectReference">.
/// Attribute "uuidref" of XSD type xs:string.
   @std::string*                         uuidref                        0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.isotc211.org/2005/gco":DateTime_PropertyType is a complexType.
///
/// class gco__DateTime_x005fPropertyType operations:
/// - gco__DateTime_x005fPropertyType* soap_new_gco__DateTime_x005fPropertyType(soap*) allocate and default initialize
/// - gco__DateTime_x005fPropertyType* soap_new_gco__DateTime_x005fPropertyType(soap*, int num) allocate array and default initialize values
/// - gco__DateTime_x005fPropertyType* soap_new_req_gco__DateTime_x005fPropertyType(soap*, ...) allocate, set required members
/// - gco__DateTime_x005fPropertyType* soap_new_set_gco__DateTime_x005fPropertyType(soap*, ...) allocate, set all public members
/// - gco__DateTime_x005fPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gco__DateTime_x005fPropertyType(soap*, gco__DateTime_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gco__DateTime_x005fPropertyType(soap*, gco__DateTime_x005fPropertyType*) serialize to a stream
/// - gco__DateTime_x005fPropertyType* gco__DateTime_x005fPropertyType::soap_dup(soap*) returns deep copy of gco__DateTime_x005fPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gco__DateTime_x005fPropertyType::soap_del() deep deletes gco__DateTime_x005fPropertyType data members, use only after gco__DateTime_x005fPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gco__DateTime_x005fPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gco__DateTime_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gco:""http://www.isotc211.org/2005/gco":DateTime.
    time_t                               DateTime                       1;	///< Required element.
    }                                   *__DateTime_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":"http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
};

/// @brief "http://www.isotc211.org/2005/gco":Date_PropertyType is a complexType.
///
/// class gco__Date_x005fPropertyType operations:
/// - gco__Date_x005fPropertyType* soap_new_gco__Date_x005fPropertyType(soap*) allocate and default initialize
/// - gco__Date_x005fPropertyType* soap_new_gco__Date_x005fPropertyType(soap*, int num) allocate array and default initialize values
/// - gco__Date_x005fPropertyType* soap_new_req_gco__Date_x005fPropertyType(soap*, ...) allocate, set required members
/// - gco__Date_x005fPropertyType* soap_new_set_gco__Date_x005fPropertyType(soap*, ...) allocate, set all public members
/// - gco__Date_x005fPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gco__Date_x005fPropertyType(soap*, gco__Date_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gco__Date_x005fPropertyType(soap*, gco__Date_x005fPropertyType*) serialize to a stream
/// - gco__Date_x005fPropertyType* gco__Date_x005fPropertyType::soap_dup(soap*) returns deep copy of gco__Date_x005fPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gco__Date_x005fPropertyType::soap_del() deep deletes gco__Date_x005fPropertyType data members, use only after gco__Date_x005fPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gco__Date_x005fPropertyType : public xsd__anyType
{ public:
//  BEGIN CHOICE <xs:choice minOccurs="0">
   $int                                  __union_Date_x005fPropertyType 0;	///< Union _gco__union_Date_x005fPropertyType selector: set to SOAP_UNION__gco__union_Date_x005fPropertyType_<fieldname> or 0 to omit
/// Union for choice in gco__Date_x005fPropertyType.
    union _gco__union_Date_x005fPropertyType
    {
/// Element reference "http://www.isotc211.org/2005/gco:""http://www.isotc211.org/2005/gco":Date.
    gco__Date_x005fType*                 Date                           nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element reference "http://www.isotc211.org/2005/gco:""http://www.isotc211.org/2005/gco":DateTime.
    time_t                               DateTime                       1;	///< Required element.
    }                                    union_Date_x005fPropertyType  ;
//  END OF CHOICE
/// Attribute reference "http://www.isotc211.org/2005/gco":"http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
};

/// @brief "http://www.isotc211.org/2005/gco":Number_PropertyType is a complexType.
///
/// class gco__Number_x005fPropertyType operations:
/// - gco__Number_x005fPropertyType* soap_new_gco__Number_x005fPropertyType(soap*) allocate and default initialize
/// - gco__Number_x005fPropertyType* soap_new_gco__Number_x005fPropertyType(soap*, int num) allocate array and default initialize values
/// - gco__Number_x005fPropertyType* soap_new_req_gco__Number_x005fPropertyType(soap*, ...) allocate, set required members
/// - gco__Number_x005fPropertyType* soap_new_set_gco__Number_x005fPropertyType(soap*, ...) allocate, set all public members
/// - gco__Number_x005fPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gco__Number_x005fPropertyType(soap*, gco__Number_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gco__Number_x005fPropertyType(soap*, gco__Number_x005fPropertyType*) serialize to a stream
/// - gco__Number_x005fPropertyType* gco__Number_x005fPropertyType::soap_dup(soap*) returns deep copy of gco__Number_x005fPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gco__Number_x005fPropertyType::soap_del() deep deletes gco__Number_x005fPropertyType data members, use only after gco__Number_x005fPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gco__Number_x005fPropertyType : public xsd__anyType
{ public:
//  BEGIN CHOICE <xs:choice minOccurs="0">
   $int                                  __union_Number_x005fPropertyType 0;	///< Union _gco__union_Number_x005fPropertyType selector: set to SOAP_UNION__gco__union_Number_x005fPropertyType_<fieldname> or 0 to omit
/// Union for choice in gco__Number_x005fPropertyType.
    union _gco__union_Number_x005fPropertyType
    {
/// Element reference "http://www.isotc211.org/2005/gco:""http://www.isotc211.org/2005/gco":Real.
    double                               Real                           1;	///< Required element.
/// Element reference "http://www.isotc211.org/2005/gco:""http://www.isotc211.org/2005/gco":Decimal.
    xsd__decimal*                        Decimal                        nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element reference "http://www.isotc211.org/2005/gco:""http://www.isotc211.org/2005/gco":Integer.
    long                                 Integer                        1;	///< Required element.
    }                                    union_Number_x005fPropertyType;
//  END OF CHOICE
/// Attribute reference "http://www.isotc211.org/2005/gco":"http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
};

/// @brief "http://www.isotc211.org/2005/gco":Decimal_PropertyType is a complexType.
///
/// class gco__Decimal_x005fPropertyType operations:
/// - gco__Decimal_x005fPropertyType* soap_new_gco__Decimal_x005fPropertyType(soap*) allocate and default initialize
/// - gco__Decimal_x005fPropertyType* soap_new_gco__Decimal_x005fPropertyType(soap*, int num) allocate array and default initialize values
/// - gco__Decimal_x005fPropertyType* soap_new_req_gco__Decimal_x005fPropertyType(soap*, ...) allocate, set required members
/// - gco__Decimal_x005fPropertyType* soap_new_set_gco__Decimal_x005fPropertyType(soap*, ...) allocate, set all public members
/// - gco__Decimal_x005fPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gco__Decimal_x005fPropertyType(soap*, gco__Decimal_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gco__Decimal_x005fPropertyType(soap*, gco__Decimal_x005fPropertyType*) serialize to a stream
/// - gco__Decimal_x005fPropertyType* gco__Decimal_x005fPropertyType::soap_dup(soap*) returns deep copy of gco__Decimal_x005fPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gco__Decimal_x005fPropertyType::soap_del() deep deletes gco__Decimal_x005fPropertyType data members, use only after gco__Decimal_x005fPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gco__Decimal_x005fPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gco__Decimal_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gco:""http://www.isotc211.org/2005/gco":Decimal.
    xsd__decimal                         Decimal                        1;	///< Required element.
    }                                   *__Decimal_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":"http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
};

/// @brief "http://www.isotc211.org/2005/gco":Real_PropertyType is a complexType.
///
/// class gco__Real_x005fPropertyType operations:
/// - gco__Real_x005fPropertyType* soap_new_gco__Real_x005fPropertyType(soap*) allocate and default initialize
/// - gco__Real_x005fPropertyType* soap_new_gco__Real_x005fPropertyType(soap*, int num) allocate array and default initialize values
/// - gco__Real_x005fPropertyType* soap_new_req_gco__Real_x005fPropertyType(soap*, ...) allocate, set required members
/// - gco__Real_x005fPropertyType* soap_new_set_gco__Real_x005fPropertyType(soap*, ...) allocate, set all public members
/// - gco__Real_x005fPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gco__Real_x005fPropertyType(soap*, gco__Real_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gco__Real_x005fPropertyType(soap*, gco__Real_x005fPropertyType*) serialize to a stream
/// - gco__Real_x005fPropertyType* gco__Real_x005fPropertyType::soap_dup(soap*) returns deep copy of gco__Real_x005fPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gco__Real_x005fPropertyType::soap_del() deep deletes gco__Real_x005fPropertyType data members, use only after gco__Real_x005fPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gco__Real_x005fPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gco__Real_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gco:""http://www.isotc211.org/2005/gco":Real.
    double                               Real                           1;	///< Required element.
    }                                   *__Real_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":"http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
};

/// @brief "http://www.isotc211.org/2005/gco":Integer_PropertyType is a complexType.
///
/// class gco__Integer_x005fPropertyType operations:
/// - gco__Integer_x005fPropertyType* soap_new_gco__Integer_x005fPropertyType(soap*) allocate and default initialize
/// - gco__Integer_x005fPropertyType* soap_new_gco__Integer_x005fPropertyType(soap*, int num) allocate array and default initialize values
/// - gco__Integer_x005fPropertyType* soap_new_req_gco__Integer_x005fPropertyType(soap*, ...) allocate, set required members
/// - gco__Integer_x005fPropertyType* soap_new_set_gco__Integer_x005fPropertyType(soap*, ...) allocate, set all public members
/// - gco__Integer_x005fPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gco__Integer_x005fPropertyType(soap*, gco__Integer_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gco__Integer_x005fPropertyType(soap*, gco__Integer_x005fPropertyType*) serialize to a stream
/// - gco__Integer_x005fPropertyType* gco__Integer_x005fPropertyType::soap_dup(soap*) returns deep copy of gco__Integer_x005fPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gco__Integer_x005fPropertyType::soap_del() deep deletes gco__Integer_x005fPropertyType data members, use only after gco__Integer_x005fPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gco__Integer_x005fPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gco__Integer_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gco:""http://www.isotc211.org/2005/gco":Integer.
    long                                 Integer                        1;	///< Required element.
    }                                   *__Integer_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":"http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
};

/// @brief "http://www.isotc211.org/2005/gco":UnlimitedInteger_PropertyType is a complexType.
///
/// class gco__UnlimitedInteger_x005fPropertyType operations:
/// - gco__UnlimitedInteger_x005fPropertyType* soap_new_gco__UnlimitedInteger_x005fPropertyType(soap*) allocate and default initialize
/// - gco__UnlimitedInteger_x005fPropertyType* soap_new_gco__UnlimitedInteger_x005fPropertyType(soap*, int num) allocate array and default initialize values
/// - gco__UnlimitedInteger_x005fPropertyType* soap_new_req_gco__UnlimitedInteger_x005fPropertyType(soap*, ...) allocate, set required members
/// - gco__UnlimitedInteger_x005fPropertyType* soap_new_set_gco__UnlimitedInteger_x005fPropertyType(soap*, ...) allocate, set all public members
/// - gco__UnlimitedInteger_x005fPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gco__UnlimitedInteger_x005fPropertyType(soap*, gco__UnlimitedInteger_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gco__UnlimitedInteger_x005fPropertyType(soap*, gco__UnlimitedInteger_x005fPropertyType*) serialize to a stream
/// - gco__UnlimitedInteger_x005fPropertyType* gco__UnlimitedInteger_x005fPropertyType::soap_dup(soap*) returns deep copy of gco__UnlimitedInteger_x005fPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gco__UnlimitedInteger_x005fPropertyType::soap_del() deep deletes gco__UnlimitedInteger_x005fPropertyType data members, use only after gco__UnlimitedInteger_x005fPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gco__UnlimitedInteger_x005fPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gco__UnlimitedInteger_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gco:""http://www.isotc211.org/2005/gco":UnlimitedInteger.
    gco__UnlimitedInteger_x005fType*     UnlimitedInteger               1;	///< Required element.
    }                                   *__UnlimitedInteger_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":"http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
};

/// @brief "http://www.isotc211.org/2005/gco":Record_PropertyType is a complexType.
///
/// class gco__Record_x005fPropertyType operations:
/// - gco__Record_x005fPropertyType* soap_new_gco__Record_x005fPropertyType(soap*) allocate and default initialize
/// - gco__Record_x005fPropertyType* soap_new_gco__Record_x005fPropertyType(soap*, int num) allocate array and default initialize values
/// - gco__Record_x005fPropertyType* soap_new_req_gco__Record_x005fPropertyType(soap*, ...) allocate, set required members
/// - gco__Record_x005fPropertyType* soap_new_set_gco__Record_x005fPropertyType(soap*, ...) allocate, set all public members
/// - gco__Record_x005fPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gco__Record_x005fPropertyType(soap*, gco__Record_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gco__Record_x005fPropertyType(soap*, gco__Record_x005fPropertyType*) serialize to a stream
/// - gco__Record_x005fPropertyType* gco__Record_x005fPropertyType::soap_dup(soap*) returns deep copy of gco__Record_x005fPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gco__Record_x005fPropertyType::soap_del() deep deletes gco__Record_x005fPropertyType data members, use only after gco__Record_x005fPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gco__Record_x005fPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gco__Record_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gco:""http://www.isotc211.org/2005/gco":Record.
    _XML                                 Record                         1;	///< Required element.
    }                                   *__Record_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":"http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectReference">.
/// Attribute "uuidref" of XSD type xs:string.
   @std::string*                         uuidref                        0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.isotc211.org/2005/gco":RecordType_PropertyType is a complexType.
///
/// class gco__RecordType_x005fPropertyType operations:
/// - gco__RecordType_x005fPropertyType* soap_new_gco__RecordType_x005fPropertyType(soap*) allocate and default initialize
/// - gco__RecordType_x005fPropertyType* soap_new_gco__RecordType_x005fPropertyType(soap*, int num) allocate array and default initialize values
/// - gco__RecordType_x005fPropertyType* soap_new_req_gco__RecordType_x005fPropertyType(soap*, ...) allocate, set required members
/// - gco__RecordType_x005fPropertyType* soap_new_set_gco__RecordType_x005fPropertyType(soap*, ...) allocate, set all public members
/// - gco__RecordType_x005fPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gco__RecordType_x005fPropertyType(soap*, gco__RecordType_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gco__RecordType_x005fPropertyType(soap*, gco__RecordType_x005fPropertyType*) serialize to a stream
/// - gco__RecordType_x005fPropertyType* gco__RecordType_x005fPropertyType::soap_dup(soap*) returns deep copy of gco__RecordType_x005fPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gco__RecordType_x005fPropertyType::soap_del() deep deletes gco__RecordType_x005fPropertyType data members, use only after gco__RecordType_x005fPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gco__RecordType_x005fPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gco__RecordType_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gco:""http://www.isotc211.org/2005/gco":RecordType.
    gco__RecordType_x005fType*           RecordType                     1;	///< Required element.
    }                                   *__RecordType_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":"http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
};

/// @brief "http://www.isotc211.org/2005/gco":Binary_PropertyType is a complexType.
///
/// class gco__Binary_x005fPropertyType operations:
/// - gco__Binary_x005fPropertyType* soap_new_gco__Binary_x005fPropertyType(soap*) allocate and default initialize
/// - gco__Binary_x005fPropertyType* soap_new_gco__Binary_x005fPropertyType(soap*, int num) allocate array and default initialize values
/// - gco__Binary_x005fPropertyType* soap_new_req_gco__Binary_x005fPropertyType(soap*, ...) allocate, set required members
/// - gco__Binary_x005fPropertyType* soap_new_set_gco__Binary_x005fPropertyType(soap*, ...) allocate, set all public members
/// - gco__Binary_x005fPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gco__Binary_x005fPropertyType(soap*, gco__Binary_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gco__Binary_x005fPropertyType(soap*, gco__Binary_x005fPropertyType*) serialize to a stream
/// - gco__Binary_x005fPropertyType* gco__Binary_x005fPropertyType::soap_dup(soap*) returns deep copy of gco__Binary_x005fPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gco__Binary_x005fPropertyType::soap_del() deep deletes gco__Binary_x005fPropertyType data members, use only after gco__Binary_x005fPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gco__Binary_x005fPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gco__Binary_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gco:""http://www.isotc211.org/2005/gco":Binary.
    gco__Binary_x005fType*               Binary                         1;	///< Required element.
    }                                   *__Binary_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":"http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
};

/// @brief "http://www.isotc211.org/2005/gco":AbstractObject_Type is an abstract complexType.
///
/// class gco__AbstractObject_x005fType operations:
/// - gco__AbstractObject_x005fType* soap_new_gco__AbstractObject_x005fType(soap*) allocate and default initialize
/// - gco__AbstractObject_x005fType* soap_new_gco__AbstractObject_x005fType(soap*, int num) allocate array and default initialize values
/// - gco__AbstractObject_x005fType* soap_new_req_gco__AbstractObject_x005fType(soap*, ...) allocate, set required members
/// - gco__AbstractObject_x005fType* soap_new_set_gco__AbstractObject_x005fType(soap*, ...) allocate, set all public members
/// - gco__AbstractObject_x005fType::soap_default(soap*) default initialize members
/// - int soap_read_gco__AbstractObject_x005fType(soap*, gco__AbstractObject_x005fType*) deserialize from a stream
/// - int soap_write_gco__AbstractObject_x005fType(soap*, gco__AbstractObject_x005fType*) serialize to a stream
/// - gco__AbstractObject_x005fType* gco__AbstractObject_x005fType::soap_dup(soap*) returns deep copy of gco__AbstractObject_x005fType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gco__AbstractObject_x005fType::soap_del() deep deletes gco__AbstractObject_x005fType data members, use only after gco__AbstractObject_x005fType::soap_dup(NULL) (use soapcpp2 -Ed)
class gco__AbstractObject_x005fType : public xsd__anyType
{ public:
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectIdentification">.
/// Attribute "id" of XSD type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute "uuid" of XSD type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.isotc211.org/2005/gco":ObjectReference_PropertyType is a complexType.
///
/// class gco__ObjectReference_x005fPropertyType operations:
/// - gco__ObjectReference_x005fPropertyType* soap_new_gco__ObjectReference_x005fPropertyType(soap*) allocate and default initialize
/// - gco__ObjectReference_x005fPropertyType* soap_new_gco__ObjectReference_x005fPropertyType(soap*, int num) allocate array and default initialize values
/// - gco__ObjectReference_x005fPropertyType* soap_new_req_gco__ObjectReference_x005fPropertyType(soap*, ...) allocate, set required members
/// - gco__ObjectReference_x005fPropertyType* soap_new_set_gco__ObjectReference_x005fPropertyType(soap*, ...) allocate, set all public members
/// - gco__ObjectReference_x005fPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gco__ObjectReference_x005fPropertyType(soap*, gco__ObjectReference_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gco__ObjectReference_x005fPropertyType(soap*, gco__ObjectReference_x005fPropertyType*) serialize to a stream
/// - gco__ObjectReference_x005fPropertyType* gco__ObjectReference_x005fPropertyType::soap_dup(soap*) returns deep copy of gco__ObjectReference_x005fPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gco__ObjectReference_x005fPropertyType::soap_del() deep deletes gco__ObjectReference_x005fPropertyType data members, use only after gco__ObjectReference_x005fPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gco__ObjectReference_x005fPropertyType : public xsd__anyType
{ public:
/// Attribute reference "http://www.isotc211.org/2005/gco":"http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectReference">.
/// Attribute "uuidref" of XSD type xs:string.
   @std::string*                         uuidref                        0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://www.isotc211.org/2005/gss                                         *
 *                                                                            *
\******************************************************************************/

/// @brief "http://www.isotc211.org/2005/gss":GM_Point_PropertyType is a complexType.
///
/// class gss__GM_x005fPoint_x005fPropertyType operations:
/// - gss__GM_x005fPoint_x005fPropertyType* soap_new_gss__GM_x005fPoint_x005fPropertyType(soap*) allocate and default initialize
/// - gss__GM_x005fPoint_x005fPropertyType* soap_new_gss__GM_x005fPoint_x005fPropertyType(soap*, int num) allocate array and default initialize values
/// - gss__GM_x005fPoint_x005fPropertyType* soap_new_req_gss__GM_x005fPoint_x005fPropertyType(soap*, ...) allocate, set required members
/// - gss__GM_x005fPoint_x005fPropertyType* soap_new_set_gss__GM_x005fPoint_x005fPropertyType(soap*, ...) allocate, set all public members
/// - gss__GM_x005fPoint_x005fPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gss__GM_x005fPoint_x005fPropertyType(soap*, gss__GM_x005fPoint_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gss__GM_x005fPoint_x005fPropertyType(soap*, gss__GM_x005fPoint_x005fPropertyType*) serialize to a stream
/// - gss__GM_x005fPoint_x005fPropertyType* gss__GM_x005fPoint_x005fPropertyType::soap_dup(soap*) returns deep copy of gss__GM_x005fPoint_x005fPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gss__GM_x005fPoint_x005fPropertyType::soap_del() deep deletes gss__GM_x005fPoint_x005fPropertyType data members, use only after gss__GM_x005fPoint_x005fPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gss__GM_x005fPoint_x005fPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gss__GM_x005fPoint_x005fPropertyType_sequence
    {
/// <PRE><BLOCKQUOTE>
///   A Point is defined by a single coordinate tuple. The direct position of a point is specified by the pos element which is of type DirectPositionType.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.isotc211.org/2005/gss:""http://www.opengis.net/gml/3.2":Point.
    gml__PointType*                      gml__Point                     1;	///< Required element.
    }                                   *__GM_x005fPoint_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gss":"http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectReference">.
/// Attribute "uuidref" of XSD type xs:string.
   @std::string*                         :uuidref                       0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.isotc211.org/2005/gss":GM_Object_PropertyType is a complexType.
///
/// class gss__GM_x005fObject_x005fPropertyType operations:
/// - gss__GM_x005fObject_x005fPropertyType* soap_new_gss__GM_x005fObject_x005fPropertyType(soap*) allocate and default initialize
/// - gss__GM_x005fObject_x005fPropertyType* soap_new_gss__GM_x005fObject_x005fPropertyType(soap*, int num) allocate array and default initialize values
/// - gss__GM_x005fObject_x005fPropertyType* soap_new_req_gss__GM_x005fObject_x005fPropertyType(soap*, ...) allocate, set required members
/// - gss__GM_x005fObject_x005fPropertyType* soap_new_set_gss__GM_x005fObject_x005fPropertyType(soap*, ...) allocate, set all public members
/// - gss__GM_x005fObject_x005fPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gss__GM_x005fObject_x005fPropertyType(soap*, gss__GM_x005fObject_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gss__GM_x005fObject_x005fPropertyType(soap*, gss__GM_x005fObject_x005fPropertyType*) serialize to a stream
/// - gss__GM_x005fObject_x005fPropertyType* gss__GM_x005fObject_x005fPropertyType::soap_dup(soap*) returns deep copy of gss__GM_x005fObject_x005fPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gss__GM_x005fObject_x005fPropertyType::soap_del() deep deletes gss__GM_x005fObject_x005fPropertyType data members, use only after gss__GM_x005fObject_x005fPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gss__GM_x005fObject_x005fPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gss__GM_x005fObject_x005fPropertyType_sequence
    {
/// <PRE><BLOCKQUOTE>
///   The AbstractGeometry element is the abstract head of the substitution group for all geometry elements of GML. This includes pre-defined and user-defined geometry elements. Any geometry element shall be a direct or indirect extension/restriction of AbstractGeometryType and shall be directly or indirectly in the substitution group of AbstractGeometry.
/// </BLOCKQUOTE></PRE>
/// Reference "http://www.opengis.net/gml/3.2":AbstractGeometry to abstract element.
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractGeometry"> with global elements <GeometricComplex>
   $int                                  __unionAbstractGeometry       ;	///< Union _gss__union_GM_x005fObject_x005fPropertyType selector: set to SOAP_UNION__gss__union_GM_x005fObject_x005fPropertyType_<fieldname>
/// Union for substitutionGroup gss__AbstractGeometry.
    union _gss__union_GM_x005fObject_x005fPropertyType
    {
/// Element "http://www.opengis.net/gml/3.2":GeometricComplex.
    gml__GeometricComplexType*           gml__GeometricComplex          nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_GM_x005fObject_x005fPropertyType;
//  END OF SUBSTITUTIONS
    }                                   *__GM_x005fObject_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gss":"http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectReference">.
/// Attribute "uuidref" of XSD type xs:string.
   @std::string*                         :uuidref                       0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://www.isotc211.org/2005/gts                                         *
 *                                                                            *
\******************************************************************************/

/// @brief "http://www.isotc211.org/2005/gts":TM_Primitive_PropertyType is a complexType.
///
/// class gts__TM_x005fPrimitive_x005fPropertyType operations:
/// - gts__TM_x005fPrimitive_x005fPropertyType* soap_new_gts__TM_x005fPrimitive_x005fPropertyType(soap*) allocate and default initialize
/// - gts__TM_x005fPrimitive_x005fPropertyType* soap_new_gts__TM_x005fPrimitive_x005fPropertyType(soap*, int num) allocate array and default initialize values
/// - gts__TM_x005fPrimitive_x005fPropertyType* soap_new_req_gts__TM_x005fPrimitive_x005fPropertyType(soap*, ...) allocate, set required members
/// - gts__TM_x005fPrimitive_x005fPropertyType* soap_new_set_gts__TM_x005fPrimitive_x005fPropertyType(soap*, ...) allocate, set all public members
/// - gts__TM_x005fPrimitive_x005fPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gts__TM_x005fPrimitive_x005fPropertyType(soap*, gts__TM_x005fPrimitive_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gts__TM_x005fPrimitive_x005fPropertyType(soap*, gts__TM_x005fPrimitive_x005fPropertyType*) serialize to a stream
/// - gts__TM_x005fPrimitive_x005fPropertyType* gts__TM_x005fPrimitive_x005fPropertyType::soap_dup(soap*) returns deep copy of gts__TM_x005fPrimitive_x005fPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gts__TM_x005fPrimitive_x005fPropertyType::soap_del() deep deletes gts__TM_x005fPrimitive_x005fPropertyType data members, use only after gts__TM_x005fPrimitive_x005fPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gts__TM_x005fPrimitive_x005fPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gts__TM_x005fPrimitive_x005fPropertyType_sequence
    {
/// <PRE><BLOCKQUOTE>
///   gml:AbstractTimePrimitive acts as the head of a substitution group for geometric and topological temporal primitives.
/// </BLOCKQUOTE></PRE>
/// Reference "http://www.opengis.net/gml/3.2":AbstractTimePrimitive to abstract element.
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractTimePrimitive"> with global elements
   $int                                  __unionAbstractTimePrimitive  ;	///< Union _gts__union_TM_x005fPrimitive_x005fPropertyType selector: set to SOAP_UNION__gts__union_TM_x005fPrimitive_x005fPropertyType_<fieldname>
/// Union for substitutionGroup gts__AbstractTimePrimitive.
    union _gts__union_TM_x005fPrimitive_x005fPropertyType
    {
    }                                    union_TM_x005fPrimitive_x005fPropertyType;
//  END OF SUBSTITUTIONS
    }                                   *__TM_x005fPrimitive_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gts":"http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectReference">.
/// Attribute "uuidref" of XSD type xs:string.
   @std::string*                         :uuidref                       0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.isotc211.org/2005/gts":TM_PeriodDuration_PropertyType is a complexType.
///
/// class gts__TM_x005fPeriodDuration_x005fPropertyType operations:
/// - gts__TM_x005fPeriodDuration_x005fPropertyType* soap_new_gts__TM_x005fPeriodDuration_x005fPropertyType(soap*) allocate and default initialize
/// - gts__TM_x005fPeriodDuration_x005fPropertyType* soap_new_gts__TM_x005fPeriodDuration_x005fPropertyType(soap*, int num) allocate array and default initialize values
/// - gts__TM_x005fPeriodDuration_x005fPropertyType* soap_new_req_gts__TM_x005fPeriodDuration_x005fPropertyType(soap*, ...) allocate, set required members
/// - gts__TM_x005fPeriodDuration_x005fPropertyType* soap_new_set_gts__TM_x005fPeriodDuration_x005fPropertyType(soap*, ...) allocate, set all public members
/// - gts__TM_x005fPeriodDuration_x005fPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gts__TM_x005fPeriodDuration_x005fPropertyType(soap*, gts__TM_x005fPeriodDuration_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gts__TM_x005fPeriodDuration_x005fPropertyType(soap*, gts__TM_x005fPeriodDuration_x005fPropertyType*) serialize to a stream
/// - gts__TM_x005fPeriodDuration_x005fPropertyType* gts__TM_x005fPeriodDuration_x005fPropertyType::soap_dup(soap*) returns deep copy of gts__TM_x005fPeriodDuration_x005fPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gts__TM_x005fPeriodDuration_x005fPropertyType::soap_del() deep deletes gts__TM_x005fPeriodDuration_x005fPropertyType data members, use only after gts__TM_x005fPeriodDuration_x005fPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gts__TM_x005fPeriodDuration_x005fPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gts__TM_x005fPeriodDuration_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gts:""http://www.isotc211.org/2005/gts":TM_PeriodDuration.
    xsd__duration                        TM_x005fPeriodDuration         1;	///< Required element.
    }                                   *__TM_x005fPeriodDuration_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gts":"http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
};


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://www.isotc211.org/2005/gsr                                         *
 *                                                                            *
\******************************************************************************/

/// @brief "http://www.isotc211.org/2005/gsr":SC_CRS_PropertyType is a complexType.
///
/// class gsr__SC_x005fCRS_x005fPropertyType operations:
/// - gsr__SC_x005fCRS_x005fPropertyType* soap_new_gsr__SC_x005fCRS_x005fPropertyType(soap*) allocate and default initialize
/// - gsr__SC_x005fCRS_x005fPropertyType* soap_new_gsr__SC_x005fCRS_x005fPropertyType(soap*, int num) allocate array and default initialize values
/// - gsr__SC_x005fCRS_x005fPropertyType* soap_new_req_gsr__SC_x005fCRS_x005fPropertyType(soap*, ...) allocate, set required members
/// - gsr__SC_x005fCRS_x005fPropertyType* soap_new_set_gsr__SC_x005fCRS_x005fPropertyType(soap*, ...) allocate, set all public members
/// - gsr__SC_x005fCRS_x005fPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gsr__SC_x005fCRS_x005fPropertyType(soap*, gsr__SC_x005fCRS_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gsr__SC_x005fCRS_x005fPropertyType(soap*, gsr__SC_x005fCRS_x005fPropertyType*) serialize to a stream
/// - gsr__SC_x005fCRS_x005fPropertyType* gsr__SC_x005fCRS_x005fPropertyType::soap_dup(soap*) returns deep copy of gsr__SC_x005fCRS_x005fPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gsr__SC_x005fCRS_x005fPropertyType::soap_del() deep deletes gsr__SC_x005fCRS_x005fPropertyType data members, use only after gsr__SC_x005fCRS_x005fPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gsr__SC_x005fCRS_x005fPropertyType : public xsd__anyType
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gsr__SC_x005fCRS_x005fPropertyType_sequence
    {
/// <PRE><BLOCKQUOTE>
///   gml:AbstractCRS specifies a coordinate reference system which is usually single but may be compound. This abstract complex type shall not be used, extended, or restricted, in a GML Application Schema, to define a concrete subtype with a meaning equivalent to a concrete subtype specified in this document.
/// </BLOCKQUOTE></PRE>
/// Reference "http://www.opengis.net/gml/3.2":AbstractCRS to abstract element.
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractCRS"> with global elements <CompoundCRS>
   $int                                  __unionAbstractCRS            ;	///< Union _gsr__union_SC_x005fCRS_x005fPropertyType selector: set to SOAP_UNION__gsr__union_SC_x005fCRS_x005fPropertyType_<fieldname>
/// Union for substitutionGroup gsr__AbstractCRS.
    union _gsr__union_SC_x005fCRS_x005fPropertyType
    {
/// <PRE><BLOCKQUOTE>
///   gml:CompundCRS is a coordinate reference system describing the position of points through two or more independent coordinate reference systems. It is associated with a non-repeating sequence of two or more instances of SingleCRS.
/// </BLOCKQUOTE></PRE>
/// Element "http://www.opengis.net/gml/3.2":CompoundCRS.
    gml__CompoundCRSType*                gml__CompoundCRS               nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_SC_x005fCRS_x005fPropertyType;
//  END OF SUBSTITUTIONS
    }                                   *__SC_x005fCRS_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gsr":"http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectReference">.
/// Attribute "uuidref" of XSD type xs:string.
   @std::string*                         :uuidref                       0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://inspire.ec.europa.eu/schemas/plu/3.0":DimensioningIndicationMeasureValueType is a complexType with complexContent extension of XSD type "http://inspire.ec.europa.eu/schemas/plu/3.0":DimensioningIndicationValueType.
///
/// class plu__DimensioningIndicationMeasureValueType operations:
/// - plu__DimensioningIndicationMeasureValueType* soap_new_plu__DimensioningIndicationMeasureValueType(soap*) allocate and default initialize
/// - plu__DimensioningIndicationMeasureValueType* soap_new_plu__DimensioningIndicationMeasureValueType(soap*, int num) allocate array and default initialize values
/// - plu__DimensioningIndicationMeasureValueType* soap_new_req_plu__DimensioningIndicationMeasureValueType(soap*, ...) allocate, set required members
/// - plu__DimensioningIndicationMeasureValueType* soap_new_set_plu__DimensioningIndicationMeasureValueType(soap*, ...) allocate, set all public members
/// - plu__DimensioningIndicationMeasureValueType::soap_default(soap*) default initialize members
/// - int soap_read_plu__DimensioningIndicationMeasureValueType(soap*, plu__DimensioningIndicationMeasureValueType*) deserialize from a stream
/// - int soap_write_plu__DimensioningIndicationMeasureValueType(soap*, plu__DimensioningIndicationMeasureValueType*) serialize to a stream
/// - plu__DimensioningIndicationMeasureValueType* plu__DimensioningIndicationMeasureValueType::soap_dup(soap*) returns deep copy of plu__DimensioningIndicationMeasureValueType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - plu__DimensioningIndicationMeasureValueType::soap_del() deep deletes plu__DimensioningIndicationMeasureValueType data members, use only after plu__DimensioningIndicationMeasureValueType::soap_dup(NULL) (use soapcpp2 -Ed)
class plu__DimensioningIndicationMeasureValueType : public plu__DimensioningIndicationValueType
{ public:
/*  INHERITED FROM plu__DimensioningIndicationValueType:
/// <PRE><BLOCKQUOTE>
///   -- Definition --
///   Description of the dimension indication.
/// </BLOCKQUOTE></PRE>
/// Element "indicationReference" of XSD type xs:string.
    std::string                          indicationReference            1;	///< Required element.
    END OF INHERITED FROM plu__DimensioningIndicationValueType */
/// Element "value" of XSD type "http://www.opengis.net/gml/3.2":MeasureType.
    gml__MeasureType*                    value                          1;	///< Required element.
};

/// @brief "http://inspire.ec.europa.eu/schemas/plu/3.0":DimensioningIndicationIntegerValueType is a complexType with complexContent extension of XSD type "http://inspire.ec.europa.eu/schemas/plu/3.0":DimensioningIndicationValueType.
///
/// class plu__DimensioningIndicationIntegerValueType operations:
/// - plu__DimensioningIndicationIntegerValueType* soap_new_plu__DimensioningIndicationIntegerValueType(soap*) allocate and default initialize
/// - plu__DimensioningIndicationIntegerValueType* soap_new_plu__DimensioningIndicationIntegerValueType(soap*, int num) allocate array and default initialize values
/// - plu__DimensioningIndicationIntegerValueType* soap_new_req_plu__DimensioningIndicationIntegerValueType(soap*, ...) allocate, set required members
/// - plu__DimensioningIndicationIntegerValueType* soap_new_set_plu__DimensioningIndicationIntegerValueType(soap*, ...) allocate, set all public members
/// - plu__DimensioningIndicationIntegerValueType::soap_default(soap*) default initialize members
/// - int soap_read_plu__DimensioningIndicationIntegerValueType(soap*, plu__DimensioningIndicationIntegerValueType*) deserialize from a stream
/// - int soap_write_plu__DimensioningIndicationIntegerValueType(soap*, plu__DimensioningIndicationIntegerValueType*) serialize to a stream
/// - plu__DimensioningIndicationIntegerValueType* plu__DimensioningIndicationIntegerValueType::soap_dup(soap*) returns deep copy of plu__DimensioningIndicationIntegerValueType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - plu__DimensioningIndicationIntegerValueType::soap_del() deep deletes plu__DimensioningIndicationIntegerValueType data members, use only after plu__DimensioningIndicationIntegerValueType::soap_dup(NULL) (use soapcpp2 -Ed)
class plu__DimensioningIndicationIntegerValueType : public plu__DimensioningIndicationValueType
{ public:
/*  INHERITED FROM plu__DimensioningIndicationValueType:
/// <PRE><BLOCKQUOTE>
///   -- Definition --
///   Description of the dimension indication.
/// </BLOCKQUOTE></PRE>
/// Element "indicationReference" of XSD type xs:string.
    std::string                          indicationReference            1;	///< Required element.
    END OF INHERITED FROM plu__DimensioningIndicationValueType */
/// Element "value" of XSD type xs:integer.
    long                                 value                          1;	///< Required element.
};

/// @brief "http://inspire.ec.europa.eu/schemas/plu/3.0":DimensioningIndicationCharacterValueType is a complexType with complexContent extension of XSD type "http://inspire.ec.europa.eu/schemas/plu/3.0":DimensioningIndicationValueType.
///
/// class plu__DimensioningIndicationCharacterValueType operations:
/// - plu__DimensioningIndicationCharacterValueType* soap_new_plu__DimensioningIndicationCharacterValueType(soap*) allocate and default initialize
/// - plu__DimensioningIndicationCharacterValueType* soap_new_plu__DimensioningIndicationCharacterValueType(soap*, int num) allocate array and default initialize values
/// - plu__DimensioningIndicationCharacterValueType* soap_new_req_plu__DimensioningIndicationCharacterValueType(soap*, ...) allocate, set required members
/// - plu__DimensioningIndicationCharacterValueType* soap_new_set_plu__DimensioningIndicationCharacterValueType(soap*, ...) allocate, set all public members
/// - plu__DimensioningIndicationCharacterValueType::soap_default(soap*) default initialize members
/// - int soap_read_plu__DimensioningIndicationCharacterValueType(soap*, plu__DimensioningIndicationCharacterValueType*) deserialize from a stream
/// - int soap_write_plu__DimensioningIndicationCharacterValueType(soap*, plu__DimensioningIndicationCharacterValueType*) serialize to a stream
/// - plu__DimensioningIndicationCharacterValueType* plu__DimensioningIndicationCharacterValueType::soap_dup(soap*) returns deep copy of plu__DimensioningIndicationCharacterValueType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - plu__DimensioningIndicationCharacterValueType::soap_del() deep deletes plu__DimensioningIndicationCharacterValueType data members, use only after plu__DimensioningIndicationCharacterValueType::soap_dup(NULL) (use soapcpp2 -Ed)
class plu__DimensioningIndicationCharacterValueType : public plu__DimensioningIndicationValueType
{ public:
/*  INHERITED FROM plu__DimensioningIndicationValueType:
/// <PRE><BLOCKQUOTE>
///   -- Definition --
///   Description of the dimension indication.
/// </BLOCKQUOTE></PRE>
/// Element "indicationReference" of XSD type xs:string.
    std::string                          indicationReference            1;	///< Required element.
    END OF INHERITED FROM plu__DimensioningIndicationValueType */
/// <PRE><BLOCKQUOTE>
///   -- Definition --
///   value of the dimension indications.
/// </BLOCKQUOTE></PRE>
/// Element "value" of XSD type xs:string.
    std::string                          value                          1;	///< Required element.
};

/// @brief "http://inspire.ec.europa.eu/schemas/plu/3.0":DimensioningIndicationRealValueType is a complexType with complexContent extension of XSD type "http://inspire.ec.europa.eu/schemas/plu/3.0":DimensioningIndicationValueType.
///
/// class plu__DimensioningIndicationRealValueType operations:
/// - plu__DimensioningIndicationRealValueType* soap_new_plu__DimensioningIndicationRealValueType(soap*) allocate and default initialize
/// - plu__DimensioningIndicationRealValueType* soap_new_plu__DimensioningIndicationRealValueType(soap*, int num) allocate array and default initialize values
/// - plu__DimensioningIndicationRealValueType* soap_new_req_plu__DimensioningIndicationRealValueType(soap*, ...) allocate, set required members
/// - plu__DimensioningIndicationRealValueType* soap_new_set_plu__DimensioningIndicationRealValueType(soap*, ...) allocate, set all public members
/// - plu__DimensioningIndicationRealValueType::soap_default(soap*) default initialize members
/// - int soap_read_plu__DimensioningIndicationRealValueType(soap*, plu__DimensioningIndicationRealValueType*) deserialize from a stream
/// - int soap_write_plu__DimensioningIndicationRealValueType(soap*, plu__DimensioningIndicationRealValueType*) serialize to a stream
/// - plu__DimensioningIndicationRealValueType* plu__DimensioningIndicationRealValueType::soap_dup(soap*) returns deep copy of plu__DimensioningIndicationRealValueType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - plu__DimensioningIndicationRealValueType::soap_del() deep deletes plu__DimensioningIndicationRealValueType data members, use only after plu__DimensioningIndicationRealValueType::soap_dup(NULL) (use soapcpp2 -Ed)
class plu__DimensioningIndicationRealValueType : public plu__DimensioningIndicationValueType
{ public:
/*  INHERITED FROM plu__DimensioningIndicationValueType:
/// <PRE><BLOCKQUOTE>
///   -- Definition --
///   Description of the dimension indication.
/// </BLOCKQUOTE></PRE>
/// Element "indicationReference" of XSD type xs:string.
    std::string                          indicationReference            1;	///< Required element.
    END OF INHERITED FROM plu__DimensioningIndicationValueType */
/// Element "value" of XSD type xs:double.
    double                               value                          1;	///< Required element.
};

/// @brief "http://inspire.ec.europa.eu/schemas/base2/1.0":DocumentCitationType is a complexType with complexContent extension of XSD type "http://www.opengis.net/gml/3.2":AbstractGMLType.
///
/// class base2__DocumentCitationType operations:
/// - base2__DocumentCitationType* soap_new_base2__DocumentCitationType(soap*) allocate and default initialize
/// - base2__DocumentCitationType* soap_new_base2__DocumentCitationType(soap*, int num) allocate array and default initialize values
/// - base2__DocumentCitationType* soap_new_req_base2__DocumentCitationType(soap*, ...) allocate, set required members
/// - base2__DocumentCitationType* soap_new_set_base2__DocumentCitationType(soap*, ...) allocate, set all public members
/// - base2__DocumentCitationType::soap_default(soap*) default initialize members
/// - int soap_read_base2__DocumentCitationType(soap*, base2__DocumentCitationType*) deserialize from a stream
/// - int soap_write_base2__DocumentCitationType(soap*, base2__DocumentCitationType*) serialize to a stream
/// - base2__DocumentCitationType* base2__DocumentCitationType::soap_dup(soap*) returns deep copy of base2__DocumentCitationType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - base2__DocumentCitationType::soap_del() deep deletes base2__DocumentCitationType data members, use only after base2__DocumentCitationType::soap_dup(NULL) (use soapcpp2 -Ed)
class base2__DocumentCitationType : public gml__AbstractGMLType
{ public:
/*  INHERITED FROM gml__AbstractGMLType:
//  BEGIN GROUP <xs:group name="StandardObjectProperties">
/// Vector of gml__MetaDataPropertyType* element refs of length 0..unbounded.
    std::vector<gml__MetaDataPropertyType*> metaDataProperty               0;
/// <PRE><BLOCKQUOTE>
///   The value of this property is a text description of the object. gml:description uses gml:StringOrRefType as its content model, so it may contain a simple text string content, or carry a reference to an external description. The use of gml:description to reference an external description has been deprecated and replaced by the gml:descriptionReference property.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":description.
    gml__StringOrRefType*                description                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The value of this property is a remote text description of the object. The xlink:href attribute of the gml:descriptionReference property references the external description.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":descriptionReference.
    gml__ReferenceType*                  descriptionReference           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Often, a special identifier is assigned to an object by the maintaining authority with the intention that it is used in references to the object For such cases, the codeSpace shall be provided. That identifier is usually unique either globally or within an application domain. gml:identifier is a pre-defined property for such identifiers.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":identifier.
    gml__CodeWithAuthorityType*          identifier                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The gml:name property provides a label or identifier for the object, commonly a descriptive name. An object may have several names, typically assigned by different authorities. gml:name uses the gml:CodeType content model. The authority for a name is indicated by the value of its (optional) codeSpace attribute. The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace. In common usage there will be one name per authority, so a processing application may select the name from its preferred codeSpace.
/// </BLOCKQUOTE></PRE>
/// Vector of gml__CodeType* element refs of length 0..unbounded.
    std::vector<gml__CodeType*         > name                           0;
//  END OF GROUP
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":id.
/// <PRE><BLOCKQUOTE>
///   The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.
/// </BLOCKQUOTE></PRE>
   @xsd__ID*                             gml__id                        0;	///< Optional attribute.
    END OF INHERITED FROM gml__AbstractGMLType */
/// <PRE><BLOCKQUOTE>
///   -- Name --
///   name
///   -- Definition --
///   Name of the document.
///   -- Description --
///   NOTE For legal documents, this should be the official name assigned to the legislative instrument.
///   EXAMPLE The official legal name for the INSPIRE Directive is "Directive 2007/2/EC of the European Parliament and of the Council of 14 March 2007 establishing an Infrastructure for Spatial Information in the European Community (INSPIRE)"
/// </BLOCKQUOTE></PRE>
/// Element "name" of XSD type xs:string.
    std::string                          name                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   -- Name --
///   short name
///   -- Definition --
///   Short name or alternative title of the document.
///   -- Description --
///   NOTE For legal documents, this should be a short name or alternative title commonly used to identify the legislation.
///   EXAMPLE 1: INSPIRE Directive is the short name for "Directive 2007/2/EC of the European Parliament and of the Council of 14 March 2007 establishing an Infrastructure for Spatial Information in the European Community (INSPIRE)"
///   EXAMPLE 2: CAFE Directive is the short name for the Directive 2008/50/EC of the European Parliament and of the Council of 21 May 2008 on ambient air quality and cleaner air for Europe" EXAMPLE 3: Water Framework Directive the short name for "Directive 2000/60/EC of the European Parliament and of the Council establishing a framework for the Community action in the field of water policy"
/// </BLOCKQUOTE></PRE>
/// class _base2__DocumentCitationType_shortName operations:
/// - _base2__DocumentCitationType_shortName* soap_new__base2__DocumentCitationType_shortName(soap*) allocate and default initialize
/// - _base2__DocumentCitationType_shortName* soap_new__base2__DocumentCitationType_shortName(soap*, int num) allocate array and default initialize values
/// - _base2__DocumentCitationType_shortName* soap_new_req__base2__DocumentCitationType_shortName(soap*, ...) allocate, set required members
/// - _base2__DocumentCitationType_shortName* soap_new_set__base2__DocumentCitationType_shortName(soap*, ...) allocate, set all public members
/// - _base2__DocumentCitationType_shortName::soap_default(soap*) default initialize members
/// - int soap_read__base2__DocumentCitationType_shortName(soap*, _base2__DocumentCitationType_shortName*) deserialize from a stream
/// - int soap_write__base2__DocumentCitationType_shortName(soap*, _base2__DocumentCitationType_shortName*) serialize to a stream
/// - _base2__DocumentCitationType_shortName* _base2__DocumentCitationType_shortName::soap_dup(soap*) returns deep copy of _base2__DocumentCitationType_shortName, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _base2__DocumentCitationType_shortName::soap_del() deep deletes _base2__DocumentCitationType_shortName data members, use only after _base2__DocumentCitationType_shortName::soap_dup(NULL) (use soapcpp2 -Ed)
    class _base2__DocumentCitationType_shortName
    {
/// __item wraps "xs:string" simpleContent.
    std::string                          __item                        ;
/// Attribute "nilReason" of XSD type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
    }                                   *shortName                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   -- Name --
///   date
///   -- Definition --
///   Date of creation, publication or revision of the document.
/// </BLOCKQUOTE></PRE>
/// class _base2__DocumentCitationType_date operations:
/// - _base2__DocumentCitationType_date* soap_new__base2__DocumentCitationType_date(soap*) allocate and default initialize
/// - _base2__DocumentCitationType_date* soap_new__base2__DocumentCitationType_date(soap*, int num) allocate array and default initialize values
/// - _base2__DocumentCitationType_date* soap_new_req__base2__DocumentCitationType_date(soap*, ...) allocate, set required members
/// - _base2__DocumentCitationType_date* soap_new_set__base2__DocumentCitationType_date(soap*, ...) allocate, set all public members
/// - _base2__DocumentCitationType_date::soap_default(soap*) default initialize members
/// - int soap_read__base2__DocumentCitationType_date(soap*, _base2__DocumentCitationType_date*) deserialize from a stream
/// - int soap_write__base2__DocumentCitationType_date(soap*, _base2__DocumentCitationType_date*) serialize to a stream
/// - _base2__DocumentCitationType_date* _base2__DocumentCitationType_date::soap_dup(soap*) returns deep copy of _base2__DocumentCitationType_date, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _base2__DocumentCitationType_date::soap_del() deep deletes _base2__DocumentCitationType_date data members, use only after _base2__DocumentCitationType_date::soap_dup(NULL) (use soapcpp2 -Ed)
    class _base2__DocumentCitationType_date
    {
/// INHERITED FROM gml__AbstractMetadataPropertyType:
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":OwnershipAttributeGroup">.
/// Attribute "owns" of XSD type xs:boolean.
   @bool                                 owns                           0 = false;	///< Default attribute value="false".
//  END OF ATTRIBUTEGROUP
//  END OF INHERITED FROM gml__AbstractMetadataPropertyType
/// Element reference "http://inspire.ec.europa.eu/schemas/base2/1.0:""http://www.isotc211.org/2005/gmd":CI_Date.
    gmd__CI_x005fDate_x005fType*         gmd__CI_x005fDate              1;	///< Required element.
/// Attribute "nilReason" of XSD type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
    }                                   *date                           nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   -- Name --
///   link to online version
///   -- Definition --
///   Link to an online version of the document
/// </BLOCKQUOTE></PRE>
/// Vector of link of length 1..unbounded.
    std::vector<
/// class _base2__DocumentCitationType_link operations:
/// - _base2__DocumentCitationType_link* soap_new__base2__DocumentCitationType_link(soap*) allocate and default initialize
/// - _base2__DocumentCitationType_link* soap_new__base2__DocumentCitationType_link(soap*, int num) allocate array and default initialize values
/// - _base2__DocumentCitationType_link* soap_new_req__base2__DocumentCitationType_link(soap*, ...) allocate, set required members
/// - _base2__DocumentCitationType_link* soap_new_set__base2__DocumentCitationType_link(soap*, ...) allocate, set all public members
/// - _base2__DocumentCitationType_link::soap_default(soap*) default initialize members
/// - int soap_read__base2__DocumentCitationType_link(soap*, _base2__DocumentCitationType_link*) deserialize from a stream
/// - int soap_write__base2__DocumentCitationType_link(soap*, _base2__DocumentCitationType_link*) serialize to a stream
/// - _base2__DocumentCitationType_link* _base2__DocumentCitationType_link::soap_dup(soap*) returns deep copy of _base2__DocumentCitationType_link, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _base2__DocumentCitationType_link::soap_del() deep deletes _base2__DocumentCitationType_link data members, use only after _base2__DocumentCitationType_link::soap_dup(NULL) (use soapcpp2 -Ed)
    class _base2__DocumentCitationType_link
    {
/// __item wraps "xs:anyURI" simpleContent.
    xsd__anyURI                          __item                        ;
/// Attribute "nilReason" of XSD type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
    }>                                  *link                           1;
/// <PRE><BLOCKQUOTE>
///   -- Name --
///   specific reference
///   -- Definition --
///   Reference to a specific part of the document.
///   -- Description --
///   EXAMPLE For legal documents, this attribute can contain a reference to article(s) that specify a specific requirement or obligation.
/// </BLOCKQUOTE></PRE>
/// Vector of specificReference of length 0..unbounded.
    std::vector<
/// class _base2__DocumentCitationType_specificReference operations:
/// - _base2__DocumentCitationType_specificReference* soap_new__base2__DocumentCitationType_specificReference(soap*) allocate and default initialize
/// - _base2__DocumentCitationType_specificReference* soap_new__base2__DocumentCitationType_specificReference(soap*, int num) allocate array and default initialize values
/// - _base2__DocumentCitationType_specificReference* soap_new_req__base2__DocumentCitationType_specificReference(soap*, ...) allocate, set required members
/// - _base2__DocumentCitationType_specificReference* soap_new_set__base2__DocumentCitationType_specificReference(soap*, ...) allocate, set all public members
/// - _base2__DocumentCitationType_specificReference::soap_default(soap*) default initialize members
/// - int soap_read__base2__DocumentCitationType_specificReference(soap*, _base2__DocumentCitationType_specificReference*) deserialize from a stream
/// - int soap_write__base2__DocumentCitationType_specificReference(soap*, _base2__DocumentCitationType_specificReference*) serialize to a stream
/// - _base2__DocumentCitationType_specificReference* _base2__DocumentCitationType_specificReference::soap_dup(soap*) returns deep copy of _base2__DocumentCitationType_specificReference, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _base2__DocumentCitationType_specificReference::soap_del() deep deletes _base2__DocumentCitationType_specificReference data members, use only after _base2__DocumentCitationType_specificReference::soap_dup(NULL) (use soapcpp2 -Ed)
    class _base2__DocumentCitationType_specificReference
    {
/// __item wraps "xs:string" simpleContent.
    std::string                          __item                        ;
/// Attribute "nilReason" of XSD type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
    }>                                  *specificReference              0;
};

/// @brief Top-level root element "http://www.interactive-instruments.de/ShapeChange/AppInfo":taggedValue
/// @brief "http://www.interactive-instruments.de/ShapeChange/AppInfo":taggedValue is a complexType with simpleContent.
///
/// class _sc__taggedValue operations:
/// - _sc__taggedValue* soap_new__sc__taggedValue(soap*) allocate and default initialize
/// - _sc__taggedValue* soap_new__sc__taggedValue(soap*, int num) allocate array and default initialize values
/// - _sc__taggedValue* soap_new_req__sc__taggedValue(soap*, ...) allocate, set required members
/// - _sc__taggedValue* soap_new_set__sc__taggedValue(soap*, ...) allocate, set all public members
/// - _sc__taggedValue::soap_default(soap*) default initialize members
/// - int soap_read__sc__taggedValue(soap*, _sc__taggedValue*) deserialize from a stream
/// - int soap_write__sc__taggedValue(soap*, _sc__taggedValue*) serialize to a stream
/// - _sc__taggedValue* _sc__taggedValue::soap_dup(soap*) returns deep copy of _sc__taggedValue, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _sc__taggedValue::soap_del() deep deletes _sc__taggedValue data members, use only after _sc__taggedValue::soap_dup(NULL) (use soapcpp2 -Ed)
class _sc__taggedValue
{ public:
/// __item wraps "xs:string" simpleContent.
    std::string                          __item                        ;
/// Attribute "tag" of XSD type xs:string.
   @std::string*                         tag                            0;	///< Optional attribute.
/// A handle to the soap struct context that manages this instance when instantiated by a context or NULL otherwise (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.opengis.net/gml/3.2":DynamicFeatureMemberType is a complexType with complexContent extension of XSD type "http://www.opengis.net/gml/3.2":AbstractFeatureMemberType.
///
/// class gml__DynamicFeatureMemberType operations:
/// - gml__DynamicFeatureMemberType* soap_new_gml__DynamicFeatureMemberType(soap*) allocate and default initialize
/// - gml__DynamicFeatureMemberType* soap_new_gml__DynamicFeatureMemberType(soap*, int num) allocate array and default initialize values
/// - gml__DynamicFeatureMemberType* soap_new_req_gml__DynamicFeatureMemberType(soap*, ...) allocate, set required members
/// - gml__DynamicFeatureMemberType* soap_new_set_gml__DynamicFeatureMemberType(soap*, ...) allocate, set all public members
/// - gml__DynamicFeatureMemberType::soap_default(soap*) default initialize members
/// - int soap_read_gml__DynamicFeatureMemberType(soap*, gml__DynamicFeatureMemberType*) deserialize from a stream
/// - int soap_write_gml__DynamicFeatureMemberType(soap*, gml__DynamicFeatureMemberType*) serialize to a stream
/// - gml__DynamicFeatureMemberType* gml__DynamicFeatureMemberType::soap_dup(soap*) returns deep copy of gml__DynamicFeatureMemberType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__DynamicFeatureMemberType::soap_del() deep deletes gml__DynamicFeatureMemberType data members, use only after gml__DynamicFeatureMemberType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__DynamicFeatureMemberType : public gml__AbstractFeatureMemberType
{ public:
/*  INHERITED FROM gml__AbstractFeatureMemberType:
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":OwnershipAttributeGroup">.
/// Attribute "owns" of XSD type xs:boolean.
   @bool                                 owns                           0 = false;	///< Default attribute value="false".
//  END OF ATTRIBUTEGROUP
    END OF INHERITED FROM gml__AbstractFeatureMemberType */
/// <PRE><BLOCKQUOTE>
///   States are captured by time-stamped instances of a feature. The content model extends the standard gml:AbstractFeatureType with the gml:dynamicProperties model group.
///   Each time-stamped instance represents a 'snapshot' of a feature. The dynamic feature classes will normally be extended to suit particular applications. A dynamic feature bears either a time stamp or a history.
/// </BLOCKQUOTE></PRE>
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="DynamicFeature" minOccurs="0" maxOccurs="unbounded"> with global elements <DynamicFeatureCollection>
   $int                                  __sizeDynamicFeature           0;
    class __gml__union_DynamicFeatureMemberType
    {
   $int                                  __unionDynamicFeature          0;	///< Union _gml__union_DynamicFeatureMemberType selector: set to SOAP_UNION__gml__union_DynamicFeatureMemberType_<fieldname> or 0 to omit
/// Union for substitutionGroup gml__DynamicFeature.
    union _gml__union_DynamicFeatureMemberType
    {
/// <PRE><BLOCKQUOTE>
///   States are captured by time-stamped instances of a feature. The content model extends the standard gml:AbstractFeatureType with the gml:dynamicProperties model group.
///   Each time-stamped instance represents a 'snapshot' of a feature. The dynamic feature classes will normally be extended to suit particular applications. A dynamic feature bears either a time stamp or a history.
/// </BLOCKQUOTE></PRE>
/// Vector of gml__DynamicFeatureType* element refs of length 0..unbounded.
    std::vector<gml__DynamicFeatureType*> *DynamicFeature                 0;
/// <PRE><BLOCKQUOTE>
///   A gml:DynamicFeatureCollection is a feature collection that has a gml:validTime property (i.e. is a snapshot of the feature collection) or which has a gml:history property that contains one or more gml:AbstractTimeSlices each of which contain values of the time varying properties of the feature collection. Note that the gml:DynamicFeatureCollection may be one of the following:
///   1. A feature collection which consists of static feature members (members do not change in time) but which has properties of the collection object as a whole that do change in time . 2. A feature collection which consists of dynamic feature members (the members are gml:DynamicFeatures) but which also has properties of the collection as a whole that vary in time.
/// </BLOCKQUOTE></PRE>
/// Element "http://www.opengis.net/gml/3.2":DynamicFeatureCollection.
    gml__DynamicFeatureCollectionType*   DynamicFeatureCollection       nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_DynamicFeatureMemberType;
    }                                   *__union_DynamicFeatureMemberType;
//  END OF SUBSTITUTIONS
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":AssociationAttributeGroup">.
/// Attribute "nilReason" of XSD type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         gml__remoteSchema              0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.opengis.net/gml/3.2":AbstractTimeSliceType is an abstract complexType with complexContent extension of XSD type "http://www.opengis.net/gml/3.2":AbstractGMLType.
///
/// class gml__AbstractTimeSliceType operations:
/// - gml__AbstractTimeSliceType* soap_new_gml__AbstractTimeSliceType(soap*) allocate and default initialize
/// - gml__AbstractTimeSliceType* soap_new_gml__AbstractTimeSliceType(soap*, int num) allocate array and default initialize values
/// - gml__AbstractTimeSliceType* soap_new_req_gml__AbstractTimeSliceType(soap*, ...) allocate, set required members
/// - gml__AbstractTimeSliceType* soap_new_set_gml__AbstractTimeSliceType(soap*, ...) allocate, set all public members
/// - gml__AbstractTimeSliceType::soap_default(soap*) default initialize members
/// - int soap_read_gml__AbstractTimeSliceType(soap*, gml__AbstractTimeSliceType*) deserialize from a stream
/// - int soap_write_gml__AbstractTimeSliceType(soap*, gml__AbstractTimeSliceType*) serialize to a stream
/// - gml__AbstractTimeSliceType* gml__AbstractTimeSliceType::soap_dup(soap*) returns deep copy of gml__AbstractTimeSliceType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__AbstractTimeSliceType::soap_del() deep deletes gml__AbstractTimeSliceType data members, use only after gml__AbstractTimeSliceType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__AbstractTimeSliceType : public gml__AbstractGMLType
{ public:
/*  INHERITED FROM gml__AbstractGMLType:
//  BEGIN GROUP <xs:group name="StandardObjectProperties">
/// Vector of gml__MetaDataPropertyType* element refs of length 0..unbounded.
    std::vector<gml__MetaDataPropertyType*> metaDataProperty               0;
/// <PRE><BLOCKQUOTE>
///   The value of this property is a text description of the object. gml:description uses gml:StringOrRefType as its content model, so it may contain a simple text string content, or carry a reference to an external description. The use of gml:description to reference an external description has been deprecated and replaced by the gml:descriptionReference property.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":description.
    gml__StringOrRefType*                description                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The value of this property is a remote text description of the object. The xlink:href attribute of the gml:descriptionReference property references the external description.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":descriptionReference.
    gml__ReferenceType*                  descriptionReference           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Often, a special identifier is assigned to an object by the maintaining authority with the intention that it is used in references to the object For such cases, the codeSpace shall be provided. That identifier is usually unique either globally or within an application domain. gml:identifier is a pre-defined property for such identifiers.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":identifier.
    gml__CodeWithAuthorityType*          identifier                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The gml:name property provides a label or identifier for the object, commonly a descriptive name. An object may have several names, typically assigned by different authorities. gml:name uses the gml:CodeType content model. The authority for a name is indicated by the value of its (optional) codeSpace attribute. The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace. In common usage there will be one name per authority, so a processing application may select the name from its preferred codeSpace.
/// </BLOCKQUOTE></PRE>
/// Vector of gml__CodeType* element refs of length 0..unbounded.
    std::vector<gml__CodeType*         > name                           0;
//  END OF GROUP
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":id.
/// <PRE><BLOCKQUOTE>
///   The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.
/// </BLOCKQUOTE></PRE>
   @xsd__ID*                             gml__id                        0;	///< Optional attribute.
    END OF INHERITED FROM gml__AbstractGMLType */
/// <PRE><BLOCKQUOTE>
///   gml:validTime is a convenience property element.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":validTime.
    gml__TimePrimitivePropertyType*      validTime                      1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Evidence is represented by a simple gml:dataSource or gml:dataSourceReference property that indicates the source of the temporal data. The remote link attributes of the gml:dataSource element have been deprecated along with its current type.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":dataSource.
    gml__StringOrRefType*                dataSource                     0;	///< Optional element.
};

/// @brief "http://www.opengis.net/gml/3.2":AbstractTopologyType is an abstract complexType with complexContent extension of XSD type "http://www.opengis.net/gml/3.2":AbstractGMLType.
///
/// <PRE><BLOCKQUOTE>
///   This abstract type supplies the root or base type for all topological elements including primitives and complexes. It inherits AbstractGMLType and hence can be identified using the gml:id attribute.
/// </BLOCKQUOTE></PRE>
/// class gml__AbstractTopologyType operations:
/// - gml__AbstractTopologyType* soap_new_gml__AbstractTopologyType(soap*) allocate and default initialize
/// - gml__AbstractTopologyType* soap_new_gml__AbstractTopologyType(soap*, int num) allocate array and default initialize values
/// - gml__AbstractTopologyType* soap_new_req_gml__AbstractTopologyType(soap*, ...) allocate, set required members
/// - gml__AbstractTopologyType* soap_new_set_gml__AbstractTopologyType(soap*, ...) allocate, set all public members
/// - gml__AbstractTopologyType::soap_default(soap*) default initialize members
/// - int soap_read_gml__AbstractTopologyType(soap*, gml__AbstractTopologyType*) deserialize from a stream
/// - int soap_write_gml__AbstractTopologyType(soap*, gml__AbstractTopologyType*) serialize to a stream
/// - gml__AbstractTopologyType* gml__AbstractTopologyType::soap_dup(soap*) returns deep copy of gml__AbstractTopologyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__AbstractTopologyType::soap_del() deep deletes gml__AbstractTopologyType data members, use only after gml__AbstractTopologyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__AbstractTopologyType : public gml__AbstractGMLType
{ public:
/*  INHERITED FROM gml__AbstractGMLType:
//  BEGIN GROUP <xs:group name="StandardObjectProperties">
/// Vector of gml__MetaDataPropertyType* element refs of length 0..unbounded.
    std::vector<gml__MetaDataPropertyType*> metaDataProperty               0;
/// <PRE><BLOCKQUOTE>
///   The value of this property is a text description of the object. gml:description uses gml:StringOrRefType as its content model, so it may contain a simple text string content, or carry a reference to an external description. The use of gml:description to reference an external description has been deprecated and replaced by the gml:descriptionReference property.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":description.
    gml__StringOrRefType*                description                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The value of this property is a remote text description of the object. The xlink:href attribute of the gml:descriptionReference property references the external description.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":descriptionReference.
    gml__ReferenceType*                  descriptionReference           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Often, a special identifier is assigned to an object by the maintaining authority with the intention that it is used in references to the object For such cases, the codeSpace shall be provided. That identifier is usually unique either globally or within an application domain. gml:identifier is a pre-defined property for such identifiers.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":identifier.
    gml__CodeWithAuthorityType*          identifier                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The gml:name property provides a label or identifier for the object, commonly a descriptive name. An object may have several names, typically assigned by different authorities. gml:name uses the gml:CodeType content model. The authority for a name is indicated by the value of its (optional) codeSpace attribute. The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace. In common usage there will be one name per authority, so a processing application may select the name from its preferred codeSpace.
/// </BLOCKQUOTE></PRE>
/// Vector of gml__CodeType* element refs of length 0..unbounded.
    std::vector<gml__CodeType*         > name                           0;
//  END OF GROUP
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":id.
/// <PRE><BLOCKQUOTE>
///   The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.
/// </BLOCKQUOTE></PRE>
   @xsd__ID*                             gml__id                        0;	///< Optional attribute.
    END OF INHERITED FROM gml__AbstractGMLType */
};

/// @brief "http://www.opengis.net/gml/3.2":LineStringSegmentType is a complexType with complexContent extension of XSD type "http://www.opengis.net/gml/3.2":AbstractCurveSegmentType.
///
/// class gml__LineStringSegmentType operations:
/// - gml__LineStringSegmentType* soap_new_gml__LineStringSegmentType(soap*) allocate and default initialize
/// - gml__LineStringSegmentType* soap_new_gml__LineStringSegmentType(soap*, int num) allocate array and default initialize values
/// - gml__LineStringSegmentType* soap_new_req_gml__LineStringSegmentType(soap*, ...) allocate, set required members
/// - gml__LineStringSegmentType* soap_new_set_gml__LineStringSegmentType(soap*, ...) allocate, set all public members
/// - gml__LineStringSegmentType::soap_default(soap*) default initialize members
/// - int soap_read_gml__LineStringSegmentType(soap*, gml__LineStringSegmentType*) deserialize from a stream
/// - int soap_write_gml__LineStringSegmentType(soap*, gml__LineStringSegmentType*) serialize to a stream
/// - gml__LineStringSegmentType* gml__LineStringSegmentType::soap_dup(soap*) returns deep copy of gml__LineStringSegmentType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__LineStringSegmentType::soap_del() deep deletes gml__LineStringSegmentType data members, use only after gml__LineStringSegmentType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__LineStringSegmentType : public gml__AbstractCurveSegmentType
{ public:
/*  INHERITED FROM gml__AbstractCurveSegmentType:
/// Attribute "numDerivativesAtStart" of XSD type xs:integer.
   @long                                 numDerivativesAtStart          0 = 0;	///< Default attribute value="0".
/// Attribute "numDerivativesAtEnd" of XSD type xs:integer.
   @long                                 numDerivativesAtEnd            0 = 0;	///< Default attribute value="0".
/// Attribute "numDerivativeInterior" of XSD type xs:integer.
   @long                                 numDerivativeInterior          0 = 0;	///< Default attribute value="0".
    END OF INHERITED FROM gml__AbstractCurveSegmentType */
//  BEGIN CHOICE <xs:choice>
   $int                                  __union_LineStringSegmentType ;	///< Union _gml__union_LineStringSegmentType selector: set to SOAP_UNION__gml__union_LineStringSegmentType_<fieldname>
    union _gml__union_LineStringSegmentType
    {
//  BEGIN CHOICE <xs:choice minOccurs="2" maxOccurs="unbounded">
    struct ___gml__union_LineStringSegmentType_
    {
   $int                                  __size_LineStringSegmentType_  2;
    class __gml__union_LineStringSegmentType_
    {
   $int                                  __union_LineStringSegmentType_ 2;	///< Union _gml__union_LineStringSegmentType_ selector: set to SOAP_UNION__gml__union_LineStringSegmentType__<fieldname>
    union _gml__union_LineStringSegmentType_
    {
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":pos.
    gml__DirectPositionType*             pos                            nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   This property element either references a point via the XLink-attributes or contains the point element. pointProperty is the predefined property which may be used by GML Application Schemas whenever a GML feature has a property with a value that is substitutable for Point.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":pointProperty.
    gml__PointPropertyType*              pointProperty                  nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":pointRep.
    gml__PointPropertyType*              pointRep                       nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_LineStringSegmentType_  ;
    }                                   *__union_LineStringSegmentType_;
    }                                    __union_LineStringSegmentType_;
//  END OF CHOICE
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":posList.
    gml__DirectPositionListType*         posList                        nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":coordinates.
    gml__CoordinatesType*                coordinates                    nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_LineStringSegmentType   ;
//  END OF CHOICE
/// Attribute "interpolation" of XSD type "http://www.opengis.net/gml/3.2":CurveInterpolationType.
   @enum gml__CurveInterpolationType*    interpolation                  0;	///< Fixed attribute value="linear".
};

/// @brief "http://www.opengis.net/gml/3.2":ArcStringType is a complexType with complexContent extension of XSD type "http://www.opengis.net/gml/3.2":AbstractCurveSegmentType.
///
/// class gml__ArcStringType operations:
/// - gml__ArcStringType* soap_new_gml__ArcStringType(soap*) allocate and default initialize
/// - gml__ArcStringType* soap_new_gml__ArcStringType(soap*, int num) allocate array and default initialize values
/// - gml__ArcStringType* soap_new_req_gml__ArcStringType(soap*, ...) allocate, set required members
/// - gml__ArcStringType* soap_new_set_gml__ArcStringType(soap*, ...) allocate, set all public members
/// - gml__ArcStringType::soap_default(soap*) default initialize members
/// - int soap_read_gml__ArcStringType(soap*, gml__ArcStringType*) deserialize from a stream
/// - int soap_write_gml__ArcStringType(soap*, gml__ArcStringType*) serialize to a stream
/// - gml__ArcStringType* gml__ArcStringType::soap_dup(soap*) returns deep copy of gml__ArcStringType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__ArcStringType::soap_del() deep deletes gml__ArcStringType data members, use only after gml__ArcStringType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__ArcStringType : public gml__AbstractCurveSegmentType
{ public:
/*  INHERITED FROM gml__AbstractCurveSegmentType:
/// Attribute "numDerivativesAtStart" of XSD type xs:integer.
   @long                                 numDerivativesAtStart          0 = 0;	///< Default attribute value="0".
/// Attribute "numDerivativesAtEnd" of XSD type xs:integer.
   @long                                 numDerivativesAtEnd            0 = 0;	///< Default attribute value="0".
/// Attribute "numDerivativeInterior" of XSD type xs:integer.
   @long                                 numDerivativeInterior          0 = 0;	///< Default attribute value="0".
    END OF INHERITED FROM gml__AbstractCurveSegmentType */
//  BEGIN CHOICE <xs:choice>
   $int                                  __union_ArcStringType         ;	///< Union _gml__union_ArcStringType selector: set to SOAP_UNION__gml__union_ArcStringType_<fieldname>
    union _gml__union_ArcStringType
    {
//  BEGIN CHOICE <xs:choice minOccurs="3" maxOccurs="unbounded">
    struct ___gml__union_ArcStringType_
    {
   $int                                  __size_ArcStringType_          3;
    class __gml__union_ArcStringType_
    {
   $int                                  __union_ArcStringType_         3;	///< Union _gml__union_ArcStringType_ selector: set to SOAP_UNION__gml__union_ArcStringType__<fieldname>
    union _gml__union_ArcStringType_
    {
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":pos.
    gml__DirectPositionType*             pos                            nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   This property element either references a point via the XLink-attributes or contains the point element. pointProperty is the predefined property which may be used by GML Application Schemas whenever a GML feature has a property with a value that is substitutable for Point.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":pointProperty.
    gml__PointPropertyType*              pointProperty                  nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":pointRep.
    gml__PointPropertyType*              pointRep                       nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_ArcStringType_          ;
    }                                   *__union_ArcStringType_        ;
    }                                    __union_ArcStringType_        ;
//  END OF CHOICE
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":posList.
    gml__DirectPositionListType*         posList                        nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":coordinates.
    gml__CoordinatesType*                coordinates                    nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_ArcStringType           ;
//  END OF CHOICE
/// Attribute "interpolation" of XSD type "http://www.opengis.net/gml/3.2":CurveInterpolationType.
   @enum gml__CurveInterpolationType*    interpolation                  0;	///< Fixed attribute value="circularArc3Points".
/// Attribute "numArc" of XSD type xs:integer.
   @long*                                numArc                         0;	///< Optional attribute.
};

/// @brief "http://www.opengis.net/gml/3.2":ArcStringByBulgeType is a complexType with complexContent extension of XSD type "http://www.opengis.net/gml/3.2":AbstractCurveSegmentType.
///
/// class gml__ArcStringByBulgeType operations:
/// - gml__ArcStringByBulgeType* soap_new_gml__ArcStringByBulgeType(soap*) allocate and default initialize
/// - gml__ArcStringByBulgeType* soap_new_gml__ArcStringByBulgeType(soap*, int num) allocate array and default initialize values
/// - gml__ArcStringByBulgeType* soap_new_req_gml__ArcStringByBulgeType(soap*, ...) allocate, set required members
/// - gml__ArcStringByBulgeType* soap_new_set_gml__ArcStringByBulgeType(soap*, ...) allocate, set all public members
/// - gml__ArcStringByBulgeType::soap_default(soap*) default initialize members
/// - int soap_read_gml__ArcStringByBulgeType(soap*, gml__ArcStringByBulgeType*) deserialize from a stream
/// - int soap_write_gml__ArcStringByBulgeType(soap*, gml__ArcStringByBulgeType*) serialize to a stream
/// - gml__ArcStringByBulgeType* gml__ArcStringByBulgeType::soap_dup(soap*) returns deep copy of gml__ArcStringByBulgeType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__ArcStringByBulgeType::soap_del() deep deletes gml__ArcStringByBulgeType data members, use only after gml__ArcStringByBulgeType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__ArcStringByBulgeType : public gml__AbstractCurveSegmentType
{ public:
/*  INHERITED FROM gml__AbstractCurveSegmentType:
/// Attribute "numDerivativesAtStart" of XSD type xs:integer.
   @long                                 numDerivativesAtStart          0 = 0;	///< Default attribute value="0".
/// Attribute "numDerivativesAtEnd" of XSD type xs:integer.
   @long                                 numDerivativesAtEnd            0 = 0;	///< Default attribute value="0".
/// Attribute "numDerivativeInterior" of XSD type xs:integer.
   @long                                 numDerivativeInterior          0 = 0;	///< Default attribute value="0".
    END OF INHERITED FROM gml__AbstractCurveSegmentType */
//  BEGIN CHOICE <xs:choice>
   $int                                  __union_ArcStringByBulgeType  ;	///< Union _gml__union_ArcStringByBulgeType selector: set to SOAP_UNION__gml__union_ArcStringByBulgeType_<fieldname>
    union _gml__union_ArcStringByBulgeType
    {
//  BEGIN CHOICE <xs:choice minOccurs="2" maxOccurs="unbounded">
    struct ___gml__union_ArcStringByBulgeType_
    {
   $int                                  __size_ArcStringByBulgeType_   2;
    class __gml__union_ArcStringByBulgeType_
    {
   $int                                  __union_ArcStringByBulgeType_  2;	///< Union _gml__union_ArcStringByBulgeType_ selector: set to SOAP_UNION__gml__union_ArcStringByBulgeType__<fieldname>
    union _gml__union_ArcStringByBulgeType_
    {
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":pos.
    gml__DirectPositionType*             pos                            nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   This property element either references a point via the XLink-attributes or contains the point element. pointProperty is the predefined property which may be used by GML Application Schemas whenever a GML feature has a property with a value that is substitutable for Point.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":pointProperty.
    gml__PointPropertyType*              pointProperty                  nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":pointRep.
    gml__PointPropertyType*              pointRep                       nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_ArcStringByBulgeType_   ;
    }                                   *__union_ArcStringByBulgeType_ ;
    }                                    __union_ArcStringByBulgeType_ ;
//  END OF CHOICE
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":posList.
    gml__DirectPositionListType*         posList                        nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":coordinates.
    gml__CoordinatesType*                coordinates                    nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_ArcStringByBulgeType    ;
//  END OF CHOICE
/// Vector of double of length 1..unbounded.
    std::vector<double                 > bulge                          1;
/// Vector of gml__VectorType* of length 1..unbounded.
    std::vector<gml__VectorType*       > normal                         1;
/// Attribute "interpolation" of XSD type "http://www.opengis.net/gml/3.2":CurveInterpolationType.
   @enum gml__CurveInterpolationType*    interpolation                  0;	///< Fixed attribute value="circularArc2PointWithBulge".
/// Attribute "numArc" of XSD type xs:integer.
   @long*                                numArc                         0;	///< Optional attribute.
};

/// @brief "http://www.opengis.net/gml/3.2":ArcByCenterPointType is a complexType with complexContent extension of XSD type "http://www.opengis.net/gml/3.2":AbstractCurveSegmentType.
///
/// class gml__ArcByCenterPointType operations:
/// - gml__ArcByCenterPointType* soap_new_gml__ArcByCenterPointType(soap*) allocate and default initialize
/// - gml__ArcByCenterPointType* soap_new_gml__ArcByCenterPointType(soap*, int num) allocate array and default initialize values
/// - gml__ArcByCenterPointType* soap_new_req_gml__ArcByCenterPointType(soap*, ...) allocate, set required members
/// - gml__ArcByCenterPointType* soap_new_set_gml__ArcByCenterPointType(soap*, ...) allocate, set all public members
/// - gml__ArcByCenterPointType::soap_default(soap*) default initialize members
/// - int soap_read_gml__ArcByCenterPointType(soap*, gml__ArcByCenterPointType*) deserialize from a stream
/// - int soap_write_gml__ArcByCenterPointType(soap*, gml__ArcByCenterPointType*) serialize to a stream
/// - gml__ArcByCenterPointType* gml__ArcByCenterPointType::soap_dup(soap*) returns deep copy of gml__ArcByCenterPointType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__ArcByCenterPointType::soap_del() deep deletes gml__ArcByCenterPointType data members, use only after gml__ArcByCenterPointType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__ArcByCenterPointType : public gml__AbstractCurveSegmentType
{ public:
/*  INHERITED FROM gml__AbstractCurveSegmentType:
/// Attribute "numDerivativesAtStart" of XSD type xs:integer.
   @long                                 numDerivativesAtStart          0 = 0;	///< Default attribute value="0".
/// Attribute "numDerivativesAtEnd" of XSD type xs:integer.
   @long                                 numDerivativesAtEnd            0 = 0;	///< Default attribute value="0".
/// Attribute "numDerivativeInterior" of XSD type xs:integer.
   @long                                 numDerivativeInterior          0 = 0;	///< Default attribute value="0".
    END OF INHERITED FROM gml__AbstractCurveSegmentType */
//  BEGIN CHOICE <xs:choice>
   $int                                  __union_ArcByCenterPointType  ;	///< Union _gml__union_ArcByCenterPointType selector: set to SOAP_UNION__gml__union_ArcByCenterPointType_<fieldname>
    union _gml__union_ArcByCenterPointType
    {
//  BEGIN CHOICE <xs:choice>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":pos.
    gml__DirectPositionType*             pos                            nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   This property element either references a point via the XLink-attributes or contains the point element. pointProperty is the predefined property which may be used by GML Application Schemas whenever a GML feature has a property with a value that is substitutable for Point.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":pointProperty.
    gml__PointPropertyType*              pointProperty                  nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":pointRep.
    gml__PointPropertyType*              pointRep                       nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
//  END OF CHOICE
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":posList.
    gml__DirectPositionListType*         posList                        nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":coordinates.
    gml__CoordinatesType*                coordinates                    nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_ArcByCenterPointType    ;
//  END OF CHOICE
/// Element "radius" of XSD type "http://www.opengis.net/gml/3.2":LengthType.
    gml__LengthType*                     radius                         1;	///< Required element.
/// Element "startAngle" of XSD type "http://www.opengis.net/gml/3.2":AngleType.
    gml__AngleType*                      startAngle                     0;	///< Optional element.
/// Element "endAngle" of XSD type "http://www.opengis.net/gml/3.2":AngleType.
    gml__AngleType*                      endAngle                       0;	///< Optional element.
/// Attribute "interpolation" of XSD type "http://www.opengis.net/gml/3.2":CurveInterpolationType.
   @enum gml__CurveInterpolationType*    interpolation                  0;	///< Fixed attribute value="circularArcCenterPointWithRadius".
/// Attribute "numArc" of XSD type xs:integer.
   @long                                 numArc                         1;	///< Fixed attribute value="1".
};

/// @brief "http://www.opengis.net/gml/3.2":CubicSplineType is a complexType with complexContent extension of XSD type "http://www.opengis.net/gml/3.2":AbstractCurveSegmentType.
///
/// class gml__CubicSplineType operations:
/// - gml__CubicSplineType* soap_new_gml__CubicSplineType(soap*) allocate and default initialize
/// - gml__CubicSplineType* soap_new_gml__CubicSplineType(soap*, int num) allocate array and default initialize values
/// - gml__CubicSplineType* soap_new_req_gml__CubicSplineType(soap*, ...) allocate, set required members
/// - gml__CubicSplineType* soap_new_set_gml__CubicSplineType(soap*, ...) allocate, set all public members
/// - gml__CubicSplineType::soap_default(soap*) default initialize members
/// - int soap_read_gml__CubicSplineType(soap*, gml__CubicSplineType*) deserialize from a stream
/// - int soap_write_gml__CubicSplineType(soap*, gml__CubicSplineType*) serialize to a stream
/// - gml__CubicSplineType* gml__CubicSplineType::soap_dup(soap*) returns deep copy of gml__CubicSplineType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__CubicSplineType::soap_del() deep deletes gml__CubicSplineType data members, use only after gml__CubicSplineType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__CubicSplineType : public gml__AbstractCurveSegmentType
{ public:
/*  INHERITED FROM gml__AbstractCurveSegmentType:
/// Attribute "numDerivativesAtStart" of XSD type xs:integer.
   @long                                 numDerivativesAtStart          0 = 0;	///< Default attribute value="0".
/// Attribute "numDerivativesAtEnd" of XSD type xs:integer.
   @long                                 numDerivativesAtEnd            0 = 0;	///< Default attribute value="0".
/// Attribute "numDerivativeInterior" of XSD type xs:integer.
   @long                                 numDerivativeInterior          0 = 0;	///< Default attribute value="0".
    END OF INHERITED FROM gml__AbstractCurveSegmentType */
//  BEGIN CHOICE <xs:choice>
   $int                                  __union_CubicSplineType       ;	///< Union _gml__union_CubicSplineType selector: set to SOAP_UNION__gml__union_CubicSplineType_<fieldname>
    union _gml__union_CubicSplineType
    {
//  BEGIN CHOICE <xs:choice minOccurs="2" maxOccurs="unbounded">
    struct ___gml__union_CubicSplineType_
    {
   $int                                  __size_CubicSplineType_        2;
    class __gml__union_CubicSplineType_
    {
   $int                                  __union_CubicSplineType_       2;	///< Union _gml__union_CubicSplineType_ selector: set to SOAP_UNION__gml__union_CubicSplineType__<fieldname>
    union _gml__union_CubicSplineType_
    {
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":pos.
    gml__DirectPositionType*             pos                            nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   This property element either references a point via the XLink-attributes or contains the point element. pointProperty is the predefined property which may be used by GML Application Schemas whenever a GML feature has a property with a value that is substitutable for Point.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":pointProperty.
    gml__PointPropertyType*              pointProperty                  nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":pointRep.
    gml__PointPropertyType*              pointRep                       nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_CubicSplineType_        ;
    }                                   *__union_CubicSplineType_      ;
    }                                    __union_CubicSplineType_      ;
//  END OF CHOICE
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":posList.
    gml__DirectPositionListType*         posList                        nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":coordinates.
    gml__CoordinatesType*                coordinates                    nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_CubicSplineType         ;
//  END OF CHOICE
/// Element "vectorAtStart" of XSD type "http://www.opengis.net/gml/3.2":VectorType.
    gml__VectorType*                     vectorAtStart                  1;	///< Required element.
/// Element "vectorAtEnd" of XSD type "http://www.opengis.net/gml/3.2":VectorType.
    gml__VectorType*                     vectorAtEnd                    1;	///< Required element.
/// Attribute "interpolation" of XSD type "http://www.opengis.net/gml/3.2":CurveInterpolationType.
   @enum gml__CurveInterpolationType*    interpolation                  0;	///< Fixed attribute value="cubicSpline".
/// Attribute "degree" of XSD type xs:integer.
   @long*                                degree                         0;	///< Fixed attribute value="3".
};

/// @brief "http://www.opengis.net/gml/3.2":BSplineType is a complexType with complexContent extension of XSD type "http://www.opengis.net/gml/3.2":AbstractCurveSegmentType.
///
/// class gml__BSplineType operations:
/// - gml__BSplineType* soap_new_gml__BSplineType(soap*) allocate and default initialize
/// - gml__BSplineType* soap_new_gml__BSplineType(soap*, int num) allocate array and default initialize values
/// - gml__BSplineType* soap_new_req_gml__BSplineType(soap*, ...) allocate, set required members
/// - gml__BSplineType* soap_new_set_gml__BSplineType(soap*, ...) allocate, set all public members
/// - gml__BSplineType::soap_default(soap*) default initialize members
/// - int soap_read_gml__BSplineType(soap*, gml__BSplineType*) deserialize from a stream
/// - int soap_write_gml__BSplineType(soap*, gml__BSplineType*) serialize to a stream
/// - gml__BSplineType* gml__BSplineType::soap_dup(soap*) returns deep copy of gml__BSplineType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__BSplineType::soap_del() deep deletes gml__BSplineType data members, use only after gml__BSplineType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__BSplineType : public gml__AbstractCurveSegmentType
{ public:
/*  INHERITED FROM gml__AbstractCurveSegmentType:
/// Attribute "numDerivativesAtStart" of XSD type xs:integer.
   @long                                 numDerivativesAtStart          0 = 0;	///< Default attribute value="0".
/// Attribute "numDerivativesAtEnd" of XSD type xs:integer.
   @long                                 numDerivativesAtEnd            0 = 0;	///< Default attribute value="0".
/// Attribute "numDerivativeInterior" of XSD type xs:integer.
   @long                                 numDerivativeInterior          0 = 0;	///< Default attribute value="0".
    END OF INHERITED FROM gml__AbstractCurveSegmentType */
//  BEGIN CHOICE <xs:choice>
   $int                                  __union_BSplineType           ;	///< Union _gml__union_BSplineType selector: set to SOAP_UNION__gml__union_BSplineType_<fieldname>
    union _gml__union_BSplineType
    {
//  BEGIN CHOICE <xs:choice minOccurs="0" maxOccurs="unbounded">
    struct ___gml__union_BSplineType_
    {
   $int                                  __size_BSplineType_            0;
    class __gml__union_BSplineType_
    {
   $int                                  __union_BSplineType_           0;	///< Union _gml__union_BSplineType_ selector: set to SOAP_UNION__gml__union_BSplineType__<fieldname> or 0 to omit
    union _gml__union_BSplineType_
    {
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":pos.
    gml__DirectPositionType*             pos                            nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   This property element either references a point via the XLink-attributes or contains the point element. pointProperty is the predefined property which may be used by GML Application Schemas whenever a GML feature has a property with a value that is substitutable for Point.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":pointProperty.
    gml__PointPropertyType*              pointProperty                  nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":pointRep.
    gml__PointPropertyType*              pointRep                       nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_BSplineType_            ;
    }                                   *__union_BSplineType_          ;
    }                                    __union_BSplineType_          ;
//  END OF CHOICE
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":posList.
    gml__DirectPositionListType*         posList                        nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":coordinates.
    gml__CoordinatesType*                coordinates                    nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_BSplineType             ;
//  END OF CHOICE
/// Element "degree" of XSD type xs:nonNegativeInteger.
    xsd__nonNegativeInteger              degree                         1;	///< Required element.
/// Vector of gml__KnotPropertyType* of length 2..unbounded.
    std::vector<gml__KnotPropertyType* > knot                           2;
/// Attribute "interpolation" of XSD type "http://www.opengis.net/gml/3.2":CurveInterpolationType.
   @enum gml__CurveInterpolationType     interpolation                  0 = gml__CurveInterpolationType__polynomialSpline;	///< Default attribute value="polynomialSpline".
/// Attribute "isPolynomial" of XSD type xs:boolean.
   @bool*                                isPolynomial                   0;	///< Optional attribute.
/// Attribute "knotType" of XSD type "http://www.opengis.net/gml/3.2":KnotTypesType.
   @enum gml__KnotTypesType*             knotType                       0;	///< Optional attribute.
};

/// @brief "http://www.opengis.net/gml/3.2":OffsetCurveType is a complexType with complexContent extension of XSD type "http://www.opengis.net/gml/3.2":AbstractCurveSegmentType.
///
/// class gml__OffsetCurveType operations:
/// - gml__OffsetCurveType* soap_new_gml__OffsetCurveType(soap*) allocate and default initialize
/// - gml__OffsetCurveType* soap_new_gml__OffsetCurveType(soap*, int num) allocate array and default initialize values
/// - gml__OffsetCurveType* soap_new_req_gml__OffsetCurveType(soap*, ...) allocate, set required members
/// - gml__OffsetCurveType* soap_new_set_gml__OffsetCurveType(soap*, ...) allocate, set all public members
/// - gml__OffsetCurveType::soap_default(soap*) default initialize members
/// - int soap_read_gml__OffsetCurveType(soap*, gml__OffsetCurveType*) deserialize from a stream
/// - int soap_write_gml__OffsetCurveType(soap*, gml__OffsetCurveType*) serialize to a stream
/// - gml__OffsetCurveType* gml__OffsetCurveType::soap_dup(soap*) returns deep copy of gml__OffsetCurveType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__OffsetCurveType::soap_del() deep deletes gml__OffsetCurveType data members, use only after gml__OffsetCurveType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__OffsetCurveType : public gml__AbstractCurveSegmentType
{ public:
/*  INHERITED FROM gml__AbstractCurveSegmentType:
/// Attribute "numDerivativesAtStart" of XSD type xs:integer.
   @long                                 numDerivativesAtStart          0 = 0;	///< Default attribute value="0".
/// Attribute "numDerivativesAtEnd" of XSD type xs:integer.
   @long                                 numDerivativesAtEnd            0 = 0;	///< Default attribute value="0".
/// Attribute "numDerivativeInterior" of XSD type xs:integer.
   @long                                 numDerivativeInterior          0 = 0;	///< Default attribute value="0".
    END OF INHERITED FROM gml__AbstractCurveSegmentType */
/// Element "offsetBase" of XSD type "http://www.opengis.net/gml/3.2":CurvePropertyType.
    gml__CurvePropertyType*              offsetBase                     1;	///< Required element.
/// Element "distance" of XSD type "http://www.opengis.net/gml/3.2":LengthType.
    gml__LengthType*                     distance                       1;	///< Required element.
/// Element "refDirection" of XSD type "http://www.opengis.net/gml/3.2":VectorType.
    gml__VectorType*                     refDirection                   0;	///< Optional element.
};

/// @brief "http://www.opengis.net/gml/3.2":ClothoidType is a complexType with complexContent extension of XSD type "http://www.opengis.net/gml/3.2":AbstractCurveSegmentType.
///
/// class gml__ClothoidType operations:
/// - gml__ClothoidType* soap_new_gml__ClothoidType(soap*) allocate and default initialize
/// - gml__ClothoidType* soap_new_gml__ClothoidType(soap*, int num) allocate array and default initialize values
/// - gml__ClothoidType* soap_new_req_gml__ClothoidType(soap*, ...) allocate, set required members
/// - gml__ClothoidType* soap_new_set_gml__ClothoidType(soap*, ...) allocate, set all public members
/// - gml__ClothoidType::soap_default(soap*) default initialize members
/// - int soap_read_gml__ClothoidType(soap*, gml__ClothoidType*) deserialize from a stream
/// - int soap_write_gml__ClothoidType(soap*, gml__ClothoidType*) serialize to a stream
/// - gml__ClothoidType* gml__ClothoidType::soap_dup(soap*) returns deep copy of gml__ClothoidType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__ClothoidType::soap_del() deep deletes gml__ClothoidType data members, use only after gml__ClothoidType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__ClothoidType : public gml__AbstractCurveSegmentType
{ public:
/*  INHERITED FROM gml__AbstractCurveSegmentType:
/// Attribute "numDerivativesAtStart" of XSD type xs:integer.
   @long                                 numDerivativesAtStart          0 = 0;	///< Default attribute value="0".
/// Attribute "numDerivativesAtEnd" of XSD type xs:integer.
   @long                                 numDerivativesAtEnd            0 = 0;	///< Default attribute value="0".
/// Attribute "numDerivativeInterior" of XSD type xs:integer.
   @long                                 numDerivativeInterior          0 = 0;	///< Default attribute value="0".
    END OF INHERITED FROM gml__AbstractCurveSegmentType */
/// class _gml__ClothoidType_refLocation operations:
/// - _gml__ClothoidType_refLocation* soap_new__gml__ClothoidType_refLocation(soap*) allocate and default initialize
/// - _gml__ClothoidType_refLocation* soap_new__gml__ClothoidType_refLocation(soap*, int num) allocate array and default initialize values
/// - _gml__ClothoidType_refLocation* soap_new_req__gml__ClothoidType_refLocation(soap*, ...) allocate, set required members
/// - _gml__ClothoidType_refLocation* soap_new_set__gml__ClothoidType_refLocation(soap*, ...) allocate, set all public members
/// - _gml__ClothoidType_refLocation::soap_default(soap*) default initialize members
/// - int soap_read__gml__ClothoidType_refLocation(soap*, _gml__ClothoidType_refLocation*) deserialize from a stream
/// - int soap_write__gml__ClothoidType_refLocation(soap*, _gml__ClothoidType_refLocation*) serialize to a stream
/// - _gml__ClothoidType_refLocation* _gml__ClothoidType_refLocation::soap_dup(soap*) returns deep copy of _gml__ClothoidType_refLocation, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _gml__ClothoidType_refLocation::soap_del() deep deletes _gml__ClothoidType_refLocation data members, use only after _gml__ClothoidType_refLocation::soap_dup(NULL) (use soapcpp2 -Ed)
    class _gml__ClothoidType_refLocation
    {
/// <PRE><BLOCKQUOTE>
///   location, refDirection, inDimension and outDimension have the same meaning as specified in ISO 19107:2003, 6.4.21.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":AffinePlacement.
    gml__AffinePlacementType*            AffinePlacement                1;	///< Required element.
    }                                    refLocation                    1;	///< Required element.
/// Element "scaleFactor" of XSD type xs:decimal.
    xsd__decimal                         scaleFactor                    1;	///< Required element.
/// Element "startParameter" of XSD type xs:double.
    double                               startParameter                 1;	///< Required element.
/// Element "endParameter" of XSD type xs:double.
    double                               endParameter                   1;	///< Required element.
/// Attribute "interpolation" of XSD type "http://www.opengis.net/gml/3.2":CurveInterpolationType.
   @enum gml__CurveInterpolationType*    interpolation                  0;	///< Fixed attribute value="clothoid".
};

/// @brief "http://www.opengis.net/gml/3.2":GeodesicStringType is a complexType with complexContent extension of XSD type "http://www.opengis.net/gml/3.2":AbstractCurveSegmentType.
///
/// class gml__GeodesicStringType operations:
/// - gml__GeodesicStringType* soap_new_gml__GeodesicStringType(soap*) allocate and default initialize
/// - gml__GeodesicStringType* soap_new_gml__GeodesicStringType(soap*, int num) allocate array and default initialize values
/// - gml__GeodesicStringType* soap_new_req_gml__GeodesicStringType(soap*, ...) allocate, set required members
/// - gml__GeodesicStringType* soap_new_set_gml__GeodesicStringType(soap*, ...) allocate, set all public members
/// - gml__GeodesicStringType::soap_default(soap*) default initialize members
/// - int soap_read_gml__GeodesicStringType(soap*, gml__GeodesicStringType*) deserialize from a stream
/// - int soap_write_gml__GeodesicStringType(soap*, gml__GeodesicStringType*) serialize to a stream
/// - gml__GeodesicStringType* gml__GeodesicStringType::soap_dup(soap*) returns deep copy of gml__GeodesicStringType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__GeodesicStringType::soap_del() deep deletes gml__GeodesicStringType data members, use only after gml__GeodesicStringType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__GeodesicStringType : public gml__AbstractCurveSegmentType
{ public:
/*  INHERITED FROM gml__AbstractCurveSegmentType:
/// Attribute "numDerivativesAtStart" of XSD type xs:integer.
   @long                                 numDerivativesAtStart          0 = 0;	///< Default attribute value="0".
/// Attribute "numDerivativesAtEnd" of XSD type xs:integer.
   @long                                 numDerivativesAtEnd            0 = 0;	///< Default attribute value="0".
/// Attribute "numDerivativeInterior" of XSD type xs:integer.
   @long                                 numDerivativeInterior          0 = 0;	///< Default attribute value="0".
    END OF INHERITED FROM gml__AbstractCurveSegmentType */
//  BEGIN CHOICE <xs:choice>
/// @note <xs:choice> with embedded <xs:sequence> or <xs:group> prevents the use of a union for <xs:choice>. Instead of being members of a union, the following members are declared optional. Only one member should be non-NULL by choice.
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":posList.
    gml__DirectPositionListType*         posList                        nullptr;	///< Required nillable (xsi:nil when NULL) element.
//  BEGIN GROUP <xs:group name="geometricPositionGroup" minOccurs="2" maxOccurs="unbounded">
/// <PRE><BLOCKQUOTE>
///   GML supports two different ways to specify a geometric position: either by a direct position (a data type) or a point (a geometric object).
///   pos elements are positions that are "owned" by the geometric primitive encapsulating this geometric position.
///   pointProperty elements contain a point that may be referenced from other geometry elements or reference another point defined elsewhere (reuse of existing points).
/// </BLOCKQUOTE></PRE>
//  BEGIN CHOICE <xs:choice minOccurs="2" maxOccurs="unbounded">
   $int                                  __size_GeodesicStringType_     2;
    class __gml__union_GeodesicStringType_
    {
   $int                                  __union_GeodesicStringType_    2;	///< Union _gml__union_GeodesicStringType_ selector: set to SOAP_UNION__gml__union_GeodesicStringType__<fieldname>
    union _gml__union_GeodesicStringType_
    {
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":pos.
    gml__DirectPositionType*             pos                            nullptr;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   This property element either references a point via the XLink-attributes or contains the point element. pointProperty is the predefined property which may be used by GML Application Schemas whenever a GML feature has a property with a value that is substitutable for Point.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":pointProperty.
    gml__PointPropertyType*              pointProperty                  nullptr;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_GeodesicStringType_     ;
    }                                   *__union_GeodesicStringType_   ;
//  END OF CHOICE
//  END OF GROUP
//  END OF CHOICE
/// Attribute "interpolation" of XSD type "http://www.opengis.net/gml/3.2":CurveInterpolationType.
   @enum gml__CurveInterpolationType*    interpolation                  0;	///< Fixed attribute value="geodesic".
};

/// @brief "http://www.opengis.net/gml/3.2":PolygonPatchType is a complexType with complexContent extension of XSD type "http://www.opengis.net/gml/3.2":AbstractSurfacePatchType.
///
/// class gml__PolygonPatchType operations:
/// - gml__PolygonPatchType* soap_new_gml__PolygonPatchType(soap*) allocate and default initialize
/// - gml__PolygonPatchType* soap_new_gml__PolygonPatchType(soap*, int num) allocate array and default initialize values
/// - gml__PolygonPatchType* soap_new_req_gml__PolygonPatchType(soap*, ...) allocate, set required members
/// - gml__PolygonPatchType* soap_new_set_gml__PolygonPatchType(soap*, ...) allocate, set all public members
/// - gml__PolygonPatchType::soap_default(soap*) default initialize members
/// - int soap_read_gml__PolygonPatchType(soap*, gml__PolygonPatchType*) deserialize from a stream
/// - int soap_write_gml__PolygonPatchType(soap*, gml__PolygonPatchType*) serialize to a stream
/// - gml__PolygonPatchType* gml__PolygonPatchType::soap_dup(soap*) returns deep copy of gml__PolygonPatchType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__PolygonPatchType::soap_del() deep deletes gml__PolygonPatchType data members, use only after gml__PolygonPatchType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__PolygonPatchType : public gml__AbstractSurfacePatchType
{ public:
/*  INHERITED FROM gml__AbstractSurfacePatchType:
    END OF INHERITED FROM gml__AbstractSurfacePatchType */
/// <PRE><BLOCKQUOTE>
///   A boundary of a surface consists of a number of rings. In the normal 2D case, one of these rings is distinguished as being the exterior boundary. In a general manifold this is not always possible, in which case all boundaries shall be listed as interior boundaries, and the exterior will be empty.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":exterior.
    gml__AbstractRingPropertyType*       exterior                       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   A boundary of a surface consists of a number of rings. The "interior" rings separate the surface / surface patch from the area enclosed by the rings.
/// </BLOCKQUOTE></PRE>
/// Vector of gml__AbstractRingPropertyType* element refs of length 0..unbounded.
    std::vector<gml__AbstractRingPropertyType*> interior                       0;
/// Attribute "interpolation" of XSD type "http://www.opengis.net/gml/3.2":SurfaceInterpolationType.
   @enum gml__SurfaceInterpolationType*  interpolation                  0;	///< Fixed attribute value="planar".
};

/// @brief "http://www.opengis.net/gml/3.2":TriangleType is a complexType with complexContent extension of XSD type "http://www.opengis.net/gml/3.2":AbstractSurfacePatchType.
///
/// class gml__TriangleType operations:
/// - gml__TriangleType* soap_new_gml__TriangleType(soap*) allocate and default initialize
/// - gml__TriangleType* soap_new_gml__TriangleType(soap*, int num) allocate array and default initialize values
/// - gml__TriangleType* soap_new_req_gml__TriangleType(soap*, ...) allocate, set required members
/// - gml__TriangleType* soap_new_set_gml__TriangleType(soap*, ...) allocate, set all public members
/// - gml__TriangleType::soap_default(soap*) default initialize members
/// - int soap_read_gml__TriangleType(soap*, gml__TriangleType*) deserialize from a stream
/// - int soap_write_gml__TriangleType(soap*, gml__TriangleType*) serialize to a stream
/// - gml__TriangleType* gml__TriangleType::soap_dup(soap*) returns deep copy of gml__TriangleType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__TriangleType::soap_del() deep deletes gml__TriangleType data members, use only after gml__TriangleType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__TriangleType : public gml__AbstractSurfacePatchType
{ public:
/*  INHERITED FROM gml__AbstractSurfacePatchType:
    END OF INHERITED FROM gml__AbstractSurfacePatchType */
/// <PRE><BLOCKQUOTE>
///   A boundary of a surface consists of a number of rings. In the normal 2D case, one of these rings is distinguished as being the exterior boundary. In a general manifold this is not always possible, in which case all boundaries shall be listed as interior boundaries, and the exterior will be empty.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":exterior.
    gml__AbstractRingPropertyType*       exterior                       1;	///< Required element.
/// Attribute "interpolation" of XSD type "http://www.opengis.net/gml/3.2":SurfaceInterpolationType.
   @enum gml__SurfaceInterpolationType*  interpolation                  0;	///< Fixed attribute value="planar".
};

/// @brief "http://www.opengis.net/gml/3.2":RectangleType is a complexType with complexContent extension of XSD type "http://www.opengis.net/gml/3.2":AbstractSurfacePatchType.
///
/// class gml__RectangleType operations:
/// - gml__RectangleType* soap_new_gml__RectangleType(soap*) allocate and default initialize
/// - gml__RectangleType* soap_new_gml__RectangleType(soap*, int num) allocate array and default initialize values
/// - gml__RectangleType* soap_new_req_gml__RectangleType(soap*, ...) allocate, set required members
/// - gml__RectangleType* soap_new_set_gml__RectangleType(soap*, ...) allocate, set all public members
/// - gml__RectangleType::soap_default(soap*) default initialize members
/// - int soap_read_gml__RectangleType(soap*, gml__RectangleType*) deserialize from a stream
/// - int soap_write_gml__RectangleType(soap*, gml__RectangleType*) serialize to a stream
/// - gml__RectangleType* gml__RectangleType::soap_dup(soap*) returns deep copy of gml__RectangleType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__RectangleType::soap_del() deep deletes gml__RectangleType data members, use only after gml__RectangleType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__RectangleType : public gml__AbstractSurfacePatchType
{ public:
/*  INHERITED FROM gml__AbstractSurfacePatchType:
    END OF INHERITED FROM gml__AbstractSurfacePatchType */
/// <PRE><BLOCKQUOTE>
///   A boundary of a surface consists of a number of rings. In the normal 2D case, one of these rings is distinguished as being the exterior boundary. In a general manifold this is not always possible, in which case all boundaries shall be listed as interior boundaries, and the exterior will be empty.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":exterior.
    gml__AbstractRingPropertyType*       exterior                       1;	///< Required element.
/// Attribute "interpolation" of XSD type "http://www.opengis.net/gml/3.2":SurfaceInterpolationType.
   @enum gml__SurfaceInterpolationType*  interpolation                  0;	///< Fixed attribute value="planar".
};

/// @brief "http://www.opengis.net/gml/3.2":AbstractParametricCurveSurfaceType is an abstract complexType with complexContent extension of XSD type "http://www.opengis.net/gml/3.2":AbstractSurfacePatchType.
///
/// class gml__AbstractParametricCurveSurfaceType operations:
/// - gml__AbstractParametricCurveSurfaceType* soap_new_gml__AbstractParametricCurveSurfaceType(soap*) allocate and default initialize
/// - gml__AbstractParametricCurveSurfaceType* soap_new_gml__AbstractParametricCurveSurfaceType(soap*, int num) allocate array and default initialize values
/// - gml__AbstractParametricCurveSurfaceType* soap_new_req_gml__AbstractParametricCurveSurfaceType(soap*, ...) allocate, set required members
/// - gml__AbstractParametricCurveSurfaceType* soap_new_set_gml__AbstractParametricCurveSurfaceType(soap*, ...) allocate, set all public members
/// - gml__AbstractParametricCurveSurfaceType::soap_default(soap*) default initialize members
/// - int soap_read_gml__AbstractParametricCurveSurfaceType(soap*, gml__AbstractParametricCurveSurfaceType*) deserialize from a stream
/// - int soap_write_gml__AbstractParametricCurveSurfaceType(soap*, gml__AbstractParametricCurveSurfaceType*) serialize to a stream
/// - gml__AbstractParametricCurveSurfaceType* gml__AbstractParametricCurveSurfaceType::soap_dup(soap*) returns deep copy of gml__AbstractParametricCurveSurfaceType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__AbstractParametricCurveSurfaceType::soap_del() deep deletes gml__AbstractParametricCurveSurfaceType data members, use only after gml__AbstractParametricCurveSurfaceType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__AbstractParametricCurveSurfaceType : public gml__AbstractSurfacePatchType
{ public:
/*  INHERITED FROM gml__AbstractSurfacePatchType:
    END OF INHERITED FROM gml__AbstractSurfacePatchType */
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":AggregationAttributeGroup">.
/// Attribute "aggregationType" of XSD type "http://www.opengis.net/gml/3.2":AggregationType.
   @enum gml__AggregationType*           aggregationType                0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.opengis.net/gml/3.2":AbstractGeometryType is an abstract complexType with complexContent extension of XSD type "http://www.opengis.net/gml/3.2":AbstractGMLType.
///
/// <PRE><BLOCKQUOTE>
///   All geometry elements are derived directly or indirectly from this abstract supertype. A geometry element may have an identifying attribute (gml:id), one or more names (elements identifier and name) and a description (elements description and descriptionReference) . It may be associated with a spatial reference system (attribute group gml:SRSReferenceGroup).
///   The following rules shall be adhered to:
///   - Every geometry type shall derive from this abstract type.
///   - Every geometry element (i.e. an element of a geometry type) shall be directly or indirectly in the substitution group of AbstractGeometry.
/// </BLOCKQUOTE></PRE>
/// class gml__AbstractGeometryType operations:
/// - gml__AbstractGeometryType* soap_new_gml__AbstractGeometryType(soap*) allocate and default initialize
/// - gml__AbstractGeometryType* soap_new_gml__AbstractGeometryType(soap*, int num) allocate array and default initialize values
/// - gml__AbstractGeometryType* soap_new_req_gml__AbstractGeometryType(soap*, ...) allocate, set required members
/// - gml__AbstractGeometryType* soap_new_set_gml__AbstractGeometryType(soap*, ...) allocate, set all public members
/// - gml__AbstractGeometryType::soap_default(soap*) default initialize members
/// - int soap_read_gml__AbstractGeometryType(soap*, gml__AbstractGeometryType*) deserialize from a stream
/// - int soap_write_gml__AbstractGeometryType(soap*, gml__AbstractGeometryType*) serialize to a stream
/// - gml__AbstractGeometryType* gml__AbstractGeometryType::soap_dup(soap*) returns deep copy of gml__AbstractGeometryType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__AbstractGeometryType::soap_del() deep deletes gml__AbstractGeometryType data members, use only after gml__AbstractGeometryType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__AbstractGeometryType : public gml__AbstractGMLType
{ public:
/*  INHERITED FROM gml__AbstractGMLType:
//  BEGIN GROUP <xs:group name="StandardObjectProperties">
/// Vector of gml__MetaDataPropertyType* element refs of length 0..unbounded.
    std::vector<gml__MetaDataPropertyType*> metaDataProperty               0;
/// <PRE><BLOCKQUOTE>
///   The value of this property is a text description of the object. gml:description uses gml:StringOrRefType as its content model, so it may contain a simple text string content, or carry a reference to an external description. The use of gml:description to reference an external description has been deprecated and replaced by the gml:descriptionReference property.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":description.
    gml__StringOrRefType*                description                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The value of this property is a remote text description of the object. The xlink:href attribute of the gml:descriptionReference property references the external description.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":descriptionReference.
    gml__ReferenceType*                  descriptionReference           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Often, a special identifier is assigned to an object by the maintaining authority with the intention that it is used in references to the object For such cases, the codeSpace shall be provided. That identifier is usually unique either globally or within an application domain. gml:identifier is a pre-defined property for such identifiers.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":identifier.
    gml__CodeWithAuthorityType*          identifier                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The gml:name property provides a label or identifier for the object, commonly a descriptive name. An object may have several names, typically assigned by different authorities. gml:name uses the gml:CodeType content model. The authority for a name is indicated by the value of its (optional) codeSpace attribute. The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace. In common usage there will be one name per authority, so a processing application may select the name from its preferred codeSpace.
/// </BLOCKQUOTE></PRE>
/// Vector of gml__CodeType* element refs of length 0..unbounded.
    std::vector<gml__CodeType*         > name                           0;
//  END OF GROUP
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":id.
/// <PRE><BLOCKQUOTE>
///   The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.
/// </BLOCKQUOTE></PRE>
   @xsd__ID*                             gml__id                        0;	///< Optional attribute.
    END OF INHERITED FROM gml__AbstractGMLType */
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":SRSReferenceGroup">.
/// Attribute "srsName" of XSD type xs:anyURI.
   @xsd__anyURI*                         srsName                        0;	///< Optional attribute.
/// Attribute "srsDimension" of XSD type xs:positiveInteger.
   @xsd__positiveInteger*                srsDimension                   0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":SRSInformationGroup">.
/// Attribute "axisLabels" of XSD type "http://www.opengis.net/gml/3.2":NCNameList.
   @gml__NCNameList*                     axisLabels                     0;	///< Optional attribute.
/// Attribute "uomLabels" of XSD type "http://www.opengis.net/gml/3.2":NCNameList.
   @gml__NCNameList*                     uomLabels                      0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.opengis.net/gml/3.2":DirectPositionType is a complexType with simpleContent.
///
/// <PRE><BLOCKQUOTE>
///   Direct position instances hold the coordinates for a position within some coordinate reference system (CRS). Since direct positions, as data types, will often be included in larger objects (such as geometry elements) that have references to CRS, the srsName attribute will in general be missing, if this particular direct position is included in a larger element with such a reference to a CRS. In this case, the CRS is implicitly assumed to take on the value of the containing object's CRS.
///   if no srsName attribute is given, the CRS shall be specified as part of the larger context this geometry element is part of, typically a geometric object like a point, curve, etc.
/// </BLOCKQUOTE></PRE>
/// class gml__DirectPositionType operations:
/// - gml__DirectPositionType* soap_new_gml__DirectPositionType(soap*) allocate and default initialize
/// - gml__DirectPositionType* soap_new_gml__DirectPositionType(soap*, int num) allocate array and default initialize values
/// - gml__DirectPositionType* soap_new_req_gml__DirectPositionType(soap*, ...) allocate, set required members
/// - gml__DirectPositionType* soap_new_set_gml__DirectPositionType(soap*, ...) allocate, set all public members
/// - gml__DirectPositionType::soap_default(soap*) default initialize members
/// - int soap_read_gml__DirectPositionType(soap*, gml__DirectPositionType*) deserialize from a stream
/// - int soap_write_gml__DirectPositionType(soap*, gml__DirectPositionType*) serialize to a stream
/// - gml__DirectPositionType* gml__DirectPositionType::soap_dup(soap*) returns deep copy of gml__DirectPositionType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__DirectPositionType::soap_del() deep deletes gml__DirectPositionType data members, use only after gml__DirectPositionType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__DirectPositionType : public xsd__anyType
{ public:
/// __item wraps ""http://www.opengis.net/gml/3.2":doubleList" simpleContent.
    gml__doubleList                      __item                        ;
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":SRSReferenceGroup">.
/// Attribute "srsName" of XSD type xs:anyURI.
   @xsd__anyURI*                         srsName                        0;	///< Optional attribute.
/// Attribute "srsDimension" of XSD type xs:positiveInteger.
   @xsd__positiveInteger*                srsDimension                   0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":SRSInformationGroup">.
/// Attribute "axisLabels" of XSD type "http://www.opengis.net/gml/3.2":NCNameList.
   @gml__NCNameList*                     axisLabels                     0;	///< Optional attribute.
/// Attribute "uomLabels" of XSD type "http://www.opengis.net/gml/3.2":NCNameList.
   @gml__NCNameList*                     uomLabels                      0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.opengis.net/gml/3.2":DirectPositionListType is a complexType with simpleContent.
///
/// <PRE><BLOCKQUOTE>
///   posList instances (and other instances with the content model specified by DirectPositionListType) hold the coordinates for a sequence of direct positions within the same coordinate reference system (CRS).
///   if no srsName attribute is given, the CRS shall be specified as part of the larger context this geometry element is part of, typically a geometric object like a point, curve, etc. The optional attribute count specifies the number of direct positions in the list. If the attribute count is present then the attribute srsDimension shall be present, too.
///   The number of entries in the list is equal to the product of the dimensionality of the coordinate reference system (i.e. it is a derived value of the coordinate reference system definition) and the number of direct positions.
/// </BLOCKQUOTE></PRE>
/// class gml__DirectPositionListType operations:
/// - gml__DirectPositionListType* soap_new_gml__DirectPositionListType(soap*) allocate and default initialize
/// - gml__DirectPositionListType* soap_new_gml__DirectPositionListType(soap*, int num) allocate array and default initialize values
/// - gml__DirectPositionListType* soap_new_req_gml__DirectPositionListType(soap*, ...) allocate, set required members
/// - gml__DirectPositionListType* soap_new_set_gml__DirectPositionListType(soap*, ...) allocate, set all public members
/// - gml__DirectPositionListType::soap_default(soap*) default initialize members
/// - int soap_read_gml__DirectPositionListType(soap*, gml__DirectPositionListType*) deserialize from a stream
/// - int soap_write_gml__DirectPositionListType(soap*, gml__DirectPositionListType*) serialize to a stream
/// - gml__DirectPositionListType* gml__DirectPositionListType::soap_dup(soap*) returns deep copy of gml__DirectPositionListType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__DirectPositionListType::soap_del() deep deletes gml__DirectPositionListType data members, use only after gml__DirectPositionListType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__DirectPositionListType : public xsd__anyType
{ public:
/// __item wraps ""http://www.opengis.net/gml/3.2":doubleList" simpleContent.
    gml__doubleList                      __item                        ;
/// Attribute "count" of XSD type xs:positiveInteger.
   @xsd__positiveInteger*                count                          0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":SRSReferenceGroup">.
/// Attribute "srsName" of XSD type xs:anyURI.
   @xsd__anyURI*                         srsName                        0;	///< Optional attribute.
/// Attribute "srsDimension" of XSD type xs:positiveInteger.
   @xsd__positiveInteger*                srsDimension                   0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":SRSInformationGroup">.
/// Attribute "axisLabels" of XSD type "http://www.opengis.net/gml/3.2":NCNameList.
   @gml__NCNameList*                     axisLabels                     0;	///< Optional attribute.
/// Attribute "uomLabels" of XSD type "http://www.opengis.net/gml/3.2":NCNameList.
   @gml__NCNameList*                     uomLabels                      0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.opengis.net/gml/3.2":DerivationUnitTermType is a complexType with complexContent extension of XSD type "http://www.opengis.net/gml/3.2":UnitOfMeasureType.
///
/// class gml__DerivationUnitTermType operations:
/// - gml__DerivationUnitTermType* soap_new_gml__DerivationUnitTermType(soap*) allocate and default initialize
/// - gml__DerivationUnitTermType* soap_new_gml__DerivationUnitTermType(soap*, int num) allocate array and default initialize values
/// - gml__DerivationUnitTermType* soap_new_req_gml__DerivationUnitTermType(soap*, ...) allocate, set required members
/// - gml__DerivationUnitTermType* soap_new_set_gml__DerivationUnitTermType(soap*, ...) allocate, set all public members
/// - gml__DerivationUnitTermType::soap_default(soap*) default initialize members
/// - int soap_read_gml__DerivationUnitTermType(soap*, gml__DerivationUnitTermType*) deserialize from a stream
/// - int soap_write_gml__DerivationUnitTermType(soap*, gml__DerivationUnitTermType*) serialize to a stream
/// - gml__DerivationUnitTermType* gml__DerivationUnitTermType::soap_dup(soap*) returns deep copy of gml__DerivationUnitTermType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__DerivationUnitTermType::soap_del() deep deletes gml__DerivationUnitTermType data members, use only after gml__DerivationUnitTermType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__DerivationUnitTermType : public gml__UnitOfMeasureType
{ public:
/*  INHERITED FROM gml__UnitOfMeasureType:
/// Attribute "uom" of XSD type "http://www.opengis.net/gml/3.2":UomIdentifier.
   @gml__UomIdentifier                   uom                            1;	///< Required attribute.
    END OF INHERITED FROM gml__UnitOfMeasureType */
/// Attribute "exponent" of XSD type xs:integer.
   @long*                                exponent                       0;	///< Optional attribute.
};

/// @brief "http://www.opengis.net/gml/3.2":ConversionToPreferredUnitType is a complexType with complexContent extension of XSD type "http://www.opengis.net/gml/3.2":UnitOfMeasureType.
///
/// <PRE><BLOCKQUOTE>
///   The inherited attribute uom references the preferred unit that this conversion applies to. The conversion of a unit to the preferred unit for this physical quantity type is specified by an arithmetic conversion (scaling and/or offset). The content model extends gml:UnitOfMeasureType, which has a mandatory attribute uom which identifies the preferred unit for the physical quantity type that this conversion applies to. The conversion is specified by a choice of - gml:factor, which defines the scale factor, or
///   - gml:formula, which defines a formula by which a value using the conventional unit of measure can be converted to obtain the corresponding value using the preferred unit of measure. The formula defines the parameters of a simple formula by which a value using the conventional unit of measure can be converted to the corresponding value using the preferred unit of measure. The formula element contains elements a, b, c and d, whose values use the XML Schema type double. These values are used in the formula y = (a + bx) / (c + dx), where x is a value using this unit, and y is the corresponding value using the base unit. The elements a and d are optional, and if values are not provided, those parameters are considered to be zero. If values are not provided for both a and d, the formula is equivalent to a fraction with numerator and denominator parameters.
/// </BLOCKQUOTE></PRE>
/// class gml__ConversionToPreferredUnitType operations:
/// - gml__ConversionToPreferredUnitType* soap_new_gml__ConversionToPreferredUnitType(soap*) allocate and default initialize
/// - gml__ConversionToPreferredUnitType* soap_new_gml__ConversionToPreferredUnitType(soap*, int num) allocate array and default initialize values
/// - gml__ConversionToPreferredUnitType* soap_new_req_gml__ConversionToPreferredUnitType(soap*, ...) allocate, set required members
/// - gml__ConversionToPreferredUnitType* soap_new_set_gml__ConversionToPreferredUnitType(soap*, ...) allocate, set all public members
/// - gml__ConversionToPreferredUnitType::soap_default(soap*) default initialize members
/// - int soap_read_gml__ConversionToPreferredUnitType(soap*, gml__ConversionToPreferredUnitType*) deserialize from a stream
/// - int soap_write_gml__ConversionToPreferredUnitType(soap*, gml__ConversionToPreferredUnitType*) serialize to a stream
/// - gml__ConversionToPreferredUnitType* gml__ConversionToPreferredUnitType::soap_dup(soap*) returns deep copy of gml__ConversionToPreferredUnitType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__ConversionToPreferredUnitType::soap_del() deep deletes gml__ConversionToPreferredUnitType data members, use only after gml__ConversionToPreferredUnitType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__ConversionToPreferredUnitType : public gml__UnitOfMeasureType
{ public:
/*  INHERITED FROM gml__UnitOfMeasureType:
/// Attribute "uom" of XSD type "http://www.opengis.net/gml/3.2":UomIdentifier.
   @gml__UomIdentifier                   uom                            1;	///< Required attribute.
    END OF INHERITED FROM gml__UnitOfMeasureType */
//  BEGIN CHOICE <xs:choice>
   $int                                  __union_ConversionToPreferredUnitType;	///< Union _gml__union_ConversionToPreferredUnitType selector: set to SOAP_UNION__gml__union_ConversionToPreferredUnitType_<fieldname>
/// Union for choice in gml__ConversionToPreferredUnitType.
    union _gml__union_ConversionToPreferredUnitType
    {
/// Element "factor" of XSD type xs:double.
    double                               factor                         1;	///< Required element.
/// Element "formula" of XSD type "http://www.opengis.net/gml/3.2":FormulaType.
    gml__FormulaType*                    formula                        nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_ConversionToPreferredUnitType;
//  END OF CHOICE
};

/// @brief "http://www.opengis.net/gml/3.2":DefinitionBaseType is a complexType with complexContent restriction of XSD type "http://www.opengis.net/gml/3.2":AbstractGMLType.
///
/// class gml__DefinitionBaseType operations:
/// - gml__DefinitionBaseType* soap_new_gml__DefinitionBaseType(soap*) allocate and default initialize
/// - gml__DefinitionBaseType* soap_new_gml__DefinitionBaseType(soap*, int num) allocate array and default initialize values
/// - gml__DefinitionBaseType* soap_new_req_gml__DefinitionBaseType(soap*, ...) allocate, set required members
/// - gml__DefinitionBaseType* soap_new_set_gml__DefinitionBaseType(soap*, ...) allocate, set all public members
/// - gml__DefinitionBaseType::soap_default(soap*) default initialize members
/// - int soap_read_gml__DefinitionBaseType(soap*, gml__DefinitionBaseType*) deserialize from a stream
/// - int soap_write_gml__DefinitionBaseType(soap*, gml__DefinitionBaseType*) serialize to a stream
/// - gml__DefinitionBaseType* gml__DefinitionBaseType::soap_dup(soap*) returns deep copy of gml__DefinitionBaseType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__DefinitionBaseType::soap_del() deep deletes gml__DefinitionBaseType data members, use only after gml__DefinitionBaseType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__DefinitionBaseType : public xsd__anyType
{ public:
/// Vector of gml__MetaDataPropertyType* element refs of length 0..unbounded.
    std::vector<gml__MetaDataPropertyType*> metaDataProperty               0;
/// <PRE><BLOCKQUOTE>
///   The value of this property is a text description of the object. gml:description uses gml:StringOrRefType as its content model, so it may contain a simple text string content, or carry a reference to an external description. The use of gml:description to reference an external description has been deprecated and replaced by the gml:descriptionReference property.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":description.
    gml__StringOrRefType*                description                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The value of this property is a remote text description of the object. The xlink:href attribute of the gml:descriptionReference property references the external description.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":descriptionReference.
    gml__ReferenceType*                  descriptionReference           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Often, a special identifier is assigned to an object by the maintaining authority with the intention that it is used in references to the object For such cases, the codeSpace shall be provided. That identifier is usually unique either globally or within an application domain. gml:identifier is a pre-defined property for such identifiers.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":identifier.
    gml__CodeWithAuthorityType*          identifier                     1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The gml:name property provides a label or identifier for the object, commonly a descriptive name. An object may have several names, typically assigned by different authorities. gml:name uses the gml:CodeType content model. The authority for a name is indicated by the value of its (optional) codeSpace attribute. The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace. In common usage there will be one name per authority, so a processing application may select the name from its preferred codeSpace.
/// </BLOCKQUOTE></PRE>
/// Vector of gml__CodeType* element refs of length 0..unbounded.
    std::vector<gml__CodeType*         > name                           0;
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":id.
/// <PRE><BLOCKQUOTE>
///   The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.
/// </BLOCKQUOTE></PRE>
   @xsd__ID                              gml__id                        1;	///< Required attribute.
/*  RESTRICTED FROM gml__AbstractGMLType:
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":id.
/// <PRE><BLOCKQUOTE>
///   The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.
/// </BLOCKQUOTE></PRE>
   @xsd__ID*                             gml__id                        0;	///< Optional attribute.
    END OF RESTRICTED FROM gml__AbstractGMLType */
};

/// @brief "http://www.opengis.net/gml/3.2":DictionaryEntryType is a complexType with complexContent extension of XSD type "http://www.opengis.net/gml/3.2":AbstractMemberType.
///
/// class gml__DictionaryEntryType operations:
/// - gml__DictionaryEntryType* soap_new_gml__DictionaryEntryType(soap*) allocate and default initialize
/// - gml__DictionaryEntryType* soap_new_gml__DictionaryEntryType(soap*, int num) allocate array and default initialize values
/// - gml__DictionaryEntryType* soap_new_req_gml__DictionaryEntryType(soap*, ...) allocate, set required members
/// - gml__DictionaryEntryType* soap_new_set_gml__DictionaryEntryType(soap*, ...) allocate, set all public members
/// - gml__DictionaryEntryType::soap_default(soap*) default initialize members
/// - int soap_read_gml__DictionaryEntryType(soap*, gml__DictionaryEntryType*) deserialize from a stream
/// - int soap_write_gml__DictionaryEntryType(soap*, gml__DictionaryEntryType*) serialize to a stream
/// - gml__DictionaryEntryType* gml__DictionaryEntryType::soap_dup(soap*) returns deep copy of gml__DictionaryEntryType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__DictionaryEntryType::soap_del() deep deletes gml__DictionaryEntryType data members, use only after gml__DictionaryEntryType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__DictionaryEntryType : public gml__AbstractMemberType
{ public:
/*  INHERITED FROM gml__AbstractMemberType:
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":OwnershipAttributeGroup">.
/// Attribute "owns" of XSD type xs:boolean.
   @bool                                 owns                           0 = false;	///< Default attribute value="false".
//  END OF ATTRIBUTEGROUP
    END OF INHERITED FROM gml__AbstractMemberType */
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gml__DictionaryEntryType_sequence
    {
/// <PRE><BLOCKQUOTE>
///   The basic gml:Definition element specifies a definition, which can be included in or referenced by a dictionary. The content model for a generic definition is a derivation from gml:AbstractGMLType. The gml:description property element shall hold the definition if this can be captured in a simple text string, or the gml:descriptionReference property element may carry a link to a description elsewhere.
///   The gml:identifier element shall provide one identifier identifying this definition. The identifier shall be unique within the dictionaries using this definition. The gml:name elements shall provide zero or more terms and synonyms for which this is the definition.
///   The gml:remarks element shall be used to hold additional textual information that is not conceptually part of the definition but is useful in understanding the definition.
/// </BLOCKQUOTE></PRE>
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="Definition"> with global elements <UnitDefinition> <Dictionary> <CoordinateSystemAxis> <Ellipsoid> <PrimeMeridian> <OperationMethod> <TimeReferenceSystem> <DefinitionCollection> <DefinitionProxy>
   $int                                  __unionDefinition             ;	///< Union _gml__union_DictionaryEntryType selector: set to SOAP_UNION__gml__union_DictionaryEntryType_<fieldname>
/// Union for substitutionGroup gml__Definition.
    union _gml__union_DictionaryEntryType
    {
/// <PRE><BLOCKQUOTE>
///   The basic gml:Definition element specifies a definition, which can be included in or referenced by a dictionary. The content model for a generic definition is a derivation from gml:AbstractGMLType. The gml:description property element shall hold the definition if this can be captured in a simple text string, or the gml:descriptionReference property element may carry a link to a description elsewhere.
///   The gml:identifier element shall provide one identifier identifying this definition. The identifier shall be unique within the dictionaries using this definition. The gml:name elements shall provide zero or more terms and synonyms for which this is the definition.
///   The gml:remarks element shall be used to hold additional textual information that is not conceptually part of the definition but is useful in understanding the definition.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":Definition.
    gml__DefinitionType*                 Definition                     nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   A gml:UnitDefinition is a general definition of a unit of measure. This generic element is used only for units for which no relationship with other units or units systems is known.
///   The content model of gml:UnitDefinition adds three additional properties to gml:Definition, gml:quantityType, gml:quantityTypeReference and gml:catalogSymbol. The gml:catalogSymbol property optionally gives the short symbol used for this unit. This element is usually used when the relationship of this unit to other units or units systems is unknown.
/// </BLOCKQUOTE></PRE>
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="UnitDefinition"> with global elements <BaseUnit> <DerivedUnit> <ConventionalUnit>
/// <PRE><BLOCKQUOTE>
///   A gml:UnitDefinition is a general definition of a unit of measure. This generic element is used only for units for which no relationship with other units or units systems is known.
///   The content model of gml:UnitDefinition adds three additional properties to gml:Definition, gml:quantityType, gml:quantityTypeReference and gml:catalogSymbol. The gml:catalogSymbol property optionally gives the short symbol used for this unit. This element is usually used when the relationship of this unit to other units or units systems is unknown.
/// </BLOCKQUOTE></PRE>
/// Element "http://www.opengis.net/gml/3.2":UnitDefinition.
    gml__UnitDefinitionType*             UnitDefinition                 nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   A base unit is a unit of measure that cannot be derived by combination of other base units within a particular system of units. For example, in the SI system of units, the base units are metre, kilogram, second, Ampere, Kelvin, mole, and candela, for the physical quantity types length, mass, time interval, electric current, thermodynamic temperature, amount of substance and luminous intensity, respectively.
///   gml:BaseUnit extends generic gml:UnitDefinition with the property gml:unitsSystem, which carries a reference to the units system to which this base unit is asserted to belong.
/// </BLOCKQUOTE></PRE>
/// Element "http://www.opengis.net/gml/3.2":BaseUnit.
    gml__BaseUnitType*                   BaseUnit                       nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   Derived units are defined by combination of other units. Derived units are used for quantities other than those corresponding to the base units, such as hertz (s-1) for frequency, Newton (kg.m/s2) for force. Derived units based directly on base units are usually preferred for quantities other than the fundamental quantities within a system. If a derived unit is not the preferred unit, the gml:ConventionalUnit element should be used instead.
///   The gml:DerivedUnit extends gml:UnitDefinition with the property gml:derivationUnitTerms.
/// </BLOCKQUOTE></PRE>
/// Element "http://www.opengis.net/gml/3.2":DerivedUnit.
    gml__DerivedUnitType*                DerivedUnit                    nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   Conventional units that are neither base units nor defined by direct combination of base units are used in many application domains. For example electronVolt for energy, feet and nautical miles for length. In most cases there is a known, usually linear, conversion to a preferred unit which is either a base unit or derived by direct combination of base units.
///   The gml:ConventionalUnit extends gml:UnitDefinition with a property that describes a conversion to a preferred unit for this physical quantity. When the conversion is exact, the element gml:conversionToPreferredUnit should be used, or when the conversion is not exact the element gml:roughConversionToPreferredUnit is available. Both of these elements have the same content model. The gml:derivationUnitTerm property defined above is included to allow a user to optionally record how this unit may be derived from other ("more primitive") units.
/// </BLOCKQUOTE></PRE>
/// Element "http://www.opengis.net/gml/3.2":ConventionalUnit.
    gml__ConventionalUnitType*           ConventionalUnit               nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
//  END OF SUBSTITUTIONS
/// <PRE><BLOCKQUOTE>
///   Sets of definitions may be collected into dictionaries or collections.
///   A gml:Dictionary is a non-abstract collection of definitions.
///   The gml:Dictionary content model adds a list of gml:dictionaryEntry properties that contain or reference gml:Definition objects. A database handle (gml:id attribute) is required, in order that this collection may be referred to. The standard gml:identifier, gml:description, gml:descriptionReference and gml:name properties are available to reference or contain more information about this dictionary. The gml:description and gml:descriptionReference property elements may be used for a description of this dictionary. The derived gml:name element may be used for the name(s) of this dictionary. for remote definiton references gml:dictionaryEntry shall be used. If a Definition object contained within a Dictionary uses the descriptionReference property to refer to a remote definition, then this enables the inclusion of a remote definition in a local dictionary, giving a handle and identifier in the context of the local dictionary.
/// </BLOCKQUOTE></PRE>
/// Element "http://www.opengis.net/gml/3.2":Dictionary.
    gml__DictionaryType*                 Dictionary                     nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   gml:CoordinateSystemAxis is a definition of a coordinate system axis.
/// </BLOCKQUOTE></PRE>
/// Element "http://www.opengis.net/gml/3.2":CoordinateSystemAxis.
    gml__CoordinateSystemAxisType*       CoordinateSystemAxis           nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   A gml:Ellipsoid is a geometric figure that may be used to describe the approximate shape of the earth. In mathematical terms, it is a surface formed by the rotation of an ellipse about its minor axis.
/// </BLOCKQUOTE></PRE>
/// Element "http://www.opengis.net/gml/3.2":Ellipsoid.
    gml__EllipsoidType*                  Ellipsoid                      nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   A gml:PrimeMeridian defines the origin from which longitude values are determined. The default value for the prime meridian gml:identifier value is "Greenwich".
/// </BLOCKQUOTE></PRE>
/// Element "http://www.opengis.net/gml/3.2":PrimeMeridian.
    gml__PrimeMeridianType*              PrimeMeridian                  nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   gml:OperationMethod is a method (algorithm or procedure) used to perform a coordinate operation. Most operation methods use a number of operation parameters, although some coordinate conversions use none. Each coordinate operation using the method assigns values to these parameters.
///   The parameter elements are an unordered list of associations to the set of operation parameters and parameter groups used by this operation method.
/// </BLOCKQUOTE></PRE>
/// Element "http://www.opengis.net/gml/3.2":OperationMethod.
    gml__OperationMethodType*            OperationMethod                nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   A reference system is characterized in terms of its domain of validity: the spatial and temporal extent over which it is applicable. The basic GML element for temporal reference systems is gml:TimeReferenceSystem. Its content model extends gml:DefinitionType with one additional property, gml:domainOfValidity.
/// </BLOCKQUOTE></PRE>
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="TimeReferenceSystem"> with global elements <TimeCoordinateSystem> <TimeCalendar> <TimeClock> <TimeOrdinalReferenceSystem>
/// <PRE><BLOCKQUOTE>
///   A reference system is characterized in terms of its domain of validity: the spatial and temporal extent over which it is applicable. The basic GML element for temporal reference systems is gml:TimeReferenceSystem. Its content model extends gml:DefinitionType with one additional property, gml:domainOfValidity.
/// </BLOCKQUOTE></PRE>
/// Element "http://www.opengis.net/gml/3.2":TimeReferenceSystem.
    gml__TimeReferenceSystemType*        TimeReferenceSystem            nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   A temporal coordinate system shall be based on a continuous interval scale defined in terms of a single time interval.
///   The differences to ISO 19108 TM_CoordinateSystem are:
///   - the origin is specified either using the property gml:originPosition whose value is a direct time position, or using the property gml:origin whose model is gml:TimeInstantPropertyType; this permits more flexibility in representation and also supports referring to a value fixed elsewhere;
///   - the interval uses gml:TimeIntervalLengthType.
/// </BLOCKQUOTE></PRE>
/// Element "http://www.opengis.net/gml/3.2":TimeCoordinateSystem.
    gml__TimeCoordinateSystemType*       TimeCoordinateSystem           nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   A calendar is a discrete temporal reference system that provides a basis for defining temporal position to a resolution of one day.
///   gml:TimeCalendar adds one property to those inherited from gml:TimeReferenceSystem. A gml:referenceFrame provides a link to a gml:TimeCalendarEra that it uses. A gml:TimeCalendar may reference more than one calendar era. The referenceFrame element follows the standard GML property model, allowing the association to be instantiated either using an inline description using the gml:TimeCalendarEra element, or a link to a gml:TimeCalendarEra which is explicit elsewhere.
/// </BLOCKQUOTE></PRE>
/// Element "http://www.opengis.net/gml/3.2":TimeCalendar.
    gml__TimeCalendarType*               TimeCalendar                   nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   A clock provides a basis for defining temporal position within a day. A clock shall be used with a calendar in order to provide a complete description of a temporal position within a specific day.
///   gml:TimeClock adds the following properties to those inherited from gml:TimeReferenceSystemType:
///   - gml:referenceEvent is the name or description of an event, such as solar noon or sunrise, which fixes the position of the base scale of the clock.
///   - gml:referenceTime specifies the time of day associated with the reference event expressed as a time of day in the given clock. The reference time is usually the origin of the clock scale. - gml:utcReference specifies the 24 hour local or UTC time that corresponds to the reference time.
///   - gml:dateBasis contains or references the calendars that use this clock.
/// </BLOCKQUOTE></PRE>
/// Element "http://www.opengis.net/gml/3.2":TimeClock.
    gml__TimeClockType*                  TimeClock                      nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   In some applications of geographic information such as geology and archaeology relative position in time is known more precisely than absolute time or duration. The order of events in time can be well established, but the magnitude of the intervals between them cannot be accurately determined; in such cases, the use of an ordinal temporal reference system is appropriate. An ordinal temporal reference system is composed of a sequence of named coterminous eras, which may in turn be composed of sequences of member eras at a finer scale, giving the whole a hierarchical structure of eras of verying resolution. An ordinal temporal reference system whose component eras are not further subdivided is effectively a temporal topological complex constrained to be a linear graph. An ordinal temporal reference system some or all of whose component eras are subdivided is effectively a temporal topological complex with the constraint that parallel branches may only be constructed in pairs where one is a single temporal ordinal era and the other is a sequence of temporal ordinal eras that are called "members" of the "group". This constraint means that within a single temporal ordinal reference system, the relative position of all temporal ordinal eras is unambiguous. The positions of the beginning and end of a given era may calibrate the relative time scale.
///   gml:TimeOrdinalReferenceSystem adds one or more gml:component properties to the generic temporal reference system model.
/// </BLOCKQUOTE></PRE>
/// Element "http://www.opengis.net/gml/3.2":TimeOrdinalReferenceSystem.
    gml__TimeOrdinalReferenceSystemType*  TimeOrdinalReferenceSystem     nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
//  END OF SUBSTITUTIONS
/// Element "http://www.opengis.net/gml/3.2":DefinitionCollection.
    gml__DictionaryType*                 DefinitionCollection           nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.opengis.net/gml/3.2":DefinitionProxy.
    gml__DefinitionProxyType*            DefinitionProxy                nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_DictionaryEntryType     ;
//  END OF SUBSTITUTIONS
    }                                   *__DictionaryEntryType_sequence 0;
//  END OF SEQUENCE
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":AssociationAttributeGroup">.
/// Attribute "nilReason" of XSD type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         gml__remoteSchema              0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.opengis.net/gml/3.2":CodeType is a complexType with simpleContent.
///
/// <PRE><BLOCKQUOTE>
///   gml:CodeType is a generalized type to be used for a term, keyword or name.
///   It adds a XML attribute codeSpace to a term, where the value of the codeSpace attribute (if present) shall indicate a dictionary, thesaurus, classification scheme, authority, or pattern for the term.
/// </BLOCKQUOTE></PRE>
/// class gml__CodeType operations:
/// - gml__CodeType* soap_new_gml__CodeType(soap*) allocate and default initialize
/// - gml__CodeType* soap_new_gml__CodeType(soap*, int num) allocate array and default initialize values
/// - gml__CodeType* soap_new_req_gml__CodeType(soap*, ...) allocate, set required members
/// - gml__CodeType* soap_new_set_gml__CodeType(soap*, ...) allocate, set all public members
/// - gml__CodeType::soap_default(soap*) default initialize members
/// - int soap_read_gml__CodeType(soap*, gml__CodeType*) deserialize from a stream
/// - int soap_write_gml__CodeType(soap*, gml__CodeType*) serialize to a stream
/// - gml__CodeType* gml__CodeType::soap_dup(soap*) returns deep copy of gml__CodeType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__CodeType::soap_del() deep deletes gml__CodeType data members, use only after gml__CodeType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__CodeType : public xsd__anyType
{ public:
/// __item wraps "xs:string" simpleContent.
    std::string                          __item                        ;
/// Attribute "codeSpace" of XSD type xs:anyURI.
   @xsd__anyURI*                         codeSpace                      0;	///< Optional attribute.
};

/// @brief "http://www.opengis.net/gml/3.2":MeasureType is a complexType with simpleContent.
///
/// <PRE><BLOCKQUOTE>
///   gml:MeasureType supports recording an amount encoded as a value of XML Schema double, together with a units of measure indicated by an attribute uom, short for "units Of measure". The value of the uom attribute identifies a reference system for the amount, usually a ratio or interval scale.
/// </BLOCKQUOTE></PRE>
/// class gml__MeasureType operations:
/// - gml__MeasureType* soap_new_gml__MeasureType(soap*) allocate and default initialize
/// - gml__MeasureType* soap_new_gml__MeasureType(soap*, int num) allocate array and default initialize values
/// - gml__MeasureType* soap_new_req_gml__MeasureType(soap*, ...) allocate, set required members
/// - gml__MeasureType* soap_new_set_gml__MeasureType(soap*, ...) allocate, set all public members
/// - gml__MeasureType::soap_default(soap*) default initialize members
/// - int soap_read_gml__MeasureType(soap*, gml__MeasureType*) deserialize from a stream
/// - int soap_write_gml__MeasureType(soap*, gml__MeasureType*) serialize to a stream
/// - gml__MeasureType* gml__MeasureType::soap_dup(soap*) returns deep copy of gml__MeasureType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__MeasureType::soap_del() deep deletes gml__MeasureType data members, use only after gml__MeasureType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__MeasureType : public xsd__anyType
{ public:
/// __item wraps "xs:double" simpleContent.
    double                               __item                        ;
/// Attribute "uom" of XSD type "http://www.opengis.net/gml/3.2":UomIdentifier.
   @gml__UomIdentifier                   uom                            1;	///< Required attribute.
};

/// @brief "http://www.opengis.net/gml/3.2":CoordinatesType is a complexType with simpleContent.
///
/// <PRE><BLOCKQUOTE>
///   This type is deprecated for tuples with ordinate values that are numbers.
///   CoordinatesType is a text string, intended to be used to record an array of tuples or coordinates. While it is not possible to enforce the internal structure of the string through schema validation, some optional attributes have been provided in previous versions of GML to support a description of the internal structure. These attributes are deprecated. The attributes were intended to be used as follows:
///   Decimal symbol used for a decimal point (default="." a stop or period)
///   cs symbol used to separate components within a tuple or coordinate string (default="," a comma)
///   ts symbol used to separate tuples or coordinate strings (default=" " a space)
///   Since it is based on the XML Schema string type, CoordinatesType may be used in the construction of tables of tuples or arrays of tuples, including ones that contain mixed text and numeric values.
/// </BLOCKQUOTE></PRE>
/// class gml__CoordinatesType operations:
/// - gml__CoordinatesType* soap_new_gml__CoordinatesType(soap*) allocate and default initialize
/// - gml__CoordinatesType* soap_new_gml__CoordinatesType(soap*, int num) allocate array and default initialize values
/// - gml__CoordinatesType* soap_new_req_gml__CoordinatesType(soap*, ...) allocate, set required members
/// - gml__CoordinatesType* soap_new_set_gml__CoordinatesType(soap*, ...) allocate, set all public members
/// - gml__CoordinatesType::soap_default(soap*) default initialize members
/// - int soap_read_gml__CoordinatesType(soap*, gml__CoordinatesType*) deserialize from a stream
/// - int soap_write_gml__CoordinatesType(soap*, gml__CoordinatesType*) serialize to a stream
/// - gml__CoordinatesType* gml__CoordinatesType::soap_dup(soap*) returns deep copy of gml__CoordinatesType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__CoordinatesType::soap_del() deep deletes gml__CoordinatesType data members, use only after gml__CoordinatesType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__CoordinatesType : public xsd__anyType
{ public:
/// __item wraps "xs:string" simpleContent.
    std::string                          __item                        ;
/// Attribute "decimal" of XSD type xs:string.
   @std::string                          decimal                        0 = ".";	///< Default attribute value=".".
/// Attribute "cs" of XSD type xs:string.
   @std::string                          cs                             0 = ",";	///< Default attribute value=",".
/// Attribute "ts" of XSD type xs:string.
   @std::string                          ts                             0 = " ";	///< Default attribute value=" ".
};

/// @brief "http://www.opengis.net/gml/3.2":CodeListType is a complexType with simpleContent.
///
/// <PRE><BLOCKQUOTE>
///   gml:CodeListType provides for lists of terms. The values in an instance element shall all be valid according to the rules of the dictionary, classification scheme, or authority identified by the value of its codeSpace attribute.
/// </BLOCKQUOTE></PRE>
/// class gml__CodeListType operations:
/// - gml__CodeListType* soap_new_gml__CodeListType(soap*) allocate and default initialize
/// - gml__CodeListType* soap_new_gml__CodeListType(soap*, int num) allocate array and default initialize values
/// - gml__CodeListType* soap_new_req_gml__CodeListType(soap*, ...) allocate, set required members
/// - gml__CodeListType* soap_new_set_gml__CodeListType(soap*, ...) allocate, set all public members
/// - gml__CodeListType::soap_default(soap*) default initialize members
/// - int soap_read_gml__CodeListType(soap*, gml__CodeListType*) deserialize from a stream
/// - int soap_write_gml__CodeListType(soap*, gml__CodeListType*) serialize to a stream
/// - gml__CodeListType* gml__CodeListType::soap_dup(soap*) returns deep copy of gml__CodeListType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__CodeListType::soap_del() deep deletes gml__CodeListType data members, use only after gml__CodeListType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__CodeListType : public xsd__anyType
{ public:
/// __item wraps ""http://www.opengis.net/gml/3.2":NameList" simpleContent.
    gml__NameList                        __item                        ;
/// Attribute "codeSpace" of XSD type xs:anyURI.
   @xsd__anyURI*                         codeSpace                      0;	///< Optional attribute.
};

/// @brief "http://www.opengis.net/gml/3.2":CodeOrNilReasonListType is a complexType with simpleContent.
///
/// <PRE><BLOCKQUOTE>
///   gml:CodeOrNilReasonListType provides for lists of terms. The values in an instance element shall all be valid according to the rules of the dictionary, classification scheme, or authority identified by the value of its codeSpace attribute. An instance element may also include embedded values from NilReasonType. It is intended to be used in situations where a term or classification is expected, but the value may be absent for some reason.
/// </BLOCKQUOTE></PRE>
/// class gml__CodeOrNilReasonListType operations:
/// - gml__CodeOrNilReasonListType* soap_new_gml__CodeOrNilReasonListType(soap*) allocate and default initialize
/// - gml__CodeOrNilReasonListType* soap_new_gml__CodeOrNilReasonListType(soap*, int num) allocate array and default initialize values
/// - gml__CodeOrNilReasonListType* soap_new_req_gml__CodeOrNilReasonListType(soap*, ...) allocate, set required members
/// - gml__CodeOrNilReasonListType* soap_new_set_gml__CodeOrNilReasonListType(soap*, ...) allocate, set all public members
/// - gml__CodeOrNilReasonListType::soap_default(soap*) default initialize members
/// - int soap_read_gml__CodeOrNilReasonListType(soap*, gml__CodeOrNilReasonListType*) deserialize from a stream
/// - int soap_write_gml__CodeOrNilReasonListType(soap*, gml__CodeOrNilReasonListType*) serialize to a stream
/// - gml__CodeOrNilReasonListType* gml__CodeOrNilReasonListType::soap_dup(soap*) returns deep copy of gml__CodeOrNilReasonListType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__CodeOrNilReasonListType::soap_del() deep deletes gml__CodeOrNilReasonListType data members, use only after gml__CodeOrNilReasonListType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__CodeOrNilReasonListType : public xsd__anyType
{ public:
/// __item wraps ""http://www.opengis.net/gml/3.2":NameOrNilReasonList" simpleContent.
    gml__NameOrNilReasonList             __item                        ;
/// Attribute "codeSpace" of XSD type xs:anyURI.
   @xsd__anyURI*                         codeSpace                      0;	///< Optional attribute.
};

/// @brief "http://www.opengis.net/gml/3.2":MeasureListType is a complexType with simpleContent.
///
/// <PRE><BLOCKQUOTE>
///   gml:MeasureListType provides for a list of quantities.
/// </BLOCKQUOTE></PRE>
/// class gml__MeasureListType operations:
/// - gml__MeasureListType* soap_new_gml__MeasureListType(soap*) allocate and default initialize
/// - gml__MeasureListType* soap_new_gml__MeasureListType(soap*, int num) allocate array and default initialize values
/// - gml__MeasureListType* soap_new_req_gml__MeasureListType(soap*, ...) allocate, set required members
/// - gml__MeasureListType* soap_new_set_gml__MeasureListType(soap*, ...) allocate, set all public members
/// - gml__MeasureListType::soap_default(soap*) default initialize members
/// - int soap_read_gml__MeasureListType(soap*, gml__MeasureListType*) deserialize from a stream
/// - int soap_write_gml__MeasureListType(soap*, gml__MeasureListType*) serialize to a stream
/// - gml__MeasureListType* gml__MeasureListType::soap_dup(soap*) returns deep copy of gml__MeasureListType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__MeasureListType::soap_del() deep deletes gml__MeasureListType data members, use only after gml__MeasureListType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__MeasureListType : public xsd__anyType
{ public:
/// __item wraps ""http://www.opengis.net/gml/3.2":doubleList" simpleContent.
    gml__doubleList                      __item                        ;
/// Attribute "uom" of XSD type "http://www.opengis.net/gml/3.2":UomIdentifier.
   @gml__UomIdentifier                   uom                            1;	///< Required attribute.
};

/// @brief "http://www.opengis.net/gml/3.2":MeasureOrNilReasonListType is a complexType with simpleContent.
///
/// <PRE><BLOCKQUOTE>
///   gml:MeasureOrNilReasonListType provides for a list of quantities. An instance element may also include embedded values from NilReasonType. It is intended to be used in situations where a value is expected, but the value may be absent for some reason.
/// </BLOCKQUOTE></PRE>
/// class gml__MeasureOrNilReasonListType operations:
/// - gml__MeasureOrNilReasonListType* soap_new_gml__MeasureOrNilReasonListType(soap*) allocate and default initialize
/// - gml__MeasureOrNilReasonListType* soap_new_gml__MeasureOrNilReasonListType(soap*, int num) allocate array and default initialize values
/// - gml__MeasureOrNilReasonListType* soap_new_req_gml__MeasureOrNilReasonListType(soap*, ...) allocate, set required members
/// - gml__MeasureOrNilReasonListType* soap_new_set_gml__MeasureOrNilReasonListType(soap*, ...) allocate, set all public members
/// - gml__MeasureOrNilReasonListType::soap_default(soap*) default initialize members
/// - int soap_read_gml__MeasureOrNilReasonListType(soap*, gml__MeasureOrNilReasonListType*) deserialize from a stream
/// - int soap_write_gml__MeasureOrNilReasonListType(soap*, gml__MeasureOrNilReasonListType*) serialize to a stream
/// - gml__MeasureOrNilReasonListType* gml__MeasureOrNilReasonListType::soap_dup(soap*) returns deep copy of gml__MeasureOrNilReasonListType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__MeasureOrNilReasonListType::soap_del() deep deletes gml__MeasureOrNilReasonListType data members, use only after gml__MeasureOrNilReasonListType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__MeasureOrNilReasonListType : public xsd__anyType
{ public:
/// __item wraps ""http://www.opengis.net/gml/3.2":doubleOrNilReasonList" simpleContent.
    gml__doubleOrNilReasonList           __item                        ;
/// Attribute "uom" of XSD type "http://www.opengis.net/gml/3.2":UomIdentifier.
   @gml__UomIdentifier                   uom                            1;	///< Required attribute.
};

/// @brief "http://www.opengis.net/gml/3.2":AbstractFeatureType is an abstract complexType with complexContent extension of XSD type "http://www.opengis.net/gml/3.2":AbstractGMLType.
///
/// <PRE><BLOCKQUOTE>
///   The basic feature model is given by the gml:AbstractFeatureType.
///   The content model for gml:AbstractFeatureType adds two specific properties suitable for geographic features to the content model defined in gml:AbstractGMLType. The value of the gml:boundedBy property describes an envelope that encloses the entire feature instance, and is primarily useful for supporting rapid searching for features that occur in a particular location. The value of the gml:location property describes the extent, position or relative location of the feature.
/// </BLOCKQUOTE></PRE>
/// class gml__AbstractFeatureType operations:
/// - gml__AbstractFeatureType* soap_new_gml__AbstractFeatureType(soap*) allocate and default initialize
/// - gml__AbstractFeatureType* soap_new_gml__AbstractFeatureType(soap*, int num) allocate array and default initialize values
/// - gml__AbstractFeatureType* soap_new_req_gml__AbstractFeatureType(soap*, ...) allocate, set required members
/// - gml__AbstractFeatureType* soap_new_set_gml__AbstractFeatureType(soap*, ...) allocate, set all public members
/// - gml__AbstractFeatureType::soap_default(soap*) default initialize members
/// - int soap_read_gml__AbstractFeatureType(soap*, gml__AbstractFeatureType*) deserialize from a stream
/// - int soap_write_gml__AbstractFeatureType(soap*, gml__AbstractFeatureType*) serialize to a stream
/// - gml__AbstractFeatureType* gml__AbstractFeatureType::soap_dup(soap*) returns deep copy of gml__AbstractFeatureType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__AbstractFeatureType::soap_del() deep deletes gml__AbstractFeatureType data members, use only after gml__AbstractFeatureType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__AbstractFeatureType : public gml__AbstractGMLType
{ public:
/*  INHERITED FROM gml__AbstractGMLType:
//  BEGIN GROUP <xs:group name="StandardObjectProperties">
/// Vector of gml__MetaDataPropertyType* element refs of length 0..unbounded.
    std::vector<gml__MetaDataPropertyType*> metaDataProperty               0;
/// <PRE><BLOCKQUOTE>
///   The value of this property is a text description of the object. gml:description uses gml:StringOrRefType as its content model, so it may contain a simple text string content, or carry a reference to an external description. The use of gml:description to reference an external description has been deprecated and replaced by the gml:descriptionReference property.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":description.
    gml__StringOrRefType*                description                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The value of this property is a remote text description of the object. The xlink:href attribute of the gml:descriptionReference property references the external description.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":descriptionReference.
    gml__ReferenceType*                  descriptionReference           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Often, a special identifier is assigned to an object by the maintaining authority with the intention that it is used in references to the object For such cases, the codeSpace shall be provided. That identifier is usually unique either globally or within an application domain. gml:identifier is a pre-defined property for such identifiers.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":identifier.
    gml__CodeWithAuthorityType*          identifier                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The gml:name property provides a label or identifier for the object, commonly a descriptive name. An object may have several names, typically assigned by different authorities. gml:name uses the gml:CodeType content model. The authority for a name is indicated by the value of its (optional) codeSpace attribute. The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace. In common usage there will be one name per authority, so a processing application may select the name from its preferred codeSpace.
/// </BLOCKQUOTE></PRE>
/// Vector of gml__CodeType* element refs of length 0..unbounded.
    std::vector<gml__CodeType*         > name                           0;
//  END OF GROUP
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":id.
/// <PRE><BLOCKQUOTE>
///   The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.
/// </BLOCKQUOTE></PRE>
   @xsd__ID*                             gml__id                        0;	///< Optional attribute.
    END OF INHERITED FROM gml__AbstractGMLType */
/// <PRE><BLOCKQUOTE>
///   This property describes the minimum bounding box or rectangle that encloses the entire feature.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":boundedBy.
    gml__BoundingShapeType*              boundedBy                      0;	///< Optional element.
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="location" minOccurs="0"> with global elements <priorityLocation>
   $int                                  __unionlocation                0;	///< Union _gml__union_AbstractFeatureType selector: set to SOAP_UNION__gml__union_AbstractFeatureType_<fieldname> or 0 to omit
/// Union for substitutionGroup gml__location.
    union _gml__union_AbstractFeatureType
    {
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":location.
    gml__LocationPropertyType*           location                       0;	///< Optional element.
/// Element "http://www.opengis.net/gml/3.2":priorityLocation.
    gml__PriorityLocationPropertyType*   priorityLocation               nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_AbstractFeatureType     ;
//  END OF SUBSTITUTIONS
};

/// @brief "http://www.opengis.net/gml/3.2":EnvelopeWithTimePeriodType is a complexType with complexContent extension of XSD type "http://www.opengis.net/gml/3.2":EnvelopeType.
///
/// class gml__EnvelopeWithTimePeriodType operations:
/// - gml__EnvelopeWithTimePeriodType* soap_new_gml__EnvelopeWithTimePeriodType(soap*) allocate and default initialize
/// - gml__EnvelopeWithTimePeriodType* soap_new_gml__EnvelopeWithTimePeriodType(soap*, int num) allocate array and default initialize values
/// - gml__EnvelopeWithTimePeriodType* soap_new_req_gml__EnvelopeWithTimePeriodType(soap*, ...) allocate, set required members
/// - gml__EnvelopeWithTimePeriodType* soap_new_set_gml__EnvelopeWithTimePeriodType(soap*, ...) allocate, set all public members
/// - gml__EnvelopeWithTimePeriodType::soap_default(soap*) default initialize members
/// - int soap_read_gml__EnvelopeWithTimePeriodType(soap*, gml__EnvelopeWithTimePeriodType*) deserialize from a stream
/// - int soap_write_gml__EnvelopeWithTimePeriodType(soap*, gml__EnvelopeWithTimePeriodType*) serialize to a stream
/// - gml__EnvelopeWithTimePeriodType* gml__EnvelopeWithTimePeriodType::soap_dup(soap*) returns deep copy of gml__EnvelopeWithTimePeriodType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__EnvelopeWithTimePeriodType::soap_del() deep deletes gml__EnvelopeWithTimePeriodType data members, use only after gml__EnvelopeWithTimePeriodType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__EnvelopeWithTimePeriodType : public gml__EnvelopeType
{ public:
/*  INHERITED FROM gml__EnvelopeType:
//  BEGIN CHOICE <xs:choice>
/// @note <xs:choice> with embedded <xs:sequence> or <xs:group> prevents the use of a union for <xs:choice>. Instead of being members of a union, the following members are declared optional. Only one member should be non-NULL by choice.
//  BEGIN SEQUENCE <xs:sequence>
/// Element "lowerCorner" of XSD type "http://www.opengis.net/gml/3.2":DirectPositionType.
    gml__DirectPositionType*             lowerCorner                    nullptr;	///< Required nillable (xsi:nil when NULL) element.
/// Element "upperCorner" of XSD type "http://www.opengis.net/gml/3.2":DirectPositionType.
    gml__DirectPositionType*             upperCorner                    nullptr;	///< Required nillable (xsi:nil when NULL) element.
//  END OF SEQUENCE
/// Vector of gml__DirectPositionType* element refs of length 2..2.
    std::vector<gml__DirectPositionType*> pos                           :2;
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":coordinates.
    gml__CoordinatesType*                coordinates                    nullptr;	///< Required nillable (xsi:nil when NULL) element.
//  END OF CHOICE
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":SRSReferenceGroup">.
/// Attribute "srsName" of XSD type xs:anyURI.
   @xsd__anyURI*                         srsName                        0;	///< Optional attribute.
/// Attribute "srsDimension" of XSD type xs:positiveInteger.
   @xsd__positiveInteger*                srsDimension                   0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":SRSInformationGroup">.
/// Attribute "axisLabels" of XSD type "http://www.opengis.net/gml/3.2":NCNameList.
   @gml__NCNameList*                     axisLabels                     0;	///< Optional attribute.
/// Attribute "uomLabels" of XSD type "http://www.opengis.net/gml/3.2":NCNameList.
   @gml__NCNameList*                     uomLabels                      0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
    END OF INHERITED FROM gml__EnvelopeType */
/// Element "beginPosition" of XSD type "http://www.opengis.net/gml/3.2":TimePositionType.
    gml__TimePositionType*               beginPosition                  1;	///< Required element.
/// Element "endPosition" of XSD type "http://www.opengis.net/gml/3.2":TimePositionType.
    gml__TimePositionType*               endPosition                    1;	///< Required element.
/// Attribute "frame" of XSD type xs:anyURI.
   @xsd__anyURI                          frame                          0;	///< Default attribute value="#ISO-8601".
};

/// @brief "http://www.opengis.net/gml/3.2":AbstractTimeObjectType is an abstract complexType with complexContent extension of XSD type "http://www.opengis.net/gml/3.2":AbstractGMLType.
///
/// class gml__AbstractTimeObjectType operations:
/// - gml__AbstractTimeObjectType* soap_new_gml__AbstractTimeObjectType(soap*) allocate and default initialize
/// - gml__AbstractTimeObjectType* soap_new_gml__AbstractTimeObjectType(soap*, int num) allocate array and default initialize values
/// - gml__AbstractTimeObjectType* soap_new_req_gml__AbstractTimeObjectType(soap*, ...) allocate, set required members
/// - gml__AbstractTimeObjectType* soap_new_set_gml__AbstractTimeObjectType(soap*, ...) allocate, set all public members
/// - gml__AbstractTimeObjectType::soap_default(soap*) default initialize members
/// - int soap_read_gml__AbstractTimeObjectType(soap*, gml__AbstractTimeObjectType*) deserialize from a stream
/// - int soap_write_gml__AbstractTimeObjectType(soap*, gml__AbstractTimeObjectType*) serialize to a stream
/// - gml__AbstractTimeObjectType* gml__AbstractTimeObjectType::soap_dup(soap*) returns deep copy of gml__AbstractTimeObjectType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__AbstractTimeObjectType::soap_del() deep deletes gml__AbstractTimeObjectType data members, use only after gml__AbstractTimeObjectType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__AbstractTimeObjectType : public gml__AbstractGMLType
{ public:
/*  INHERITED FROM gml__AbstractGMLType:
//  BEGIN GROUP <xs:group name="StandardObjectProperties">
/// Vector of gml__MetaDataPropertyType* element refs of length 0..unbounded.
    std::vector<gml__MetaDataPropertyType*> metaDataProperty               0;
/// <PRE><BLOCKQUOTE>
///   The value of this property is a text description of the object. gml:description uses gml:StringOrRefType as its content model, so it may contain a simple text string content, or carry a reference to an external description. The use of gml:description to reference an external description has been deprecated and replaced by the gml:descriptionReference property.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":description.
    gml__StringOrRefType*                description                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The value of this property is a remote text description of the object. The xlink:href attribute of the gml:descriptionReference property references the external description.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":descriptionReference.
    gml__ReferenceType*                  descriptionReference           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Often, a special identifier is assigned to an object by the maintaining authority with the intention that it is used in references to the object For such cases, the codeSpace shall be provided. That identifier is usually unique either globally or within an application domain. gml:identifier is a pre-defined property for such identifiers.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":identifier.
    gml__CodeWithAuthorityType*          identifier                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The gml:name property provides a label or identifier for the object, commonly a descriptive name. An object may have several names, typically assigned by different authorities. gml:name uses the gml:CodeType content model. The authority for a name is indicated by the value of its (optional) codeSpace attribute. The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace. In common usage there will be one name per authority, so a processing application may select the name from its preferred codeSpace.
/// </BLOCKQUOTE></PRE>
/// Vector of gml__CodeType* element refs of length 0..unbounded.
    std::vector<gml__CodeType*         > name                           0;
//  END OF GROUP
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":id.
/// <PRE><BLOCKQUOTE>
///   The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.
/// </BLOCKQUOTE></PRE>
   @xsd__ID*                             gml__id                        0;	///< Optional attribute.
    END OF INHERITED FROM gml__AbstractGMLType */
};

/// @brief "http://www.opengis.net/gml/3.2":RelatedTimeType is a complexType with complexContent extension of XSD type "http://www.opengis.net/gml/3.2":TimePrimitivePropertyType.
///
/// <PRE><BLOCKQUOTE>
///   gml:RelatedTimeType provides a content model for indicating the relative position of an arbitrary member of the substitution group whose head is gml:AbstractTimePrimitive. It extends the generic gml:TimePrimitivePropertyType with an XML attribute relativePosition, whose value is selected from the set of 13 temporal relationships identified by Allen (1983)
/// </BLOCKQUOTE></PRE>
/// class gml__RelatedTimeType operations:
/// - gml__RelatedTimeType* soap_new_gml__RelatedTimeType(soap*) allocate and default initialize
/// - gml__RelatedTimeType* soap_new_gml__RelatedTimeType(soap*, int num) allocate array and default initialize values
/// - gml__RelatedTimeType* soap_new_req_gml__RelatedTimeType(soap*, ...) allocate, set required members
/// - gml__RelatedTimeType* soap_new_set_gml__RelatedTimeType(soap*, ...) allocate, set all public members
/// - gml__RelatedTimeType::soap_default(soap*) default initialize members
/// - int soap_read_gml__RelatedTimeType(soap*, gml__RelatedTimeType*) deserialize from a stream
/// - int soap_write_gml__RelatedTimeType(soap*, gml__RelatedTimeType*) serialize to a stream
/// - gml__RelatedTimeType* gml__RelatedTimeType::soap_dup(soap*) returns deep copy of gml__RelatedTimeType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__RelatedTimeType::soap_del() deep deletes gml__RelatedTimeType data members, use only after gml__RelatedTimeType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__RelatedTimeType : public gml__TimePrimitivePropertyType
{ public:
/*  INHERITED FROM gml__TimePrimitivePropertyType:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gml__RelatedTimeType_sequence
    {
/// <PRE><BLOCKQUOTE>
///   gml:AbstractTimePrimitive acts as the head of a substitution group for geometric and topological temporal primitives.
/// </BLOCKQUOTE></PRE>
/// Reference "http://www.opengis.net/gml/3.2":AbstractTimePrimitive to abstract element.
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractTimePrimitive"> with global elements
   $int                                  __unionAbstractTimePrimitive  ;	///< Union _gml__union_RelatedTimeType selector: set to SOAP_UNION__gml__union_RelatedTimeType_<fieldname>
/// Union for substitutionGroup gml__AbstractTimePrimitive.
    union _gml__union_RelatedTimeType
    {
    }                                    union_RelatedTimeType         ;
//  END OF SUBSTITUTIONS
    }                                   *__RelatedTimeType_sequence     0;
//  END OF SEQUENCE
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":AssociationAttributeGroup">.
/// Attribute "nilReason" of XSD type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         gml__remoteSchema              0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":OwnershipAttributeGroup">.
/// Attribute "owns" of XSD type xs:boolean.
   @bool                                 owns                           0 = false;	///< Default attribute value="false".
//  END OF ATTRIBUTEGROUP
    END OF INHERITED FROM gml__TimePrimitivePropertyType */
@    enum _gml__RelatedTimeType_relativePosition
    {
	_gml__RelatedTimeType_relativePosition__Before,	///< xs:string value="Before"
	_gml__RelatedTimeType_relativePosition__After,	///< xs:string value="After"
	_gml__RelatedTimeType_relativePosition__Begins,	///< xs:string value="Begins"
	_gml__RelatedTimeType_relativePosition__Ends,	///< xs:string value="Ends"
	_gml__RelatedTimeType_relativePosition__During,	///< xs:string value="During"
	_gml__RelatedTimeType_relativePosition__Equals,	///< xs:string value="Equals"
	_gml__RelatedTimeType_relativePosition__Contains,	///< xs:string value="Contains"
	_gml__RelatedTimeType_relativePosition__Overlaps,	///< xs:string value="Overlaps"
	_gml__RelatedTimeType_relativePosition__Meets,	///< xs:string value="Meets"
	_gml__RelatedTimeType_relativePosition__OverlappedBy,	///< xs:string value="OverlappedBy"
	_gml__RelatedTimeType_relativePosition__MetBy,	///< xs:string value="MetBy"
	_gml__RelatedTimeType_relativePosition__BegunBy,	///< xs:string value="BegunBy"
	_gml__RelatedTimeType_relativePosition__EndedBy,	///< xs:string value="EndedBy"
    }
                                        *relativePosition               0;	///< Optional attribute.
};

/// @brief "http://www.opengis.net/gml/3.2":TimePositionType is a complexType with simpleContent.
///
/// <PRE><BLOCKQUOTE>
///   The method for identifying a temporal position is specific to each temporal reference system. gml:TimePositionType supports the description of temporal position according to the subtypes described in ISO 19108.
///   Values based on calendars and clocks use lexical formats that are based on ISO 8601, as described in XML Schema Part 2:2001. A decimal value may be used with coordinate systems such as GPS time or UNIX time. A URI may be used to provide a reference to some era in an ordinal reference system . In common with many of the components modelled as data types in the ISO 19100 series of International Standards, the corresponding GML component has simple content. However, the content model gml:TimePositionType is defined in several steps.
///   Three XML attributes appear on gml:TimePositionType:
///   A time value shall be associated with a temporal reference system through the frame attribute that provides a URI reference that identifies a description of the reference system. Following ISO 19108, the Gregorian calendar with UTC is the default reference system, but others may also be used. Components for describing temporal reference systems are described in 14.4, but it is not required that the reference system be described in this, as the reference may refer to anything that may be indentified with a URI. For time values using a calendar containing more than one era, the (optional) calendarEraName attribute provides the name of the calendar era. Inexact temporal positions may be expressed using the optional indeterminatePosition attribute. This takes a value from an enumeration.
/// </BLOCKQUOTE></PRE>
/// class gml__TimePositionType operations:
/// - gml__TimePositionType* soap_new_gml__TimePositionType(soap*) allocate and default initialize
/// - gml__TimePositionType* soap_new_gml__TimePositionType(soap*, int num) allocate array and default initialize values
/// - gml__TimePositionType* soap_new_req_gml__TimePositionType(soap*, ...) allocate, set required members
/// - gml__TimePositionType* soap_new_set_gml__TimePositionType(soap*, ...) allocate, set all public members
/// - gml__TimePositionType::soap_default(soap*) default initialize members
/// - int soap_read_gml__TimePositionType(soap*, gml__TimePositionType*) deserialize from a stream
/// - int soap_write_gml__TimePositionType(soap*, gml__TimePositionType*) serialize to a stream
/// - gml__TimePositionType* gml__TimePositionType::soap_dup(soap*) returns deep copy of gml__TimePositionType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__TimePositionType::soap_del() deep deletes gml__TimePositionType data members, use only after gml__TimePositionType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__TimePositionType : public xsd__anyType
{ public:
/// __item wraps ""http://www.opengis.net/gml/3.2":TimePositionUnion" simpleContent.
    gml__TimePositionUnion               __item                        ;
/// Attribute "frame" of XSD type xs:anyURI.
   @xsd__anyURI                          frame                          0;	///< Default attribute value="#ISO-8601".
/// Attribute "calendarEraName" of XSD type xs:string.
   @std::string*                         calendarEraName                0;	///< Optional attribute.
/// Attribute "indeterminatePosition" of XSD type "http://www.opengis.net/gml/3.2":TimeIndeterminateValueType.
   @enum gml__TimeIndeterminateValueType*  indeterminatePosition          0;	///< Optional attribute.
};

/// @brief "http://www.opengis.net/gml/3.2":TimeIntervalLengthType is a complexType with simpleContent.
///
/// class gml__TimeIntervalLengthType operations:
/// - gml__TimeIntervalLengthType* soap_new_gml__TimeIntervalLengthType(soap*) allocate and default initialize
/// - gml__TimeIntervalLengthType* soap_new_gml__TimeIntervalLengthType(soap*, int num) allocate array and default initialize values
/// - gml__TimeIntervalLengthType* soap_new_req_gml__TimeIntervalLengthType(soap*, ...) allocate, set required members
/// - gml__TimeIntervalLengthType* soap_new_set_gml__TimeIntervalLengthType(soap*, ...) allocate, set all public members
/// - gml__TimeIntervalLengthType::soap_default(soap*) default initialize members
/// - int soap_read_gml__TimeIntervalLengthType(soap*, gml__TimeIntervalLengthType*) deserialize from a stream
/// - int soap_write_gml__TimeIntervalLengthType(soap*, gml__TimeIntervalLengthType*) serialize to a stream
/// - gml__TimeIntervalLengthType* gml__TimeIntervalLengthType::soap_dup(soap*) returns deep copy of gml__TimeIntervalLengthType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__TimeIntervalLengthType::soap_del() deep deletes gml__TimeIntervalLengthType data members, use only after gml__TimeIntervalLengthType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__TimeIntervalLengthType : public xsd__anyType
{ public:
/// __item wraps "xs:decimal" simpleContent.
    xsd__decimal                         __item                        ;
/// Attribute "unit" of XSD type "http://www.opengis.net/gml/3.2":TimeUnitType.
   @gml__TimeUnitType                    unit                           1;	///< Required attribute.
/// Attribute "radix" of XSD type xs:positiveInteger.
   @xsd__positiveInteger*                radix                          0;	///< Optional attribute.
/// Attribute "factor" of XSD type xs:integer.
   @long*                                factor                         0;	///< Optional attribute.
};

/// @brief "http://www.opengis.net/gml/3.2":CompositeValueType is a complexType with complexContent extension of XSD type "http://www.opengis.net/gml/3.2":AbstractGMLType.
///
/// class gml__CompositeValueType operations:
/// - gml__CompositeValueType* soap_new_gml__CompositeValueType(soap*) allocate and default initialize
/// - gml__CompositeValueType* soap_new_gml__CompositeValueType(soap*, int num) allocate array and default initialize values
/// - gml__CompositeValueType* soap_new_req_gml__CompositeValueType(soap*, ...) allocate, set required members
/// - gml__CompositeValueType* soap_new_set_gml__CompositeValueType(soap*, ...) allocate, set all public members
/// - gml__CompositeValueType::soap_default(soap*) default initialize members
/// - int soap_read_gml__CompositeValueType(soap*, gml__CompositeValueType*) deserialize from a stream
/// - int soap_write_gml__CompositeValueType(soap*, gml__CompositeValueType*) serialize to a stream
/// - gml__CompositeValueType* gml__CompositeValueType::soap_dup(soap*) returns deep copy of gml__CompositeValueType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__CompositeValueType::soap_del() deep deletes gml__CompositeValueType data members, use only after gml__CompositeValueType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__CompositeValueType : public gml__AbstractGMLType
{ public:
/*  INHERITED FROM gml__AbstractGMLType:
//  BEGIN GROUP <xs:group name="StandardObjectProperties">
/// Vector of gml__MetaDataPropertyType* element refs of length 0..unbounded.
    std::vector<gml__MetaDataPropertyType*> metaDataProperty               0;
/// <PRE><BLOCKQUOTE>
///   The value of this property is a text description of the object. gml:description uses gml:StringOrRefType as its content model, so it may contain a simple text string content, or carry a reference to an external description. The use of gml:description to reference an external description has been deprecated and replaced by the gml:descriptionReference property.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":description.
    gml__StringOrRefType*                description                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The value of this property is a remote text description of the object. The xlink:href attribute of the gml:descriptionReference property references the external description.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":descriptionReference.
    gml__ReferenceType*                  descriptionReference           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Often, a special identifier is assigned to an object by the maintaining authority with the intention that it is used in references to the object For such cases, the codeSpace shall be provided. That identifier is usually unique either globally or within an application domain. gml:identifier is a pre-defined property for such identifiers.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":identifier.
    gml__CodeWithAuthorityType*          identifier                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The gml:name property provides a label or identifier for the object, commonly a descriptive name. An object may have several names, typically assigned by different authorities. gml:name uses the gml:CodeType content model. The authority for a name is indicated by the value of its (optional) codeSpace attribute. The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace. In common usage there will be one name per authority, so a processing application may select the name from its preferred codeSpace.
/// </BLOCKQUOTE></PRE>
/// Vector of gml__CodeType* element refs of length 0..unbounded.
    std::vector<gml__CodeType*         > name                           0;
//  END OF GROUP
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":id.
/// <PRE><BLOCKQUOTE>
///   The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.
/// </BLOCKQUOTE></PRE>
   @xsd__ID*                             gml__id                        0;	///< Optional attribute.
    END OF INHERITED FROM gml__AbstractGMLType */
/// <PRE><BLOCKQUOTE>
///   Property that refers to, or contains, a Value.
/// </BLOCKQUOTE></PRE>
/// Vector of gml__ValuePropertyType* element refs of length 0..unbounded.
    std::vector<gml__ValuePropertyType*> valueComponent                 0;
/// <PRE><BLOCKQUOTE>
///   Property that contains Values.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":valueComponents.
    gml__ValueArrayPropertyType*         valueComponents                0;	///< Optional element.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":AggregationAttributeGroup">.
/// Attribute "aggregationType" of XSD type "http://www.opengis.net/gml/3.2":AggregationType.
   @enum gml__AggregationType*           aggregationType                0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.opengis.net/gml/3.2":ParameterValueType is a complexType with complexContent extension of XSD type "http://www.opengis.net/gml/3.2":AbstractGeneralParameterValueType.
///
/// class gml__ParameterValueType operations:
/// - gml__ParameterValueType* soap_new_gml__ParameterValueType(soap*) allocate and default initialize
/// - gml__ParameterValueType* soap_new_gml__ParameterValueType(soap*, int num) allocate array and default initialize values
/// - gml__ParameterValueType* soap_new_req_gml__ParameterValueType(soap*, ...) allocate, set required members
/// - gml__ParameterValueType* soap_new_set_gml__ParameterValueType(soap*, ...) allocate, set all public members
/// - gml__ParameterValueType::soap_default(soap*) default initialize members
/// - int soap_read_gml__ParameterValueType(soap*, gml__ParameterValueType*) deserialize from a stream
/// - int soap_write_gml__ParameterValueType(soap*, gml__ParameterValueType*) serialize to a stream
/// - gml__ParameterValueType* gml__ParameterValueType::soap_dup(soap*) returns deep copy of gml__ParameterValueType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__ParameterValueType::soap_del() deep deletes gml__ParameterValueType data members, use only after gml__ParameterValueType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__ParameterValueType : public gml__AbstractGeneralParameterValueType
{ public:
/*  INHERITED FROM gml__AbstractGeneralParameterValueType:
    END OF INHERITED FROM gml__AbstractGeneralParameterValueType */
//  BEGIN CHOICE <xs:choice>
   $int                                  __union_ParameterValueType    ;	///< Union _gml__union_ParameterValueType selector: set to SOAP_UNION__gml__union_ParameterValueType_<fieldname>
    union _gml__union_ParameterValueType
    {
/// <PRE><BLOCKQUOTE>
///   gml:value is a numeric value of an operation parameter, with its associated unit of measure.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":value.
    gml__MeasureType*                    value                          nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":dmsAngleValue.
    gml__DMSAngleType*                   dmsAngleValue                  nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   gml:stringValue is a character string value of an operation parameter. A string value does not have an associated unit of measure.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":stringValue.
    std::string*                         stringValue                    nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   gml:integerValue is a positive integer value of an operation parameter, usually used for a count. An integer value does not have an associated unit of measure.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":integerValue.
    xsd__positiveInteger*                integerValue                   nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   gml:booleanValue is a boolean value of an operation parameter. A Boolean value does not have an associated unit of measure.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":booleanValue.
    bool                                 booleanValue                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   gml:valueList is an ordered sequence of two or more numeric values of an operation parameter list, where each value has the same associated unit of measure. An element of this type contains a space-separated sequence of double values.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":valueList.
    gml__MeasureListType*                valueList                      nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   gml:integerValueList is an ordered sequence of two or more integer values of an operation parameter list, usually used for counts. These integer values do not have an associated unit of measure. An element of this type contains a space-separated sequence of integer values.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":integerValueList.
    gml__integerList*                    integerValueList               nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   gml:valueFile is a reference to a file or a part of a file containing one or more parameter values, each numeric value with its associated unit of measure. When referencing a part of a file, that file shall contain multiple identified parts, such as an XML encoded document. Furthermore, the referenced file or part of a file may reference another part of the same or different files, as allowed in XML documents.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":valueFile.
    xsd__anyURI*                         valueFile                      nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_ParameterValueType      ;
//  END OF CHOICE
/// <PRE><BLOCKQUOTE>
///   gml:operationParameter is an association role to the operation parameter of which this is a value.
/// </BLOCKQUOTE></PRE>
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="operationParameter"> with global elements <valueOfParameter>
   $int                                  __unionoperationParameter     ;	///< Union _gml__union_ParameterValueType_ selector: set to SOAP_UNION__gml__union_ParameterValueType__<fieldname>
/// Union for substitutionGroup gml__operationParameter.
    union _gml__union_ParameterValueType_
    {
/// <PRE><BLOCKQUOTE>
///   gml:operationParameter is an association role to the operation parameter of which this is a value.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":operationParameter.
    gml__OperationParameterPropertyType*  operationParameter             nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.opengis.net/gml/3.2":valueOfParameter.
    gml__OperationParameterPropertyType*  valueOfParameter               nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_ParameterValueType_     ;
//  END OF SUBSTITUTIONS
};

/// @brief "http://www.opengis.net/gml/3.2":ParameterValueGroupType is a complexType with complexContent extension of XSD type "http://www.opengis.net/gml/3.2":AbstractGeneralParameterValueType.
///
/// class gml__ParameterValueGroupType operations:
/// - gml__ParameterValueGroupType* soap_new_gml__ParameterValueGroupType(soap*) allocate and default initialize
/// - gml__ParameterValueGroupType* soap_new_gml__ParameterValueGroupType(soap*, int num) allocate array and default initialize values
/// - gml__ParameterValueGroupType* soap_new_req_gml__ParameterValueGroupType(soap*, ...) allocate, set required members
/// - gml__ParameterValueGroupType* soap_new_set_gml__ParameterValueGroupType(soap*, ...) allocate, set all public members
/// - gml__ParameterValueGroupType::soap_default(soap*) default initialize members
/// - int soap_read_gml__ParameterValueGroupType(soap*, gml__ParameterValueGroupType*) deserialize from a stream
/// - int soap_write_gml__ParameterValueGroupType(soap*, gml__ParameterValueGroupType*) serialize to a stream
/// - gml__ParameterValueGroupType* gml__ParameterValueGroupType::soap_dup(soap*) returns deep copy of gml__ParameterValueGroupType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__ParameterValueGroupType::soap_del() deep deletes gml__ParameterValueGroupType data members, use only after gml__ParameterValueGroupType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__ParameterValueGroupType : public gml__AbstractGeneralParameterValueType
{ public:
/*  INHERITED FROM gml__AbstractGeneralParameterValueType:
    END OF INHERITED FROM gml__AbstractGeneralParameterValueType */
/// <PRE><BLOCKQUOTE>
///   gml:parameterValue is a composition association to a parameter value or group of parameter values used by a coordinate operation.
/// </BLOCKQUOTE></PRE>
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="parameterValue" minOccurs="2" maxOccurs="unbounded"> with global elements <usesValue> <includesValue>
   $int                                  __sizeparameterValue           2;
    class __gml__union_ParameterValueGroupType
    {
   $int                                  __unionparameterValue          2;	///< Union _gml__union_ParameterValueGroupType selector: set to SOAP_UNION__gml__union_ParameterValueGroupType_<fieldname>
/// Union for substitutionGroup gml__parameterValue.
    union _gml__union_ParameterValueGroupType
    {
/// <PRE><BLOCKQUOTE>
///   gml:parameterValue is a composition association to a parameter value or group of parameter values used by a coordinate operation.
/// </BLOCKQUOTE></PRE>
/// Vector of gml__AbstractGeneralParameterValuePropertyType* element refs of length 2..unbounded.
    std::vector<gml__AbstractGeneralParameterValuePropertyType*> *parameterValue                 2;
/// Element "http://www.opengis.net/gml/3.2":usesValue.
    gml__AbstractGeneralParameterValuePropertyType*  usesValue                      nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.opengis.net/gml/3.2":includesValue.
    gml__AbstractGeneralParameterValuePropertyType*  includesValue                  nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_ParameterValueGroupType ;
    }                                   *__union_ParameterValueGroupType;
//  END OF SUBSTITUTIONS
/// <PRE><BLOCKQUOTE>
///   gml:group is an association role to the operation parameter group for which this element provides parameter values.
/// </BLOCKQUOTE></PRE>
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="group"> with global elements <valuesOfGroup>
   $int                                  __uniongroup                  ;	///< Union _gml__union_ParameterValueGroupType_ selector: set to SOAP_UNION__gml__union_ParameterValueGroupType__<fieldname>
/// Union for substitutionGroup gml__group.
    union _gml__union_ParameterValueGroupType_
    {
/// <PRE><BLOCKQUOTE>
///   gml:group is an association role to the operation parameter group for which this element provides parameter values.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":group.
    gml__OperationParameterGroupPropertyType*  group                          nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.opengis.net/gml/3.2":valuesOfGroup.
    gml__OperationParameterGroupPropertyType*  valuesOfGroup                  nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_ParameterValueGroupType_;
//  END OF SUBSTITUTIONS
};

/// @brief "http://www.opengis.net/gml/3.2":StringOrRefType is a complexType with simpleContent.
///
/// class gml__StringOrRefType operations:
/// - gml__StringOrRefType* soap_new_gml__StringOrRefType(soap*) allocate and default initialize
/// - gml__StringOrRefType* soap_new_gml__StringOrRefType(soap*, int num) allocate array and default initialize values
/// - gml__StringOrRefType* soap_new_req_gml__StringOrRefType(soap*, ...) allocate, set required members
/// - gml__StringOrRefType* soap_new_set_gml__StringOrRefType(soap*, ...) allocate, set all public members
/// - gml__StringOrRefType::soap_default(soap*) default initialize members
/// - int soap_read_gml__StringOrRefType(soap*, gml__StringOrRefType*) deserialize from a stream
/// - int soap_write_gml__StringOrRefType(soap*, gml__StringOrRefType*) serialize to a stream
/// - gml__StringOrRefType* gml__StringOrRefType::soap_dup(soap*) returns deep copy of gml__StringOrRefType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__StringOrRefType::soap_del() deep deletes gml__StringOrRefType data members, use only after gml__StringOrRefType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__StringOrRefType : public xsd__anyType
{ public:
/// __item wraps "xs:string" simpleContent.
    std::string                          __item                        ;
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":AssociationAttributeGroup">.
/// Attribute "nilReason" of XSD type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         gml__remoteSchema              0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.opengis.net/gml/3.2":BagType is a complexType with complexContent extension of XSD type "http://www.opengis.net/gml/3.2":AbstractGMLType.
///
/// class gml__BagType operations:
/// - gml__BagType* soap_new_gml__BagType(soap*) allocate and default initialize
/// - gml__BagType* soap_new_gml__BagType(soap*, int num) allocate array and default initialize values
/// - gml__BagType* soap_new_req_gml__BagType(soap*, ...) allocate, set required members
/// - gml__BagType* soap_new_set_gml__BagType(soap*, ...) allocate, set all public members
/// - gml__BagType::soap_default(soap*) default initialize members
/// - int soap_read_gml__BagType(soap*, gml__BagType*) deserialize from a stream
/// - int soap_write_gml__BagType(soap*, gml__BagType*) serialize to a stream
/// - gml__BagType* gml__BagType::soap_dup(soap*) returns deep copy of gml__BagType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__BagType::soap_del() deep deletes gml__BagType data members, use only after gml__BagType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__BagType : public gml__AbstractGMLType
{ public:
/*  INHERITED FROM gml__AbstractGMLType:
//  BEGIN GROUP <xs:group name="StandardObjectProperties">
/// Vector of gml__MetaDataPropertyType* element refs of length 0..unbounded.
    std::vector<gml__MetaDataPropertyType*> metaDataProperty               0;
/// <PRE><BLOCKQUOTE>
///   The value of this property is a text description of the object. gml:description uses gml:StringOrRefType as its content model, so it may contain a simple text string content, or carry a reference to an external description. The use of gml:description to reference an external description has been deprecated and replaced by the gml:descriptionReference property.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":description.
    gml__StringOrRefType*                description                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The value of this property is a remote text description of the object. The xlink:href attribute of the gml:descriptionReference property references the external description.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":descriptionReference.
    gml__ReferenceType*                  descriptionReference           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Often, a special identifier is assigned to an object by the maintaining authority with the intention that it is used in references to the object For such cases, the codeSpace shall be provided. That identifier is usually unique either globally or within an application domain. gml:identifier is a pre-defined property for such identifiers.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":identifier.
    gml__CodeWithAuthorityType*          identifier                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The gml:name property provides a label or identifier for the object, commonly a descriptive name. An object may have several names, typically assigned by different authorities. gml:name uses the gml:CodeType content model. The authority for a name is indicated by the value of its (optional) codeSpace attribute. The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace. In common usage there will be one name per authority, so a processing application may select the name from its preferred codeSpace.
/// </BLOCKQUOTE></PRE>
/// Vector of gml__CodeType* element refs of length 0..unbounded.
    std::vector<gml__CodeType*         > name                           0;
//  END OF GROUP
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":id.
/// <PRE><BLOCKQUOTE>
///   The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.
/// </BLOCKQUOTE></PRE>
   @xsd__ID*                             gml__id                        0;	///< Optional attribute.
    END OF INHERITED FROM gml__AbstractGMLType */
/// Vector of gml__AssociationRoleType* element refs of length 0..unbounded.
    std::vector<gml__AssociationRoleType*> member                         0;
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":members.
    gml__ArrayAssociationType*           members                        0;	///< Optional element.
};

/// @brief "http://www.opengis.net/gml/3.2":ArrayType is a complexType with complexContent extension of XSD type "http://www.opengis.net/gml/3.2":AbstractGMLType.
///
/// class gml__ArrayType operations:
/// - gml__ArrayType* soap_new_gml__ArrayType(soap*) allocate and default initialize
/// - gml__ArrayType* soap_new_gml__ArrayType(soap*, int num) allocate array and default initialize values
/// - gml__ArrayType* soap_new_req_gml__ArrayType(soap*, ...) allocate, set required members
/// - gml__ArrayType* soap_new_set_gml__ArrayType(soap*, ...) allocate, set all public members
/// - gml__ArrayType::soap_default(soap*) default initialize members
/// - int soap_read_gml__ArrayType(soap*, gml__ArrayType*) deserialize from a stream
/// - int soap_write_gml__ArrayType(soap*, gml__ArrayType*) serialize to a stream
/// - gml__ArrayType* gml__ArrayType::soap_dup(soap*) returns deep copy of gml__ArrayType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__ArrayType::soap_del() deep deletes gml__ArrayType data members, use only after gml__ArrayType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__ArrayType : public gml__AbstractGMLType
{ public:
/*  INHERITED FROM gml__AbstractGMLType:
//  BEGIN GROUP <xs:group name="StandardObjectProperties">
/// Vector of gml__MetaDataPropertyType* element refs of length 0..unbounded.
    std::vector<gml__MetaDataPropertyType*> metaDataProperty               0;
/// <PRE><BLOCKQUOTE>
///   The value of this property is a text description of the object. gml:description uses gml:StringOrRefType as its content model, so it may contain a simple text string content, or carry a reference to an external description. The use of gml:description to reference an external description has been deprecated and replaced by the gml:descriptionReference property.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":description.
    gml__StringOrRefType*                description                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The value of this property is a remote text description of the object. The xlink:href attribute of the gml:descriptionReference property references the external description.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":descriptionReference.
    gml__ReferenceType*                  descriptionReference           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Often, a special identifier is assigned to an object by the maintaining authority with the intention that it is used in references to the object For such cases, the codeSpace shall be provided. That identifier is usually unique either globally or within an application domain. gml:identifier is a pre-defined property for such identifiers.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":identifier.
    gml__CodeWithAuthorityType*          identifier                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The gml:name property provides a label or identifier for the object, commonly a descriptive name. An object may have several names, typically assigned by different authorities. gml:name uses the gml:CodeType content model. The authority for a name is indicated by the value of its (optional) codeSpace attribute. The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace. In common usage there will be one name per authority, so a processing application may select the name from its preferred codeSpace.
/// </BLOCKQUOTE></PRE>
/// Vector of gml__CodeType* element refs of length 0..unbounded.
    std::vector<gml__CodeType*         > name                           0;
//  END OF GROUP
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":id.
/// <PRE><BLOCKQUOTE>
///   The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.
/// </BLOCKQUOTE></PRE>
   @xsd__ID*                             gml__id                        0;	///< Optional attribute.
    END OF INHERITED FROM gml__AbstractGMLType */
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":members.
    gml__ArrayAssociationType*           members                        0;	///< Optional element.
};

/// @brief "http://www.opengis.net/gml/3.2":GenericMetaDataType is a complexType with complexContent extension of XSD type "http://www.opengis.net/gml/3.2":AbstractMetaDataType.
///
/// class gml__GenericMetaDataType operations:
/// - gml__GenericMetaDataType* soap_new_gml__GenericMetaDataType(soap*) allocate and default initialize
/// - gml__GenericMetaDataType* soap_new_gml__GenericMetaDataType(soap*, int num) allocate array and default initialize values
/// - gml__GenericMetaDataType* soap_new_req_gml__GenericMetaDataType(soap*, ...) allocate, set required members
/// - gml__GenericMetaDataType* soap_new_set_gml__GenericMetaDataType(soap*, ...) allocate, set all public members
/// - gml__GenericMetaDataType::soap_default(soap*) default initialize members
/// - int soap_read_gml__GenericMetaDataType(soap*, gml__GenericMetaDataType*) deserialize from a stream
/// - int soap_write_gml__GenericMetaDataType(soap*, gml__GenericMetaDataType*) serialize to a stream
/// - gml__GenericMetaDataType* gml__GenericMetaDataType::soap_dup(soap*) returns deep copy of gml__GenericMetaDataType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__GenericMetaDataType::soap_del() deep deletes gml__GenericMetaDataType data members, use only after gml__GenericMetaDataType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__GenericMetaDataType : public gml__AbstractMetaDataType
{ public:
/*  INHERITED FROM gml__AbstractMetaDataType:
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":id.
/// <PRE><BLOCKQUOTE>
///   The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.
/// </BLOCKQUOTE></PRE>
   @xsd__ID*                             gml__id                        0;	///< Optional attribute.
    END OF INHERITED FROM gml__AbstractMetaDataType */
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// @todo This mixed content complexType is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __mixed                       0;	///< Catch mixed content in XML string.
};

/// @brief "http://www.opengis.net/gml/3.2":PriorityLocationPropertyType is a complexType with complexContent extension of XSD type "http://www.opengis.net/gml/3.2":LocationPropertyType.
///
/// class gml__PriorityLocationPropertyType operations:
/// - gml__PriorityLocationPropertyType* soap_new_gml__PriorityLocationPropertyType(soap*) allocate and default initialize
/// - gml__PriorityLocationPropertyType* soap_new_gml__PriorityLocationPropertyType(soap*, int num) allocate array and default initialize values
/// - gml__PriorityLocationPropertyType* soap_new_req_gml__PriorityLocationPropertyType(soap*, ...) allocate, set required members
/// - gml__PriorityLocationPropertyType* soap_new_set_gml__PriorityLocationPropertyType(soap*, ...) allocate, set all public members
/// - gml__PriorityLocationPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gml__PriorityLocationPropertyType(soap*, gml__PriorityLocationPropertyType*) deserialize from a stream
/// - int soap_write_gml__PriorityLocationPropertyType(soap*, gml__PriorityLocationPropertyType*) serialize to a stream
/// - gml__PriorityLocationPropertyType* gml__PriorityLocationPropertyType::soap_dup(soap*) returns deep copy of gml__PriorityLocationPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__PriorityLocationPropertyType::soap_del() deep deletes gml__PriorityLocationPropertyType data members, use only after gml__PriorityLocationPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__PriorityLocationPropertyType : public gml__LocationPropertyType
{ public:
/*  INHERITED FROM gml__LocationPropertyType:
//  BEGIN CHOICE <xs:choice>
   $int                                  __union_PriorityLocationPropertyType;	///< Union _gml__union_PriorityLocationPropertyType selector: set to SOAP_UNION__gml__union_PriorityLocationPropertyType_<fieldname>
    union _gml__union_PriorityLocationPropertyType
    {
/// <PRE><BLOCKQUOTE>
///   The AbstractGeometry element is the abstract head of the substitution group for all geometry elements of GML. This includes pre-defined and user-defined geometry elements. Any geometry element shall be a direct or indirect extension/restriction of AbstractGeometryType and shall be directly or indirectly in the substitution group of AbstractGeometry.
/// </BLOCKQUOTE></PRE>
/// Reference "http://www.opengis.net/gml/3.2":AbstractGeometry to abstract element.
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="AbstractGeometry"> with global elements <GeometricComplex>
/// Element "http://www.opengis.net/gml/3.2":GeometricComplex.
    gml__GeometricComplexType*           GeometricComplex               nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
//  END OF SUBSTITUTIONS
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":LocationKeyWord.
    gml__CodeType*                       LocationKeyWord                nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":LocationString.
    gml__StringOrRefType*                LocationString                 nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":Null.
    gml__NilReasonType*                  Null                           nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_PriorityLocationPropertyType;
//  END OF CHOICE
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":AssociationAttributeGroup">.
/// Attribute "nilReason" of XSD type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         gml__remoteSchema              0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
    END OF INHERITED FROM gml__LocationPropertyType */
/// Attribute "priority" of XSD type xs:string.
   @std::string*                         priority                       0;	///< Optional attribute.
};

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":Boolean
/// @brief "http://www.opengis.net/gml/3.2":Boolean is a complexType with simpleContent.
///
/// class _gml__Boolean operations:
/// - _gml__Boolean* soap_new__gml__Boolean(soap*) allocate and default initialize
/// - _gml__Boolean* soap_new__gml__Boolean(soap*, int num) allocate array and default initialize values
/// - _gml__Boolean* soap_new_req__gml__Boolean(soap*, ...) allocate, set required members
/// - _gml__Boolean* soap_new_set__gml__Boolean(soap*, ...) allocate, set all public members
/// - _gml__Boolean::soap_default(soap*) default initialize members
/// - int soap_read__gml__Boolean(soap*, _gml__Boolean*) deserialize from a stream
/// - int soap_write__gml__Boolean(soap*, _gml__Boolean*) serialize to a stream
/// - _gml__Boolean* _gml__Boolean::soap_dup(soap*) returns deep copy of _gml__Boolean, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _gml__Boolean::soap_del() deep deletes _gml__Boolean data members, use only after _gml__Boolean::soap_dup(NULL) (use soapcpp2 -Ed)
class _gml__Boolean
{ public:
/// __item wraps "xs:boolean" simpleContent.
    bool                                 __item                        ;
/// Attribute "nilReason" of XSD type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// A handle to the soap struct context that manages this instance when instantiated by a context or NULL otherwise (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":Count
/// @brief "http://www.opengis.net/gml/3.2":Count is a complexType with simpleContent.
///
/// class _gml__Count operations:
/// - _gml__Count* soap_new__gml__Count(soap*) allocate and default initialize
/// - _gml__Count* soap_new__gml__Count(soap*, int num) allocate array and default initialize values
/// - _gml__Count* soap_new_req__gml__Count(soap*, ...) allocate, set required members
/// - _gml__Count* soap_new_set__gml__Count(soap*, ...) allocate, set all public members
/// - _gml__Count::soap_default(soap*) default initialize members
/// - int soap_read__gml__Count(soap*, _gml__Count*) deserialize from a stream
/// - int soap_write__gml__Count(soap*, _gml__Count*) serialize to a stream
/// - _gml__Count* _gml__Count::soap_dup(soap*) returns deep copy of _gml__Count, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _gml__Count::soap_del() deep deletes _gml__Count data members, use only after _gml__Count::soap_dup(NULL) (use soapcpp2 -Ed)
class _gml__Count
{ public:
/// __item wraps "xs:integer" simpleContent.
    long                                 __item                        ;
/// Attribute "nilReason" of XSD type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
/// A handle to the soap struct context that manages this instance when instantiated by a context or NULL otherwise (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.isotc211.org/2005/gmd":AbstractDS_Aggregate_Type is an abstract complexType with complexContent extension of XSD type "http://www.isotc211.org/2005/gco":AbstractObject_Type.
///
/// <PRE><BLOCKQUOTE>
///   Identifiable collection of datasets
/// </BLOCKQUOTE></PRE>
/// class gmd__AbstractDS_x005fAggregate_x005fType operations:
/// - gmd__AbstractDS_x005fAggregate_x005fType* soap_new_gmd__AbstractDS_x005fAggregate_x005fType(soap*) allocate and default initialize
/// - gmd__AbstractDS_x005fAggregate_x005fType* soap_new_gmd__AbstractDS_x005fAggregate_x005fType(soap*, int num) allocate array and default initialize values
/// - gmd__AbstractDS_x005fAggregate_x005fType* soap_new_req_gmd__AbstractDS_x005fAggregate_x005fType(soap*, ...) allocate, set required members
/// - gmd__AbstractDS_x005fAggregate_x005fType* soap_new_set_gmd__AbstractDS_x005fAggregate_x005fType(soap*, ...) allocate, set all public members
/// - gmd__AbstractDS_x005fAggregate_x005fType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__AbstractDS_x005fAggregate_x005fType(soap*, gmd__AbstractDS_x005fAggregate_x005fType*) deserialize from a stream
/// - int soap_write_gmd__AbstractDS_x005fAggregate_x005fType(soap*, gmd__AbstractDS_x005fAggregate_x005fType*) serialize to a stream
/// - gmd__AbstractDS_x005fAggregate_x005fType* gmd__AbstractDS_x005fAggregate_x005fType::soap_dup(soap*) returns deep copy of gmd__AbstractDS_x005fAggregate_x005fType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__AbstractDS_x005fAggregate_x005fType::soap_del() deep deletes gmd__AbstractDS_x005fAggregate_x005fType data members, use only after gmd__AbstractDS_x005fAggregate_x005fType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__AbstractDS_x005fAggregate_x005fType : public gco__AbstractObject_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectIdentification">.
/// Attribute "id" of XSD type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute "uuid" of XSD type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/// Vector of gmd__DS_x005fDataSet_x005fPropertyType* of length 1..unbounded.
    std::vector<gmd__DS_x005fDataSet_x005fPropertyType*> composedOf                     1;
/// Vector of gmd__MD_x005fMetadata_x005fPropertyType* of length 1..unbounded.
    std::vector<gmd__MD_x005fMetadata_x005fPropertyType*> seriesMetadata                 1;
/// Vector of gmd__DS_x005fAggregate_x005fPropertyType* of length 0..unbounded.
    std::vector<gmd__DS_x005fAggregate_x005fPropertyType*> subset                         0;
/// Vector of gmd__DS_x005fAggregate_x005fPropertyType* of length 0..unbounded.
    std::vector<gmd__DS_x005fAggregate_x005fPropertyType*> superset                       0;
};

/// @brief "http://www.isotc211.org/2005/gmd":DS_DataSet_Type is a complexType with complexContent extension of XSD type "http://www.isotc211.org/2005/gco":AbstractObject_Type.
///
/// <PRE><BLOCKQUOTE>
///   Identifiable collection of data
/// </BLOCKQUOTE></PRE>
/// class gmd__DS_x005fDataSet_x005fType operations:
/// - gmd__DS_x005fDataSet_x005fType* soap_new_gmd__DS_x005fDataSet_x005fType(soap*) allocate and default initialize
/// - gmd__DS_x005fDataSet_x005fType* soap_new_gmd__DS_x005fDataSet_x005fType(soap*, int num) allocate array and default initialize values
/// - gmd__DS_x005fDataSet_x005fType* soap_new_req_gmd__DS_x005fDataSet_x005fType(soap*, ...) allocate, set required members
/// - gmd__DS_x005fDataSet_x005fType* soap_new_set_gmd__DS_x005fDataSet_x005fType(soap*, ...) allocate, set all public members
/// - gmd__DS_x005fDataSet_x005fType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__DS_x005fDataSet_x005fType(soap*, gmd__DS_x005fDataSet_x005fType*) deserialize from a stream
/// - int soap_write_gmd__DS_x005fDataSet_x005fType(soap*, gmd__DS_x005fDataSet_x005fType*) serialize to a stream
/// - gmd__DS_x005fDataSet_x005fType* gmd__DS_x005fDataSet_x005fType::soap_dup(soap*) returns deep copy of gmd__DS_x005fDataSet_x005fType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__DS_x005fDataSet_x005fType::soap_del() deep deletes gmd__DS_x005fDataSet_x005fType data members, use only after gmd__DS_x005fDataSet_x005fType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__DS_x005fDataSet_x005fType : public gco__AbstractObject_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectIdentification">.
/// Attribute "id" of XSD type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute "uuid" of XSD type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/// Vector of gmd__MD_x005fMetadata_x005fPropertyType* of length 1..unbounded.
    std::vector<gmd__MD_x005fMetadata_x005fPropertyType*> has                            1;
/// Vector of gmd__DS_x005fAggregate_x005fPropertyType* of length 0..unbounded.
    std::vector<gmd__DS_x005fAggregate_x005fPropertyType*> partOf                         0;
};

/// @brief "http://www.isotc211.org/2005/gmd":MD_Metadata_Type is a complexType with complexContent extension of XSD type "http://www.isotc211.org/2005/gco":AbstractObject_Type.
///
/// <PRE><BLOCKQUOTE>
///   Information about the metadata
/// </BLOCKQUOTE></PRE>
/// class gmd__MD_x005fMetadata_x005fType operations:
/// - gmd__MD_x005fMetadata_x005fType* soap_new_gmd__MD_x005fMetadata_x005fType(soap*) allocate and default initialize
/// - gmd__MD_x005fMetadata_x005fType* soap_new_gmd__MD_x005fMetadata_x005fType(soap*, int num) allocate array and default initialize values
/// - gmd__MD_x005fMetadata_x005fType* soap_new_req_gmd__MD_x005fMetadata_x005fType(soap*, ...) allocate, set required members
/// - gmd__MD_x005fMetadata_x005fType* soap_new_set_gmd__MD_x005fMetadata_x005fType(soap*, ...) allocate, set all public members
/// - gmd__MD_x005fMetadata_x005fType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__MD_x005fMetadata_x005fType(soap*, gmd__MD_x005fMetadata_x005fType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fMetadata_x005fType(soap*, gmd__MD_x005fMetadata_x005fType*) serialize to a stream
/// - gmd__MD_x005fMetadata_x005fType* gmd__MD_x005fMetadata_x005fType::soap_dup(soap*) returns deep copy of gmd__MD_x005fMetadata_x005fType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__MD_x005fMetadata_x005fType::soap_del() deep deletes gmd__MD_x005fMetadata_x005fType data members, use only after gmd__MD_x005fMetadata_x005fType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__MD_x005fMetadata_x005fType : public gco__AbstractObject_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectIdentification">.
/// Attribute "id" of XSD type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute "uuid" of XSD type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/// Element "fileIdentifier" of XSD type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  fileIdentifier                 0;	///< Optional element.
/// Element "language" of XSD type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  language                       0;	///< Optional element.
/// Element "characterSet" of XSD type "http://www.isotc211.org/2005/gmd":MD_CharacterSetCode_PropertyType.
    gmd__MD_x005fCharacterSetCode_x005fPropertyType*  characterSet                   0;	///< Optional element.
/// Element "parentIdentifier" of XSD type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  parentIdentifier               0;	///< Optional element.
/// Vector of gmd__MD_x005fScopeCode_x005fPropertyType* of length 0..unbounded.
    std::vector<gmd__MD_x005fScopeCode_x005fPropertyType*> hierarchyLevel                 0;
/// Vector of gco__CharacterString_x005fPropertyType* of length 0..unbounded.
    std::vector<gco__CharacterString_x005fPropertyType*> hierarchyLevelName             0;
/// Vector of gmd__CI_x005fResponsibleParty_x005fPropertyType* of length 1..unbounded.
    std::vector<gmd__CI_x005fResponsibleParty_x005fPropertyType*> contact                        1;
/// Element "dateStamp" of XSD type "http://www.isotc211.org/2005/gco":Date_PropertyType.
    gco__Date_x005fPropertyType*         dateStamp                      1;	///< Required element.
/// Element "metadataStandardName" of XSD type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  metadataStandardName           0;	///< Optional element.
/// Element "metadataStandardVersion" of XSD type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  metadataStandardVersion        0;	///< Optional element.
/// Element "dataSetURI" of XSD type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  dataSetURI                     0;	///< Optional element.
/// Vector of gmd__PT_x005fLocale_x005fPropertyType* of length 0..unbounded.
    std::vector<gmd__PT_x005fLocale_x005fPropertyType*> locale                         0;
/// Vector of gmd__MD_x005fSpatialRepresentation_x005fPropertyType* of length 0..unbounded.
    std::vector<gmd__MD_x005fSpatialRepresentation_x005fPropertyType*> spatialRepresentationInfo      0;
/// Vector of gmd__MD_x005fReferenceSystem_x005fPropertyType* of length 0..unbounded.
    std::vector<gmd__MD_x005fReferenceSystem_x005fPropertyType*> referenceSystemInfo            0;
/// Vector of gmd__MD_x005fMetadataExtensionInformation_x005fPropertyType* of length 0..unbounded.
    std::vector<gmd__MD_x005fMetadataExtensionInformation_x005fPropertyType*> metadataExtensionInfo          0;
/// Vector of gmd__MD_x005fIdentification_x005fPropertyType* of length 1..unbounded.
    std::vector<gmd__MD_x005fIdentification_x005fPropertyType*> identificationInfo             1;
/// Vector of gmd__MD_x005fContentInformation_x005fPropertyType* of length 0..unbounded.
    std::vector<gmd__MD_x005fContentInformation_x005fPropertyType*> contentInfo                    0;
/// Element "distributionInfo" of XSD type "http://www.isotc211.org/2005/gmd":MD_Distribution_PropertyType.
    gmd__MD_x005fDistribution_x005fPropertyType*  distributionInfo               0;	///< Optional element.
/// Vector of gmd__DQ_x005fDataQuality_x005fPropertyType* of length 0..unbounded.
    std::vector<gmd__DQ_x005fDataQuality_x005fPropertyType*> dataQualityInfo                0;
/// Vector of gmd__MD_x005fPortrayalCatalogueReference_x005fPropertyType* of length 0..unbounded.
    std::vector<gmd__MD_x005fPortrayalCatalogueReference_x005fPropertyType*> portrayalCatalogueInfo         0;
/// Vector of gmd__MD_x005fConstraints_x005fPropertyType* of length 0..unbounded.
    std::vector<gmd__MD_x005fConstraints_x005fPropertyType*> metadataConstraints            0;
/// Vector of gmd__MD_x005fApplicationSchemaInformation_x005fPropertyType* of length 0..unbounded.
    std::vector<gmd__MD_x005fApplicationSchemaInformation_x005fPropertyType*> applicationSchemaInfo          0;
/// Element "metadataMaintenance" of XSD type "http://www.isotc211.org/2005/gmd":MD_MaintenanceInformation_PropertyType.
    gmd__MD_x005fMaintenanceInformation_x005fPropertyType*  metadataMaintenance            0;	///< Optional element.
/// Vector of gmd__DS_x005fAggregate_x005fPropertyType* of length 0..unbounded.
    std::vector<gmd__DS_x005fAggregate_x005fPropertyType*> series                         0;
/// Vector of gmd__DS_x005fDataSet_x005fPropertyType* of length 0..unbounded.
    std::vector<gmd__DS_x005fDataSet_x005fPropertyType*> describes                      0;
/// Vector of gco__ObjectReference_x005fPropertyType* of length 0..unbounded.
    std::vector<gco__ObjectReference_x005fPropertyType*> propertyType                   0;
/// Vector of gco__ObjectReference_x005fPropertyType* of length 0..unbounded.
    std::vector<gco__ObjectReference_x005fPropertyType*> featureType                    0;
/// Vector of gco__ObjectReference_x005fPropertyType* of length 0..unbounded.
    std::vector<gco__ObjectReference_x005fPropertyType*> featureAttribute               0;
};

/// @brief "http://www.isotc211.org/2005/gmd":AbstractMD_SpatialRepresentation_Type is an abstract complexType with complexContent extension of XSD type "http://www.isotc211.org/2005/gco":AbstractObject_Type.
///
/// <PRE><BLOCKQUOTE>
///   Digital mechanism used to represent spatial information
/// </BLOCKQUOTE></PRE>
/// class gmd__AbstractMD_x005fSpatialRepresentation_x005fType operations:
/// - gmd__AbstractMD_x005fSpatialRepresentation_x005fType* soap_new_gmd__AbstractMD_x005fSpatialRepresentation_x005fType(soap*) allocate and default initialize
/// - gmd__AbstractMD_x005fSpatialRepresentation_x005fType* soap_new_gmd__AbstractMD_x005fSpatialRepresentation_x005fType(soap*, int num) allocate array and default initialize values
/// - gmd__AbstractMD_x005fSpatialRepresentation_x005fType* soap_new_req_gmd__AbstractMD_x005fSpatialRepresentation_x005fType(soap*, ...) allocate, set required members
/// - gmd__AbstractMD_x005fSpatialRepresentation_x005fType* soap_new_set_gmd__AbstractMD_x005fSpatialRepresentation_x005fType(soap*, ...) allocate, set all public members
/// - gmd__AbstractMD_x005fSpatialRepresentation_x005fType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__AbstractMD_x005fSpatialRepresentation_x005fType(soap*, gmd__AbstractMD_x005fSpatialRepresentation_x005fType*) deserialize from a stream
/// - int soap_write_gmd__AbstractMD_x005fSpatialRepresentation_x005fType(soap*, gmd__AbstractMD_x005fSpatialRepresentation_x005fType*) serialize to a stream
/// - gmd__AbstractMD_x005fSpatialRepresentation_x005fType* gmd__AbstractMD_x005fSpatialRepresentation_x005fType::soap_dup(soap*) returns deep copy of gmd__AbstractMD_x005fSpatialRepresentation_x005fType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__AbstractMD_x005fSpatialRepresentation_x005fType::soap_del() deep deletes gmd__AbstractMD_x005fSpatialRepresentation_x005fType data members, use only after gmd__AbstractMD_x005fSpatialRepresentation_x005fType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__AbstractMD_x005fSpatialRepresentation_x005fType : public gco__AbstractObject_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectIdentification">.
/// Attribute "id" of XSD type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute "uuid" of XSD type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
    END OF INHERITED FROM gco__AbstractObject_x005fType */
};

/// @brief "http://www.isotc211.org/2005/gmd":MD_Dimension_Type is a complexType with complexContent extension of XSD type "http://www.isotc211.org/2005/gco":AbstractObject_Type.
///
/// class gmd__MD_x005fDimension_x005fType operations:
/// - gmd__MD_x005fDimension_x005fType* soap_new_gmd__MD_x005fDimension_x005fType(soap*) allocate and default initialize
/// - gmd__MD_x005fDimension_x005fType* soap_new_gmd__MD_x005fDimension_x005fType(soap*, int num) allocate array and default initialize values
/// - gmd__MD_x005fDimension_x005fType* soap_new_req_gmd__MD_x005fDimension_x005fType(soap*, ...) allocate, set required members
/// - gmd__MD_x005fDimension_x005fType* soap_new_set_gmd__MD_x005fDimension_x005fType(soap*, ...) allocate, set all public members
/// - gmd__MD_x005fDimension_x005fType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__MD_x005fDimension_x005fType(soap*, gmd__MD_x005fDimension_x005fType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fDimension_x005fType(soap*, gmd__MD_x005fDimension_x005fType*) serialize to a stream
/// - gmd__MD_x005fDimension_x005fType* gmd__MD_x005fDimension_x005fType::soap_dup(soap*) returns deep copy of gmd__MD_x005fDimension_x005fType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__MD_x005fDimension_x005fType::soap_del() deep deletes gmd__MD_x005fDimension_x005fType data members, use only after gmd__MD_x005fDimension_x005fType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__MD_x005fDimension_x005fType : public gco__AbstractObject_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectIdentification">.
/// Attribute "id" of XSD type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute "uuid" of XSD type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/// Element "dimensionName" of XSD type "http://www.isotc211.org/2005/gmd":MD_DimensionNameTypeCode_PropertyType.
    gmd__MD_x005fDimensionNameTypeCode_x005fPropertyType*  dimensionName                  1;	///< Required element.
/// Element "dimensionSize" of XSD type "http://www.isotc211.org/2005/gco":Integer_PropertyType.
    gco__Integer_x005fPropertyType*      dimensionSize                  1;	///< Required element.
/// Element "resolution" of XSD type "http://www.isotc211.org/2005/gco":Measure_PropertyType.
    gco__Measure_x005fPropertyType*      resolution                     0;	///< Optional element.
};

/// @brief "http://www.isotc211.org/2005/gmd":MD_GeometricObjects_Type is a complexType with complexContent extension of XSD type "http://www.isotc211.org/2005/gco":AbstractObject_Type.
///
/// class gmd__MD_x005fGeometricObjects_x005fType operations:
/// - gmd__MD_x005fGeometricObjects_x005fType* soap_new_gmd__MD_x005fGeometricObjects_x005fType(soap*) allocate and default initialize
/// - gmd__MD_x005fGeometricObjects_x005fType* soap_new_gmd__MD_x005fGeometricObjects_x005fType(soap*, int num) allocate array and default initialize values
/// - gmd__MD_x005fGeometricObjects_x005fType* soap_new_req_gmd__MD_x005fGeometricObjects_x005fType(soap*, ...) allocate, set required members
/// - gmd__MD_x005fGeometricObjects_x005fType* soap_new_set_gmd__MD_x005fGeometricObjects_x005fType(soap*, ...) allocate, set all public members
/// - gmd__MD_x005fGeometricObjects_x005fType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__MD_x005fGeometricObjects_x005fType(soap*, gmd__MD_x005fGeometricObjects_x005fType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fGeometricObjects_x005fType(soap*, gmd__MD_x005fGeometricObjects_x005fType*) serialize to a stream
/// - gmd__MD_x005fGeometricObjects_x005fType* gmd__MD_x005fGeometricObjects_x005fType::soap_dup(soap*) returns deep copy of gmd__MD_x005fGeometricObjects_x005fType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__MD_x005fGeometricObjects_x005fType::soap_del() deep deletes gmd__MD_x005fGeometricObjects_x005fType data members, use only after gmd__MD_x005fGeometricObjects_x005fType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__MD_x005fGeometricObjects_x005fType : public gco__AbstractObject_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectIdentification">.
/// Attribute "id" of XSD type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute "uuid" of XSD type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/// Element "geometricObjectType" of XSD type "http://www.isotc211.org/2005/gmd":MD_GeometricObjectTypeCode_PropertyType.
    gmd__MD_x005fGeometricObjectTypeCode_x005fPropertyType*  geometricObjectType            1;	///< Required element.
/// Element "geometricObjectCount" of XSD type "http://www.isotc211.org/2005/gco":Integer_PropertyType.
    gco__Integer_x005fPropertyType*      geometricObjectCount           0;	///< Optional element.
};

/// @brief "http://www.isotc211.org/2005/gmd":CI_ResponsibleParty_Type is a complexType with complexContent extension of XSD type "http://www.isotc211.org/2005/gco":AbstractObject_Type.
///
/// <PRE><BLOCKQUOTE>
///   Identification of, and means of communication with, person(s) and organisations associated with the dataset
/// </BLOCKQUOTE></PRE>
/// class gmd__CI_x005fResponsibleParty_x005fType operations:
/// - gmd__CI_x005fResponsibleParty_x005fType* soap_new_gmd__CI_x005fResponsibleParty_x005fType(soap*) allocate and default initialize
/// - gmd__CI_x005fResponsibleParty_x005fType* soap_new_gmd__CI_x005fResponsibleParty_x005fType(soap*, int num) allocate array and default initialize values
/// - gmd__CI_x005fResponsibleParty_x005fType* soap_new_req_gmd__CI_x005fResponsibleParty_x005fType(soap*, ...) allocate, set required members
/// - gmd__CI_x005fResponsibleParty_x005fType* soap_new_set_gmd__CI_x005fResponsibleParty_x005fType(soap*, ...) allocate, set all public members
/// - gmd__CI_x005fResponsibleParty_x005fType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__CI_x005fResponsibleParty_x005fType(soap*, gmd__CI_x005fResponsibleParty_x005fType*) deserialize from a stream
/// - int soap_write_gmd__CI_x005fResponsibleParty_x005fType(soap*, gmd__CI_x005fResponsibleParty_x005fType*) serialize to a stream
/// - gmd__CI_x005fResponsibleParty_x005fType* gmd__CI_x005fResponsibleParty_x005fType::soap_dup(soap*) returns deep copy of gmd__CI_x005fResponsibleParty_x005fType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__CI_x005fResponsibleParty_x005fType::soap_del() deep deletes gmd__CI_x005fResponsibleParty_x005fType data members, use only after gmd__CI_x005fResponsibleParty_x005fType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__CI_x005fResponsibleParty_x005fType : public gco__AbstractObject_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectIdentification">.
/// Attribute "id" of XSD type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute "uuid" of XSD type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/// Element "individualName" of XSD type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  individualName                 0;	///< Optional element.
/// Element "organisationName" of XSD type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  organisationName               0;	///< Optional element.
/// Element "positionName" of XSD type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  positionName                   0;	///< Optional element.
/// Element "contactInfo" of XSD type "http://www.isotc211.org/2005/gmd":CI_Contact_PropertyType.
    gmd__CI_x005fContact_x005fPropertyType*  contactInfo                    0;	///< Optional element.
/// Element "role" of XSD type "http://www.isotc211.org/2005/gmd":CI_RoleCode_PropertyType.
    gmd__CI_x005fRoleCode_x005fPropertyType*  role                           1;	///< Required element.
};

/// @brief "http://www.isotc211.org/2005/gmd":CI_Citation_Type is a complexType with complexContent extension of XSD type "http://www.isotc211.org/2005/gco":AbstractObject_Type.
///
/// <PRE><BLOCKQUOTE>
///   Standardized resource reference
/// </BLOCKQUOTE></PRE>
/// class gmd__CI_x005fCitation_x005fType operations:
/// - gmd__CI_x005fCitation_x005fType* soap_new_gmd__CI_x005fCitation_x005fType(soap*) allocate and default initialize
/// - gmd__CI_x005fCitation_x005fType* soap_new_gmd__CI_x005fCitation_x005fType(soap*, int num) allocate array and default initialize values
/// - gmd__CI_x005fCitation_x005fType* soap_new_req_gmd__CI_x005fCitation_x005fType(soap*, ...) allocate, set required members
/// - gmd__CI_x005fCitation_x005fType* soap_new_set_gmd__CI_x005fCitation_x005fType(soap*, ...) allocate, set all public members
/// - gmd__CI_x005fCitation_x005fType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__CI_x005fCitation_x005fType(soap*, gmd__CI_x005fCitation_x005fType*) deserialize from a stream
/// - int soap_write_gmd__CI_x005fCitation_x005fType(soap*, gmd__CI_x005fCitation_x005fType*) serialize to a stream
/// - gmd__CI_x005fCitation_x005fType* gmd__CI_x005fCitation_x005fType::soap_dup(soap*) returns deep copy of gmd__CI_x005fCitation_x005fType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__CI_x005fCitation_x005fType::soap_del() deep deletes gmd__CI_x005fCitation_x005fType data members, use only after gmd__CI_x005fCitation_x005fType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__CI_x005fCitation_x005fType : public gco__AbstractObject_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectIdentification">.
/// Attribute "id" of XSD type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute "uuid" of XSD type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/// Element "title" of XSD type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  title                          1;	///< Required element.
/// Vector of gco__CharacterString_x005fPropertyType* of length 0..unbounded.
    std::vector<gco__CharacterString_x005fPropertyType*> alternateTitle                 0;
/// Vector of gmd__CI_x005fDate_x005fPropertyType* of length 1..unbounded.
    std::vector<gmd__CI_x005fDate_x005fPropertyType*> date                           1;
/// Element "edition" of XSD type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  edition                        0;	///< Optional element.
/// Element "editionDate" of XSD type "http://www.isotc211.org/2005/gco":Date_PropertyType.
    gco__Date_x005fPropertyType*         editionDate                    0;	///< Optional element.
/// Vector of gmd__MD_x005fIdentifier_x005fPropertyType* of length 0..unbounded.
    std::vector<gmd__MD_x005fIdentifier_x005fPropertyType*> identifier                     0;
/// Vector of gmd__CI_x005fResponsibleParty_x005fPropertyType* of length 0..unbounded.
    std::vector<gmd__CI_x005fResponsibleParty_x005fPropertyType*> citedResponsibleParty          0;
/// Vector of gmd__CI_x005fPresentationFormCode_x005fPropertyType* of length 0..unbounded.
    std::vector<gmd__CI_x005fPresentationFormCode_x005fPropertyType*> presentationForm               0;
/// Element "series" of XSD type "http://www.isotc211.org/2005/gmd":CI_Series_PropertyType.
    gmd__CI_x005fSeries_x005fPropertyType*  series                         0;	///< Optional element.
/// Element "otherCitationDetails" of XSD type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  otherCitationDetails           0;	///< Optional element.
/// Element "collectiveTitle" of XSD type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  collectiveTitle                0;	///< Optional element.
/// Element "ISBN" of XSD type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  ISBN                           0;	///< Optional element.
/// Element "ISSN" of XSD type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  ISSN                           0;	///< Optional element.
};

/// @brief "http://www.isotc211.org/2005/gmd":CI_Address_Type is a complexType with complexContent extension of XSD type "http://www.isotc211.org/2005/gco":AbstractObject_Type.
///
/// <PRE><BLOCKQUOTE>
///   Location of the responsible individual or organisation
/// </BLOCKQUOTE></PRE>
/// class gmd__CI_x005fAddress_x005fType operations:
/// - gmd__CI_x005fAddress_x005fType* soap_new_gmd__CI_x005fAddress_x005fType(soap*) allocate and default initialize
/// - gmd__CI_x005fAddress_x005fType* soap_new_gmd__CI_x005fAddress_x005fType(soap*, int num) allocate array and default initialize values
/// - gmd__CI_x005fAddress_x005fType* soap_new_req_gmd__CI_x005fAddress_x005fType(soap*, ...) allocate, set required members
/// - gmd__CI_x005fAddress_x005fType* soap_new_set_gmd__CI_x005fAddress_x005fType(soap*, ...) allocate, set all public members
/// - gmd__CI_x005fAddress_x005fType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__CI_x005fAddress_x005fType(soap*, gmd__CI_x005fAddress_x005fType*) deserialize from a stream
/// - int soap_write_gmd__CI_x005fAddress_x005fType(soap*, gmd__CI_x005fAddress_x005fType*) serialize to a stream
/// - gmd__CI_x005fAddress_x005fType* gmd__CI_x005fAddress_x005fType::soap_dup(soap*) returns deep copy of gmd__CI_x005fAddress_x005fType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__CI_x005fAddress_x005fType::soap_del() deep deletes gmd__CI_x005fAddress_x005fType data members, use only after gmd__CI_x005fAddress_x005fType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__CI_x005fAddress_x005fType : public gco__AbstractObject_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectIdentification">.
/// Attribute "id" of XSD type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute "uuid" of XSD type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/// Vector of gco__CharacterString_x005fPropertyType* of length 0..unbounded.
    std::vector<gco__CharacterString_x005fPropertyType*> deliveryPoint                  0;
/// Element "city" of XSD type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  city                           0;	///< Optional element.
/// Element "administrativeArea" of XSD type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  administrativeArea             0;	///< Optional element.
/// Element "postalCode" of XSD type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  postalCode                     0;	///< Optional element.
/// Element "country" of XSD type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  country                        0;	///< Optional element.
/// Vector of gco__CharacterString_x005fPropertyType* of length 0..unbounded.
    std::vector<gco__CharacterString_x005fPropertyType*> electronicMailAddress          0;
};

/// @brief "http://www.isotc211.org/2005/gmd":CI_OnlineResource_Type is a complexType with complexContent extension of XSD type "http://www.isotc211.org/2005/gco":AbstractObject_Type.
///
/// <PRE><BLOCKQUOTE>
///   Information about online sources from which the dataset, specification, or community profile name and extended metadata elements can be obtained.
/// </BLOCKQUOTE></PRE>
/// class gmd__CI_x005fOnlineResource_x005fType operations:
/// - gmd__CI_x005fOnlineResource_x005fType* soap_new_gmd__CI_x005fOnlineResource_x005fType(soap*) allocate and default initialize
/// - gmd__CI_x005fOnlineResource_x005fType* soap_new_gmd__CI_x005fOnlineResource_x005fType(soap*, int num) allocate array and default initialize values
/// - gmd__CI_x005fOnlineResource_x005fType* soap_new_req_gmd__CI_x005fOnlineResource_x005fType(soap*, ...) allocate, set required members
/// - gmd__CI_x005fOnlineResource_x005fType* soap_new_set_gmd__CI_x005fOnlineResource_x005fType(soap*, ...) allocate, set all public members
/// - gmd__CI_x005fOnlineResource_x005fType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__CI_x005fOnlineResource_x005fType(soap*, gmd__CI_x005fOnlineResource_x005fType*) deserialize from a stream
/// - int soap_write_gmd__CI_x005fOnlineResource_x005fType(soap*, gmd__CI_x005fOnlineResource_x005fType*) serialize to a stream
/// - gmd__CI_x005fOnlineResource_x005fType* gmd__CI_x005fOnlineResource_x005fType::soap_dup(soap*) returns deep copy of gmd__CI_x005fOnlineResource_x005fType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__CI_x005fOnlineResource_x005fType::soap_del() deep deletes gmd__CI_x005fOnlineResource_x005fType data members, use only after gmd__CI_x005fOnlineResource_x005fType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__CI_x005fOnlineResource_x005fType : public gco__AbstractObject_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectIdentification">.
/// Attribute "id" of XSD type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute "uuid" of XSD type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/// Element "linkage" of XSD type "http://www.isotc211.org/2005/gmd":URL_PropertyType.
    gmd__URL_x005fPropertyType*          linkage                        1;	///< Required element.
/// Element "protocol" of XSD type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  protocol                       0;	///< Optional element.
/// Element "applicationProfile" of XSD type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  applicationProfile             0;	///< Optional element.
/// Element "name" of XSD type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  name                           0;	///< Optional element.
/// Element "description" of XSD type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  description                    0;	///< Optional element.
/// Element "function" of XSD type "http://www.isotc211.org/2005/gmd":CI_OnLineFunctionCode_PropertyType.
    gmd__CI_x005fOnLineFunctionCode_x005fPropertyType*  function                       0;	///< Optional element.
};

/// @brief "http://www.isotc211.org/2005/gmd":CI_Contact_Type is a complexType with complexContent extension of XSD type "http://www.isotc211.org/2005/gco":AbstractObject_Type.
///
/// <PRE><BLOCKQUOTE>
///   Information required enabling contact with the responsible person and/or organisation
/// </BLOCKQUOTE></PRE>
/// class gmd__CI_x005fContact_x005fType operations:
/// - gmd__CI_x005fContact_x005fType* soap_new_gmd__CI_x005fContact_x005fType(soap*) allocate and default initialize
/// - gmd__CI_x005fContact_x005fType* soap_new_gmd__CI_x005fContact_x005fType(soap*, int num) allocate array and default initialize values
/// - gmd__CI_x005fContact_x005fType* soap_new_req_gmd__CI_x005fContact_x005fType(soap*, ...) allocate, set required members
/// - gmd__CI_x005fContact_x005fType* soap_new_set_gmd__CI_x005fContact_x005fType(soap*, ...) allocate, set all public members
/// - gmd__CI_x005fContact_x005fType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__CI_x005fContact_x005fType(soap*, gmd__CI_x005fContact_x005fType*) deserialize from a stream
/// - int soap_write_gmd__CI_x005fContact_x005fType(soap*, gmd__CI_x005fContact_x005fType*) serialize to a stream
/// - gmd__CI_x005fContact_x005fType* gmd__CI_x005fContact_x005fType::soap_dup(soap*) returns deep copy of gmd__CI_x005fContact_x005fType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__CI_x005fContact_x005fType::soap_del() deep deletes gmd__CI_x005fContact_x005fType data members, use only after gmd__CI_x005fContact_x005fType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__CI_x005fContact_x005fType : public gco__AbstractObject_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectIdentification">.
/// Attribute "id" of XSD type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute "uuid" of XSD type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/// Element "phone" of XSD type "http://www.isotc211.org/2005/gmd":CI_Telephone_PropertyType.
    gmd__CI_x005fTelephone_x005fPropertyType*  phone                          0;	///< Optional element.
/// Element "address" of XSD type "http://www.isotc211.org/2005/gmd":CI_Address_PropertyType.
    gmd__CI_x005fAddress_x005fPropertyType*  address                        0;	///< Optional element.
/// Element "onlineResource" of XSD type "http://www.isotc211.org/2005/gmd":CI_OnlineResource_PropertyType.
    gmd__CI_x005fOnlineResource_x005fPropertyType*  onlineResource                 0;	///< Optional element.
/// Element "hoursOfService" of XSD type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  hoursOfService                 0;	///< Optional element.
/// Element "contactInstructions" of XSD type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  contactInstructions            0;	///< Optional element.
};

/// @brief "http://www.isotc211.org/2005/gmd":CI_Telephone_Type is a complexType with complexContent extension of XSD type "http://www.isotc211.org/2005/gco":AbstractObject_Type.
///
/// <PRE><BLOCKQUOTE>
///   Telephone numbers for contacting the responsible individual or organisation
/// </BLOCKQUOTE></PRE>
/// class gmd__CI_x005fTelephone_x005fType operations:
/// - gmd__CI_x005fTelephone_x005fType* soap_new_gmd__CI_x005fTelephone_x005fType(soap*) allocate and default initialize
/// - gmd__CI_x005fTelephone_x005fType* soap_new_gmd__CI_x005fTelephone_x005fType(soap*, int num) allocate array and default initialize values
/// - gmd__CI_x005fTelephone_x005fType* soap_new_req_gmd__CI_x005fTelephone_x005fType(soap*, ...) allocate, set required members
/// - gmd__CI_x005fTelephone_x005fType* soap_new_set_gmd__CI_x005fTelephone_x005fType(soap*, ...) allocate, set all public members
/// - gmd__CI_x005fTelephone_x005fType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__CI_x005fTelephone_x005fType(soap*, gmd__CI_x005fTelephone_x005fType*) deserialize from a stream
/// - int soap_write_gmd__CI_x005fTelephone_x005fType(soap*, gmd__CI_x005fTelephone_x005fType*) serialize to a stream
/// - gmd__CI_x005fTelephone_x005fType* gmd__CI_x005fTelephone_x005fType::soap_dup(soap*) returns deep copy of gmd__CI_x005fTelephone_x005fType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__CI_x005fTelephone_x005fType::soap_del() deep deletes gmd__CI_x005fTelephone_x005fType data members, use only after gmd__CI_x005fTelephone_x005fType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__CI_x005fTelephone_x005fType : public gco__AbstractObject_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectIdentification">.
/// Attribute "id" of XSD type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute "uuid" of XSD type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/// Vector of gco__CharacterString_x005fPropertyType* of length 0..unbounded.
    std::vector<gco__CharacterString_x005fPropertyType*> voice                          0;
/// Vector of gco__CharacterString_x005fPropertyType* of length 0..unbounded.
    std::vector<gco__CharacterString_x005fPropertyType*> facsimile                      0;
};

/// @brief "http://www.isotc211.org/2005/gmd":CI_Date_Type is a complexType with complexContent extension of XSD type "http://www.isotc211.org/2005/gco":AbstractObject_Type.
///
/// class gmd__CI_x005fDate_x005fType operations:
/// - gmd__CI_x005fDate_x005fType* soap_new_gmd__CI_x005fDate_x005fType(soap*) allocate and default initialize
/// - gmd__CI_x005fDate_x005fType* soap_new_gmd__CI_x005fDate_x005fType(soap*, int num) allocate array and default initialize values
/// - gmd__CI_x005fDate_x005fType* soap_new_req_gmd__CI_x005fDate_x005fType(soap*, ...) allocate, set required members
/// - gmd__CI_x005fDate_x005fType* soap_new_set_gmd__CI_x005fDate_x005fType(soap*, ...) allocate, set all public members
/// - gmd__CI_x005fDate_x005fType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__CI_x005fDate_x005fType(soap*, gmd__CI_x005fDate_x005fType*) deserialize from a stream
/// - int soap_write_gmd__CI_x005fDate_x005fType(soap*, gmd__CI_x005fDate_x005fType*) serialize to a stream
/// - gmd__CI_x005fDate_x005fType* gmd__CI_x005fDate_x005fType::soap_dup(soap*) returns deep copy of gmd__CI_x005fDate_x005fType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__CI_x005fDate_x005fType::soap_del() deep deletes gmd__CI_x005fDate_x005fType data members, use only after gmd__CI_x005fDate_x005fType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__CI_x005fDate_x005fType : public gco__AbstractObject_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectIdentification">.
/// Attribute "id" of XSD type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute "uuid" of XSD type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/// Element "date" of XSD type "http://www.isotc211.org/2005/gco":Date_PropertyType.
    gco__Date_x005fPropertyType*         date                           1;	///< Required element.
/// Element "dateType" of XSD type "http://www.isotc211.org/2005/gmd":CI_DateTypeCode_PropertyType.
    gmd__CI_x005fDateTypeCode_x005fPropertyType*  dateType                       1;	///< Required element.
};

/// @brief "http://www.isotc211.org/2005/gmd":CI_Series_Type is a complexType with complexContent extension of XSD type "http://www.isotc211.org/2005/gco":AbstractObject_Type.
///
/// class gmd__CI_x005fSeries_x005fType operations:
/// - gmd__CI_x005fSeries_x005fType* soap_new_gmd__CI_x005fSeries_x005fType(soap*) allocate and default initialize
/// - gmd__CI_x005fSeries_x005fType* soap_new_gmd__CI_x005fSeries_x005fType(soap*, int num) allocate array and default initialize values
/// - gmd__CI_x005fSeries_x005fType* soap_new_req_gmd__CI_x005fSeries_x005fType(soap*, ...) allocate, set required members
/// - gmd__CI_x005fSeries_x005fType* soap_new_set_gmd__CI_x005fSeries_x005fType(soap*, ...) allocate, set all public members
/// - gmd__CI_x005fSeries_x005fType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__CI_x005fSeries_x005fType(soap*, gmd__CI_x005fSeries_x005fType*) deserialize from a stream
/// - int soap_write_gmd__CI_x005fSeries_x005fType(soap*, gmd__CI_x005fSeries_x005fType*) serialize to a stream
/// - gmd__CI_x005fSeries_x005fType* gmd__CI_x005fSeries_x005fType::soap_dup(soap*) returns deep copy of gmd__CI_x005fSeries_x005fType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__CI_x005fSeries_x005fType::soap_del() deep deletes gmd__CI_x005fSeries_x005fType data members, use only after gmd__CI_x005fSeries_x005fType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__CI_x005fSeries_x005fType : public gco__AbstractObject_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectIdentification">.
/// Attribute "id" of XSD type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute "uuid" of XSD type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/// Element "name" of XSD type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  name                           0;	///< Optional element.
/// Element "issueIdentification" of XSD type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  issueIdentification            0;	///< Optional element.
/// Element "page" of XSD type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  page                           0;	///< Optional element.
};

/// @brief "http://www.isotc211.org/2005/gmd":MD_ReferenceSystem_Type is a complexType with complexContent extension of XSD type "http://www.isotc211.org/2005/gco":AbstractObject_Type.
///
/// class gmd__MD_x005fReferenceSystem_x005fType operations:
/// - gmd__MD_x005fReferenceSystem_x005fType* soap_new_gmd__MD_x005fReferenceSystem_x005fType(soap*) allocate and default initialize
/// - gmd__MD_x005fReferenceSystem_x005fType* soap_new_gmd__MD_x005fReferenceSystem_x005fType(soap*, int num) allocate array and default initialize values
/// - gmd__MD_x005fReferenceSystem_x005fType* soap_new_req_gmd__MD_x005fReferenceSystem_x005fType(soap*, ...) allocate, set required members
/// - gmd__MD_x005fReferenceSystem_x005fType* soap_new_set_gmd__MD_x005fReferenceSystem_x005fType(soap*, ...) allocate, set all public members
/// - gmd__MD_x005fReferenceSystem_x005fType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__MD_x005fReferenceSystem_x005fType(soap*, gmd__MD_x005fReferenceSystem_x005fType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fReferenceSystem_x005fType(soap*, gmd__MD_x005fReferenceSystem_x005fType*) serialize to a stream
/// - gmd__MD_x005fReferenceSystem_x005fType* gmd__MD_x005fReferenceSystem_x005fType::soap_dup(soap*) returns deep copy of gmd__MD_x005fReferenceSystem_x005fType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__MD_x005fReferenceSystem_x005fType::soap_del() deep deletes gmd__MD_x005fReferenceSystem_x005fType data members, use only after gmd__MD_x005fReferenceSystem_x005fType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__MD_x005fReferenceSystem_x005fType : public gco__AbstractObject_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectIdentification">.
/// Attribute "id" of XSD type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute "uuid" of XSD type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/// Element "referenceSystemIdentifier" of XSD type "http://www.isotc211.org/2005/gmd":RS_Identifier_PropertyType.
    gmd__RS_x005fIdentifier_x005fPropertyType*  referenceSystemIdentifier      0;	///< Optional element.
};

/// @brief "http://www.isotc211.org/2005/gmd":MD_Identifier_Type is a complexType with complexContent extension of XSD type "http://www.isotc211.org/2005/gco":AbstractObject_Type.
///
/// class gmd__MD_x005fIdentifier_x005fType operations:
/// - gmd__MD_x005fIdentifier_x005fType* soap_new_gmd__MD_x005fIdentifier_x005fType(soap*) allocate and default initialize
/// - gmd__MD_x005fIdentifier_x005fType* soap_new_gmd__MD_x005fIdentifier_x005fType(soap*, int num) allocate array and default initialize values
/// - gmd__MD_x005fIdentifier_x005fType* soap_new_req_gmd__MD_x005fIdentifier_x005fType(soap*, ...) allocate, set required members
/// - gmd__MD_x005fIdentifier_x005fType* soap_new_set_gmd__MD_x005fIdentifier_x005fType(soap*, ...) allocate, set all public members
/// - gmd__MD_x005fIdentifier_x005fType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__MD_x005fIdentifier_x005fType(soap*, gmd__MD_x005fIdentifier_x005fType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fIdentifier_x005fType(soap*, gmd__MD_x005fIdentifier_x005fType*) serialize to a stream
/// - gmd__MD_x005fIdentifier_x005fType* gmd__MD_x005fIdentifier_x005fType::soap_dup(soap*) returns deep copy of gmd__MD_x005fIdentifier_x005fType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__MD_x005fIdentifier_x005fType::soap_del() deep deletes gmd__MD_x005fIdentifier_x005fType data members, use only after gmd__MD_x005fIdentifier_x005fType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__MD_x005fIdentifier_x005fType : public gco__AbstractObject_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectIdentification">.
/// Attribute "id" of XSD type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute "uuid" of XSD type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/// Element "authority" of XSD type "http://www.isotc211.org/2005/gmd":CI_Citation_PropertyType.
    gmd__CI_x005fCitation_x005fPropertyType*  authority                      0;	///< Optional element.
/// Element "code" of XSD type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  code                           1;	///< Required element.
};

/// @brief "http://www.isotc211.org/2005/gmd":AbstractRS_ReferenceSystem_Type is an abstract complexType with complexContent extension of XSD type "http://www.isotc211.org/2005/gco":AbstractObject_Type.
///
/// <PRE><BLOCKQUOTE>
///   Description of the spatial and temporal reference systems used in the dataset
/// </BLOCKQUOTE></PRE>
/// class gmd__AbstractRS_x005fReferenceSystem_x005fType operations:
/// - gmd__AbstractRS_x005fReferenceSystem_x005fType* soap_new_gmd__AbstractRS_x005fReferenceSystem_x005fType(soap*) allocate and default initialize
/// - gmd__AbstractRS_x005fReferenceSystem_x005fType* soap_new_gmd__AbstractRS_x005fReferenceSystem_x005fType(soap*, int num) allocate array and default initialize values
/// - gmd__AbstractRS_x005fReferenceSystem_x005fType* soap_new_req_gmd__AbstractRS_x005fReferenceSystem_x005fType(soap*, ...) allocate, set required members
/// - gmd__AbstractRS_x005fReferenceSystem_x005fType* soap_new_set_gmd__AbstractRS_x005fReferenceSystem_x005fType(soap*, ...) allocate, set all public members
/// - gmd__AbstractRS_x005fReferenceSystem_x005fType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__AbstractRS_x005fReferenceSystem_x005fType(soap*, gmd__AbstractRS_x005fReferenceSystem_x005fType*) deserialize from a stream
/// - int soap_write_gmd__AbstractRS_x005fReferenceSystem_x005fType(soap*, gmd__AbstractRS_x005fReferenceSystem_x005fType*) serialize to a stream
/// - gmd__AbstractRS_x005fReferenceSystem_x005fType* gmd__AbstractRS_x005fReferenceSystem_x005fType::soap_dup(soap*) returns deep copy of gmd__AbstractRS_x005fReferenceSystem_x005fType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__AbstractRS_x005fReferenceSystem_x005fType::soap_del() deep deletes gmd__AbstractRS_x005fReferenceSystem_x005fType data members, use only after gmd__AbstractRS_x005fReferenceSystem_x005fType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__AbstractRS_x005fReferenceSystem_x005fType : public gco__AbstractObject_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectIdentification">.
/// Attribute "id" of XSD type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute "uuid" of XSD type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/// Element "name" of XSD type "http://www.isotc211.org/2005/gmd":RS_Identifier_PropertyType.
    gmd__RS_x005fIdentifier_x005fPropertyType*  name                           1;	///< Required element.
/// Vector of gmd__EX_x005fExtent_x005fPropertyType* of length 0..unbounded.
    std::vector<gmd__EX_x005fExtent_x005fPropertyType*> domainOfValidity               0;
};

/// @brief "http://www.isotc211.org/2005/gmd":EX_TemporalExtent_Type is a complexType with complexContent extension of XSD type "http://www.isotc211.org/2005/gco":AbstractObject_Type.
///
/// <PRE><BLOCKQUOTE>
///   Time period covered by the content of the dataset
/// </BLOCKQUOTE></PRE>
/// class gmd__EX_x005fTemporalExtent_x005fType operations:
/// - gmd__EX_x005fTemporalExtent_x005fType* soap_new_gmd__EX_x005fTemporalExtent_x005fType(soap*) allocate and default initialize
/// - gmd__EX_x005fTemporalExtent_x005fType* soap_new_gmd__EX_x005fTemporalExtent_x005fType(soap*, int num) allocate array and default initialize values
/// - gmd__EX_x005fTemporalExtent_x005fType* soap_new_req_gmd__EX_x005fTemporalExtent_x005fType(soap*, ...) allocate, set required members
/// - gmd__EX_x005fTemporalExtent_x005fType* soap_new_set_gmd__EX_x005fTemporalExtent_x005fType(soap*, ...) allocate, set all public members
/// - gmd__EX_x005fTemporalExtent_x005fType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__EX_x005fTemporalExtent_x005fType(soap*, gmd__EX_x005fTemporalExtent_x005fType*) deserialize from a stream
/// - int soap_write_gmd__EX_x005fTemporalExtent_x005fType(soap*, gmd__EX_x005fTemporalExtent_x005fType*) serialize to a stream
/// - gmd__EX_x005fTemporalExtent_x005fType* gmd__EX_x005fTemporalExtent_x005fType::soap_dup(soap*) returns deep copy of gmd__EX_x005fTemporalExtent_x005fType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__EX_x005fTemporalExtent_x005fType::soap_del() deep deletes gmd__EX_x005fTemporalExtent_x005fType data members, use only after gmd__EX_x005fTemporalExtent_x005fType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__EX_x005fTemporalExtent_x005fType : public gco__AbstractObject_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectIdentification">.
/// Attribute "id" of XSD type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute "uuid" of XSD type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/// Element "extent" of XSD type "http://www.isotc211.org/2005/gts":TM_Primitive_PropertyType.
    gts__TM_x005fPrimitive_x005fPropertyType*  extent                         1;	///< Required element.
};

/// @brief "http://www.isotc211.org/2005/gmd":EX_VerticalExtent_Type is a complexType with complexContent extension of XSD type "http://www.isotc211.org/2005/gco":AbstractObject_Type.
///
/// <PRE><BLOCKQUOTE>
///   Vertical domain of dataset
/// </BLOCKQUOTE></PRE>
/// class gmd__EX_x005fVerticalExtent_x005fType operations:
/// - gmd__EX_x005fVerticalExtent_x005fType* soap_new_gmd__EX_x005fVerticalExtent_x005fType(soap*) allocate and default initialize
/// - gmd__EX_x005fVerticalExtent_x005fType* soap_new_gmd__EX_x005fVerticalExtent_x005fType(soap*, int num) allocate array and default initialize values
/// - gmd__EX_x005fVerticalExtent_x005fType* soap_new_req_gmd__EX_x005fVerticalExtent_x005fType(soap*, ...) allocate, set required members
/// - gmd__EX_x005fVerticalExtent_x005fType* soap_new_set_gmd__EX_x005fVerticalExtent_x005fType(soap*, ...) allocate, set all public members
/// - gmd__EX_x005fVerticalExtent_x005fType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__EX_x005fVerticalExtent_x005fType(soap*, gmd__EX_x005fVerticalExtent_x005fType*) deserialize from a stream
/// - int soap_write_gmd__EX_x005fVerticalExtent_x005fType(soap*, gmd__EX_x005fVerticalExtent_x005fType*) serialize to a stream
/// - gmd__EX_x005fVerticalExtent_x005fType* gmd__EX_x005fVerticalExtent_x005fType::soap_dup(soap*) returns deep copy of gmd__EX_x005fVerticalExtent_x005fType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__EX_x005fVerticalExtent_x005fType::soap_del() deep deletes gmd__EX_x005fVerticalExtent_x005fType data members, use only after gmd__EX_x005fVerticalExtent_x005fType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__EX_x005fVerticalExtent_x005fType : public gco__AbstractObject_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectIdentification">.
/// Attribute "id" of XSD type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute "uuid" of XSD type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/// Element "minimumValue" of XSD type "http://www.isotc211.org/2005/gco":Real_PropertyType.
    gco__Real_x005fPropertyType*         minimumValue                   1;	///< Required element.
/// Element "maximumValue" of XSD type "http://www.isotc211.org/2005/gco":Real_PropertyType.
    gco__Real_x005fPropertyType*         maximumValue                   1;	///< Required element.
/// Element "verticalCRS" of XSD type "http://www.isotc211.org/2005/gsr":SC_CRS_PropertyType.
    gsr__SC_x005fCRS_x005fPropertyType*  verticalCRS                    1;	///< Required element.
};

/// @brief "http://www.isotc211.org/2005/gmd":EX_Extent_Type is a complexType with complexContent extension of XSD type "http://www.isotc211.org/2005/gco":AbstractObject_Type.
///
/// <PRE><BLOCKQUOTE>
///   Information about spatial, vertical, and temporal extent
/// </BLOCKQUOTE></PRE>
/// class gmd__EX_x005fExtent_x005fType operations:
/// - gmd__EX_x005fExtent_x005fType* soap_new_gmd__EX_x005fExtent_x005fType(soap*) allocate and default initialize
/// - gmd__EX_x005fExtent_x005fType* soap_new_gmd__EX_x005fExtent_x005fType(soap*, int num) allocate array and default initialize values
/// - gmd__EX_x005fExtent_x005fType* soap_new_req_gmd__EX_x005fExtent_x005fType(soap*, ...) allocate, set required members
/// - gmd__EX_x005fExtent_x005fType* soap_new_set_gmd__EX_x005fExtent_x005fType(soap*, ...) allocate, set all public members
/// - gmd__EX_x005fExtent_x005fType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__EX_x005fExtent_x005fType(soap*, gmd__EX_x005fExtent_x005fType*) deserialize from a stream
/// - int soap_write_gmd__EX_x005fExtent_x005fType(soap*, gmd__EX_x005fExtent_x005fType*) serialize to a stream
/// - gmd__EX_x005fExtent_x005fType* gmd__EX_x005fExtent_x005fType::soap_dup(soap*) returns deep copy of gmd__EX_x005fExtent_x005fType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__EX_x005fExtent_x005fType::soap_del() deep deletes gmd__EX_x005fExtent_x005fType data members, use only after gmd__EX_x005fExtent_x005fType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__EX_x005fExtent_x005fType : public gco__AbstractObject_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectIdentification">.
/// Attribute "id" of XSD type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute "uuid" of XSD type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/// Element "description" of XSD type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  description                    0;	///< Optional element.
/// Vector of gmd__EX_x005fGeographicExtent_x005fPropertyType* of length 0..unbounded.
    std::vector<gmd__EX_x005fGeographicExtent_x005fPropertyType*> geographicElement              0;
/// Vector of gmd__EX_x005fTemporalExtent_x005fPropertyType* of length 0..unbounded.
    std::vector<gmd__EX_x005fTemporalExtent_x005fPropertyType*> temporalElement                0;
/// Vector of gmd__EX_x005fVerticalExtent_x005fPropertyType* of length 0..unbounded.
    std::vector<gmd__EX_x005fVerticalExtent_x005fPropertyType*> verticalElement                0;
};

/// @brief "http://www.isotc211.org/2005/gmd":AbstractEX_GeographicExtent_Type is an abstract complexType with complexContent extension of XSD type "http://www.isotc211.org/2005/gco":AbstractObject_Type.
///
/// <PRE><BLOCKQUOTE>
///   Geographic area of the dataset
/// </BLOCKQUOTE></PRE>
/// class gmd__AbstractEX_x005fGeographicExtent_x005fType operations:
/// - gmd__AbstractEX_x005fGeographicExtent_x005fType* soap_new_gmd__AbstractEX_x005fGeographicExtent_x005fType(soap*) allocate and default initialize
/// - gmd__AbstractEX_x005fGeographicExtent_x005fType* soap_new_gmd__AbstractEX_x005fGeographicExtent_x005fType(soap*, int num) allocate array and default initialize values
/// - gmd__AbstractEX_x005fGeographicExtent_x005fType* soap_new_req_gmd__AbstractEX_x005fGeographicExtent_x005fType(soap*, ...) allocate, set required members
/// - gmd__AbstractEX_x005fGeographicExtent_x005fType* soap_new_set_gmd__AbstractEX_x005fGeographicExtent_x005fType(soap*, ...) allocate, set all public members
/// - gmd__AbstractEX_x005fGeographicExtent_x005fType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__AbstractEX_x005fGeographicExtent_x005fType(soap*, gmd__AbstractEX_x005fGeographicExtent_x005fType*) deserialize from a stream
/// - int soap_write_gmd__AbstractEX_x005fGeographicExtent_x005fType(soap*, gmd__AbstractEX_x005fGeographicExtent_x005fType*) serialize to a stream
/// - gmd__AbstractEX_x005fGeographicExtent_x005fType* gmd__AbstractEX_x005fGeographicExtent_x005fType::soap_dup(soap*) returns deep copy of gmd__AbstractEX_x005fGeographicExtent_x005fType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__AbstractEX_x005fGeographicExtent_x005fType::soap_del() deep deletes gmd__AbstractEX_x005fGeographicExtent_x005fType data members, use only after gmd__AbstractEX_x005fGeographicExtent_x005fType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__AbstractEX_x005fGeographicExtent_x005fType : public gco__AbstractObject_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectIdentification">.
/// Attribute "id" of XSD type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute "uuid" of XSD type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/// Element "extentTypeCode" of XSD type "http://www.isotc211.org/2005/gco":Boolean_PropertyType.
    gco__Boolean_x005fPropertyType*      extentTypeCode                 0;	///< Optional element.
};

/// @brief "http://www.isotc211.org/2005/gmd":MD_ExtendedElementInformation_Type is a complexType with complexContent extension of XSD type "http://www.isotc211.org/2005/gco":AbstractObject_Type.
///
/// <PRE><BLOCKQUOTE>
///   New metadata element, not found in ISO 19115, which is required to describe geographic data
/// </BLOCKQUOTE></PRE>
/// class gmd__MD_x005fExtendedElementInformation_x005fType operations:
/// - gmd__MD_x005fExtendedElementInformation_x005fType* soap_new_gmd__MD_x005fExtendedElementInformation_x005fType(soap*) allocate and default initialize
/// - gmd__MD_x005fExtendedElementInformation_x005fType* soap_new_gmd__MD_x005fExtendedElementInformation_x005fType(soap*, int num) allocate array and default initialize values
/// - gmd__MD_x005fExtendedElementInformation_x005fType* soap_new_req_gmd__MD_x005fExtendedElementInformation_x005fType(soap*, ...) allocate, set required members
/// - gmd__MD_x005fExtendedElementInformation_x005fType* soap_new_set_gmd__MD_x005fExtendedElementInformation_x005fType(soap*, ...) allocate, set all public members
/// - gmd__MD_x005fExtendedElementInformation_x005fType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__MD_x005fExtendedElementInformation_x005fType(soap*, gmd__MD_x005fExtendedElementInformation_x005fType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fExtendedElementInformation_x005fType(soap*, gmd__MD_x005fExtendedElementInformation_x005fType*) serialize to a stream
/// - gmd__MD_x005fExtendedElementInformation_x005fType* gmd__MD_x005fExtendedElementInformation_x005fType::soap_dup(soap*) returns deep copy of gmd__MD_x005fExtendedElementInformation_x005fType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__MD_x005fExtendedElementInformation_x005fType::soap_del() deep deletes gmd__MD_x005fExtendedElementInformation_x005fType data members, use only after gmd__MD_x005fExtendedElementInformation_x005fType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__MD_x005fExtendedElementInformation_x005fType : public gco__AbstractObject_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectIdentification">.
/// Attribute "id" of XSD type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute "uuid" of XSD type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/// Element "name" of XSD type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  name                           1;	///< Required element.
/// Element "shortName" of XSD type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  shortName                      0;	///< Optional element.
/// Element "domainCode" of XSD type "http://www.isotc211.org/2005/gco":Integer_PropertyType.
    gco__Integer_x005fPropertyType*      domainCode                     0;	///< Optional element.
/// Element "definition" of XSD type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  definition                     1;	///< Required element.
/// Element "obligation" of XSD type "http://www.isotc211.org/2005/gmd":MD_ObligationCode_PropertyType.
    gmd__MD_x005fObligationCode_x005fPropertyType*  obligation                     0;	///< Optional element.
/// Element "condition" of XSD type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  condition                      0;	///< Optional element.
/// Element "dataType" of XSD type "http://www.isotc211.org/2005/gmd":MD_DatatypeCode_PropertyType.
    gmd__MD_x005fDatatypeCode_x005fPropertyType*  dataType                       1;	///< Required element.
/// Element "maximumOccurrence" of XSD type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  maximumOccurrence              0;	///< Optional element.
/// Element "domainValue" of XSD type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  domainValue                    0;	///< Optional element.
/// Vector of gco__CharacterString_x005fPropertyType* of length 1..unbounded.
    std::vector<gco__CharacterString_x005fPropertyType*> parentEntity                   1;
/// Element "rule" of XSD type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  rule                           1;	///< Required element.
/// Vector of gco__CharacterString_x005fPropertyType* of length 0..unbounded.
    std::vector<gco__CharacterString_x005fPropertyType*> rationale                      0;
/// Vector of gmd__CI_x005fResponsibleParty_x005fPropertyType* of length 1..unbounded.
    std::vector<gmd__CI_x005fResponsibleParty_x005fPropertyType*> source                         1;
};

/// @brief "http://www.isotc211.org/2005/gmd":MD_MetadataExtensionInformation_Type is a complexType with complexContent extension of XSD type "http://www.isotc211.org/2005/gco":AbstractObject_Type.
///
/// <PRE><BLOCKQUOTE>
///   Information describing metadata extensions.
/// </BLOCKQUOTE></PRE>
/// class gmd__MD_x005fMetadataExtensionInformation_x005fType operations:
/// - gmd__MD_x005fMetadataExtensionInformation_x005fType* soap_new_gmd__MD_x005fMetadataExtensionInformation_x005fType(soap*) allocate and default initialize
/// - gmd__MD_x005fMetadataExtensionInformation_x005fType* soap_new_gmd__MD_x005fMetadataExtensionInformation_x005fType(soap*, int num) allocate array and default initialize values
/// - gmd__MD_x005fMetadataExtensionInformation_x005fType* soap_new_req_gmd__MD_x005fMetadataExtensionInformation_x005fType(soap*, ...) allocate, set required members
/// - gmd__MD_x005fMetadataExtensionInformation_x005fType* soap_new_set_gmd__MD_x005fMetadataExtensionInformation_x005fType(soap*, ...) allocate, set all public members
/// - gmd__MD_x005fMetadataExtensionInformation_x005fType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__MD_x005fMetadataExtensionInformation_x005fType(soap*, gmd__MD_x005fMetadataExtensionInformation_x005fType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fMetadataExtensionInformation_x005fType(soap*, gmd__MD_x005fMetadataExtensionInformation_x005fType*) serialize to a stream
/// - gmd__MD_x005fMetadataExtensionInformation_x005fType* gmd__MD_x005fMetadataExtensionInformation_x005fType::soap_dup(soap*) returns deep copy of gmd__MD_x005fMetadataExtensionInformation_x005fType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__MD_x005fMetadataExtensionInformation_x005fType::soap_del() deep deletes gmd__MD_x005fMetadataExtensionInformation_x005fType data members, use only after gmd__MD_x005fMetadataExtensionInformation_x005fType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__MD_x005fMetadataExtensionInformation_x005fType : public gco__AbstractObject_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectIdentification">.
/// Attribute "id" of XSD type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute "uuid" of XSD type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/// Element "extensionOnLineResource" of XSD type "http://www.isotc211.org/2005/gmd":CI_OnlineResource_PropertyType.
    gmd__CI_x005fOnlineResource_x005fPropertyType*  extensionOnLineResource        0;	///< Optional element.
/// Vector of gmd__MD_x005fExtendedElementInformation_x005fPropertyType* of length 0..unbounded.
    std::vector<gmd__MD_x005fExtendedElementInformation_x005fPropertyType*> extendedElementInformation     0;
};

/// @brief "http://www.isotc211.org/2005/gmd":AbstractMD_ContentInformation_Type is an abstract complexType with complexContent extension of XSD type "http://www.isotc211.org/2005/gco":AbstractObject_Type.
///
/// class gmd__AbstractMD_x005fContentInformation_x005fType operations:
/// - gmd__AbstractMD_x005fContentInformation_x005fType* soap_new_gmd__AbstractMD_x005fContentInformation_x005fType(soap*) allocate and default initialize
/// - gmd__AbstractMD_x005fContentInformation_x005fType* soap_new_gmd__AbstractMD_x005fContentInformation_x005fType(soap*, int num) allocate array and default initialize values
/// - gmd__AbstractMD_x005fContentInformation_x005fType* soap_new_req_gmd__AbstractMD_x005fContentInformation_x005fType(soap*, ...) allocate, set required members
/// - gmd__AbstractMD_x005fContentInformation_x005fType* soap_new_set_gmd__AbstractMD_x005fContentInformation_x005fType(soap*, ...) allocate, set all public members
/// - gmd__AbstractMD_x005fContentInformation_x005fType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__AbstractMD_x005fContentInformation_x005fType(soap*, gmd__AbstractMD_x005fContentInformation_x005fType*) deserialize from a stream
/// - int soap_write_gmd__AbstractMD_x005fContentInformation_x005fType(soap*, gmd__AbstractMD_x005fContentInformation_x005fType*) serialize to a stream
/// - gmd__AbstractMD_x005fContentInformation_x005fType* gmd__AbstractMD_x005fContentInformation_x005fType::soap_dup(soap*) returns deep copy of gmd__AbstractMD_x005fContentInformation_x005fType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__AbstractMD_x005fContentInformation_x005fType::soap_del() deep deletes gmd__AbstractMD_x005fContentInformation_x005fType data members, use only after gmd__AbstractMD_x005fContentInformation_x005fType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__AbstractMD_x005fContentInformation_x005fType : public gco__AbstractObject_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectIdentification">.
/// Attribute "id" of XSD type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute "uuid" of XSD type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
    END OF INHERITED FROM gco__AbstractObject_x005fType */
};

/// @brief "http://www.isotc211.org/2005/gmd":MD_RangeDimension_Type is a complexType with complexContent extension of XSD type "http://www.isotc211.org/2005/gco":AbstractObject_Type.
///
/// <PRE><BLOCKQUOTE>
///   Set of adjacent wavelengths in the electro-magnetic spectrum with a common characteristic, such as the visible band
/// </BLOCKQUOTE></PRE>
/// class gmd__MD_x005fRangeDimension_x005fType operations:
/// - gmd__MD_x005fRangeDimension_x005fType* soap_new_gmd__MD_x005fRangeDimension_x005fType(soap*) allocate and default initialize
/// - gmd__MD_x005fRangeDimension_x005fType* soap_new_gmd__MD_x005fRangeDimension_x005fType(soap*, int num) allocate array and default initialize values
/// - gmd__MD_x005fRangeDimension_x005fType* soap_new_req_gmd__MD_x005fRangeDimension_x005fType(soap*, ...) allocate, set required members
/// - gmd__MD_x005fRangeDimension_x005fType* soap_new_set_gmd__MD_x005fRangeDimension_x005fType(soap*, ...) allocate, set all public members
/// - gmd__MD_x005fRangeDimension_x005fType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__MD_x005fRangeDimension_x005fType(soap*, gmd__MD_x005fRangeDimension_x005fType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fRangeDimension_x005fType(soap*, gmd__MD_x005fRangeDimension_x005fType*) serialize to a stream
/// - gmd__MD_x005fRangeDimension_x005fType* gmd__MD_x005fRangeDimension_x005fType::soap_dup(soap*) returns deep copy of gmd__MD_x005fRangeDimension_x005fType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__MD_x005fRangeDimension_x005fType::soap_del() deep deletes gmd__MD_x005fRangeDimension_x005fType data members, use only after gmd__MD_x005fRangeDimension_x005fType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__MD_x005fRangeDimension_x005fType : public gco__AbstractObject_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectIdentification">.
/// Attribute "id" of XSD type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute "uuid" of XSD type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/// Element "sequenceIdentifier" of XSD type "http://www.isotc211.org/2005/gco":MemberName_PropertyType.
    gco__MemberName_x005fPropertyType*   sequenceIdentifier             0;	///< Optional element.
/// Element "descriptor" of XSD type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  descriptor                     0;	///< Optional element.
};

/// @brief "http://www.isotc211.org/2005/gmd":MD_ApplicationSchemaInformation_Type is a complexType with complexContent extension of XSD type "http://www.isotc211.org/2005/gco":AbstractObject_Type.
///
/// <PRE><BLOCKQUOTE>
///   Information about the application schema used to build the dataset
/// </BLOCKQUOTE></PRE>
/// class gmd__MD_x005fApplicationSchemaInformation_x005fType operations:
/// - gmd__MD_x005fApplicationSchemaInformation_x005fType* soap_new_gmd__MD_x005fApplicationSchemaInformation_x005fType(soap*) allocate and default initialize
/// - gmd__MD_x005fApplicationSchemaInformation_x005fType* soap_new_gmd__MD_x005fApplicationSchemaInformation_x005fType(soap*, int num) allocate array and default initialize values
/// - gmd__MD_x005fApplicationSchemaInformation_x005fType* soap_new_req_gmd__MD_x005fApplicationSchemaInformation_x005fType(soap*, ...) allocate, set required members
/// - gmd__MD_x005fApplicationSchemaInformation_x005fType* soap_new_set_gmd__MD_x005fApplicationSchemaInformation_x005fType(soap*, ...) allocate, set all public members
/// - gmd__MD_x005fApplicationSchemaInformation_x005fType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__MD_x005fApplicationSchemaInformation_x005fType(soap*, gmd__MD_x005fApplicationSchemaInformation_x005fType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fApplicationSchemaInformation_x005fType(soap*, gmd__MD_x005fApplicationSchemaInformation_x005fType*) serialize to a stream
/// - gmd__MD_x005fApplicationSchemaInformation_x005fType* gmd__MD_x005fApplicationSchemaInformation_x005fType::soap_dup(soap*) returns deep copy of gmd__MD_x005fApplicationSchemaInformation_x005fType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__MD_x005fApplicationSchemaInformation_x005fType::soap_del() deep deletes gmd__MD_x005fApplicationSchemaInformation_x005fType data members, use only after gmd__MD_x005fApplicationSchemaInformation_x005fType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__MD_x005fApplicationSchemaInformation_x005fType : public gco__AbstractObject_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectIdentification">.
/// Attribute "id" of XSD type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute "uuid" of XSD type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/// Element "name" of XSD type "http://www.isotc211.org/2005/gmd":CI_Citation_PropertyType.
    gmd__CI_x005fCitation_x005fPropertyType*  name                           1;	///< Required element.
/// Element "schemaLanguage" of XSD type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  schemaLanguage                 1;	///< Required element.
/// Element "constraintLanguage" of XSD type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  constraintLanguage             1;	///< Required element.
/// Element "schemaAscii" of XSD type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  schemaAscii                    0;	///< Optional element.
/// Element "graphicsFile" of XSD type "http://www.isotc211.org/2005/gco":Binary_PropertyType.
    gco__Binary_x005fPropertyType*       graphicsFile                   0;	///< Optional element.
/// Element "softwareDevelopmentFile" of XSD type "http://www.isotc211.org/2005/gco":Binary_PropertyType.
    gco__Binary_x005fPropertyType*       softwareDevelopmentFile        0;	///< Optional element.
/// Element "softwareDevelopmentFileFormat" of XSD type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  softwareDevelopmentFileFormat  0;	///< Optional element.
};

/// @brief "http://www.isotc211.org/2005/gmd":MD_PortrayalCatalogueReference_Type is a complexType with complexContent extension of XSD type "http://www.isotc211.org/2005/gco":AbstractObject_Type.
///
/// <PRE><BLOCKQUOTE>
///   Information identifing the portrayal catalogue used
/// </BLOCKQUOTE></PRE>
/// class gmd__MD_x005fPortrayalCatalogueReference_x005fType operations:
/// - gmd__MD_x005fPortrayalCatalogueReference_x005fType* soap_new_gmd__MD_x005fPortrayalCatalogueReference_x005fType(soap*) allocate and default initialize
/// - gmd__MD_x005fPortrayalCatalogueReference_x005fType* soap_new_gmd__MD_x005fPortrayalCatalogueReference_x005fType(soap*, int num) allocate array and default initialize values
/// - gmd__MD_x005fPortrayalCatalogueReference_x005fType* soap_new_req_gmd__MD_x005fPortrayalCatalogueReference_x005fType(soap*, ...) allocate, set required members
/// - gmd__MD_x005fPortrayalCatalogueReference_x005fType* soap_new_set_gmd__MD_x005fPortrayalCatalogueReference_x005fType(soap*, ...) allocate, set all public members
/// - gmd__MD_x005fPortrayalCatalogueReference_x005fType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__MD_x005fPortrayalCatalogueReference_x005fType(soap*, gmd__MD_x005fPortrayalCatalogueReference_x005fType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fPortrayalCatalogueReference_x005fType(soap*, gmd__MD_x005fPortrayalCatalogueReference_x005fType*) serialize to a stream
/// - gmd__MD_x005fPortrayalCatalogueReference_x005fType* gmd__MD_x005fPortrayalCatalogueReference_x005fType::soap_dup(soap*) returns deep copy of gmd__MD_x005fPortrayalCatalogueReference_x005fType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__MD_x005fPortrayalCatalogueReference_x005fType::soap_del() deep deletes gmd__MD_x005fPortrayalCatalogueReference_x005fType data members, use only after gmd__MD_x005fPortrayalCatalogueReference_x005fType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__MD_x005fPortrayalCatalogueReference_x005fType : public gco__AbstractObject_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectIdentification">.
/// Attribute "id" of XSD type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute "uuid" of XSD type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/// Vector of gmd__CI_x005fCitation_x005fPropertyType* of length 1..unbounded.
    std::vector<gmd__CI_x005fCitation_x005fPropertyType*> portrayalCatalogueCitation     1;
};

/// @brief "http://www.isotc211.org/2005/gmd":LI_ProcessStep_Type is a complexType with complexContent extension of XSD type "http://www.isotc211.org/2005/gco":AbstractObject_Type.
///
/// class gmd__LI_x005fProcessStep_x005fType operations:
/// - gmd__LI_x005fProcessStep_x005fType* soap_new_gmd__LI_x005fProcessStep_x005fType(soap*) allocate and default initialize
/// - gmd__LI_x005fProcessStep_x005fType* soap_new_gmd__LI_x005fProcessStep_x005fType(soap*, int num) allocate array and default initialize values
/// - gmd__LI_x005fProcessStep_x005fType* soap_new_req_gmd__LI_x005fProcessStep_x005fType(soap*, ...) allocate, set required members
/// - gmd__LI_x005fProcessStep_x005fType* soap_new_set_gmd__LI_x005fProcessStep_x005fType(soap*, ...) allocate, set all public members
/// - gmd__LI_x005fProcessStep_x005fType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__LI_x005fProcessStep_x005fType(soap*, gmd__LI_x005fProcessStep_x005fType*) deserialize from a stream
/// - int soap_write_gmd__LI_x005fProcessStep_x005fType(soap*, gmd__LI_x005fProcessStep_x005fType*) serialize to a stream
/// - gmd__LI_x005fProcessStep_x005fType* gmd__LI_x005fProcessStep_x005fType::soap_dup(soap*) returns deep copy of gmd__LI_x005fProcessStep_x005fType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__LI_x005fProcessStep_x005fType::soap_del() deep deletes gmd__LI_x005fProcessStep_x005fType data members, use only after gmd__LI_x005fProcessStep_x005fType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__LI_x005fProcessStep_x005fType : public gco__AbstractObject_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectIdentification">.
/// Attribute "id" of XSD type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute "uuid" of XSD type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/// Element "description" of XSD type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  description                    1;	///< Required element.
/// Element "rationale" of XSD type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  rationale                      0;	///< Optional element.
/// Element "dateTime" of XSD type "http://www.isotc211.org/2005/gco":DateTime_PropertyType.
    gco__DateTime_x005fPropertyType*     dateTime                       0;	///< Optional element.
/// Vector of gmd__CI_x005fResponsibleParty_x005fPropertyType* of length 0..unbounded.
    std::vector<gmd__CI_x005fResponsibleParty_x005fPropertyType*> processor                      0;
/// Vector of gmd__LI_x005fSource_x005fPropertyType* of length 0..unbounded.
    std::vector<gmd__LI_x005fSource_x005fPropertyType*> source                         0;
};

/// @brief "http://www.isotc211.org/2005/gmd":LI_Source_Type is a complexType with complexContent extension of XSD type "http://www.isotc211.org/2005/gco":AbstractObject_Type.
///
/// class gmd__LI_x005fSource_x005fType operations:
/// - gmd__LI_x005fSource_x005fType* soap_new_gmd__LI_x005fSource_x005fType(soap*) allocate and default initialize
/// - gmd__LI_x005fSource_x005fType* soap_new_gmd__LI_x005fSource_x005fType(soap*, int num) allocate array and default initialize values
/// - gmd__LI_x005fSource_x005fType* soap_new_req_gmd__LI_x005fSource_x005fType(soap*, ...) allocate, set required members
/// - gmd__LI_x005fSource_x005fType* soap_new_set_gmd__LI_x005fSource_x005fType(soap*, ...) allocate, set all public members
/// - gmd__LI_x005fSource_x005fType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__LI_x005fSource_x005fType(soap*, gmd__LI_x005fSource_x005fType*) deserialize from a stream
/// - int soap_write_gmd__LI_x005fSource_x005fType(soap*, gmd__LI_x005fSource_x005fType*) serialize to a stream
/// - gmd__LI_x005fSource_x005fType* gmd__LI_x005fSource_x005fType::soap_dup(soap*) returns deep copy of gmd__LI_x005fSource_x005fType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__LI_x005fSource_x005fType::soap_del() deep deletes gmd__LI_x005fSource_x005fType data members, use only after gmd__LI_x005fSource_x005fType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__LI_x005fSource_x005fType : public gco__AbstractObject_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectIdentification">.
/// Attribute "id" of XSD type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute "uuid" of XSD type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/// Element "description" of XSD type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  description                    0;	///< Optional element.
/// Element "scaleDenominator" of XSD type "http://www.isotc211.org/2005/gmd":MD_RepresentativeFraction_PropertyType.
    gmd__MD_x005fRepresentativeFraction_x005fPropertyType*  scaleDenominator               0;	///< Optional element.
/// Element "sourceReferenceSystem" of XSD type "http://www.isotc211.org/2005/gmd":MD_ReferenceSystem_PropertyType.
    gmd__MD_x005fReferenceSystem_x005fPropertyType*  sourceReferenceSystem          0;	///< Optional element.
/// Element "sourceCitation" of XSD type "http://www.isotc211.org/2005/gmd":CI_Citation_PropertyType.
    gmd__CI_x005fCitation_x005fPropertyType*  sourceCitation                 0;	///< Optional element.
/// Vector of gmd__EX_x005fExtent_x005fPropertyType* of length 0..unbounded.
    std::vector<gmd__EX_x005fExtent_x005fPropertyType*> sourceExtent                   0;
/// Vector of gmd__LI_x005fProcessStep_x005fPropertyType* of length 0..unbounded.
    std::vector<gmd__LI_x005fProcessStep_x005fPropertyType*> sourceStep                     0;
};

/// @brief "http://www.isotc211.org/2005/gmd":LI_Lineage_Type is a complexType with complexContent extension of XSD type "http://www.isotc211.org/2005/gco":AbstractObject_Type.
///
/// class gmd__LI_x005fLineage_x005fType operations:
/// - gmd__LI_x005fLineage_x005fType* soap_new_gmd__LI_x005fLineage_x005fType(soap*) allocate and default initialize
/// - gmd__LI_x005fLineage_x005fType* soap_new_gmd__LI_x005fLineage_x005fType(soap*, int num) allocate array and default initialize values
/// - gmd__LI_x005fLineage_x005fType* soap_new_req_gmd__LI_x005fLineage_x005fType(soap*, ...) allocate, set required members
/// - gmd__LI_x005fLineage_x005fType* soap_new_set_gmd__LI_x005fLineage_x005fType(soap*, ...) allocate, set all public members
/// - gmd__LI_x005fLineage_x005fType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__LI_x005fLineage_x005fType(soap*, gmd__LI_x005fLineage_x005fType*) deserialize from a stream
/// - int soap_write_gmd__LI_x005fLineage_x005fType(soap*, gmd__LI_x005fLineage_x005fType*) serialize to a stream
/// - gmd__LI_x005fLineage_x005fType* gmd__LI_x005fLineage_x005fType::soap_dup(soap*) returns deep copy of gmd__LI_x005fLineage_x005fType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__LI_x005fLineage_x005fType::soap_del() deep deletes gmd__LI_x005fLineage_x005fType data members, use only after gmd__LI_x005fLineage_x005fType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__LI_x005fLineage_x005fType : public gco__AbstractObject_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectIdentification">.
/// Attribute "id" of XSD type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute "uuid" of XSD type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/// Element "statement" of XSD type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  statement                      0;	///< Optional element.
/// Vector of gmd__LI_x005fProcessStep_x005fPropertyType* of length 0..unbounded.
    std::vector<gmd__LI_x005fProcessStep_x005fPropertyType*> processStep                    0;
/// Vector of gmd__LI_x005fSource_x005fPropertyType* of length 0..unbounded.
    std::vector<gmd__LI_x005fSource_x005fPropertyType*> source                         0;
};

/// @brief "http://www.isotc211.org/2005/gmd":AbstractDQ_Result_Type is an abstract complexType with complexContent extension of XSD type "http://www.isotc211.org/2005/gco":AbstractObject_Type.
///
/// class gmd__AbstractDQ_x005fResult_x005fType operations:
/// - gmd__AbstractDQ_x005fResult_x005fType* soap_new_gmd__AbstractDQ_x005fResult_x005fType(soap*) allocate and default initialize
/// - gmd__AbstractDQ_x005fResult_x005fType* soap_new_gmd__AbstractDQ_x005fResult_x005fType(soap*, int num) allocate array and default initialize values
/// - gmd__AbstractDQ_x005fResult_x005fType* soap_new_req_gmd__AbstractDQ_x005fResult_x005fType(soap*, ...) allocate, set required members
/// - gmd__AbstractDQ_x005fResult_x005fType* soap_new_set_gmd__AbstractDQ_x005fResult_x005fType(soap*, ...) allocate, set all public members
/// - gmd__AbstractDQ_x005fResult_x005fType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__AbstractDQ_x005fResult_x005fType(soap*, gmd__AbstractDQ_x005fResult_x005fType*) deserialize from a stream
/// - int soap_write_gmd__AbstractDQ_x005fResult_x005fType(soap*, gmd__AbstractDQ_x005fResult_x005fType*) serialize to a stream
/// - gmd__AbstractDQ_x005fResult_x005fType* gmd__AbstractDQ_x005fResult_x005fType::soap_dup(soap*) returns deep copy of gmd__AbstractDQ_x005fResult_x005fType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__AbstractDQ_x005fResult_x005fType::soap_del() deep deletes gmd__AbstractDQ_x005fResult_x005fType data members, use only after gmd__AbstractDQ_x005fResult_x005fType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__AbstractDQ_x005fResult_x005fType : public gco__AbstractObject_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectIdentification">.
/// Attribute "id" of XSD type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute "uuid" of XSD type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
    END OF INHERITED FROM gco__AbstractObject_x005fType */
};

/// @brief "http://www.isotc211.org/2005/gmd":AbstractDQ_Element_Type is an abstract complexType with complexContent extension of XSD type "http://www.isotc211.org/2005/gco":AbstractObject_Type.
///
/// class gmd__AbstractDQ_x005fElement_x005fType operations:
/// - gmd__AbstractDQ_x005fElement_x005fType* soap_new_gmd__AbstractDQ_x005fElement_x005fType(soap*) allocate and default initialize
/// - gmd__AbstractDQ_x005fElement_x005fType* soap_new_gmd__AbstractDQ_x005fElement_x005fType(soap*, int num) allocate array and default initialize values
/// - gmd__AbstractDQ_x005fElement_x005fType* soap_new_req_gmd__AbstractDQ_x005fElement_x005fType(soap*, ...) allocate, set required members
/// - gmd__AbstractDQ_x005fElement_x005fType* soap_new_set_gmd__AbstractDQ_x005fElement_x005fType(soap*, ...) allocate, set all public members
/// - gmd__AbstractDQ_x005fElement_x005fType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__AbstractDQ_x005fElement_x005fType(soap*, gmd__AbstractDQ_x005fElement_x005fType*) deserialize from a stream
/// - int soap_write_gmd__AbstractDQ_x005fElement_x005fType(soap*, gmd__AbstractDQ_x005fElement_x005fType*) serialize to a stream
/// - gmd__AbstractDQ_x005fElement_x005fType* gmd__AbstractDQ_x005fElement_x005fType::soap_dup(soap*) returns deep copy of gmd__AbstractDQ_x005fElement_x005fType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__AbstractDQ_x005fElement_x005fType::soap_del() deep deletes gmd__AbstractDQ_x005fElement_x005fType data members, use only after gmd__AbstractDQ_x005fElement_x005fType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__AbstractDQ_x005fElement_x005fType : public gco__AbstractObject_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectIdentification">.
/// Attribute "id" of XSD type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute "uuid" of XSD type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/// Vector of gco__CharacterString_x005fPropertyType* of length 0..unbounded.
    std::vector<gco__CharacterString_x005fPropertyType*> nameOfMeasure                  0;
/// Element "measureIdentification" of XSD type "http://www.isotc211.org/2005/gmd":MD_Identifier_PropertyType.
    gmd__MD_x005fIdentifier_x005fPropertyType*  measureIdentification          0;	///< Optional element.
/// Element "measureDescription" of XSD type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  measureDescription             0;	///< Optional element.
/// Element "evaluationMethodType" of XSD type "http://www.isotc211.org/2005/gmd":DQ_EvaluationMethodTypeCode_PropertyType.
    gmd__DQ_x005fEvaluationMethodTypeCode_x005fPropertyType*  evaluationMethodType           0;	///< Optional element.
/// Element "evaluationMethodDescription" of XSD type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  evaluationMethodDescription    0;	///< Optional element.
/// Element "evaluationProcedure" of XSD type "http://www.isotc211.org/2005/gmd":CI_Citation_PropertyType.
    gmd__CI_x005fCitation_x005fPropertyType*  evaluationProcedure            0;	///< Optional element.
/// Vector of gco__DateTime_x005fPropertyType* of length 0..unbounded.
    std::vector<gco__DateTime_x005fPropertyType*> dateTime                       0;
/// Vector of gmd__DQ_x005fResult_x005fPropertyType* of length 1..2.
    std::vector<gmd__DQ_x005fResult_x005fPropertyType*> result                         1:2;
};

/// @brief "http://www.isotc211.org/2005/gmd":DQ_DataQuality_Type is a complexType with complexContent extension of XSD type "http://www.isotc211.org/2005/gco":AbstractObject_Type.
///
/// class gmd__DQ_x005fDataQuality_x005fType operations:
/// - gmd__DQ_x005fDataQuality_x005fType* soap_new_gmd__DQ_x005fDataQuality_x005fType(soap*) allocate and default initialize
/// - gmd__DQ_x005fDataQuality_x005fType* soap_new_gmd__DQ_x005fDataQuality_x005fType(soap*, int num) allocate array and default initialize values
/// - gmd__DQ_x005fDataQuality_x005fType* soap_new_req_gmd__DQ_x005fDataQuality_x005fType(soap*, ...) allocate, set required members
/// - gmd__DQ_x005fDataQuality_x005fType* soap_new_set_gmd__DQ_x005fDataQuality_x005fType(soap*, ...) allocate, set all public members
/// - gmd__DQ_x005fDataQuality_x005fType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__DQ_x005fDataQuality_x005fType(soap*, gmd__DQ_x005fDataQuality_x005fType*) deserialize from a stream
/// - int soap_write_gmd__DQ_x005fDataQuality_x005fType(soap*, gmd__DQ_x005fDataQuality_x005fType*) serialize to a stream
/// - gmd__DQ_x005fDataQuality_x005fType* gmd__DQ_x005fDataQuality_x005fType::soap_dup(soap*) returns deep copy of gmd__DQ_x005fDataQuality_x005fType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__DQ_x005fDataQuality_x005fType::soap_del() deep deletes gmd__DQ_x005fDataQuality_x005fType data members, use only after gmd__DQ_x005fDataQuality_x005fType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__DQ_x005fDataQuality_x005fType : public gco__AbstractObject_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectIdentification">.
/// Attribute "id" of XSD type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute "uuid" of XSD type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/// Element "scope" of XSD type "http://www.isotc211.org/2005/gmd":DQ_Scope_PropertyType.
    gmd__DQ_x005fScope_x005fPropertyType*  scope                          1;	///< Required element.
/// Vector of gmd__DQ_x005fElement_x005fPropertyType* of length 0..unbounded.
    std::vector<gmd__DQ_x005fElement_x005fPropertyType*> report                         0;
/// Element "lineage" of XSD type "http://www.isotc211.org/2005/gmd":LI_Lineage_PropertyType.
    gmd__LI_x005fLineage_x005fPropertyType*  lineage                        0;	///< Optional element.
};

/// @brief "http://www.isotc211.org/2005/gmd":DQ_Scope_Type is a complexType with complexContent extension of XSD type "http://www.isotc211.org/2005/gco":AbstractObject_Type.
///
/// class gmd__DQ_x005fScope_x005fType operations:
/// - gmd__DQ_x005fScope_x005fType* soap_new_gmd__DQ_x005fScope_x005fType(soap*) allocate and default initialize
/// - gmd__DQ_x005fScope_x005fType* soap_new_gmd__DQ_x005fScope_x005fType(soap*, int num) allocate array and default initialize values
/// - gmd__DQ_x005fScope_x005fType* soap_new_req_gmd__DQ_x005fScope_x005fType(soap*, ...) allocate, set required members
/// - gmd__DQ_x005fScope_x005fType* soap_new_set_gmd__DQ_x005fScope_x005fType(soap*, ...) allocate, set all public members
/// - gmd__DQ_x005fScope_x005fType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__DQ_x005fScope_x005fType(soap*, gmd__DQ_x005fScope_x005fType*) deserialize from a stream
/// - int soap_write_gmd__DQ_x005fScope_x005fType(soap*, gmd__DQ_x005fScope_x005fType*) serialize to a stream
/// - gmd__DQ_x005fScope_x005fType* gmd__DQ_x005fScope_x005fType::soap_dup(soap*) returns deep copy of gmd__DQ_x005fScope_x005fType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__DQ_x005fScope_x005fType::soap_del() deep deletes gmd__DQ_x005fScope_x005fType data members, use only after gmd__DQ_x005fScope_x005fType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__DQ_x005fScope_x005fType : public gco__AbstractObject_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectIdentification">.
/// Attribute "id" of XSD type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute "uuid" of XSD type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/// Element "level" of XSD type "http://www.isotc211.org/2005/gmd":MD_ScopeCode_PropertyType.
    gmd__MD_x005fScopeCode_x005fPropertyType*  level                          1;	///< Required element.
/// Element "extent" of XSD type "http://www.isotc211.org/2005/gmd":EX_Extent_PropertyType.
    gmd__EX_x005fExtent_x005fPropertyType*  extent                         0;	///< Optional element.
/// Vector of gmd__MD_x005fScopeDescription_x005fPropertyType* of length 0..unbounded.
    std::vector<gmd__MD_x005fScopeDescription_x005fPropertyType*> levelDescription               0;
};

/// @brief "http://www.isotc211.org/2005/gmd":AbstractMD_Identification_Type is an abstract complexType with complexContent extension of XSD type "http://www.isotc211.org/2005/gco":AbstractObject_Type.
///
/// <PRE><BLOCKQUOTE>
///   Basic information about data
/// </BLOCKQUOTE></PRE>
/// class gmd__AbstractMD_x005fIdentification_x005fType operations:
/// - gmd__AbstractMD_x005fIdentification_x005fType* soap_new_gmd__AbstractMD_x005fIdentification_x005fType(soap*) allocate and default initialize
/// - gmd__AbstractMD_x005fIdentification_x005fType* soap_new_gmd__AbstractMD_x005fIdentification_x005fType(soap*, int num) allocate array and default initialize values
/// - gmd__AbstractMD_x005fIdentification_x005fType* soap_new_req_gmd__AbstractMD_x005fIdentification_x005fType(soap*, ...) allocate, set required members
/// - gmd__AbstractMD_x005fIdentification_x005fType* soap_new_set_gmd__AbstractMD_x005fIdentification_x005fType(soap*, ...) allocate, set all public members
/// - gmd__AbstractMD_x005fIdentification_x005fType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__AbstractMD_x005fIdentification_x005fType(soap*, gmd__AbstractMD_x005fIdentification_x005fType*) deserialize from a stream
/// - int soap_write_gmd__AbstractMD_x005fIdentification_x005fType(soap*, gmd__AbstractMD_x005fIdentification_x005fType*) serialize to a stream
/// - gmd__AbstractMD_x005fIdentification_x005fType* gmd__AbstractMD_x005fIdentification_x005fType::soap_dup(soap*) returns deep copy of gmd__AbstractMD_x005fIdentification_x005fType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__AbstractMD_x005fIdentification_x005fType::soap_del() deep deletes gmd__AbstractMD_x005fIdentification_x005fType data members, use only after gmd__AbstractMD_x005fIdentification_x005fType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__AbstractMD_x005fIdentification_x005fType : public gco__AbstractObject_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectIdentification">.
/// Attribute "id" of XSD type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute "uuid" of XSD type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/// Element "citation" of XSD type "http://www.isotc211.org/2005/gmd":CI_Citation_PropertyType.
    gmd__CI_x005fCitation_x005fPropertyType*  citation                       1;	///< Required element.
/// Element "abstract" of XSD type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  abstract                       1;	///< Required element.
/// Element "purpose" of XSD type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  purpose                        0;	///< Optional element.
/// Vector of gco__CharacterString_x005fPropertyType* of length 0..unbounded.
    std::vector<gco__CharacterString_x005fPropertyType*> credit                         0;
/// Vector of gmd__MD_x005fProgressCode_x005fPropertyType* of length 0..unbounded.
    std::vector<gmd__MD_x005fProgressCode_x005fPropertyType*> status                         0;
/// Vector of gmd__CI_x005fResponsibleParty_x005fPropertyType* of length 0..unbounded.
    std::vector<gmd__CI_x005fResponsibleParty_x005fPropertyType*> pointOfContact                 0;
/// Vector of gmd__MD_x005fMaintenanceInformation_x005fPropertyType* of length 0..unbounded.
    std::vector<gmd__MD_x005fMaintenanceInformation_x005fPropertyType*> resourceMaintenance            0;
/// Vector of gmd__MD_x005fBrowseGraphic_x005fPropertyType* of length 0..unbounded.
    std::vector<gmd__MD_x005fBrowseGraphic_x005fPropertyType*> graphicOverview                0;
/// Vector of gmd__MD_x005fFormat_x005fPropertyType* of length 0..unbounded.
    std::vector<gmd__MD_x005fFormat_x005fPropertyType*> resourceFormat                 0;
/// Vector of gmd__MD_x005fKeywords_x005fPropertyType* of length 0..unbounded.
    std::vector<gmd__MD_x005fKeywords_x005fPropertyType*> descriptiveKeywords            0;
/// Vector of gmd__MD_x005fUsage_x005fPropertyType* of length 0..unbounded.
    std::vector<gmd__MD_x005fUsage_x005fPropertyType*> resourceSpecificUsage          0;
/// Vector of gmd__MD_x005fConstraints_x005fPropertyType* of length 0..unbounded.
    std::vector<gmd__MD_x005fConstraints_x005fPropertyType*> resourceConstraints            0;
/// Vector of gmd__MD_x005fAggregateInformation_x005fPropertyType* of length 0..unbounded.
    std::vector<gmd__MD_x005fAggregateInformation_x005fPropertyType*> aggregationInfo                0;
};

/// @brief "http://www.isotc211.org/2005/gmd":MD_BrowseGraphic_Type is a complexType with complexContent extension of XSD type "http://www.isotc211.org/2005/gco":AbstractObject_Type.
///
/// <PRE><BLOCKQUOTE>
///   Graphic that provides an illustration of the dataset (should include a legend for the graphic)
/// </BLOCKQUOTE></PRE>
/// class gmd__MD_x005fBrowseGraphic_x005fType operations:
/// - gmd__MD_x005fBrowseGraphic_x005fType* soap_new_gmd__MD_x005fBrowseGraphic_x005fType(soap*) allocate and default initialize
/// - gmd__MD_x005fBrowseGraphic_x005fType* soap_new_gmd__MD_x005fBrowseGraphic_x005fType(soap*, int num) allocate array and default initialize values
/// - gmd__MD_x005fBrowseGraphic_x005fType* soap_new_req_gmd__MD_x005fBrowseGraphic_x005fType(soap*, ...) allocate, set required members
/// - gmd__MD_x005fBrowseGraphic_x005fType* soap_new_set_gmd__MD_x005fBrowseGraphic_x005fType(soap*, ...) allocate, set all public members
/// - gmd__MD_x005fBrowseGraphic_x005fType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__MD_x005fBrowseGraphic_x005fType(soap*, gmd__MD_x005fBrowseGraphic_x005fType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fBrowseGraphic_x005fType(soap*, gmd__MD_x005fBrowseGraphic_x005fType*) serialize to a stream
/// - gmd__MD_x005fBrowseGraphic_x005fType* gmd__MD_x005fBrowseGraphic_x005fType::soap_dup(soap*) returns deep copy of gmd__MD_x005fBrowseGraphic_x005fType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__MD_x005fBrowseGraphic_x005fType::soap_del() deep deletes gmd__MD_x005fBrowseGraphic_x005fType data members, use only after gmd__MD_x005fBrowseGraphic_x005fType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__MD_x005fBrowseGraphic_x005fType : public gco__AbstractObject_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectIdentification">.
/// Attribute "id" of XSD type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute "uuid" of XSD type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/// Element "fileName" of XSD type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  fileName                       1;	///< Required element.
/// Element "fileDescription" of XSD type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  fileDescription                0;	///< Optional element.
/// Element "fileType" of XSD type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  fileType                       0;	///< Optional element.
};

/// @brief "http://www.isotc211.org/2005/gmd":MD_RepresentativeFraction_Type is a complexType with complexContent extension of XSD type "http://www.isotc211.org/2005/gco":AbstractObject_Type.
///
/// class gmd__MD_x005fRepresentativeFraction_x005fType operations:
/// - gmd__MD_x005fRepresentativeFraction_x005fType* soap_new_gmd__MD_x005fRepresentativeFraction_x005fType(soap*) allocate and default initialize
/// - gmd__MD_x005fRepresentativeFraction_x005fType* soap_new_gmd__MD_x005fRepresentativeFraction_x005fType(soap*, int num) allocate array and default initialize values
/// - gmd__MD_x005fRepresentativeFraction_x005fType* soap_new_req_gmd__MD_x005fRepresentativeFraction_x005fType(soap*, ...) allocate, set required members
/// - gmd__MD_x005fRepresentativeFraction_x005fType* soap_new_set_gmd__MD_x005fRepresentativeFraction_x005fType(soap*, ...) allocate, set all public members
/// - gmd__MD_x005fRepresentativeFraction_x005fType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__MD_x005fRepresentativeFraction_x005fType(soap*, gmd__MD_x005fRepresentativeFraction_x005fType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fRepresentativeFraction_x005fType(soap*, gmd__MD_x005fRepresentativeFraction_x005fType*) serialize to a stream
/// - gmd__MD_x005fRepresentativeFraction_x005fType* gmd__MD_x005fRepresentativeFraction_x005fType::soap_dup(soap*) returns deep copy of gmd__MD_x005fRepresentativeFraction_x005fType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__MD_x005fRepresentativeFraction_x005fType::soap_del() deep deletes gmd__MD_x005fRepresentativeFraction_x005fType data members, use only after gmd__MD_x005fRepresentativeFraction_x005fType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__MD_x005fRepresentativeFraction_x005fType : public gco__AbstractObject_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectIdentification">.
/// Attribute "id" of XSD type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute "uuid" of XSD type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/// Element "denominator" of XSD type "http://www.isotc211.org/2005/gco":Integer_PropertyType.
    gco__Integer_x005fPropertyType*      denominator                    1;	///< Required element.
};

/// @brief "http://www.isotc211.org/2005/gmd":MD_Usage_Type is a complexType with complexContent extension of XSD type "http://www.isotc211.org/2005/gco":AbstractObject_Type.
///
/// <PRE><BLOCKQUOTE>
///   Brief description of ways in which the dataset is currently used.
/// </BLOCKQUOTE></PRE>
/// class gmd__MD_x005fUsage_x005fType operations:
/// - gmd__MD_x005fUsage_x005fType* soap_new_gmd__MD_x005fUsage_x005fType(soap*) allocate and default initialize
/// - gmd__MD_x005fUsage_x005fType* soap_new_gmd__MD_x005fUsage_x005fType(soap*, int num) allocate array and default initialize values
/// - gmd__MD_x005fUsage_x005fType* soap_new_req_gmd__MD_x005fUsage_x005fType(soap*, ...) allocate, set required members
/// - gmd__MD_x005fUsage_x005fType* soap_new_set_gmd__MD_x005fUsage_x005fType(soap*, ...) allocate, set all public members
/// - gmd__MD_x005fUsage_x005fType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__MD_x005fUsage_x005fType(soap*, gmd__MD_x005fUsage_x005fType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fUsage_x005fType(soap*, gmd__MD_x005fUsage_x005fType*) serialize to a stream
/// - gmd__MD_x005fUsage_x005fType* gmd__MD_x005fUsage_x005fType::soap_dup(soap*) returns deep copy of gmd__MD_x005fUsage_x005fType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__MD_x005fUsage_x005fType::soap_del() deep deletes gmd__MD_x005fUsage_x005fType data members, use only after gmd__MD_x005fUsage_x005fType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__MD_x005fUsage_x005fType : public gco__AbstractObject_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectIdentification">.
/// Attribute "id" of XSD type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute "uuid" of XSD type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/// Element "specificUsage" of XSD type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  specificUsage                  1;	///< Required element.
/// Element "usageDateTime" of XSD type "http://www.isotc211.org/2005/gco":DateTime_PropertyType.
    gco__DateTime_x005fPropertyType*     usageDateTime                  0;	///< Optional element.
/// Element "userDeterminedLimitations" of XSD type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  userDeterminedLimitations      0;	///< Optional element.
/// Vector of gmd__CI_x005fResponsibleParty_x005fPropertyType* of length 1..unbounded.
    std::vector<gmd__CI_x005fResponsibleParty_x005fPropertyType*> userContactInfo                1;
};

/// @brief "http://www.isotc211.org/2005/gmd":MD_Keywords_Type is a complexType with complexContent extension of XSD type "http://www.isotc211.org/2005/gco":AbstractObject_Type.
///
/// <PRE><BLOCKQUOTE>
///   Keywords, their type and reference source
/// </BLOCKQUOTE></PRE>
/// class gmd__MD_x005fKeywords_x005fType operations:
/// - gmd__MD_x005fKeywords_x005fType* soap_new_gmd__MD_x005fKeywords_x005fType(soap*) allocate and default initialize
/// - gmd__MD_x005fKeywords_x005fType* soap_new_gmd__MD_x005fKeywords_x005fType(soap*, int num) allocate array and default initialize values
/// - gmd__MD_x005fKeywords_x005fType* soap_new_req_gmd__MD_x005fKeywords_x005fType(soap*, ...) allocate, set required members
/// - gmd__MD_x005fKeywords_x005fType* soap_new_set_gmd__MD_x005fKeywords_x005fType(soap*, ...) allocate, set all public members
/// - gmd__MD_x005fKeywords_x005fType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__MD_x005fKeywords_x005fType(soap*, gmd__MD_x005fKeywords_x005fType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fKeywords_x005fType(soap*, gmd__MD_x005fKeywords_x005fType*) serialize to a stream
/// - gmd__MD_x005fKeywords_x005fType* gmd__MD_x005fKeywords_x005fType::soap_dup(soap*) returns deep copy of gmd__MD_x005fKeywords_x005fType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__MD_x005fKeywords_x005fType::soap_del() deep deletes gmd__MD_x005fKeywords_x005fType data members, use only after gmd__MD_x005fKeywords_x005fType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__MD_x005fKeywords_x005fType : public gco__AbstractObject_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectIdentification">.
/// Attribute "id" of XSD type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute "uuid" of XSD type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/// Vector of gco__CharacterString_x005fPropertyType* of length 1..unbounded.
    std::vector<gco__CharacterString_x005fPropertyType*> keyword                        1;
/// Element "type" of XSD type "http://www.isotc211.org/2005/gmd":MD_KeywordTypeCode_PropertyType.
    gmd__MD_x005fKeywordTypeCode_x005fPropertyType*  type                           0;	///< Optional element.
/// Element "thesaurusName" of XSD type "http://www.isotc211.org/2005/gmd":CI_Citation_PropertyType.
    gmd__CI_x005fCitation_x005fPropertyType*  thesaurusName                  0;	///< Optional element.
};

/// @brief "http://www.isotc211.org/2005/gmd":DS_Association_Type is a complexType with complexContent extension of XSD type "http://www.isotc211.org/2005/gco":AbstractObject_Type.
///
/// class gmd__DS_x005fAssociation_x005fType operations:
/// - gmd__DS_x005fAssociation_x005fType* soap_new_gmd__DS_x005fAssociation_x005fType(soap*) allocate and default initialize
/// - gmd__DS_x005fAssociation_x005fType* soap_new_gmd__DS_x005fAssociation_x005fType(soap*, int num) allocate array and default initialize values
/// - gmd__DS_x005fAssociation_x005fType* soap_new_req_gmd__DS_x005fAssociation_x005fType(soap*, ...) allocate, set required members
/// - gmd__DS_x005fAssociation_x005fType* soap_new_set_gmd__DS_x005fAssociation_x005fType(soap*, ...) allocate, set all public members
/// - gmd__DS_x005fAssociation_x005fType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__DS_x005fAssociation_x005fType(soap*, gmd__DS_x005fAssociation_x005fType*) deserialize from a stream
/// - int soap_write_gmd__DS_x005fAssociation_x005fType(soap*, gmd__DS_x005fAssociation_x005fType*) serialize to a stream
/// - gmd__DS_x005fAssociation_x005fType* gmd__DS_x005fAssociation_x005fType::soap_dup(soap*) returns deep copy of gmd__DS_x005fAssociation_x005fType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__DS_x005fAssociation_x005fType::soap_del() deep deletes gmd__DS_x005fAssociation_x005fType data members, use only after gmd__DS_x005fAssociation_x005fType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__DS_x005fAssociation_x005fType : public gco__AbstractObject_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectIdentification">.
/// Attribute "id" of XSD type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute "uuid" of XSD type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
    END OF INHERITED FROM gco__AbstractObject_x005fType */
};

/// @brief "http://www.isotc211.org/2005/gmd":MD_AggregateInformation_Type is a complexType with complexContent extension of XSD type "http://www.isotc211.org/2005/gco":AbstractObject_Type.
///
/// <PRE><BLOCKQUOTE>
///   Encapsulates the dataset aggregation information
/// </BLOCKQUOTE></PRE>
/// class gmd__MD_x005fAggregateInformation_x005fType operations:
/// - gmd__MD_x005fAggregateInformation_x005fType* soap_new_gmd__MD_x005fAggregateInformation_x005fType(soap*) allocate and default initialize
/// - gmd__MD_x005fAggregateInformation_x005fType* soap_new_gmd__MD_x005fAggregateInformation_x005fType(soap*, int num) allocate array and default initialize values
/// - gmd__MD_x005fAggregateInformation_x005fType* soap_new_req_gmd__MD_x005fAggregateInformation_x005fType(soap*, ...) allocate, set required members
/// - gmd__MD_x005fAggregateInformation_x005fType* soap_new_set_gmd__MD_x005fAggregateInformation_x005fType(soap*, ...) allocate, set all public members
/// - gmd__MD_x005fAggregateInformation_x005fType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__MD_x005fAggregateInformation_x005fType(soap*, gmd__MD_x005fAggregateInformation_x005fType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fAggregateInformation_x005fType(soap*, gmd__MD_x005fAggregateInformation_x005fType*) serialize to a stream
/// - gmd__MD_x005fAggregateInformation_x005fType* gmd__MD_x005fAggregateInformation_x005fType::soap_dup(soap*) returns deep copy of gmd__MD_x005fAggregateInformation_x005fType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__MD_x005fAggregateInformation_x005fType::soap_del() deep deletes gmd__MD_x005fAggregateInformation_x005fType data members, use only after gmd__MD_x005fAggregateInformation_x005fType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__MD_x005fAggregateInformation_x005fType : public gco__AbstractObject_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectIdentification">.
/// Attribute "id" of XSD type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute "uuid" of XSD type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/// Element "aggregateDataSetName" of XSD type "http://www.isotc211.org/2005/gmd":CI_Citation_PropertyType.
    gmd__CI_x005fCitation_x005fPropertyType*  aggregateDataSetName           0;	///< Optional element.
/// Element "aggregateDataSetIdentifier" of XSD type "http://www.isotc211.org/2005/gmd":MD_Identifier_PropertyType.
    gmd__MD_x005fIdentifier_x005fPropertyType*  aggregateDataSetIdentifier     0;	///< Optional element.
/// Element "associationType" of XSD type "http://www.isotc211.org/2005/gmd":DS_AssociationTypeCode_PropertyType.
    gmd__DS_x005fAssociationTypeCode_x005fPropertyType*  associationType                1;	///< Required element.
/// Element "initiativeType" of XSD type "http://www.isotc211.org/2005/gmd":DS_InitiativeTypeCode_PropertyType.
    gmd__DS_x005fInitiativeTypeCode_x005fPropertyType*  initiativeType                 0;	///< Optional element.
};

/// @brief "http://www.isotc211.org/2005/gmd":MD_Constraints_Type is a complexType with complexContent extension of XSD type "http://www.isotc211.org/2005/gco":AbstractObject_Type.
///
/// <PRE><BLOCKQUOTE>
///   Restrictions on the access and use of a dataset or metadata
/// </BLOCKQUOTE></PRE>
/// class gmd__MD_x005fConstraints_x005fType operations:
/// - gmd__MD_x005fConstraints_x005fType* soap_new_gmd__MD_x005fConstraints_x005fType(soap*) allocate and default initialize
/// - gmd__MD_x005fConstraints_x005fType* soap_new_gmd__MD_x005fConstraints_x005fType(soap*, int num) allocate array and default initialize values
/// - gmd__MD_x005fConstraints_x005fType* soap_new_req_gmd__MD_x005fConstraints_x005fType(soap*, ...) allocate, set required members
/// - gmd__MD_x005fConstraints_x005fType* soap_new_set_gmd__MD_x005fConstraints_x005fType(soap*, ...) allocate, set all public members
/// - gmd__MD_x005fConstraints_x005fType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__MD_x005fConstraints_x005fType(soap*, gmd__MD_x005fConstraints_x005fType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fConstraints_x005fType(soap*, gmd__MD_x005fConstraints_x005fType*) serialize to a stream
/// - gmd__MD_x005fConstraints_x005fType* gmd__MD_x005fConstraints_x005fType::soap_dup(soap*) returns deep copy of gmd__MD_x005fConstraints_x005fType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__MD_x005fConstraints_x005fType::soap_del() deep deletes gmd__MD_x005fConstraints_x005fType data members, use only after gmd__MD_x005fConstraints_x005fType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__MD_x005fConstraints_x005fType : public gco__AbstractObject_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectIdentification">.
/// Attribute "id" of XSD type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute "uuid" of XSD type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/// Vector of gco__CharacterString_x005fPropertyType* of length 0..unbounded.
    std::vector<gco__CharacterString_x005fPropertyType*> useLimitation                  0;
};

/// @brief "http://www.isotc211.org/2005/gmd":MD_Medium_Type is a complexType with complexContent extension of XSD type "http://www.isotc211.org/2005/gco":AbstractObject_Type.
///
/// <PRE><BLOCKQUOTE>
///   Information about the media on which the data can be distributed
/// </BLOCKQUOTE></PRE>
/// class gmd__MD_x005fMedium_x005fType operations:
/// - gmd__MD_x005fMedium_x005fType* soap_new_gmd__MD_x005fMedium_x005fType(soap*) allocate and default initialize
/// - gmd__MD_x005fMedium_x005fType* soap_new_gmd__MD_x005fMedium_x005fType(soap*, int num) allocate array and default initialize values
/// - gmd__MD_x005fMedium_x005fType* soap_new_req_gmd__MD_x005fMedium_x005fType(soap*, ...) allocate, set required members
/// - gmd__MD_x005fMedium_x005fType* soap_new_set_gmd__MD_x005fMedium_x005fType(soap*, ...) allocate, set all public members
/// - gmd__MD_x005fMedium_x005fType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__MD_x005fMedium_x005fType(soap*, gmd__MD_x005fMedium_x005fType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fMedium_x005fType(soap*, gmd__MD_x005fMedium_x005fType*) serialize to a stream
/// - gmd__MD_x005fMedium_x005fType* gmd__MD_x005fMedium_x005fType::soap_dup(soap*) returns deep copy of gmd__MD_x005fMedium_x005fType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__MD_x005fMedium_x005fType::soap_del() deep deletes gmd__MD_x005fMedium_x005fType data members, use only after gmd__MD_x005fMedium_x005fType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__MD_x005fMedium_x005fType : public gco__AbstractObject_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectIdentification">.
/// Attribute "id" of XSD type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute "uuid" of XSD type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/// Element "name" of XSD type "http://www.isotc211.org/2005/gmd":MD_MediumNameCode_PropertyType.
    gmd__MD_x005fMediumNameCode_x005fPropertyType*  name                           0;	///< Optional element.
/// Vector of gco__Real_x005fPropertyType* of length 0..unbounded.
    std::vector<gco__Real_x005fPropertyType*> density                        0;
/// Element "densityUnits" of XSD type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  densityUnits                   0;	///< Optional element.
/// Element "volumes" of XSD type "http://www.isotc211.org/2005/gco":Integer_PropertyType.
    gco__Integer_x005fPropertyType*      volumes                        0;	///< Optional element.
/// Vector of gmd__MD_x005fMediumFormatCode_x005fPropertyType* of length 0..unbounded.
    std::vector<gmd__MD_x005fMediumFormatCode_x005fPropertyType*> mediumFormat                   0;
/// Element "mediumNote" of XSD type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  mediumNote                     0;	///< Optional element.
};

/// @brief "http://www.isotc211.org/2005/gmd":MD_DigitalTransferOptions_Type is a complexType with complexContent extension of XSD type "http://www.isotc211.org/2005/gco":AbstractObject_Type.
///
/// <PRE><BLOCKQUOTE>
///   Technical means and media by which a dataset is obtained from the distributor
/// </BLOCKQUOTE></PRE>
/// class gmd__MD_x005fDigitalTransferOptions_x005fType operations:
/// - gmd__MD_x005fDigitalTransferOptions_x005fType* soap_new_gmd__MD_x005fDigitalTransferOptions_x005fType(soap*) allocate and default initialize
/// - gmd__MD_x005fDigitalTransferOptions_x005fType* soap_new_gmd__MD_x005fDigitalTransferOptions_x005fType(soap*, int num) allocate array and default initialize values
/// - gmd__MD_x005fDigitalTransferOptions_x005fType* soap_new_req_gmd__MD_x005fDigitalTransferOptions_x005fType(soap*, ...) allocate, set required members
/// - gmd__MD_x005fDigitalTransferOptions_x005fType* soap_new_set_gmd__MD_x005fDigitalTransferOptions_x005fType(soap*, ...) allocate, set all public members
/// - gmd__MD_x005fDigitalTransferOptions_x005fType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__MD_x005fDigitalTransferOptions_x005fType(soap*, gmd__MD_x005fDigitalTransferOptions_x005fType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fDigitalTransferOptions_x005fType(soap*, gmd__MD_x005fDigitalTransferOptions_x005fType*) serialize to a stream
/// - gmd__MD_x005fDigitalTransferOptions_x005fType* gmd__MD_x005fDigitalTransferOptions_x005fType::soap_dup(soap*) returns deep copy of gmd__MD_x005fDigitalTransferOptions_x005fType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__MD_x005fDigitalTransferOptions_x005fType::soap_del() deep deletes gmd__MD_x005fDigitalTransferOptions_x005fType data members, use only after gmd__MD_x005fDigitalTransferOptions_x005fType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__MD_x005fDigitalTransferOptions_x005fType : public gco__AbstractObject_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectIdentification">.
/// Attribute "id" of XSD type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute "uuid" of XSD type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/// Element "unitsOfDistribution" of XSD type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  unitsOfDistribution            0;	///< Optional element.
/// Element "transferSize" of XSD type "http://www.isotc211.org/2005/gco":Real_PropertyType.
    gco__Real_x005fPropertyType*         transferSize                   0;	///< Optional element.
/// Vector of gmd__CI_x005fOnlineResource_x005fPropertyType* of length 0..unbounded.
    std::vector<gmd__CI_x005fOnlineResource_x005fPropertyType*> onLine                         0;
/// Element "offLine" of XSD type "http://www.isotc211.org/2005/gmd":MD_Medium_PropertyType.
    gmd__MD_x005fMedium_x005fPropertyType*  offLine                        0;	///< Optional element.
};

/// @brief "http://www.isotc211.org/2005/gmd":MD_StandardOrderProcess_Type is a complexType with complexContent extension of XSD type "http://www.isotc211.org/2005/gco":AbstractObject_Type.
///
/// <PRE><BLOCKQUOTE>
///   Common ways in which the dataset may be obtained or received, and related instructions and fee information
/// </BLOCKQUOTE></PRE>
/// class gmd__MD_x005fStandardOrderProcess_x005fType operations:
/// - gmd__MD_x005fStandardOrderProcess_x005fType* soap_new_gmd__MD_x005fStandardOrderProcess_x005fType(soap*) allocate and default initialize
/// - gmd__MD_x005fStandardOrderProcess_x005fType* soap_new_gmd__MD_x005fStandardOrderProcess_x005fType(soap*, int num) allocate array and default initialize values
/// - gmd__MD_x005fStandardOrderProcess_x005fType* soap_new_req_gmd__MD_x005fStandardOrderProcess_x005fType(soap*, ...) allocate, set required members
/// - gmd__MD_x005fStandardOrderProcess_x005fType* soap_new_set_gmd__MD_x005fStandardOrderProcess_x005fType(soap*, ...) allocate, set all public members
/// - gmd__MD_x005fStandardOrderProcess_x005fType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__MD_x005fStandardOrderProcess_x005fType(soap*, gmd__MD_x005fStandardOrderProcess_x005fType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fStandardOrderProcess_x005fType(soap*, gmd__MD_x005fStandardOrderProcess_x005fType*) serialize to a stream
/// - gmd__MD_x005fStandardOrderProcess_x005fType* gmd__MD_x005fStandardOrderProcess_x005fType::soap_dup(soap*) returns deep copy of gmd__MD_x005fStandardOrderProcess_x005fType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__MD_x005fStandardOrderProcess_x005fType::soap_del() deep deletes gmd__MD_x005fStandardOrderProcess_x005fType data members, use only after gmd__MD_x005fStandardOrderProcess_x005fType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__MD_x005fStandardOrderProcess_x005fType : public gco__AbstractObject_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectIdentification">.
/// Attribute "id" of XSD type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute "uuid" of XSD type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/// Element "fees" of XSD type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  fees                           0;	///< Optional element.
/// Element "plannedAvailableDateTime" of XSD type "http://www.isotc211.org/2005/gco":DateTime_PropertyType.
    gco__DateTime_x005fPropertyType*     plannedAvailableDateTime       0;	///< Optional element.
/// Element "orderingInstructions" of XSD type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  orderingInstructions           0;	///< Optional element.
/// Element "turnaround" of XSD type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  turnaround                     0;	///< Optional element.
};

/// @brief "http://www.isotc211.org/2005/gmd":MD_Distributor_Type is a complexType with complexContent extension of XSD type "http://www.isotc211.org/2005/gco":AbstractObject_Type.
///
/// <PRE><BLOCKQUOTE>
///   Information about the distributor
/// </BLOCKQUOTE></PRE>
/// class gmd__MD_x005fDistributor_x005fType operations:
/// - gmd__MD_x005fDistributor_x005fType* soap_new_gmd__MD_x005fDistributor_x005fType(soap*) allocate and default initialize
/// - gmd__MD_x005fDistributor_x005fType* soap_new_gmd__MD_x005fDistributor_x005fType(soap*, int num) allocate array and default initialize values
/// - gmd__MD_x005fDistributor_x005fType* soap_new_req_gmd__MD_x005fDistributor_x005fType(soap*, ...) allocate, set required members
/// - gmd__MD_x005fDistributor_x005fType* soap_new_set_gmd__MD_x005fDistributor_x005fType(soap*, ...) allocate, set all public members
/// - gmd__MD_x005fDistributor_x005fType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__MD_x005fDistributor_x005fType(soap*, gmd__MD_x005fDistributor_x005fType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fDistributor_x005fType(soap*, gmd__MD_x005fDistributor_x005fType*) serialize to a stream
/// - gmd__MD_x005fDistributor_x005fType* gmd__MD_x005fDistributor_x005fType::soap_dup(soap*) returns deep copy of gmd__MD_x005fDistributor_x005fType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__MD_x005fDistributor_x005fType::soap_del() deep deletes gmd__MD_x005fDistributor_x005fType data members, use only after gmd__MD_x005fDistributor_x005fType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__MD_x005fDistributor_x005fType : public gco__AbstractObject_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectIdentification">.
/// Attribute "id" of XSD type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute "uuid" of XSD type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/// Element "distributorContact" of XSD type "http://www.isotc211.org/2005/gmd":CI_ResponsibleParty_PropertyType.
    gmd__CI_x005fResponsibleParty_x005fPropertyType*  distributorContact             1;	///< Required element.
/// Vector of gmd__MD_x005fStandardOrderProcess_x005fPropertyType* of length 0..unbounded.
    std::vector<gmd__MD_x005fStandardOrderProcess_x005fPropertyType*> distributionOrderProcess       0;
/// Vector of gmd__MD_x005fFormat_x005fPropertyType* of length 0..unbounded.
    std::vector<gmd__MD_x005fFormat_x005fPropertyType*> distributorFormat              0;
/// Vector of gmd__MD_x005fDigitalTransferOptions_x005fPropertyType* of length 0..unbounded.
    std::vector<gmd__MD_x005fDigitalTransferOptions_x005fPropertyType*> distributorTransferOptions     0;
};

/// @brief "http://www.isotc211.org/2005/gmd":MD_Distribution_Type is a complexType with complexContent extension of XSD type "http://www.isotc211.org/2005/gco":AbstractObject_Type.
///
/// <PRE><BLOCKQUOTE>
///   Information about the distributor of and options for obtaining the dataset
/// </BLOCKQUOTE></PRE>
/// class gmd__MD_x005fDistribution_x005fType operations:
/// - gmd__MD_x005fDistribution_x005fType* soap_new_gmd__MD_x005fDistribution_x005fType(soap*) allocate and default initialize
/// - gmd__MD_x005fDistribution_x005fType* soap_new_gmd__MD_x005fDistribution_x005fType(soap*, int num) allocate array and default initialize values
/// - gmd__MD_x005fDistribution_x005fType* soap_new_req_gmd__MD_x005fDistribution_x005fType(soap*, ...) allocate, set required members
/// - gmd__MD_x005fDistribution_x005fType* soap_new_set_gmd__MD_x005fDistribution_x005fType(soap*, ...) allocate, set all public members
/// - gmd__MD_x005fDistribution_x005fType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__MD_x005fDistribution_x005fType(soap*, gmd__MD_x005fDistribution_x005fType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fDistribution_x005fType(soap*, gmd__MD_x005fDistribution_x005fType*) serialize to a stream
/// - gmd__MD_x005fDistribution_x005fType* gmd__MD_x005fDistribution_x005fType::soap_dup(soap*) returns deep copy of gmd__MD_x005fDistribution_x005fType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__MD_x005fDistribution_x005fType::soap_del() deep deletes gmd__MD_x005fDistribution_x005fType data members, use only after gmd__MD_x005fDistribution_x005fType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__MD_x005fDistribution_x005fType : public gco__AbstractObject_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectIdentification">.
/// Attribute "id" of XSD type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute "uuid" of XSD type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/// Vector of gmd__MD_x005fFormat_x005fPropertyType* of length 0..unbounded.
    std::vector<gmd__MD_x005fFormat_x005fPropertyType*> distributionFormat             0;
/// Vector of gmd__MD_x005fDistributor_x005fPropertyType* of length 0..unbounded.
    std::vector<gmd__MD_x005fDistributor_x005fPropertyType*> distributor                    0;
/// Vector of gmd__MD_x005fDigitalTransferOptions_x005fPropertyType* of length 0..unbounded.
    std::vector<gmd__MD_x005fDigitalTransferOptions_x005fPropertyType*> transferOptions                0;
};

/// @brief "http://www.isotc211.org/2005/gmd":MD_Format_Type is a complexType with complexContent extension of XSD type "http://www.isotc211.org/2005/gco":AbstractObject_Type.
///
/// <PRE><BLOCKQUOTE>
///   Description of the form of the data to be distributed
/// </BLOCKQUOTE></PRE>
/// class gmd__MD_x005fFormat_x005fType operations:
/// - gmd__MD_x005fFormat_x005fType* soap_new_gmd__MD_x005fFormat_x005fType(soap*) allocate and default initialize
/// - gmd__MD_x005fFormat_x005fType* soap_new_gmd__MD_x005fFormat_x005fType(soap*, int num) allocate array and default initialize values
/// - gmd__MD_x005fFormat_x005fType* soap_new_req_gmd__MD_x005fFormat_x005fType(soap*, ...) allocate, set required members
/// - gmd__MD_x005fFormat_x005fType* soap_new_set_gmd__MD_x005fFormat_x005fType(soap*, ...) allocate, set all public members
/// - gmd__MD_x005fFormat_x005fType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__MD_x005fFormat_x005fType(soap*, gmd__MD_x005fFormat_x005fType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fFormat_x005fType(soap*, gmd__MD_x005fFormat_x005fType*) serialize to a stream
/// - gmd__MD_x005fFormat_x005fType* gmd__MD_x005fFormat_x005fType::soap_dup(soap*) returns deep copy of gmd__MD_x005fFormat_x005fType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__MD_x005fFormat_x005fType::soap_del() deep deletes gmd__MD_x005fFormat_x005fType data members, use only after gmd__MD_x005fFormat_x005fType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__MD_x005fFormat_x005fType : public gco__AbstractObject_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectIdentification">.
/// Attribute "id" of XSD type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute "uuid" of XSD type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/// Element "name" of XSD type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  name                           1;	///< Required element.
/// Element "version" of XSD type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  version                        1;	///< Required element.
/// Element "amendmentNumber" of XSD type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  amendmentNumber                0;	///< Optional element.
/// Element "specification" of XSD type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  specification                  0;	///< Optional element.
/// Element "fileDecompressionTechnique" of XSD type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  fileDecompressionTechnique     0;	///< Optional element.
/// Vector of gmd__MD_x005fDistributor_x005fPropertyType* of length 0..unbounded.
    std::vector<gmd__MD_x005fDistributor_x005fPropertyType*> formatDistributor              0;
};

/// @brief "http://www.isotc211.org/2005/gmd":MD_MaintenanceInformation_Type is a complexType with complexContent extension of XSD type "http://www.isotc211.org/2005/gco":AbstractObject_Type.
///
/// <PRE><BLOCKQUOTE>
///   Information about the scope and frequency of updating
/// </BLOCKQUOTE></PRE>
/// class gmd__MD_x005fMaintenanceInformation_x005fType operations:
/// - gmd__MD_x005fMaintenanceInformation_x005fType* soap_new_gmd__MD_x005fMaintenanceInformation_x005fType(soap*) allocate and default initialize
/// - gmd__MD_x005fMaintenanceInformation_x005fType* soap_new_gmd__MD_x005fMaintenanceInformation_x005fType(soap*, int num) allocate array and default initialize values
/// - gmd__MD_x005fMaintenanceInformation_x005fType* soap_new_req_gmd__MD_x005fMaintenanceInformation_x005fType(soap*, ...) allocate, set required members
/// - gmd__MD_x005fMaintenanceInformation_x005fType* soap_new_set_gmd__MD_x005fMaintenanceInformation_x005fType(soap*, ...) allocate, set all public members
/// - gmd__MD_x005fMaintenanceInformation_x005fType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__MD_x005fMaintenanceInformation_x005fType(soap*, gmd__MD_x005fMaintenanceInformation_x005fType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fMaintenanceInformation_x005fType(soap*, gmd__MD_x005fMaintenanceInformation_x005fType*) serialize to a stream
/// - gmd__MD_x005fMaintenanceInformation_x005fType* gmd__MD_x005fMaintenanceInformation_x005fType::soap_dup(soap*) returns deep copy of gmd__MD_x005fMaintenanceInformation_x005fType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__MD_x005fMaintenanceInformation_x005fType::soap_del() deep deletes gmd__MD_x005fMaintenanceInformation_x005fType data members, use only after gmd__MD_x005fMaintenanceInformation_x005fType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__MD_x005fMaintenanceInformation_x005fType : public gco__AbstractObject_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectIdentification">.
/// Attribute "id" of XSD type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute "uuid" of XSD type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/// Element "maintenanceAndUpdateFrequency" of XSD type "http://www.isotc211.org/2005/gmd":MD_MaintenanceFrequencyCode_PropertyType.
    gmd__MD_x005fMaintenanceFrequencyCode_x005fPropertyType*  maintenanceAndUpdateFrequency  1;	///< Required element.
/// Element "dateOfNextUpdate" of XSD type "http://www.isotc211.org/2005/gco":Date_PropertyType.
    gco__Date_x005fPropertyType*         dateOfNextUpdate               0;	///< Optional element.
/// Element "userDefinedMaintenanceFrequency" of XSD type "http://www.isotc211.org/2005/gts":TM_PeriodDuration_PropertyType.
    gts__TM_x005fPeriodDuration_x005fPropertyType*  userDefinedMaintenanceFrequency 0;	///< Optional element.
/// Vector of gmd__MD_x005fScopeCode_x005fPropertyType* of length 0..unbounded.
    std::vector<gmd__MD_x005fScopeCode_x005fPropertyType*> updateScope                    0;
/// Vector of gmd__MD_x005fScopeDescription_x005fPropertyType* of length 0..unbounded.
    std::vector<gmd__MD_x005fScopeDescription_x005fPropertyType*> updateScopeDescription         0;
/// Vector of gco__CharacterString_x005fPropertyType* of length 0..unbounded.
    std::vector<gco__CharacterString_x005fPropertyType*> maintenanceNote                0;
/// Vector of gmd__CI_x005fResponsibleParty_x005fPropertyType* of length 0..unbounded.
    std::vector<gmd__CI_x005fResponsibleParty_x005fPropertyType*> contact                        0;
};

/// @brief "http://www.isotc211.org/2005/gmd":PT_FreeText_Type is a complexType with complexContent extension of XSD type "http://www.isotc211.org/2005/gco":AbstractObject_Type.
///
/// class gmd__PT_x005fFreeText_x005fType operations:
/// - gmd__PT_x005fFreeText_x005fType* soap_new_gmd__PT_x005fFreeText_x005fType(soap*) allocate and default initialize
/// - gmd__PT_x005fFreeText_x005fType* soap_new_gmd__PT_x005fFreeText_x005fType(soap*, int num) allocate array and default initialize values
/// - gmd__PT_x005fFreeText_x005fType* soap_new_req_gmd__PT_x005fFreeText_x005fType(soap*, ...) allocate, set required members
/// - gmd__PT_x005fFreeText_x005fType* soap_new_set_gmd__PT_x005fFreeText_x005fType(soap*, ...) allocate, set all public members
/// - gmd__PT_x005fFreeText_x005fType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__PT_x005fFreeText_x005fType(soap*, gmd__PT_x005fFreeText_x005fType*) deserialize from a stream
/// - int soap_write_gmd__PT_x005fFreeText_x005fType(soap*, gmd__PT_x005fFreeText_x005fType*) serialize to a stream
/// - gmd__PT_x005fFreeText_x005fType* gmd__PT_x005fFreeText_x005fType::soap_dup(soap*) returns deep copy of gmd__PT_x005fFreeText_x005fType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__PT_x005fFreeText_x005fType::soap_del() deep deletes gmd__PT_x005fFreeText_x005fType data members, use only after gmd__PT_x005fFreeText_x005fType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__PT_x005fFreeText_x005fType : public gco__AbstractObject_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectIdentification">.
/// Attribute "id" of XSD type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute "uuid" of XSD type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/// Vector of gmd__LocalisedCharacterString_x005fPropertyType* of length 1..unbounded.
    std::vector<gmd__LocalisedCharacterString_x005fPropertyType*> textGroup                      1;
};

/// @brief "http://www.isotc211.org/2005/gmd":PT_FreeText_PropertyType is a complexType with complexContent extension of XSD type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
///
/// class gmd__PT_x005fFreeText_x005fPropertyType operations:
/// - gmd__PT_x005fFreeText_x005fPropertyType* soap_new_gmd__PT_x005fFreeText_x005fPropertyType(soap*) allocate and default initialize
/// - gmd__PT_x005fFreeText_x005fPropertyType* soap_new_gmd__PT_x005fFreeText_x005fPropertyType(soap*, int num) allocate array and default initialize values
/// - gmd__PT_x005fFreeText_x005fPropertyType* soap_new_req_gmd__PT_x005fFreeText_x005fPropertyType(soap*, ...) allocate, set required members
/// - gmd__PT_x005fFreeText_x005fPropertyType* soap_new_set_gmd__PT_x005fFreeText_x005fPropertyType(soap*, ...) allocate, set all public members
/// - gmd__PT_x005fFreeText_x005fPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__PT_x005fFreeText_x005fPropertyType(soap*, gmd__PT_x005fFreeText_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__PT_x005fFreeText_x005fPropertyType(soap*, gmd__PT_x005fFreeText_x005fPropertyType*) serialize to a stream
/// - gmd__PT_x005fFreeText_x005fPropertyType* gmd__PT_x005fFreeText_x005fPropertyType::soap_dup(soap*) returns deep copy of gmd__PT_x005fFreeText_x005fPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__PT_x005fFreeText_x005fPropertyType::soap_del() deep deletes gmd__PT_x005fFreeText_x005fPropertyType data members, use only after gmd__PT_x005fFreeText_x005fPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__PT_x005fFreeText_x005fPropertyType : public gco__CharacterString_x005fPropertyType
{ public:
/*  INHERITED FROM gco__CharacterString_x005fPropertyType:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gco__PT_x005fFreeText_x005fPropertyType_sequence
    {
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="CharacterString"> with global elements <MD_PixelOrientationCode> <MD_PixelOrientationCode> <MD_TopologyLevelCode> <MD_TopologyLevelCode> <MD_GeometricObjectTypeCode> <MD_GeometricObjectTypeCode> <MD_CellGeometryCode> <MD_CellGeometryCode> <MD_DimensionNameTypeCode> <MD_DimensionNameTypeCode> <CI_RoleCode> <CI_RoleCode> <CI_PresentationFormCode> <CI_PresentationFormCode> <CI_OnLineFunctionCode> <CI_OnLineFunctionCode> <CI_DateTypeCode> <CI_DateTypeCode> <MD_ObligationCode> <MD_ObligationCode> <MD_DatatypeCode> <MD_DatatypeCode> <MD_CoverageContentTypeCode> <MD_CoverageContentTypeCode> <MD_ImagingConditionCode> <MD_ImagingConditionCode> <DQ_EvaluationMethodTypeCode> <DQ_EvaluationMethodTypeCode> <MD_TopicCategoryCode> <MD_TopicCategoryCode> <MD_CharacterSetCode> <MD_CharacterSetCode> <MD_SpatialRepresentationTypeCode> <MD_SpatialRepresentationTypeCode> <MD_ProgressCode> <MD_ProgressCode> <MD_KeywordTypeCode> <MD_KeywordTypeCode> <DS_AssociationTypeCode> <DS_AssociationTypeCode> <DS_InitiativeTypeCode> <DS_InitiativeTypeCode> <MD_ClassificationCode> <MD_ClassificationCode> <MD_RestrictionCode> <MD_RestrictionCode> <MD_DistributionUnits> <MD_DistributionUnits> <MD_MediumFormatCode> <MD_MediumFormatCode> <MD_MediumNameCode> <MD_MediumNameCode> <MD_MaintenanceFrequencyCode> <MD_MaintenanceFrequencyCode> <MD_ScopeCode> <MD_ScopeCode> <LocalisedCharacterString> <LocalisedCharacterString> <LanguageCode> <LanguageCode> <Country> <Country>
   $int                                  __unionCharacterString        ;	///< Union _gco__union_PT_x005fFreeText_x005fPropertyType selector: set to SOAP_UNION__gco__union_PT_x005fFreeText_x005fPropertyType_<fieldname>
/// Union for substitutionGroup gco__CharacterString.
    union _gco__union_PT_x005fFreeText_x005fPropertyType
    {
/// Element reference "http://www.isotc211.org/2005/gco:""http://www.isotc211.org/2005/gco":CharacterString.
    std::string*                         CharacterString                nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.isotc211.org/2005/gmd":MD_PixelOrientationCode.
    enum gmd__MD_x005fPixelOrientationCode_x005fType  gmd__MD_x005fPixelOrientationCode 1;	///< Required element.
/// Element "http://www.isotc211.org/2005/gmd":MD_PixelOrientationCode.
    enum gmd__MD_x005fPixelOrientationCode_x005fType  gmd__MD_x005fPixelOrientationCode 1;	///< Required element.
/// Element "http://www.isotc211.org/2005/gmd":MD_TopologyLevelCode.
    gco__CodeListValue_x005fType*        gmd__MD_x005fTopologyLevelCode nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.isotc211.org/2005/gmd":MD_TopologyLevelCode.
    gco__CodeListValue_x005fType*        gmd__MD_x005fTopologyLevelCode nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.isotc211.org/2005/gmd":MD_GeometricObjectTypeCode.
    gco__CodeListValue_x005fType*        gmd__MD_x005fGeometricObjectTypeCode nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.isotc211.org/2005/gmd":MD_GeometricObjectTypeCode.
    gco__CodeListValue_x005fType*        gmd__MD_x005fGeometricObjectTypeCode nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.isotc211.org/2005/gmd":MD_CellGeometryCode.
    gco__CodeListValue_x005fType*        gmd__MD_x005fCellGeometryCode  nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.isotc211.org/2005/gmd":MD_CellGeometryCode.
    gco__CodeListValue_x005fType*        gmd__MD_x005fCellGeometryCode  nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.isotc211.org/2005/gmd":MD_DimensionNameTypeCode.
    gco__CodeListValue_x005fType*        gmd__MD_x005fDimensionNameTypeCode nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.isotc211.org/2005/gmd":MD_DimensionNameTypeCode.
    gco__CodeListValue_x005fType*        gmd__MD_x005fDimensionNameTypeCode nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.isotc211.org/2005/gmd":CI_RoleCode.
    gco__CodeListValue_x005fType*        gmd__CI_x005fRoleCode          nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.isotc211.org/2005/gmd":CI_RoleCode.
    gco__CodeListValue_x005fType*        gmd__CI_x005fRoleCode          nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.isotc211.org/2005/gmd":CI_PresentationFormCode.
    gco__CodeListValue_x005fType*        gmd__CI_x005fPresentationFormCode nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.isotc211.org/2005/gmd":CI_PresentationFormCode.
    gco__CodeListValue_x005fType*        gmd__CI_x005fPresentationFormCode nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.isotc211.org/2005/gmd":CI_OnLineFunctionCode.
    gco__CodeListValue_x005fType*        gmd__CI_x005fOnLineFunctionCode nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.isotc211.org/2005/gmd":CI_OnLineFunctionCode.
    gco__CodeListValue_x005fType*        gmd__CI_x005fOnLineFunctionCode nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.isotc211.org/2005/gmd":CI_DateTypeCode.
    gco__CodeListValue_x005fType*        gmd__CI_x005fDateTypeCode      nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.isotc211.org/2005/gmd":CI_DateTypeCode.
    gco__CodeListValue_x005fType*        gmd__CI_x005fDateTypeCode      nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.isotc211.org/2005/gmd":MD_ObligationCode.
    enum gmd__MD_x005fObligationCode_x005fType  gmd__MD_x005fObligationCode    1;	///< Required element.
/// Element "http://www.isotc211.org/2005/gmd":MD_ObligationCode.
    enum gmd__MD_x005fObligationCode_x005fType  gmd__MD_x005fObligationCode    1;	///< Required element.
/// Element "http://www.isotc211.org/2005/gmd":MD_DatatypeCode.
    gco__CodeListValue_x005fType*        gmd__MD_x005fDatatypeCode      nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.isotc211.org/2005/gmd":MD_DatatypeCode.
    gco__CodeListValue_x005fType*        gmd__MD_x005fDatatypeCode      nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.isotc211.org/2005/gmd":MD_CoverageContentTypeCode.
    gco__CodeListValue_x005fType*        gmd__MD_x005fCoverageContentTypeCode nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.isotc211.org/2005/gmd":MD_CoverageContentTypeCode.
    gco__CodeListValue_x005fType*        gmd__MD_x005fCoverageContentTypeCode nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.isotc211.org/2005/gmd":MD_ImagingConditionCode.
    gco__CodeListValue_x005fType*        gmd__MD_x005fImagingConditionCode nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.isotc211.org/2005/gmd":MD_ImagingConditionCode.
    gco__CodeListValue_x005fType*        gmd__MD_x005fImagingConditionCode nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.isotc211.org/2005/gmd":DQ_EvaluationMethodTypeCode.
    gco__CodeListValue_x005fType*        gmd__DQ_x005fEvaluationMethodTypeCode nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.isotc211.org/2005/gmd":DQ_EvaluationMethodTypeCode.
    gco__CodeListValue_x005fType*        gmd__DQ_x005fEvaluationMethodTypeCode nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.isotc211.org/2005/gmd":MD_TopicCategoryCode.
    enum gmd__MD_x005fTopicCategoryCode_x005fType  gmd__MD_x005fTopicCategoryCode 1;	///< Required element.
/// Element "http://www.isotc211.org/2005/gmd":MD_TopicCategoryCode.
    enum gmd__MD_x005fTopicCategoryCode_x005fType  gmd__MD_x005fTopicCategoryCode 1;	///< Required element.
/// Element "http://www.isotc211.org/2005/gmd":MD_CharacterSetCode.
    gco__CodeListValue_x005fType*        gmd__MD_x005fCharacterSetCode  nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.isotc211.org/2005/gmd":MD_CharacterSetCode.
    gco__CodeListValue_x005fType*        gmd__MD_x005fCharacterSetCode  nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.isotc211.org/2005/gmd":MD_SpatialRepresentationTypeCode.
    gco__CodeListValue_x005fType*        gmd__MD_x005fSpatialRepresentationTypeCode nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.isotc211.org/2005/gmd":MD_SpatialRepresentationTypeCode.
    gco__CodeListValue_x005fType*        gmd__MD_x005fSpatialRepresentationTypeCode nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.isotc211.org/2005/gmd":MD_ProgressCode.
    gco__CodeListValue_x005fType*        gmd__MD_x005fProgressCode      nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.isotc211.org/2005/gmd":MD_ProgressCode.
    gco__CodeListValue_x005fType*        gmd__MD_x005fProgressCode      nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.isotc211.org/2005/gmd":MD_KeywordTypeCode.
    gco__CodeListValue_x005fType*        gmd__MD_x005fKeywordTypeCode   nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.isotc211.org/2005/gmd":MD_KeywordTypeCode.
    gco__CodeListValue_x005fType*        gmd__MD_x005fKeywordTypeCode   nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.isotc211.org/2005/gmd":DS_AssociationTypeCode.
    gco__CodeListValue_x005fType*        gmd__DS_x005fAssociationTypeCode nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.isotc211.org/2005/gmd":DS_AssociationTypeCode.
    gco__CodeListValue_x005fType*        gmd__DS_x005fAssociationTypeCode nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.isotc211.org/2005/gmd":DS_InitiativeTypeCode.
    gco__CodeListValue_x005fType*        gmd__DS_x005fInitiativeTypeCode nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.isotc211.org/2005/gmd":DS_InitiativeTypeCode.
    gco__CodeListValue_x005fType*        gmd__DS_x005fInitiativeTypeCode nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.isotc211.org/2005/gmd":MD_ClassificationCode.
    gco__CodeListValue_x005fType*        gmd__MD_x005fClassificationCode nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.isotc211.org/2005/gmd":MD_ClassificationCode.
    gco__CodeListValue_x005fType*        gmd__MD_x005fClassificationCode nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.isotc211.org/2005/gmd":MD_RestrictionCode.
    gco__CodeListValue_x005fType*        gmd__MD_x005fRestrictionCode   nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.isotc211.org/2005/gmd":MD_RestrictionCode.
    gco__CodeListValue_x005fType*        gmd__MD_x005fRestrictionCode   nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.isotc211.org/2005/gmd":MD_DistributionUnits.
    gco__CodeListValue_x005fType*        gmd__MD_x005fDistributionUnits nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.isotc211.org/2005/gmd":MD_DistributionUnits.
    gco__CodeListValue_x005fType*        gmd__MD_x005fDistributionUnits nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.isotc211.org/2005/gmd":MD_MediumFormatCode.
    gco__CodeListValue_x005fType*        gmd__MD_x005fMediumFormatCode  nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.isotc211.org/2005/gmd":MD_MediumFormatCode.
    gco__CodeListValue_x005fType*        gmd__MD_x005fMediumFormatCode  nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.isotc211.org/2005/gmd":MD_MediumNameCode.
    gco__CodeListValue_x005fType*        gmd__MD_x005fMediumNameCode    nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.isotc211.org/2005/gmd":MD_MediumNameCode.
    gco__CodeListValue_x005fType*        gmd__MD_x005fMediumNameCode    nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.isotc211.org/2005/gmd":MD_MaintenanceFrequencyCode.
    gco__CodeListValue_x005fType*        gmd__MD_x005fMaintenanceFrequencyCode nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.isotc211.org/2005/gmd":MD_MaintenanceFrequencyCode.
    gco__CodeListValue_x005fType*        gmd__MD_x005fMaintenanceFrequencyCode nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.isotc211.org/2005/gmd":MD_ScopeCode.
    gco__CodeListValue_x005fType*        gmd__MD_x005fScopeCode         nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.isotc211.org/2005/gmd":MD_ScopeCode.
    gco__CodeListValue_x005fType*        gmd__MD_x005fScopeCode         nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.isotc211.org/2005/gmd":LocalisedCharacterString.
    gmd__LocalisedCharacterString_x005fType*  gmd__LocalisedCharacterString  nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.isotc211.org/2005/gmd":LocalisedCharacterString.
    gmd__LocalisedCharacterString_x005fType*  gmd__LocalisedCharacterString  nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.isotc211.org/2005/gmd":LanguageCode.
    gco__CodeListValue_x005fType*        gmd__LanguageCode              nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.isotc211.org/2005/gmd":LanguageCode.
    gco__CodeListValue_x005fType*        gmd__LanguageCode              nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.isotc211.org/2005/gmd":Country.
    gco__CodeListValue_x005fType*        gmd__Country                   nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.isotc211.org/2005/gmd":Country.
    gco__CodeListValue_x005fType*        gmd__Country                   nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_PT_x005fFreeText_x005fPropertyType;
//  END OF SUBSTITUTIONS
    }                                   *__PT_x005fFreeText_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
/// Attribute reference "http://www.isotc211.org/2005/gco":"http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
    END OF INHERITED FROM gco__CharacterString_x005fPropertyType */
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gmd__PT_x005fFreeText_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd:""http://www.isotc211.org/2005/gmd":PT_FreeText.
    gmd__PT_x005fFreeText_x005fType*     PT_x005fFreeText               1;	///< Required element.
    }                                   *__PT_x005fFreeText_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
};

/// @brief "http://www.isotc211.org/2005/gmd":PT_Locale_Type is a complexType with complexContent extension of XSD type "http://www.isotc211.org/2005/gco":AbstractObject_Type.
///
/// class gmd__PT_x005fLocale_x005fType operations:
/// - gmd__PT_x005fLocale_x005fType* soap_new_gmd__PT_x005fLocale_x005fType(soap*) allocate and default initialize
/// - gmd__PT_x005fLocale_x005fType* soap_new_gmd__PT_x005fLocale_x005fType(soap*, int num) allocate array and default initialize values
/// - gmd__PT_x005fLocale_x005fType* soap_new_req_gmd__PT_x005fLocale_x005fType(soap*, ...) allocate, set required members
/// - gmd__PT_x005fLocale_x005fType* soap_new_set_gmd__PT_x005fLocale_x005fType(soap*, ...) allocate, set all public members
/// - gmd__PT_x005fLocale_x005fType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__PT_x005fLocale_x005fType(soap*, gmd__PT_x005fLocale_x005fType*) deserialize from a stream
/// - int soap_write_gmd__PT_x005fLocale_x005fType(soap*, gmd__PT_x005fLocale_x005fType*) serialize to a stream
/// - gmd__PT_x005fLocale_x005fType* gmd__PT_x005fLocale_x005fType::soap_dup(soap*) returns deep copy of gmd__PT_x005fLocale_x005fType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__PT_x005fLocale_x005fType::soap_del() deep deletes gmd__PT_x005fLocale_x005fType data members, use only after gmd__PT_x005fLocale_x005fType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__PT_x005fLocale_x005fType : public gco__AbstractObject_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectIdentification">.
/// Attribute "id" of XSD type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute "uuid" of XSD type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/// Element "languageCode" of XSD type "http://www.isotc211.org/2005/gmd":LanguageCode_PropertyType.
    gmd__LanguageCode_x005fPropertyType*  languageCode                   1;	///< Required element.
/// Element "country" of XSD type "http://www.isotc211.org/2005/gmd":Country_PropertyType.
    gmd__Country_x005fPropertyType*      country                        0;	///< Optional element.
/// Element "characterEncoding" of XSD type "http://www.isotc211.org/2005/gmd":MD_CharacterSetCode_PropertyType.
    gmd__MD_x005fCharacterSetCode_x005fPropertyType*  characterEncoding              1;	///< Required element.
};

/// @brief "http://www.isotc211.org/2005/gmd":LocalisedCharacterString_Type is a complexType with simpleContent.
///
/// class gmd__LocalisedCharacterString_x005fType operations:
/// - gmd__LocalisedCharacterString_x005fType* soap_new_gmd__LocalisedCharacterString_x005fType(soap*) allocate and default initialize
/// - gmd__LocalisedCharacterString_x005fType* soap_new_gmd__LocalisedCharacterString_x005fType(soap*, int num) allocate array and default initialize values
/// - gmd__LocalisedCharacterString_x005fType* soap_new_req_gmd__LocalisedCharacterString_x005fType(soap*, ...) allocate, set required members
/// - gmd__LocalisedCharacterString_x005fType* soap_new_set_gmd__LocalisedCharacterString_x005fType(soap*, ...) allocate, set all public members
/// - gmd__LocalisedCharacterString_x005fType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__LocalisedCharacterString_x005fType(soap*, gmd__LocalisedCharacterString_x005fType*) deserialize from a stream
/// - int soap_write_gmd__LocalisedCharacterString_x005fType(soap*, gmd__LocalisedCharacterString_x005fType*) serialize to a stream
/// - gmd__LocalisedCharacterString_x005fType* gmd__LocalisedCharacterString_x005fType::soap_dup(soap*) returns deep copy of gmd__LocalisedCharacterString_x005fType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__LocalisedCharacterString_x005fType::soap_del() deep deletes gmd__LocalisedCharacterString_x005fType data members, use only after gmd__LocalisedCharacterString_x005fType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__LocalisedCharacterString_x005fType : public xsd__anyType
{ public:
/// __item wraps "xs:string" simpleContent.
    std::string                          __item                        ;
/// Attribute "id" of XSD type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute "locale" of XSD type xs:anyURI.
   @xsd__anyURI*                         locale                         0;	///< Optional attribute.
};

/// @brief "http://www.isotc211.org/2005/gmd":LocalisedCharacterString_PropertyType is a complexType with complexContent extension of XSD type "http://www.isotc211.org/2005/gco":ObjectReference_PropertyType.
///
/// class gmd__LocalisedCharacterString_x005fPropertyType operations:
/// - gmd__LocalisedCharacterString_x005fPropertyType* soap_new_gmd__LocalisedCharacterString_x005fPropertyType(soap*) allocate and default initialize
/// - gmd__LocalisedCharacterString_x005fPropertyType* soap_new_gmd__LocalisedCharacterString_x005fPropertyType(soap*, int num) allocate array and default initialize values
/// - gmd__LocalisedCharacterString_x005fPropertyType* soap_new_req_gmd__LocalisedCharacterString_x005fPropertyType(soap*, ...) allocate, set required members
/// - gmd__LocalisedCharacterString_x005fPropertyType* soap_new_set_gmd__LocalisedCharacterString_x005fPropertyType(soap*, ...) allocate, set all public members
/// - gmd__LocalisedCharacterString_x005fPropertyType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__LocalisedCharacterString_x005fPropertyType(soap*, gmd__LocalisedCharacterString_x005fPropertyType*) deserialize from a stream
/// - int soap_write_gmd__LocalisedCharacterString_x005fPropertyType(soap*, gmd__LocalisedCharacterString_x005fPropertyType*) serialize to a stream
/// - gmd__LocalisedCharacterString_x005fPropertyType* gmd__LocalisedCharacterString_x005fPropertyType::soap_dup(soap*) returns deep copy of gmd__LocalisedCharacterString_x005fPropertyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__LocalisedCharacterString_x005fPropertyType::soap_del() deep deletes gmd__LocalisedCharacterString_x005fPropertyType data members, use only after gmd__LocalisedCharacterString_x005fPropertyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__LocalisedCharacterString_x005fPropertyType : public gco__ObjectReference_x005fPropertyType
{ public:
/*  INHERITED FROM gco__ObjectReference_x005fPropertyType:
/// Attribute reference "http://www.isotc211.org/2005/gco":"http://www.isotc211.org/2005/gco":nilReason.
   @gml__NilReasonType*                  gco__nilReason                 0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectReference">.
/// Attribute "uuidref" of XSD type xs:string.
   @std::string*                         uuidref                        0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
    END OF INHERITED FROM gco__ObjectReference_x005fPropertyType */
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __gmd__LocalisedCharacterString_x005fPropertyType_sequence
    {
/// Element reference "http://www.isotc211.org/2005/gmd:""http://www.isotc211.org/2005/gmd":LocalisedCharacterString.
    gmd__LocalisedCharacterString_x005fType*  LocalisedCharacterString       1;	///< Required element.
    }                                   *__LocalisedCharacterString_x005fPropertyType_sequence 0;
//  END OF SEQUENCE
};

/// @brief "http://www.isotc211.org/2005/gco":TypeName_Type is a complexType with complexContent extension of XSD type "http://www.isotc211.org/2005/gco":AbstractObject_Type.
///
/// <PRE><BLOCKQUOTE>
///   A TypeName is a LocalName that references either a recordType or object type in some form of schema. The stored value "aName" is the returned value for the "aName()" operation. This is the types name. - For parsing from types (or objects) the parsible name normally uses a "." navigation separator, so that it is of the form [class].[member].[memberOfMember]. ...)
/// </BLOCKQUOTE></PRE>
/// class gco__TypeName_x005fType operations:
/// - gco__TypeName_x005fType* soap_new_gco__TypeName_x005fType(soap*) allocate and default initialize
/// - gco__TypeName_x005fType* soap_new_gco__TypeName_x005fType(soap*, int num) allocate array and default initialize values
/// - gco__TypeName_x005fType* soap_new_req_gco__TypeName_x005fType(soap*, ...) allocate, set required members
/// - gco__TypeName_x005fType* soap_new_set_gco__TypeName_x005fType(soap*, ...) allocate, set all public members
/// - gco__TypeName_x005fType::soap_default(soap*) default initialize members
/// - int soap_read_gco__TypeName_x005fType(soap*, gco__TypeName_x005fType*) deserialize from a stream
/// - int soap_write_gco__TypeName_x005fType(soap*, gco__TypeName_x005fType*) serialize to a stream
/// - gco__TypeName_x005fType* gco__TypeName_x005fType::soap_dup(soap*) returns deep copy of gco__TypeName_x005fType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gco__TypeName_x005fType::soap_del() deep deletes gco__TypeName_x005fType data members, use only after gco__TypeName_x005fType::soap_dup(NULL) (use soapcpp2 -Ed)
class gco__TypeName_x005fType : public gco__AbstractObject_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectIdentification">.
/// Attribute "id" of XSD type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute "uuid" of XSD type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/// Element "aName" of XSD type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  aName                          1;	///< Required element.
};

/// @brief "http://www.isotc211.org/2005/gco":MemberName_Type is a complexType with complexContent extension of XSD type "http://www.isotc211.org/2005/gco":AbstractObject_Type.
///
/// <PRE><BLOCKQUOTE>
///   A MemberName is a LocalName that references either an attribute slot in a record or recordType or an attribute, operation, or association role in an object instance or type description in some form of schema. The stored value "aName" is the returned value for the "aName()" operation.
/// </BLOCKQUOTE></PRE>
/// class gco__MemberName_x005fType operations:
/// - gco__MemberName_x005fType* soap_new_gco__MemberName_x005fType(soap*) allocate and default initialize
/// - gco__MemberName_x005fType* soap_new_gco__MemberName_x005fType(soap*, int num) allocate array and default initialize values
/// - gco__MemberName_x005fType* soap_new_req_gco__MemberName_x005fType(soap*, ...) allocate, set required members
/// - gco__MemberName_x005fType* soap_new_set_gco__MemberName_x005fType(soap*, ...) allocate, set all public members
/// - gco__MemberName_x005fType::soap_default(soap*) default initialize members
/// - int soap_read_gco__MemberName_x005fType(soap*, gco__MemberName_x005fType*) deserialize from a stream
/// - int soap_write_gco__MemberName_x005fType(soap*, gco__MemberName_x005fType*) serialize to a stream
/// - gco__MemberName_x005fType* gco__MemberName_x005fType::soap_dup(soap*) returns deep copy of gco__MemberName_x005fType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gco__MemberName_x005fType::soap_del() deep deletes gco__MemberName_x005fType data members, use only after gco__MemberName_x005fType::soap_dup(NULL) (use soapcpp2 -Ed)
class gco__MemberName_x005fType : public gco__AbstractObject_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectIdentification">.
/// Attribute "id" of XSD type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute "uuid" of XSD type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/// Element "aName" of XSD type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  aName                          1;	///< Required element.
/// Element "attributeType" of XSD type "http://www.isotc211.org/2005/gco":TypeName_PropertyType.
    gco__TypeName_x005fPropertyType*     attributeType                  1;	///< Required element.
};

/// @brief "http://www.isotc211.org/2005/gco":Multiplicity_Type is a complexType with complexContent extension of XSD type "http://www.isotc211.org/2005/gco":AbstractObject_Type.
///
/// <PRE><BLOCKQUOTE>
///   Use to represent the possible cardinality of a relation. Represented by a set of simple multiplicity ranges.
/// </BLOCKQUOTE></PRE>
/// class gco__Multiplicity_x005fType operations:
/// - gco__Multiplicity_x005fType* soap_new_gco__Multiplicity_x005fType(soap*) allocate and default initialize
/// - gco__Multiplicity_x005fType* soap_new_gco__Multiplicity_x005fType(soap*, int num) allocate array and default initialize values
/// - gco__Multiplicity_x005fType* soap_new_req_gco__Multiplicity_x005fType(soap*, ...) allocate, set required members
/// - gco__Multiplicity_x005fType* soap_new_set_gco__Multiplicity_x005fType(soap*, ...) allocate, set all public members
/// - gco__Multiplicity_x005fType::soap_default(soap*) default initialize members
/// - int soap_read_gco__Multiplicity_x005fType(soap*, gco__Multiplicity_x005fType*) deserialize from a stream
/// - int soap_write_gco__Multiplicity_x005fType(soap*, gco__Multiplicity_x005fType*) serialize to a stream
/// - gco__Multiplicity_x005fType* gco__Multiplicity_x005fType::soap_dup(soap*) returns deep copy of gco__Multiplicity_x005fType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gco__Multiplicity_x005fType::soap_del() deep deletes gco__Multiplicity_x005fType data members, use only after gco__Multiplicity_x005fType::soap_dup(NULL) (use soapcpp2 -Ed)
class gco__Multiplicity_x005fType : public gco__AbstractObject_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectIdentification">.
/// Attribute "id" of XSD type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute "uuid" of XSD type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/// Vector of gco__MultiplicityRange_x005fPropertyType* of length 1..unbounded.
    std::vector<gco__MultiplicityRange_x005fPropertyType*> range                          1;
};

/// @brief "http://www.isotc211.org/2005/gco":MultiplicityRange_Type is a complexType with complexContent extension of XSD type "http://www.isotc211.org/2005/gco":AbstractObject_Type.
///
/// <PRE><BLOCKQUOTE>
///   A component of a multiplicity, consisting of an non-negative lower bound, and a potentially infinite upper bound.
/// </BLOCKQUOTE></PRE>
/// class gco__MultiplicityRange_x005fType operations:
/// - gco__MultiplicityRange_x005fType* soap_new_gco__MultiplicityRange_x005fType(soap*) allocate and default initialize
/// - gco__MultiplicityRange_x005fType* soap_new_gco__MultiplicityRange_x005fType(soap*, int num) allocate array and default initialize values
/// - gco__MultiplicityRange_x005fType* soap_new_req_gco__MultiplicityRange_x005fType(soap*, ...) allocate, set required members
/// - gco__MultiplicityRange_x005fType* soap_new_set_gco__MultiplicityRange_x005fType(soap*, ...) allocate, set all public members
/// - gco__MultiplicityRange_x005fType::soap_default(soap*) default initialize members
/// - int soap_read_gco__MultiplicityRange_x005fType(soap*, gco__MultiplicityRange_x005fType*) deserialize from a stream
/// - int soap_write_gco__MultiplicityRange_x005fType(soap*, gco__MultiplicityRange_x005fType*) serialize to a stream
/// - gco__MultiplicityRange_x005fType* gco__MultiplicityRange_x005fType::soap_dup(soap*) returns deep copy of gco__MultiplicityRange_x005fType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gco__MultiplicityRange_x005fType::soap_del() deep deletes gco__MultiplicityRange_x005fType data members, use only after gco__MultiplicityRange_x005fType::soap_dup(NULL) (use soapcpp2 -Ed)
class gco__MultiplicityRange_x005fType : public gco__AbstractObject_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectIdentification">.
/// Attribute "id" of XSD type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute "uuid" of XSD type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/// Element "lower" of XSD type "http://www.isotc211.org/2005/gco":Integer_PropertyType.
    gco__Integer_x005fPropertyType*      lower                          1;	///< Required element.
/// Element "upper" of XSD type "http://www.isotc211.org/2005/gco":UnlimitedInteger_PropertyType.
    gco__UnlimitedInteger_x005fPropertyType*  upper                          1;	///< Required element.
};

/// @brief "http://www.isotc211.org/2005/gco":UnlimitedInteger_Type is a complexType with simpleContent.
///
/// class gco__UnlimitedInteger_x005fType operations:
/// - gco__UnlimitedInteger_x005fType* soap_new_gco__UnlimitedInteger_x005fType(soap*) allocate and default initialize
/// - gco__UnlimitedInteger_x005fType* soap_new_gco__UnlimitedInteger_x005fType(soap*, int num) allocate array and default initialize values
/// - gco__UnlimitedInteger_x005fType* soap_new_req_gco__UnlimitedInteger_x005fType(soap*, ...) allocate, set required members
/// - gco__UnlimitedInteger_x005fType* soap_new_set_gco__UnlimitedInteger_x005fType(soap*, ...) allocate, set all public members
/// - gco__UnlimitedInteger_x005fType::soap_default(soap*) default initialize members
/// - int soap_read_gco__UnlimitedInteger_x005fType(soap*, gco__UnlimitedInteger_x005fType*) deserialize from a stream
/// - int soap_write_gco__UnlimitedInteger_x005fType(soap*, gco__UnlimitedInteger_x005fType*) serialize to a stream
/// - gco__UnlimitedInteger_x005fType* gco__UnlimitedInteger_x005fType::soap_dup(soap*) returns deep copy of gco__UnlimitedInteger_x005fType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gco__UnlimitedInteger_x005fType::soap_del() deep deletes gco__UnlimitedInteger_x005fType data members, use only after gco__UnlimitedInteger_x005fType::soap_dup(NULL) (use soapcpp2 -Ed)
class gco__UnlimitedInteger_x005fType : public xsd__anyType
{ public:
/// __item wraps "xs:nonNegativeInteger" simpleContent.
    xsd__nonNegativeInteger              __item                        ;
/// Attribute "isInfinite" of XSD type xs:boolean.
   @bool*                                isInfinite                     0;	///< Optional attribute.
};

/// @brief "http://www.isotc211.org/2005/gco":RecordType_Type is a complexType with simpleContent.
///
/// class gco__RecordType_x005fType operations:
/// - gco__RecordType_x005fType* soap_new_gco__RecordType_x005fType(soap*) allocate and default initialize
/// - gco__RecordType_x005fType* soap_new_gco__RecordType_x005fType(soap*, int num) allocate array and default initialize values
/// - gco__RecordType_x005fType* soap_new_req_gco__RecordType_x005fType(soap*, ...) allocate, set required members
/// - gco__RecordType_x005fType* soap_new_set_gco__RecordType_x005fType(soap*, ...) allocate, set all public members
/// - gco__RecordType_x005fType::soap_default(soap*) default initialize members
/// - int soap_read_gco__RecordType_x005fType(soap*, gco__RecordType_x005fType*) deserialize from a stream
/// - int soap_write_gco__RecordType_x005fType(soap*, gco__RecordType_x005fType*) serialize to a stream
/// - gco__RecordType_x005fType* gco__RecordType_x005fType::soap_dup(soap*) returns deep copy of gco__RecordType_x005fType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gco__RecordType_x005fType::soap_del() deep deletes gco__RecordType_x005fType data members, use only after gco__RecordType_x005fType::soap_dup(NULL) (use soapcpp2 -Ed)
class gco__RecordType_x005fType : public xsd__anyType
{ public:
/// __item wraps "xs:string" simpleContent.
    std::string                          __item                        ;
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.isotc211.org/2005/gco":Binary_Type is a complexType with simpleContent.
///
/// class gco__Binary_x005fType operations:
/// - gco__Binary_x005fType* soap_new_gco__Binary_x005fType(soap*) allocate and default initialize
/// - gco__Binary_x005fType* soap_new_gco__Binary_x005fType(soap*, int num) allocate array and default initialize values
/// - gco__Binary_x005fType* soap_new_req_gco__Binary_x005fType(soap*, ...) allocate, set required members
/// - gco__Binary_x005fType* soap_new_set_gco__Binary_x005fType(soap*, ...) allocate, set all public members
/// - gco__Binary_x005fType::soap_default(soap*) default initialize members
/// - int soap_read_gco__Binary_x005fType(soap*, gco__Binary_x005fType*) deserialize from a stream
/// - int soap_write_gco__Binary_x005fType(soap*, gco__Binary_x005fType*) serialize to a stream
/// - gco__Binary_x005fType* gco__Binary_x005fType::soap_dup(soap*) returns deep copy of gco__Binary_x005fType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gco__Binary_x005fType::soap_del() deep deletes gco__Binary_x005fType data members, use only after gco__Binary_x005fType::soap_dup(NULL) (use soapcpp2 -Ed)
class gco__Binary_x005fType : public xsd__anyType
{ public:
/// __item wraps "xs:string" simpleContent.
    std::string                          __item                        ;
/// Attribute "src" of XSD type xs:anyURI.
   @xsd__anyURI*                         src                            0;	///< Optional attribute.
};

/// @brief "http://www.isotc211.org/2005/gco":CodeListValue_Type is a complexType with simpleContent.
///
/// class gco__CodeListValue_x005fType operations:
/// - gco__CodeListValue_x005fType* soap_new_gco__CodeListValue_x005fType(soap*) allocate and default initialize
/// - gco__CodeListValue_x005fType* soap_new_gco__CodeListValue_x005fType(soap*, int num) allocate array and default initialize values
/// - gco__CodeListValue_x005fType* soap_new_req_gco__CodeListValue_x005fType(soap*, ...) allocate, set required members
/// - gco__CodeListValue_x005fType* soap_new_set_gco__CodeListValue_x005fType(soap*, ...) allocate, set all public members
/// - gco__CodeListValue_x005fType::soap_default(soap*) default initialize members
/// - int soap_read_gco__CodeListValue_x005fType(soap*, gco__CodeListValue_x005fType*) deserialize from a stream
/// - int soap_write_gco__CodeListValue_x005fType(soap*, gco__CodeListValue_x005fType*) serialize to a stream
/// - gco__CodeListValue_x005fType* gco__CodeListValue_x005fType::soap_dup(soap*) returns deep copy of gco__CodeListValue_x005fType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gco__CodeListValue_x005fType::soap_del() deep deletes gco__CodeListValue_x005fType data members, use only after gco__CodeListValue_x005fType::soap_dup(NULL) (use soapcpp2 -Ed)
class gco__CodeListValue_x005fType : public xsd__anyType
{ public:
/// __item wraps "xs:string" simpleContent.
    std::string                          __item                        ;
/// Attribute "codeList" of XSD type xs:anyURI.
   @xsd__anyURI                          codeList                       1;	///< Required attribute.
/// Attribute "codeListValue" of XSD type xs:anyURI.
   @xsd__anyURI                          codeListValue                  1;	///< Required attribute.
/// Attribute "codeSpace" of XSD type xs:anyURI.
   @xsd__anyURI*                         codeSpace                      0;	///< Optional attribute.
};

/// @brief "http://inspire.ec.europa.eu/schemas/plu/3.0":ZoningElementType is a complexType with complexContent extension of XSD type "http://www.opengis.net/gml/3.2":AbstractFeatureType.
///
/// class plu__ZoningElementType operations:
/// - plu__ZoningElementType* soap_new_plu__ZoningElementType(soap*) allocate and default initialize
/// - plu__ZoningElementType* soap_new_plu__ZoningElementType(soap*, int num) allocate array and default initialize values
/// - plu__ZoningElementType* soap_new_req_plu__ZoningElementType(soap*, ...) allocate, set required members
/// - plu__ZoningElementType* soap_new_set_plu__ZoningElementType(soap*, ...) allocate, set all public members
/// - plu__ZoningElementType::soap_default(soap*) default initialize members
/// - int soap_read_plu__ZoningElementType(soap*, plu__ZoningElementType*) deserialize from a stream
/// - int soap_write_plu__ZoningElementType(soap*, plu__ZoningElementType*) serialize to a stream
/// - plu__ZoningElementType* plu__ZoningElementType::soap_dup(soap*) returns deep copy of plu__ZoningElementType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - plu__ZoningElementType::soap_del() deep deletes plu__ZoningElementType data members, use only after plu__ZoningElementType::soap_dup(NULL) (use soapcpp2 -Ed)
class plu__ZoningElementType : public gml__AbstractFeatureType
{ public:
/*  INHERITED FROM gml__AbstractGMLType:
//  BEGIN GROUP <xs:group name="StandardObjectProperties">
/// Vector of gml__MetaDataPropertyType* element refs of length 0..unbounded.
    std::vector<gml__MetaDataPropertyType*> metaDataProperty               0;
/// <PRE><BLOCKQUOTE>
///   The value of this property is a text description of the object. gml:description uses gml:StringOrRefType as its content model, so it may contain a simple text string content, or carry a reference to an external description. The use of gml:description to reference an external description has been deprecated and replaced by the gml:descriptionReference property.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":description.
    gml__StringOrRefType*                description                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The value of this property is a remote text description of the object. The xlink:href attribute of the gml:descriptionReference property references the external description.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":descriptionReference.
    gml__ReferenceType*                  descriptionReference           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Often, a special identifier is assigned to an object by the maintaining authority with the intention that it is used in references to the object For such cases, the codeSpace shall be provided. That identifier is usually unique either globally or within an application domain. gml:identifier is a pre-defined property for such identifiers.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":identifier.
    gml__CodeWithAuthorityType*          identifier                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The gml:name property provides a label or identifier for the object, commonly a descriptive name. An object may have several names, typically assigned by different authorities. gml:name uses the gml:CodeType content model. The authority for a name is indicated by the value of its (optional) codeSpace attribute. The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace. In common usage there will be one name per authority, so a processing application may select the name from its preferred codeSpace.
/// </BLOCKQUOTE></PRE>
/// Vector of gml__CodeType* element refs of length 0..unbounded.
    std::vector<gml__CodeType*         > name                           0;
//  END OF GROUP
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":id.
/// <PRE><BLOCKQUOTE>
///   The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.
/// </BLOCKQUOTE></PRE>
   @xsd__ID*                             gml__id                        0;	///< Optional attribute.
    END OF INHERITED FROM gml__AbstractGMLType */
/*  INHERITED FROM gml__AbstractFeatureType:
/// <PRE><BLOCKQUOTE>
///   This property describes the minimum bounding box or rectangle that encloses the entire feature.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":boundedBy.
    gml__BoundingShapeType*              boundedBy                      0;	///< Optional element.
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="location" minOccurs="0"> with global elements <priorityLocation>
   $int                                  __unionlocation                0;	///< Union _gml__union_ZoningElementType selector: set to SOAP_UNION__gml__union_ZoningElementType_<fieldname> or 0 to omit
/// Union for substitutionGroup gml__location.
    union _gml__union_ZoningElementType
    {
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":location.
    gml__LocationPropertyType*           location                       0;	///< Optional element.
/// Element "http://www.opengis.net/gml/3.2":priorityLocation.
    gml__PriorityLocationPropertyType*   priorityLocation               nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_ZoningElementType       ;
//  END OF SUBSTITUTIONS
    END OF INHERITED FROM gml__AbstractFeatureType */
/// <PRE><BLOCKQUOTE>
///   -- Definition --
///   External object identifier of the spatial object.
///   -- Description --
///   An external object identifier is a unique object identifier published by the responsible body, which may be used by external applications to reference the spatial object. The identifier is an identifier of the spatial object, not an identifier of the real-world phenomenon.
/// </BLOCKQUOTE></PRE>
/// Element "inspireId" of XSD type "http://inspire.ec.europa.eu/schemas/base/3.3":IdentifierPropertyType.
    base__IdentifierPropertyType*        inspireId                      1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   -- Definition --
///   Geometry of this zoning element
/// </BLOCKQUOTE></PRE>
/// Element "geometry" of XSD type "http://www.opengis.net/gml/3.2":MultiSurfacePropertyType.
    gml__MultiSurfacePropertyType*       geometry                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   -- Definition --
///   The date when the phenomenon started to exist in the real world.
/// </BLOCKQUOTE></PRE>
/// class _plu__ZoningElementType_validFrom operations:
/// - _plu__ZoningElementType_validFrom* soap_new__plu__ZoningElementType_validFrom(soap*) allocate and default initialize
/// - _plu__ZoningElementType_validFrom* soap_new__plu__ZoningElementType_validFrom(soap*, int num) allocate array and default initialize values
/// - _plu__ZoningElementType_validFrom* soap_new_req__plu__ZoningElementType_validFrom(soap*, ...) allocate, set required members
/// - _plu__ZoningElementType_validFrom* soap_new_set__plu__ZoningElementType_validFrom(soap*, ...) allocate, set all public members
/// - _plu__ZoningElementType_validFrom::soap_default(soap*) default initialize members
/// - int soap_read__plu__ZoningElementType_validFrom(soap*, _plu__ZoningElementType_validFrom*) deserialize from a stream
/// - int soap_write__plu__ZoningElementType_validFrom(soap*, _plu__ZoningElementType_validFrom*) serialize to a stream
/// - _plu__ZoningElementType_validFrom* _plu__ZoningElementType_validFrom::soap_dup(soap*) returns deep copy of _plu__ZoningElementType_validFrom, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _plu__ZoningElementType_validFrom::soap_del() deep deletes _plu__ZoningElementType_validFrom data members, use only after _plu__ZoningElementType_validFrom::soap_dup(NULL) (use soapcpp2 -Ed)
    class _plu__ZoningElementType_validFrom
    {
/// __item wraps "xs:date" simpleContent.
    xsd__date                            __item                        ;
/// Attribute "nilReason" of XSD type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
    }                                   *validFrom                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   -- Definition --
///   The time from which the phenomenon no longer exists in the real world.
/// </BLOCKQUOTE></PRE>
/// class _plu__ZoningElementType_validTo operations:
/// - _plu__ZoningElementType_validTo* soap_new__plu__ZoningElementType_validTo(soap*) allocate and default initialize
/// - _plu__ZoningElementType_validTo* soap_new__plu__ZoningElementType_validTo(soap*, int num) allocate array and default initialize values
/// - _plu__ZoningElementType_validTo* soap_new_req__plu__ZoningElementType_validTo(soap*, ...) allocate, set required members
/// - _plu__ZoningElementType_validTo* soap_new_set__plu__ZoningElementType_validTo(soap*, ...) allocate, set all public members
/// - _plu__ZoningElementType_validTo::soap_default(soap*) default initialize members
/// - int soap_read__plu__ZoningElementType_validTo(soap*, _plu__ZoningElementType_validTo*) deserialize from a stream
/// - int soap_write__plu__ZoningElementType_validTo(soap*, _plu__ZoningElementType_validTo*) serialize to a stream
/// - _plu__ZoningElementType_validTo* _plu__ZoningElementType_validTo::soap_dup(soap*) returns deep copy of _plu__ZoningElementType_validTo, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _plu__ZoningElementType_validTo::soap_del() deep deletes _plu__ZoningElementType_validTo data members, use only after _plu__ZoningElementType_validTo::soap_dup(NULL) (use soapcpp2 -Ed)
    class _plu__ZoningElementType_validTo
    {
/// __item wraps "xs:date" simpleContent.
    xsd__date                            __item                        ;
/// Attribute "nilReason" of XSD type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
    }                                   *validTo                        0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   -- Definition --
///   Land use HILUCS class that is dominant in this land use object.
/// </BLOCKQUOTE></PRE>
/// Vector of gml__ReferenceType* of length 1..unbounded.
    std::vector<gml__ReferenceType*    > hilucsLandUse                  1;
/// <PRE><BLOCKQUOTE>
///   -- Definition --
///   Date and time at which this version of the spatial object was inserted or changed in the spatial data set.
/// </BLOCKQUOTE></PRE>
/// class _plu__ZoningElementType_beginLifespanVersion operations:
/// - _plu__ZoningElementType_beginLifespanVersion* soap_new__plu__ZoningElementType_beginLifespanVersion(soap*) allocate and default initialize
/// - _plu__ZoningElementType_beginLifespanVersion* soap_new__plu__ZoningElementType_beginLifespanVersion(soap*, int num) allocate array and default initialize values
/// - _plu__ZoningElementType_beginLifespanVersion* soap_new_req__plu__ZoningElementType_beginLifespanVersion(soap*, ...) allocate, set required members
/// - _plu__ZoningElementType_beginLifespanVersion* soap_new_set__plu__ZoningElementType_beginLifespanVersion(soap*, ...) allocate, set all public members
/// - _plu__ZoningElementType_beginLifespanVersion::soap_default(soap*) default initialize members
/// - int soap_read__plu__ZoningElementType_beginLifespanVersion(soap*, _plu__ZoningElementType_beginLifespanVersion*) deserialize from a stream
/// - int soap_write__plu__ZoningElementType_beginLifespanVersion(soap*, _plu__ZoningElementType_beginLifespanVersion*) serialize to a stream
/// - _plu__ZoningElementType_beginLifespanVersion* _plu__ZoningElementType_beginLifespanVersion::soap_dup(soap*) returns deep copy of _plu__ZoningElementType_beginLifespanVersion, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _plu__ZoningElementType_beginLifespanVersion::soap_del() deep deletes _plu__ZoningElementType_beginLifespanVersion data members, use only after _plu__ZoningElementType_beginLifespanVersion::soap_dup(NULL) (use soapcpp2 -Ed)
    class _plu__ZoningElementType_beginLifespanVersion
    {
/// __item wraps "xs:dateTime" simpleContent.
    time_t                               __item                        ;
/// Attribute "nilReason" of XSD type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
    }                                   *beginLifespanVersion           nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   -- Name --
///   land use presence
///   -- Definition --
///   Actual presence of a land use HILUCS category wihtin the object.
/// </BLOCKQUOTE></PRE>
/// class _plu__ZoningElementType_hilucsPresence operations:
/// - _plu__ZoningElementType_hilucsPresence* soap_new__plu__ZoningElementType_hilucsPresence(soap*) allocate and default initialize
/// - _plu__ZoningElementType_hilucsPresence* soap_new__plu__ZoningElementType_hilucsPresence(soap*, int num) allocate array and default initialize values
/// - _plu__ZoningElementType_hilucsPresence* soap_new_req__plu__ZoningElementType_hilucsPresence(soap*, ...) allocate, set required members
/// - _plu__ZoningElementType_hilucsPresence* soap_new_set__plu__ZoningElementType_hilucsPresence(soap*, ...) allocate, set all public members
/// - _plu__ZoningElementType_hilucsPresence::soap_default(soap*) default initialize members
/// - int soap_read__plu__ZoningElementType_hilucsPresence(soap*, _plu__ZoningElementType_hilucsPresence*) deserialize from a stream
/// - int soap_write__plu__ZoningElementType_hilucsPresence(soap*, _plu__ZoningElementType_hilucsPresence*) serialize to a stream
/// - _plu__ZoningElementType_hilucsPresence* _plu__ZoningElementType_hilucsPresence::soap_dup(soap*) returns deep copy of _plu__ZoningElementType_hilucsPresence, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _plu__ZoningElementType_hilucsPresence::soap_del() deep deletes _plu__ZoningElementType_hilucsPresence data members, use only after _plu__ZoningElementType_hilucsPresence::soap_dup(NULL) (use soapcpp2 -Ed)
    class _plu__ZoningElementType_hilucsPresence
    {
/// <PRE><BLOCKQUOTE>
///   -- Name --
///   HILUCS presence
///   -- Definition --
///   Presence of one or several HILUCS values in an area, indicated either as the percentage covered for each value or as the values listed in their order of importance.
///   -- Description --
///   The HILUCS presence data type enables the provision of information on land uses inside one land use object in order to collect more than one land use existence perfectly identifiable by importance order or percentages. NOTE 1: The order of land use value presence without percentages enable providing an order of dominance/importance of each land use present in the land use object
///   NOTE 2: The sum of the percentages can be below 100%, or above. The order is provided according to the respective importance when the percentages are not known.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://inspire.ec.europa.eu/schemas/plu/3.0:""http://inspire.ec.europa.eu/schemas/lunom/3.0":HILUCSPresence.
    lunom__HILUCSPresenceType*           lunom__HILUCSPresence          1;	///< Required element.
/// Attribute "nilReason" of XSD type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
    }                                   *hilucsPresence                 nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   -- Definition --
///   Land Use Category according to the nomenclature specific to this data set.
///   -- Description --
///   Reference to an entry in the classfication that is part of the SpecificLandUseClassification.
/// </BLOCKQUOTE></PRE>
/// Vector of gml__ReferenceType* of length 1..unbounded.
    std::vector<gml__ReferenceType*    > specificLandUse                1;
/// <PRE><BLOCKQUOTE>
///   -- Name --
///   land use presence
///   -- Definition --
///   Actual presence of a land use category wihtin the object.
/// </BLOCKQUOTE></PRE>
/// class _plu__ZoningElementType_specificPresence operations:
/// - _plu__ZoningElementType_specificPresence* soap_new__plu__ZoningElementType_specificPresence(soap*) allocate and default initialize
/// - _plu__ZoningElementType_specificPresence* soap_new__plu__ZoningElementType_specificPresence(soap*, int num) allocate array and default initialize values
/// - _plu__ZoningElementType_specificPresence* soap_new_req__plu__ZoningElementType_specificPresence(soap*, ...) allocate, set required members
/// - _plu__ZoningElementType_specificPresence* soap_new_set__plu__ZoningElementType_specificPresence(soap*, ...) allocate, set all public members
/// - _plu__ZoningElementType_specificPresence::soap_default(soap*) default initialize members
/// - int soap_read__plu__ZoningElementType_specificPresence(soap*, _plu__ZoningElementType_specificPresence*) deserialize from a stream
/// - int soap_write__plu__ZoningElementType_specificPresence(soap*, _plu__ZoningElementType_specificPresence*) serialize to a stream
/// - _plu__ZoningElementType_specificPresence* _plu__ZoningElementType_specificPresence::soap_dup(soap*) returns deep copy of _plu__ZoningElementType_specificPresence, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _plu__ZoningElementType_specificPresence::soap_del() deep deletes _plu__ZoningElementType_specificPresence data members, use only after _plu__ZoningElementType_specificPresence::soap_dup(NULL) (use soapcpp2 -Ed)
    class _plu__ZoningElementType_specificPresence
    {
/// <PRE><BLOCKQUOTE>
///   -- Name --
///   specific presence
///   -- Definition --
///   Presence of one or several land use classification values in an area according to the code list
///   provided by the data provider, indicated either as the percentage covered for each value or as
///   the values listed in their order of importance.
///   -- Description --
///   NOTE 1: The order of land use value presence without percentages enable providing an order of dominance/importance of each land use present in the land use object
///   NOTE 2: The sum of the percentages can be below 100%, or above. The order is provided according to the respective importance when the percentages are not known.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://inspire.ec.europa.eu/schemas/plu/3.0:""http://inspire.ec.europa.eu/schemas/lunom/3.0":SpecificPresence.
    lunom__SpecificPresenceType*         lunom__SpecificPresence        1;	///< Required element.
/// Attribute "nilReason" of XSD type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
    }                                   *specificPresence               nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   -- Definition --
///   Legal nature of the land use indication.
///   -- Description --
///   NOTE Indicates whether the land use indication is legally binding or not.
/// </BLOCKQUOTE></PRE>
/// Element "regulationNature" of XSD type "http://www.opengis.net/gml/3.2":ReferenceType.
    gml__ReferenceType*                  regulationNature               1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   -- Definition --
///   Date and time at which this version of the spatial object was superseded or retired in the spatial data set.
/// </BLOCKQUOTE></PRE>
/// class _plu__ZoningElementType_endLifespanVersion operations:
/// - _plu__ZoningElementType_endLifespanVersion* soap_new__plu__ZoningElementType_endLifespanVersion(soap*) allocate and default initialize
/// - _plu__ZoningElementType_endLifespanVersion* soap_new__plu__ZoningElementType_endLifespanVersion(soap*, int num) allocate array and default initialize values
/// - _plu__ZoningElementType_endLifespanVersion* soap_new_req__plu__ZoningElementType_endLifespanVersion(soap*, ...) allocate, set required members
/// - _plu__ZoningElementType_endLifespanVersion* soap_new_set__plu__ZoningElementType_endLifespanVersion(soap*, ...) allocate, set all public members
/// - _plu__ZoningElementType_endLifespanVersion::soap_default(soap*) default initialize members
/// - int soap_read__plu__ZoningElementType_endLifespanVersion(soap*, _plu__ZoningElementType_endLifespanVersion*) deserialize from a stream
/// - int soap_write__plu__ZoningElementType_endLifespanVersion(soap*, _plu__ZoningElementType_endLifespanVersion*) serialize to a stream
/// - _plu__ZoningElementType_endLifespanVersion* _plu__ZoningElementType_endLifespanVersion::soap_dup(soap*) returns deep copy of _plu__ZoningElementType_endLifespanVersion, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _plu__ZoningElementType_endLifespanVersion::soap_del() deep deletes _plu__ZoningElementType_endLifespanVersion data members, use only after _plu__ZoningElementType_endLifespanVersion::soap_dup(NULL) (use soapcpp2 -Ed)
    class _plu__ZoningElementType_endLifespanVersion
    {
/// __item wraps "xs:dateTime" simpleContent.
    time_t                               __item                        ;
/// Attribute "nilReason" of XSD type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
    }                                   *endLifespanVersion             0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   -- Definition --
///   General indication of the step of the planning process that the zoning element is undergoing.
///   -- Description --
///   NOTE This enumeration contains values that are common to most planning systems.
/// </BLOCKQUOTE></PRE>
/// Element "processStepGeneral" of XSD type "http://www.opengis.net/gml/3.2":ReferenceType.
    gml__ReferenceType*                  processStepGeneral             nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   -- Name --
///   background map
///   -- Definition --
///   Identification of the background map that has been used for constructing this zoning element.
/// </BLOCKQUOTE></PRE>
/// class _plu__ZoningElementType_backgroundMap operations:
/// - _plu__ZoningElementType_backgroundMap* soap_new__plu__ZoningElementType_backgroundMap(soap*) allocate and default initialize
/// - _plu__ZoningElementType_backgroundMap* soap_new__plu__ZoningElementType_backgroundMap(soap*, int num) allocate array and default initialize values
/// - _plu__ZoningElementType_backgroundMap* soap_new_req__plu__ZoningElementType_backgroundMap(soap*, ...) allocate, set required members
/// - _plu__ZoningElementType_backgroundMap* soap_new_set__plu__ZoningElementType_backgroundMap(soap*, ...) allocate, set all public members
/// - _plu__ZoningElementType_backgroundMap::soap_default(soap*) default initialize members
/// - int soap_read__plu__ZoningElementType_backgroundMap(soap*, _plu__ZoningElementType_backgroundMap*) deserialize from a stream
/// - int soap_write__plu__ZoningElementType_backgroundMap(soap*, _plu__ZoningElementType_backgroundMap*) serialize to a stream
/// - _plu__ZoningElementType_backgroundMap* _plu__ZoningElementType_backgroundMap::soap_dup(soap*) returns deep copy of _plu__ZoningElementType_backgroundMap, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _plu__ZoningElementType_backgroundMap::soap_del() deep deletes _plu__ZoningElementType_backgroundMap data members, use only after _plu__ZoningElementType_backgroundMap::soap_dup(NULL) (use soapcpp2 -Ed)
    class _plu__ZoningElementType_backgroundMap
    {
/// <PRE><BLOCKQUOTE>
///   -- Definition --
///   Information regarding the map that has been used as a background in the definition of a spatial plan, a zoning element or a supplementary regulation.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://inspire.ec.europa.eu/schemas/plu/3.0:""http://inspire.ec.europa.eu/schemas/plu/3.0":BackgroundMapValue.
    plu__BackgroundMapValueType*         BackgroundMapValue             1;	///< Required element.
/// Attribute "nilReason" of XSD type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
    }                                   *backgroundMap                  nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   -- Definition --
///   Specifications about the dimensioning of the urban developments.
/// </BLOCKQUOTE></PRE>
/// Vector of dimensioningIndication of length 0..unbounded.
    std::vector<
/// class _plu__ZoningElementType_dimensioningIndication operations:
/// - _plu__ZoningElementType_dimensioningIndication* soap_new__plu__ZoningElementType_dimensioningIndication(soap*) allocate and default initialize
/// - _plu__ZoningElementType_dimensioningIndication* soap_new__plu__ZoningElementType_dimensioningIndication(soap*, int num) allocate array and default initialize values
/// - _plu__ZoningElementType_dimensioningIndication* soap_new_req__plu__ZoningElementType_dimensioningIndication(soap*, ...) allocate, set required members
/// - _plu__ZoningElementType_dimensioningIndication* soap_new_set__plu__ZoningElementType_dimensioningIndication(soap*, ...) allocate, set all public members
/// - _plu__ZoningElementType_dimensioningIndication::soap_default(soap*) default initialize members
/// - int soap_read__plu__ZoningElementType_dimensioningIndication(soap*, _plu__ZoningElementType_dimensioningIndication*) deserialize from a stream
/// - int soap_write__plu__ZoningElementType_dimensioningIndication(soap*, _plu__ZoningElementType_dimensioningIndication*) serialize to a stream
/// - _plu__ZoningElementType_dimensioningIndication* _plu__ZoningElementType_dimensioningIndication::soap_dup(soap*) returns deep copy of _plu__ZoningElementType_dimensioningIndication, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _plu__ZoningElementType_dimensioningIndication::soap_del() deep deletes _plu__ZoningElementType_dimensioningIndication data members, use only after _plu__ZoningElementType_dimensioningIndication::soap_dup(NULL) (use soapcpp2 -Ed)
    class _plu__ZoningElementType_dimensioningIndication
    {
/// <PRE><BLOCKQUOTE>
///   -- Name --
///   Dimension Indication
///   -- Definition --
///   Specifications about the dimensioning of the urban developments.
/// </BLOCKQUOTE></PRE>
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="DimensioningIndicationValue"> with global elements <DimensioningIndicationMeasureValue> <DimensioningIndicationIntegerValue> <DimensioningIndicationCharacterValue> <DimensioningIndicationRealValue>
   $int                                  __unionDimensioningIndicationValue;	///< Union _plu__union_ZoningElementType_dimensioningIndication selector: set to SOAP_UNION__plu__union_ZoningElementType_dimensioningIndication_<fieldname>
/// Union for substitutionGroup plu__DimensioningIndicationValue.
    union _plu__union_ZoningElementType_dimensioningIndication
    {
/// <PRE><BLOCKQUOTE>
///   -- Name --
///   Dimension Indication
///   -- Definition --
///   Specifications about the dimensioning of the urban developments.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://inspire.ec.europa.eu/schemas/plu/3.0:""http://inspire.ec.europa.eu/schemas/plu/3.0":DimensioningIndicationValue.
    plu__DimensioningIndicationValueType*  DimensioningIndicationValue    nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   -- Name --
///   dimension indication measure value
///   -- Definition --
///   Dimensioning indication whose value is a measure.
/// </BLOCKQUOTE></PRE>
/// Element "http://inspire.ec.europa.eu/schemas/plu/3.0":DimensioningIndicationMeasureValue.
    plu__DimensioningIndicationMeasureValueType*  DimensioningIndicationMeasureValue nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   -- Name --
///   dimension indication integer value
///   -- Definition --
///   Dimensioning indication whose value is of type integer.
/// </BLOCKQUOTE></PRE>
/// Element "http://inspire.ec.europa.eu/schemas/plu/3.0":DimensioningIndicationIntegerValue.
    plu__DimensioningIndicationIntegerValueType*  DimensioningIndicationIntegerValue nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   -- Name --
///   dimension indication character value
///   -- Definition --
///   Dimensioning indication whose value is of type CharacterString.
/// </BLOCKQUOTE></PRE>
/// Element "http://inspire.ec.europa.eu/schemas/plu/3.0":DimensioningIndicationCharacterValue.
    plu__DimensioningIndicationCharacterValueType*  DimensioningIndicationCharacterValue nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   -- Name --
///   dimension indication real value
///   -- Definition --
///   Dimensioning indication whose value is a floating point number.
/// </BLOCKQUOTE></PRE>
/// Element "http://inspire.ec.europa.eu/schemas/plu/3.0":DimensioningIndicationRealValue.
    plu__DimensioningIndicationRealValueType*  DimensioningIndicationRealValue nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_ZoningElementType_dimensioningIndication;
//  END OF SUBSTITUTIONS
/// Attribute "nilReason" of XSD type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
    }>                                  *dimensioningIndication         0;
/// <PRE><BLOCKQUOTE>
///   -- Definition --
///   Textual Regulation that is part of this zoning element.
/// </BLOCKQUOTE></PRE>
/// Vector of gml__ReferenceType* of length 1..unbounded.
    std::vector<gml__ReferenceType*    > officialDocument               1;
/// <PRE><BLOCKQUOTE>
///   -- Definition --
///   SpatialPlan which this ZoningElement belongs to.
/// </BLOCKQUOTE></PRE>
/// Element "plan" of XSD type "http://www.opengis.net/gml/3.2":ReferenceType.
    gml__ReferenceType*                  plan                           1;	///< Required element.
};

/// @brief "http://inspire.ec.europa.eu/schemas/plu/3.0":OfficialDocumentationType is a complexType with complexContent extension of XSD type "http://www.opengis.net/gml/3.2":AbstractFeatureType.
///
/// class plu__OfficialDocumentationType operations:
/// - plu__OfficialDocumentationType* soap_new_plu__OfficialDocumentationType(soap*) allocate and default initialize
/// - plu__OfficialDocumentationType* soap_new_plu__OfficialDocumentationType(soap*, int num) allocate array and default initialize values
/// - plu__OfficialDocumentationType* soap_new_req_plu__OfficialDocumentationType(soap*, ...) allocate, set required members
/// - plu__OfficialDocumentationType* soap_new_set_plu__OfficialDocumentationType(soap*, ...) allocate, set all public members
/// - plu__OfficialDocumentationType::soap_default(soap*) default initialize members
/// - int soap_read_plu__OfficialDocumentationType(soap*, plu__OfficialDocumentationType*) deserialize from a stream
/// - int soap_write_plu__OfficialDocumentationType(soap*, plu__OfficialDocumentationType*) serialize to a stream
/// - plu__OfficialDocumentationType* plu__OfficialDocumentationType::soap_dup(soap*) returns deep copy of plu__OfficialDocumentationType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - plu__OfficialDocumentationType::soap_del() deep deletes plu__OfficialDocumentationType data members, use only after plu__OfficialDocumentationType::soap_dup(NULL) (use soapcpp2 -Ed)
class plu__OfficialDocumentationType : public gml__AbstractFeatureType
{ public:
/*  INHERITED FROM gml__AbstractGMLType:
//  BEGIN GROUP <xs:group name="StandardObjectProperties">
/// Vector of gml__MetaDataPropertyType* element refs of length 0..unbounded.
    std::vector<gml__MetaDataPropertyType*> metaDataProperty               0;
/// <PRE><BLOCKQUOTE>
///   The value of this property is a text description of the object. gml:description uses gml:StringOrRefType as its content model, so it may contain a simple text string content, or carry a reference to an external description. The use of gml:description to reference an external description has been deprecated and replaced by the gml:descriptionReference property.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":description.
    gml__StringOrRefType*                description                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The value of this property is a remote text description of the object. The xlink:href attribute of the gml:descriptionReference property references the external description.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":descriptionReference.
    gml__ReferenceType*                  descriptionReference           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Often, a special identifier is assigned to an object by the maintaining authority with the intention that it is used in references to the object For such cases, the codeSpace shall be provided. That identifier is usually unique either globally or within an application domain. gml:identifier is a pre-defined property for such identifiers.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":identifier.
    gml__CodeWithAuthorityType*          identifier                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The gml:name property provides a label or identifier for the object, commonly a descriptive name. An object may have several names, typically assigned by different authorities. gml:name uses the gml:CodeType content model. The authority for a name is indicated by the value of its (optional) codeSpace attribute. The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace. In common usage there will be one name per authority, so a processing application may select the name from its preferred codeSpace.
/// </BLOCKQUOTE></PRE>
/// Vector of gml__CodeType* element refs of length 0..unbounded.
    std::vector<gml__CodeType*         > name                           0;
//  END OF GROUP
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":id.
/// <PRE><BLOCKQUOTE>
///   The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.
/// </BLOCKQUOTE></PRE>
   @xsd__ID*                             gml__id                        0;	///< Optional attribute.
    END OF INHERITED FROM gml__AbstractGMLType */
/*  INHERITED FROM gml__AbstractFeatureType:
/// <PRE><BLOCKQUOTE>
///   This property describes the minimum bounding box or rectangle that encloses the entire feature.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":boundedBy.
    gml__BoundingShapeType*              boundedBy                      0;	///< Optional element.
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="location" minOccurs="0"> with global elements <priorityLocation>
   $int                                  __unionlocation                0;	///< Union _gml__union_OfficialDocumentationType selector: set to SOAP_UNION__gml__union_OfficialDocumentationType_<fieldname> or 0 to omit
/// Union for substitutionGroup gml__location.
    union _gml__union_OfficialDocumentationType
    {
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":location.
    gml__LocationPropertyType*           location                       0;	///< Optional element.
/// Element "http://www.opengis.net/gml/3.2":priorityLocation.
    gml__PriorityLocationPropertyType*   priorityLocation               nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_OfficialDocumentationType;
//  END OF SUBSTITUTIONS
    END OF INHERITED FROM gml__AbstractFeatureType */
/// <PRE><BLOCKQUOTE>
///   -- Definition --
///   External object identifier of this spatial textual regulation.
///   -- Description --
///   NOTE An external object identifier is a unique object identifier published by the responsible body, which may be used by external applications to reference the spatial object. The identifier is an identifier of the spatial object, not an identifier of the real-world phenomenon.
/// </BLOCKQUOTE></PRE>
/// Element "inspireId" of XSD type "http://inspire.ec.europa.eu/schemas/base/3.3":IdentifierPropertyType.
    base__IdentifierPropertyType*        inspireId                      1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   -- Definition --
///   Reference to the document that contains the text of the regulation.
/// </BLOCKQUOTE></PRE>
/// class _plu__OfficialDocumentationType_legislationCitation operations:
/// - _plu__OfficialDocumentationType_legislationCitation* soap_new__plu__OfficialDocumentationType_legislationCitation(soap*) allocate and default initialize
/// - _plu__OfficialDocumentationType_legislationCitation* soap_new__plu__OfficialDocumentationType_legislationCitation(soap*, int num) allocate array and default initialize values
/// - _plu__OfficialDocumentationType_legislationCitation* soap_new_req__plu__OfficialDocumentationType_legislationCitation(soap*, ...) allocate, set required members
/// - _plu__OfficialDocumentationType_legislationCitation* soap_new_set__plu__OfficialDocumentationType_legislationCitation(soap*, ...) allocate, set all public members
/// - _plu__OfficialDocumentationType_legislationCitation::soap_default(soap*) default initialize members
/// - int soap_read__plu__OfficialDocumentationType_legislationCitation(soap*, _plu__OfficialDocumentationType_legislationCitation*) deserialize from a stream
/// - int soap_write__plu__OfficialDocumentationType_legislationCitation(soap*, _plu__OfficialDocumentationType_legislationCitation*) serialize to a stream
/// - _plu__OfficialDocumentationType_legislationCitation* _plu__OfficialDocumentationType_legislationCitation::soap_dup(soap*) returns deep copy of _plu__OfficialDocumentationType_legislationCitation, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _plu__OfficialDocumentationType_legislationCitation::soap_del() deep deletes _plu__OfficialDocumentationType_legislationCitation data members, use only after _plu__OfficialDocumentationType_legislationCitation::soap_dup(NULL) (use soapcpp2 -Ed)
    class _plu__OfficialDocumentationType_legislationCitation
    {
/// INHERITED FROM gml__AbstractMemberType:
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":OwnershipAttributeGroup">.
/// Attribute "owns" of XSD type xs:boolean.
   @bool                                 owns                           0 = false;	///< Default attribute value="false".
//  END OF ATTRIBUTEGROUP
//  END OF INHERITED FROM gml__AbstractMemberType
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __plu__OfficialDocumentationType_legislationCitation_sequence
    {
/// <PRE><BLOCKQUOTE>
///   -- Name --
///   legislation citation
///   -- Definition --
///   Citation for the purposes of unambiguously referencing a legal act or a specific part of a legal act.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://inspire.ec.europa.eu/schemas/plu/3.0:""http://inspire.ec.europa.eu/schemas/base2/1.0":LegislationCitation.
    base2__LegislationCitationType*      base2__LegislationCitation     1;	///< Required element.
    }                                   *__OfficialDocumentationType_legislationCitation_sequence 0;
//  END OF SEQUENCE
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":AssociationAttributeGroup">.
/// Attribute "nilReason" of XSD type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  :nilReason                     0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         gml__remoteSchema              0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
    }                                   *legislationCitation            0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   -- Definition --
///   Text of the regulation.
/// </BLOCKQUOTE></PRE>
/// class _plu__OfficialDocumentationType_regulationText operations:
/// - _plu__OfficialDocumentationType_regulationText* soap_new__plu__OfficialDocumentationType_regulationText(soap*) allocate and default initialize
/// - _plu__OfficialDocumentationType_regulationText* soap_new__plu__OfficialDocumentationType_regulationText(soap*, int num) allocate array and default initialize values
/// - _plu__OfficialDocumentationType_regulationText* soap_new_req__plu__OfficialDocumentationType_regulationText(soap*, ...) allocate, set required members
/// - _plu__OfficialDocumentationType_regulationText* soap_new_set__plu__OfficialDocumentationType_regulationText(soap*, ...) allocate, set all public members
/// - _plu__OfficialDocumentationType_regulationText::soap_default(soap*) default initialize members
/// - int soap_read__plu__OfficialDocumentationType_regulationText(soap*, _plu__OfficialDocumentationType_regulationText*) deserialize from a stream
/// - int soap_write__plu__OfficialDocumentationType_regulationText(soap*, _plu__OfficialDocumentationType_regulationText*) serialize to a stream
/// - _plu__OfficialDocumentationType_regulationText* _plu__OfficialDocumentationType_regulationText::soap_dup(soap*) returns deep copy of _plu__OfficialDocumentationType_regulationText, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _plu__OfficialDocumentationType_regulationText::soap_del() deep deletes _plu__OfficialDocumentationType_regulationText data members, use only after _plu__OfficialDocumentationType_regulationText::soap_dup(NULL) (use soapcpp2 -Ed)
    class _plu__OfficialDocumentationType_regulationText
    {
/// __item wraps "xs:string" simpleContent.
    std::string                          __item                        ;
/// Attribute "nilReason" of XSD type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
    }                                   *regulationText                 0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   -- Definition --
///   Citation of scanned plans and structural drawings which may sometimes be geo-referenced or not,. E.g. raster images, vector drawings or scanned text.
/// </BLOCKQUOTE></PRE>
/// class _plu__OfficialDocumentationType_planDocument operations:
/// - _plu__OfficialDocumentationType_planDocument* soap_new__plu__OfficialDocumentationType_planDocument(soap*) allocate and default initialize
/// - _plu__OfficialDocumentationType_planDocument* soap_new__plu__OfficialDocumentationType_planDocument(soap*, int num) allocate array and default initialize values
/// - _plu__OfficialDocumentationType_planDocument* soap_new_req__plu__OfficialDocumentationType_planDocument(soap*, ...) allocate, set required members
/// - _plu__OfficialDocumentationType_planDocument* soap_new_set__plu__OfficialDocumentationType_planDocument(soap*, ...) allocate, set all public members
/// - _plu__OfficialDocumentationType_planDocument::soap_default(soap*) default initialize members
/// - int soap_read__plu__OfficialDocumentationType_planDocument(soap*, _plu__OfficialDocumentationType_planDocument*) deserialize from a stream
/// - int soap_write__plu__OfficialDocumentationType_planDocument(soap*, _plu__OfficialDocumentationType_planDocument*) serialize to a stream
/// - _plu__OfficialDocumentationType_planDocument* _plu__OfficialDocumentationType_planDocument::soap_dup(soap*) returns deep copy of _plu__OfficialDocumentationType_planDocument, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _plu__OfficialDocumentationType_planDocument::soap_del() deep deletes _plu__OfficialDocumentationType_planDocument data members, use only after _plu__OfficialDocumentationType_planDocument::soap_dup(NULL) (use soapcpp2 -Ed)
    class _plu__OfficialDocumentationType_planDocument
    {
/// INHERITED FROM gml__AbstractMemberType:
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":OwnershipAttributeGroup">.
/// Attribute "owns" of XSD type xs:boolean.
   @bool                                 owns                           0 = false;	///< Default attribute value="false".
//  END OF ATTRIBUTEGROUP
//  END OF INHERITED FROM gml__AbstractMemberType
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __plu__OfficialDocumentationType_planDocument_sequence
    {
/// <PRE><BLOCKQUOTE>
///   -- Name --
///   document citation
///   -- Definition --
///   Citation for the purposes of unambiguously referencing a document.
/// </BLOCKQUOTE></PRE>
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="DocumentCitation"> with global elements <LegislationCitation>
   $int                                  __unionDocumentCitation       ;	///< Union _plu__union_OfficialDocumentationType_planDocument selector: set to SOAP_UNION__plu__union_OfficialDocumentationType_planDocument_<fieldname>
/// Union for substitutionGroup plu__DocumentCitation.
    union _plu__union_OfficialDocumentationType_planDocument
    {
/// <PRE><BLOCKQUOTE>
///   -- Name --
///   document citation
///   -- Definition --
///   Citation for the purposes of unambiguously referencing a document.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://inspire.ec.europa.eu/schemas/plu/3.0:""http://inspire.ec.europa.eu/schemas/base2/1.0":DocumentCitation.
    base2__DocumentCitationType*         base2__DocumentCitation        nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   -- Name --
///   legislation citation
///   -- Definition --
///   Citation for the purposes of unambiguously referencing a legal act or a specific part of a legal act.
/// </BLOCKQUOTE></PRE>
/// Element "http://inspire.ec.europa.eu/schemas/base2/1.0":LegislationCitation.
    base2__LegislationCitationType*      base2__LegislationCitation     nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_OfficialDocumentationType_planDocument;
//  END OF SUBSTITUTIONS
    }                                   *__OfficialDocumentationType_planDocument_sequence 0;
//  END OF SEQUENCE
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":AssociationAttributeGroup">.
/// Attribute "nilReason" of XSD type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  :nilReason                     0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         gml__remoteSchema              0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
    }                                   *planDocument                   0;	///< Optional element.
};

/// @brief "http://inspire.ec.europa.eu/schemas/plu/3.0":SupplementaryRegulationType is a complexType with complexContent extension of XSD type "http://www.opengis.net/gml/3.2":AbstractFeatureType.
///
/// class plu__SupplementaryRegulationType operations:
/// - plu__SupplementaryRegulationType* soap_new_plu__SupplementaryRegulationType(soap*) allocate and default initialize
/// - plu__SupplementaryRegulationType* soap_new_plu__SupplementaryRegulationType(soap*, int num) allocate array and default initialize values
/// - plu__SupplementaryRegulationType* soap_new_req_plu__SupplementaryRegulationType(soap*, ...) allocate, set required members
/// - plu__SupplementaryRegulationType* soap_new_set_plu__SupplementaryRegulationType(soap*, ...) allocate, set all public members
/// - plu__SupplementaryRegulationType::soap_default(soap*) default initialize members
/// - int soap_read_plu__SupplementaryRegulationType(soap*, plu__SupplementaryRegulationType*) deserialize from a stream
/// - int soap_write_plu__SupplementaryRegulationType(soap*, plu__SupplementaryRegulationType*) serialize to a stream
/// - plu__SupplementaryRegulationType* plu__SupplementaryRegulationType::soap_dup(soap*) returns deep copy of plu__SupplementaryRegulationType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - plu__SupplementaryRegulationType::soap_del() deep deletes plu__SupplementaryRegulationType data members, use only after plu__SupplementaryRegulationType::soap_dup(NULL) (use soapcpp2 -Ed)
class plu__SupplementaryRegulationType : public gml__AbstractFeatureType
{ public:
/*  INHERITED FROM gml__AbstractGMLType:
//  BEGIN GROUP <xs:group name="StandardObjectProperties">
/// Vector of gml__MetaDataPropertyType* element refs of length 0..unbounded.
    std::vector<gml__MetaDataPropertyType*> metaDataProperty               0;
/// <PRE><BLOCKQUOTE>
///   The value of this property is a text description of the object. gml:description uses gml:StringOrRefType as its content model, so it may contain a simple text string content, or carry a reference to an external description. The use of gml:description to reference an external description has been deprecated and replaced by the gml:descriptionReference property.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":description.
    gml__StringOrRefType*                description                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The value of this property is a remote text description of the object. The xlink:href attribute of the gml:descriptionReference property references the external description.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":descriptionReference.
    gml__ReferenceType*                  descriptionReference           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Often, a special identifier is assigned to an object by the maintaining authority with the intention that it is used in references to the object For such cases, the codeSpace shall be provided. That identifier is usually unique either globally or within an application domain. gml:identifier is a pre-defined property for such identifiers.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":identifier.
    gml__CodeWithAuthorityType*          identifier                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The gml:name property provides a label or identifier for the object, commonly a descriptive name. An object may have several names, typically assigned by different authorities. gml:name uses the gml:CodeType content model. The authority for a name is indicated by the value of its (optional) codeSpace attribute. The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace. In common usage there will be one name per authority, so a processing application may select the name from its preferred codeSpace.
/// </BLOCKQUOTE></PRE>
/// Vector of gml__CodeType* element refs of length 0..unbounded.
    std::vector<gml__CodeType*         > name                           0;
//  END OF GROUP
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":id.
/// <PRE><BLOCKQUOTE>
///   The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.
/// </BLOCKQUOTE></PRE>
   @xsd__ID*                             gml__id                        0;	///< Optional attribute.
    END OF INHERITED FROM gml__AbstractGMLType */
/*  INHERITED FROM gml__AbstractFeatureType:
/// <PRE><BLOCKQUOTE>
///   This property describes the minimum bounding box or rectangle that encloses the entire feature.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":boundedBy.
    gml__BoundingShapeType*              boundedBy                      0;	///< Optional element.
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="location" minOccurs="0"> with global elements <priorityLocation>
   $int                                  __unionlocation                0;	///< Union _gml__union_SupplementaryRegulationType selector: set to SOAP_UNION__gml__union_SupplementaryRegulationType_<fieldname> or 0 to omit
/// Union for substitutionGroup gml__location.
    union _gml__union_SupplementaryRegulationType
    {
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":location.
    gml__LocationPropertyType*           location                       0;	///< Optional element.
/// Element "http://www.opengis.net/gml/3.2":priorityLocation.
    gml__PriorityLocationPropertyType*   priorityLocation               nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_SupplementaryRegulationType;
//  END OF SUBSTITUTIONS
    END OF INHERITED FROM gml__AbstractFeatureType */
/// <PRE><BLOCKQUOTE>
///   -- Definition --
///   First date at which this version of this supplementary regulation is valid in reality.
/// </BLOCKQUOTE></PRE>
/// class _plu__SupplementaryRegulationType_validFrom operations:
/// - _plu__SupplementaryRegulationType_validFrom* soap_new__plu__SupplementaryRegulationType_validFrom(soap*) allocate and default initialize
/// - _plu__SupplementaryRegulationType_validFrom* soap_new__plu__SupplementaryRegulationType_validFrom(soap*, int num) allocate array and default initialize values
/// - _plu__SupplementaryRegulationType_validFrom* soap_new_req__plu__SupplementaryRegulationType_validFrom(soap*, ...) allocate, set required members
/// - _plu__SupplementaryRegulationType_validFrom* soap_new_set__plu__SupplementaryRegulationType_validFrom(soap*, ...) allocate, set all public members
/// - _plu__SupplementaryRegulationType_validFrom::soap_default(soap*) default initialize members
/// - int soap_read__plu__SupplementaryRegulationType_validFrom(soap*, _plu__SupplementaryRegulationType_validFrom*) deserialize from a stream
/// - int soap_write__plu__SupplementaryRegulationType_validFrom(soap*, _plu__SupplementaryRegulationType_validFrom*) serialize to a stream
/// - _plu__SupplementaryRegulationType_validFrom* _plu__SupplementaryRegulationType_validFrom::soap_dup(soap*) returns deep copy of _plu__SupplementaryRegulationType_validFrom, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _plu__SupplementaryRegulationType_validFrom::soap_del() deep deletes _plu__SupplementaryRegulationType_validFrom data members, use only after _plu__SupplementaryRegulationType_validFrom::soap_dup(NULL) (use soapcpp2 -Ed)
    class _plu__SupplementaryRegulationType_validFrom
    {
/// __item wraps "xs:date" simpleContent.
    xsd__date                            __item                        ;
/// Attribute "nilReason" of XSD type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
    }                                   *validFrom                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   -- Definition --
///   The time from which the supplementary regulation is no longer valid.
/// </BLOCKQUOTE></PRE>
/// class _plu__SupplementaryRegulationType_validTo operations:
/// - _plu__SupplementaryRegulationType_validTo* soap_new__plu__SupplementaryRegulationType_validTo(soap*) allocate and default initialize
/// - _plu__SupplementaryRegulationType_validTo* soap_new__plu__SupplementaryRegulationType_validTo(soap*, int num) allocate array and default initialize values
/// - _plu__SupplementaryRegulationType_validTo* soap_new_req__plu__SupplementaryRegulationType_validTo(soap*, ...) allocate, set required members
/// - _plu__SupplementaryRegulationType_validTo* soap_new_set__plu__SupplementaryRegulationType_validTo(soap*, ...) allocate, set all public members
/// - _plu__SupplementaryRegulationType_validTo::soap_default(soap*) default initialize members
/// - int soap_read__plu__SupplementaryRegulationType_validTo(soap*, _plu__SupplementaryRegulationType_validTo*) deserialize from a stream
/// - int soap_write__plu__SupplementaryRegulationType_validTo(soap*, _plu__SupplementaryRegulationType_validTo*) serialize to a stream
/// - _plu__SupplementaryRegulationType_validTo* _plu__SupplementaryRegulationType_validTo::soap_dup(soap*) returns deep copy of _plu__SupplementaryRegulationType_validTo, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _plu__SupplementaryRegulationType_validTo::soap_del() deep deletes _plu__SupplementaryRegulationType_validTo data members, use only after _plu__SupplementaryRegulationType_validTo::soap_dup(NULL) (use soapcpp2 -Ed)
    class _plu__SupplementaryRegulationType_validTo
    {
/// __item wraps "xs:date" simpleContent.
    xsd__date                            __item                        ;
/// Attribute "nilReason" of XSD type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
    }                                   *validTo                        0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   -- Definition --
///   Reference to a category of supplementary regulation provided in a specific nomenclature of supplementary regulations provided by the data provider.
/// </BLOCKQUOTE></PRE>
/// Vector of gml__ReferenceType* of length 1..unbounded.
    std::vector<gml__ReferenceType*    > specificSupplementaryRegulation 1;
/// <PRE><BLOCKQUOTE>
///   -- Definition --
///   General indication of the step of the planning process that the supplementary regulation is undergoing.
///   -- Description --
///   NOTE This enumeration contains values that are common to most planning systems.
/// </BLOCKQUOTE></PRE>
/// Element "processStepGeneral" of XSD type "http://www.opengis.net/gml/3.2":ReferenceType.
    gml__ReferenceType*                  processStepGeneral             nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   -- Name --
///   background map
///   -- Definition --
///   Identification of the background map that has been used for constructing the supplementary regulation.
/// </BLOCKQUOTE></PRE>
/// class _plu__SupplementaryRegulationType_backgroundMap operations:
/// - _plu__SupplementaryRegulationType_backgroundMap* soap_new__plu__SupplementaryRegulationType_backgroundMap(soap*) allocate and default initialize
/// - _plu__SupplementaryRegulationType_backgroundMap* soap_new__plu__SupplementaryRegulationType_backgroundMap(soap*, int num) allocate array and default initialize values
/// - _plu__SupplementaryRegulationType_backgroundMap* soap_new_req__plu__SupplementaryRegulationType_backgroundMap(soap*, ...) allocate, set required members
/// - _plu__SupplementaryRegulationType_backgroundMap* soap_new_set__plu__SupplementaryRegulationType_backgroundMap(soap*, ...) allocate, set all public members
/// - _plu__SupplementaryRegulationType_backgroundMap::soap_default(soap*) default initialize members
/// - int soap_read__plu__SupplementaryRegulationType_backgroundMap(soap*, _plu__SupplementaryRegulationType_backgroundMap*) deserialize from a stream
/// - int soap_write__plu__SupplementaryRegulationType_backgroundMap(soap*, _plu__SupplementaryRegulationType_backgroundMap*) serialize to a stream
/// - _plu__SupplementaryRegulationType_backgroundMap* _plu__SupplementaryRegulationType_backgroundMap::soap_dup(soap*) returns deep copy of _plu__SupplementaryRegulationType_backgroundMap, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _plu__SupplementaryRegulationType_backgroundMap::soap_del() deep deletes _plu__SupplementaryRegulationType_backgroundMap data members, use only after _plu__SupplementaryRegulationType_backgroundMap::soap_dup(NULL) (use soapcpp2 -Ed)
    class _plu__SupplementaryRegulationType_backgroundMap
    {
/// <PRE><BLOCKQUOTE>
///   -- Definition --
///   Information regarding the map that has been used as a background in the definition of a spatial plan, a zoning element or a supplementary regulation.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://inspire.ec.europa.eu/schemas/plu/3.0:""http://inspire.ec.europa.eu/schemas/plu/3.0":BackgroundMapValue.
    plu__BackgroundMapValueType*         BackgroundMapValue             1;	///< Required element.
/// Attribute "nilReason" of XSD type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
    }                                   *backgroundMap                  nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   -- Definition --
///   Date and time at which this version of the spatial object was inserted or changed in the spatial data set.
/// </BLOCKQUOTE></PRE>
/// class _plu__SupplementaryRegulationType_beginLifespanVersion operations:
/// - _plu__SupplementaryRegulationType_beginLifespanVersion* soap_new__plu__SupplementaryRegulationType_beginLifespanVersion(soap*) allocate and default initialize
/// - _plu__SupplementaryRegulationType_beginLifespanVersion* soap_new__plu__SupplementaryRegulationType_beginLifespanVersion(soap*, int num) allocate array and default initialize values
/// - _plu__SupplementaryRegulationType_beginLifespanVersion* soap_new_req__plu__SupplementaryRegulationType_beginLifespanVersion(soap*, ...) allocate, set required members
/// - _plu__SupplementaryRegulationType_beginLifespanVersion* soap_new_set__plu__SupplementaryRegulationType_beginLifespanVersion(soap*, ...) allocate, set all public members
/// - _plu__SupplementaryRegulationType_beginLifespanVersion::soap_default(soap*) default initialize members
/// - int soap_read__plu__SupplementaryRegulationType_beginLifespanVersion(soap*, _plu__SupplementaryRegulationType_beginLifespanVersion*) deserialize from a stream
/// - int soap_write__plu__SupplementaryRegulationType_beginLifespanVersion(soap*, _plu__SupplementaryRegulationType_beginLifespanVersion*) serialize to a stream
/// - _plu__SupplementaryRegulationType_beginLifespanVersion* _plu__SupplementaryRegulationType_beginLifespanVersion::soap_dup(soap*) returns deep copy of _plu__SupplementaryRegulationType_beginLifespanVersion, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _plu__SupplementaryRegulationType_beginLifespanVersion::soap_del() deep deletes _plu__SupplementaryRegulationType_beginLifespanVersion data members, use only after _plu__SupplementaryRegulationType_beginLifespanVersion::soap_dup(NULL) (use soapcpp2 -Ed)
    class _plu__SupplementaryRegulationType_beginLifespanVersion
    {
/// __item wraps "xs:dateTime" simpleContent.
    time_t                               __item                        ;
/// Attribute "nilReason" of XSD type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
    }                                   *beginLifespanVersion           nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   -- Definition --
///   Specifications about the dimensioning that are added to the dimensioning of the zoning elements that overlap the geometry of the supplementary regulation.
/// </BLOCKQUOTE></PRE>
/// Vector of dimensioningIndication of length 0..unbounded.
    std::vector<
/// class _plu__SupplementaryRegulationType_dimensioningIndication operations:
/// - _plu__SupplementaryRegulationType_dimensioningIndication* soap_new__plu__SupplementaryRegulationType_dimensioningIndication(soap*) allocate and default initialize
/// - _plu__SupplementaryRegulationType_dimensioningIndication* soap_new__plu__SupplementaryRegulationType_dimensioningIndication(soap*, int num) allocate array and default initialize values
/// - _plu__SupplementaryRegulationType_dimensioningIndication* soap_new_req__plu__SupplementaryRegulationType_dimensioningIndication(soap*, ...) allocate, set required members
/// - _plu__SupplementaryRegulationType_dimensioningIndication* soap_new_set__plu__SupplementaryRegulationType_dimensioningIndication(soap*, ...) allocate, set all public members
/// - _plu__SupplementaryRegulationType_dimensioningIndication::soap_default(soap*) default initialize members
/// - int soap_read__plu__SupplementaryRegulationType_dimensioningIndication(soap*, _plu__SupplementaryRegulationType_dimensioningIndication*) deserialize from a stream
/// - int soap_write__plu__SupplementaryRegulationType_dimensioningIndication(soap*, _plu__SupplementaryRegulationType_dimensioningIndication*) serialize to a stream
/// - _plu__SupplementaryRegulationType_dimensioningIndication* _plu__SupplementaryRegulationType_dimensioningIndication::soap_dup(soap*) returns deep copy of _plu__SupplementaryRegulationType_dimensioningIndication, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _plu__SupplementaryRegulationType_dimensioningIndication::soap_del() deep deletes _plu__SupplementaryRegulationType_dimensioningIndication data members, use only after _plu__SupplementaryRegulationType_dimensioningIndication::soap_dup(NULL) (use soapcpp2 -Ed)
    class _plu__SupplementaryRegulationType_dimensioningIndication
    {
/// <PRE><BLOCKQUOTE>
///   -- Name --
///   Dimension Indication
///   -- Definition --
///   Specifications about the dimensioning of the urban developments.
/// </BLOCKQUOTE></PRE>
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="DimensioningIndicationValue"> with global elements <DimensioningIndicationMeasureValue> <DimensioningIndicationIntegerValue> <DimensioningIndicationCharacterValue> <DimensioningIndicationRealValue>
   $int                                  __unionDimensioningIndicationValue;	///< Union _plu__union_SupplementaryRegulationType_dimensioningIndication selector: set to SOAP_UNION__plu__union_SupplementaryRegulationType_dimensioningIndication_<fieldname>
/// Union for substitutionGroup plu__DimensioningIndicationValue.
    union _plu__union_SupplementaryRegulationType_dimensioningIndication
    {
/// <PRE><BLOCKQUOTE>
///   -- Name --
///   Dimension Indication
///   -- Definition --
///   Specifications about the dimensioning of the urban developments.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://inspire.ec.europa.eu/schemas/plu/3.0:""http://inspire.ec.europa.eu/schemas/plu/3.0":DimensioningIndicationValue.
    plu__DimensioningIndicationValueType*  DimensioningIndicationValue    nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   -- Name --
///   dimension indication measure value
///   -- Definition --
///   Dimensioning indication whose value is a measure.
/// </BLOCKQUOTE></PRE>
/// Element "http://inspire.ec.europa.eu/schemas/plu/3.0":DimensioningIndicationMeasureValue.
    plu__DimensioningIndicationMeasureValueType*  DimensioningIndicationMeasureValue nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   -- Name --
///   dimension indication integer value
///   -- Definition --
///   Dimensioning indication whose value is of type integer.
/// </BLOCKQUOTE></PRE>
/// Element "http://inspire.ec.europa.eu/schemas/plu/3.0":DimensioningIndicationIntegerValue.
    plu__DimensioningIndicationIntegerValueType*  DimensioningIndicationIntegerValue nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   -- Name --
///   dimension indication character value
///   -- Definition --
///   Dimensioning indication whose value is of type CharacterString.
/// </BLOCKQUOTE></PRE>
/// Element "http://inspire.ec.europa.eu/schemas/plu/3.0":DimensioningIndicationCharacterValue.
    plu__DimensioningIndicationCharacterValueType*  DimensioningIndicationCharacterValue nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   -- Name --
///   dimension indication real value
///   -- Definition --
///   Dimensioning indication whose value is a floating point number.
/// </BLOCKQUOTE></PRE>
/// Element "http://inspire.ec.europa.eu/schemas/plu/3.0":DimensioningIndicationRealValue.
    plu__DimensioningIndicationRealValueType*  DimensioningIndicationRealValue nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_SupplementaryRegulationType_dimensioningIndication;
//  END OF SUBSTITUTIONS
/// Attribute "nilReason" of XSD type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
    }>                                  *dimensioningIndication         0;
/// <PRE><BLOCKQUOTE>
///   -- Definition --
///   External object identifier of the spatial object.
///   -- Description --
///   NOTE An external object identifier is a unique object identifier published by the responsible body, which may be used by external applications to reference the spatial object. The identifier is an identifier of the spatial object, not an identifier of the real-world phenomenon.
/// </BLOCKQUOTE></PRE>
/// Element "inspireId" of XSD type "http://inspire.ec.europa.eu/schemas/base/3.3":IdentifierPropertyType.
    base__IdentifierPropertyType*        inspireId                      1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   -- Definition --
///   Date and time at which this version of the spatial object was superseded or retired in the spatial data set.
/// </BLOCKQUOTE></PRE>
/// class _plu__SupplementaryRegulationType_endLifespanVersion operations:
/// - _plu__SupplementaryRegulationType_endLifespanVersion* soap_new__plu__SupplementaryRegulationType_endLifespanVersion(soap*) allocate and default initialize
/// - _plu__SupplementaryRegulationType_endLifespanVersion* soap_new__plu__SupplementaryRegulationType_endLifespanVersion(soap*, int num) allocate array and default initialize values
/// - _plu__SupplementaryRegulationType_endLifespanVersion* soap_new_req__plu__SupplementaryRegulationType_endLifespanVersion(soap*, ...) allocate, set required members
/// - _plu__SupplementaryRegulationType_endLifespanVersion* soap_new_set__plu__SupplementaryRegulationType_endLifespanVersion(soap*, ...) allocate, set all public members
/// - _plu__SupplementaryRegulationType_endLifespanVersion::soap_default(soap*) default initialize members
/// - int soap_read__plu__SupplementaryRegulationType_endLifespanVersion(soap*, _plu__SupplementaryRegulationType_endLifespanVersion*) deserialize from a stream
/// - int soap_write__plu__SupplementaryRegulationType_endLifespanVersion(soap*, _plu__SupplementaryRegulationType_endLifespanVersion*) serialize to a stream
/// - _plu__SupplementaryRegulationType_endLifespanVersion* _plu__SupplementaryRegulationType_endLifespanVersion::soap_dup(soap*) returns deep copy of _plu__SupplementaryRegulationType_endLifespanVersion, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _plu__SupplementaryRegulationType_endLifespanVersion::soap_del() deep deletes _plu__SupplementaryRegulationType_endLifespanVersion data members, use only after _plu__SupplementaryRegulationType_endLifespanVersion::soap_dup(NULL) (use soapcpp2 -Ed)
    class _plu__SupplementaryRegulationType_endLifespanVersion
    {
/// __item wraps "xs:dateTime" simpleContent.
    time_t                               __item                        ;
/// Attribute "nilReason" of XSD type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
    }                                   *endLifespanVersion             0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   -- Definition --
///   Geometry of the piece of land on which the supplementary regulation applies.
/// </BLOCKQUOTE></PRE>
/// Element "geometry" of XSD type "http://www.opengis.net/gml/3.2":GeometryPropertyType.
    gml__GeometryPropertyType*           geometry                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   -- Name --
///   inherited from other plans
///   -- Definition --
///   Indication whether the supplementary regulation is inherited from another spatial plan.
/// </BLOCKQUOTE></PRE>
/// class _plu__SupplementaryRegulationType_inheritedFromOtherPlans operations:
/// - _plu__SupplementaryRegulationType_inheritedFromOtherPlans* soap_new__plu__SupplementaryRegulationType_inheritedFromOtherPlans(soap*) allocate and default initialize
/// - _plu__SupplementaryRegulationType_inheritedFromOtherPlans* soap_new__plu__SupplementaryRegulationType_inheritedFromOtherPlans(soap*, int num) allocate array and default initialize values
/// - _plu__SupplementaryRegulationType_inheritedFromOtherPlans* soap_new_req__plu__SupplementaryRegulationType_inheritedFromOtherPlans(soap*, ...) allocate, set required members
/// - _plu__SupplementaryRegulationType_inheritedFromOtherPlans* soap_new_set__plu__SupplementaryRegulationType_inheritedFromOtherPlans(soap*, ...) allocate, set all public members
/// - _plu__SupplementaryRegulationType_inheritedFromOtherPlans::soap_default(soap*) default initialize members
/// - int soap_read__plu__SupplementaryRegulationType_inheritedFromOtherPlans(soap*, _plu__SupplementaryRegulationType_inheritedFromOtherPlans*) deserialize from a stream
/// - int soap_write__plu__SupplementaryRegulationType_inheritedFromOtherPlans(soap*, _plu__SupplementaryRegulationType_inheritedFromOtherPlans*) serialize to a stream
/// - _plu__SupplementaryRegulationType_inheritedFromOtherPlans* _plu__SupplementaryRegulationType_inheritedFromOtherPlans::soap_dup(soap*) returns deep copy of _plu__SupplementaryRegulationType_inheritedFromOtherPlans, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _plu__SupplementaryRegulationType_inheritedFromOtherPlans::soap_del() deep deletes _plu__SupplementaryRegulationType_inheritedFromOtherPlans data members, use only after _plu__SupplementaryRegulationType_inheritedFromOtherPlans::soap_dup(NULL) (use soapcpp2 -Ed)
    class _plu__SupplementaryRegulationType_inheritedFromOtherPlans
    {
/// __item wraps "xs:boolean" simpleContent.
    bool                                 __item                        ;
/// Attribute "nilReason" of XSD type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
    }                                   *inheritedFromOtherPlans        nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   -- Name --
///   specific regulation nature
///   -- Definition --
///   Legal nature of the land use regulation from a national perspective.
///   -- Description --
///   On member state level the legal classification for plan regulations may be complex. A supplementary regulation may be principally "bindingOnlyForAuthorities" but according to national law this regulation have to be more specified to explain the specific degree of binding. (e.g. on state or regional planning level in Germany: principles of spatial planning, other spatial planning requirements or goals of spatial planning).
///   NOTE This attribute complements the information provided by the attribute regulationNature.
/// </BLOCKQUOTE></PRE>
/// class _plu__SupplementaryRegulationType_specificRegulationNature operations:
/// - _plu__SupplementaryRegulationType_specificRegulationNature* soap_new__plu__SupplementaryRegulationType_specificRegulationNature(soap*) allocate and default initialize
/// - _plu__SupplementaryRegulationType_specificRegulationNature* soap_new__plu__SupplementaryRegulationType_specificRegulationNature(soap*, int num) allocate array and default initialize values
/// - _plu__SupplementaryRegulationType_specificRegulationNature* soap_new_req__plu__SupplementaryRegulationType_specificRegulationNature(soap*, ...) allocate, set required members
/// - _plu__SupplementaryRegulationType_specificRegulationNature* soap_new_set__plu__SupplementaryRegulationType_specificRegulationNature(soap*, ...) allocate, set all public members
/// - _plu__SupplementaryRegulationType_specificRegulationNature::soap_default(soap*) default initialize members
/// - int soap_read__plu__SupplementaryRegulationType_specificRegulationNature(soap*, _plu__SupplementaryRegulationType_specificRegulationNature*) deserialize from a stream
/// - int soap_write__plu__SupplementaryRegulationType_specificRegulationNature(soap*, _plu__SupplementaryRegulationType_specificRegulationNature*) serialize to a stream
/// - _plu__SupplementaryRegulationType_specificRegulationNature* _plu__SupplementaryRegulationType_specificRegulationNature::soap_dup(soap*) returns deep copy of _plu__SupplementaryRegulationType_specificRegulationNature, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _plu__SupplementaryRegulationType_specificRegulationNature::soap_del() deep deletes _plu__SupplementaryRegulationType_specificRegulationNature data members, use only after _plu__SupplementaryRegulationType_specificRegulationNature::soap_dup(NULL) (use soapcpp2 -Ed)
    class _plu__SupplementaryRegulationType_specificRegulationNature
    {
/// __item wraps "xs:string" simpleContent.
    std::string                          __item                        ;
/// Attribute "nilReason" of XSD type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
    }                                   *specificRegulationNature       nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   -- Definition --
///   Official name of the supplementary regulation
/// </BLOCKQUOTE></PRE>
/// Vector of name of length 0..unbounded.
    std::vector<
/// class _plu__SupplementaryRegulationType_name operations:
/// - _plu__SupplementaryRegulationType_name* soap_new__plu__SupplementaryRegulationType_name(soap*) allocate and default initialize
/// - _plu__SupplementaryRegulationType_name* soap_new__plu__SupplementaryRegulationType_name(soap*, int num) allocate array and default initialize values
/// - _plu__SupplementaryRegulationType_name* soap_new_req__plu__SupplementaryRegulationType_name(soap*, ...) allocate, set required members
/// - _plu__SupplementaryRegulationType_name* soap_new_set__plu__SupplementaryRegulationType_name(soap*, ...) allocate, set all public members
/// - _plu__SupplementaryRegulationType_name::soap_default(soap*) default initialize members
/// - int soap_read__plu__SupplementaryRegulationType_name(soap*, _plu__SupplementaryRegulationType_name*) deserialize from a stream
/// - int soap_write__plu__SupplementaryRegulationType_name(soap*, _plu__SupplementaryRegulationType_name*) serialize to a stream
/// - _plu__SupplementaryRegulationType_name* _plu__SupplementaryRegulationType_name::soap_dup(soap*) returns deep copy of _plu__SupplementaryRegulationType_name, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _plu__SupplementaryRegulationType_name::soap_del() deep deletes _plu__SupplementaryRegulationType_name data members, use only after _plu__SupplementaryRegulationType_name::soap_dup(NULL) (use soapcpp2 -Ed)
    class _plu__SupplementaryRegulationType_name
    {
/// __item wraps "xs:string" simpleContent.
    std::string                          __item                        ;
/// Attribute "nilReason" of XSD type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
    }>                                  *name                           0;
/// <PRE><BLOCKQUOTE>
///   -- Definition --
///   Legal nature of the land use regulation.
///   -- Description --
///   NOTE Indicates whether the land use regulation is legally binding or not.
/// </BLOCKQUOTE></PRE>
/// Element "regulationNature" of XSD type "http://www.opengis.net/gml/3.2":ReferenceType.
    gml__ReferenceType*                  regulationNature               1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   -- Definition --
///   Code of the supplementary regulation from the hierarchical supplementary regulation code list agreed at the European level.
/// </BLOCKQUOTE></PRE>
/// Vector of gml__ReferenceType* of length 1..unbounded.
    std::vector<gml__ReferenceType*    > supplementaryRegulation        1;
/// <PRE><BLOCKQUOTE>
///   -- Definition --
///   Link to the Textual regulations that correspond to this supplementary regulation.
/// </BLOCKQUOTE></PRE>
/// Vector of gml__ReferenceType* of length 1..unbounded.
    std::vector<gml__ReferenceType*    > officialDocument               1;
/// <PRE><BLOCKQUOTE>
///   -- Definition --
///   Link to the plan this supplementary regulation is part of.
/// </BLOCKQUOTE></PRE>
/// Element "plan" of XSD type "http://www.opengis.net/gml/3.2":ReferenceType.
    gml__ReferenceType*                  plan                           1;	///< Required element.
};

/// @brief "http://inspire.ec.europa.eu/schemas/plu/3.0":SpatialPlanType is a complexType with complexContent extension of XSD type "http://www.opengis.net/gml/3.2":AbstractFeatureType.
///
/// class plu__SpatialPlanType operations:
/// - plu__SpatialPlanType* soap_new_plu__SpatialPlanType(soap*) allocate and default initialize
/// - plu__SpatialPlanType* soap_new_plu__SpatialPlanType(soap*, int num) allocate array and default initialize values
/// - plu__SpatialPlanType* soap_new_req_plu__SpatialPlanType(soap*, ...) allocate, set required members
/// - plu__SpatialPlanType* soap_new_set_plu__SpatialPlanType(soap*, ...) allocate, set all public members
/// - plu__SpatialPlanType::soap_default(soap*) default initialize members
/// - int soap_read_plu__SpatialPlanType(soap*, plu__SpatialPlanType*) deserialize from a stream
/// - int soap_write_plu__SpatialPlanType(soap*, plu__SpatialPlanType*) serialize to a stream
/// - plu__SpatialPlanType* plu__SpatialPlanType::soap_dup(soap*) returns deep copy of plu__SpatialPlanType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - plu__SpatialPlanType::soap_del() deep deletes plu__SpatialPlanType data members, use only after plu__SpatialPlanType::soap_dup(NULL) (use soapcpp2 -Ed)
class plu__SpatialPlanType : public gml__AbstractFeatureType
{ public:
/*  INHERITED FROM gml__AbstractGMLType:
//  BEGIN GROUP <xs:group name="StandardObjectProperties">
/// Vector of gml__MetaDataPropertyType* element refs of length 0..unbounded.
    std::vector<gml__MetaDataPropertyType*> metaDataProperty               0;
/// <PRE><BLOCKQUOTE>
///   The value of this property is a text description of the object. gml:description uses gml:StringOrRefType as its content model, so it may contain a simple text string content, or carry a reference to an external description. The use of gml:description to reference an external description has been deprecated and replaced by the gml:descriptionReference property.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":description.
    gml__StringOrRefType*                description                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The value of this property is a remote text description of the object. The xlink:href attribute of the gml:descriptionReference property references the external description.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":descriptionReference.
    gml__ReferenceType*                  descriptionReference           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Often, a special identifier is assigned to an object by the maintaining authority with the intention that it is used in references to the object For such cases, the codeSpace shall be provided. That identifier is usually unique either globally or within an application domain. gml:identifier is a pre-defined property for such identifiers.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":identifier.
    gml__CodeWithAuthorityType*          identifier                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The gml:name property provides a label or identifier for the object, commonly a descriptive name. An object may have several names, typically assigned by different authorities. gml:name uses the gml:CodeType content model. The authority for a name is indicated by the value of its (optional) codeSpace attribute. The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace. In common usage there will be one name per authority, so a processing application may select the name from its preferred codeSpace.
/// </BLOCKQUOTE></PRE>
/// Vector of gml__CodeType* element refs of length 0..unbounded.
    std::vector<gml__CodeType*         > name                           0;
//  END OF GROUP
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":id.
/// <PRE><BLOCKQUOTE>
///   The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.
/// </BLOCKQUOTE></PRE>
   @xsd__ID*                             gml__id                        0;	///< Optional attribute.
    END OF INHERITED FROM gml__AbstractGMLType */
/*  INHERITED FROM gml__AbstractFeatureType:
/// <PRE><BLOCKQUOTE>
///   This property describes the minimum bounding box or rectangle that encloses the entire feature.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":boundedBy.
    gml__BoundingShapeType*              boundedBy                      0;	///< Optional element.
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="location" minOccurs="0"> with global elements <priorityLocation>
   $int                                  __unionlocation                0;	///< Union _gml__union_SpatialPlanType selector: set to SOAP_UNION__gml__union_SpatialPlanType_<fieldname> or 0 to omit
/// Union for substitutionGroup gml__location.
    union _gml__union_SpatialPlanType
    {
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":location.
    gml__LocationPropertyType*           location                       0;	///< Optional element.
/// Element "http://www.opengis.net/gml/3.2":priorityLocation.
    gml__PriorityLocationPropertyType*   priorityLocation               nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_SpatialPlanType         ;
//  END OF SUBSTITUTIONS
    END OF INHERITED FROM gml__AbstractFeatureType */
/// <PRE><BLOCKQUOTE>
///   -- Definition --
///   External object identifier of the spatial plan.
///   -- Description --
///   NOTE An external object identifier is a unique object identifier published by the responsible body, which may be used by external applications to reference the spatial object. The identifier is an identifier of the spatial object, not an identifier of the real-world phenomenon.
/// </BLOCKQUOTE></PRE>
/// Element "inspireId" of XSD type "http://inspire.ec.europa.eu/schemas/base/3.3":IdentifierPropertyType.
    base__IdentifierPropertyType*        inspireId                      1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   -- Definition --
///   Geometrical union of all the instances of the spatial objects ZoningElement and SupplementaryRegulation. When a SpatialPlan is only composed of a document, the attribute extent is the border of the cartographic image that contains the land use information (i.e. the land use map extent).
/// </BLOCKQUOTE></PRE>
/// Element "extent" of XSD type "http://www.opengis.net/gml/3.2":MultiSurfacePropertyType.
    gml__MultiSurfacePropertyType*       extent                         1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   -- Definition --
///   Date and time at which this version of the spatial object was inserted or changed in the spatial data set.
/// </BLOCKQUOTE></PRE>
/// class _plu__SpatialPlanType_beginLifespanVersion operations:
/// - _plu__SpatialPlanType_beginLifespanVersion* soap_new__plu__SpatialPlanType_beginLifespanVersion(soap*) allocate and default initialize
/// - _plu__SpatialPlanType_beginLifespanVersion* soap_new__plu__SpatialPlanType_beginLifespanVersion(soap*, int num) allocate array and default initialize values
/// - _plu__SpatialPlanType_beginLifespanVersion* soap_new_req__plu__SpatialPlanType_beginLifespanVersion(soap*, ...) allocate, set required members
/// - _plu__SpatialPlanType_beginLifespanVersion* soap_new_set__plu__SpatialPlanType_beginLifespanVersion(soap*, ...) allocate, set all public members
/// - _plu__SpatialPlanType_beginLifespanVersion::soap_default(soap*) default initialize members
/// - int soap_read__plu__SpatialPlanType_beginLifespanVersion(soap*, _plu__SpatialPlanType_beginLifespanVersion*) deserialize from a stream
/// - int soap_write__plu__SpatialPlanType_beginLifespanVersion(soap*, _plu__SpatialPlanType_beginLifespanVersion*) serialize to a stream
/// - _plu__SpatialPlanType_beginLifespanVersion* _plu__SpatialPlanType_beginLifespanVersion::soap_dup(soap*) returns deep copy of _plu__SpatialPlanType_beginLifespanVersion, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _plu__SpatialPlanType_beginLifespanVersion::soap_del() deep deletes _plu__SpatialPlanType_beginLifespanVersion data members, use only after _plu__SpatialPlanType_beginLifespanVersion::soap_dup(NULL) (use soapcpp2 -Ed)
    class _plu__SpatialPlanType_beginLifespanVersion
    {
/// __item wraps "xs:dateTime" simpleContent.
    time_t                               __item                        ;
/// Attribute "nilReason" of XSD type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
    }                                   *beginLifespanVersion           nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   -- Definition --
///   Official title of the spatial plan.
/// </BLOCKQUOTE></PRE>
/// Element "officialTitle" of XSD type xs:string.
    std::string                          officialTitle                  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   -- Name --
///   level of spatial plan
///   -- Definition --
///   Level of the administrative units covered by the plan.
///   -- Description --
///   Member states should make a mapping to this enumeration.
/// </BLOCKQUOTE></PRE>
/// Element "levelOfSpatialPlan" of XSD type "http://www.opengis.net/gml/3.2":ReferenceType.
    gml__ReferenceType*                  levelOfSpatialPlan             1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   -- Definition --
///   Date and time at which this version of the spatial object was superseded or retired in the spatial data set.
/// </BLOCKQUOTE></PRE>
/// class _plu__SpatialPlanType_endLifespanVersion operations:
/// - _plu__SpatialPlanType_endLifespanVersion* soap_new__plu__SpatialPlanType_endLifespanVersion(soap*) allocate and default initialize
/// - _plu__SpatialPlanType_endLifespanVersion* soap_new__plu__SpatialPlanType_endLifespanVersion(soap*, int num) allocate array and default initialize values
/// - _plu__SpatialPlanType_endLifespanVersion* soap_new_req__plu__SpatialPlanType_endLifespanVersion(soap*, ...) allocate, set required members
/// - _plu__SpatialPlanType_endLifespanVersion* soap_new_set__plu__SpatialPlanType_endLifespanVersion(soap*, ...) allocate, set all public members
/// - _plu__SpatialPlanType_endLifespanVersion::soap_default(soap*) default initialize members
/// - int soap_read__plu__SpatialPlanType_endLifespanVersion(soap*, _plu__SpatialPlanType_endLifespanVersion*) deserialize from a stream
/// - int soap_write__plu__SpatialPlanType_endLifespanVersion(soap*, _plu__SpatialPlanType_endLifespanVersion*) serialize to a stream
/// - _plu__SpatialPlanType_endLifespanVersion* _plu__SpatialPlanType_endLifespanVersion::soap_dup(soap*) returns deep copy of _plu__SpatialPlanType_endLifespanVersion, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _plu__SpatialPlanType_endLifespanVersion::soap_del() deep deletes _plu__SpatialPlanType_endLifespanVersion data members, use only after _plu__SpatialPlanType_endLifespanVersion::soap_dup(NULL) (use soapcpp2 -Ed)
    class _plu__SpatialPlanType_endLifespanVersion
    {
/// __item wraps "xs:dateTime" simpleContent.
    time_t                               __item                        ;
/// Attribute "nilReason" of XSD type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
    }                                   *endLifespanVersion             0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   -- Definition --
///   First date at which this spatial plan is valid in reality.
/// </BLOCKQUOTE></PRE>
/// class _plu__SpatialPlanType_validFrom operations:
/// - _plu__SpatialPlanType_validFrom* soap_new__plu__SpatialPlanType_validFrom(soap*) allocate and default initialize
/// - _plu__SpatialPlanType_validFrom* soap_new__plu__SpatialPlanType_validFrom(soap*, int num) allocate array and default initialize values
/// - _plu__SpatialPlanType_validFrom* soap_new_req__plu__SpatialPlanType_validFrom(soap*, ...) allocate, set required members
/// - _plu__SpatialPlanType_validFrom* soap_new_set__plu__SpatialPlanType_validFrom(soap*, ...) allocate, set all public members
/// - _plu__SpatialPlanType_validFrom::soap_default(soap*) default initialize members
/// - int soap_read__plu__SpatialPlanType_validFrom(soap*, _plu__SpatialPlanType_validFrom*) deserialize from a stream
/// - int soap_write__plu__SpatialPlanType_validFrom(soap*, _plu__SpatialPlanType_validFrom*) serialize to a stream
/// - _plu__SpatialPlanType_validFrom* _plu__SpatialPlanType_validFrom::soap_dup(soap*) returns deep copy of _plu__SpatialPlanType_validFrom, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _plu__SpatialPlanType_validFrom::soap_del() deep deletes _plu__SpatialPlanType_validFrom data members, use only after _plu__SpatialPlanType_validFrom::soap_dup(NULL) (use soapcpp2 -Ed)
    class _plu__SpatialPlanType_validFrom
    {
/// __item wraps "xs:date" simpleContent.
    xsd__date                            __item                        ;
/// Attribute "nilReason" of XSD type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
    }                                   *validFrom                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   -- Definition --
///   The time from which the spatial plan no longer exists in the real world.
/// </BLOCKQUOTE></PRE>
/// class _plu__SpatialPlanType_validTo operations:
/// - _plu__SpatialPlanType_validTo* soap_new__plu__SpatialPlanType_validTo(soap*) allocate and default initialize
/// - _plu__SpatialPlanType_validTo* soap_new__plu__SpatialPlanType_validTo(soap*, int num) allocate array and default initialize values
/// - _plu__SpatialPlanType_validTo* soap_new_req__plu__SpatialPlanType_validTo(soap*, ...) allocate, set required members
/// - _plu__SpatialPlanType_validTo* soap_new_set__plu__SpatialPlanType_validTo(soap*, ...) allocate, set all public members
/// - _plu__SpatialPlanType_validTo::soap_default(soap*) default initialize members
/// - int soap_read__plu__SpatialPlanType_validTo(soap*, _plu__SpatialPlanType_validTo*) deserialize from a stream
/// - int soap_write__plu__SpatialPlanType_validTo(soap*, _plu__SpatialPlanType_validTo*) serialize to a stream
/// - _plu__SpatialPlanType_validTo* _plu__SpatialPlanType_validTo::soap_dup(soap*) returns deep copy of _plu__SpatialPlanType_validTo, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _plu__SpatialPlanType_validTo::soap_del() deep deletes _plu__SpatialPlanType_validTo data members, use only after _plu__SpatialPlanType_validTo::soap_dup(NULL) (use soapcpp2 -Ed)
    class _plu__SpatialPlanType_validTo
    {
/// __item wraps "xs:date" simpleContent.
    xsd__date                            __item                        ;
/// Attribute "nilReason" of XSD type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
    }                                   *validTo                        0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   -- Definition --
///   Alternative (unofficial) title of the spatial plan.
/// </BLOCKQUOTE></PRE>
/// class _plu__SpatialPlanType_alternativeTitle operations:
/// - _plu__SpatialPlanType_alternativeTitle* soap_new__plu__SpatialPlanType_alternativeTitle(soap*) allocate and default initialize
/// - _plu__SpatialPlanType_alternativeTitle* soap_new__plu__SpatialPlanType_alternativeTitle(soap*, int num) allocate array and default initialize values
/// - _plu__SpatialPlanType_alternativeTitle* soap_new_req__plu__SpatialPlanType_alternativeTitle(soap*, ...) allocate, set required members
/// - _plu__SpatialPlanType_alternativeTitle* soap_new_set__plu__SpatialPlanType_alternativeTitle(soap*, ...) allocate, set all public members
/// - _plu__SpatialPlanType_alternativeTitle::soap_default(soap*) default initialize members
/// - int soap_read__plu__SpatialPlanType_alternativeTitle(soap*, _plu__SpatialPlanType_alternativeTitle*) deserialize from a stream
/// - int soap_write__plu__SpatialPlanType_alternativeTitle(soap*, _plu__SpatialPlanType_alternativeTitle*) serialize to a stream
/// - _plu__SpatialPlanType_alternativeTitle* _plu__SpatialPlanType_alternativeTitle::soap_dup(soap*) returns deep copy of _plu__SpatialPlanType_alternativeTitle, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _plu__SpatialPlanType_alternativeTitle::soap_del() deep deletes _plu__SpatialPlanType_alternativeTitle data members, use only after _plu__SpatialPlanType_alternativeTitle::soap_dup(NULL) (use soapcpp2 -Ed)
    class _plu__SpatialPlanType_alternativeTitle
    {
/// __item wraps "xs:string" simpleContent.
    std::string                          __item                        ;
/// Attribute "nilReason" of XSD type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
    }                                   *alternativeTitle               nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   -- Definition --
///   Name of the type of plan that the Member State has given to the plan. -- Description --
///   NOTE The admissible values for this attribute are managed at the member state level via a code list
///   EXAMPLE:
///   FR: DTA, SCOT, PLU, etc.
///   DE: Bebauungsplan, Flchennutzungsplan, Regionalplan, Landesentwicklungsplan NL: bestemmingsplan, structuurvisie.
/// </BLOCKQUOTE></PRE>
/// Element "planTypeName" of XSD type "http://www.opengis.net/gml/3.2":ReferenceType.
    gml__ReferenceType*                  planTypeName                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   -- Definition --
///   General indication of the step of the planning process that the plan is undergoing.
///   -- Description --
///   NOTE This enumeration contains values that are common to most planning systems.
/// </BLOCKQUOTE></PRE>
/// Element "processStepGeneral" of XSD type "http://www.opengis.net/gml/3.2":ReferenceType.
    gml__ReferenceType*                  processStepGeneral             nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   -- Name --
///   background map
///   -- Definition --
///   Identification of the background map that has been used for constructing this Plan.
/// </BLOCKQUOTE></PRE>
/// class _plu__SpatialPlanType_backgroundMap operations:
/// - _plu__SpatialPlanType_backgroundMap* soap_new__plu__SpatialPlanType_backgroundMap(soap*) allocate and default initialize
/// - _plu__SpatialPlanType_backgroundMap* soap_new__plu__SpatialPlanType_backgroundMap(soap*, int num) allocate array and default initialize values
/// - _plu__SpatialPlanType_backgroundMap* soap_new_req__plu__SpatialPlanType_backgroundMap(soap*, ...) allocate, set required members
/// - _plu__SpatialPlanType_backgroundMap* soap_new_set__plu__SpatialPlanType_backgroundMap(soap*, ...) allocate, set all public members
/// - _plu__SpatialPlanType_backgroundMap::soap_default(soap*) default initialize members
/// - int soap_read__plu__SpatialPlanType_backgroundMap(soap*, _plu__SpatialPlanType_backgroundMap*) deserialize from a stream
/// - int soap_write__plu__SpatialPlanType_backgroundMap(soap*, _plu__SpatialPlanType_backgroundMap*) serialize to a stream
/// - _plu__SpatialPlanType_backgroundMap* _plu__SpatialPlanType_backgroundMap::soap_dup(soap*) returns deep copy of _plu__SpatialPlanType_backgroundMap, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _plu__SpatialPlanType_backgroundMap::soap_del() deep deletes _plu__SpatialPlanType_backgroundMap data members, use only after _plu__SpatialPlanType_backgroundMap::soap_dup(NULL) (use soapcpp2 -Ed)
    class _plu__SpatialPlanType_backgroundMap
    {
/// <PRE><BLOCKQUOTE>
///   -- Definition --
///   Information regarding the map that has been used as a background in the definition of a spatial plan, a zoning element or a supplementary regulation.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://inspire.ec.europa.eu/schemas/plu/3.0:""http://inspire.ec.europa.eu/schemas/plu/3.0":BackgroundMapValue.
    plu__BackgroundMapValueType*         BackgroundMapValue             1;	///< Required element.
/// Attribute "nilReason" of XSD type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
    }                                   *backgroundMap                  nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   -- Definition --
///   Reference to relevant administrative ordinance.
///   -- Description --
///   NOTE This attribute is multiple because, independently from the current legal status of the plan, there can be references to more than one ordinance, in relation to the different steps that the planning process has already undergone (e.g. ordinance for the preparation of a new plan, ordinance of adoption, ordinance of approval, etc.).
/// </BLOCKQUOTE></PRE>
/// Vector of ordinance of length 1..unbounded.
    std::vector<
/// class _plu__SpatialPlanType_ordinance operations:
/// - _plu__SpatialPlanType_ordinance* soap_new__plu__SpatialPlanType_ordinance(soap*) allocate and default initialize
/// - _plu__SpatialPlanType_ordinance* soap_new__plu__SpatialPlanType_ordinance(soap*, int num) allocate array and default initialize values
/// - _plu__SpatialPlanType_ordinance* soap_new_req__plu__SpatialPlanType_ordinance(soap*, ...) allocate, set required members
/// - _plu__SpatialPlanType_ordinance* soap_new_set__plu__SpatialPlanType_ordinance(soap*, ...) allocate, set all public members
/// - _plu__SpatialPlanType_ordinance::soap_default(soap*) default initialize members
/// - int soap_read__plu__SpatialPlanType_ordinance(soap*, _plu__SpatialPlanType_ordinance*) deserialize from a stream
/// - int soap_write__plu__SpatialPlanType_ordinance(soap*, _plu__SpatialPlanType_ordinance*) serialize to a stream
/// - _plu__SpatialPlanType_ordinance* _plu__SpatialPlanType_ordinance::soap_dup(soap*) returns deep copy of _plu__SpatialPlanType_ordinance, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _plu__SpatialPlanType_ordinance::soap_del() deep deletes _plu__SpatialPlanType_ordinance data members, use only after _plu__SpatialPlanType_ordinance::soap_dup(NULL) (use soapcpp2 -Ed)
    class _plu__SpatialPlanType_ordinance
    {
/// <PRE><BLOCKQUOTE>
///   -- Definition --
///   Reference to administrative ordinance. Ordinance is a regulation/rule that is adopted by an authority that is legally mandated to take such ordinance.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://inspire.ec.europa.eu/schemas/plu/3.0:""http://inspire.ec.europa.eu/schemas/plu/3.0":OrdinanceValue.
    plu__OrdinanceValueType*             OrdinanceValue                 1;	///< Required element.
/// Attribute "nilReason" of XSD type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
    }>                                  *ordinance                      1;
/// <PRE><BLOCKQUOTE>
///   -- Definition --
///   Link to the official documents that relate to the spatial plan.
/// </BLOCKQUOTE></PRE>
/// Vector of gml__ReferenceType* of length 1..unbounded.
    std::vector<gml__ReferenceType*    > officialDocument               1;
/// <PRE><BLOCKQUOTE>
///   -- Definition --
///   Reference to the ZoningElements which belong to this SpatialPlan.
/// </BLOCKQUOTE></PRE>
/// Vector of gml__ReferenceType* of length 0..unbounded.
    std::vector<gml__ReferenceType*    > member                         0;
/// <PRE><BLOCKQUOTE>
///   -- Definition --
///   Links to supplementary regulations providing information and/or limitations on the use of land/water that supplements the zoning as part of this spatial plan.
/// </BLOCKQUOTE></PRE>
/// Vector of gml__ReferenceType* of length 0..unbounded.
    std::vector<gml__ReferenceType*    > restriction                    0;
};

/// @brief "http://inspire.ec.europa.eu/schemas/base/3.3":SpatialDataSetType is a complexType with complexContent extension of XSD type "http://www.opengis.net/gml/3.2":AbstractFeatureType.
///
/// class base__SpatialDataSetType operations:
/// - base__SpatialDataSetType* soap_new_base__SpatialDataSetType(soap*) allocate and default initialize
/// - base__SpatialDataSetType* soap_new_base__SpatialDataSetType(soap*, int num) allocate array and default initialize values
/// - base__SpatialDataSetType* soap_new_req_base__SpatialDataSetType(soap*, ...) allocate, set required members
/// - base__SpatialDataSetType* soap_new_set_base__SpatialDataSetType(soap*, ...) allocate, set all public members
/// - base__SpatialDataSetType::soap_default(soap*) default initialize members
/// - int soap_read_base__SpatialDataSetType(soap*, base__SpatialDataSetType*) deserialize from a stream
/// - int soap_write_base__SpatialDataSetType(soap*, base__SpatialDataSetType*) serialize to a stream
/// - base__SpatialDataSetType* base__SpatialDataSetType::soap_dup(soap*) returns deep copy of base__SpatialDataSetType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - base__SpatialDataSetType::soap_del() deep deletes base__SpatialDataSetType data members, use only after base__SpatialDataSetType::soap_dup(NULL) (use soapcpp2 -Ed)
class base__SpatialDataSetType : public gml__AbstractFeatureType
{ public:
/*  INHERITED FROM gml__AbstractGMLType:
//  BEGIN GROUP <xs:group name="StandardObjectProperties">
/// Vector of gml__MetaDataPropertyType* element refs of length 0..unbounded.
    std::vector<gml__MetaDataPropertyType*> metaDataProperty               0;
/// <PRE><BLOCKQUOTE>
///   The value of this property is a text description of the object. gml:description uses gml:StringOrRefType as its content model, so it may contain a simple text string content, or carry a reference to an external description. The use of gml:description to reference an external description has been deprecated and replaced by the gml:descriptionReference property.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":description.
    gml__StringOrRefType*                description                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The value of this property is a remote text description of the object. The xlink:href attribute of the gml:descriptionReference property references the external description.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":descriptionReference.
    gml__ReferenceType*                  descriptionReference           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Often, a special identifier is assigned to an object by the maintaining authority with the intention that it is used in references to the object For such cases, the codeSpace shall be provided. That identifier is usually unique either globally or within an application domain. gml:identifier is a pre-defined property for such identifiers.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":identifier.
    gml__CodeWithAuthorityType*          identifier                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The gml:name property provides a label or identifier for the object, commonly a descriptive name. An object may have several names, typically assigned by different authorities. gml:name uses the gml:CodeType content model. The authority for a name is indicated by the value of its (optional) codeSpace attribute. The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace. In common usage there will be one name per authority, so a processing application may select the name from its preferred codeSpace.
/// </BLOCKQUOTE></PRE>
/// Vector of gml__CodeType* element refs of length 0..unbounded.
    std::vector<gml__CodeType*         > name                           0;
//  END OF GROUP
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":id.
/// <PRE><BLOCKQUOTE>
///   The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.
/// </BLOCKQUOTE></PRE>
   @xsd__ID*                             gml__id                        0;	///< Optional attribute.
    END OF INHERITED FROM gml__AbstractGMLType */
/*  INHERITED FROM gml__AbstractFeatureType:
/// <PRE><BLOCKQUOTE>
///   This property describes the minimum bounding box or rectangle that encloses the entire feature.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":boundedBy.
    gml__BoundingShapeType*              boundedBy                      0;	///< Optional element.
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="location" minOccurs="0"> with global elements <priorityLocation>
   $int                                  __unionlocation                0;	///< Union _gml__union_SpatialDataSetType selector: set to SOAP_UNION__gml__union_SpatialDataSetType_<fieldname> or 0 to omit
/// Union for substitutionGroup gml__location.
    union _gml__union_SpatialDataSetType
    {
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":location.
    gml__LocationPropertyType*           location                       0;	///< Optional element.
/// Element "http://www.opengis.net/gml/3.2":priorityLocation.
    gml__PriorityLocationPropertyType*   priorityLocation               nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_SpatialDataSetType      ;
//  END OF SUBSTITUTIONS
    END OF INHERITED FROM gml__AbstractFeatureType */
/// <PRE><BLOCKQUOTE>
///   -- Definition --
///   Identifier of the spatial data set.
/// </BLOCKQUOTE></PRE>
/// Element "identifier" of XSD type "http://inspire.ec.europa.eu/schemas/base/3.3":IdentifierPropertyType.
    base__IdentifierPropertyType*        identifier                     1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   -- Definition --
///   Metadata of the spatial data set.
/// </BLOCKQUOTE></PRE>
/// class _base__SpatialDataSetType_metadata operations:
/// - _base__SpatialDataSetType_metadata* soap_new__base__SpatialDataSetType_metadata(soap*) allocate and default initialize
/// - _base__SpatialDataSetType_metadata* soap_new__base__SpatialDataSetType_metadata(soap*, int num) allocate array and default initialize values
/// - _base__SpatialDataSetType_metadata* soap_new_req__base__SpatialDataSetType_metadata(soap*, ...) allocate, set required members
/// - _base__SpatialDataSetType_metadata* soap_new_set__base__SpatialDataSetType_metadata(soap*, ...) allocate, set all public members
/// - _base__SpatialDataSetType_metadata::soap_default(soap*) default initialize members
/// - int soap_read__base__SpatialDataSetType_metadata(soap*, _base__SpatialDataSetType_metadata*) deserialize from a stream
/// - int soap_write__base__SpatialDataSetType_metadata(soap*, _base__SpatialDataSetType_metadata*) serialize to a stream
/// - _base__SpatialDataSetType_metadata* _base__SpatialDataSetType_metadata::soap_dup(soap*) returns deep copy of _base__SpatialDataSetType_metadata, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _base__SpatialDataSetType_metadata::soap_del() deep deletes _base__SpatialDataSetType_metadata data members, use only after _base__SpatialDataSetType_metadata::soap_dup(NULL) (use soapcpp2 -Ed)
    class _base__SpatialDataSetType_metadata
    {
/// INHERITED FROM gml__AbstractMetadataPropertyType:
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":OwnershipAttributeGroup">.
/// Attribute "owns" of XSD type xs:boolean.
   @bool                                 owns                           0 = false;	///< Default attribute value="false".
//  END OF ATTRIBUTEGROUP
//  END OF INHERITED FROM gml__AbstractMetadataPropertyType
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    class __base__SpatialDataSetType_metadata_sequence
    {
/// Element reference "http://inspire.ec.europa.eu/schemas/base/3.3:""http://www.isotc211.org/2005/gmd":MD_Metadata.
    gmd__MD_x005fMetadata_x005fType*     gmd__MD_x005fMetadata          1;	///< Required element.
    }                                   *__SpatialDataSetType_metadata_sequence 0;
//  END OF SEQUENCE
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":AssociationAttributeGroup">.
/// Attribute "nilReason" of XSD type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  :nilReason                     0;	///< Optional attribute.
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":remoteSchema.
   @xsd__anyURI*                         gml__remoteSchema              0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.w3.org/1999/xlink":simpleAttrs">.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":type.
   @enum xlink__typeType*                xlink__type                    0;	///< Fixed attribute value="simple".
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":href.
   @xlink__hrefType*                     xlink__href                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":role.
   @xlink__roleType*                     xlink__role                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":arcrole.
   @xlink__arcroleType*                  xlink__arcrole                 0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":title.
   @xlink__titleAttrType*                xlink__title                   0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":show.
   @enum xlink__showType*                xlink__show                    0;	///< Optional attribute.
/// Attribute reference "http://www.w3.org/1999/xlink":"http://www.w3.org/1999/xlink":actuate.
   @enum xlink__actuateType*             xlink__actuate                 0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
    }                                   *metadata                       nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   The spatial objects that are members of the spatial data set
/// </BLOCKQUOTE></PRE>
/// Vector of gml__FeaturePropertyType* of length 0..unbounded.
    std::vector<gml__FeaturePropertyType*> member                         0;
};

/// @brief "http://inspire.ec.europa.eu/schemas/base2/1.0":LegislationCitationType is a complexType with complexContent extension of XSD type "http://inspire.ec.europa.eu/schemas/base2/1.0":DocumentCitationType.
///
/// class base2__LegislationCitationType operations:
/// - base2__LegislationCitationType* soap_new_base2__LegislationCitationType(soap*) allocate and default initialize
/// - base2__LegislationCitationType* soap_new_base2__LegislationCitationType(soap*, int num) allocate array and default initialize values
/// - base2__LegislationCitationType* soap_new_req_base2__LegislationCitationType(soap*, ...) allocate, set required members
/// - base2__LegislationCitationType* soap_new_set_base2__LegislationCitationType(soap*, ...) allocate, set all public members
/// - base2__LegislationCitationType::soap_default(soap*) default initialize members
/// - int soap_read_base2__LegislationCitationType(soap*, base2__LegislationCitationType*) deserialize from a stream
/// - int soap_write_base2__LegislationCitationType(soap*, base2__LegislationCitationType*) serialize to a stream
/// - base2__LegislationCitationType* base2__LegislationCitationType::soap_dup(soap*) returns deep copy of base2__LegislationCitationType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - base2__LegislationCitationType::soap_del() deep deletes base2__LegislationCitationType data members, use only after base2__LegislationCitationType::soap_dup(NULL) (use soapcpp2 -Ed)
class base2__LegislationCitationType : public base2__DocumentCitationType
{ public:
/*  INHERITED FROM gml__AbstractGMLType:
//  BEGIN GROUP <xs:group name="StandardObjectProperties">
/// Vector of gml__MetaDataPropertyType* element refs of length 0..unbounded.
    std::vector<gml__MetaDataPropertyType*> metaDataProperty               0;
/// <PRE><BLOCKQUOTE>
///   The value of this property is a text description of the object. gml:description uses gml:StringOrRefType as its content model, so it may contain a simple text string content, or carry a reference to an external description. The use of gml:description to reference an external description has been deprecated and replaced by the gml:descriptionReference property.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":description.
    gml__StringOrRefType*                description                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The value of this property is a remote text description of the object. The xlink:href attribute of the gml:descriptionReference property references the external description.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":descriptionReference.
    gml__ReferenceType*                  descriptionReference           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Often, a special identifier is assigned to an object by the maintaining authority with the intention that it is used in references to the object For such cases, the codeSpace shall be provided. That identifier is usually unique either globally or within an application domain. gml:identifier is a pre-defined property for such identifiers.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":identifier.
    gml__CodeWithAuthorityType*          identifier                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The gml:name property provides a label or identifier for the object, commonly a descriptive name. An object may have several names, typically assigned by different authorities. gml:name uses the gml:CodeType content model. The authority for a name is indicated by the value of its (optional) codeSpace attribute. The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace. In common usage there will be one name per authority, so a processing application may select the name from its preferred codeSpace.
/// </BLOCKQUOTE></PRE>
/// Vector of gml__CodeType* element refs of length 0..unbounded.
    std::vector<gml__CodeType*         > name                           0;
//  END OF GROUP
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":id.
/// <PRE><BLOCKQUOTE>
///   The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.
/// </BLOCKQUOTE></PRE>
   @xsd__ID*                             gml__id                        0;	///< Optional attribute.
    END OF INHERITED FROM gml__AbstractGMLType */
/*  INHERITED FROM base2__DocumentCitationType:
/// <PRE><BLOCKQUOTE>
///   -- Name --
///   name
///   -- Definition --
///   Name of the document.
///   -- Description --
///   NOTE For legal documents, this should be the official name assigned to the legislative instrument.
///   EXAMPLE The official legal name for the INSPIRE Directive is "Directive 2007/2/EC of the European Parliament and of the Council of 14 March 2007 establishing an Infrastructure for Spatial Information in the European Community (INSPIRE)"
/// </BLOCKQUOTE></PRE>
/// Element "name" of XSD type xs:string.
    std::string                          name                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   -- Name --
///   short name
///   -- Definition --
///   Short name or alternative title of the document.
///   -- Description --
///   NOTE For legal documents, this should be a short name or alternative title commonly used to identify the legislation.
///   EXAMPLE 1: INSPIRE Directive is the short name for "Directive 2007/2/EC of the European Parliament and of the Council of 14 March 2007 establishing an Infrastructure for Spatial Information in the European Community (INSPIRE)"
///   EXAMPLE 2: CAFE Directive is the short name for the Directive 2008/50/EC of the European Parliament and of the Council of 21 May 2008 on ambient air quality and cleaner air for Europe" EXAMPLE 3: Water Framework Directive the short name for "Directive 2000/60/EC of the European Parliament and of the Council establishing a framework for the Community action in the field of water policy"
/// </BLOCKQUOTE></PRE>
/// class _base2__LegislationCitationType_shortName operations:
/// - _base2__LegislationCitationType_shortName* soap_new__base2__LegislationCitationType_shortName(soap*) allocate and default initialize
/// - _base2__LegislationCitationType_shortName* soap_new__base2__LegislationCitationType_shortName(soap*, int num) allocate array and default initialize values
/// - _base2__LegislationCitationType_shortName* soap_new_req__base2__LegislationCitationType_shortName(soap*, ...) allocate, set required members
/// - _base2__LegislationCitationType_shortName* soap_new_set__base2__LegislationCitationType_shortName(soap*, ...) allocate, set all public members
/// - _base2__LegislationCitationType_shortName::soap_default(soap*) default initialize members
/// - int soap_read__base2__LegislationCitationType_shortName(soap*, _base2__LegislationCitationType_shortName*) deserialize from a stream
/// - int soap_write__base2__LegislationCitationType_shortName(soap*, _base2__LegislationCitationType_shortName*) serialize to a stream
/// - _base2__LegislationCitationType_shortName* _base2__LegislationCitationType_shortName::soap_dup(soap*) returns deep copy of _base2__LegislationCitationType_shortName, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _base2__LegislationCitationType_shortName::soap_del() deep deletes _base2__LegislationCitationType_shortName data members, use only after _base2__LegislationCitationType_shortName::soap_dup(NULL) (use soapcpp2 -Ed)
    class _base2__LegislationCitationType_shortName
    {
/// __item wraps "xs:string" simpleContent.
    std::string                          __item                        ;
/// Attribute "nilReason" of XSD type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
    }                                   *shortName                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   -- Name --
///   date
///   -- Definition --
///   Date of creation, publication or revision of the document.
/// </BLOCKQUOTE></PRE>
/// class _base2__LegislationCitationType_date operations:
/// - _base2__LegislationCitationType_date* soap_new__base2__LegislationCitationType_date(soap*) allocate and default initialize
/// - _base2__LegislationCitationType_date* soap_new__base2__LegislationCitationType_date(soap*, int num) allocate array and default initialize values
/// - _base2__LegislationCitationType_date* soap_new_req__base2__LegislationCitationType_date(soap*, ...) allocate, set required members
/// - _base2__LegislationCitationType_date* soap_new_set__base2__LegislationCitationType_date(soap*, ...) allocate, set all public members
/// - _base2__LegislationCitationType_date::soap_default(soap*) default initialize members
/// - int soap_read__base2__LegislationCitationType_date(soap*, _base2__LegislationCitationType_date*) deserialize from a stream
/// - int soap_write__base2__LegislationCitationType_date(soap*, _base2__LegislationCitationType_date*) serialize to a stream
/// - _base2__LegislationCitationType_date* _base2__LegislationCitationType_date::soap_dup(soap*) returns deep copy of _base2__LegislationCitationType_date, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _base2__LegislationCitationType_date::soap_del() deep deletes _base2__LegislationCitationType_date data members, use only after _base2__LegislationCitationType_date::soap_dup(NULL) (use soapcpp2 -Ed)
    class _base2__LegislationCitationType_date
    {
/// INHERITED FROM gml__AbstractMetadataPropertyType:
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":OwnershipAttributeGroup">.
/// Attribute "owns" of XSD type xs:boolean.
   @bool                                 owns                           0 = false;	///< Default attribute value="false".
//  END OF ATTRIBUTEGROUP
//  END OF INHERITED FROM gml__AbstractMetadataPropertyType
/// Element reference "http://inspire.ec.europa.eu/schemas/base2/1.0:""http://www.isotc211.org/2005/gmd":CI_Date.
    gmd__CI_x005fDate_x005fType*         gmd__CI_x005fDate              1;	///< Required element.
/// Attribute "nilReason" of XSD type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
    }                                   *date                           nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   -- Name --
///   link to online version
///   -- Definition --
///   Link to an online version of the document
/// </BLOCKQUOTE></PRE>
/// Vector of link of length 1..unbounded.
    std::vector<
/// class _base2__LegislationCitationType_link operations:
/// - _base2__LegislationCitationType_link* soap_new__base2__LegislationCitationType_link(soap*) allocate and default initialize
/// - _base2__LegislationCitationType_link* soap_new__base2__LegislationCitationType_link(soap*, int num) allocate array and default initialize values
/// - _base2__LegislationCitationType_link* soap_new_req__base2__LegislationCitationType_link(soap*, ...) allocate, set required members
/// - _base2__LegislationCitationType_link* soap_new_set__base2__LegislationCitationType_link(soap*, ...) allocate, set all public members
/// - _base2__LegislationCitationType_link::soap_default(soap*) default initialize members
/// - int soap_read__base2__LegislationCitationType_link(soap*, _base2__LegislationCitationType_link*) deserialize from a stream
/// - int soap_write__base2__LegislationCitationType_link(soap*, _base2__LegislationCitationType_link*) serialize to a stream
/// - _base2__LegislationCitationType_link* _base2__LegislationCitationType_link::soap_dup(soap*) returns deep copy of _base2__LegislationCitationType_link, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _base2__LegislationCitationType_link::soap_del() deep deletes _base2__LegislationCitationType_link data members, use only after _base2__LegislationCitationType_link::soap_dup(NULL) (use soapcpp2 -Ed)
    class _base2__LegislationCitationType_link
    {
/// __item wraps "xs:anyURI" simpleContent.
    xsd__anyURI                          __item                        ;
/// Attribute "nilReason" of XSD type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
    }>                                  *link                           1;
/// <PRE><BLOCKQUOTE>
///   -- Name --
///   specific reference
///   -- Definition --
///   Reference to a specific part of the document.
///   -- Description --
///   EXAMPLE For legal documents, this attribute can contain a reference to article(s) that specify a specific requirement or obligation.
/// </BLOCKQUOTE></PRE>
/// Vector of specificReference of length 0..unbounded.
    std::vector<
/// class _base2__LegislationCitationType_specificReference operations:
/// - _base2__LegislationCitationType_specificReference* soap_new__base2__LegislationCitationType_specificReference(soap*) allocate and default initialize
/// - _base2__LegislationCitationType_specificReference* soap_new__base2__LegislationCitationType_specificReference(soap*, int num) allocate array and default initialize values
/// - _base2__LegislationCitationType_specificReference* soap_new_req__base2__LegislationCitationType_specificReference(soap*, ...) allocate, set required members
/// - _base2__LegislationCitationType_specificReference* soap_new_set__base2__LegislationCitationType_specificReference(soap*, ...) allocate, set all public members
/// - _base2__LegislationCitationType_specificReference::soap_default(soap*) default initialize members
/// - int soap_read__base2__LegislationCitationType_specificReference(soap*, _base2__LegislationCitationType_specificReference*) deserialize from a stream
/// - int soap_write__base2__LegislationCitationType_specificReference(soap*, _base2__LegislationCitationType_specificReference*) serialize to a stream
/// - _base2__LegislationCitationType_specificReference* _base2__LegislationCitationType_specificReference::soap_dup(soap*) returns deep copy of _base2__LegislationCitationType_specificReference, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _base2__LegislationCitationType_specificReference::soap_del() deep deletes _base2__LegislationCitationType_specificReference data members, use only after _base2__LegislationCitationType_specificReference::soap_dup(NULL) (use soapcpp2 -Ed)
    class _base2__LegislationCitationType_specificReference
    {
/// __item wraps "xs:string" simpleContent.
    std::string                          __item                        ;
/// Attribute "nilReason" of XSD type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
    }>                                  *specificReference              0;
    END OF INHERITED FROM base2__DocumentCitationType */
/// <PRE><BLOCKQUOTE>
///   -- Name --
///   identification number
///   -- Definition --
///   Code used to identify the legislative instrument
///   -- Description --
///   EXAMPLE 1: 2007/2/EC is the identification number for the INSPIRE Directive
///   EXAMPLE 2: 2008/50/EC is the identification number for the CAFE Directive
///   EXAMPLE 3: 2000/60/EC is the identification number for the Water Framework Directive
/// </BLOCKQUOTE></PRE>
/// Element "identificationNumber" of XSD type xs:string.
    std::string*                         identificationNumber           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   -- Name --
///   official document number
///   -- Definition --
///   Official document number used to uniquely identify the legislative instrument.
///   -- Description --
///   NOTE: An official document number may be assigned to uniquely identify the legislative instrument.
///   EXAMPLE: CELEX Number used to uniquely identify European Union Legislation
/// </BLOCKQUOTE></PRE>
/// Element "officialDocumentNumber" of XSD type xs:string.
    std::string*                         officialDocumentNumber         0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   -- Name --
///   date entered into force
///   -- Definition --
///   Date the legislative instrument entered into force.
/// </BLOCKQUOTE></PRE>
/// Element "dateEnteredIntoForce" of XSD type "http://www.opengis.net/gml/3.2":TimePositionType.
    gml__TimePositionType*               dateEnteredIntoForce           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   -- Name --
///   date repealed
///   -- Definition --
///   Date the legislative instrument was repealed.
/// </BLOCKQUOTE></PRE>
/// Element "dateRepealed" of XSD type "http://www.opengis.net/gml/3.2":TimePositionType.
    gml__TimePositionType*               dateRepealed                   0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   -- Name --
///   name
///   -- Definition --
///   The level at which the legislative instrument is adopted.
/// </BLOCKQUOTE></PRE>
/// Element "level" of XSD type "http://www.opengis.net/gml/3.2":ReferenceType.
    gml__ReferenceType*                  level                          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   -- Name --
///   journal citation
///   -- Definition --
///   Citation of the official journal in which the legislation is published.
/// </BLOCKQUOTE></PRE>
/// Element "journalCitation" of XSD type "http://inspire.ec.europa.eu/schemas/base2/1.0":OfficialJournalInformationPropertyType.
    base2__OfficialJournalInformationPropertyType*  journalCitation                0;	///< Optional element.
};

/// @brief "http://www.opengis.net/gml/3.2":DynamicFeatureType is a complexType with complexContent extension of XSD type "http://www.opengis.net/gml/3.2":AbstractFeatureType.
///
/// class gml__DynamicFeatureType operations:
/// - gml__DynamicFeatureType* soap_new_gml__DynamicFeatureType(soap*) allocate and default initialize
/// - gml__DynamicFeatureType* soap_new_gml__DynamicFeatureType(soap*, int num) allocate array and default initialize values
/// - gml__DynamicFeatureType* soap_new_req_gml__DynamicFeatureType(soap*, ...) allocate, set required members
/// - gml__DynamicFeatureType* soap_new_set_gml__DynamicFeatureType(soap*, ...) allocate, set all public members
/// - gml__DynamicFeatureType::soap_default(soap*) default initialize members
/// - int soap_read_gml__DynamicFeatureType(soap*, gml__DynamicFeatureType*) deserialize from a stream
/// - int soap_write_gml__DynamicFeatureType(soap*, gml__DynamicFeatureType*) serialize to a stream
/// - gml__DynamicFeatureType* gml__DynamicFeatureType::soap_dup(soap*) returns deep copy of gml__DynamicFeatureType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__DynamicFeatureType::soap_del() deep deletes gml__DynamicFeatureType data members, use only after gml__DynamicFeatureType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__DynamicFeatureType : public gml__AbstractFeatureType
{ public:
/*  INHERITED FROM gml__AbstractGMLType:
//  BEGIN GROUP <xs:group name="StandardObjectProperties">
/// Vector of gml__MetaDataPropertyType* element refs of length 0..unbounded.
    std::vector<gml__MetaDataPropertyType*> metaDataProperty               0;
/// <PRE><BLOCKQUOTE>
///   The value of this property is a text description of the object. gml:description uses gml:StringOrRefType as its content model, so it may contain a simple text string content, or carry a reference to an external description. The use of gml:description to reference an external description has been deprecated and replaced by the gml:descriptionReference property.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":description.
    gml__StringOrRefType*                description                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The value of this property is a remote text description of the object. The xlink:href attribute of the gml:descriptionReference property references the external description.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":descriptionReference.
    gml__ReferenceType*                  descriptionReference           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Often, a special identifier is assigned to an object by the maintaining authority with the intention that it is used in references to the object For such cases, the codeSpace shall be provided. That identifier is usually unique either globally or within an application domain. gml:identifier is a pre-defined property for such identifiers.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":identifier.
    gml__CodeWithAuthorityType*          identifier                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The gml:name property provides a label or identifier for the object, commonly a descriptive name. An object may have several names, typically assigned by different authorities. gml:name uses the gml:CodeType content model. The authority for a name is indicated by the value of its (optional) codeSpace attribute. The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace. In common usage there will be one name per authority, so a processing application may select the name from its preferred codeSpace.
/// </BLOCKQUOTE></PRE>
/// Vector of gml__CodeType* element refs of length 0..unbounded.
    std::vector<gml__CodeType*         > name                           0;
//  END OF GROUP
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":id.
/// <PRE><BLOCKQUOTE>
///   The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.
/// </BLOCKQUOTE></PRE>
   @xsd__ID*                             gml__id                        0;	///< Optional attribute.
    END OF INHERITED FROM gml__AbstractGMLType */
/*  INHERITED FROM gml__AbstractFeatureType:
/// <PRE><BLOCKQUOTE>
///   This property describes the minimum bounding box or rectangle that encloses the entire feature.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":boundedBy.
    gml__BoundingShapeType*              boundedBy                      0;	///< Optional element.
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="location" minOccurs="0"> with global elements <priorityLocation>
   $int                                  __unionlocation                0;	///< Union _gml__union_DynamicFeatureType selector: set to SOAP_UNION__gml__union_DynamicFeatureType_<fieldname> or 0 to omit
/// Union for substitutionGroup gml__location.
    union _gml__union_DynamicFeatureType
    {
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":location.
    gml__LocationPropertyType*           location                       0;	///< Optional element.
/// Element "http://www.opengis.net/gml/3.2":priorityLocation.
    gml__PriorityLocationPropertyType*   priorityLocation               nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_DynamicFeatureType      ;
//  END OF SUBSTITUTIONS
    END OF INHERITED FROM gml__AbstractFeatureType */
//  BEGIN GROUP <xs:group name="dynamicProperties">
/// <PRE><BLOCKQUOTE>
///   A convenience group. This allows an application schema developer to include dynamic properties in a content model in a standard fashion.
/// </BLOCKQUOTE></PRE>
/// <PRE><BLOCKQUOTE>
///   gml:validTime is a convenience property element.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":validTime.
    gml__TimePrimitivePropertyType*      validTime                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   A generic sequence of events constitute a gml:history of an object.
///   The gml:history element contains a set of elements in the substitution group headed by the abstract element gml:AbstractTimeSlice, representing the time-varying properties of interest. The history property of a dynamic feature associates a feature instance with a sequence of time slices (i.e. change events) that encapsulate the evolution of the feature.
/// </BLOCKQUOTE></PRE>
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="history" minOccurs="0"> with global elements <track>
   $int                                  __unionhistory                 0;	///< Union _gml__union_DynamicFeatureType_ selector: set to SOAP_UNION__gml__union_DynamicFeatureType__<fieldname> or 0 to omit
/// Union for substitutionGroup gml__history.
    union _gml__union_DynamicFeatureType_
    {
/// <PRE><BLOCKQUOTE>
///   A generic sequence of events constitute a gml:history of an object.
///   The gml:history element contains a set of elements in the substitution group headed by the abstract element gml:AbstractTimeSlice, representing the time-varying properties of interest. The history property of a dynamic feature associates a feature instance with a sequence of time slices (i.e. change events) that encapsulate the evolution of the feature.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":history.
    gml__HistoryPropertyType*            history                        0;	///< Optional element.
/// Element "http://www.opengis.net/gml/3.2":track.
    gml__HistoryPropertyType*            track                          nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_DynamicFeatureType_     ;
//  END OF SUBSTITUTIONS
/// <PRE><BLOCKQUOTE>
///   Evidence is represented by a simple gml:dataSource or gml:dataSourceReference property that indicates the source of the temporal data. The remote link attributes of the gml:dataSource element have been deprecated along with its current type.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":dataSource.
    gml__StringOrRefType*                dataSource                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Evidence is represented by a simple gml:dataSource or gml:dataSourceReference property that indicates the source of the temporal data.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":dataSourceReference.
    gml__ReferenceType*                  dataSourceReference            0;	///< Optional element.
//  END OF GROUP
};

/// @brief "http://www.opengis.net/gml/3.2":AbstractTopoPrimitiveType is an abstract complexType with complexContent extension of XSD type "http://www.opengis.net/gml/3.2":AbstractTopologyType.
///
/// class gml__AbstractTopoPrimitiveType operations:
/// - gml__AbstractTopoPrimitiveType* soap_new_gml__AbstractTopoPrimitiveType(soap*) allocate and default initialize
/// - gml__AbstractTopoPrimitiveType* soap_new_gml__AbstractTopoPrimitiveType(soap*, int num) allocate array and default initialize values
/// - gml__AbstractTopoPrimitiveType* soap_new_req_gml__AbstractTopoPrimitiveType(soap*, ...) allocate, set required members
/// - gml__AbstractTopoPrimitiveType* soap_new_set_gml__AbstractTopoPrimitiveType(soap*, ...) allocate, set all public members
/// - gml__AbstractTopoPrimitiveType::soap_default(soap*) default initialize members
/// - int soap_read_gml__AbstractTopoPrimitiveType(soap*, gml__AbstractTopoPrimitiveType*) deserialize from a stream
/// - int soap_write_gml__AbstractTopoPrimitiveType(soap*, gml__AbstractTopoPrimitiveType*) serialize to a stream
/// - gml__AbstractTopoPrimitiveType* gml__AbstractTopoPrimitiveType::soap_dup(soap*) returns deep copy of gml__AbstractTopoPrimitiveType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__AbstractTopoPrimitiveType::soap_del() deep deletes gml__AbstractTopoPrimitiveType data members, use only after gml__AbstractTopoPrimitiveType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__AbstractTopoPrimitiveType : public gml__AbstractTopologyType
{ public:
/*  INHERITED FROM gml__AbstractGMLType:
//  BEGIN GROUP <xs:group name="StandardObjectProperties">
/// Vector of gml__MetaDataPropertyType* element refs of length 0..unbounded.
    std::vector<gml__MetaDataPropertyType*> metaDataProperty               0;
/// <PRE><BLOCKQUOTE>
///   The value of this property is a text description of the object. gml:description uses gml:StringOrRefType as its content model, so it may contain a simple text string content, or carry a reference to an external description. The use of gml:description to reference an external description has been deprecated and replaced by the gml:descriptionReference property.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":description.
    gml__StringOrRefType*                description                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The value of this property is a remote text description of the object. The xlink:href attribute of the gml:descriptionReference property references the external description.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":descriptionReference.
    gml__ReferenceType*                  descriptionReference           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Often, a special identifier is assigned to an object by the maintaining authority with the intention that it is used in references to the object For such cases, the codeSpace shall be provided. That identifier is usually unique either globally or within an application domain. gml:identifier is a pre-defined property for such identifiers.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":identifier.
    gml__CodeWithAuthorityType*          identifier                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The gml:name property provides a label or identifier for the object, commonly a descriptive name. An object may have several names, typically assigned by different authorities. gml:name uses the gml:CodeType content model. The authority for a name is indicated by the value of its (optional) codeSpace attribute. The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace. In common usage there will be one name per authority, so a processing application may select the name from its preferred codeSpace.
/// </BLOCKQUOTE></PRE>
/// Vector of gml__CodeType* element refs of length 0..unbounded.
    std::vector<gml__CodeType*         > name                           0;
//  END OF GROUP
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":id.
/// <PRE><BLOCKQUOTE>
///   The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.
/// </BLOCKQUOTE></PRE>
   @xsd__ID*                             gml__id                        0;	///< Optional attribute.
    END OF INHERITED FROM gml__AbstractGMLType */
/*  INHERITED FROM gml__AbstractTopologyType:
    END OF INHERITED FROM gml__AbstractTopologyType */
};

/// @brief "http://www.opengis.net/gml/3.2":TopoPointType is a complexType with complexContent extension of XSD type "http://www.opengis.net/gml/3.2":AbstractTopologyType.
///
/// class gml__TopoPointType operations:
/// - gml__TopoPointType* soap_new_gml__TopoPointType(soap*) allocate and default initialize
/// - gml__TopoPointType* soap_new_gml__TopoPointType(soap*, int num) allocate array and default initialize values
/// - gml__TopoPointType* soap_new_req_gml__TopoPointType(soap*, ...) allocate, set required members
/// - gml__TopoPointType* soap_new_set_gml__TopoPointType(soap*, ...) allocate, set all public members
/// - gml__TopoPointType::soap_default(soap*) default initialize members
/// - int soap_read_gml__TopoPointType(soap*, gml__TopoPointType*) deserialize from a stream
/// - int soap_write_gml__TopoPointType(soap*, gml__TopoPointType*) serialize to a stream
/// - gml__TopoPointType* gml__TopoPointType::soap_dup(soap*) returns deep copy of gml__TopoPointType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__TopoPointType::soap_del() deep deletes gml__TopoPointType data members, use only after gml__TopoPointType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__TopoPointType : public gml__AbstractTopologyType
{ public:
/*  INHERITED FROM gml__AbstractGMLType:
//  BEGIN GROUP <xs:group name="StandardObjectProperties">
/// Vector of gml__MetaDataPropertyType* element refs of length 0..unbounded.
    std::vector<gml__MetaDataPropertyType*> metaDataProperty               0;
/// <PRE><BLOCKQUOTE>
///   The value of this property is a text description of the object. gml:description uses gml:StringOrRefType as its content model, so it may contain a simple text string content, or carry a reference to an external description. The use of gml:description to reference an external description has been deprecated and replaced by the gml:descriptionReference property.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":description.
    gml__StringOrRefType*                description                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The value of this property is a remote text description of the object. The xlink:href attribute of the gml:descriptionReference property references the external description.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":descriptionReference.
    gml__ReferenceType*                  descriptionReference           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Often, a special identifier is assigned to an object by the maintaining authority with the intention that it is used in references to the object For such cases, the codeSpace shall be provided. That identifier is usually unique either globally or within an application domain. gml:identifier is a pre-defined property for such identifiers.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":identifier.
    gml__CodeWithAuthorityType*          identifier                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The gml:name property provides a label or identifier for the object, commonly a descriptive name. An object may have several names, typically assigned by different authorities. gml:name uses the gml:CodeType content model. The authority for a name is indicated by the value of its (optional) codeSpace attribute. The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace. In common usage there will be one name per authority, so a processing application may select the name from its preferred codeSpace.
/// </BLOCKQUOTE></PRE>
/// Vector of gml__CodeType* element refs of length 0..unbounded.
    std::vector<gml__CodeType*         > name                           0;
//  END OF GROUP
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":id.
/// <PRE><BLOCKQUOTE>
///   The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.
/// </BLOCKQUOTE></PRE>
   @xsd__ID*                             gml__id                        0;	///< Optional attribute.
    END OF INHERITED FROM gml__AbstractGMLType */
/*  INHERITED FROM gml__AbstractTopologyType:
    END OF INHERITED FROM gml__AbstractTopologyType */
/// <PRE><BLOCKQUOTE>
///   A gml:directedNode property element describes the boundary of topology edges and is used in the support of topological point features via the gml:TopoPoint expression, see below. The orientation attribute of type gml:SignType expresses the sense in which the included node is used: start ("-") or end ("+") node.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":directedNode.
    gml__DirectedNodePropertyType*       directedNode                   1;	///< Required element.
};

/// @brief "http://www.opengis.net/gml/3.2":TopoCurveType is a complexType with complexContent extension of XSD type "http://www.opengis.net/gml/3.2":AbstractTopologyType.
///
/// class gml__TopoCurveType operations:
/// - gml__TopoCurveType* soap_new_gml__TopoCurveType(soap*) allocate and default initialize
/// - gml__TopoCurveType* soap_new_gml__TopoCurveType(soap*, int num) allocate array and default initialize values
/// - gml__TopoCurveType* soap_new_req_gml__TopoCurveType(soap*, ...) allocate, set required members
/// - gml__TopoCurveType* soap_new_set_gml__TopoCurveType(soap*, ...) allocate, set all public members
/// - gml__TopoCurveType::soap_default(soap*) default initialize members
/// - int soap_read_gml__TopoCurveType(soap*, gml__TopoCurveType*) deserialize from a stream
/// - int soap_write_gml__TopoCurveType(soap*, gml__TopoCurveType*) serialize to a stream
/// - gml__TopoCurveType* gml__TopoCurveType::soap_dup(soap*) returns deep copy of gml__TopoCurveType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__TopoCurveType::soap_del() deep deletes gml__TopoCurveType data members, use only after gml__TopoCurveType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__TopoCurveType : public gml__AbstractTopologyType
{ public:
/*  INHERITED FROM gml__AbstractGMLType:
//  BEGIN GROUP <xs:group name="StandardObjectProperties">
/// Vector of gml__MetaDataPropertyType* element refs of length 0..unbounded.
    std::vector<gml__MetaDataPropertyType*> metaDataProperty               0;
/// <PRE><BLOCKQUOTE>
///   The value of this property is a text description of the object. gml:description uses gml:StringOrRefType as its content model, so it may contain a simple text string content, or carry a reference to an external description. The use of gml:description to reference an external description has been deprecated and replaced by the gml:descriptionReference property.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":description.
    gml__StringOrRefType*                description                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The value of this property is a remote text description of the object. The xlink:href attribute of the gml:descriptionReference property references the external description.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":descriptionReference.
    gml__ReferenceType*                  descriptionReference           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Often, a special identifier is assigned to an object by the maintaining authority with the intention that it is used in references to the object For such cases, the codeSpace shall be provided. That identifier is usually unique either globally or within an application domain. gml:identifier is a pre-defined property for such identifiers.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":identifier.
    gml__CodeWithAuthorityType*          identifier                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The gml:name property provides a label or identifier for the object, commonly a descriptive name. An object may have several names, typically assigned by different authorities. gml:name uses the gml:CodeType content model. The authority for a name is indicated by the value of its (optional) codeSpace attribute. The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace. In common usage there will be one name per authority, so a processing application may select the name from its preferred codeSpace.
/// </BLOCKQUOTE></PRE>
/// Vector of gml__CodeType* element refs of length 0..unbounded.
    std::vector<gml__CodeType*         > name                           0;
//  END OF GROUP
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":id.
/// <PRE><BLOCKQUOTE>
///   The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.
/// </BLOCKQUOTE></PRE>
   @xsd__ID*                             gml__id                        0;	///< Optional attribute.
    END OF INHERITED FROM gml__AbstractGMLType */
/*  INHERITED FROM gml__AbstractTopologyType:
    END OF INHERITED FROM gml__AbstractTopologyType */
/// <PRE><BLOCKQUOTE>
///   A gml:directedEdge property element describes the boundary of topology faces, the coBoundary of topology nodes and is used in the support of topological line features via the gml:TopoCurve expression, see below. The orientation attribute of type gml:SignType expresses the sense in which the included edge is used, i.e. forward or reverse.
/// </BLOCKQUOTE></PRE>
/// Vector of gml__DirectedEdgePropertyType* element refs of length 1..unbounded.
    std::vector<gml__DirectedEdgePropertyType*> directedEdge                   1;
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":AggregationAttributeGroup">.
/// Attribute "aggregationType" of XSD type "http://www.opengis.net/gml/3.2":AggregationType.
   @enum gml__AggregationType*           aggregationType                0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.opengis.net/gml/3.2":TopoSurfaceType is a complexType with complexContent extension of XSD type "http://www.opengis.net/gml/3.2":AbstractTopologyType.
///
/// class gml__TopoSurfaceType operations:
/// - gml__TopoSurfaceType* soap_new_gml__TopoSurfaceType(soap*) allocate and default initialize
/// - gml__TopoSurfaceType* soap_new_gml__TopoSurfaceType(soap*, int num) allocate array and default initialize values
/// - gml__TopoSurfaceType* soap_new_req_gml__TopoSurfaceType(soap*, ...) allocate, set required members
/// - gml__TopoSurfaceType* soap_new_set_gml__TopoSurfaceType(soap*, ...) allocate, set all public members
/// - gml__TopoSurfaceType::soap_default(soap*) default initialize members
/// - int soap_read_gml__TopoSurfaceType(soap*, gml__TopoSurfaceType*) deserialize from a stream
/// - int soap_write_gml__TopoSurfaceType(soap*, gml__TopoSurfaceType*) serialize to a stream
/// - gml__TopoSurfaceType* gml__TopoSurfaceType::soap_dup(soap*) returns deep copy of gml__TopoSurfaceType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__TopoSurfaceType::soap_del() deep deletes gml__TopoSurfaceType data members, use only after gml__TopoSurfaceType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__TopoSurfaceType : public gml__AbstractTopologyType
{ public:
/*  INHERITED FROM gml__AbstractGMLType:
//  BEGIN GROUP <xs:group name="StandardObjectProperties">
/// Vector of gml__MetaDataPropertyType* element refs of length 0..unbounded.
    std::vector<gml__MetaDataPropertyType*> metaDataProperty               0;
/// <PRE><BLOCKQUOTE>
///   The value of this property is a text description of the object. gml:description uses gml:StringOrRefType as its content model, so it may contain a simple text string content, or carry a reference to an external description. The use of gml:description to reference an external description has been deprecated and replaced by the gml:descriptionReference property.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":description.
    gml__StringOrRefType*                description                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The value of this property is a remote text description of the object. The xlink:href attribute of the gml:descriptionReference property references the external description.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":descriptionReference.
    gml__ReferenceType*                  descriptionReference           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Often, a special identifier is assigned to an object by the maintaining authority with the intention that it is used in references to the object For such cases, the codeSpace shall be provided. That identifier is usually unique either globally or within an application domain. gml:identifier is a pre-defined property for such identifiers.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":identifier.
    gml__CodeWithAuthorityType*          identifier                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The gml:name property provides a label or identifier for the object, commonly a descriptive name. An object may have several names, typically assigned by different authorities. gml:name uses the gml:CodeType content model. The authority for a name is indicated by the value of its (optional) codeSpace attribute. The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace. In common usage there will be one name per authority, so a processing application may select the name from its preferred codeSpace.
/// </BLOCKQUOTE></PRE>
/// Vector of gml__CodeType* element refs of length 0..unbounded.
    std::vector<gml__CodeType*         > name                           0;
//  END OF GROUP
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":id.
/// <PRE><BLOCKQUOTE>
///   The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.
/// </BLOCKQUOTE></PRE>
   @xsd__ID*                             gml__id                        0;	///< Optional attribute.
    END OF INHERITED FROM gml__AbstractGMLType */
/*  INHERITED FROM gml__AbstractTopologyType:
    END OF INHERITED FROM gml__AbstractTopologyType */
/// <PRE><BLOCKQUOTE>
///   The gml:directedFace property element describes the boundary of topology solids, in the coBoundary of topology edges and is used in the support of surface features via the gml:TopoSurface expression, see below. The orientation attribute of type gml:SignType expresses the sense in which the included face is used i.e. inward or outward with respect to the surface normal in any geometric realisation.
/// </BLOCKQUOTE></PRE>
/// Vector of gml__DirectedFacePropertyType* element refs of length 1..unbounded.
    std::vector<gml__DirectedFacePropertyType*> directedFace                   1;
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":AggregationAttributeGroup">.
/// Attribute "aggregationType" of XSD type "http://www.opengis.net/gml/3.2":AggregationType.
   @enum gml__AggregationType*           aggregationType                0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.opengis.net/gml/3.2":TopoVolumeType is a complexType with complexContent extension of XSD type "http://www.opengis.net/gml/3.2":AbstractTopologyType.
///
/// class gml__TopoVolumeType operations:
/// - gml__TopoVolumeType* soap_new_gml__TopoVolumeType(soap*) allocate and default initialize
/// - gml__TopoVolumeType* soap_new_gml__TopoVolumeType(soap*, int num) allocate array and default initialize values
/// - gml__TopoVolumeType* soap_new_req_gml__TopoVolumeType(soap*, ...) allocate, set required members
/// - gml__TopoVolumeType* soap_new_set_gml__TopoVolumeType(soap*, ...) allocate, set all public members
/// - gml__TopoVolumeType::soap_default(soap*) default initialize members
/// - int soap_read_gml__TopoVolumeType(soap*, gml__TopoVolumeType*) deserialize from a stream
/// - int soap_write_gml__TopoVolumeType(soap*, gml__TopoVolumeType*) serialize to a stream
/// - gml__TopoVolumeType* gml__TopoVolumeType::soap_dup(soap*) returns deep copy of gml__TopoVolumeType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__TopoVolumeType::soap_del() deep deletes gml__TopoVolumeType data members, use only after gml__TopoVolumeType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__TopoVolumeType : public gml__AbstractTopologyType
{ public:
/*  INHERITED FROM gml__AbstractGMLType:
//  BEGIN GROUP <xs:group name="StandardObjectProperties">
/// Vector of gml__MetaDataPropertyType* element refs of length 0..unbounded.
    std::vector<gml__MetaDataPropertyType*> metaDataProperty               0;
/// <PRE><BLOCKQUOTE>
///   The value of this property is a text description of the object. gml:description uses gml:StringOrRefType as its content model, so it may contain a simple text string content, or carry a reference to an external description. The use of gml:description to reference an external description has been deprecated and replaced by the gml:descriptionReference property.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":description.
    gml__StringOrRefType*                description                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The value of this property is a remote text description of the object. The xlink:href attribute of the gml:descriptionReference property references the external description.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":descriptionReference.
    gml__ReferenceType*                  descriptionReference           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Often, a special identifier is assigned to an object by the maintaining authority with the intention that it is used in references to the object For such cases, the codeSpace shall be provided. That identifier is usually unique either globally or within an application domain. gml:identifier is a pre-defined property for such identifiers.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":identifier.
    gml__CodeWithAuthorityType*          identifier                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The gml:name property provides a label or identifier for the object, commonly a descriptive name. An object may have several names, typically assigned by different authorities. gml:name uses the gml:CodeType content model. The authority for a name is indicated by the value of its (optional) codeSpace attribute. The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace. In common usage there will be one name per authority, so a processing application may select the name from its preferred codeSpace.
/// </BLOCKQUOTE></PRE>
/// Vector of gml__CodeType* element refs of length 0..unbounded.
    std::vector<gml__CodeType*         > name                           0;
//  END OF GROUP
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":id.
/// <PRE><BLOCKQUOTE>
///   The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.
/// </BLOCKQUOTE></PRE>
   @xsd__ID*                             gml__id                        0;	///< Optional attribute.
    END OF INHERITED FROM gml__AbstractGMLType */
/*  INHERITED FROM gml__AbstractTopologyType:
    END OF INHERITED FROM gml__AbstractTopologyType */
/// <PRE><BLOCKQUOTE>
///   The gml:directedSolid property element describes the coBoundary of topology faces and is used in the support of volume features via the gml:TopoVolume expression, see below. The orientation attribute of type gml:SignType expresses the sense in which the included solid appears in the face coboundary. In the context of a gml:TopoVolume the orientation attribute has no meaning.
/// </BLOCKQUOTE></PRE>
/// Vector of gml__DirectedTopoSolidPropertyType* element refs of length 1..unbounded.
    std::vector<gml__DirectedTopoSolidPropertyType*> directedTopoSolid              1;
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":AggregationAttributeGroup">.
/// Attribute "aggregationType" of XSD type "http://www.opengis.net/gml/3.2":AggregationType.
   @enum gml__AggregationType*           aggregationType                0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.opengis.net/gml/3.2":TopoComplexType is a complexType with complexContent extension of XSD type "http://www.opengis.net/gml/3.2":AbstractTopologyType.
///
/// class gml__TopoComplexType operations:
/// - gml__TopoComplexType* soap_new_gml__TopoComplexType(soap*) allocate and default initialize
/// - gml__TopoComplexType* soap_new_gml__TopoComplexType(soap*, int num) allocate array and default initialize values
/// - gml__TopoComplexType* soap_new_req_gml__TopoComplexType(soap*, ...) allocate, set required members
/// - gml__TopoComplexType* soap_new_set_gml__TopoComplexType(soap*, ...) allocate, set all public members
/// - gml__TopoComplexType::soap_default(soap*) default initialize members
/// - int soap_read_gml__TopoComplexType(soap*, gml__TopoComplexType*) deserialize from a stream
/// - int soap_write_gml__TopoComplexType(soap*, gml__TopoComplexType*) serialize to a stream
/// - gml__TopoComplexType* gml__TopoComplexType::soap_dup(soap*) returns deep copy of gml__TopoComplexType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__TopoComplexType::soap_del() deep deletes gml__TopoComplexType data members, use only after gml__TopoComplexType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__TopoComplexType : public gml__AbstractTopologyType
{ public:
/*  INHERITED FROM gml__AbstractGMLType:
//  BEGIN GROUP <xs:group name="StandardObjectProperties">
/// Vector of gml__MetaDataPropertyType* element refs of length 0..unbounded.
    std::vector<gml__MetaDataPropertyType*> metaDataProperty               0;
/// <PRE><BLOCKQUOTE>
///   The value of this property is a text description of the object. gml:description uses gml:StringOrRefType as its content model, so it may contain a simple text string content, or carry a reference to an external description. The use of gml:description to reference an external description has been deprecated and replaced by the gml:descriptionReference property.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":description.
    gml__StringOrRefType*                description                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The value of this property is a remote text description of the object. The xlink:href attribute of the gml:descriptionReference property references the external description.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":descriptionReference.
    gml__ReferenceType*                  descriptionReference           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Often, a special identifier is assigned to an object by the maintaining authority with the intention that it is used in references to the object For such cases, the codeSpace shall be provided. That identifier is usually unique either globally or within an application domain. gml:identifier is a pre-defined property for such identifiers.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":identifier.
    gml__CodeWithAuthorityType*          identifier                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The gml:name property provides a label or identifier for the object, commonly a descriptive name. An object may have several names, typically assigned by different authorities. gml:name uses the gml:CodeType content model. The authority for a name is indicated by the value of its (optional) codeSpace attribute. The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace. In common usage there will be one name per authority, so a processing application may select the name from its preferred codeSpace.
/// </BLOCKQUOTE></PRE>
/// Vector of gml__CodeType* element refs of length 0..unbounded.
    std::vector<gml__CodeType*         > name                           0;
//  END OF GROUP
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":id.
/// <PRE><BLOCKQUOTE>
///   The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.
/// </BLOCKQUOTE></PRE>
   @xsd__ID*                             gml__id                        0;	///< Optional attribute.
    END OF INHERITED FROM gml__AbstractGMLType */
/*  INHERITED FROM gml__AbstractTopologyType:
    END OF INHERITED FROM gml__AbstractTopologyType */
/// <PRE><BLOCKQUOTE>
///   The property elements gml:subComplex, gml:superComplex and gml:maximalComplex provide an encoding for relationships between topology complexes as described for gml:TopoComplex above.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":maximalComplex.
    gml__TopoComplexPropertyType*        maximalComplex                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The property elements gml:subComplex, gml:superComplex and gml:maximalComplex provide an encoding for relationships between topology complexes as described for gml:TopoComplex above.
/// </BLOCKQUOTE></PRE>
/// Vector of gml__TopoComplexPropertyType* element refs of length 0..unbounded.
    std::vector<gml__TopoComplexPropertyType*> superComplex                   0;
/// <PRE><BLOCKQUOTE>
///   The property elements gml:subComplex, gml:superComplex and gml:maximalComplex provide an encoding for relationships between topology complexes as described for gml:TopoComplex above.
/// </BLOCKQUOTE></PRE>
/// Vector of gml__TopoComplexPropertyType* element refs of length 0..unbounded.
    std::vector<gml__TopoComplexPropertyType*> subComplex                     0;
/// <PRE><BLOCKQUOTE>
///   The gml:topoPrimitiveMember property element encodes for the relationship between a topology complex and a single topology primitive.
/// </BLOCKQUOTE></PRE>
/// Vector of gml__TopoPrimitiveMemberType* element refs of length 0..unbounded.
    std::vector<gml__TopoPrimitiveMemberType*> topoPrimitiveMember            0;
/// <PRE><BLOCKQUOTE>
///   The gml:topoPrimitiveMembers property element encodes the relationship between a topology complex and an arbitrary number of topology primitives.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":topoPrimitiveMembers.
    gml__TopoPrimitiveArrayAssociationType*  topoPrimitiveMembers           0;	///< Optional element.
/// Attribute "isMaximal" of XSD type xs:boolean.
   @bool                                 isMaximal                      0 = false;	///< Default attribute value="false".
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":AggregationAttributeGroup">.
/// Attribute "aggregationType" of XSD type "http://www.opengis.net/gml/3.2":AggregationType.
   @enum gml__AggregationType*           aggregationType                0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.opengis.net/gml/3.2":GeometricComplexType is a complexType with complexContent extension of XSD type "http://www.opengis.net/gml/3.2":AbstractGeometryType.
///
/// class gml__GeometricComplexType operations:
/// - gml__GeometricComplexType* soap_new_gml__GeometricComplexType(soap*) allocate and default initialize
/// - gml__GeometricComplexType* soap_new_gml__GeometricComplexType(soap*, int num) allocate array and default initialize values
/// - gml__GeometricComplexType* soap_new_req_gml__GeometricComplexType(soap*, ...) allocate, set required members
/// - gml__GeometricComplexType* soap_new_set_gml__GeometricComplexType(soap*, ...) allocate, set all public members
/// - gml__GeometricComplexType::soap_default(soap*) default initialize members
/// - int soap_read_gml__GeometricComplexType(soap*, gml__GeometricComplexType*) deserialize from a stream
/// - int soap_write_gml__GeometricComplexType(soap*, gml__GeometricComplexType*) serialize to a stream
/// - gml__GeometricComplexType* gml__GeometricComplexType::soap_dup(soap*) returns deep copy of gml__GeometricComplexType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__GeometricComplexType::soap_del() deep deletes gml__GeometricComplexType data members, use only after gml__GeometricComplexType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__GeometricComplexType : public gml__AbstractGeometryType
{ public:
/*  INHERITED FROM gml__AbstractGMLType:
//  BEGIN GROUP <xs:group name="StandardObjectProperties">
/// Vector of gml__MetaDataPropertyType* element refs of length 0..unbounded.
    std::vector<gml__MetaDataPropertyType*> metaDataProperty               0;
/// <PRE><BLOCKQUOTE>
///   The value of this property is a text description of the object. gml:description uses gml:StringOrRefType as its content model, so it may contain a simple text string content, or carry a reference to an external description. The use of gml:description to reference an external description has been deprecated and replaced by the gml:descriptionReference property.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":description.
    gml__StringOrRefType*                description                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The value of this property is a remote text description of the object. The xlink:href attribute of the gml:descriptionReference property references the external description.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":descriptionReference.
    gml__ReferenceType*                  descriptionReference           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Often, a special identifier is assigned to an object by the maintaining authority with the intention that it is used in references to the object For such cases, the codeSpace shall be provided. That identifier is usually unique either globally or within an application domain. gml:identifier is a pre-defined property for such identifiers.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":identifier.
    gml__CodeWithAuthorityType*          identifier                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The gml:name property provides a label or identifier for the object, commonly a descriptive name. An object may have several names, typically assigned by different authorities. gml:name uses the gml:CodeType content model. The authority for a name is indicated by the value of its (optional) codeSpace attribute. The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace. In common usage there will be one name per authority, so a processing application may select the name from its preferred codeSpace.
/// </BLOCKQUOTE></PRE>
/// Vector of gml__CodeType* element refs of length 0..unbounded.
    std::vector<gml__CodeType*         > name                           0;
//  END OF GROUP
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":id.
/// <PRE><BLOCKQUOTE>
///   The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.
/// </BLOCKQUOTE></PRE>
   @xsd__ID*                             gml__id                        0;	///< Optional attribute.
    END OF INHERITED FROM gml__AbstractGMLType */
/*  INHERITED FROM gml__AbstractGeometryType:
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":SRSReferenceGroup">.
/// Attribute "srsName" of XSD type xs:anyURI.
   @xsd__anyURI*                         srsName                        0;	///< Optional attribute.
/// Attribute "srsDimension" of XSD type xs:positiveInteger.
   @xsd__positiveInteger*                srsDimension                   0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":SRSInformationGroup">.
/// Attribute "axisLabels" of XSD type "http://www.opengis.net/gml/3.2":NCNameList.
   @gml__NCNameList*                     axisLabels                     0;	///< Optional attribute.
/// Attribute "uomLabels" of XSD type "http://www.opengis.net/gml/3.2":NCNameList.
   @gml__NCNameList*                     uomLabels                      0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
    END OF INHERITED FROM gml__AbstractGeometryType */
/// Vector of gml__GeometricPrimitivePropertyType* of length 1..unbounded.
    std::vector<gml__GeometricPrimitivePropertyType*> element                        1;
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":AggregationAttributeGroup">.
/// Attribute "aggregationType" of XSD type "http://www.opengis.net/gml/3.2":AggregationType.
   @enum gml__AggregationType*           aggregationType                0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.opengis.net/gml/3.2":AbstractGeometricAggregateType is an abstract complexType with complexContent extension of XSD type "http://www.opengis.net/gml/3.2":AbstractGeometryType.
///
/// class gml__AbstractGeometricAggregateType operations:
/// - gml__AbstractGeometricAggregateType* soap_new_gml__AbstractGeometricAggregateType(soap*) allocate and default initialize
/// - gml__AbstractGeometricAggregateType* soap_new_gml__AbstractGeometricAggregateType(soap*, int num) allocate array and default initialize values
/// - gml__AbstractGeometricAggregateType* soap_new_req_gml__AbstractGeometricAggregateType(soap*, ...) allocate, set required members
/// - gml__AbstractGeometricAggregateType* soap_new_set_gml__AbstractGeometricAggregateType(soap*, ...) allocate, set all public members
/// - gml__AbstractGeometricAggregateType::soap_default(soap*) default initialize members
/// - int soap_read_gml__AbstractGeometricAggregateType(soap*, gml__AbstractGeometricAggregateType*) deserialize from a stream
/// - int soap_write_gml__AbstractGeometricAggregateType(soap*, gml__AbstractGeometricAggregateType*) serialize to a stream
/// - gml__AbstractGeometricAggregateType* gml__AbstractGeometricAggregateType::soap_dup(soap*) returns deep copy of gml__AbstractGeometricAggregateType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__AbstractGeometricAggregateType::soap_del() deep deletes gml__AbstractGeometricAggregateType data members, use only after gml__AbstractGeometricAggregateType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__AbstractGeometricAggregateType : public gml__AbstractGeometryType
{ public:
/*  INHERITED FROM gml__AbstractGMLType:
//  BEGIN GROUP <xs:group name="StandardObjectProperties">
/// Vector of gml__MetaDataPropertyType* element refs of length 0..unbounded.
    std::vector<gml__MetaDataPropertyType*> metaDataProperty               0;
/// <PRE><BLOCKQUOTE>
///   The value of this property is a text description of the object. gml:description uses gml:StringOrRefType as its content model, so it may contain a simple text string content, or carry a reference to an external description. The use of gml:description to reference an external description has been deprecated and replaced by the gml:descriptionReference property.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":description.
    gml__StringOrRefType*                description                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The value of this property is a remote text description of the object. The xlink:href attribute of the gml:descriptionReference property references the external description.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":descriptionReference.
    gml__ReferenceType*                  descriptionReference           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Often, a special identifier is assigned to an object by the maintaining authority with the intention that it is used in references to the object For such cases, the codeSpace shall be provided. That identifier is usually unique either globally or within an application domain. gml:identifier is a pre-defined property for such identifiers.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":identifier.
    gml__CodeWithAuthorityType*          identifier                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The gml:name property provides a label or identifier for the object, commonly a descriptive name. An object may have several names, typically assigned by different authorities. gml:name uses the gml:CodeType content model. The authority for a name is indicated by the value of its (optional) codeSpace attribute. The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace. In common usage there will be one name per authority, so a processing application may select the name from its preferred codeSpace.
/// </BLOCKQUOTE></PRE>
/// Vector of gml__CodeType* element refs of length 0..unbounded.
    std::vector<gml__CodeType*         > name                           0;
//  END OF GROUP
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":id.
/// <PRE><BLOCKQUOTE>
///   The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.
/// </BLOCKQUOTE></PRE>
   @xsd__ID*                             gml__id                        0;	///< Optional attribute.
    END OF INHERITED FROM gml__AbstractGMLType */
/*  INHERITED FROM gml__AbstractGeometryType:
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":SRSReferenceGroup">.
/// Attribute "srsName" of XSD type xs:anyURI.
   @xsd__anyURI*                         srsName                        0;	///< Optional attribute.
/// Attribute "srsDimension" of XSD type xs:positiveInteger.
   @xsd__positiveInteger*                srsDimension                   0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":SRSInformationGroup">.
/// Attribute "axisLabels" of XSD type "http://www.opengis.net/gml/3.2":NCNameList.
   @gml__NCNameList*                     axisLabels                     0;	///< Optional attribute.
/// Attribute "uomLabels" of XSD type "http://www.opengis.net/gml/3.2":NCNameList.
   @gml__NCNameList*                     uomLabels                      0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
    END OF INHERITED FROM gml__AbstractGeometryType */
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":AggregationAttributeGroup">.
/// Attribute "aggregationType" of XSD type "http://www.opengis.net/gml/3.2":AggregationType.
   @enum gml__AggregationType*           aggregationType                0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.opengis.net/gml/3.2":ArcType is a complexType with complexContent restriction of XSD type "http://www.opengis.net/gml/3.2":ArcStringType.
///
/// class gml__ArcType operations:
/// - gml__ArcType* soap_new_gml__ArcType(soap*) allocate and default initialize
/// - gml__ArcType* soap_new_gml__ArcType(soap*, int num) allocate array and default initialize values
/// - gml__ArcType* soap_new_req_gml__ArcType(soap*, ...) allocate, set required members
/// - gml__ArcType* soap_new_set_gml__ArcType(soap*, ...) allocate, set all public members
/// - gml__ArcType::soap_default(soap*) default initialize members
/// - int soap_read_gml__ArcType(soap*, gml__ArcType*) deserialize from a stream
/// - int soap_write_gml__ArcType(soap*, gml__ArcType*) serialize to a stream
/// - gml__ArcType* gml__ArcType::soap_dup(soap*) returns deep copy of gml__ArcType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__ArcType::soap_del() deep deletes gml__ArcType data members, use only after gml__ArcType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__ArcType : public xsd__anyType
{ public:
//  BEGIN CHOICE <xs:choice>
   $int                                  __union_ArcType               ;	///< Union _gml__union_ArcType selector: set to SOAP_UNION__gml__union_ArcType_<fieldname>
    union _gml__union_ArcType
    {
//  BEGIN CHOICE <xs:choice minOccurs="3" maxOccurs="3">
    struct ___gml__union_ArcType_
    {
   $int                                  __size_ArcType_                3:3;
    class __gml__union_ArcType_
    {
   $int                                  __union_ArcType_               3;	///< Union _gml__union_ArcType_ selector: set to SOAP_UNION__gml__union_ArcType__<fieldname>
    union _gml__union_ArcType_
    {
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":pos.
    gml__DirectPositionType*             pos                            nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   This property element either references a point via the XLink-attributes or contains the point element. pointProperty is the predefined property which may be used by GML Application Schemas whenever a GML feature has a property with a value that is substitutable for Point.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":pointProperty.
    gml__PointPropertyType*              pointProperty                  nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":pointRep.
    gml__PointPropertyType*              pointRep                       nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_ArcType_                ;
    }                                   *__union_ArcType_              ;
    }                                    __union_ArcType_              ;
//  END OF CHOICE
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":posList.
    gml__DirectPositionListType*         posList                        nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":coordinates.
    gml__CoordinatesType*                coordinates                    nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_ArcType                 ;
//  END OF CHOICE
/// Attribute "numArc" of XSD type xs:integer.
   @long*                                numArc                         0;	///< Fixed attribute value="1".
/*  RESTRICTED FROM gml__ArcStringType:
/// Attribute "interpolation" of XSD type "http://www.opengis.net/gml/3.2":CurveInterpolationType.
   @enum gml__CurveInterpolationType*    interpolation                  0;	///< Fixed attribute value="circularArc3Points".
/// Attribute "numArc" of XSD type xs:integer.
   @long*                                numArc                         0;	///< Optional attribute.
    END OF RESTRICTED FROM gml__ArcStringType */
/*  RESTRICTED FROM gml__AbstractCurveSegmentType:
/// Attribute "numDerivativesAtStart" of XSD type xs:integer.
   @long                                 numDerivativesAtStart          0 = 0;	///< Default attribute value="0".
/// Attribute "numDerivativesAtEnd" of XSD type xs:integer.
   @long                                 numDerivativesAtEnd            0 = 0;	///< Default attribute value="0".
/// Attribute "numDerivativeInterior" of XSD type xs:integer.
   @long                                 numDerivativeInterior          0 = 0;	///< Default attribute value="0".
    END OF RESTRICTED FROM gml__AbstractCurveSegmentType */
};

/// @brief "http://www.opengis.net/gml/3.2":ArcByBulgeType is a complexType with complexContent restriction of XSD type "http://www.opengis.net/gml/3.2":ArcStringByBulgeType.
///
/// class gml__ArcByBulgeType operations:
/// - gml__ArcByBulgeType* soap_new_gml__ArcByBulgeType(soap*) allocate and default initialize
/// - gml__ArcByBulgeType* soap_new_gml__ArcByBulgeType(soap*, int num) allocate array and default initialize values
/// - gml__ArcByBulgeType* soap_new_req_gml__ArcByBulgeType(soap*, ...) allocate, set required members
/// - gml__ArcByBulgeType* soap_new_set_gml__ArcByBulgeType(soap*, ...) allocate, set all public members
/// - gml__ArcByBulgeType::soap_default(soap*) default initialize members
/// - int soap_read_gml__ArcByBulgeType(soap*, gml__ArcByBulgeType*) deserialize from a stream
/// - int soap_write_gml__ArcByBulgeType(soap*, gml__ArcByBulgeType*) serialize to a stream
/// - gml__ArcByBulgeType* gml__ArcByBulgeType::soap_dup(soap*) returns deep copy of gml__ArcByBulgeType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__ArcByBulgeType::soap_del() deep deletes gml__ArcByBulgeType data members, use only after gml__ArcByBulgeType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__ArcByBulgeType : public xsd__anyType
{ public:
//  BEGIN CHOICE <xs:choice>
   $int                                  __union_ArcByBulgeType        ;	///< Union _gml__union_ArcByBulgeType selector: set to SOAP_UNION__gml__union_ArcByBulgeType_<fieldname>
    union _gml__union_ArcByBulgeType
    {
//  BEGIN CHOICE <xs:choice minOccurs="2" maxOccurs="2">
    struct ___gml__union_ArcByBulgeType_
    {
   $int                                  __size_ArcByBulgeType_         2:2;
    class __gml__union_ArcByBulgeType_
    {
   $int                                  __union_ArcByBulgeType_        2;	///< Union _gml__union_ArcByBulgeType_ selector: set to SOAP_UNION__gml__union_ArcByBulgeType__<fieldname>
    union _gml__union_ArcByBulgeType_
    {
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":pos.
    gml__DirectPositionType*             pos                            nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   This property element either references a point via the XLink-attributes or contains the point element. pointProperty is the predefined property which may be used by GML Application Schemas whenever a GML feature has a property with a value that is substitutable for Point.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":pointProperty.
    gml__PointPropertyType*              pointProperty                  nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":pointRep.
    gml__PointPropertyType*              pointRep                       nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_ArcByBulgeType_         ;
    }                                   *__union_ArcByBulgeType_       ;
    }                                    __union_ArcByBulgeType_       ;
//  END OF CHOICE
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":posList.
    gml__DirectPositionListType*         posList                        nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":coordinates.
    gml__CoordinatesType*                coordinates                    nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_ArcByBulgeType          ;
//  END OF CHOICE
/// Element "bulge" of XSD type xs:double.
    double                               bulge                          1;	///< Required element.
/// Element "normal" of XSD type "http://www.opengis.net/gml/3.2":VectorType.
    gml__VectorType*                     normal                         1;	///< Required element.
/// Attribute "numArc" of XSD type xs:integer.
   @long*                                numArc                         0;	///< Fixed attribute value="1".
/*  RESTRICTED FROM gml__ArcStringByBulgeType:
/// Attribute "interpolation" of XSD type "http://www.opengis.net/gml/3.2":CurveInterpolationType.
   @enum gml__CurveInterpolationType*    interpolation                  0;	///< Fixed attribute value="circularArc2PointWithBulge".
/// Attribute "numArc" of XSD type xs:integer.
   @long*                                numArc                         0;	///< Optional attribute.
    END OF RESTRICTED FROM gml__ArcStringByBulgeType */
/*  RESTRICTED FROM gml__AbstractCurveSegmentType:
/// Attribute "numDerivativesAtStart" of XSD type xs:integer.
   @long                                 numDerivativesAtStart          0 = 0;	///< Default attribute value="0".
/// Attribute "numDerivativesAtEnd" of XSD type xs:integer.
   @long                                 numDerivativesAtEnd            0 = 0;	///< Default attribute value="0".
/// Attribute "numDerivativeInterior" of XSD type xs:integer.
   @long                                 numDerivativeInterior          0 = 0;	///< Default attribute value="0".
    END OF RESTRICTED FROM gml__AbstractCurveSegmentType */
};

/// @brief "http://www.opengis.net/gml/3.2":CircleByCenterPointType is a complexType with complexContent restriction of XSD type "http://www.opengis.net/gml/3.2":ArcByCenterPointType.
///
/// class gml__CircleByCenterPointType operations:
/// - gml__CircleByCenterPointType* soap_new_gml__CircleByCenterPointType(soap*) allocate and default initialize
/// - gml__CircleByCenterPointType* soap_new_gml__CircleByCenterPointType(soap*, int num) allocate array and default initialize values
/// - gml__CircleByCenterPointType* soap_new_req_gml__CircleByCenterPointType(soap*, ...) allocate, set required members
/// - gml__CircleByCenterPointType* soap_new_set_gml__CircleByCenterPointType(soap*, ...) allocate, set all public members
/// - gml__CircleByCenterPointType::soap_default(soap*) default initialize members
/// - int soap_read_gml__CircleByCenterPointType(soap*, gml__CircleByCenterPointType*) deserialize from a stream
/// - int soap_write_gml__CircleByCenterPointType(soap*, gml__CircleByCenterPointType*) serialize to a stream
/// - gml__CircleByCenterPointType* gml__CircleByCenterPointType::soap_dup(soap*) returns deep copy of gml__CircleByCenterPointType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__CircleByCenterPointType::soap_del() deep deletes gml__CircleByCenterPointType data members, use only after gml__CircleByCenterPointType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__CircleByCenterPointType : public xsd__anyType
{ public:
//  BEGIN CHOICE <xs:choice>
   $int                                  __union_CircleByCenterPointType;	///< Union _gml__union_CircleByCenterPointType selector: set to SOAP_UNION__gml__union_CircleByCenterPointType_<fieldname>
    union _gml__union_CircleByCenterPointType
    {
//  BEGIN CHOICE <xs:choice>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":pos.
    gml__DirectPositionType*             pos                            nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   This property element either references a point via the XLink-attributes or contains the point element. pointProperty is the predefined property which may be used by GML Application Schemas whenever a GML feature has a property with a value that is substitutable for Point.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":pointProperty.
    gml__PointPropertyType*              pointProperty                  nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":pointRep.
    gml__PointPropertyType*              pointRep                       nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
//  END OF CHOICE
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":posList.
    gml__DirectPositionListType*         posList                        nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":coordinates.
    gml__CoordinatesType*                coordinates                    nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_CircleByCenterPointType ;
//  END OF CHOICE
/// Element "radius" of XSD type "http://www.opengis.net/gml/3.2":LengthType.
    gml__LengthType*                     radius                         1;	///< Required element.
/*  RESTRICTED FROM gml__ArcByCenterPointType:
/// Attribute "interpolation" of XSD type "http://www.opengis.net/gml/3.2":CurveInterpolationType.
   @enum gml__CurveInterpolationType*    interpolation                  0;	///< Fixed attribute value="circularArcCenterPointWithRadius".
/// Attribute "numArc" of XSD type xs:integer.
   @long                                 numArc                         1;	///< Fixed attribute value="1".
    END OF RESTRICTED FROM gml__ArcByCenterPointType */
/*  RESTRICTED FROM gml__AbstractCurveSegmentType:
/// Attribute "numDerivativesAtStart" of XSD type xs:integer.
   @long                                 numDerivativesAtStart          0 = 0;	///< Default attribute value="0".
/// Attribute "numDerivativesAtEnd" of XSD type xs:integer.
   @long                                 numDerivativesAtEnd            0 = 0;	///< Default attribute value="0".
/// Attribute "numDerivativeInterior" of XSD type xs:integer.
   @long                                 numDerivativeInterior          0 = 0;	///< Default attribute value="0".
    END OF RESTRICTED FROM gml__AbstractCurveSegmentType */
};

/// @brief "http://www.opengis.net/gml/3.2":BezierType is a complexType with complexContent restriction of XSD type "http://www.opengis.net/gml/3.2":BSplineType.
///
/// class gml__BezierType operations:
/// - gml__BezierType* soap_new_gml__BezierType(soap*) allocate and default initialize
/// - gml__BezierType* soap_new_gml__BezierType(soap*, int num) allocate array and default initialize values
/// - gml__BezierType* soap_new_req_gml__BezierType(soap*, ...) allocate, set required members
/// - gml__BezierType* soap_new_set_gml__BezierType(soap*, ...) allocate, set all public members
/// - gml__BezierType::soap_default(soap*) default initialize members
/// - int soap_read_gml__BezierType(soap*, gml__BezierType*) deserialize from a stream
/// - int soap_write_gml__BezierType(soap*, gml__BezierType*) serialize to a stream
/// - gml__BezierType* gml__BezierType::soap_dup(soap*) returns deep copy of gml__BezierType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__BezierType::soap_del() deep deletes gml__BezierType data members, use only after gml__BezierType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__BezierType : public xsd__anyType
{ public:
//  BEGIN CHOICE <xs:choice>
   $int                                  __union_BezierType            ;	///< Union _gml__union_BezierType selector: set to SOAP_UNION__gml__union_BezierType_<fieldname>
    union _gml__union_BezierType
    {
//  BEGIN CHOICE <xs:choice minOccurs="0" maxOccurs="unbounded">
    struct ___gml__union_BezierType_
    {
   $int                                  __size_BezierType_             0;
    class __gml__union_BezierType_
    {
   $int                                  __union_BezierType_            0;	///< Union _gml__union_BezierType_ selector: set to SOAP_UNION__gml__union_BezierType__<fieldname> or 0 to omit
    union _gml__union_BezierType_
    {
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":pos.
    gml__DirectPositionType*             pos                            nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   This property element either references a point via the XLink-attributes or contains the point element. pointProperty is the predefined property which may be used by GML Application Schemas whenever a GML feature has a property with a value that is substitutable for Point.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":pointProperty.
    gml__PointPropertyType*              pointProperty                  nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":pointRep.
    gml__PointPropertyType*              pointRep                       nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_BezierType_             ;
    }                                   *__union_BezierType_           ;
    }                                    __union_BezierType_           ;
//  END OF CHOICE
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":posList.
    gml__DirectPositionListType*         posList                        nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":coordinates.
    gml__CoordinatesType*                coordinates                    nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_BezierType              ;
//  END OF CHOICE
/// Element "degree" of XSD type xs:nonNegativeInteger.
    xsd__nonNegativeInteger              degree                         1;	///< Required element.
/// Vector of gml__KnotPropertyType* of length 2..2.
    std::vector<gml__KnotPropertyType* > knot                           2:2;
/// Attribute "interpolation" of XSD type "http://www.opengis.net/gml/3.2":CurveInterpolationType.
   @enum gml__CurveInterpolationType*    interpolation                  0;	///< Fixed attribute value="polynomialSpline".
/// Attribute "isPolynomial" of XSD type xs:boolean.
   @bool*                                isPolynomial                   0;	///< Fixed attribute value="true".
/// Attribute "knotType" of XSD type "http://www.opengis.net/gml/3.2":KnotTypesType.
   @enum gml__KnotTypesType*             knotType                       0:0;	///< Prohibited attribute.
/*  RESTRICTED FROM gml__BSplineType:
/// Attribute "interpolation" of XSD type "http://www.opengis.net/gml/3.2":CurveInterpolationType.
   @enum gml__CurveInterpolationType     interpolation                  0 = gml__CurveInterpolationType__polynomialSpline;	///< Default attribute value="polynomialSpline".
/// Attribute "isPolynomial" of XSD type xs:boolean.
   @bool*                                isPolynomial                   0;	///< Optional attribute.
/// Attribute "knotType" of XSD type "http://www.opengis.net/gml/3.2":KnotTypesType.
   @enum gml__KnotTypesType*             knotType                       0;	///< Optional attribute.
    END OF RESTRICTED FROM gml__BSplineType */
/*  RESTRICTED FROM gml__AbstractCurveSegmentType:
/// Attribute "numDerivativesAtStart" of XSD type xs:integer.
   @long                                 numDerivativesAtStart          0 = 0;	///< Default attribute value="0".
/// Attribute "numDerivativesAtEnd" of XSD type xs:integer.
   @long                                 numDerivativesAtEnd            0 = 0;	///< Default attribute value="0".
/// Attribute "numDerivativeInterior" of XSD type xs:integer.
   @long                                 numDerivativeInterior          0 = 0;	///< Default attribute value="0".
    END OF RESTRICTED FROM gml__AbstractCurveSegmentType */
};

/// @brief "http://www.opengis.net/gml/3.2":GeodesicType is a complexType with complexContent extension of XSD type "http://www.opengis.net/gml/3.2":GeodesicStringType.
///
/// class gml__GeodesicType operations:
/// - gml__GeodesicType* soap_new_gml__GeodesicType(soap*) allocate and default initialize
/// - gml__GeodesicType* soap_new_gml__GeodesicType(soap*, int num) allocate array and default initialize values
/// - gml__GeodesicType* soap_new_req_gml__GeodesicType(soap*, ...) allocate, set required members
/// - gml__GeodesicType* soap_new_set_gml__GeodesicType(soap*, ...) allocate, set all public members
/// - gml__GeodesicType::soap_default(soap*) default initialize members
/// - int soap_read_gml__GeodesicType(soap*, gml__GeodesicType*) deserialize from a stream
/// - int soap_write_gml__GeodesicType(soap*, gml__GeodesicType*) serialize to a stream
/// - gml__GeodesicType* gml__GeodesicType::soap_dup(soap*) returns deep copy of gml__GeodesicType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__GeodesicType::soap_del() deep deletes gml__GeodesicType data members, use only after gml__GeodesicType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__GeodesicType : public gml__GeodesicStringType
{ public:
/*  INHERITED FROM gml__AbstractCurveSegmentType:
/// Attribute "numDerivativesAtStart" of XSD type xs:integer.
   @long                                 numDerivativesAtStart          0 = 0;	///< Default attribute value="0".
/// Attribute "numDerivativesAtEnd" of XSD type xs:integer.
   @long                                 numDerivativesAtEnd            0 = 0;	///< Default attribute value="0".
/// Attribute "numDerivativeInterior" of XSD type xs:integer.
   @long                                 numDerivativeInterior          0 = 0;	///< Default attribute value="0".
    END OF INHERITED FROM gml__AbstractCurveSegmentType */
/*  INHERITED FROM gml__GeodesicStringType:
//  BEGIN CHOICE <xs:choice>
/// @note <xs:choice> with embedded <xs:sequence> or <xs:group> prevents the use of a union for <xs:choice>. Instead of being members of a union, the following members are declared optional. Only one member should be non-NULL by choice.
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":posList.
    gml__DirectPositionListType*         posList                        nullptr;	///< Required nillable (xsi:nil when NULL) element.
//  BEGIN GROUP <xs:group name="geometricPositionGroup" minOccurs="2" maxOccurs="unbounded">
/// <PRE><BLOCKQUOTE>
///   GML supports two different ways to specify a geometric position: either by a direct position (a data type) or a point (a geometric object).
///   pos elements are positions that are "owned" by the geometric primitive encapsulating this geometric position.
///   pointProperty elements contain a point that may be referenced from other geometry elements or reference another point defined elsewhere (reuse of existing points).
/// </BLOCKQUOTE></PRE>
//  BEGIN CHOICE <xs:choice minOccurs="2" maxOccurs="unbounded">
   $int                                  __size_GeodesicType_           2;
    class __gml__union_GeodesicType_
    {
   $int                                  __union_GeodesicType_          2;	///< Union _gml__union_GeodesicType_ selector: set to SOAP_UNION__gml__union_GeodesicType__<fieldname>
    union _gml__union_GeodesicType_
    {
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":pos.
    gml__DirectPositionType*             pos                            nullptr;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   This property element either references a point via the XLink-attributes or contains the point element. pointProperty is the predefined property which may be used by GML Application Schemas whenever a GML feature has a property with a value that is substitutable for Point.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":pointProperty.
    gml__PointPropertyType*              pointProperty                  nullptr;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_GeodesicType_           ;
    }                                   *__union_GeodesicType_         ;
//  END OF CHOICE
//  END OF GROUP
//  END OF CHOICE
/// Attribute "interpolation" of XSD type "http://www.opengis.net/gml/3.2":CurveInterpolationType.
   @enum gml__CurveInterpolationType*    interpolation                  0;	///< Fixed attribute value="geodesic".
    END OF INHERITED FROM gml__GeodesicStringType */
};

/// @brief "http://www.opengis.net/gml/3.2":AbstractGriddedSurfaceType is an abstract complexType with complexContent extension of XSD type "http://www.opengis.net/gml/3.2":AbstractParametricCurveSurfaceType.
///
/// class gml__AbstractGriddedSurfaceType operations:
/// - gml__AbstractGriddedSurfaceType* soap_new_gml__AbstractGriddedSurfaceType(soap*) allocate and default initialize
/// - gml__AbstractGriddedSurfaceType* soap_new_gml__AbstractGriddedSurfaceType(soap*, int num) allocate array and default initialize values
/// - gml__AbstractGriddedSurfaceType* soap_new_req_gml__AbstractGriddedSurfaceType(soap*, ...) allocate, set required members
/// - gml__AbstractGriddedSurfaceType* soap_new_set_gml__AbstractGriddedSurfaceType(soap*, ...) allocate, set all public members
/// - gml__AbstractGriddedSurfaceType::soap_default(soap*) default initialize members
/// - int soap_read_gml__AbstractGriddedSurfaceType(soap*, gml__AbstractGriddedSurfaceType*) deserialize from a stream
/// - int soap_write_gml__AbstractGriddedSurfaceType(soap*, gml__AbstractGriddedSurfaceType*) serialize to a stream
/// - gml__AbstractGriddedSurfaceType* gml__AbstractGriddedSurfaceType::soap_dup(soap*) returns deep copy of gml__AbstractGriddedSurfaceType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__AbstractGriddedSurfaceType::soap_del() deep deletes gml__AbstractGriddedSurfaceType data members, use only after gml__AbstractGriddedSurfaceType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__AbstractGriddedSurfaceType : public gml__AbstractParametricCurveSurfaceType
{ public:
/*  INHERITED FROM gml__AbstractSurfacePatchType:
    END OF INHERITED FROM gml__AbstractSurfacePatchType */
/*  INHERITED FROM gml__AbstractParametricCurveSurfaceType:
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":AggregationAttributeGroup">.
/// Attribute "aggregationType" of XSD type "http://www.opengis.net/gml/3.2":AggregationType.
   @enum gml__AggregationType*           aggregationType                0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
    END OF INHERITED FROM gml__AbstractParametricCurveSurfaceType */
//  BEGIN GROUP <xs:group name="PointGrid">
/// <PRE><BLOCKQUOTE>
///   A gml:PointGrid group contains or references points or positions which are organised into sequences or grids. All rows shall have the same number of positions (columns).
/// </BLOCKQUOTE></PRE>
/// class _gml__AbstractGriddedSurfaceType_rows operations:
/// - _gml__AbstractGriddedSurfaceType_rows* soap_new__gml__AbstractGriddedSurfaceType_rows(soap*) allocate and default initialize
/// - _gml__AbstractGriddedSurfaceType_rows* soap_new__gml__AbstractGriddedSurfaceType_rows(soap*, int num) allocate array and default initialize values
/// - _gml__AbstractGriddedSurfaceType_rows* soap_new_req__gml__AbstractGriddedSurfaceType_rows(soap*, ...) allocate, set required members
/// - _gml__AbstractGriddedSurfaceType_rows* soap_new_set__gml__AbstractGriddedSurfaceType_rows(soap*, ...) allocate, set all public members
/// - _gml__AbstractGriddedSurfaceType_rows::soap_default(soap*) default initialize members
/// - int soap_read__gml__AbstractGriddedSurfaceType_rows(soap*, _gml__AbstractGriddedSurfaceType_rows*) deserialize from a stream
/// - int soap_write__gml__AbstractGriddedSurfaceType_rows(soap*, _gml__AbstractGriddedSurfaceType_rows*) serialize to a stream
/// - _gml__AbstractGriddedSurfaceType_rows* _gml__AbstractGriddedSurfaceType_rows::soap_dup(soap*) returns deep copy of _gml__AbstractGriddedSurfaceType_rows, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _gml__AbstractGriddedSurfaceType_rows::soap_del() deep deletes _gml__AbstractGriddedSurfaceType_rows data members, use only after _gml__AbstractGriddedSurfaceType_rows::soap_dup(NULL) (use soapcpp2 -Ed)
    class _gml__AbstractGriddedSurfaceType_rows
    {
/// Vector of Row of length 1..unbounded.
    std::vector<
/// class _gml__AbstractGriddedSurfaceType_rows_Row operations:
/// - _gml__AbstractGriddedSurfaceType_rows_Row* soap_new__gml__AbstractGriddedSurfaceType_rows_Row(soap*) allocate and default initialize
/// - _gml__AbstractGriddedSurfaceType_rows_Row* soap_new__gml__AbstractGriddedSurfaceType_rows_Row(soap*, int num) allocate array and default initialize values
/// - _gml__AbstractGriddedSurfaceType_rows_Row* soap_new_req__gml__AbstractGriddedSurfaceType_rows_Row(soap*, ...) allocate, set required members
/// - _gml__AbstractGriddedSurfaceType_rows_Row* soap_new_set__gml__AbstractGriddedSurfaceType_rows_Row(soap*, ...) allocate, set all public members
/// - _gml__AbstractGriddedSurfaceType_rows_Row::soap_default(soap*) default initialize members
/// - int soap_read__gml__AbstractGriddedSurfaceType_rows_Row(soap*, _gml__AbstractGriddedSurfaceType_rows_Row*) deserialize from a stream
/// - int soap_write__gml__AbstractGriddedSurfaceType_rows_Row(soap*, _gml__AbstractGriddedSurfaceType_rows_Row*) serialize to a stream
/// - _gml__AbstractGriddedSurfaceType_rows_Row* _gml__AbstractGriddedSurfaceType_rows_Row::soap_dup(soap*) returns deep copy of _gml__AbstractGriddedSurfaceType_rows_Row, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _gml__AbstractGriddedSurfaceType_rows_Row::soap_del() deep deletes _gml__AbstractGriddedSurfaceType_rows_Row data members, use only after _gml__AbstractGriddedSurfaceType_rows_Row::soap_dup(NULL) (use soapcpp2 -Ed)
    class _gml__AbstractGriddedSurfaceType_rows_Row
    {
//  BEGIN GROUP <xs:group name="geometricPositionListGroup">
/// <PRE><BLOCKQUOTE>
///   GML supports two different ways to specify a list of geometric positions: either by a sequence of geometric positions (by reusing the group definition) or a sequence of direct positions (element posList). The posList element allows for a compact way to specify the coordinates of the positions, if all positions are represented in the same coordinate reference system.
/// </BLOCKQUOTE></PRE>
//  BEGIN CHOICE <xs:choice>
/// @note <xs:choice> with embedded <xs:sequence> or <xs:group> prevents the use of a union for <xs:choice>. Instead of being members of a union, the following members are declared optional. Only one member should be non-NULL by choice.
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":posList.
    gml__DirectPositionListType*         posList                        nullptr;	///< Required nillable (xsi:nil when NULL) element.
//  BEGIN GROUP <xs:group name="geometricPositionGroup" maxOccurs="unbounded">
/// <PRE><BLOCKQUOTE>
///   GML supports two different ways to specify a geometric position: either by a direct position (a data type) or a point (a geometric object).
///   pos elements are positions that are "owned" by the geometric primitive encapsulating this geometric position.
///   pointProperty elements contain a point that may be referenced from other geometry elements or reference another point defined elsewhere (reuse of existing points).
/// </BLOCKQUOTE></PRE>
//  BEGIN CHOICE <xs:choice maxOccurs="unbounded">
   $int                                  __size_AbstractGriddedSurfaceType_rows_Row_ 0;
    class __gml__union_AbstractGriddedSurfaceType_rows_Row_
    {
   $int                                  __union_AbstractGriddedSurfaceType_rows_Row_;	///< Union _gml__union_AbstractGriddedSurfaceType_rows_Row_ selector: set to SOAP_UNION__gml__union_AbstractGriddedSurfaceType_rows_Row__<fieldname>
    union _gml__union_AbstractGriddedSurfaceType_rows_Row_
    {
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":pos.
    gml__DirectPositionType*             pos                            nullptr;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   This property element either references a point via the XLink-attributes or contains the point element. pointProperty is the predefined property which may be used by GML Application Schemas whenever a GML feature has a property with a value that is substitutable for Point.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":pointProperty.
    gml__PointPropertyType*              pointProperty                  nullptr;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_AbstractGriddedSurfaceType_rows_Row_;
    }                                   *__union_AbstractGriddedSurfaceType_rows_Row_;
//  END OF CHOICE
//  END OF GROUP
//  END OF CHOICE
//  END OF GROUP
    }>                                   Row                            1;
    }                                    rows                           1;	///< Required element.
//  END OF GROUP
/// Attribute "rows" of XSD type xs:integer.
   @long*                                rows                           0;	///< Optional attribute.
/// Attribute "columns" of XSD type xs:integer.
   @long*                                columns                        0;	///< Optional attribute.
};

/// @brief "http://www.opengis.net/gml/3.2":VectorType is a complexType with simpleContent.
///
/// <PRE><BLOCKQUOTE>
///   For some applications the components of the position may be adjusted to yield a unit vector.
/// </BLOCKQUOTE></PRE>
/// class gml__VectorType operations:
/// - gml__VectorType* soap_new_gml__VectorType(soap*) allocate and default initialize
/// - gml__VectorType* soap_new_gml__VectorType(soap*, int num) allocate array and default initialize values
/// - gml__VectorType* soap_new_req_gml__VectorType(soap*, ...) allocate, set required members
/// - gml__VectorType* soap_new_set_gml__VectorType(soap*, ...) allocate, set all public members
/// - gml__VectorType::soap_default(soap*) default initialize members
/// - int soap_read_gml__VectorType(soap*, gml__VectorType*) deserialize from a stream
/// - int soap_write_gml__VectorType(soap*, gml__VectorType*) serialize to a stream
/// - gml__VectorType* gml__VectorType::soap_dup(soap*) returns deep copy of gml__VectorType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__VectorType::soap_del() deep deletes gml__VectorType data members, use only after gml__VectorType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__VectorType : public xsd__anyType
{ public:
/// __item wraps ""http://www.opengis.net/gml/3.2":doubleList" simpleContent.
    gml__doubleList                      __item                        ;
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":SRSReferenceGroup">.
/// Attribute "srsName" of XSD type xs:anyURI.
   @xsd__anyURI*                         srsName                        0;	///< Optional attribute.
/// Attribute "srsDimension" of XSD type xs:positiveInteger.
   @xsd__positiveInteger*                srsDimension                   0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":SRSInformationGroup">.
/// Attribute "axisLabels" of XSD type "http://www.opengis.net/gml/3.2":NCNameList.
   @gml__NCNameList*                     axisLabels                     0;	///< Optional attribute.
/// Attribute "uomLabels" of XSD type "http://www.opengis.net/gml/3.2":NCNameList.
   @gml__NCNameList*                     uomLabels                      0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.opengis.net/gml/3.2":AbstractGeometricPrimitiveType is an abstract complexType with complexContent extension of XSD type "http://www.opengis.net/gml/3.2":AbstractGeometryType.
///
/// <PRE><BLOCKQUOTE>
///   gml:AbstractGeometricPrimitiveType is the abstract root type of the geometric primitives. A geometric primitive is a geometric object that is not decomposed further into other primitives in the system. All primitives are oriented in the direction implied by the sequence of their coordinate tuples.
/// </BLOCKQUOTE></PRE>
/// class gml__AbstractGeometricPrimitiveType operations:
/// - gml__AbstractGeometricPrimitiveType* soap_new_gml__AbstractGeometricPrimitiveType(soap*) allocate and default initialize
/// - gml__AbstractGeometricPrimitiveType* soap_new_gml__AbstractGeometricPrimitiveType(soap*, int num) allocate array and default initialize values
/// - gml__AbstractGeometricPrimitiveType* soap_new_req_gml__AbstractGeometricPrimitiveType(soap*, ...) allocate, set required members
/// - gml__AbstractGeometricPrimitiveType* soap_new_set_gml__AbstractGeometricPrimitiveType(soap*, ...) allocate, set all public members
/// - gml__AbstractGeometricPrimitiveType::soap_default(soap*) default initialize members
/// - int soap_read_gml__AbstractGeometricPrimitiveType(soap*, gml__AbstractGeometricPrimitiveType*) deserialize from a stream
/// - int soap_write_gml__AbstractGeometricPrimitiveType(soap*, gml__AbstractGeometricPrimitiveType*) serialize to a stream
/// - gml__AbstractGeometricPrimitiveType* gml__AbstractGeometricPrimitiveType::soap_dup(soap*) returns deep copy of gml__AbstractGeometricPrimitiveType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__AbstractGeometricPrimitiveType::soap_del() deep deletes gml__AbstractGeometricPrimitiveType data members, use only after gml__AbstractGeometricPrimitiveType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__AbstractGeometricPrimitiveType : public gml__AbstractGeometryType
{ public:
/*  INHERITED FROM gml__AbstractGMLType:
//  BEGIN GROUP <xs:group name="StandardObjectProperties">
/// Vector of gml__MetaDataPropertyType* element refs of length 0..unbounded.
    std::vector<gml__MetaDataPropertyType*> metaDataProperty               0;
/// <PRE><BLOCKQUOTE>
///   The value of this property is a text description of the object. gml:description uses gml:StringOrRefType as its content model, so it may contain a simple text string content, or carry a reference to an external description. The use of gml:description to reference an external description has been deprecated and replaced by the gml:descriptionReference property.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":description.
    gml__StringOrRefType*                description                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The value of this property is a remote text description of the object. The xlink:href attribute of the gml:descriptionReference property references the external description.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":descriptionReference.
    gml__ReferenceType*                  descriptionReference           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Often, a special identifier is assigned to an object by the maintaining authority with the intention that it is used in references to the object For such cases, the codeSpace shall be provided. That identifier is usually unique either globally or within an application domain. gml:identifier is a pre-defined property for such identifiers.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":identifier.
    gml__CodeWithAuthorityType*          identifier                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The gml:name property provides a label or identifier for the object, commonly a descriptive name. An object may have several names, typically assigned by different authorities. gml:name uses the gml:CodeType content model. The authority for a name is indicated by the value of its (optional) codeSpace attribute. The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace. In common usage there will be one name per authority, so a processing application may select the name from its preferred codeSpace.
/// </BLOCKQUOTE></PRE>
/// Vector of gml__CodeType* element refs of length 0..unbounded.
    std::vector<gml__CodeType*         > name                           0;
//  END OF GROUP
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":id.
/// <PRE><BLOCKQUOTE>
///   The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.
/// </BLOCKQUOTE></PRE>
   @xsd__ID*                             gml__id                        0;	///< Optional attribute.
    END OF INHERITED FROM gml__AbstractGMLType */
/*  INHERITED FROM gml__AbstractGeometryType:
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":SRSReferenceGroup">.
/// Attribute "srsName" of XSD type xs:anyURI.
   @xsd__anyURI*                         srsName                        0;	///< Optional attribute.
/// Attribute "srsDimension" of XSD type xs:positiveInteger.
   @xsd__positiveInteger*                srsDimension                   0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":SRSInformationGroup">.
/// Attribute "axisLabels" of XSD type "http://www.opengis.net/gml/3.2":NCNameList.
   @gml__NCNameList*                     axisLabels                     0;	///< Optional attribute.
/// Attribute "uomLabels" of XSD type "http://www.opengis.net/gml/3.2":NCNameList.
   @gml__NCNameList*                     uomLabels                      0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
    END OF INHERITED FROM gml__AbstractGeometryType */
};

/// @brief "http://www.opengis.net/gml/3.2":LengthType is a complexType with simpleContent.
///
/// <PRE><BLOCKQUOTE>
///   This is a prototypical definition for a specific measure type defined as a vacuous extension (i.e. aliases) of gml:MeasureType. In this case, the content model supports the description of a length (or distance) quantity, with its units. The unit of measure referenced by uom shall be suitable for a length, such as metres or feet.
/// </BLOCKQUOTE></PRE>
/// class gml__LengthType operations:
/// - gml__LengthType* soap_new_gml__LengthType(soap*) allocate and default initialize
/// - gml__LengthType* soap_new_gml__LengthType(soap*, int num) allocate array and default initialize values
/// - gml__LengthType* soap_new_req_gml__LengthType(soap*, ...) allocate, set required members
/// - gml__LengthType* soap_new_set_gml__LengthType(soap*, ...) allocate, set all public members
/// - gml__LengthType::soap_default(soap*) default initialize members
/// - int soap_read_gml__LengthType(soap*, gml__LengthType*) deserialize from a stream
/// - int soap_write_gml__LengthType(soap*, gml__LengthType*) serialize to a stream
/// - gml__LengthType* gml__LengthType::soap_dup(soap*) returns deep copy of gml__LengthType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__LengthType::soap_del() deep deletes gml__LengthType data members, use only after gml__LengthType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__LengthType : public gml__MeasureType
{ public:
};

/// @brief "http://www.opengis.net/gml/3.2":ScaleType is a complexType with simpleContent.
///
/// class gml__ScaleType operations:
/// - gml__ScaleType* soap_new_gml__ScaleType(soap*) allocate and default initialize
/// - gml__ScaleType* soap_new_gml__ScaleType(soap*, int num) allocate array and default initialize values
/// - gml__ScaleType* soap_new_req_gml__ScaleType(soap*, ...) allocate, set required members
/// - gml__ScaleType* soap_new_set_gml__ScaleType(soap*, ...) allocate, set all public members
/// - gml__ScaleType::soap_default(soap*) default initialize members
/// - int soap_read_gml__ScaleType(soap*, gml__ScaleType*) deserialize from a stream
/// - int soap_write_gml__ScaleType(soap*, gml__ScaleType*) serialize to a stream
/// - gml__ScaleType* gml__ScaleType::soap_dup(soap*) returns deep copy of gml__ScaleType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__ScaleType::soap_del() deep deletes gml__ScaleType data members, use only after gml__ScaleType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__ScaleType : public gml__MeasureType
{ public:
};

/// @brief "http://www.opengis.net/gml/3.2":TimeType is a complexType with simpleContent.
///
/// class gml__TimeType operations:
/// - gml__TimeType* soap_new_gml__TimeType(soap*) allocate and default initialize
/// - gml__TimeType* soap_new_gml__TimeType(soap*, int num) allocate array and default initialize values
/// - gml__TimeType* soap_new_req_gml__TimeType(soap*, ...) allocate, set required members
/// - gml__TimeType* soap_new_set_gml__TimeType(soap*, ...) allocate, set all public members
/// - gml__TimeType::soap_default(soap*) default initialize members
/// - int soap_read_gml__TimeType(soap*, gml__TimeType*) deserialize from a stream
/// - int soap_write_gml__TimeType(soap*, gml__TimeType*) serialize to a stream
/// - gml__TimeType* gml__TimeType::soap_dup(soap*) returns deep copy of gml__TimeType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__TimeType::soap_del() deep deletes gml__TimeType data members, use only after gml__TimeType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__TimeType : public gml__MeasureType
{ public:
};

/// @brief "http://www.opengis.net/gml/3.2":GridLengthType is a complexType with simpleContent.
///
/// class gml__GridLengthType operations:
/// - gml__GridLengthType* soap_new_gml__GridLengthType(soap*) allocate and default initialize
/// - gml__GridLengthType* soap_new_gml__GridLengthType(soap*, int num) allocate array and default initialize values
/// - gml__GridLengthType* soap_new_req_gml__GridLengthType(soap*, ...) allocate, set required members
/// - gml__GridLengthType* soap_new_set_gml__GridLengthType(soap*, ...) allocate, set all public members
/// - gml__GridLengthType::soap_default(soap*) default initialize members
/// - int soap_read_gml__GridLengthType(soap*, gml__GridLengthType*) deserialize from a stream
/// - int soap_write_gml__GridLengthType(soap*, gml__GridLengthType*) serialize to a stream
/// - gml__GridLengthType* gml__GridLengthType::soap_dup(soap*) returns deep copy of gml__GridLengthType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__GridLengthType::soap_del() deep deletes gml__GridLengthType data members, use only after gml__GridLengthType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__GridLengthType : public gml__MeasureType
{ public:
};

/// @brief "http://www.opengis.net/gml/3.2":AreaType is a complexType with simpleContent.
///
/// class gml__AreaType operations:
/// - gml__AreaType* soap_new_gml__AreaType(soap*) allocate and default initialize
/// - gml__AreaType* soap_new_gml__AreaType(soap*, int num) allocate array and default initialize values
/// - gml__AreaType* soap_new_req_gml__AreaType(soap*, ...) allocate, set required members
/// - gml__AreaType* soap_new_set_gml__AreaType(soap*, ...) allocate, set all public members
/// - gml__AreaType::soap_default(soap*) default initialize members
/// - int soap_read_gml__AreaType(soap*, gml__AreaType*) deserialize from a stream
/// - int soap_write_gml__AreaType(soap*, gml__AreaType*) serialize to a stream
/// - gml__AreaType* gml__AreaType::soap_dup(soap*) returns deep copy of gml__AreaType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__AreaType::soap_del() deep deletes gml__AreaType data members, use only after gml__AreaType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__AreaType : public gml__MeasureType
{ public:
};

/// @brief "http://www.opengis.net/gml/3.2":VolumeType is a complexType with simpleContent.
///
/// class gml__VolumeType operations:
/// - gml__VolumeType* soap_new_gml__VolumeType(soap*) allocate and default initialize
/// - gml__VolumeType* soap_new_gml__VolumeType(soap*, int num) allocate array and default initialize values
/// - gml__VolumeType* soap_new_req_gml__VolumeType(soap*, ...) allocate, set required members
/// - gml__VolumeType* soap_new_set_gml__VolumeType(soap*, ...) allocate, set all public members
/// - gml__VolumeType::soap_default(soap*) default initialize members
/// - int soap_read_gml__VolumeType(soap*, gml__VolumeType*) deserialize from a stream
/// - int soap_write_gml__VolumeType(soap*, gml__VolumeType*) serialize to a stream
/// - gml__VolumeType* gml__VolumeType::soap_dup(soap*) returns deep copy of gml__VolumeType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__VolumeType::soap_del() deep deletes gml__VolumeType data members, use only after gml__VolumeType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__VolumeType : public gml__MeasureType
{ public:
};

/// @brief "http://www.opengis.net/gml/3.2":SpeedType is a complexType with simpleContent.
///
/// class gml__SpeedType operations:
/// - gml__SpeedType* soap_new_gml__SpeedType(soap*) allocate and default initialize
/// - gml__SpeedType* soap_new_gml__SpeedType(soap*, int num) allocate array and default initialize values
/// - gml__SpeedType* soap_new_req_gml__SpeedType(soap*, ...) allocate, set required members
/// - gml__SpeedType* soap_new_set_gml__SpeedType(soap*, ...) allocate, set all public members
/// - gml__SpeedType::soap_default(soap*) default initialize members
/// - int soap_read_gml__SpeedType(soap*, gml__SpeedType*) deserialize from a stream
/// - int soap_write_gml__SpeedType(soap*, gml__SpeedType*) serialize to a stream
/// - gml__SpeedType* gml__SpeedType::soap_dup(soap*) returns deep copy of gml__SpeedType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__SpeedType::soap_del() deep deletes gml__SpeedType data members, use only after gml__SpeedType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__SpeedType : public gml__MeasureType
{ public:
};

/// @brief "http://www.opengis.net/gml/3.2":AngleType is a complexType with simpleContent.
///
/// class gml__AngleType operations:
/// - gml__AngleType* soap_new_gml__AngleType(soap*) allocate and default initialize
/// - gml__AngleType* soap_new_gml__AngleType(soap*, int num) allocate array and default initialize values
/// - gml__AngleType* soap_new_req_gml__AngleType(soap*, ...) allocate, set required members
/// - gml__AngleType* soap_new_set_gml__AngleType(soap*, ...) allocate, set all public members
/// - gml__AngleType::soap_default(soap*) default initialize members
/// - int soap_read_gml__AngleType(soap*, gml__AngleType*) deserialize from a stream
/// - int soap_write_gml__AngleType(soap*, gml__AngleType*) serialize to a stream
/// - gml__AngleType* gml__AngleType::soap_dup(soap*) returns deep copy of gml__AngleType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__AngleType::soap_del() deep deletes gml__AngleType data members, use only after gml__AngleType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__AngleType : public gml__MeasureType
{ public:
};

/// @brief "http://www.opengis.net/gml/3.2":DefinitionType is a complexType with complexContent extension of XSD type "http://www.opengis.net/gml/3.2":DefinitionBaseType.
///
/// class gml__DefinitionType operations:
/// - gml__DefinitionType* soap_new_gml__DefinitionType(soap*) allocate and default initialize
/// - gml__DefinitionType* soap_new_gml__DefinitionType(soap*, int num) allocate array and default initialize values
/// - gml__DefinitionType* soap_new_req_gml__DefinitionType(soap*, ...) allocate, set required members
/// - gml__DefinitionType* soap_new_set_gml__DefinitionType(soap*, ...) allocate, set all public members
/// - gml__DefinitionType::soap_default(soap*) default initialize members
/// - int soap_read_gml__DefinitionType(soap*, gml__DefinitionType*) deserialize from a stream
/// - int soap_write_gml__DefinitionType(soap*, gml__DefinitionType*) serialize to a stream
/// - gml__DefinitionType* gml__DefinitionType::soap_dup(soap*) returns deep copy of gml__DefinitionType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__DefinitionType::soap_del() deep deletes gml__DefinitionType data members, use only after gml__DefinitionType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__DefinitionType : public gml__DefinitionBaseType
{ public:
/*  INHERITED FROM gml__DefinitionBaseType:
    END OF INHERITED FROM gml__DefinitionBaseType */
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":remarks.
    std::string*                         remarks                        0;	///< Optional element.
};

/// @brief "http://www.opengis.net/gml/3.2":CodeWithAuthorityType is a complexType with simpleContent.
///
/// <PRE><BLOCKQUOTE>
///   gml:CodeWithAuthorityType requires that the codeSpace attribute is provided in an instance.
/// </BLOCKQUOTE></PRE>
/// class gml__CodeWithAuthorityType operations:
/// - gml__CodeWithAuthorityType* soap_new_gml__CodeWithAuthorityType(soap*) allocate and default initialize
/// - gml__CodeWithAuthorityType* soap_new_gml__CodeWithAuthorityType(soap*, int num) allocate array and default initialize values
/// - gml__CodeWithAuthorityType* soap_new_req_gml__CodeWithAuthorityType(soap*, ...) allocate, set required members
/// - gml__CodeWithAuthorityType* soap_new_set_gml__CodeWithAuthorityType(soap*, ...) allocate, set all public members
/// - gml__CodeWithAuthorityType::soap_default(soap*) default initialize members
/// - int soap_read_gml__CodeWithAuthorityType(soap*, gml__CodeWithAuthorityType*) deserialize from a stream
/// - int soap_write_gml__CodeWithAuthorityType(soap*, gml__CodeWithAuthorityType*) serialize to a stream
/// - gml__CodeWithAuthorityType* gml__CodeWithAuthorityType::soap_dup(soap*) returns deep copy of gml__CodeWithAuthorityType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__CodeWithAuthorityType::soap_del() deep deletes gml__CodeWithAuthorityType data members, use only after gml__CodeWithAuthorityType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__CodeWithAuthorityType : public xsd__anyType
{ public:
/// __item wraps "xs:string" simpleContent.
    std::string                          __item                        ;
/// Attribute "codeSpace" of XSD type xs:anyURI.
   @xsd__anyURI                          codeSpace                      1;	///< Required attribute.
/// Attribute "codeSpace" of XSD type xs:anyURI.
   //jld @xsd__anyURI*                         codeSpace                      0;	///< Optional attribute.
};

/// @brief "http://www.opengis.net/gml/3.2":AbstractCoverageType is an abstract complexType with complexContent extension of XSD type "http://www.opengis.net/gml/3.2":AbstractFeatureType.
///
/// <PRE><BLOCKQUOTE>
///   The base type for coverages is gml:AbstractCoverageType. The basic elements of a coverage can be seen in this content model: the coverage contains gml:domainSet and gml:rangeSet properties. The gml:domainSet property describes the domain of the coverage and the gml:rangeSet property describes the range of the coverage.
/// </BLOCKQUOTE></PRE>
/// class gml__AbstractCoverageType operations:
/// - gml__AbstractCoverageType* soap_new_gml__AbstractCoverageType(soap*) allocate and default initialize
/// - gml__AbstractCoverageType* soap_new_gml__AbstractCoverageType(soap*, int num) allocate array and default initialize values
/// - gml__AbstractCoverageType* soap_new_req_gml__AbstractCoverageType(soap*, ...) allocate, set required members
/// - gml__AbstractCoverageType* soap_new_set_gml__AbstractCoverageType(soap*, ...) allocate, set all public members
/// - gml__AbstractCoverageType::soap_default(soap*) default initialize members
/// - int soap_read_gml__AbstractCoverageType(soap*, gml__AbstractCoverageType*) deserialize from a stream
/// - int soap_write_gml__AbstractCoverageType(soap*, gml__AbstractCoverageType*) serialize to a stream
/// - gml__AbstractCoverageType* gml__AbstractCoverageType::soap_dup(soap*) returns deep copy of gml__AbstractCoverageType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__AbstractCoverageType::soap_del() deep deletes gml__AbstractCoverageType data members, use only after gml__AbstractCoverageType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__AbstractCoverageType : public gml__AbstractFeatureType
{ public:
/*  INHERITED FROM gml__AbstractGMLType:
//  BEGIN GROUP <xs:group name="StandardObjectProperties">
/// Vector of gml__MetaDataPropertyType* element refs of length 0..unbounded.
    std::vector<gml__MetaDataPropertyType*> metaDataProperty               0;
/// <PRE><BLOCKQUOTE>
///   The value of this property is a text description of the object. gml:description uses gml:StringOrRefType as its content model, so it may contain a simple text string content, or carry a reference to an external description. The use of gml:description to reference an external description has been deprecated and replaced by the gml:descriptionReference property.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":description.
    gml__StringOrRefType*                description                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The value of this property is a remote text description of the object. The xlink:href attribute of the gml:descriptionReference property references the external description.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":descriptionReference.
    gml__ReferenceType*                  descriptionReference           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Often, a special identifier is assigned to an object by the maintaining authority with the intention that it is used in references to the object For such cases, the codeSpace shall be provided. That identifier is usually unique either globally or within an application domain. gml:identifier is a pre-defined property for such identifiers.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":identifier.
    gml__CodeWithAuthorityType*          identifier                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The gml:name property provides a label or identifier for the object, commonly a descriptive name. An object may have several names, typically assigned by different authorities. gml:name uses the gml:CodeType content model. The authority for a name is indicated by the value of its (optional) codeSpace attribute. The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace. In common usage there will be one name per authority, so a processing application may select the name from its preferred codeSpace.
/// </BLOCKQUOTE></PRE>
/// Vector of gml__CodeType* element refs of length 0..unbounded.
    std::vector<gml__CodeType*         > name                           0;
//  END OF GROUP
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":id.
/// <PRE><BLOCKQUOTE>
///   The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.
/// </BLOCKQUOTE></PRE>
   @xsd__ID*                             gml__id                        0;	///< Optional attribute.
    END OF INHERITED FROM gml__AbstractGMLType */
/*  INHERITED FROM gml__AbstractFeatureType:
/// <PRE><BLOCKQUOTE>
///   This property describes the minimum bounding box or rectangle that encloses the entire feature.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":boundedBy.
    gml__BoundingShapeType*              boundedBy                      0;	///< Optional element.
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="location" minOccurs="0"> with global elements <priorityLocation>
   $int                                  __unionlocation                0;	///< Union _gml__union_AbstractCoverageType selector: set to SOAP_UNION__gml__union_AbstractCoverageType_<fieldname> or 0 to omit
/// Union for substitutionGroup gml__location.
    union _gml__union_AbstractCoverageType
    {
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":location.
    gml__LocationPropertyType*           location                       0;	///< Optional element.
/// Element "http://www.opengis.net/gml/3.2":priorityLocation.
    gml__PriorityLocationPropertyType*   priorityLocation               nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_AbstractCoverageType    ;
//  END OF SUBSTITUTIONS
    END OF INHERITED FROM gml__AbstractFeatureType */
/// <PRE><BLOCKQUOTE>
///   The gml:domainSet property element describes the spatio-temporal region of interest, within which the coverage is defined. Its content model is given by gml:DomainSetType.
///   The value of the domain is thus a choice between a gml:AbstractGeometry and a gml:AbstractTimeObject. In the instance these abstract elements will normally be substituted by a geometry complex or temporal complex, to represent spatial coverages and time-series, respectively. The presence of the gml:AssociationAttributeGroup means that domainSet follows the usual GML property model and may use the xlink:href attribute to point to the domain, as an alternative to describing the domain inline. Ownership semantics may be provided using the gml:OwnershipAttributeGroup.
/// </BLOCKQUOTE></PRE>
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="domainSet"> with global elements <multiPointDomain> <multiCurveDomain> <multiSurfaceDomain> <multiSolidDomain> <gridDomain> <rectifiedGridDomain>
   $int                                  __uniondomainSet              ;	///< Union _gml__union_AbstractCoverageType_ selector: set to SOAP_UNION__gml__union_AbstractCoverageType__<fieldname>
/// Union for substitutionGroup gml__domainSet.
    union _gml__union_AbstractCoverageType_
    {
/// <PRE><BLOCKQUOTE>
///   The gml:domainSet property element describes the spatio-temporal region of interest, within which the coverage is defined. Its content model is given by gml:DomainSetType.
///   The value of the domain is thus a choice between a gml:AbstractGeometry and a gml:AbstractTimeObject. In the instance these abstract elements will normally be substituted by a geometry complex or temporal complex, to represent spatial coverages and time-series, respectively. The presence of the gml:AssociationAttributeGroup means that domainSet follows the usual GML property model and may use the xlink:href attribute to point to the domain, as an alternative to describing the domain inline. Ownership semantics may be provided using the gml:OwnershipAttributeGroup.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":domainSet.
    gml__DomainSetType*                  domainSet                      nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.opengis.net/gml/3.2":multiPointDomain.
    gml__DomainSetType*                  multiPointDomain               nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.opengis.net/gml/3.2":multiCurveDomain.
    gml__DomainSetType*                  multiCurveDomain               nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.opengis.net/gml/3.2":multiSurfaceDomain.
    gml__DomainSetType*                  multiSurfaceDomain             nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.opengis.net/gml/3.2":multiSolidDomain.
    gml__DomainSetType*                  multiSolidDomain               nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.opengis.net/gml/3.2":gridDomain.
    gml__DomainSetType*                  gridDomain                     nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.opengis.net/gml/3.2":rectifiedGridDomain.
    gml__DomainSetType*                  rectifiedGridDomain            nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_AbstractCoverageType_   ;
//  END OF SUBSTITUTIONS
/// <PRE><BLOCKQUOTE>
///   The gml:rangeSet property element contains the values of the coverage (sometimes called the attribute values). Its content model is given by gml:RangeSetType.
///   This content model supports a structural description of the range. The semantic information describing the range set is embedded using a uniform method, as part of the explicit values, or as a template value accompanying the representation using gml:DataBlock and gml:File.
///   The values from each component (or "band") in the range may be encoded within a gml:ValueArray element or a concrete member of the gml:AbstractScalarValueList substitution group . Use of these elements satisfies the value-type homogeneity requirement.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":rangeSet.
    gml__RangeSetType*                   rangeSet                       1;	///< Required element.
};

/// @brief "http://www.opengis.net/gml/3.2":SequenceRuleType is a complexType with simpleContent.
///
/// <PRE><BLOCKQUOTE>
///   The gml:SequenceRuleType is derived from the gml:SequenceRuleEnumeration through the addition of an axisOrder attribute. The gml:SequenceRuleEnumeration is an enumerated type. The rule names are defined in ISO 19123. If no rule name is specified the default is "Linear".
/// </BLOCKQUOTE></PRE>
/// class gml__SequenceRuleType operations:
/// - gml__SequenceRuleType* soap_new_gml__SequenceRuleType(soap*) allocate and default initialize
/// - gml__SequenceRuleType* soap_new_gml__SequenceRuleType(soap*, int num) allocate array and default initialize values
/// - gml__SequenceRuleType* soap_new_req_gml__SequenceRuleType(soap*, ...) allocate, set required members
/// - gml__SequenceRuleType* soap_new_set_gml__SequenceRuleType(soap*, ...) allocate, set all public members
/// - gml__SequenceRuleType::soap_default(soap*) default initialize members
/// - int soap_read_gml__SequenceRuleType(soap*, gml__SequenceRuleType*) deserialize from a stream
/// - int soap_write_gml__SequenceRuleType(soap*, gml__SequenceRuleType*) serialize to a stream
/// - gml__SequenceRuleType* gml__SequenceRuleType::soap_dup(soap*) returns deep copy of gml__SequenceRuleType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__SequenceRuleType::soap_del() deep deletes gml__SequenceRuleType data members, use only after gml__SequenceRuleType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__SequenceRuleType : public xsd__anyType
{ public:
/// __item wraps ""http://www.opengis.net/gml/3.2":SequenceRuleEnumeration" simpleContent.
    enum gml__SequenceRuleEnumeration    __item                        ;
/// Attribute "order" of XSD type "http://www.opengis.net/gml/3.2":IncrementOrder.
   @enum gml__IncrementOrder*            order                          0;	///< Optional attribute.
/// Attribute "axisOrder" of XSD type "http://www.opengis.net/gml/3.2":AxisDirectionList.
   @gml__AxisDirectionList*              axisOrder                      0;	///< Optional attribute.
};

/// @brief "http://www.opengis.net/gml/3.2":AbstractTimePrimitiveType is an abstract complexType with complexContent extension of XSD type "http://www.opengis.net/gml/3.2":AbstractTimeObjectType.
///
/// class gml__AbstractTimePrimitiveType operations:
/// - gml__AbstractTimePrimitiveType* soap_new_gml__AbstractTimePrimitiveType(soap*) allocate and default initialize
/// - gml__AbstractTimePrimitiveType* soap_new_gml__AbstractTimePrimitiveType(soap*, int num) allocate array and default initialize values
/// - gml__AbstractTimePrimitiveType* soap_new_req_gml__AbstractTimePrimitiveType(soap*, ...) allocate, set required members
/// - gml__AbstractTimePrimitiveType* soap_new_set_gml__AbstractTimePrimitiveType(soap*, ...) allocate, set all public members
/// - gml__AbstractTimePrimitiveType::soap_default(soap*) default initialize members
/// - int soap_read_gml__AbstractTimePrimitiveType(soap*, gml__AbstractTimePrimitiveType*) deserialize from a stream
/// - int soap_write_gml__AbstractTimePrimitiveType(soap*, gml__AbstractTimePrimitiveType*) serialize to a stream
/// - gml__AbstractTimePrimitiveType* gml__AbstractTimePrimitiveType::soap_dup(soap*) returns deep copy of gml__AbstractTimePrimitiveType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__AbstractTimePrimitiveType::soap_del() deep deletes gml__AbstractTimePrimitiveType data members, use only after gml__AbstractTimePrimitiveType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__AbstractTimePrimitiveType : public gml__AbstractTimeObjectType
{ public:
/*  INHERITED FROM gml__AbstractGMLType:
//  BEGIN GROUP <xs:group name="StandardObjectProperties">
/// Vector of gml__MetaDataPropertyType* element refs of length 0..unbounded.
    std::vector<gml__MetaDataPropertyType*> metaDataProperty               0;
/// <PRE><BLOCKQUOTE>
///   The value of this property is a text description of the object. gml:description uses gml:StringOrRefType as its content model, so it may contain a simple text string content, or carry a reference to an external description. The use of gml:description to reference an external description has been deprecated and replaced by the gml:descriptionReference property.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":description.
    gml__StringOrRefType*                description                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The value of this property is a remote text description of the object. The xlink:href attribute of the gml:descriptionReference property references the external description.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":descriptionReference.
    gml__ReferenceType*                  descriptionReference           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Often, a special identifier is assigned to an object by the maintaining authority with the intention that it is used in references to the object For such cases, the codeSpace shall be provided. That identifier is usually unique either globally or within an application domain. gml:identifier is a pre-defined property for such identifiers.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":identifier.
    gml__CodeWithAuthorityType*          identifier                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The gml:name property provides a label or identifier for the object, commonly a descriptive name. An object may have several names, typically assigned by different authorities. gml:name uses the gml:CodeType content model. The authority for a name is indicated by the value of its (optional) codeSpace attribute. The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace. In common usage there will be one name per authority, so a processing application may select the name from its preferred codeSpace.
/// </BLOCKQUOTE></PRE>
/// Vector of gml__CodeType* element refs of length 0..unbounded.
    std::vector<gml__CodeType*         > name                           0;
//  END OF GROUP
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":id.
/// <PRE><BLOCKQUOTE>
///   The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.
/// </BLOCKQUOTE></PRE>
   @xsd__ID*                             gml__id                        0;	///< Optional attribute.
    END OF INHERITED FROM gml__AbstractGMLType */
/*  INHERITED FROM gml__AbstractTimeObjectType:
    END OF INHERITED FROM gml__AbstractTimeObjectType */
/// Vector of gml__RelatedTimeType* of length 0..unbounded.
    std::vector<gml__RelatedTimeType*  > relatedTime                    0;
};

/// @brief "http://www.opengis.net/gml/3.2":AbstractTimeComplexType is an abstract complexType with complexContent extension of XSD type "http://www.opengis.net/gml/3.2":AbstractTimeObjectType.
///
/// class gml__AbstractTimeComplexType operations:
/// - gml__AbstractTimeComplexType* soap_new_gml__AbstractTimeComplexType(soap*) allocate and default initialize
/// - gml__AbstractTimeComplexType* soap_new_gml__AbstractTimeComplexType(soap*, int num) allocate array and default initialize values
/// - gml__AbstractTimeComplexType* soap_new_req_gml__AbstractTimeComplexType(soap*, ...) allocate, set required members
/// - gml__AbstractTimeComplexType* soap_new_set_gml__AbstractTimeComplexType(soap*, ...) allocate, set all public members
/// - gml__AbstractTimeComplexType::soap_default(soap*) default initialize members
/// - int soap_read_gml__AbstractTimeComplexType(soap*, gml__AbstractTimeComplexType*) deserialize from a stream
/// - int soap_write_gml__AbstractTimeComplexType(soap*, gml__AbstractTimeComplexType*) serialize to a stream
/// - gml__AbstractTimeComplexType* gml__AbstractTimeComplexType::soap_dup(soap*) returns deep copy of gml__AbstractTimeComplexType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__AbstractTimeComplexType::soap_del() deep deletes gml__AbstractTimeComplexType data members, use only after gml__AbstractTimeComplexType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__AbstractTimeComplexType : public gml__AbstractTimeObjectType
{ public:
/*  INHERITED FROM gml__AbstractGMLType:
//  BEGIN GROUP <xs:group name="StandardObjectProperties">
/// Vector of gml__MetaDataPropertyType* element refs of length 0..unbounded.
    std::vector<gml__MetaDataPropertyType*> metaDataProperty               0;
/// <PRE><BLOCKQUOTE>
///   The value of this property is a text description of the object. gml:description uses gml:StringOrRefType as its content model, so it may contain a simple text string content, or carry a reference to an external description. The use of gml:description to reference an external description has been deprecated and replaced by the gml:descriptionReference property.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":description.
    gml__StringOrRefType*                description                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The value of this property is a remote text description of the object. The xlink:href attribute of the gml:descriptionReference property references the external description.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":descriptionReference.
    gml__ReferenceType*                  descriptionReference           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Often, a special identifier is assigned to an object by the maintaining authority with the intention that it is used in references to the object For such cases, the codeSpace shall be provided. That identifier is usually unique either globally or within an application domain. gml:identifier is a pre-defined property for such identifiers.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":identifier.
    gml__CodeWithAuthorityType*          identifier                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The gml:name property provides a label or identifier for the object, commonly a descriptive name. An object may have several names, typically assigned by different authorities. gml:name uses the gml:CodeType content model. The authority for a name is indicated by the value of its (optional) codeSpace attribute. The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace. In common usage there will be one name per authority, so a processing application may select the name from its preferred codeSpace.
/// </BLOCKQUOTE></PRE>
/// Vector of gml__CodeType* element refs of length 0..unbounded.
    std::vector<gml__CodeType*         > name                           0;
//  END OF GROUP
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":id.
/// <PRE><BLOCKQUOTE>
///   The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.
/// </BLOCKQUOTE></PRE>
   @xsd__ID*                             gml__id                        0;	///< Optional attribute.
    END OF INHERITED FROM gml__AbstractGMLType */
/*  INHERITED FROM gml__AbstractTimeObjectType:
    END OF INHERITED FROM gml__AbstractTimeObjectType */
};

/// @brief "http://www.opengis.net/gml/3.2":ValueArrayType is a complexType with complexContent extension of XSD type "http://www.opengis.net/gml/3.2":CompositeValueType.
///
/// class gml__ValueArrayType operations:
/// - gml__ValueArrayType* soap_new_gml__ValueArrayType(soap*) allocate and default initialize
/// - gml__ValueArrayType* soap_new_gml__ValueArrayType(soap*, int num) allocate array and default initialize values
/// - gml__ValueArrayType* soap_new_req_gml__ValueArrayType(soap*, ...) allocate, set required members
/// - gml__ValueArrayType* soap_new_set_gml__ValueArrayType(soap*, ...) allocate, set all public members
/// - gml__ValueArrayType::soap_default(soap*) default initialize members
/// - int soap_read_gml__ValueArrayType(soap*, gml__ValueArrayType*) deserialize from a stream
/// - int soap_write_gml__ValueArrayType(soap*, gml__ValueArrayType*) serialize to a stream
/// - gml__ValueArrayType* gml__ValueArrayType::soap_dup(soap*) returns deep copy of gml__ValueArrayType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__ValueArrayType::soap_del() deep deletes gml__ValueArrayType data members, use only after gml__ValueArrayType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__ValueArrayType : public gml__CompositeValueType
{ public:
/*  INHERITED FROM gml__AbstractGMLType:
//  BEGIN GROUP <xs:group name="StandardObjectProperties">
/// Vector of gml__MetaDataPropertyType* element refs of length 0..unbounded.
    std::vector<gml__MetaDataPropertyType*> metaDataProperty               0;
/// <PRE><BLOCKQUOTE>
///   The value of this property is a text description of the object. gml:description uses gml:StringOrRefType as its content model, so it may contain a simple text string content, or carry a reference to an external description. The use of gml:description to reference an external description has been deprecated and replaced by the gml:descriptionReference property.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":description.
    gml__StringOrRefType*                description                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The value of this property is a remote text description of the object. The xlink:href attribute of the gml:descriptionReference property references the external description.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":descriptionReference.
    gml__ReferenceType*                  descriptionReference           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Often, a special identifier is assigned to an object by the maintaining authority with the intention that it is used in references to the object For such cases, the codeSpace shall be provided. That identifier is usually unique either globally or within an application domain. gml:identifier is a pre-defined property for such identifiers.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":identifier.
    gml__CodeWithAuthorityType*          identifier                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The gml:name property provides a label or identifier for the object, commonly a descriptive name. An object may have several names, typically assigned by different authorities. gml:name uses the gml:CodeType content model. The authority for a name is indicated by the value of its (optional) codeSpace attribute. The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace. In common usage there will be one name per authority, so a processing application may select the name from its preferred codeSpace.
/// </BLOCKQUOTE></PRE>
/// Vector of gml__CodeType* element refs of length 0..unbounded.
    std::vector<gml__CodeType*         > name                           0;
//  END OF GROUP
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":id.
/// <PRE><BLOCKQUOTE>
///   The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.
/// </BLOCKQUOTE></PRE>
   @xsd__ID*                             gml__id                        0;	///< Optional attribute.
    END OF INHERITED FROM gml__AbstractGMLType */
/*  INHERITED FROM gml__CompositeValueType:
/// <PRE><BLOCKQUOTE>
///   Property that refers to, or contains, a Value.
/// </BLOCKQUOTE></PRE>
/// Vector of gml__ValuePropertyType* element refs of length 0..unbounded.
    std::vector<gml__ValuePropertyType*> valueComponent                 0;
/// <PRE><BLOCKQUOTE>
///   Property that contains Values.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":valueComponents.
    gml__ValueArrayPropertyType*         valueComponents                0;	///< Optional element.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":AggregationAttributeGroup">.
/// Attribute "aggregationType" of XSD type "http://www.opengis.net/gml/3.2":AggregationType.
   @enum gml__AggregationType*           aggregationType                0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
    END OF INHERITED FROM gml__CompositeValueType */
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":referenceSystem">.
/// Attribute "codeSpace" of XSD type xs:anyURI.
   @xsd__anyURI*                         codeSpace                      0;	///< Optional attribute.
/// Attribute "uom" of XSD type "http://www.opengis.net/gml/3.2":UomIdentifier.
   @gml__UomIdentifier*                  uom                            0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.opengis.net/gml/3.2":CategoryExtentType is a complexType with simpleContent.
///
/// class gml__CategoryExtentType operations:
/// - gml__CategoryExtentType* soap_new_gml__CategoryExtentType(soap*) allocate and default initialize
/// - gml__CategoryExtentType* soap_new_gml__CategoryExtentType(soap*, int num) allocate array and default initialize values
/// - gml__CategoryExtentType* soap_new_req_gml__CategoryExtentType(soap*, ...) allocate, set required members
/// - gml__CategoryExtentType* soap_new_set_gml__CategoryExtentType(soap*, ...) allocate, set all public members
/// - gml__CategoryExtentType::soap_default(soap*) default initialize members
/// - int soap_read_gml__CategoryExtentType(soap*, gml__CategoryExtentType*) deserialize from a stream
/// - int soap_write_gml__CategoryExtentType(soap*, gml__CategoryExtentType*) serialize to a stream
/// - gml__CategoryExtentType* gml__CategoryExtentType::soap_dup(soap*) returns deep copy of gml__CategoryExtentType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__CategoryExtentType::soap_del() deep deletes gml__CategoryExtentType data members, use only after gml__CategoryExtentType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__CategoryExtentType : public xsd__anyType
{ public:
/// __item wraps ""http://www.opengis.net/gml/3.2":NameOrNilReasonList" simpleContent.
    gml__NameOrNilReasonList             __item                        ;
/// Attribute "codeSpace" of XSD type xs:anyURI.
   @xsd__anyURI*                         codeSpace                      0;	///< Optional attribute.
};

/// @brief "http://www.opengis.net/gml/3.2":QuantityExtentType is a complexType with simpleContent.
///
/// class gml__QuantityExtentType operations:
/// - gml__QuantityExtentType* soap_new_gml__QuantityExtentType(soap*) allocate and default initialize
/// - gml__QuantityExtentType* soap_new_gml__QuantityExtentType(soap*, int num) allocate array and default initialize values
/// - gml__QuantityExtentType* soap_new_req_gml__QuantityExtentType(soap*, ...) allocate, set required members
/// - gml__QuantityExtentType* soap_new_set_gml__QuantityExtentType(soap*, ...) allocate, set all public members
/// - gml__QuantityExtentType::soap_default(soap*) default initialize members
/// - int soap_read_gml__QuantityExtentType(soap*, gml__QuantityExtentType*) deserialize from a stream
/// - int soap_write_gml__QuantityExtentType(soap*, gml__QuantityExtentType*) serialize to a stream
/// - gml__QuantityExtentType* gml__QuantityExtentType::soap_dup(soap*) returns deep copy of gml__QuantityExtentType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__QuantityExtentType::soap_del() deep deletes gml__QuantityExtentType data members, use only after gml__QuantityExtentType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__QuantityExtentType : public xsd__anyType
{ public:
/// __item wraps ""http://www.opengis.net/gml/3.2":doubleOrNilReasonList" simpleContent.
    gml__doubleOrNilReasonList           __item                        ;
/// Attribute "uom" of XSD type "http://www.opengis.net/gml/3.2":UomIdentifier.
   @gml__UomIdentifier                   uom                            1;	///< Required attribute.
};

/// @brief "http://www.opengis.net/gml/3.2":GridType is a complexType with complexContent extension of XSD type "http://www.opengis.net/gml/3.2":AbstractGeometryType.
///
/// class gml__GridType operations:
/// - gml__GridType* soap_new_gml__GridType(soap*) allocate and default initialize
/// - gml__GridType* soap_new_gml__GridType(soap*, int num) allocate array and default initialize values
/// - gml__GridType* soap_new_req_gml__GridType(soap*, ...) allocate, set required members
/// - gml__GridType* soap_new_set_gml__GridType(soap*, ...) allocate, set all public members
/// - gml__GridType::soap_default(soap*) default initialize members
/// - int soap_read_gml__GridType(soap*, gml__GridType*) deserialize from a stream
/// - int soap_write_gml__GridType(soap*, gml__GridType*) serialize to a stream
/// - gml__GridType* gml__GridType::soap_dup(soap*) returns deep copy of gml__GridType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__GridType::soap_del() deep deletes gml__GridType data members, use only after gml__GridType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__GridType : public gml__AbstractGeometryType
{ public:
/*  INHERITED FROM gml__AbstractGMLType:
//  BEGIN GROUP <xs:group name="StandardObjectProperties">
/// Vector of gml__MetaDataPropertyType* element refs of length 0..unbounded.
    std::vector<gml__MetaDataPropertyType*> metaDataProperty               0;
/// <PRE><BLOCKQUOTE>
///   The value of this property is a text description of the object. gml:description uses gml:StringOrRefType as its content model, so it may contain a simple text string content, or carry a reference to an external description. The use of gml:description to reference an external description has been deprecated and replaced by the gml:descriptionReference property.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":description.
    gml__StringOrRefType*                description                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The value of this property is a remote text description of the object. The xlink:href attribute of the gml:descriptionReference property references the external description.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":descriptionReference.
    gml__ReferenceType*                  descriptionReference           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Often, a special identifier is assigned to an object by the maintaining authority with the intention that it is used in references to the object For such cases, the codeSpace shall be provided. That identifier is usually unique either globally or within an application domain. gml:identifier is a pre-defined property for such identifiers.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":identifier.
    gml__CodeWithAuthorityType*          identifier                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The gml:name property provides a label or identifier for the object, commonly a descriptive name. An object may have several names, typically assigned by different authorities. gml:name uses the gml:CodeType content model. The authority for a name is indicated by the value of its (optional) codeSpace attribute. The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace. In common usage there will be one name per authority, so a processing application may select the name from its preferred codeSpace.
/// </BLOCKQUOTE></PRE>
/// Vector of gml__CodeType* element refs of length 0..unbounded.
    std::vector<gml__CodeType*         > name                           0;
//  END OF GROUP
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":id.
/// <PRE><BLOCKQUOTE>
///   The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.
/// </BLOCKQUOTE></PRE>
   @xsd__ID*                             gml__id                        0;	///< Optional attribute.
    END OF INHERITED FROM gml__AbstractGMLType */
/*  INHERITED FROM gml__AbstractGeometryType:
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":SRSReferenceGroup">.
/// Attribute "srsName" of XSD type xs:anyURI.
   @xsd__anyURI*                         srsName                        0;	///< Optional attribute.
/// Attribute "srsDimension" of XSD type xs:positiveInteger.
   @xsd__positiveInteger*                srsDimension                   0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":SRSInformationGroup">.
/// Attribute "axisLabels" of XSD type "http://www.opengis.net/gml/3.2":NCNameList.
   @gml__NCNameList*                     axisLabels                     0;	///< Optional attribute.
/// Attribute "uomLabels" of XSD type "http://www.opengis.net/gml/3.2":NCNameList.
   @gml__NCNameList*                     uomLabels                      0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
    END OF INHERITED FROM gml__AbstractGeometryType */
/// Element "limits" of XSD type "http://www.opengis.net/gml/3.2":GridLimitsType.
    gml__GridLimitsType*                 limits                         1;	///< Required element.
//  BEGIN CHOICE <xs:choice>
   $int                                  __union_GridType              ;	///< Union _gml__union_GridType selector: set to SOAP_UNION__gml__union_GridType_<fieldname>
    union _gml__union_GridType
    {
/// Element "axisLabels" of XSD type "http://www.opengis.net/gml/3.2":NCNameList.
    gml__NCNameList*                     axisLabels                     nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Vector of std::string of length 1..unbounded.
    std::vector<std::string           > *axisName                       1;
    }                                    union_GridType                ;
//  END OF CHOICE
/// Attribute "dimension" of XSD type xs:positiveInteger.
   @xsd__positiveInteger                 dimension                      1;	///< Required attribute.
};

/// @brief "http://www.opengis.net/gml/3.2":ObservationType is a complexType with complexContent extension of XSD type "http://www.opengis.net/gml/3.2":AbstractFeatureType.
///
/// class gml__ObservationType operations:
/// - gml__ObservationType* soap_new_gml__ObservationType(soap*) allocate and default initialize
/// - gml__ObservationType* soap_new_gml__ObservationType(soap*, int num) allocate array and default initialize values
/// - gml__ObservationType* soap_new_req_gml__ObservationType(soap*, ...) allocate, set required members
/// - gml__ObservationType* soap_new_set_gml__ObservationType(soap*, ...) allocate, set all public members
/// - gml__ObservationType::soap_default(soap*) default initialize members
/// - int soap_read_gml__ObservationType(soap*, gml__ObservationType*) deserialize from a stream
/// - int soap_write_gml__ObservationType(soap*, gml__ObservationType*) serialize to a stream
/// - gml__ObservationType* gml__ObservationType::soap_dup(soap*) returns deep copy of gml__ObservationType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__ObservationType::soap_del() deep deletes gml__ObservationType data members, use only after gml__ObservationType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__ObservationType : public gml__AbstractFeatureType
{ public:
/*  INHERITED FROM gml__AbstractGMLType:
//  BEGIN GROUP <xs:group name="StandardObjectProperties">
/// Vector of gml__MetaDataPropertyType* element refs of length 0..unbounded.
    std::vector<gml__MetaDataPropertyType*> metaDataProperty               0;
/// <PRE><BLOCKQUOTE>
///   The value of this property is a text description of the object. gml:description uses gml:StringOrRefType as its content model, so it may contain a simple text string content, or carry a reference to an external description. The use of gml:description to reference an external description has been deprecated and replaced by the gml:descriptionReference property.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":description.
    gml__StringOrRefType*                description                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The value of this property is a remote text description of the object. The xlink:href attribute of the gml:descriptionReference property references the external description.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":descriptionReference.
    gml__ReferenceType*                  descriptionReference           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Often, a special identifier is assigned to an object by the maintaining authority with the intention that it is used in references to the object For such cases, the codeSpace shall be provided. That identifier is usually unique either globally or within an application domain. gml:identifier is a pre-defined property for such identifiers.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":identifier.
    gml__CodeWithAuthorityType*          identifier                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The gml:name property provides a label or identifier for the object, commonly a descriptive name. An object may have several names, typically assigned by different authorities. gml:name uses the gml:CodeType content model. The authority for a name is indicated by the value of its (optional) codeSpace attribute. The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace. In common usage there will be one name per authority, so a processing application may select the name from its preferred codeSpace.
/// </BLOCKQUOTE></PRE>
/// Vector of gml__CodeType* element refs of length 0..unbounded.
    std::vector<gml__CodeType*         > name                           0;
//  END OF GROUP
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":id.
/// <PRE><BLOCKQUOTE>
///   The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.
/// </BLOCKQUOTE></PRE>
   @xsd__ID*                             gml__id                        0;	///< Optional attribute.
    END OF INHERITED FROM gml__AbstractGMLType */
/*  INHERITED FROM gml__AbstractFeatureType:
/// <PRE><BLOCKQUOTE>
///   This property describes the minimum bounding box or rectangle that encloses the entire feature.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":boundedBy.
    gml__BoundingShapeType*              boundedBy                      0;	///< Optional element.
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="location" minOccurs="0"> with global elements <priorityLocation>
   $int                                  __unionlocation                0;	///< Union _gml__union_ObservationType selector: set to SOAP_UNION__gml__union_ObservationType_<fieldname> or 0 to omit
/// Union for substitutionGroup gml__location.
    union _gml__union_ObservationType
    {
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":location.
    gml__LocationPropertyType*           location                       0;	///< Optional element.
/// Element "http://www.opengis.net/gml/3.2":priorityLocation.
    gml__PriorityLocationPropertyType*   priorityLocation               nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_ObservationType         ;
//  END OF SUBSTITUTIONS
    END OF INHERITED FROM gml__AbstractFeatureType */
/// <PRE><BLOCKQUOTE>
///   gml:validTime is a convenience property element.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":validTime.
    gml__TimePrimitivePropertyType*      validTime                      1;	///< Required element.
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":using.
    gml__ProcedurePropertyType*          using_                         0;	///< Optional element.
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="target" minOccurs="0"> with global elements <subject>
   $int                                  __uniontarget                  0;	///< Union _gml__union_ObservationType_ selector: set to SOAP_UNION__gml__union_ObservationType__<fieldname> or 0 to omit
/// Union for substitutionGroup gml__target.
    union _gml__union_ObservationType_
    {
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":target.
    gml__TargetPropertyType*             target                         0;	///< Optional element.
/// Element "http://www.opengis.net/gml/3.2":subject.
    gml__TargetPropertyType*             subject                        nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_ObservationType_        ;
//  END OF SUBSTITUTIONS
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":resultOf.
    gml__ResultType*                     resultOf                       1;	///< Required element.
};

/// @brief "http://www.opengis.net/gml/3.2":DegreesType is a complexType with simpleContent.
///
/// class gml__DegreesType operations:
/// - gml__DegreesType* soap_new_gml__DegreesType(soap*) allocate and default initialize
/// - gml__DegreesType* soap_new_gml__DegreesType(soap*, int num) allocate array and default initialize values
/// - gml__DegreesType* soap_new_req_gml__DegreesType(soap*, ...) allocate, set required members
/// - gml__DegreesType* soap_new_set_gml__DegreesType(soap*, ...) allocate, set all public members
/// - gml__DegreesType::soap_default(soap*) default initialize members
/// - int soap_read_gml__DegreesType(soap*, gml__DegreesType*) deserialize from a stream
/// - int soap_write_gml__DegreesType(soap*, gml__DegreesType*) serialize to a stream
/// - gml__DegreesType* gml__DegreesType::soap_dup(soap*) returns deep copy of gml__DegreesType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__DegreesType::soap_del() deep deletes gml__DegreesType data members, use only after gml__DegreesType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__DegreesType : public xsd__anyType
{ public:
/// __item wraps ""http://www.opengis.net/gml/3.2":DegreeValueType" simpleContent.
    gml__DegreeValueType                 __item                        ;
@    enum _gml__DegreesType_direction
    {
	_gml__DegreesType_direction__N = 'N',	///< xs:string value="N"
	_gml__DegreesType_direction__E = 'E',	///< xs:string value="E"
	_gml__DegreesType_direction__S = 'S',	///< xs:string value="S"
	_gml__DegreesType_direction__W = 'W',	///< xs:string value="W"
	_gml__DegreesType_direction___x002b = 88,	///< xs:string value="+"
	_gml__DegreesType_direction___x002d = 89,	///< xs:string value="-"
    }
                                        *direction                      0;	///< Optional attribute.
};

/// @brief "http://www.opengis.net/gml/3.2":BoundedFeatureType is an abstract complexType with complexContent restriction of XSD type "http://www.opengis.net/gml/3.2":AbstractFeatureType.
///
/// class gml__BoundedFeatureType operations:
/// - gml__BoundedFeatureType* soap_new_gml__BoundedFeatureType(soap*) allocate and default initialize
/// - gml__BoundedFeatureType* soap_new_gml__BoundedFeatureType(soap*, int num) allocate array and default initialize values
/// - gml__BoundedFeatureType* soap_new_req_gml__BoundedFeatureType(soap*, ...) allocate, set required members
/// - gml__BoundedFeatureType* soap_new_set_gml__BoundedFeatureType(soap*, ...) allocate, set all public members
/// - gml__BoundedFeatureType::soap_default(soap*) default initialize members
/// - int soap_read_gml__BoundedFeatureType(soap*, gml__BoundedFeatureType*) deserialize from a stream
/// - int soap_write_gml__BoundedFeatureType(soap*, gml__BoundedFeatureType*) serialize to a stream
/// - gml__BoundedFeatureType* gml__BoundedFeatureType::soap_dup(soap*) returns deep copy of gml__BoundedFeatureType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__BoundedFeatureType::soap_del() deep deletes gml__BoundedFeatureType data members, use only after gml__BoundedFeatureType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__BoundedFeatureType : public xsd__anyType
{ public:
//  BEGIN GROUP <xs:group name="StandardObjectProperties">
/// Vector of gml__MetaDataPropertyType* element refs of length 0..unbounded.
    std::vector<gml__MetaDataPropertyType*> metaDataProperty               0;
/// <PRE><BLOCKQUOTE>
///   The value of this property is a text description of the object. gml:description uses gml:StringOrRefType as its content model, so it may contain a simple text string content, or carry a reference to an external description. The use of gml:description to reference an external description has been deprecated and replaced by the gml:descriptionReference property.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":description.
    gml__StringOrRefType*                description                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The value of this property is a remote text description of the object. The xlink:href attribute of the gml:descriptionReference property references the external description.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":descriptionReference.
    gml__ReferenceType*                  descriptionReference           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Often, a special identifier is assigned to an object by the maintaining authority with the intention that it is used in references to the object For such cases, the codeSpace shall be provided. That identifier is usually unique either globally or within an application domain. gml:identifier is a pre-defined property for such identifiers.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":identifier.
    gml__CodeWithAuthorityType*          identifier                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The gml:name property provides a label or identifier for the object, commonly a descriptive name. An object may have several names, typically assigned by different authorities. gml:name uses the gml:CodeType content model. The authority for a name is indicated by the value of its (optional) codeSpace attribute. The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace. In common usage there will be one name per authority, so a processing application may select the name from its preferred codeSpace.
/// </BLOCKQUOTE></PRE>
/// Vector of gml__CodeType* element refs of length 0..unbounded.
    std::vector<gml__CodeType*         > name                           0;
//  END OF GROUP
/// <PRE><BLOCKQUOTE>
///   This property describes the minimum bounding box or rectangle that encloses the entire feature.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":boundedBy.
    gml__BoundingShapeType*              boundedBy                      1;	///< Required element.
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="location" minOccurs="0"> with global elements <priorityLocation>
   $int                                  __unionlocation                0;	///< Union _gml__union_BoundedFeatureType selector: set to SOAP_UNION__gml__union_BoundedFeatureType_<fieldname> or 0 to omit
/// Union for substitutionGroup gml__location.
    union _gml__union_BoundedFeatureType
    {
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":location.
    gml__LocationPropertyType*           location                       0;	///< Optional element.
/// Element "http://www.opengis.net/gml/3.2":priorityLocation.
    gml__PriorityLocationPropertyType*   priorityLocation               nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_BoundedFeatureType      ;
//  END OF SUBSTITUTIONS
/*  RESTRICTED FROM gml__AbstractFeatureType:
    END OF RESTRICTED FROM gml__AbstractFeatureType */
/*  RESTRICTED FROM gml__AbstractGMLType:
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":id.
/// <PRE><BLOCKQUOTE>
///   The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.
/// </BLOCKQUOTE></PRE>
   @xsd__ID*                             gml__id                        0;	///< Optional attribute.
    END OF RESTRICTED FROM gml__AbstractGMLType */
};

/// @brief "http://www.opengis.net/gml/3.2":AbstractFeatureCollectionType is an abstract complexType with complexContent extension of XSD type "http://www.opengis.net/gml/3.2":AbstractFeatureType.
///
/// class gml__AbstractFeatureCollectionType operations:
/// - gml__AbstractFeatureCollectionType* soap_new_gml__AbstractFeatureCollectionType(soap*) allocate and default initialize
/// - gml__AbstractFeatureCollectionType* soap_new_gml__AbstractFeatureCollectionType(soap*, int num) allocate array and default initialize values
/// - gml__AbstractFeatureCollectionType* soap_new_req_gml__AbstractFeatureCollectionType(soap*, ...) allocate, set required members
/// - gml__AbstractFeatureCollectionType* soap_new_set_gml__AbstractFeatureCollectionType(soap*, ...) allocate, set all public members
/// - gml__AbstractFeatureCollectionType::soap_default(soap*) default initialize members
/// - int soap_read_gml__AbstractFeatureCollectionType(soap*, gml__AbstractFeatureCollectionType*) deserialize from a stream
/// - int soap_write_gml__AbstractFeatureCollectionType(soap*, gml__AbstractFeatureCollectionType*) serialize to a stream
/// - gml__AbstractFeatureCollectionType* gml__AbstractFeatureCollectionType::soap_dup(soap*) returns deep copy of gml__AbstractFeatureCollectionType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__AbstractFeatureCollectionType::soap_del() deep deletes gml__AbstractFeatureCollectionType data members, use only after gml__AbstractFeatureCollectionType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__AbstractFeatureCollectionType : public gml__AbstractFeatureType
{ public:
/*  INHERITED FROM gml__AbstractGMLType:
//  BEGIN GROUP <xs:group name="StandardObjectProperties">
/// Vector of gml__MetaDataPropertyType* element refs of length 0..unbounded.
    std::vector<gml__MetaDataPropertyType*> metaDataProperty               0;
/// <PRE><BLOCKQUOTE>
///   The value of this property is a text description of the object. gml:description uses gml:StringOrRefType as its content model, so it may contain a simple text string content, or carry a reference to an external description. The use of gml:description to reference an external description has been deprecated and replaced by the gml:descriptionReference property.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":description.
    gml__StringOrRefType*                description                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The value of this property is a remote text description of the object. The xlink:href attribute of the gml:descriptionReference property references the external description.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":descriptionReference.
    gml__ReferenceType*                  descriptionReference           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Often, a special identifier is assigned to an object by the maintaining authority with the intention that it is used in references to the object For such cases, the codeSpace shall be provided. That identifier is usually unique either globally or within an application domain. gml:identifier is a pre-defined property for such identifiers.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":identifier.
    gml__CodeWithAuthorityType*          identifier                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The gml:name property provides a label or identifier for the object, commonly a descriptive name. An object may have several names, typically assigned by different authorities. gml:name uses the gml:CodeType content model. The authority for a name is indicated by the value of its (optional) codeSpace attribute. The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace. In common usage there will be one name per authority, so a processing application may select the name from its preferred codeSpace.
/// </BLOCKQUOTE></PRE>
/// Vector of gml__CodeType* element refs of length 0..unbounded.
    std::vector<gml__CodeType*         > name                           0;
//  END OF GROUP
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":id.
/// <PRE><BLOCKQUOTE>
///   The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.
/// </BLOCKQUOTE></PRE>
   @xsd__ID*                             gml__id                        0;	///< Optional attribute.
    END OF INHERITED FROM gml__AbstractGMLType */
/*  INHERITED FROM gml__AbstractFeatureType:
/// <PRE><BLOCKQUOTE>
///   This property describes the minimum bounding box or rectangle that encloses the entire feature.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":boundedBy.
    gml__BoundingShapeType*              boundedBy                      0;	///< Optional element.
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="location" minOccurs="0"> with global elements <priorityLocation>
   $int                                  __unionlocation                0;	///< Union _gml__union_AbstractFeatureCollectionType selector: set to SOAP_UNION__gml__union_AbstractFeatureCollectionType_<fieldname> or 0 to omit
/// Union for substitutionGroup gml__location.
    union _gml__union_AbstractFeatureCollectionType
    {
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":location.
    gml__LocationPropertyType*           location                       0;	///< Optional element.
/// Element "http://www.opengis.net/gml/3.2":priorityLocation.
    gml__PriorityLocationPropertyType*   priorityLocation               nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_AbstractFeatureCollectionType;
//  END OF SUBSTITUTIONS
    END OF INHERITED FROM gml__AbstractFeatureType */
/// Vector of gml__FeaturePropertyType* element refs of length 0..unbounded.
    std::vector<gml__FeaturePropertyType*> featureMember                  0;
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":featureMembers.
    gml__FeatureArrayPropertyType*       featureMembers                 0;	///< Optional element.
};

/// @brief "http://www.opengis.net/gml/3.2":MovingObjectStatusType is a complexType with complexContent extension of XSD type "http://www.opengis.net/gml/3.2":AbstractTimeSliceType.
///
/// class gml__MovingObjectStatusType operations:
/// - gml__MovingObjectStatusType* soap_new_gml__MovingObjectStatusType(soap*) allocate and default initialize
/// - gml__MovingObjectStatusType* soap_new_gml__MovingObjectStatusType(soap*, int num) allocate array and default initialize values
/// - gml__MovingObjectStatusType* soap_new_req_gml__MovingObjectStatusType(soap*, ...) allocate, set required members
/// - gml__MovingObjectStatusType* soap_new_set_gml__MovingObjectStatusType(soap*, ...) allocate, set all public members
/// - gml__MovingObjectStatusType::soap_default(soap*) default initialize members
/// - int soap_read_gml__MovingObjectStatusType(soap*, gml__MovingObjectStatusType*) deserialize from a stream
/// - int soap_write_gml__MovingObjectStatusType(soap*, gml__MovingObjectStatusType*) serialize to a stream
/// - gml__MovingObjectStatusType* gml__MovingObjectStatusType::soap_dup(soap*) returns deep copy of gml__MovingObjectStatusType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__MovingObjectStatusType::soap_del() deep deletes gml__MovingObjectStatusType data members, use only after gml__MovingObjectStatusType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__MovingObjectStatusType : public gml__AbstractTimeSliceType
{ public:
/*  INHERITED FROM gml__AbstractGMLType:
//  BEGIN GROUP <xs:group name="StandardObjectProperties">
/// Vector of gml__MetaDataPropertyType* element refs of length 0..unbounded.
    std::vector<gml__MetaDataPropertyType*> metaDataProperty               0;
/// <PRE><BLOCKQUOTE>
///   The value of this property is a text description of the object. gml:description uses gml:StringOrRefType as its content model, so it may contain a simple text string content, or carry a reference to an external description. The use of gml:description to reference an external description has been deprecated and replaced by the gml:descriptionReference property.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":description.
    gml__StringOrRefType*                description                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The value of this property is a remote text description of the object. The xlink:href attribute of the gml:descriptionReference property references the external description.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":descriptionReference.
    gml__ReferenceType*                  descriptionReference           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Often, a special identifier is assigned to an object by the maintaining authority with the intention that it is used in references to the object For such cases, the codeSpace shall be provided. That identifier is usually unique either globally or within an application domain. gml:identifier is a pre-defined property for such identifiers.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":identifier.
    gml__CodeWithAuthorityType*          identifier                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The gml:name property provides a label or identifier for the object, commonly a descriptive name. An object may have several names, typically assigned by different authorities. gml:name uses the gml:CodeType content model. The authority for a name is indicated by the value of its (optional) codeSpace attribute. The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace. In common usage there will be one name per authority, so a processing application may select the name from its preferred codeSpace.
/// </BLOCKQUOTE></PRE>
/// Vector of gml__CodeType* element refs of length 0..unbounded.
    std::vector<gml__CodeType*         > name                           0;
//  END OF GROUP
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":id.
/// <PRE><BLOCKQUOTE>
///   The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.
/// </BLOCKQUOTE></PRE>
   @xsd__ID*                             gml__id                        0;	///< Optional attribute.
    END OF INHERITED FROM gml__AbstractGMLType */
/*  INHERITED FROM gml__AbstractTimeSliceType:
/// <PRE><BLOCKQUOTE>
///   gml:validTime is a convenience property element.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":validTime.
    gml__TimePrimitivePropertyType*      validTime                      1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Evidence is represented by a simple gml:dataSource or gml:dataSourceReference property that indicates the source of the temporal data. The remote link attributes of the gml:dataSource element have been deprecated along with its current type.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":dataSource.
    gml__StringOrRefType*                dataSource                     0;	///< Optional element.
    END OF INHERITED FROM gml__AbstractTimeSliceType */
//  BEGIN CHOICE <xs:choice>
   $int                                  __union_MovingObjectStatusType;	///< Union _gml__union_MovingObjectStatusType selector: set to SOAP_UNION__gml__union_MovingObjectStatusType_<fieldname>
    union _gml__union_MovingObjectStatusType
    {
/// Element "position" of XSD type "http://www.opengis.net/gml/3.2":GeometryPropertyType.
    gml__GeometryPropertyType*           position                       nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":pos.
    gml__DirectPositionType*             pos                            nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   The gml:locationName property element is a convenience property where the text value describes the location of the feature. If the location names are selected from a controlled list, then the list shall be identified in the codeSpace attribute.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":locationName.
    gml__CodeType*                       locationName                   nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   The gml:locationReference property element is a convenience property where the text value referenced by the xlink:href attribute describes the location of the feature.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":locationReference.
    gml__ReferenceType*                  locationReference              nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="location"> with global elements <priorityLocation>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":location.
    gml__LocationPropertyType*           location                       nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.opengis.net/gml/3.2":priorityLocation.
    gml__PriorityLocationPropertyType*   priorityLocation               nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
//  END OF SUBSTITUTIONS
    }                                    union_MovingObjectStatusType  ;
//  END OF CHOICE
/// Element "speed" of XSD type "http://www.opengis.net/gml/3.2":MeasureType.
    gml__MeasureType*                    speed                          0;	///< Optional element.
/// Element "bearing" of XSD type "http://www.opengis.net/gml/3.2":DirectionPropertyType.
    gml__DirectionPropertyType*          bearing                        0;	///< Optional element.
/// Element "acceleration" of XSD type "http://www.opengis.net/gml/3.2":MeasureType.
    gml__MeasureType*                    acceleration                   0;	///< Optional element.
/// Element "elevation" of XSD type "http://www.opengis.net/gml/3.2":MeasureType.
    gml__MeasureType*                    elevation                      0;	///< Optional element.
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":status.
    gml__StringOrRefType*                status                         0;	///< Optional element.
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":statusReference.
    gml__ReferenceType*                  statusReference                0;	///< Optional element.
};

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":Category
/// <PRE><BLOCKQUOTE>
///   A gml:Category has an optional XML attribute codeSpace, whose value is a URI which identifies a dictionary, codelist or authority for the term.
/// </BLOCKQUOTE></PRE>
/// @brief "http://www.opengis.net/gml/3.2":Category is a complexType with simpleContent.
///
/// class _gml__Category operations:
/// - _gml__Category* soap_new__gml__Category(soap*) allocate and default initialize
/// - _gml__Category* soap_new__gml__Category(soap*, int num) allocate array and default initialize values
/// - _gml__Category* soap_new_req__gml__Category(soap*, ...) allocate, set required members
/// - _gml__Category* soap_new_set__gml__Category(soap*, ...) allocate, set all public members
/// - _gml__Category::soap_default(soap*) default initialize members
/// - int soap_read__gml__Category(soap*, _gml__Category*) deserialize from a stream
/// - int soap_write__gml__Category(soap*, _gml__Category*) serialize to a stream
/// - _gml__Category* _gml__Category::soap_dup(soap*) returns deep copy of _gml__Category, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _gml__Category::soap_del() deep deletes _gml__Category data members, use only after _gml__Category::soap_dup(NULL) (use soapcpp2 -Ed)
class _gml__Category : public gml__CodeType
{ public:
/// Attribute "nilReason" of XSD type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
};

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":Quantity
/// <PRE><BLOCKQUOTE>
///   An XML attribute uom ("unit of measure") is required, whose value is a URI which identifies the definition of a ratio scale or units by which the numeric value shall be multiplied, or an interval or position scale on which the value occurs.
/// </BLOCKQUOTE></PRE>
/// @brief "http://www.opengis.net/gml/3.2":Quantity is a complexType with simpleContent.
///
/// class _gml__Quantity operations:
/// - _gml__Quantity* soap_new__gml__Quantity(soap*) allocate and default initialize
/// - _gml__Quantity* soap_new__gml__Quantity(soap*, int num) allocate array and default initialize values
/// - _gml__Quantity* soap_new_req__gml__Quantity(soap*, ...) allocate, set required members
/// - _gml__Quantity* soap_new_set__gml__Quantity(soap*, ...) allocate, set all public members
/// - _gml__Quantity::soap_default(soap*) default initialize members
/// - int soap_read__gml__Quantity(soap*, _gml__Quantity*) deserialize from a stream
/// - int soap_write__gml__Quantity(soap*, _gml__Quantity*) serialize to a stream
/// - _gml__Quantity* _gml__Quantity::soap_dup(soap*) returns deep copy of _gml__Quantity, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _gml__Quantity::soap_del() deep deletes _gml__Quantity data members, use only after _gml__Quantity::soap_dup(NULL) (use soapcpp2 -Ed)
class _gml__Quantity : public gml__MeasureType
{ public:
/// Attribute "nilReason" of XSD type "http://www.opengis.net/gml/3.2":NilReasonType.
   @gml__NilReasonType*                  nilReason                      0;	///< Optional attribute.
};

/// @brief "http://www.isotc211.org/2005/gmd":DS_OtherAggregate_Type is a complexType with complexContent extension of XSD type "http://www.isotc211.org/2005/gmd":AbstractDS_Aggregate_Type.
///
/// class gmd__DS_x005fOtherAggregate_x005fType operations:
/// - gmd__DS_x005fOtherAggregate_x005fType* soap_new_gmd__DS_x005fOtherAggregate_x005fType(soap*) allocate and default initialize
/// - gmd__DS_x005fOtherAggregate_x005fType* soap_new_gmd__DS_x005fOtherAggregate_x005fType(soap*, int num) allocate array and default initialize values
/// - gmd__DS_x005fOtherAggregate_x005fType* soap_new_req_gmd__DS_x005fOtherAggregate_x005fType(soap*, ...) allocate, set required members
/// - gmd__DS_x005fOtherAggregate_x005fType* soap_new_set_gmd__DS_x005fOtherAggregate_x005fType(soap*, ...) allocate, set all public members
/// - gmd__DS_x005fOtherAggregate_x005fType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__DS_x005fOtherAggregate_x005fType(soap*, gmd__DS_x005fOtherAggregate_x005fType*) deserialize from a stream
/// - int soap_write_gmd__DS_x005fOtherAggregate_x005fType(soap*, gmd__DS_x005fOtherAggregate_x005fType*) serialize to a stream
/// - gmd__DS_x005fOtherAggregate_x005fType* gmd__DS_x005fOtherAggregate_x005fType::soap_dup(soap*) returns deep copy of gmd__DS_x005fOtherAggregate_x005fType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__DS_x005fOtherAggregate_x005fType::soap_del() deep deletes gmd__DS_x005fOtherAggregate_x005fType data members, use only after gmd__DS_x005fOtherAggregate_x005fType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__DS_x005fOtherAggregate_x005fType : public gmd__AbstractDS_x005fAggregate_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectIdentification">.
/// Attribute "id" of XSD type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute "uuid" of XSD type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/*  INHERITED FROM gmd__AbstractDS_x005fAggregate_x005fType:
/// Vector of gmd__DS_x005fDataSet_x005fPropertyType* of length 1..unbounded.
    std::vector<gmd__DS_x005fDataSet_x005fPropertyType*> composedOf                     1;
/// Vector of gmd__MD_x005fMetadata_x005fPropertyType* of length 1..unbounded.
    std::vector<gmd__MD_x005fMetadata_x005fPropertyType*> seriesMetadata                 1;
/// Vector of gmd__DS_x005fAggregate_x005fPropertyType* of length 0..unbounded.
    std::vector<gmd__DS_x005fAggregate_x005fPropertyType*> subset                         0;
/// Vector of gmd__DS_x005fAggregate_x005fPropertyType* of length 0..unbounded.
    std::vector<gmd__DS_x005fAggregate_x005fPropertyType*> superset                       0;
    END OF INHERITED FROM gmd__AbstractDS_x005fAggregate_x005fType */
};

/// @brief "http://www.isotc211.org/2005/gmd":DS_Series_Type is a complexType with complexContent extension of XSD type "http://www.isotc211.org/2005/gmd":AbstractDS_Aggregate_Type.
///
/// class gmd__DS_x005fSeries_x005fType operations:
/// - gmd__DS_x005fSeries_x005fType* soap_new_gmd__DS_x005fSeries_x005fType(soap*) allocate and default initialize
/// - gmd__DS_x005fSeries_x005fType* soap_new_gmd__DS_x005fSeries_x005fType(soap*, int num) allocate array and default initialize values
/// - gmd__DS_x005fSeries_x005fType* soap_new_req_gmd__DS_x005fSeries_x005fType(soap*, ...) allocate, set required members
/// - gmd__DS_x005fSeries_x005fType* soap_new_set_gmd__DS_x005fSeries_x005fType(soap*, ...) allocate, set all public members
/// - gmd__DS_x005fSeries_x005fType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__DS_x005fSeries_x005fType(soap*, gmd__DS_x005fSeries_x005fType*) deserialize from a stream
/// - int soap_write_gmd__DS_x005fSeries_x005fType(soap*, gmd__DS_x005fSeries_x005fType*) serialize to a stream
/// - gmd__DS_x005fSeries_x005fType* gmd__DS_x005fSeries_x005fType::soap_dup(soap*) returns deep copy of gmd__DS_x005fSeries_x005fType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__DS_x005fSeries_x005fType::soap_del() deep deletes gmd__DS_x005fSeries_x005fType data members, use only after gmd__DS_x005fSeries_x005fType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__DS_x005fSeries_x005fType : public gmd__AbstractDS_x005fAggregate_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectIdentification">.
/// Attribute "id" of XSD type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute "uuid" of XSD type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/*  INHERITED FROM gmd__AbstractDS_x005fAggregate_x005fType:
/// Vector of gmd__DS_x005fDataSet_x005fPropertyType* of length 1..unbounded.
    std::vector<gmd__DS_x005fDataSet_x005fPropertyType*> composedOf                     1;
/// Vector of gmd__MD_x005fMetadata_x005fPropertyType* of length 1..unbounded.
    std::vector<gmd__MD_x005fMetadata_x005fPropertyType*> seriesMetadata                 1;
/// Vector of gmd__DS_x005fAggregate_x005fPropertyType* of length 0..unbounded.
    std::vector<gmd__DS_x005fAggregate_x005fPropertyType*> subset                         0;
/// Vector of gmd__DS_x005fAggregate_x005fPropertyType* of length 0..unbounded.
    std::vector<gmd__DS_x005fAggregate_x005fPropertyType*> superset                       0;
    END OF INHERITED FROM gmd__AbstractDS_x005fAggregate_x005fType */
};

/// @brief "http://www.isotc211.org/2005/gmd":DS_Initiative_Type is a complexType with complexContent extension of XSD type "http://www.isotc211.org/2005/gmd":AbstractDS_Aggregate_Type.
///
/// class gmd__DS_x005fInitiative_x005fType operations:
/// - gmd__DS_x005fInitiative_x005fType* soap_new_gmd__DS_x005fInitiative_x005fType(soap*) allocate and default initialize
/// - gmd__DS_x005fInitiative_x005fType* soap_new_gmd__DS_x005fInitiative_x005fType(soap*, int num) allocate array and default initialize values
/// - gmd__DS_x005fInitiative_x005fType* soap_new_req_gmd__DS_x005fInitiative_x005fType(soap*, ...) allocate, set required members
/// - gmd__DS_x005fInitiative_x005fType* soap_new_set_gmd__DS_x005fInitiative_x005fType(soap*, ...) allocate, set all public members
/// - gmd__DS_x005fInitiative_x005fType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__DS_x005fInitiative_x005fType(soap*, gmd__DS_x005fInitiative_x005fType*) deserialize from a stream
/// - int soap_write_gmd__DS_x005fInitiative_x005fType(soap*, gmd__DS_x005fInitiative_x005fType*) serialize to a stream
/// - gmd__DS_x005fInitiative_x005fType* gmd__DS_x005fInitiative_x005fType::soap_dup(soap*) returns deep copy of gmd__DS_x005fInitiative_x005fType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__DS_x005fInitiative_x005fType::soap_del() deep deletes gmd__DS_x005fInitiative_x005fType data members, use only after gmd__DS_x005fInitiative_x005fType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__DS_x005fInitiative_x005fType : public gmd__AbstractDS_x005fAggregate_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectIdentification">.
/// Attribute "id" of XSD type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute "uuid" of XSD type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/*  INHERITED FROM gmd__AbstractDS_x005fAggregate_x005fType:
/// Vector of gmd__DS_x005fDataSet_x005fPropertyType* of length 1..unbounded.
    std::vector<gmd__DS_x005fDataSet_x005fPropertyType*> composedOf                     1;
/// Vector of gmd__MD_x005fMetadata_x005fPropertyType* of length 1..unbounded.
    std::vector<gmd__MD_x005fMetadata_x005fPropertyType*> seriesMetadata                 1;
/// Vector of gmd__DS_x005fAggregate_x005fPropertyType* of length 0..unbounded.
    std::vector<gmd__DS_x005fAggregate_x005fPropertyType*> subset                         0;
/// Vector of gmd__DS_x005fAggregate_x005fPropertyType* of length 0..unbounded.
    std::vector<gmd__DS_x005fAggregate_x005fPropertyType*> superset                       0;
    END OF INHERITED FROM gmd__AbstractDS_x005fAggregate_x005fType */
};

/// @brief "http://www.isotc211.org/2005/gmd":MD_GridSpatialRepresentation_Type is a complexType with complexContent extension of XSD type "http://www.isotc211.org/2005/gmd":AbstractMD_SpatialRepresentation_Type.
///
/// <PRE><BLOCKQUOTE>
///   Types and numbers of raster spatial objects in the dataset
/// </BLOCKQUOTE></PRE>
/// class gmd__MD_x005fGridSpatialRepresentation_x005fType operations:
/// - gmd__MD_x005fGridSpatialRepresentation_x005fType* soap_new_gmd__MD_x005fGridSpatialRepresentation_x005fType(soap*) allocate and default initialize
/// - gmd__MD_x005fGridSpatialRepresentation_x005fType* soap_new_gmd__MD_x005fGridSpatialRepresentation_x005fType(soap*, int num) allocate array and default initialize values
/// - gmd__MD_x005fGridSpatialRepresentation_x005fType* soap_new_req_gmd__MD_x005fGridSpatialRepresentation_x005fType(soap*, ...) allocate, set required members
/// - gmd__MD_x005fGridSpatialRepresentation_x005fType* soap_new_set_gmd__MD_x005fGridSpatialRepresentation_x005fType(soap*, ...) allocate, set all public members
/// - gmd__MD_x005fGridSpatialRepresentation_x005fType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__MD_x005fGridSpatialRepresentation_x005fType(soap*, gmd__MD_x005fGridSpatialRepresentation_x005fType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fGridSpatialRepresentation_x005fType(soap*, gmd__MD_x005fGridSpatialRepresentation_x005fType*) serialize to a stream
/// - gmd__MD_x005fGridSpatialRepresentation_x005fType* gmd__MD_x005fGridSpatialRepresentation_x005fType::soap_dup(soap*) returns deep copy of gmd__MD_x005fGridSpatialRepresentation_x005fType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__MD_x005fGridSpatialRepresentation_x005fType::soap_del() deep deletes gmd__MD_x005fGridSpatialRepresentation_x005fType data members, use only after gmd__MD_x005fGridSpatialRepresentation_x005fType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__MD_x005fGridSpatialRepresentation_x005fType : public gmd__AbstractMD_x005fSpatialRepresentation_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectIdentification">.
/// Attribute "id" of XSD type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute "uuid" of XSD type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/*  INHERITED FROM gmd__AbstractMD_x005fSpatialRepresentation_x005fType:
    END OF INHERITED FROM gmd__AbstractMD_x005fSpatialRepresentation_x005fType */
/// Element "numberOfDimensions" of XSD type "http://www.isotc211.org/2005/gco":Integer_PropertyType.
    gco__Integer_x005fPropertyType*      numberOfDimensions             1;	///< Required element.
/// Vector of gmd__MD_x005fDimension_x005fPropertyType* of length 0..unbounded.
    std::vector<gmd__MD_x005fDimension_x005fPropertyType*> axisDimensionProperties        0;
/// Element "cellGeometry" of XSD type "http://www.isotc211.org/2005/gmd":MD_CellGeometryCode_PropertyType.
    gmd__MD_x005fCellGeometryCode_x005fPropertyType*  cellGeometry                   1;	///< Required element.
/// Element "transformationParameterAvailability" of XSD type "http://www.isotc211.org/2005/gco":Boolean_PropertyType.
    gco__Boolean_x005fPropertyType*      transformationParameterAvailability 1;	///< Required element.
};

/// @brief "http://www.isotc211.org/2005/gmd":MD_VectorSpatialRepresentation_Type is a complexType with complexContent extension of XSD type "http://www.isotc211.org/2005/gmd":AbstractMD_SpatialRepresentation_Type.
///
/// <PRE><BLOCKQUOTE>
///   Information about the vector spatial objects in the dataset
/// </BLOCKQUOTE></PRE>
/// class gmd__MD_x005fVectorSpatialRepresentation_x005fType operations:
/// - gmd__MD_x005fVectorSpatialRepresentation_x005fType* soap_new_gmd__MD_x005fVectorSpatialRepresentation_x005fType(soap*) allocate and default initialize
/// - gmd__MD_x005fVectorSpatialRepresentation_x005fType* soap_new_gmd__MD_x005fVectorSpatialRepresentation_x005fType(soap*, int num) allocate array and default initialize values
/// - gmd__MD_x005fVectorSpatialRepresentation_x005fType* soap_new_req_gmd__MD_x005fVectorSpatialRepresentation_x005fType(soap*, ...) allocate, set required members
/// - gmd__MD_x005fVectorSpatialRepresentation_x005fType* soap_new_set_gmd__MD_x005fVectorSpatialRepresentation_x005fType(soap*, ...) allocate, set all public members
/// - gmd__MD_x005fVectorSpatialRepresentation_x005fType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__MD_x005fVectorSpatialRepresentation_x005fType(soap*, gmd__MD_x005fVectorSpatialRepresentation_x005fType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fVectorSpatialRepresentation_x005fType(soap*, gmd__MD_x005fVectorSpatialRepresentation_x005fType*) serialize to a stream
/// - gmd__MD_x005fVectorSpatialRepresentation_x005fType* gmd__MD_x005fVectorSpatialRepresentation_x005fType::soap_dup(soap*) returns deep copy of gmd__MD_x005fVectorSpatialRepresentation_x005fType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__MD_x005fVectorSpatialRepresentation_x005fType::soap_del() deep deletes gmd__MD_x005fVectorSpatialRepresentation_x005fType data members, use only after gmd__MD_x005fVectorSpatialRepresentation_x005fType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__MD_x005fVectorSpatialRepresentation_x005fType : public gmd__AbstractMD_x005fSpatialRepresentation_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectIdentification">.
/// Attribute "id" of XSD type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute "uuid" of XSD type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/*  INHERITED FROM gmd__AbstractMD_x005fSpatialRepresentation_x005fType:
    END OF INHERITED FROM gmd__AbstractMD_x005fSpatialRepresentation_x005fType */
/// Element "topologyLevel" of XSD type "http://www.isotc211.org/2005/gmd":MD_TopologyLevelCode_PropertyType.
    gmd__MD_x005fTopologyLevelCode_x005fPropertyType*  topologyLevel                  0;	///< Optional element.
/// Vector of gmd__MD_x005fGeometricObjects_x005fPropertyType* of length 0..unbounded.
    std::vector<gmd__MD_x005fGeometricObjects_x005fPropertyType*> geometricObjects               0;
};

/// @brief "http://www.isotc211.org/2005/gmd":RS_Identifier_Type is a complexType with complexContent extension of XSD type "http://www.isotc211.org/2005/gmd":MD_Identifier_Type.
///
/// class gmd__RS_x005fIdentifier_x005fType operations:
/// - gmd__RS_x005fIdentifier_x005fType* soap_new_gmd__RS_x005fIdentifier_x005fType(soap*) allocate and default initialize
/// - gmd__RS_x005fIdentifier_x005fType* soap_new_gmd__RS_x005fIdentifier_x005fType(soap*, int num) allocate array and default initialize values
/// - gmd__RS_x005fIdentifier_x005fType* soap_new_req_gmd__RS_x005fIdentifier_x005fType(soap*, ...) allocate, set required members
/// - gmd__RS_x005fIdentifier_x005fType* soap_new_set_gmd__RS_x005fIdentifier_x005fType(soap*, ...) allocate, set all public members
/// - gmd__RS_x005fIdentifier_x005fType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__RS_x005fIdentifier_x005fType(soap*, gmd__RS_x005fIdentifier_x005fType*) deserialize from a stream
/// - int soap_write_gmd__RS_x005fIdentifier_x005fType(soap*, gmd__RS_x005fIdentifier_x005fType*) serialize to a stream
/// - gmd__RS_x005fIdentifier_x005fType* gmd__RS_x005fIdentifier_x005fType::soap_dup(soap*) returns deep copy of gmd__RS_x005fIdentifier_x005fType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__RS_x005fIdentifier_x005fType::soap_del() deep deletes gmd__RS_x005fIdentifier_x005fType data members, use only after gmd__RS_x005fIdentifier_x005fType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__RS_x005fIdentifier_x005fType : public gmd__MD_x005fIdentifier_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectIdentification">.
/// Attribute "id" of XSD type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute "uuid" of XSD type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/*  INHERITED FROM gmd__MD_x005fIdentifier_x005fType:
/// Element "authority" of XSD type "http://www.isotc211.org/2005/gmd":CI_Citation_PropertyType.
    gmd__CI_x005fCitation_x005fPropertyType*  authority                      0;	///< Optional element.
/// Element "code" of XSD type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  code                           1;	///< Required element.
    END OF INHERITED FROM gmd__MD_x005fIdentifier_x005fType */
/// Element "codeSpace" of XSD type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  codeSpace                      0;	///< Optional element.
/// Element "version" of XSD type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  version                        0;	///< Optional element.
};

/// @brief "http://www.isotc211.org/2005/gmd":EX_BoundingPolygon_Type is a complexType with complexContent extension of XSD type "http://www.isotc211.org/2005/gmd":AbstractEX_GeographicExtent_Type.
///
/// <PRE><BLOCKQUOTE>
///   Boundary enclosing the dataset expressed as the closed set of (x,y) coordinates of the polygon (last point replicates first point)
/// </BLOCKQUOTE></PRE>
/// class gmd__EX_x005fBoundingPolygon_x005fType operations:
/// - gmd__EX_x005fBoundingPolygon_x005fType* soap_new_gmd__EX_x005fBoundingPolygon_x005fType(soap*) allocate and default initialize
/// - gmd__EX_x005fBoundingPolygon_x005fType* soap_new_gmd__EX_x005fBoundingPolygon_x005fType(soap*, int num) allocate array and default initialize values
/// - gmd__EX_x005fBoundingPolygon_x005fType* soap_new_req_gmd__EX_x005fBoundingPolygon_x005fType(soap*, ...) allocate, set required members
/// - gmd__EX_x005fBoundingPolygon_x005fType* soap_new_set_gmd__EX_x005fBoundingPolygon_x005fType(soap*, ...) allocate, set all public members
/// - gmd__EX_x005fBoundingPolygon_x005fType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__EX_x005fBoundingPolygon_x005fType(soap*, gmd__EX_x005fBoundingPolygon_x005fType*) deserialize from a stream
/// - int soap_write_gmd__EX_x005fBoundingPolygon_x005fType(soap*, gmd__EX_x005fBoundingPolygon_x005fType*) serialize to a stream
/// - gmd__EX_x005fBoundingPolygon_x005fType* gmd__EX_x005fBoundingPolygon_x005fType::soap_dup(soap*) returns deep copy of gmd__EX_x005fBoundingPolygon_x005fType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__EX_x005fBoundingPolygon_x005fType::soap_del() deep deletes gmd__EX_x005fBoundingPolygon_x005fType data members, use only after gmd__EX_x005fBoundingPolygon_x005fType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__EX_x005fBoundingPolygon_x005fType : public gmd__AbstractEX_x005fGeographicExtent_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectIdentification">.
/// Attribute "id" of XSD type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute "uuid" of XSD type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/*  INHERITED FROM gmd__AbstractEX_x005fGeographicExtent_x005fType:
/// Element "extentTypeCode" of XSD type "http://www.isotc211.org/2005/gco":Boolean_PropertyType.
    gco__Boolean_x005fPropertyType*      extentTypeCode                 0;	///< Optional element.
    END OF INHERITED FROM gmd__AbstractEX_x005fGeographicExtent_x005fType */
/// Vector of gss__GM_x005fObject_x005fPropertyType* of length 1..unbounded.
    std::vector<gss__GM_x005fObject_x005fPropertyType*> polygon                        1;
};

/// @brief "http://www.isotc211.org/2005/gmd":EX_GeographicBoundingBox_Type is a complexType with complexContent extension of XSD type "http://www.isotc211.org/2005/gmd":AbstractEX_GeographicExtent_Type.
///
/// <PRE><BLOCKQUOTE>
///   Geographic area of the entire dataset referenced to WGS 84
/// </BLOCKQUOTE></PRE>
/// class gmd__EX_x005fGeographicBoundingBox_x005fType operations:
/// - gmd__EX_x005fGeographicBoundingBox_x005fType* soap_new_gmd__EX_x005fGeographicBoundingBox_x005fType(soap*) allocate and default initialize
/// - gmd__EX_x005fGeographicBoundingBox_x005fType* soap_new_gmd__EX_x005fGeographicBoundingBox_x005fType(soap*, int num) allocate array and default initialize values
/// - gmd__EX_x005fGeographicBoundingBox_x005fType* soap_new_req_gmd__EX_x005fGeographicBoundingBox_x005fType(soap*, ...) allocate, set required members
/// - gmd__EX_x005fGeographicBoundingBox_x005fType* soap_new_set_gmd__EX_x005fGeographicBoundingBox_x005fType(soap*, ...) allocate, set all public members
/// - gmd__EX_x005fGeographicBoundingBox_x005fType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__EX_x005fGeographicBoundingBox_x005fType(soap*, gmd__EX_x005fGeographicBoundingBox_x005fType*) deserialize from a stream
/// - int soap_write_gmd__EX_x005fGeographicBoundingBox_x005fType(soap*, gmd__EX_x005fGeographicBoundingBox_x005fType*) serialize to a stream
/// - gmd__EX_x005fGeographicBoundingBox_x005fType* gmd__EX_x005fGeographicBoundingBox_x005fType::soap_dup(soap*) returns deep copy of gmd__EX_x005fGeographicBoundingBox_x005fType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__EX_x005fGeographicBoundingBox_x005fType::soap_del() deep deletes gmd__EX_x005fGeographicBoundingBox_x005fType data members, use only after gmd__EX_x005fGeographicBoundingBox_x005fType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__EX_x005fGeographicBoundingBox_x005fType : public gmd__AbstractEX_x005fGeographicExtent_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectIdentification">.
/// Attribute "id" of XSD type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute "uuid" of XSD type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/*  INHERITED FROM gmd__AbstractEX_x005fGeographicExtent_x005fType:
/// Element "extentTypeCode" of XSD type "http://www.isotc211.org/2005/gco":Boolean_PropertyType.
    gco__Boolean_x005fPropertyType*      extentTypeCode                 0;	///< Optional element.
    END OF INHERITED FROM gmd__AbstractEX_x005fGeographicExtent_x005fType */
/// Element "westBoundLongitude" of XSD type "http://www.isotc211.org/2005/gco":Decimal_PropertyType.
    gco__Decimal_x005fPropertyType*      westBoundLongitude             1;	///< Required element.
/// Element "eastBoundLongitude" of XSD type "http://www.isotc211.org/2005/gco":Decimal_PropertyType.
    gco__Decimal_x005fPropertyType*      eastBoundLongitude             1;	///< Required element.
/// Element "southBoundLatitude" of XSD type "http://www.isotc211.org/2005/gco":Decimal_PropertyType.
    gco__Decimal_x005fPropertyType*      southBoundLatitude             1;	///< Required element.
/// Element "northBoundLatitude" of XSD type "http://www.isotc211.org/2005/gco":Decimal_PropertyType.
    gco__Decimal_x005fPropertyType*      northBoundLatitude             1;	///< Required element.
};

/// @brief "http://www.isotc211.org/2005/gmd":EX_SpatialTemporalExtent_Type is a complexType with complexContent extension of XSD type "http://www.isotc211.org/2005/gmd":EX_TemporalExtent_Type.
///
/// <PRE><BLOCKQUOTE>
///   Extent with respect to date and time
/// </BLOCKQUOTE></PRE>
/// class gmd__EX_x005fSpatialTemporalExtent_x005fType operations:
/// - gmd__EX_x005fSpatialTemporalExtent_x005fType* soap_new_gmd__EX_x005fSpatialTemporalExtent_x005fType(soap*) allocate and default initialize
/// - gmd__EX_x005fSpatialTemporalExtent_x005fType* soap_new_gmd__EX_x005fSpatialTemporalExtent_x005fType(soap*, int num) allocate array and default initialize values
/// - gmd__EX_x005fSpatialTemporalExtent_x005fType* soap_new_req_gmd__EX_x005fSpatialTemporalExtent_x005fType(soap*, ...) allocate, set required members
/// - gmd__EX_x005fSpatialTemporalExtent_x005fType* soap_new_set_gmd__EX_x005fSpatialTemporalExtent_x005fType(soap*, ...) allocate, set all public members
/// - gmd__EX_x005fSpatialTemporalExtent_x005fType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__EX_x005fSpatialTemporalExtent_x005fType(soap*, gmd__EX_x005fSpatialTemporalExtent_x005fType*) deserialize from a stream
/// - int soap_write_gmd__EX_x005fSpatialTemporalExtent_x005fType(soap*, gmd__EX_x005fSpatialTemporalExtent_x005fType*) serialize to a stream
/// - gmd__EX_x005fSpatialTemporalExtent_x005fType* gmd__EX_x005fSpatialTemporalExtent_x005fType::soap_dup(soap*) returns deep copy of gmd__EX_x005fSpatialTemporalExtent_x005fType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__EX_x005fSpatialTemporalExtent_x005fType::soap_del() deep deletes gmd__EX_x005fSpatialTemporalExtent_x005fType data members, use only after gmd__EX_x005fSpatialTemporalExtent_x005fType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__EX_x005fSpatialTemporalExtent_x005fType : public gmd__EX_x005fTemporalExtent_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectIdentification">.
/// Attribute "id" of XSD type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute "uuid" of XSD type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/*  INHERITED FROM gmd__EX_x005fTemporalExtent_x005fType:
/// Element "extent" of XSD type "http://www.isotc211.org/2005/gts":TM_Primitive_PropertyType.
    gts__TM_x005fPrimitive_x005fPropertyType*  extent                         1;	///< Required element.
    END OF INHERITED FROM gmd__EX_x005fTemporalExtent_x005fType */
/// Vector of gmd__EX_x005fGeographicExtent_x005fPropertyType* of length 1..unbounded.
    std::vector<gmd__EX_x005fGeographicExtent_x005fPropertyType*> spatialExtent                  1;
};

/// @brief "http://www.isotc211.org/2005/gmd":EX_GeographicDescription_Type is a complexType with complexContent extension of XSD type "http://www.isotc211.org/2005/gmd":AbstractEX_GeographicExtent_Type.
///
/// class gmd__EX_x005fGeographicDescription_x005fType operations:
/// - gmd__EX_x005fGeographicDescription_x005fType* soap_new_gmd__EX_x005fGeographicDescription_x005fType(soap*) allocate and default initialize
/// - gmd__EX_x005fGeographicDescription_x005fType* soap_new_gmd__EX_x005fGeographicDescription_x005fType(soap*, int num) allocate array and default initialize values
/// - gmd__EX_x005fGeographicDescription_x005fType* soap_new_req_gmd__EX_x005fGeographicDescription_x005fType(soap*, ...) allocate, set required members
/// - gmd__EX_x005fGeographicDescription_x005fType* soap_new_set_gmd__EX_x005fGeographicDescription_x005fType(soap*, ...) allocate, set all public members
/// - gmd__EX_x005fGeographicDescription_x005fType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__EX_x005fGeographicDescription_x005fType(soap*, gmd__EX_x005fGeographicDescription_x005fType*) deserialize from a stream
/// - int soap_write_gmd__EX_x005fGeographicDescription_x005fType(soap*, gmd__EX_x005fGeographicDescription_x005fType*) serialize to a stream
/// - gmd__EX_x005fGeographicDescription_x005fType* gmd__EX_x005fGeographicDescription_x005fType::soap_dup(soap*) returns deep copy of gmd__EX_x005fGeographicDescription_x005fType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__EX_x005fGeographicDescription_x005fType::soap_del() deep deletes gmd__EX_x005fGeographicDescription_x005fType data members, use only after gmd__EX_x005fGeographicDescription_x005fType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__EX_x005fGeographicDescription_x005fType : public gmd__AbstractEX_x005fGeographicExtent_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectIdentification">.
/// Attribute "id" of XSD type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute "uuid" of XSD type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/*  INHERITED FROM gmd__AbstractEX_x005fGeographicExtent_x005fType:
/// Element "extentTypeCode" of XSD type "http://www.isotc211.org/2005/gco":Boolean_PropertyType.
    gco__Boolean_x005fPropertyType*      extentTypeCode                 0;	///< Optional element.
    END OF INHERITED FROM gmd__AbstractEX_x005fGeographicExtent_x005fType */
/// Element "geographicIdentifier" of XSD type "http://www.isotc211.org/2005/gmd":MD_Identifier_PropertyType.
    gmd__MD_x005fIdentifier_x005fPropertyType*  geographicIdentifier           1;	///< Required element.
};

/// @brief "http://www.isotc211.org/2005/gmd":MD_FeatureCatalogueDescription_Type is a complexType with complexContent extension of XSD type "http://www.isotc211.org/2005/gmd":AbstractMD_ContentInformation_Type.
///
/// <PRE><BLOCKQUOTE>
///   Information identifing the feature catalogue
/// </BLOCKQUOTE></PRE>
/// class gmd__MD_x005fFeatureCatalogueDescription_x005fType operations:
/// - gmd__MD_x005fFeatureCatalogueDescription_x005fType* soap_new_gmd__MD_x005fFeatureCatalogueDescription_x005fType(soap*) allocate and default initialize
/// - gmd__MD_x005fFeatureCatalogueDescription_x005fType* soap_new_gmd__MD_x005fFeatureCatalogueDescription_x005fType(soap*, int num) allocate array and default initialize values
/// - gmd__MD_x005fFeatureCatalogueDescription_x005fType* soap_new_req_gmd__MD_x005fFeatureCatalogueDescription_x005fType(soap*, ...) allocate, set required members
/// - gmd__MD_x005fFeatureCatalogueDescription_x005fType* soap_new_set_gmd__MD_x005fFeatureCatalogueDescription_x005fType(soap*, ...) allocate, set all public members
/// - gmd__MD_x005fFeatureCatalogueDescription_x005fType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__MD_x005fFeatureCatalogueDescription_x005fType(soap*, gmd__MD_x005fFeatureCatalogueDescription_x005fType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fFeatureCatalogueDescription_x005fType(soap*, gmd__MD_x005fFeatureCatalogueDescription_x005fType*) serialize to a stream
/// - gmd__MD_x005fFeatureCatalogueDescription_x005fType* gmd__MD_x005fFeatureCatalogueDescription_x005fType::soap_dup(soap*) returns deep copy of gmd__MD_x005fFeatureCatalogueDescription_x005fType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__MD_x005fFeatureCatalogueDescription_x005fType::soap_del() deep deletes gmd__MD_x005fFeatureCatalogueDescription_x005fType data members, use only after gmd__MD_x005fFeatureCatalogueDescription_x005fType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__MD_x005fFeatureCatalogueDescription_x005fType : public gmd__AbstractMD_x005fContentInformation_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectIdentification">.
/// Attribute "id" of XSD type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute "uuid" of XSD type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/*  INHERITED FROM gmd__AbstractMD_x005fContentInformation_x005fType:
    END OF INHERITED FROM gmd__AbstractMD_x005fContentInformation_x005fType */
/// Element "complianceCode" of XSD type "http://www.isotc211.org/2005/gco":Boolean_PropertyType.
    gco__Boolean_x005fPropertyType*      complianceCode                 0;	///< Optional element.
/// Vector of gco__CharacterString_x005fPropertyType* of length 0..unbounded.
    std::vector<gco__CharacterString_x005fPropertyType*> language                       0;
/// Element "includedWithDataset" of XSD type "http://www.isotc211.org/2005/gco":Boolean_PropertyType.
    gco__Boolean_x005fPropertyType*      includedWithDataset            1;	///< Required element.
/// Vector of gco__GenericName_x005fPropertyType* of length 0..unbounded.
    std::vector<gco__GenericName_x005fPropertyType*> featureTypes                   0;
/// Vector of gmd__CI_x005fCitation_x005fPropertyType* of length 1..unbounded.
    std::vector<gmd__CI_x005fCitation_x005fPropertyType*> featureCatalogueCitation       1;
};

/// @brief "http://www.isotc211.org/2005/gmd":MD_CoverageDescription_Type is a complexType with complexContent extension of XSD type "http://www.isotc211.org/2005/gmd":AbstractMD_ContentInformation_Type.
///
/// <PRE><BLOCKQUOTE>
///   Information about the domain of the raster cell
/// </BLOCKQUOTE></PRE>
/// class gmd__MD_x005fCoverageDescription_x005fType operations:
/// - gmd__MD_x005fCoverageDescription_x005fType* soap_new_gmd__MD_x005fCoverageDescription_x005fType(soap*) allocate and default initialize
/// - gmd__MD_x005fCoverageDescription_x005fType* soap_new_gmd__MD_x005fCoverageDescription_x005fType(soap*, int num) allocate array and default initialize values
/// - gmd__MD_x005fCoverageDescription_x005fType* soap_new_req_gmd__MD_x005fCoverageDescription_x005fType(soap*, ...) allocate, set required members
/// - gmd__MD_x005fCoverageDescription_x005fType* soap_new_set_gmd__MD_x005fCoverageDescription_x005fType(soap*, ...) allocate, set all public members
/// - gmd__MD_x005fCoverageDescription_x005fType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__MD_x005fCoverageDescription_x005fType(soap*, gmd__MD_x005fCoverageDescription_x005fType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fCoverageDescription_x005fType(soap*, gmd__MD_x005fCoverageDescription_x005fType*) serialize to a stream
/// - gmd__MD_x005fCoverageDescription_x005fType* gmd__MD_x005fCoverageDescription_x005fType::soap_dup(soap*) returns deep copy of gmd__MD_x005fCoverageDescription_x005fType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__MD_x005fCoverageDescription_x005fType::soap_del() deep deletes gmd__MD_x005fCoverageDescription_x005fType data members, use only after gmd__MD_x005fCoverageDescription_x005fType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__MD_x005fCoverageDescription_x005fType : public gmd__AbstractMD_x005fContentInformation_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectIdentification">.
/// Attribute "id" of XSD type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute "uuid" of XSD type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/*  INHERITED FROM gmd__AbstractMD_x005fContentInformation_x005fType:
    END OF INHERITED FROM gmd__AbstractMD_x005fContentInformation_x005fType */
/// Element "attributeDescription" of XSD type "http://www.isotc211.org/2005/gco":RecordType_PropertyType.
    gco__RecordType_x005fPropertyType*   attributeDescription           1;	///< Required element.
/// Element "contentType" of XSD type "http://www.isotc211.org/2005/gmd":MD_CoverageContentTypeCode_PropertyType.
    gmd__MD_x005fCoverageContentTypeCode_x005fPropertyType*  contentType                    1;	///< Required element.
/// Vector of gmd__MD_x005fRangeDimension_x005fPropertyType* of length 0..unbounded.
    std::vector<gmd__MD_x005fRangeDimension_x005fPropertyType*> dimension                      0;
};

/// @brief "http://www.isotc211.org/2005/gmd":MD_Band_Type is a complexType with complexContent extension of XSD type "http://www.isotc211.org/2005/gmd":MD_RangeDimension_Type.
///
/// class gmd__MD_x005fBand_x005fType operations:
/// - gmd__MD_x005fBand_x005fType* soap_new_gmd__MD_x005fBand_x005fType(soap*) allocate and default initialize
/// - gmd__MD_x005fBand_x005fType* soap_new_gmd__MD_x005fBand_x005fType(soap*, int num) allocate array and default initialize values
/// - gmd__MD_x005fBand_x005fType* soap_new_req_gmd__MD_x005fBand_x005fType(soap*, ...) allocate, set required members
/// - gmd__MD_x005fBand_x005fType* soap_new_set_gmd__MD_x005fBand_x005fType(soap*, ...) allocate, set all public members
/// - gmd__MD_x005fBand_x005fType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__MD_x005fBand_x005fType(soap*, gmd__MD_x005fBand_x005fType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fBand_x005fType(soap*, gmd__MD_x005fBand_x005fType*) serialize to a stream
/// - gmd__MD_x005fBand_x005fType* gmd__MD_x005fBand_x005fType::soap_dup(soap*) returns deep copy of gmd__MD_x005fBand_x005fType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__MD_x005fBand_x005fType::soap_del() deep deletes gmd__MD_x005fBand_x005fType data members, use only after gmd__MD_x005fBand_x005fType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__MD_x005fBand_x005fType : public gmd__MD_x005fRangeDimension_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectIdentification">.
/// Attribute "id" of XSD type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute "uuid" of XSD type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/*  INHERITED FROM gmd__MD_x005fRangeDimension_x005fType:
/// Element "sequenceIdentifier" of XSD type "http://www.isotc211.org/2005/gco":MemberName_PropertyType.
    gco__MemberName_x005fPropertyType*   sequenceIdentifier             0;	///< Optional element.
/// Element "descriptor" of XSD type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  descriptor                     0;	///< Optional element.
    END OF INHERITED FROM gmd__MD_x005fRangeDimension_x005fType */
/// Element "maxValue" of XSD type "http://www.isotc211.org/2005/gco":Real_PropertyType.
    gco__Real_x005fPropertyType*         maxValue                       0;	///< Optional element.
/// Element "minValue" of XSD type "http://www.isotc211.org/2005/gco":Real_PropertyType.
    gco__Real_x005fPropertyType*         minValue                       0;	///< Optional element.
/// Element "units" of XSD type "http://www.isotc211.org/2005/gco":UomLength_PropertyType.
    gco__UomLength_x005fPropertyType*    units                          0;	///< Optional element.
/// Element "peakResponse" of XSD type "http://www.isotc211.org/2005/gco":Real_PropertyType.
    gco__Real_x005fPropertyType*         peakResponse                   0;	///< Optional element.
/// Element "bitsPerValue" of XSD type "http://www.isotc211.org/2005/gco":Integer_PropertyType.
    gco__Integer_x005fPropertyType*      bitsPerValue                   0;	///< Optional element.
/// Element "toneGradation" of XSD type "http://www.isotc211.org/2005/gco":Integer_PropertyType.
    gco__Integer_x005fPropertyType*      toneGradation                  0;	///< Optional element.
/// Element "scaleFactor" of XSD type "http://www.isotc211.org/2005/gco":Real_PropertyType.
    gco__Real_x005fPropertyType*         scaleFactor                    0;	///< Optional element.
/// Element "offset" of XSD type "http://www.isotc211.org/2005/gco":Real_PropertyType.
    gco__Real_x005fPropertyType*         offset                         0;	///< Optional element.
};

/// @brief "http://www.isotc211.org/2005/gmd":DQ_ConformanceResult_Type is a complexType with complexContent extension of XSD type "http://www.isotc211.org/2005/gmd":AbstractDQ_Result_Type.
///
/// <PRE><BLOCKQUOTE>
///   quantitative_result from Quality Procedures - - renamed to remove implied use limitiation.
/// </BLOCKQUOTE></PRE>
/// class gmd__DQ_x005fConformanceResult_x005fType operations:
/// - gmd__DQ_x005fConformanceResult_x005fType* soap_new_gmd__DQ_x005fConformanceResult_x005fType(soap*) allocate and default initialize
/// - gmd__DQ_x005fConformanceResult_x005fType* soap_new_gmd__DQ_x005fConformanceResult_x005fType(soap*, int num) allocate array and default initialize values
/// - gmd__DQ_x005fConformanceResult_x005fType* soap_new_req_gmd__DQ_x005fConformanceResult_x005fType(soap*, ...) allocate, set required members
/// - gmd__DQ_x005fConformanceResult_x005fType* soap_new_set_gmd__DQ_x005fConformanceResult_x005fType(soap*, ...) allocate, set all public members
/// - gmd__DQ_x005fConformanceResult_x005fType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__DQ_x005fConformanceResult_x005fType(soap*, gmd__DQ_x005fConformanceResult_x005fType*) deserialize from a stream
/// - int soap_write_gmd__DQ_x005fConformanceResult_x005fType(soap*, gmd__DQ_x005fConformanceResult_x005fType*) serialize to a stream
/// - gmd__DQ_x005fConformanceResult_x005fType* gmd__DQ_x005fConformanceResult_x005fType::soap_dup(soap*) returns deep copy of gmd__DQ_x005fConformanceResult_x005fType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__DQ_x005fConformanceResult_x005fType::soap_del() deep deletes gmd__DQ_x005fConformanceResult_x005fType data members, use only after gmd__DQ_x005fConformanceResult_x005fType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__DQ_x005fConformanceResult_x005fType : public gmd__AbstractDQ_x005fResult_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectIdentification">.
/// Attribute "id" of XSD type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute "uuid" of XSD type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/*  INHERITED FROM gmd__AbstractDQ_x005fResult_x005fType:
    END OF INHERITED FROM gmd__AbstractDQ_x005fResult_x005fType */
/// Element "specification" of XSD type "http://www.isotc211.org/2005/gmd":CI_Citation_PropertyType.
    gmd__CI_x005fCitation_x005fPropertyType*  specification                  1;	///< Required element.
/// Element "explanation" of XSD type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  explanation                    1;	///< Required element.
/// Element "pass" of XSD type "http://www.isotc211.org/2005/gco":Boolean_PropertyType.
    gco__Boolean_x005fPropertyType*      pass                           1;	///< Required element.
};

/// @brief "http://www.isotc211.org/2005/gmd":DQ_QuantitativeResult_Type is a complexType with complexContent extension of XSD type "http://www.isotc211.org/2005/gmd":AbstractDQ_Result_Type.
///
/// <PRE><BLOCKQUOTE>
///   Quantitative_conformance_measure from Quality Procedures. - - Renamed to remove implied use limitation - - OCL - -- result is type specified by valueDomain - result.tupleType = valueDomain
/// </BLOCKQUOTE></PRE>
/// class gmd__DQ_x005fQuantitativeResult_x005fType operations:
/// - gmd__DQ_x005fQuantitativeResult_x005fType* soap_new_gmd__DQ_x005fQuantitativeResult_x005fType(soap*) allocate and default initialize
/// - gmd__DQ_x005fQuantitativeResult_x005fType* soap_new_gmd__DQ_x005fQuantitativeResult_x005fType(soap*, int num) allocate array and default initialize values
/// - gmd__DQ_x005fQuantitativeResult_x005fType* soap_new_req_gmd__DQ_x005fQuantitativeResult_x005fType(soap*, ...) allocate, set required members
/// - gmd__DQ_x005fQuantitativeResult_x005fType* soap_new_set_gmd__DQ_x005fQuantitativeResult_x005fType(soap*, ...) allocate, set all public members
/// - gmd__DQ_x005fQuantitativeResult_x005fType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__DQ_x005fQuantitativeResult_x005fType(soap*, gmd__DQ_x005fQuantitativeResult_x005fType*) deserialize from a stream
/// - int soap_write_gmd__DQ_x005fQuantitativeResult_x005fType(soap*, gmd__DQ_x005fQuantitativeResult_x005fType*) serialize to a stream
/// - gmd__DQ_x005fQuantitativeResult_x005fType* gmd__DQ_x005fQuantitativeResult_x005fType::soap_dup(soap*) returns deep copy of gmd__DQ_x005fQuantitativeResult_x005fType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__DQ_x005fQuantitativeResult_x005fType::soap_del() deep deletes gmd__DQ_x005fQuantitativeResult_x005fType data members, use only after gmd__DQ_x005fQuantitativeResult_x005fType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__DQ_x005fQuantitativeResult_x005fType : public gmd__AbstractDQ_x005fResult_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectIdentification">.
/// Attribute "id" of XSD type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute "uuid" of XSD type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/*  INHERITED FROM gmd__AbstractDQ_x005fResult_x005fType:
    END OF INHERITED FROM gmd__AbstractDQ_x005fResult_x005fType */
/// Element "valueType" of XSD type "http://www.isotc211.org/2005/gco":RecordType_PropertyType.
    gco__RecordType_x005fPropertyType*   valueType                      0;	///< Optional element.
/// Element "valueUnit" of XSD type "http://www.isotc211.org/2005/gco":UnitOfMeasure_PropertyType.
    gco__UnitOfMeasure_x005fPropertyType*  valueUnit                      1;	///< Required element.
/// Element "errorStatistic" of XSD type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  errorStatistic                 0;	///< Optional element.
/// Vector of gco__Record_x005fPropertyType* of length 1..unbounded.
    std::vector<gco__Record_x005fPropertyType*> value                          1;
};

/// @brief "http://www.isotc211.org/2005/gmd":AbstractDQ_TemporalAccuracy_Type is an abstract complexType with complexContent extension of XSD type "http://www.isotc211.org/2005/gmd":AbstractDQ_Element_Type.
///
/// class gmd__AbstractDQ_x005fTemporalAccuracy_x005fType operations:
/// - gmd__AbstractDQ_x005fTemporalAccuracy_x005fType* soap_new_gmd__AbstractDQ_x005fTemporalAccuracy_x005fType(soap*) allocate and default initialize
/// - gmd__AbstractDQ_x005fTemporalAccuracy_x005fType* soap_new_gmd__AbstractDQ_x005fTemporalAccuracy_x005fType(soap*, int num) allocate array and default initialize values
/// - gmd__AbstractDQ_x005fTemporalAccuracy_x005fType* soap_new_req_gmd__AbstractDQ_x005fTemporalAccuracy_x005fType(soap*, ...) allocate, set required members
/// - gmd__AbstractDQ_x005fTemporalAccuracy_x005fType* soap_new_set_gmd__AbstractDQ_x005fTemporalAccuracy_x005fType(soap*, ...) allocate, set all public members
/// - gmd__AbstractDQ_x005fTemporalAccuracy_x005fType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__AbstractDQ_x005fTemporalAccuracy_x005fType(soap*, gmd__AbstractDQ_x005fTemporalAccuracy_x005fType*) deserialize from a stream
/// - int soap_write_gmd__AbstractDQ_x005fTemporalAccuracy_x005fType(soap*, gmd__AbstractDQ_x005fTemporalAccuracy_x005fType*) serialize to a stream
/// - gmd__AbstractDQ_x005fTemporalAccuracy_x005fType* gmd__AbstractDQ_x005fTemporalAccuracy_x005fType::soap_dup(soap*) returns deep copy of gmd__AbstractDQ_x005fTemporalAccuracy_x005fType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__AbstractDQ_x005fTemporalAccuracy_x005fType::soap_del() deep deletes gmd__AbstractDQ_x005fTemporalAccuracy_x005fType data members, use only after gmd__AbstractDQ_x005fTemporalAccuracy_x005fType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__AbstractDQ_x005fTemporalAccuracy_x005fType : public gmd__AbstractDQ_x005fElement_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectIdentification">.
/// Attribute "id" of XSD type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute "uuid" of XSD type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/*  INHERITED FROM gmd__AbstractDQ_x005fElement_x005fType:
/// Vector of gco__CharacterString_x005fPropertyType* of length 0..unbounded.
    std::vector<gco__CharacterString_x005fPropertyType*> nameOfMeasure                  0;
/// Element "measureIdentification" of XSD type "http://www.isotc211.org/2005/gmd":MD_Identifier_PropertyType.
    gmd__MD_x005fIdentifier_x005fPropertyType*  measureIdentification          0;	///< Optional element.
/// Element "measureDescription" of XSD type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  measureDescription             0;	///< Optional element.
/// Element "evaluationMethodType" of XSD type "http://www.isotc211.org/2005/gmd":DQ_EvaluationMethodTypeCode_PropertyType.
    gmd__DQ_x005fEvaluationMethodTypeCode_x005fPropertyType*  evaluationMethodType           0;	///< Optional element.
/// Element "evaluationMethodDescription" of XSD type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  evaluationMethodDescription    0;	///< Optional element.
/// Element "evaluationProcedure" of XSD type "http://www.isotc211.org/2005/gmd":CI_Citation_PropertyType.
    gmd__CI_x005fCitation_x005fPropertyType*  evaluationProcedure            0;	///< Optional element.
/// Vector of gco__DateTime_x005fPropertyType* of length 0..unbounded.
    std::vector<gco__DateTime_x005fPropertyType*> dateTime                       0;
/// Vector of gmd__DQ_x005fResult_x005fPropertyType* of length 1..2.
    std::vector<gmd__DQ_x005fResult_x005fPropertyType*> result                         1:2;
    END OF INHERITED FROM gmd__AbstractDQ_x005fElement_x005fType */
};

/// @brief "http://www.isotc211.org/2005/gmd":AbstractDQ_ThematicAccuracy_Type is an abstract complexType with complexContent extension of XSD type "http://www.isotc211.org/2005/gmd":AbstractDQ_Element_Type.
///
/// class gmd__AbstractDQ_x005fThematicAccuracy_x005fType operations:
/// - gmd__AbstractDQ_x005fThematicAccuracy_x005fType* soap_new_gmd__AbstractDQ_x005fThematicAccuracy_x005fType(soap*) allocate and default initialize
/// - gmd__AbstractDQ_x005fThematicAccuracy_x005fType* soap_new_gmd__AbstractDQ_x005fThematicAccuracy_x005fType(soap*, int num) allocate array and default initialize values
/// - gmd__AbstractDQ_x005fThematicAccuracy_x005fType* soap_new_req_gmd__AbstractDQ_x005fThematicAccuracy_x005fType(soap*, ...) allocate, set required members
/// - gmd__AbstractDQ_x005fThematicAccuracy_x005fType* soap_new_set_gmd__AbstractDQ_x005fThematicAccuracy_x005fType(soap*, ...) allocate, set all public members
/// - gmd__AbstractDQ_x005fThematicAccuracy_x005fType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__AbstractDQ_x005fThematicAccuracy_x005fType(soap*, gmd__AbstractDQ_x005fThematicAccuracy_x005fType*) deserialize from a stream
/// - int soap_write_gmd__AbstractDQ_x005fThematicAccuracy_x005fType(soap*, gmd__AbstractDQ_x005fThematicAccuracy_x005fType*) serialize to a stream
/// - gmd__AbstractDQ_x005fThematicAccuracy_x005fType* gmd__AbstractDQ_x005fThematicAccuracy_x005fType::soap_dup(soap*) returns deep copy of gmd__AbstractDQ_x005fThematicAccuracy_x005fType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__AbstractDQ_x005fThematicAccuracy_x005fType::soap_del() deep deletes gmd__AbstractDQ_x005fThematicAccuracy_x005fType data members, use only after gmd__AbstractDQ_x005fThematicAccuracy_x005fType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__AbstractDQ_x005fThematicAccuracy_x005fType : public gmd__AbstractDQ_x005fElement_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectIdentification">.
/// Attribute "id" of XSD type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute "uuid" of XSD type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/*  INHERITED FROM gmd__AbstractDQ_x005fElement_x005fType:
/// Vector of gco__CharacterString_x005fPropertyType* of length 0..unbounded.
    std::vector<gco__CharacterString_x005fPropertyType*> nameOfMeasure                  0;
/// Element "measureIdentification" of XSD type "http://www.isotc211.org/2005/gmd":MD_Identifier_PropertyType.
    gmd__MD_x005fIdentifier_x005fPropertyType*  measureIdentification          0;	///< Optional element.
/// Element "measureDescription" of XSD type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  measureDescription             0;	///< Optional element.
/// Element "evaluationMethodType" of XSD type "http://www.isotc211.org/2005/gmd":DQ_EvaluationMethodTypeCode_PropertyType.
    gmd__DQ_x005fEvaluationMethodTypeCode_x005fPropertyType*  evaluationMethodType           0;	///< Optional element.
/// Element "evaluationMethodDescription" of XSD type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  evaluationMethodDescription    0;	///< Optional element.
/// Element "evaluationProcedure" of XSD type "http://www.isotc211.org/2005/gmd":CI_Citation_PropertyType.
    gmd__CI_x005fCitation_x005fPropertyType*  evaluationProcedure            0;	///< Optional element.
/// Vector of gco__DateTime_x005fPropertyType* of length 0..unbounded.
    std::vector<gco__DateTime_x005fPropertyType*> dateTime                       0;
/// Vector of gmd__DQ_x005fResult_x005fPropertyType* of length 1..2.
    std::vector<gmd__DQ_x005fResult_x005fPropertyType*> result                         1:2;
    END OF INHERITED FROM gmd__AbstractDQ_x005fElement_x005fType */
};

/// @brief "http://www.isotc211.org/2005/gmd":AbstractDQ_PositionalAccuracy_Type is an abstract complexType with complexContent extension of XSD type "http://www.isotc211.org/2005/gmd":AbstractDQ_Element_Type.
///
/// class gmd__AbstractDQ_x005fPositionalAccuracy_x005fType operations:
/// - gmd__AbstractDQ_x005fPositionalAccuracy_x005fType* soap_new_gmd__AbstractDQ_x005fPositionalAccuracy_x005fType(soap*) allocate and default initialize
/// - gmd__AbstractDQ_x005fPositionalAccuracy_x005fType* soap_new_gmd__AbstractDQ_x005fPositionalAccuracy_x005fType(soap*, int num) allocate array and default initialize values
/// - gmd__AbstractDQ_x005fPositionalAccuracy_x005fType* soap_new_req_gmd__AbstractDQ_x005fPositionalAccuracy_x005fType(soap*, ...) allocate, set required members
/// - gmd__AbstractDQ_x005fPositionalAccuracy_x005fType* soap_new_set_gmd__AbstractDQ_x005fPositionalAccuracy_x005fType(soap*, ...) allocate, set all public members
/// - gmd__AbstractDQ_x005fPositionalAccuracy_x005fType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__AbstractDQ_x005fPositionalAccuracy_x005fType(soap*, gmd__AbstractDQ_x005fPositionalAccuracy_x005fType*) deserialize from a stream
/// - int soap_write_gmd__AbstractDQ_x005fPositionalAccuracy_x005fType(soap*, gmd__AbstractDQ_x005fPositionalAccuracy_x005fType*) serialize to a stream
/// - gmd__AbstractDQ_x005fPositionalAccuracy_x005fType* gmd__AbstractDQ_x005fPositionalAccuracy_x005fType::soap_dup(soap*) returns deep copy of gmd__AbstractDQ_x005fPositionalAccuracy_x005fType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__AbstractDQ_x005fPositionalAccuracy_x005fType::soap_del() deep deletes gmd__AbstractDQ_x005fPositionalAccuracy_x005fType data members, use only after gmd__AbstractDQ_x005fPositionalAccuracy_x005fType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__AbstractDQ_x005fPositionalAccuracy_x005fType : public gmd__AbstractDQ_x005fElement_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectIdentification">.
/// Attribute "id" of XSD type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute "uuid" of XSD type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/*  INHERITED FROM gmd__AbstractDQ_x005fElement_x005fType:
/// Vector of gco__CharacterString_x005fPropertyType* of length 0..unbounded.
    std::vector<gco__CharacterString_x005fPropertyType*> nameOfMeasure                  0;
/// Element "measureIdentification" of XSD type "http://www.isotc211.org/2005/gmd":MD_Identifier_PropertyType.
    gmd__MD_x005fIdentifier_x005fPropertyType*  measureIdentification          0;	///< Optional element.
/// Element "measureDescription" of XSD type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  measureDescription             0;	///< Optional element.
/// Element "evaluationMethodType" of XSD type "http://www.isotc211.org/2005/gmd":DQ_EvaluationMethodTypeCode_PropertyType.
    gmd__DQ_x005fEvaluationMethodTypeCode_x005fPropertyType*  evaluationMethodType           0;	///< Optional element.
/// Element "evaluationMethodDescription" of XSD type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  evaluationMethodDescription    0;	///< Optional element.
/// Element "evaluationProcedure" of XSD type "http://www.isotc211.org/2005/gmd":CI_Citation_PropertyType.
    gmd__CI_x005fCitation_x005fPropertyType*  evaluationProcedure            0;	///< Optional element.
/// Vector of gco__DateTime_x005fPropertyType* of length 0..unbounded.
    std::vector<gco__DateTime_x005fPropertyType*> dateTime                       0;
/// Vector of gmd__DQ_x005fResult_x005fPropertyType* of length 1..2.
    std::vector<gmd__DQ_x005fResult_x005fPropertyType*> result                         1:2;
    END OF INHERITED FROM gmd__AbstractDQ_x005fElement_x005fType */
};

/// @brief "http://www.isotc211.org/2005/gmd":AbstractDQ_LogicalConsistency_Type is an abstract complexType with complexContent extension of XSD type "http://www.isotc211.org/2005/gmd":AbstractDQ_Element_Type.
///
/// class gmd__AbstractDQ_x005fLogicalConsistency_x005fType operations:
/// - gmd__AbstractDQ_x005fLogicalConsistency_x005fType* soap_new_gmd__AbstractDQ_x005fLogicalConsistency_x005fType(soap*) allocate and default initialize
/// - gmd__AbstractDQ_x005fLogicalConsistency_x005fType* soap_new_gmd__AbstractDQ_x005fLogicalConsistency_x005fType(soap*, int num) allocate array and default initialize values
/// - gmd__AbstractDQ_x005fLogicalConsistency_x005fType* soap_new_req_gmd__AbstractDQ_x005fLogicalConsistency_x005fType(soap*, ...) allocate, set required members
/// - gmd__AbstractDQ_x005fLogicalConsistency_x005fType* soap_new_set_gmd__AbstractDQ_x005fLogicalConsistency_x005fType(soap*, ...) allocate, set all public members
/// - gmd__AbstractDQ_x005fLogicalConsistency_x005fType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__AbstractDQ_x005fLogicalConsistency_x005fType(soap*, gmd__AbstractDQ_x005fLogicalConsistency_x005fType*) deserialize from a stream
/// - int soap_write_gmd__AbstractDQ_x005fLogicalConsistency_x005fType(soap*, gmd__AbstractDQ_x005fLogicalConsistency_x005fType*) serialize to a stream
/// - gmd__AbstractDQ_x005fLogicalConsistency_x005fType* gmd__AbstractDQ_x005fLogicalConsistency_x005fType::soap_dup(soap*) returns deep copy of gmd__AbstractDQ_x005fLogicalConsistency_x005fType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__AbstractDQ_x005fLogicalConsistency_x005fType::soap_del() deep deletes gmd__AbstractDQ_x005fLogicalConsistency_x005fType data members, use only after gmd__AbstractDQ_x005fLogicalConsistency_x005fType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__AbstractDQ_x005fLogicalConsistency_x005fType : public gmd__AbstractDQ_x005fElement_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectIdentification">.
/// Attribute "id" of XSD type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute "uuid" of XSD type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/*  INHERITED FROM gmd__AbstractDQ_x005fElement_x005fType:
/// Vector of gco__CharacterString_x005fPropertyType* of length 0..unbounded.
    std::vector<gco__CharacterString_x005fPropertyType*> nameOfMeasure                  0;
/// Element "measureIdentification" of XSD type "http://www.isotc211.org/2005/gmd":MD_Identifier_PropertyType.
    gmd__MD_x005fIdentifier_x005fPropertyType*  measureIdentification          0;	///< Optional element.
/// Element "measureDescription" of XSD type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  measureDescription             0;	///< Optional element.
/// Element "evaluationMethodType" of XSD type "http://www.isotc211.org/2005/gmd":DQ_EvaluationMethodTypeCode_PropertyType.
    gmd__DQ_x005fEvaluationMethodTypeCode_x005fPropertyType*  evaluationMethodType           0;	///< Optional element.
/// Element "evaluationMethodDescription" of XSD type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  evaluationMethodDescription    0;	///< Optional element.
/// Element "evaluationProcedure" of XSD type "http://www.isotc211.org/2005/gmd":CI_Citation_PropertyType.
    gmd__CI_x005fCitation_x005fPropertyType*  evaluationProcedure            0;	///< Optional element.
/// Vector of gco__DateTime_x005fPropertyType* of length 0..unbounded.
    std::vector<gco__DateTime_x005fPropertyType*> dateTime                       0;
/// Vector of gmd__DQ_x005fResult_x005fPropertyType* of length 1..2.
    std::vector<gmd__DQ_x005fResult_x005fPropertyType*> result                         1:2;
    END OF INHERITED FROM gmd__AbstractDQ_x005fElement_x005fType */
};

/// @brief "http://www.isotc211.org/2005/gmd":AbstractDQ_Completeness_Type is an abstract complexType with complexContent extension of XSD type "http://www.isotc211.org/2005/gmd":AbstractDQ_Element_Type.
///
/// class gmd__AbstractDQ_x005fCompleteness_x005fType operations:
/// - gmd__AbstractDQ_x005fCompleteness_x005fType* soap_new_gmd__AbstractDQ_x005fCompleteness_x005fType(soap*) allocate and default initialize
/// - gmd__AbstractDQ_x005fCompleteness_x005fType* soap_new_gmd__AbstractDQ_x005fCompleteness_x005fType(soap*, int num) allocate array and default initialize values
/// - gmd__AbstractDQ_x005fCompleteness_x005fType* soap_new_req_gmd__AbstractDQ_x005fCompleteness_x005fType(soap*, ...) allocate, set required members
/// - gmd__AbstractDQ_x005fCompleteness_x005fType* soap_new_set_gmd__AbstractDQ_x005fCompleteness_x005fType(soap*, ...) allocate, set all public members
/// - gmd__AbstractDQ_x005fCompleteness_x005fType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__AbstractDQ_x005fCompleteness_x005fType(soap*, gmd__AbstractDQ_x005fCompleteness_x005fType*) deserialize from a stream
/// - int soap_write_gmd__AbstractDQ_x005fCompleteness_x005fType(soap*, gmd__AbstractDQ_x005fCompleteness_x005fType*) serialize to a stream
/// - gmd__AbstractDQ_x005fCompleteness_x005fType* gmd__AbstractDQ_x005fCompleteness_x005fType::soap_dup(soap*) returns deep copy of gmd__AbstractDQ_x005fCompleteness_x005fType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__AbstractDQ_x005fCompleteness_x005fType::soap_del() deep deletes gmd__AbstractDQ_x005fCompleteness_x005fType data members, use only after gmd__AbstractDQ_x005fCompleteness_x005fType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__AbstractDQ_x005fCompleteness_x005fType : public gmd__AbstractDQ_x005fElement_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectIdentification">.
/// Attribute "id" of XSD type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute "uuid" of XSD type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/*  INHERITED FROM gmd__AbstractDQ_x005fElement_x005fType:
/// Vector of gco__CharacterString_x005fPropertyType* of length 0..unbounded.
    std::vector<gco__CharacterString_x005fPropertyType*> nameOfMeasure                  0;
/// Element "measureIdentification" of XSD type "http://www.isotc211.org/2005/gmd":MD_Identifier_PropertyType.
    gmd__MD_x005fIdentifier_x005fPropertyType*  measureIdentification          0;	///< Optional element.
/// Element "measureDescription" of XSD type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  measureDescription             0;	///< Optional element.
/// Element "evaluationMethodType" of XSD type "http://www.isotc211.org/2005/gmd":DQ_EvaluationMethodTypeCode_PropertyType.
    gmd__DQ_x005fEvaluationMethodTypeCode_x005fPropertyType*  evaluationMethodType           0;	///< Optional element.
/// Element "evaluationMethodDescription" of XSD type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  evaluationMethodDescription    0;	///< Optional element.
/// Element "evaluationProcedure" of XSD type "http://www.isotc211.org/2005/gmd":CI_Citation_PropertyType.
    gmd__CI_x005fCitation_x005fPropertyType*  evaluationProcedure            0;	///< Optional element.
/// Vector of gco__DateTime_x005fPropertyType* of length 0..unbounded.
    std::vector<gco__DateTime_x005fPropertyType*> dateTime                       0;
/// Vector of gmd__DQ_x005fResult_x005fPropertyType* of length 1..2.
    std::vector<gmd__DQ_x005fResult_x005fPropertyType*> result                         1:2;
    END OF INHERITED FROM gmd__AbstractDQ_x005fElement_x005fType */
};

/// @brief "http://www.isotc211.org/2005/gmd":MD_DataIdentification_Type is a complexType with complexContent extension of XSD type "http://www.isotc211.org/2005/gmd":AbstractMD_Identification_Type.
///
/// class gmd__MD_x005fDataIdentification_x005fType operations:
/// - gmd__MD_x005fDataIdentification_x005fType* soap_new_gmd__MD_x005fDataIdentification_x005fType(soap*) allocate and default initialize
/// - gmd__MD_x005fDataIdentification_x005fType* soap_new_gmd__MD_x005fDataIdentification_x005fType(soap*, int num) allocate array and default initialize values
/// - gmd__MD_x005fDataIdentification_x005fType* soap_new_req_gmd__MD_x005fDataIdentification_x005fType(soap*, ...) allocate, set required members
/// - gmd__MD_x005fDataIdentification_x005fType* soap_new_set_gmd__MD_x005fDataIdentification_x005fType(soap*, ...) allocate, set all public members
/// - gmd__MD_x005fDataIdentification_x005fType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__MD_x005fDataIdentification_x005fType(soap*, gmd__MD_x005fDataIdentification_x005fType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fDataIdentification_x005fType(soap*, gmd__MD_x005fDataIdentification_x005fType*) serialize to a stream
/// - gmd__MD_x005fDataIdentification_x005fType* gmd__MD_x005fDataIdentification_x005fType::soap_dup(soap*) returns deep copy of gmd__MD_x005fDataIdentification_x005fType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__MD_x005fDataIdentification_x005fType::soap_del() deep deletes gmd__MD_x005fDataIdentification_x005fType data members, use only after gmd__MD_x005fDataIdentification_x005fType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__MD_x005fDataIdentification_x005fType : public gmd__AbstractMD_x005fIdentification_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectIdentification">.
/// Attribute "id" of XSD type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute "uuid" of XSD type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/*  INHERITED FROM gmd__AbstractMD_x005fIdentification_x005fType:
/// Element "citation" of XSD type "http://www.isotc211.org/2005/gmd":CI_Citation_PropertyType.
    gmd__CI_x005fCitation_x005fPropertyType*  citation                       1;	///< Required element.
/// Element "abstract" of XSD type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  abstract                       1;	///< Required element.
/// Element "purpose" of XSD type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  purpose                        0;	///< Optional element.
/// Vector of gco__CharacterString_x005fPropertyType* of length 0..unbounded.
    std::vector<gco__CharacterString_x005fPropertyType*> credit                         0;
/// Vector of gmd__MD_x005fProgressCode_x005fPropertyType* of length 0..unbounded.
    std::vector<gmd__MD_x005fProgressCode_x005fPropertyType*> status                         0;
/// Vector of gmd__CI_x005fResponsibleParty_x005fPropertyType* of length 0..unbounded.
    std::vector<gmd__CI_x005fResponsibleParty_x005fPropertyType*> pointOfContact                 0;
/// Vector of gmd__MD_x005fMaintenanceInformation_x005fPropertyType* of length 0..unbounded.
    std::vector<gmd__MD_x005fMaintenanceInformation_x005fPropertyType*> resourceMaintenance            0;
/// Vector of gmd__MD_x005fBrowseGraphic_x005fPropertyType* of length 0..unbounded.
    std::vector<gmd__MD_x005fBrowseGraphic_x005fPropertyType*> graphicOverview                0;
/// Vector of gmd__MD_x005fFormat_x005fPropertyType* of length 0..unbounded.
    std::vector<gmd__MD_x005fFormat_x005fPropertyType*> resourceFormat                 0;
/// Vector of gmd__MD_x005fKeywords_x005fPropertyType* of length 0..unbounded.
    std::vector<gmd__MD_x005fKeywords_x005fPropertyType*> descriptiveKeywords            0;
/// Vector of gmd__MD_x005fUsage_x005fPropertyType* of length 0..unbounded.
    std::vector<gmd__MD_x005fUsage_x005fPropertyType*> resourceSpecificUsage          0;
/// Vector of gmd__MD_x005fConstraints_x005fPropertyType* of length 0..unbounded.
    std::vector<gmd__MD_x005fConstraints_x005fPropertyType*> resourceConstraints            0;
/// Vector of gmd__MD_x005fAggregateInformation_x005fPropertyType* of length 0..unbounded.
    std::vector<gmd__MD_x005fAggregateInformation_x005fPropertyType*> aggregationInfo                0;
    END OF INHERITED FROM gmd__AbstractMD_x005fIdentification_x005fType */
/// Vector of gmd__MD_x005fSpatialRepresentationTypeCode_x005fPropertyType* of length 0..unbounded.
    std::vector<gmd__MD_x005fSpatialRepresentationTypeCode_x005fPropertyType*> spatialRepresentationType      0;
/// Vector of gmd__MD_x005fResolution_x005fPropertyType* of length 0..unbounded.
    std::vector<gmd__MD_x005fResolution_x005fPropertyType*> spatialResolution              0;
/// Vector of gco__CharacterString_x005fPropertyType* of length 1..unbounded.
    std::vector<gco__CharacterString_x005fPropertyType*> language                       1;
/// Vector of gmd__MD_x005fCharacterSetCode_x005fPropertyType* of length 0..unbounded.
    std::vector<gmd__MD_x005fCharacterSetCode_x005fPropertyType*> characterSet                   0;
/// Vector of gmd__MD_x005fTopicCategoryCode_x005fPropertyType* of length 0..unbounded.
    std::vector<gmd__MD_x005fTopicCategoryCode_x005fPropertyType*> topicCategory                  0;
/// Element "environmentDescription" of XSD type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  environmentDescription         0;	///< Optional element.
/// Vector of gmd__EX_x005fExtent_x005fPropertyType* of length 0..unbounded.
    std::vector<gmd__EX_x005fExtent_x005fPropertyType*> extent                         0;
/// Element "supplementalInformation" of XSD type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  supplementalInformation        0;	///< Optional element.
};

/// @brief "http://www.isotc211.org/2005/gmd":MD_ServiceIdentification_Type is a complexType with complexContent extension of XSD type "http://www.isotc211.org/2005/gmd":AbstractMD_Identification_Type.
///
/// <PRE><BLOCKQUOTE>
///   See 19119 for further info
/// </BLOCKQUOTE></PRE>
/// class gmd__MD_x005fServiceIdentification_x005fType operations:
/// - gmd__MD_x005fServiceIdentification_x005fType* soap_new_gmd__MD_x005fServiceIdentification_x005fType(soap*) allocate and default initialize
/// - gmd__MD_x005fServiceIdentification_x005fType* soap_new_gmd__MD_x005fServiceIdentification_x005fType(soap*, int num) allocate array and default initialize values
/// - gmd__MD_x005fServiceIdentification_x005fType* soap_new_req_gmd__MD_x005fServiceIdentification_x005fType(soap*, ...) allocate, set required members
/// - gmd__MD_x005fServiceIdentification_x005fType* soap_new_set_gmd__MD_x005fServiceIdentification_x005fType(soap*, ...) allocate, set all public members
/// - gmd__MD_x005fServiceIdentification_x005fType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__MD_x005fServiceIdentification_x005fType(soap*, gmd__MD_x005fServiceIdentification_x005fType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fServiceIdentification_x005fType(soap*, gmd__MD_x005fServiceIdentification_x005fType*) serialize to a stream
/// - gmd__MD_x005fServiceIdentification_x005fType* gmd__MD_x005fServiceIdentification_x005fType::soap_dup(soap*) returns deep copy of gmd__MD_x005fServiceIdentification_x005fType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__MD_x005fServiceIdentification_x005fType::soap_del() deep deletes gmd__MD_x005fServiceIdentification_x005fType data members, use only after gmd__MD_x005fServiceIdentification_x005fType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__MD_x005fServiceIdentification_x005fType : public gmd__AbstractMD_x005fIdentification_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectIdentification">.
/// Attribute "id" of XSD type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute "uuid" of XSD type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/*  INHERITED FROM gmd__AbstractMD_x005fIdentification_x005fType:
/// Element "citation" of XSD type "http://www.isotc211.org/2005/gmd":CI_Citation_PropertyType.
    gmd__CI_x005fCitation_x005fPropertyType*  citation                       1;	///< Required element.
/// Element "abstract" of XSD type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  abstract                       1;	///< Required element.
/// Element "purpose" of XSD type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  purpose                        0;	///< Optional element.
/// Vector of gco__CharacterString_x005fPropertyType* of length 0..unbounded.
    std::vector<gco__CharacterString_x005fPropertyType*> credit                         0;
/// Vector of gmd__MD_x005fProgressCode_x005fPropertyType* of length 0..unbounded.
    std::vector<gmd__MD_x005fProgressCode_x005fPropertyType*> status                         0;
/// Vector of gmd__CI_x005fResponsibleParty_x005fPropertyType* of length 0..unbounded.
    std::vector<gmd__CI_x005fResponsibleParty_x005fPropertyType*> pointOfContact                 0;
/// Vector of gmd__MD_x005fMaintenanceInformation_x005fPropertyType* of length 0..unbounded.
    std::vector<gmd__MD_x005fMaintenanceInformation_x005fPropertyType*> resourceMaintenance            0;
/// Vector of gmd__MD_x005fBrowseGraphic_x005fPropertyType* of length 0..unbounded.
    std::vector<gmd__MD_x005fBrowseGraphic_x005fPropertyType*> graphicOverview                0;
/// Vector of gmd__MD_x005fFormat_x005fPropertyType* of length 0..unbounded.
    std::vector<gmd__MD_x005fFormat_x005fPropertyType*> resourceFormat                 0;
/// Vector of gmd__MD_x005fKeywords_x005fPropertyType* of length 0..unbounded.
    std::vector<gmd__MD_x005fKeywords_x005fPropertyType*> descriptiveKeywords            0;
/// Vector of gmd__MD_x005fUsage_x005fPropertyType* of length 0..unbounded.
    std::vector<gmd__MD_x005fUsage_x005fPropertyType*> resourceSpecificUsage          0;
/// Vector of gmd__MD_x005fConstraints_x005fPropertyType* of length 0..unbounded.
    std::vector<gmd__MD_x005fConstraints_x005fPropertyType*> resourceConstraints            0;
/// Vector of gmd__MD_x005fAggregateInformation_x005fPropertyType* of length 0..unbounded.
    std::vector<gmd__MD_x005fAggregateInformation_x005fPropertyType*> aggregationInfo                0;
    END OF INHERITED FROM gmd__AbstractMD_x005fIdentification_x005fType */
};

/// @brief "http://www.isotc211.org/2005/gmd":MD_LegalConstraints_Type is a complexType with complexContent extension of XSD type "http://www.isotc211.org/2005/gmd":MD_Constraints_Type.
///
/// <PRE><BLOCKQUOTE>
///   Restrictions and legal prerequisites for accessing and using the dataset.
/// </BLOCKQUOTE></PRE>
/// class gmd__MD_x005fLegalConstraints_x005fType operations:
/// - gmd__MD_x005fLegalConstraints_x005fType* soap_new_gmd__MD_x005fLegalConstraints_x005fType(soap*) allocate and default initialize
/// - gmd__MD_x005fLegalConstraints_x005fType* soap_new_gmd__MD_x005fLegalConstraints_x005fType(soap*, int num) allocate array and default initialize values
/// - gmd__MD_x005fLegalConstraints_x005fType* soap_new_req_gmd__MD_x005fLegalConstraints_x005fType(soap*, ...) allocate, set required members
/// - gmd__MD_x005fLegalConstraints_x005fType* soap_new_set_gmd__MD_x005fLegalConstraints_x005fType(soap*, ...) allocate, set all public members
/// - gmd__MD_x005fLegalConstraints_x005fType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__MD_x005fLegalConstraints_x005fType(soap*, gmd__MD_x005fLegalConstraints_x005fType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fLegalConstraints_x005fType(soap*, gmd__MD_x005fLegalConstraints_x005fType*) serialize to a stream
/// - gmd__MD_x005fLegalConstraints_x005fType* gmd__MD_x005fLegalConstraints_x005fType::soap_dup(soap*) returns deep copy of gmd__MD_x005fLegalConstraints_x005fType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__MD_x005fLegalConstraints_x005fType::soap_del() deep deletes gmd__MD_x005fLegalConstraints_x005fType data members, use only after gmd__MD_x005fLegalConstraints_x005fType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__MD_x005fLegalConstraints_x005fType : public gmd__MD_x005fConstraints_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectIdentification">.
/// Attribute "id" of XSD type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute "uuid" of XSD type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/*  INHERITED FROM gmd__MD_x005fConstraints_x005fType:
/// Vector of gco__CharacterString_x005fPropertyType* of length 0..unbounded.
    std::vector<gco__CharacterString_x005fPropertyType*> useLimitation                  0;
    END OF INHERITED FROM gmd__MD_x005fConstraints_x005fType */
/// Vector of gmd__MD_x005fRestrictionCode_x005fPropertyType* of length 0..unbounded.
    std::vector<gmd__MD_x005fRestrictionCode_x005fPropertyType*> accessConstraints              0;
/// Vector of gmd__MD_x005fRestrictionCode_x005fPropertyType* of length 0..unbounded.
    std::vector<gmd__MD_x005fRestrictionCode_x005fPropertyType*> useConstraints                 0;
/// Vector of gco__CharacterString_x005fPropertyType* of length 0..unbounded.
    std::vector<gco__CharacterString_x005fPropertyType*> otherConstraints               0;
};

/// @brief "http://www.isotc211.org/2005/gmd":MD_SecurityConstraints_Type is a complexType with complexContent extension of XSD type "http://www.isotc211.org/2005/gmd":MD_Constraints_Type.
///
/// <PRE><BLOCKQUOTE>
///   Handling restrictions imposed on the dataset because of national security, privacy, or other concerns
/// </BLOCKQUOTE></PRE>
/// class gmd__MD_x005fSecurityConstraints_x005fType operations:
/// - gmd__MD_x005fSecurityConstraints_x005fType* soap_new_gmd__MD_x005fSecurityConstraints_x005fType(soap*) allocate and default initialize
/// - gmd__MD_x005fSecurityConstraints_x005fType* soap_new_gmd__MD_x005fSecurityConstraints_x005fType(soap*, int num) allocate array and default initialize values
/// - gmd__MD_x005fSecurityConstraints_x005fType* soap_new_req_gmd__MD_x005fSecurityConstraints_x005fType(soap*, ...) allocate, set required members
/// - gmd__MD_x005fSecurityConstraints_x005fType* soap_new_set_gmd__MD_x005fSecurityConstraints_x005fType(soap*, ...) allocate, set all public members
/// - gmd__MD_x005fSecurityConstraints_x005fType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__MD_x005fSecurityConstraints_x005fType(soap*, gmd__MD_x005fSecurityConstraints_x005fType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fSecurityConstraints_x005fType(soap*, gmd__MD_x005fSecurityConstraints_x005fType*) serialize to a stream
/// - gmd__MD_x005fSecurityConstraints_x005fType* gmd__MD_x005fSecurityConstraints_x005fType::soap_dup(soap*) returns deep copy of gmd__MD_x005fSecurityConstraints_x005fType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__MD_x005fSecurityConstraints_x005fType::soap_del() deep deletes gmd__MD_x005fSecurityConstraints_x005fType data members, use only after gmd__MD_x005fSecurityConstraints_x005fType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__MD_x005fSecurityConstraints_x005fType : public gmd__MD_x005fConstraints_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectIdentification">.
/// Attribute "id" of XSD type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute "uuid" of XSD type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/*  INHERITED FROM gmd__MD_x005fConstraints_x005fType:
/// Vector of gco__CharacterString_x005fPropertyType* of length 0..unbounded.
    std::vector<gco__CharacterString_x005fPropertyType*> useLimitation                  0;
    END OF INHERITED FROM gmd__MD_x005fConstraints_x005fType */
/// Element "classification" of XSD type "http://www.isotc211.org/2005/gmd":MD_ClassificationCode_PropertyType.
    gmd__MD_x005fClassificationCode_x005fPropertyType*  classification                 1;	///< Required element.
/// Element "userNote" of XSD type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  userNote                       0;	///< Optional element.
/// Element "classificationSystem" of XSD type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  classificationSystem           0;	///< Optional element.
/// Element "handlingDescription" of XSD type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  handlingDescription            0;	///< Optional element.
};

/// @brief "http://www.opengis.net/gml/3.2":DynamicFeatureCollectionType is a complexType with complexContent extension of XSD type "http://www.opengis.net/gml/3.2":DynamicFeatureType.
///
/// class gml__DynamicFeatureCollectionType operations:
/// - gml__DynamicFeatureCollectionType* soap_new_gml__DynamicFeatureCollectionType(soap*) allocate and default initialize
/// - gml__DynamicFeatureCollectionType* soap_new_gml__DynamicFeatureCollectionType(soap*, int num) allocate array and default initialize values
/// - gml__DynamicFeatureCollectionType* soap_new_req_gml__DynamicFeatureCollectionType(soap*, ...) allocate, set required members
/// - gml__DynamicFeatureCollectionType* soap_new_set_gml__DynamicFeatureCollectionType(soap*, ...) allocate, set all public members
/// - gml__DynamicFeatureCollectionType::soap_default(soap*) default initialize members
/// - int soap_read_gml__DynamicFeatureCollectionType(soap*, gml__DynamicFeatureCollectionType*) deserialize from a stream
/// - int soap_write_gml__DynamicFeatureCollectionType(soap*, gml__DynamicFeatureCollectionType*) serialize to a stream
/// - gml__DynamicFeatureCollectionType* gml__DynamicFeatureCollectionType::soap_dup(soap*) returns deep copy of gml__DynamicFeatureCollectionType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__DynamicFeatureCollectionType::soap_del() deep deletes gml__DynamicFeatureCollectionType data members, use only after gml__DynamicFeatureCollectionType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__DynamicFeatureCollectionType : public gml__DynamicFeatureType
{ public:
/*  INHERITED FROM gml__AbstractGMLType:
//  BEGIN GROUP <xs:group name="StandardObjectProperties">
/// Vector of gml__MetaDataPropertyType* element refs of length 0..unbounded.
    std::vector<gml__MetaDataPropertyType*> metaDataProperty               0;
/// <PRE><BLOCKQUOTE>
///   The value of this property is a text description of the object. gml:description uses gml:StringOrRefType as its content model, so it may contain a simple text string content, or carry a reference to an external description. The use of gml:description to reference an external description has been deprecated and replaced by the gml:descriptionReference property.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":description.
    gml__StringOrRefType*                description                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The value of this property is a remote text description of the object. The xlink:href attribute of the gml:descriptionReference property references the external description.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":descriptionReference.
    gml__ReferenceType*                  descriptionReference           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Often, a special identifier is assigned to an object by the maintaining authority with the intention that it is used in references to the object For such cases, the codeSpace shall be provided. That identifier is usually unique either globally or within an application domain. gml:identifier is a pre-defined property for such identifiers.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":identifier.
    gml__CodeWithAuthorityType*          identifier                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The gml:name property provides a label or identifier for the object, commonly a descriptive name. An object may have several names, typically assigned by different authorities. gml:name uses the gml:CodeType content model. The authority for a name is indicated by the value of its (optional) codeSpace attribute. The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace. In common usage there will be one name per authority, so a processing application may select the name from its preferred codeSpace.
/// </BLOCKQUOTE></PRE>
/// Vector of gml__CodeType* element refs of length 0..unbounded.
    std::vector<gml__CodeType*         > name                           0;
//  END OF GROUP
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":id.
/// <PRE><BLOCKQUOTE>
///   The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.
/// </BLOCKQUOTE></PRE>
   @xsd__ID*                             gml__id                        0;	///< Optional attribute.
    END OF INHERITED FROM gml__AbstractGMLType */
/*  INHERITED FROM gml__AbstractFeatureType:
/// <PRE><BLOCKQUOTE>
///   This property describes the minimum bounding box or rectangle that encloses the entire feature.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":boundedBy.
    gml__BoundingShapeType*              boundedBy                      0;	///< Optional element.
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="location" minOccurs="0"> with global elements <priorityLocation>
   $int                                  __unionlocation                0;	///< Union _gml__union_DynamicFeatureCollectionType selector: set to SOAP_UNION__gml__union_DynamicFeatureCollectionType_<fieldname> or 0 to omit
/// Union for substitutionGroup gml__location.
    union _gml__union_DynamicFeatureCollectionType
    {
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":location.
    gml__LocationPropertyType*           location                       0;	///< Optional element.
/// Element "http://www.opengis.net/gml/3.2":priorityLocation.
    gml__PriorityLocationPropertyType*   priorityLocation               nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_DynamicFeatureCollectionType;
//  END OF SUBSTITUTIONS
    END OF INHERITED FROM gml__AbstractFeatureType */
/*  INHERITED FROM gml__DynamicFeatureType:
//  BEGIN GROUP <xs:group name="dynamicProperties">
/// <PRE><BLOCKQUOTE>
///   A convenience group. This allows an application schema developer to include dynamic properties in a content model in a standard fashion.
/// </BLOCKQUOTE></PRE>
/// <PRE><BLOCKQUOTE>
///   gml:validTime is a convenience property element.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":validTime.
    gml__TimePrimitivePropertyType*      validTime                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   A generic sequence of events constitute a gml:history of an object.
///   The gml:history element contains a set of elements in the substitution group headed by the abstract element gml:AbstractTimeSlice, representing the time-varying properties of interest. The history property of a dynamic feature associates a feature instance with a sequence of time slices (i.e. change events) that encapsulate the evolution of the feature.
/// </BLOCKQUOTE></PRE>
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="history" minOccurs="0"> with global elements <track>
   $int                                  __unionhistory                 0;	///< Union _gml__union_DynamicFeatureCollectionType_ selector: set to SOAP_UNION__gml__union_DynamicFeatureCollectionType__<fieldname> or 0 to omit
/// Union for substitutionGroup gml__history.
    union _gml__union_DynamicFeatureCollectionType_
    {
/// <PRE><BLOCKQUOTE>
///   A generic sequence of events constitute a gml:history of an object.
///   The gml:history element contains a set of elements in the substitution group headed by the abstract element gml:AbstractTimeSlice, representing the time-varying properties of interest. The history property of a dynamic feature associates a feature instance with a sequence of time slices (i.e. change events) that encapsulate the evolution of the feature.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":history.
    gml__HistoryPropertyType*            history                        0;	///< Optional element.
/// Element "http://www.opengis.net/gml/3.2":track.
    gml__HistoryPropertyType*            track                          nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_DynamicFeatureCollectionType_;
//  END OF SUBSTITUTIONS
/// <PRE><BLOCKQUOTE>
///   Evidence is represented by a simple gml:dataSource or gml:dataSourceReference property that indicates the source of the temporal data. The remote link attributes of the gml:dataSource element have been deprecated along with its current type.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":dataSource.
    gml__StringOrRefType*                dataSource                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Evidence is represented by a simple gml:dataSource or gml:dataSourceReference property that indicates the source of the temporal data.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":dataSourceReference.
    gml__ReferenceType*                  dataSourceReference            0;	///< Optional element.
//  END OF GROUP
    END OF INHERITED FROM gml__DynamicFeatureType */
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":dynamicMembers.
    gml__DynamicFeatureMemberType*       dynamicMembers                 1;	///< Required element.
};

/// @brief "http://www.opengis.net/gml/3.2":NodeType is a complexType with complexContent extension of XSD type "http://www.opengis.net/gml/3.2":AbstractTopoPrimitiveType.
///
/// class gml__NodeType operations:
/// - gml__NodeType* soap_new_gml__NodeType(soap*) allocate and default initialize
/// - gml__NodeType* soap_new_gml__NodeType(soap*, int num) allocate array and default initialize values
/// - gml__NodeType* soap_new_req_gml__NodeType(soap*, ...) allocate, set required members
/// - gml__NodeType* soap_new_set_gml__NodeType(soap*, ...) allocate, set all public members
/// - gml__NodeType::soap_default(soap*) default initialize members
/// - int soap_read_gml__NodeType(soap*, gml__NodeType*) deserialize from a stream
/// - int soap_write_gml__NodeType(soap*, gml__NodeType*) serialize to a stream
/// - gml__NodeType* gml__NodeType::soap_dup(soap*) returns deep copy of gml__NodeType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__NodeType::soap_del() deep deletes gml__NodeType data members, use only after gml__NodeType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__NodeType : public gml__AbstractTopoPrimitiveType
{ public:
/*  INHERITED FROM gml__AbstractGMLType:
//  BEGIN GROUP <xs:group name="StandardObjectProperties">
/// Vector of gml__MetaDataPropertyType* element refs of length 0..unbounded.
    std::vector<gml__MetaDataPropertyType*> metaDataProperty               0;
/// <PRE><BLOCKQUOTE>
///   The value of this property is a text description of the object. gml:description uses gml:StringOrRefType as its content model, so it may contain a simple text string content, or carry a reference to an external description. The use of gml:description to reference an external description has been deprecated and replaced by the gml:descriptionReference property.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":description.
    gml__StringOrRefType*                description                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The value of this property is a remote text description of the object. The xlink:href attribute of the gml:descriptionReference property references the external description.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":descriptionReference.
    gml__ReferenceType*                  descriptionReference           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Often, a special identifier is assigned to an object by the maintaining authority with the intention that it is used in references to the object For such cases, the codeSpace shall be provided. That identifier is usually unique either globally or within an application domain. gml:identifier is a pre-defined property for such identifiers.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":identifier.
    gml__CodeWithAuthorityType*          identifier                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The gml:name property provides a label or identifier for the object, commonly a descriptive name. An object may have several names, typically assigned by different authorities. gml:name uses the gml:CodeType content model. The authority for a name is indicated by the value of its (optional) codeSpace attribute. The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace. In common usage there will be one name per authority, so a processing application may select the name from its preferred codeSpace.
/// </BLOCKQUOTE></PRE>
/// Vector of gml__CodeType* element refs of length 0..unbounded.
    std::vector<gml__CodeType*         > name                           0;
//  END OF GROUP
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":id.
/// <PRE><BLOCKQUOTE>
///   The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.
/// </BLOCKQUOTE></PRE>
   @xsd__ID*                             gml__id                        0;	///< Optional attribute.
    END OF INHERITED FROM gml__AbstractGMLType */
/*  INHERITED FROM gml__AbstractTopologyType:
    END OF INHERITED FROM gml__AbstractTopologyType */
/*  INHERITED FROM gml__AbstractTopoPrimitiveType:
    END OF INHERITED FROM gml__AbstractTopoPrimitiveType */
/// Element "container" of XSD type "http://www.opengis.net/gml/3.2":FaceOrTopoSolidPropertyType.
    gml__FaceOrTopoSolidPropertyType*    container                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   In the case of planar topology, a gml:Node must have a clockwise sequence of gml:directedEdge properties, to ensure a lossless topology representation as defined by Kuijpers, et. al. (see OGC 05-102 Topology IPR).
/// </BLOCKQUOTE></PRE>
/// <PRE><BLOCKQUOTE>
///   A gml:directedEdge property element describes the boundary of topology faces, the coBoundary of topology nodes and is used in the support of topological line features via the gml:TopoCurve expression, see below. The orientation attribute of type gml:SignType expresses the sense in which the included edge is used, i.e. forward or reverse.
/// </BLOCKQUOTE></PRE>
/// Vector of gml__DirectedEdgePropertyType* element refs of length 0..unbounded.
    std::vector<gml__DirectedEdgePropertyType*> directedEdge                   0;
/// <PRE><BLOCKQUOTE>
///   This property element either references a point via the XLink-attributes or contains the point element. pointProperty is the predefined property which may be used by GML Application Schemas whenever a GML feature has a property with a value that is substitutable for Point.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":pointProperty.
    gml__PointPropertyType*              pointProperty                  0;	///< Optional element.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":AggregationAttributeGroup">.
/// Attribute "aggregationType" of XSD type "http://www.opengis.net/gml/3.2":AggregationType.
   @enum gml__AggregationType*           aggregationType                0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.opengis.net/gml/3.2":EdgeType is a complexType with complexContent extension of XSD type "http://www.opengis.net/gml/3.2":AbstractTopoPrimitiveType.
///
/// class gml__EdgeType operations:
/// - gml__EdgeType* soap_new_gml__EdgeType(soap*) allocate and default initialize
/// - gml__EdgeType* soap_new_gml__EdgeType(soap*, int num) allocate array and default initialize values
/// - gml__EdgeType* soap_new_req_gml__EdgeType(soap*, ...) allocate, set required members
/// - gml__EdgeType* soap_new_set_gml__EdgeType(soap*, ...) allocate, set all public members
/// - gml__EdgeType::soap_default(soap*) default initialize members
/// - int soap_read_gml__EdgeType(soap*, gml__EdgeType*) deserialize from a stream
/// - int soap_write_gml__EdgeType(soap*, gml__EdgeType*) serialize to a stream
/// - gml__EdgeType* gml__EdgeType::soap_dup(soap*) returns deep copy of gml__EdgeType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__EdgeType::soap_del() deep deletes gml__EdgeType data members, use only after gml__EdgeType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__EdgeType : public gml__AbstractTopoPrimitiveType
{ public:
/*  INHERITED FROM gml__AbstractGMLType:
//  BEGIN GROUP <xs:group name="StandardObjectProperties">
/// Vector of gml__MetaDataPropertyType* element refs of length 0..unbounded.
    std::vector<gml__MetaDataPropertyType*> metaDataProperty               0;
/// <PRE><BLOCKQUOTE>
///   The value of this property is a text description of the object. gml:description uses gml:StringOrRefType as its content model, so it may contain a simple text string content, or carry a reference to an external description. The use of gml:description to reference an external description has been deprecated and replaced by the gml:descriptionReference property.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":description.
    gml__StringOrRefType*                description                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The value of this property is a remote text description of the object. The xlink:href attribute of the gml:descriptionReference property references the external description.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":descriptionReference.
    gml__ReferenceType*                  descriptionReference           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Often, a special identifier is assigned to an object by the maintaining authority with the intention that it is used in references to the object For such cases, the codeSpace shall be provided. That identifier is usually unique either globally or within an application domain. gml:identifier is a pre-defined property for such identifiers.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":identifier.
    gml__CodeWithAuthorityType*          identifier                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The gml:name property provides a label or identifier for the object, commonly a descriptive name. An object may have several names, typically assigned by different authorities. gml:name uses the gml:CodeType content model. The authority for a name is indicated by the value of its (optional) codeSpace attribute. The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace. In common usage there will be one name per authority, so a processing application may select the name from its preferred codeSpace.
/// </BLOCKQUOTE></PRE>
/// Vector of gml__CodeType* element refs of length 0..unbounded.
    std::vector<gml__CodeType*         > name                           0;
//  END OF GROUP
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":id.
/// <PRE><BLOCKQUOTE>
///   The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.
/// </BLOCKQUOTE></PRE>
   @xsd__ID*                             gml__id                        0;	///< Optional attribute.
    END OF INHERITED FROM gml__AbstractGMLType */
/*  INHERITED FROM gml__AbstractTopologyType:
    END OF INHERITED FROM gml__AbstractTopologyType */
/*  INHERITED FROM gml__AbstractTopoPrimitiveType:
    END OF INHERITED FROM gml__AbstractTopoPrimitiveType */
/// Element "container" of XSD type "http://www.opengis.net/gml/3.2":TopoSolidPropertyType.
    gml__TopoSolidPropertyType*          container                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   A gml:directedNode property element describes the boundary of topology edges and is used in the support of topological point features via the gml:TopoPoint expression, see below. The orientation attribute of type gml:SignType expresses the sense in which the included node is used: start ("-") or end ("+") node.
/// </BLOCKQUOTE></PRE>
/// Vector of gml__DirectedNodePropertyType* element refs of length 2..2.
    std::vector<gml__DirectedNodePropertyType*> directedNode                   2:2;
/// <PRE><BLOCKQUOTE>
///   The gml:directedFace property element describes the boundary of topology solids, in the coBoundary of topology edges and is used in the support of surface features via the gml:TopoSurface expression, see below. The orientation attribute of type gml:SignType expresses the sense in which the included face is used i.e. inward or outward with respect to the surface normal in any geometric realisation.
/// </BLOCKQUOTE></PRE>
/// Vector of gml__DirectedFacePropertyType* element refs of length 0..unbounded.
    std::vector<gml__DirectedFacePropertyType*> directedFace                   0;
/// <PRE><BLOCKQUOTE>
///   This property element either references a curve via the XLink-attributes or contains the curve element. curveProperty is the predefined property which may be used by GML Application Schemas whenever a GML feature has a property with a value that is substitutable for AbstractCurve.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":curveProperty.
    gml__CurvePropertyType*              curveProperty                  0;	///< Optional element.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":AggregationAttributeGroup">.
/// Attribute "aggregationType" of XSD type "http://www.opengis.net/gml/3.2":AggregationType.
   @enum gml__AggregationType*           aggregationType                0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.opengis.net/gml/3.2":FaceType is a complexType with complexContent extension of XSD type "http://www.opengis.net/gml/3.2":AbstractTopoPrimitiveType.
///
/// class gml__FaceType operations:
/// - gml__FaceType* soap_new_gml__FaceType(soap*) allocate and default initialize
/// - gml__FaceType* soap_new_gml__FaceType(soap*, int num) allocate array and default initialize values
/// - gml__FaceType* soap_new_req_gml__FaceType(soap*, ...) allocate, set required members
/// - gml__FaceType* soap_new_set_gml__FaceType(soap*, ...) allocate, set all public members
/// - gml__FaceType::soap_default(soap*) default initialize members
/// - int soap_read_gml__FaceType(soap*, gml__FaceType*) deserialize from a stream
/// - int soap_write_gml__FaceType(soap*, gml__FaceType*) serialize to a stream
/// - gml__FaceType* gml__FaceType::soap_dup(soap*) returns deep copy of gml__FaceType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__FaceType::soap_del() deep deletes gml__FaceType data members, use only after gml__FaceType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__FaceType : public gml__AbstractTopoPrimitiveType
{ public:
/*  INHERITED FROM gml__AbstractGMLType:
//  BEGIN GROUP <xs:group name="StandardObjectProperties">
/// Vector of gml__MetaDataPropertyType* element refs of length 0..unbounded.
    std::vector<gml__MetaDataPropertyType*> metaDataProperty               0;
/// <PRE><BLOCKQUOTE>
///   The value of this property is a text description of the object. gml:description uses gml:StringOrRefType as its content model, so it may contain a simple text string content, or carry a reference to an external description. The use of gml:description to reference an external description has been deprecated and replaced by the gml:descriptionReference property.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":description.
    gml__StringOrRefType*                description                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The value of this property is a remote text description of the object. The xlink:href attribute of the gml:descriptionReference property references the external description.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":descriptionReference.
    gml__ReferenceType*                  descriptionReference           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Often, a special identifier is assigned to an object by the maintaining authority with the intention that it is used in references to the object For such cases, the codeSpace shall be provided. That identifier is usually unique either globally or within an application domain. gml:identifier is a pre-defined property for such identifiers.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":identifier.
    gml__CodeWithAuthorityType*          identifier                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The gml:name property provides a label or identifier for the object, commonly a descriptive name. An object may have several names, typically assigned by different authorities. gml:name uses the gml:CodeType content model. The authority for a name is indicated by the value of its (optional) codeSpace attribute. The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace. In common usage there will be one name per authority, so a processing application may select the name from its preferred codeSpace.
/// </BLOCKQUOTE></PRE>
/// Vector of gml__CodeType* element refs of length 0..unbounded.
    std::vector<gml__CodeType*         > name                           0;
//  END OF GROUP
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":id.
/// <PRE><BLOCKQUOTE>
///   The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.
/// </BLOCKQUOTE></PRE>
   @xsd__ID*                             gml__id                        0;	///< Optional attribute.
    END OF INHERITED FROM gml__AbstractGMLType */
/*  INHERITED FROM gml__AbstractTopologyType:
    END OF INHERITED FROM gml__AbstractTopologyType */
/*  INHERITED FROM gml__AbstractTopoPrimitiveType:
    END OF INHERITED FROM gml__AbstractTopoPrimitiveType */
/// Vector of gml__NodePropertyType* of length 0..unbounded.
    std::vector<gml__NodePropertyType* > isolated                       0;
/// <PRE><BLOCKQUOTE>
///   A gml:directedEdge property element describes the boundary of topology faces, the coBoundary of topology nodes and is used in the support of topological line features via the gml:TopoCurve expression, see below. The orientation attribute of type gml:SignType expresses the sense in which the included edge is used, i.e. forward or reverse.
/// </BLOCKQUOTE></PRE>
/// Vector of gml__DirectedEdgePropertyType* element refs of length 1..unbounded.
    std::vector<gml__DirectedEdgePropertyType*> directedEdge                   1;
/// <PRE><BLOCKQUOTE>
///   The gml:directedSolid property element describes the coBoundary of topology faces and is used in the support of volume features via the gml:TopoVolume expression, see below. The orientation attribute of type gml:SignType expresses the sense in which the included solid appears in the face coboundary. In the context of a gml:TopoVolume the orientation attribute has no meaning.
/// </BLOCKQUOTE></PRE>
/// Vector of gml__DirectedTopoSolidPropertyType* element refs of length 0..2.
    std::vector<gml__DirectedTopoSolidPropertyType*> directedTopoSolid              0:2;
/// <PRE><BLOCKQUOTE>
///   This property element either references a surface via the XLink-attributes or contains the surface element. surfaceProperty is the predefined property which may be used by GML Application Schemas whenever a GML feature has a property with a value that is substitutable for AbstractSurface.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":surfaceProperty.
    gml__SurfacePropertyType*            surfaceProperty                0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   If the topological representation exists an unbounded manifold (e.g. Euclidean plane), a gml:Face must indicate whether it is a universal face or not, to ensure a lossless topology representation as defined by Kuijpers, et. al. (see OGC 05-102 Topology IPR). The optional universal attribute of type boolean is used to indicate this. NOTE The universal face is normally not part of any feature, and is used to represent the unbounded portion of the data set. Its interior boundary (it has no exterior boundary) would normally be considered the exterior boundary of the map represented by the data set.
/// </BLOCKQUOTE></PRE>
/// Attribute "universal" of XSD type xs:boolean.
   @bool                                 universal                      0 = false;	///< Default attribute value="false".
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":AggregationAttributeGroup">.
/// Attribute "aggregationType" of XSD type "http://www.opengis.net/gml/3.2":AggregationType.
   @enum gml__AggregationType*           aggregationType                0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.opengis.net/gml/3.2":TopoSolidType is a complexType with complexContent extension of XSD type "http://www.opengis.net/gml/3.2":AbstractTopoPrimitiveType.
///
/// class gml__TopoSolidType operations:
/// - gml__TopoSolidType* soap_new_gml__TopoSolidType(soap*) allocate and default initialize
/// - gml__TopoSolidType* soap_new_gml__TopoSolidType(soap*, int num) allocate array and default initialize values
/// - gml__TopoSolidType* soap_new_req_gml__TopoSolidType(soap*, ...) allocate, set required members
/// - gml__TopoSolidType* soap_new_set_gml__TopoSolidType(soap*, ...) allocate, set all public members
/// - gml__TopoSolidType::soap_default(soap*) default initialize members
/// - int soap_read_gml__TopoSolidType(soap*, gml__TopoSolidType*) deserialize from a stream
/// - int soap_write_gml__TopoSolidType(soap*, gml__TopoSolidType*) serialize to a stream
/// - gml__TopoSolidType* gml__TopoSolidType::soap_dup(soap*) returns deep copy of gml__TopoSolidType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__TopoSolidType::soap_del() deep deletes gml__TopoSolidType data members, use only after gml__TopoSolidType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__TopoSolidType : public gml__AbstractTopoPrimitiveType
{ public:
/*  INHERITED FROM gml__AbstractGMLType:
//  BEGIN GROUP <xs:group name="StandardObjectProperties">
/// Vector of gml__MetaDataPropertyType* element refs of length 0..unbounded.
    std::vector<gml__MetaDataPropertyType*> metaDataProperty               0;
/// <PRE><BLOCKQUOTE>
///   The value of this property is a text description of the object. gml:description uses gml:StringOrRefType as its content model, so it may contain a simple text string content, or carry a reference to an external description. The use of gml:description to reference an external description has been deprecated and replaced by the gml:descriptionReference property.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":description.
    gml__StringOrRefType*                description                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The value of this property is a remote text description of the object. The xlink:href attribute of the gml:descriptionReference property references the external description.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":descriptionReference.
    gml__ReferenceType*                  descriptionReference           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Often, a special identifier is assigned to an object by the maintaining authority with the intention that it is used in references to the object For such cases, the codeSpace shall be provided. That identifier is usually unique either globally or within an application domain. gml:identifier is a pre-defined property for such identifiers.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":identifier.
    gml__CodeWithAuthorityType*          identifier                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The gml:name property provides a label or identifier for the object, commonly a descriptive name. An object may have several names, typically assigned by different authorities. gml:name uses the gml:CodeType content model. The authority for a name is indicated by the value of its (optional) codeSpace attribute. The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace. In common usage there will be one name per authority, so a processing application may select the name from its preferred codeSpace.
/// </BLOCKQUOTE></PRE>
/// Vector of gml__CodeType* element refs of length 0..unbounded.
    std::vector<gml__CodeType*         > name                           0;
//  END OF GROUP
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":id.
/// <PRE><BLOCKQUOTE>
///   The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.
/// </BLOCKQUOTE></PRE>
   @xsd__ID*                             gml__id                        0;	///< Optional attribute.
    END OF INHERITED FROM gml__AbstractGMLType */
/*  INHERITED FROM gml__AbstractTopologyType:
    END OF INHERITED FROM gml__AbstractTopologyType */
/*  INHERITED FROM gml__AbstractTopoPrimitiveType:
    END OF INHERITED FROM gml__AbstractTopoPrimitiveType */
/// Vector of gml__NodeOrEdgePropertyType* of length 0..unbounded.
    std::vector<gml__NodeOrEdgePropertyType*> isolated                       0;
/// <PRE><BLOCKQUOTE>
///   The gml:directedFace property element describes the boundary of topology solids, in the coBoundary of topology edges and is used in the support of surface features via the gml:TopoSurface expression, see below. The orientation attribute of type gml:SignType expresses the sense in which the included face is used i.e. inward or outward with respect to the surface normal in any geometric realisation.
/// </BLOCKQUOTE></PRE>
/// Vector of gml__DirectedFacePropertyType* element refs of length 1..unbounded.
    std::vector<gml__DirectedFacePropertyType*> directedFace                   1;
/// <PRE><BLOCKQUOTE>
///   This property element either references a solid via the XLink-attributes or contains the solid element. solidProperty is the predefined property which may be used by GML Application Schemas whenever a GML feature has a property with a value that is substitutable for AbstractSolid.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":solidProperty.
    gml__SolidPropertyType*              solidProperty                  0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   A gml:TopoSolid must indicate whether it is a universal topo-solid or not, to ensure a lossless topology representation as defined by Kuijpers, et. al. (see OGC 05-102 Topology IPR). The optional universal attribute of type boolean is used to indicate this and the default is fault. NOTE The universal topo-solid is normally not part of any feature, and is used to represent the unbounded portion of the data set. Its interior boundary (it has no exterior boundary) would normally be considered the exterior boundary of the data set.
/// </BLOCKQUOTE></PRE>
/// Attribute "universal" of XSD type xs:boolean.
   @bool                                 universal                      0 = false;	///< Default attribute value="false".
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":AggregationAttributeGroup">.
/// Attribute "aggregationType" of XSD type "http://www.opengis.net/gml/3.2":AggregationType.
   @enum gml__AggregationType*           aggregationType                0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.opengis.net/gml/3.2":MultiGeometryType is a complexType with complexContent extension of XSD type "http://www.opengis.net/gml/3.2":AbstractGeometricAggregateType.
///
/// class gml__MultiGeometryType operations:
/// - gml__MultiGeometryType* soap_new_gml__MultiGeometryType(soap*) allocate and default initialize
/// - gml__MultiGeometryType* soap_new_gml__MultiGeometryType(soap*, int num) allocate array and default initialize values
/// - gml__MultiGeometryType* soap_new_req_gml__MultiGeometryType(soap*, ...) allocate, set required members
/// - gml__MultiGeometryType* soap_new_set_gml__MultiGeometryType(soap*, ...) allocate, set all public members
/// - gml__MultiGeometryType::soap_default(soap*) default initialize members
/// - int soap_read_gml__MultiGeometryType(soap*, gml__MultiGeometryType*) deserialize from a stream
/// - int soap_write_gml__MultiGeometryType(soap*, gml__MultiGeometryType*) serialize to a stream
/// - gml__MultiGeometryType* gml__MultiGeometryType::soap_dup(soap*) returns deep copy of gml__MultiGeometryType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__MultiGeometryType::soap_del() deep deletes gml__MultiGeometryType data members, use only after gml__MultiGeometryType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__MultiGeometryType : public gml__AbstractGeometricAggregateType
{ public:
/*  INHERITED FROM gml__AbstractGMLType:
//  BEGIN GROUP <xs:group name="StandardObjectProperties">
/// Vector of gml__MetaDataPropertyType* element refs of length 0..unbounded.
    std::vector<gml__MetaDataPropertyType*> metaDataProperty               0;
/// <PRE><BLOCKQUOTE>
///   The value of this property is a text description of the object. gml:description uses gml:StringOrRefType as its content model, so it may contain a simple text string content, or carry a reference to an external description. The use of gml:description to reference an external description has been deprecated and replaced by the gml:descriptionReference property.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":description.
    gml__StringOrRefType*                description                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The value of this property is a remote text description of the object. The xlink:href attribute of the gml:descriptionReference property references the external description.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":descriptionReference.
    gml__ReferenceType*                  descriptionReference           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Often, a special identifier is assigned to an object by the maintaining authority with the intention that it is used in references to the object For such cases, the codeSpace shall be provided. That identifier is usually unique either globally or within an application domain. gml:identifier is a pre-defined property for such identifiers.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":identifier.
    gml__CodeWithAuthorityType*          identifier                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The gml:name property provides a label or identifier for the object, commonly a descriptive name. An object may have several names, typically assigned by different authorities. gml:name uses the gml:CodeType content model. The authority for a name is indicated by the value of its (optional) codeSpace attribute. The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace. In common usage there will be one name per authority, so a processing application may select the name from its preferred codeSpace.
/// </BLOCKQUOTE></PRE>
/// Vector of gml__CodeType* element refs of length 0..unbounded.
    std::vector<gml__CodeType*         > name                           0;
//  END OF GROUP
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":id.
/// <PRE><BLOCKQUOTE>
///   The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.
/// </BLOCKQUOTE></PRE>
   @xsd__ID*                             gml__id                        0;	///< Optional attribute.
    END OF INHERITED FROM gml__AbstractGMLType */
/*  INHERITED FROM gml__AbstractGeometryType:
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":SRSReferenceGroup">.
/// Attribute "srsName" of XSD type xs:anyURI.
   @xsd__anyURI*                         srsName                        0;	///< Optional attribute.
/// Attribute "srsDimension" of XSD type xs:positiveInteger.
   @xsd__positiveInteger*                srsDimension                   0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":SRSInformationGroup">.
/// Attribute "axisLabels" of XSD type "http://www.opengis.net/gml/3.2":NCNameList.
   @gml__NCNameList*                     axisLabels                     0;	///< Optional attribute.
/// Attribute "uomLabels" of XSD type "http://www.opengis.net/gml/3.2":NCNameList.
   @gml__NCNameList*                     uomLabels                      0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
    END OF INHERITED FROM gml__AbstractGeometryType */
/*  INHERITED FROM gml__AbstractGeometricAggregateType:
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":AggregationAttributeGroup">.
/// Attribute "aggregationType" of XSD type "http://www.opengis.net/gml/3.2":AggregationType.
   @enum gml__AggregationType*           aggregationType                0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
    END OF INHERITED FROM gml__AbstractGeometricAggregateType */
/// <PRE><BLOCKQUOTE>
///   This property element either references a geometry element via the XLink-attributes or contains the geometry element.
/// </BLOCKQUOTE></PRE>
/// Vector of gml__GeometryPropertyType* element refs of length 0..unbounded.
    std::vector<gml__GeometryPropertyType*> geometryMember                 0;
/// <PRE><BLOCKQUOTE>
///   This property element contains a list of geometry elements. The order of the elements is significant and shall be preserved when processing the array.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":geometryMembers.
    gml__GeometryArrayPropertyType*      geometryMembers                0;	///< Optional element.
};

/// @brief "http://www.opengis.net/gml/3.2":MultiPointType is a complexType with complexContent extension of XSD type "http://www.opengis.net/gml/3.2":AbstractGeometricAggregateType.
///
/// class gml__MultiPointType operations:
/// - gml__MultiPointType* soap_new_gml__MultiPointType(soap*) allocate and default initialize
/// - gml__MultiPointType* soap_new_gml__MultiPointType(soap*, int num) allocate array and default initialize values
/// - gml__MultiPointType* soap_new_req_gml__MultiPointType(soap*, ...) allocate, set required members
/// - gml__MultiPointType* soap_new_set_gml__MultiPointType(soap*, ...) allocate, set all public members
/// - gml__MultiPointType::soap_default(soap*) default initialize members
/// - int soap_read_gml__MultiPointType(soap*, gml__MultiPointType*) deserialize from a stream
/// - int soap_write_gml__MultiPointType(soap*, gml__MultiPointType*) serialize to a stream
/// - gml__MultiPointType* gml__MultiPointType::soap_dup(soap*) returns deep copy of gml__MultiPointType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__MultiPointType::soap_del() deep deletes gml__MultiPointType data members, use only after gml__MultiPointType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__MultiPointType : public gml__AbstractGeometricAggregateType
{ public:
/*  INHERITED FROM gml__AbstractGMLType:
//  BEGIN GROUP <xs:group name="StandardObjectProperties">
/// Vector of gml__MetaDataPropertyType* element refs of length 0..unbounded.
    std::vector<gml__MetaDataPropertyType*> metaDataProperty               0;
/// <PRE><BLOCKQUOTE>
///   The value of this property is a text description of the object. gml:description uses gml:StringOrRefType as its content model, so it may contain a simple text string content, or carry a reference to an external description. The use of gml:description to reference an external description has been deprecated and replaced by the gml:descriptionReference property.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":description.
    gml__StringOrRefType*                description                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The value of this property is a remote text description of the object. The xlink:href attribute of the gml:descriptionReference property references the external description.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":descriptionReference.
    gml__ReferenceType*                  descriptionReference           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Often, a special identifier is assigned to an object by the maintaining authority with the intention that it is used in references to the object For such cases, the codeSpace shall be provided. That identifier is usually unique either globally or within an application domain. gml:identifier is a pre-defined property for such identifiers.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":identifier.
    gml__CodeWithAuthorityType*          identifier                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The gml:name property provides a label or identifier for the object, commonly a descriptive name. An object may have several names, typically assigned by different authorities. gml:name uses the gml:CodeType content model. The authority for a name is indicated by the value of its (optional) codeSpace attribute. The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace. In common usage there will be one name per authority, so a processing application may select the name from its preferred codeSpace.
/// </BLOCKQUOTE></PRE>
/// Vector of gml__CodeType* element refs of length 0..unbounded.
    std::vector<gml__CodeType*         > name                           0;
//  END OF GROUP
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":id.
/// <PRE><BLOCKQUOTE>
///   The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.
/// </BLOCKQUOTE></PRE>
   @xsd__ID*                             gml__id                        0;	///< Optional attribute.
    END OF INHERITED FROM gml__AbstractGMLType */
/*  INHERITED FROM gml__AbstractGeometryType:
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":SRSReferenceGroup">.
/// Attribute "srsName" of XSD type xs:anyURI.
   @xsd__anyURI*                         srsName                        0;	///< Optional attribute.
/// Attribute "srsDimension" of XSD type xs:positiveInteger.
   @xsd__positiveInteger*                srsDimension                   0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":SRSInformationGroup">.
/// Attribute "axisLabels" of XSD type "http://www.opengis.net/gml/3.2":NCNameList.
   @gml__NCNameList*                     axisLabels                     0;	///< Optional attribute.
/// Attribute "uomLabels" of XSD type "http://www.opengis.net/gml/3.2":NCNameList.
   @gml__NCNameList*                     uomLabels                      0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
    END OF INHERITED FROM gml__AbstractGeometryType */
/*  INHERITED FROM gml__AbstractGeometricAggregateType:
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":AggregationAttributeGroup">.
/// Attribute "aggregationType" of XSD type "http://www.opengis.net/gml/3.2":AggregationType.
   @enum gml__AggregationType*           aggregationType                0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
    END OF INHERITED FROM gml__AbstractGeometricAggregateType */
/// <PRE><BLOCKQUOTE>
///   This property element either references a Point via the XLink-attributes or contains the Point element.
/// </BLOCKQUOTE></PRE>
/// Vector of gml__PointPropertyType* element refs of length 0..unbounded.
    std::vector<gml__PointPropertyType*> pointMember                    0;
/// <PRE><BLOCKQUOTE>
///   This property element contains a list of points. The order of the elements is significant and shall be preserved when processing the array.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":pointMembers.
    gml__PointArrayPropertyType*         pointMembers                   0;	///< Optional element.
};

/// @brief "http://www.opengis.net/gml/3.2":MultiCurveType is a complexType with complexContent extension of XSD type "http://www.opengis.net/gml/3.2":AbstractGeometricAggregateType.
///
/// class gml__MultiCurveType operations:
/// - gml__MultiCurveType* soap_new_gml__MultiCurveType(soap*) allocate and default initialize
/// - gml__MultiCurveType* soap_new_gml__MultiCurveType(soap*, int num) allocate array and default initialize values
/// - gml__MultiCurveType* soap_new_req_gml__MultiCurveType(soap*, ...) allocate, set required members
/// - gml__MultiCurveType* soap_new_set_gml__MultiCurveType(soap*, ...) allocate, set all public members
/// - gml__MultiCurveType::soap_default(soap*) default initialize members
/// - int soap_read_gml__MultiCurveType(soap*, gml__MultiCurveType*) deserialize from a stream
/// - int soap_write_gml__MultiCurveType(soap*, gml__MultiCurveType*) serialize to a stream
/// - gml__MultiCurveType* gml__MultiCurveType::soap_dup(soap*) returns deep copy of gml__MultiCurveType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__MultiCurveType::soap_del() deep deletes gml__MultiCurveType data members, use only after gml__MultiCurveType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__MultiCurveType : public gml__AbstractGeometricAggregateType
{ public:
/*  INHERITED FROM gml__AbstractGMLType:
//  BEGIN GROUP <xs:group name="StandardObjectProperties">
/// Vector of gml__MetaDataPropertyType* element refs of length 0..unbounded.
    std::vector<gml__MetaDataPropertyType*> metaDataProperty               0;
/// <PRE><BLOCKQUOTE>
///   The value of this property is a text description of the object. gml:description uses gml:StringOrRefType as its content model, so it may contain a simple text string content, or carry a reference to an external description. The use of gml:description to reference an external description has been deprecated and replaced by the gml:descriptionReference property.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":description.
    gml__StringOrRefType*                description                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The value of this property is a remote text description of the object. The xlink:href attribute of the gml:descriptionReference property references the external description.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":descriptionReference.
    gml__ReferenceType*                  descriptionReference           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Often, a special identifier is assigned to an object by the maintaining authority with the intention that it is used in references to the object For such cases, the codeSpace shall be provided. That identifier is usually unique either globally or within an application domain. gml:identifier is a pre-defined property for such identifiers.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":identifier.
    gml__CodeWithAuthorityType*          identifier                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The gml:name property provides a label or identifier for the object, commonly a descriptive name. An object may have several names, typically assigned by different authorities. gml:name uses the gml:CodeType content model. The authority for a name is indicated by the value of its (optional) codeSpace attribute. The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace. In common usage there will be one name per authority, so a processing application may select the name from its preferred codeSpace.
/// </BLOCKQUOTE></PRE>
/// Vector of gml__CodeType* element refs of length 0..unbounded.
    std::vector<gml__CodeType*         > name                           0;
//  END OF GROUP
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":id.
/// <PRE><BLOCKQUOTE>
///   The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.
/// </BLOCKQUOTE></PRE>
   @xsd__ID*                             gml__id                        0;	///< Optional attribute.
    END OF INHERITED FROM gml__AbstractGMLType */
/*  INHERITED FROM gml__AbstractGeometryType:
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":SRSReferenceGroup">.
/// Attribute "srsName" of XSD type xs:anyURI.
   @xsd__anyURI*                         srsName                        0;	///< Optional attribute.
/// Attribute "srsDimension" of XSD type xs:positiveInteger.
   @xsd__positiveInteger*                srsDimension                   0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":SRSInformationGroup">.
/// Attribute "axisLabels" of XSD type "http://www.opengis.net/gml/3.2":NCNameList.
   @gml__NCNameList*                     axisLabels                     0;	///< Optional attribute.
/// Attribute "uomLabels" of XSD type "http://www.opengis.net/gml/3.2":NCNameList.
   @gml__NCNameList*                     uomLabels                      0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
    END OF INHERITED FROM gml__AbstractGeometryType */
/*  INHERITED FROM gml__AbstractGeometricAggregateType:
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":AggregationAttributeGroup">.
/// Attribute "aggregationType" of XSD type "http://www.opengis.net/gml/3.2":AggregationType.
   @enum gml__AggregationType*           aggregationType                0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
    END OF INHERITED FROM gml__AbstractGeometricAggregateType */
/// Vector of gml__CurvePropertyType* element refs of length 0..unbounded.
    std::vector<gml__CurvePropertyType*> curveMember                    0;
/// <PRE><BLOCKQUOTE>
///   This property element contains a list of curves. The order of the elements is significant and shall be preserved when processing the array.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":curveMembers.
    gml__CurveArrayPropertyType*         curveMembers                   0;	///< Optional element.
};

/// @brief "http://www.opengis.net/gml/3.2":MultiSurfaceType is a complexType with complexContent extension of XSD type "http://www.opengis.net/gml/3.2":AbstractGeometricAggregateType.
///
/// class gml__MultiSurfaceType operations:
/// - gml__MultiSurfaceType* soap_new_gml__MultiSurfaceType(soap*) allocate and default initialize
/// - gml__MultiSurfaceType* soap_new_gml__MultiSurfaceType(soap*, int num) allocate array and default initialize values
/// - gml__MultiSurfaceType* soap_new_req_gml__MultiSurfaceType(soap*, ...) allocate, set required members
/// - gml__MultiSurfaceType* soap_new_set_gml__MultiSurfaceType(soap*, ...) allocate, set all public members
/// - gml__MultiSurfaceType::soap_default(soap*) default initialize members
/// - int soap_read_gml__MultiSurfaceType(soap*, gml__MultiSurfaceType*) deserialize from a stream
/// - int soap_write_gml__MultiSurfaceType(soap*, gml__MultiSurfaceType*) serialize to a stream
/// - gml__MultiSurfaceType* gml__MultiSurfaceType::soap_dup(soap*) returns deep copy of gml__MultiSurfaceType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__MultiSurfaceType::soap_del() deep deletes gml__MultiSurfaceType data members, use only after gml__MultiSurfaceType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__MultiSurfaceType : public gml__AbstractGeometricAggregateType
{ public:
/*  INHERITED FROM gml__AbstractGMLType:
//  BEGIN GROUP <xs:group name="StandardObjectProperties">
/// Vector of gml__MetaDataPropertyType* element refs of length 0..unbounded.
    std::vector<gml__MetaDataPropertyType*> metaDataProperty               0;
/// <PRE><BLOCKQUOTE>
///   The value of this property is a text description of the object. gml:description uses gml:StringOrRefType as its content model, so it may contain a simple text string content, or carry a reference to an external description. The use of gml:description to reference an external description has been deprecated and replaced by the gml:descriptionReference property.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":description.
    gml__StringOrRefType*                description                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The value of this property is a remote text description of the object. The xlink:href attribute of the gml:descriptionReference property references the external description.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":descriptionReference.
    gml__ReferenceType*                  descriptionReference           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Often, a special identifier is assigned to an object by the maintaining authority with the intention that it is used in references to the object For such cases, the codeSpace shall be provided. That identifier is usually unique either globally or within an application domain. gml:identifier is a pre-defined property for such identifiers.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":identifier.
    gml__CodeWithAuthorityType*          identifier                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The gml:name property provides a label or identifier for the object, commonly a descriptive name. An object may have several names, typically assigned by different authorities. gml:name uses the gml:CodeType content model. The authority for a name is indicated by the value of its (optional) codeSpace attribute. The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace. In common usage there will be one name per authority, so a processing application may select the name from its preferred codeSpace.
/// </BLOCKQUOTE></PRE>
/// Vector of gml__CodeType* element refs of length 0..unbounded.
    std::vector<gml__CodeType*         > name                           0;
//  END OF GROUP
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":id.
/// <PRE><BLOCKQUOTE>
///   The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.
/// </BLOCKQUOTE></PRE>
   @xsd__ID*                             gml__id                        0;	///< Optional attribute.
    END OF INHERITED FROM gml__AbstractGMLType */
/*  INHERITED FROM gml__AbstractGeometryType:
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":SRSReferenceGroup">.
/// Attribute "srsName" of XSD type xs:anyURI.
   @xsd__anyURI*                         srsName                        0;	///< Optional attribute.
/// Attribute "srsDimension" of XSD type xs:positiveInteger.
   @xsd__positiveInteger*                srsDimension                   0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":SRSInformationGroup">.
/// Attribute "axisLabels" of XSD type "http://www.opengis.net/gml/3.2":NCNameList.
   @gml__NCNameList*                     axisLabels                     0;	///< Optional attribute.
/// Attribute "uomLabels" of XSD type "http://www.opengis.net/gml/3.2":NCNameList.
   @gml__NCNameList*                     uomLabels                      0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
    END OF INHERITED FROM gml__AbstractGeometryType */
/*  INHERITED FROM gml__AbstractGeometricAggregateType:
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":AggregationAttributeGroup">.
/// Attribute "aggregationType" of XSD type "http://www.opengis.net/gml/3.2":AggregationType.
   @enum gml__AggregationType*           aggregationType                0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
    END OF INHERITED FROM gml__AbstractGeometricAggregateType */
/// <PRE><BLOCKQUOTE>
///   This property element either references a surface via the XLink-attributes or contains the surface element. A surface element is any element, which is substitutable for gml:AbstractSurface.
/// </BLOCKQUOTE></PRE>
/// Vector of gml__SurfacePropertyType* element refs of length 0..unbounded.
    std::vector<gml__SurfacePropertyType*> surfaceMember                  0;
/// <PRE><BLOCKQUOTE>
///   This property element contains a list of surfaces. The order of the elements is significant and shall be preserved when processing the array.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":surfaceMembers.
    gml__SurfaceArrayPropertyType*       surfaceMembers                 0;	///< Optional element.
};

/// @brief "http://www.opengis.net/gml/3.2":MultiSolidType is a complexType with complexContent extension of XSD type "http://www.opengis.net/gml/3.2":AbstractGeometricAggregateType.
///
/// class gml__MultiSolidType operations:
/// - gml__MultiSolidType* soap_new_gml__MultiSolidType(soap*) allocate and default initialize
/// - gml__MultiSolidType* soap_new_gml__MultiSolidType(soap*, int num) allocate array and default initialize values
/// - gml__MultiSolidType* soap_new_req_gml__MultiSolidType(soap*, ...) allocate, set required members
/// - gml__MultiSolidType* soap_new_set_gml__MultiSolidType(soap*, ...) allocate, set all public members
/// - gml__MultiSolidType::soap_default(soap*) default initialize members
/// - int soap_read_gml__MultiSolidType(soap*, gml__MultiSolidType*) deserialize from a stream
/// - int soap_write_gml__MultiSolidType(soap*, gml__MultiSolidType*) serialize to a stream
/// - gml__MultiSolidType* gml__MultiSolidType::soap_dup(soap*) returns deep copy of gml__MultiSolidType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__MultiSolidType::soap_del() deep deletes gml__MultiSolidType data members, use only after gml__MultiSolidType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__MultiSolidType : public gml__AbstractGeometricAggregateType
{ public:
/*  INHERITED FROM gml__AbstractGMLType:
//  BEGIN GROUP <xs:group name="StandardObjectProperties">
/// Vector of gml__MetaDataPropertyType* element refs of length 0..unbounded.
    std::vector<gml__MetaDataPropertyType*> metaDataProperty               0;
/// <PRE><BLOCKQUOTE>
///   The value of this property is a text description of the object. gml:description uses gml:StringOrRefType as its content model, so it may contain a simple text string content, or carry a reference to an external description. The use of gml:description to reference an external description has been deprecated and replaced by the gml:descriptionReference property.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":description.
    gml__StringOrRefType*                description                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The value of this property is a remote text description of the object. The xlink:href attribute of the gml:descriptionReference property references the external description.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":descriptionReference.
    gml__ReferenceType*                  descriptionReference           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Often, a special identifier is assigned to an object by the maintaining authority with the intention that it is used in references to the object For such cases, the codeSpace shall be provided. That identifier is usually unique either globally or within an application domain. gml:identifier is a pre-defined property for such identifiers.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":identifier.
    gml__CodeWithAuthorityType*          identifier                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The gml:name property provides a label or identifier for the object, commonly a descriptive name. An object may have several names, typically assigned by different authorities. gml:name uses the gml:CodeType content model. The authority for a name is indicated by the value of its (optional) codeSpace attribute. The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace. In common usage there will be one name per authority, so a processing application may select the name from its preferred codeSpace.
/// </BLOCKQUOTE></PRE>
/// Vector of gml__CodeType* element refs of length 0..unbounded.
    std::vector<gml__CodeType*         > name                           0;
//  END OF GROUP
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":id.
/// <PRE><BLOCKQUOTE>
///   The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.
/// </BLOCKQUOTE></PRE>
   @xsd__ID*                             gml__id                        0;	///< Optional attribute.
    END OF INHERITED FROM gml__AbstractGMLType */
/*  INHERITED FROM gml__AbstractGeometryType:
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":SRSReferenceGroup">.
/// Attribute "srsName" of XSD type xs:anyURI.
   @xsd__anyURI*                         srsName                        0;	///< Optional attribute.
/// Attribute "srsDimension" of XSD type xs:positiveInteger.
   @xsd__positiveInteger*                srsDimension                   0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":SRSInformationGroup">.
/// Attribute "axisLabels" of XSD type "http://www.opengis.net/gml/3.2":NCNameList.
   @gml__NCNameList*                     axisLabels                     0;	///< Optional attribute.
/// Attribute "uomLabels" of XSD type "http://www.opengis.net/gml/3.2":NCNameList.
   @gml__NCNameList*                     uomLabels                      0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
    END OF INHERITED FROM gml__AbstractGeometryType */
/*  INHERITED FROM gml__AbstractGeometricAggregateType:
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":AggregationAttributeGroup">.
/// Attribute "aggregationType" of XSD type "http://www.opengis.net/gml/3.2":AggregationType.
   @enum gml__AggregationType*           aggregationType                0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
    END OF INHERITED FROM gml__AbstractGeometricAggregateType */
/// <PRE><BLOCKQUOTE>
///   This property element either references a solid via the XLink-attributes or contains the solid element. A solid element is any element, which is substitutable for gml:AbstractSolid.
/// </BLOCKQUOTE></PRE>
/// Vector of gml__SolidPropertyType* element refs of length 0..unbounded.
    std::vector<gml__SolidPropertyType*> solidMember                    0;
/// <PRE><BLOCKQUOTE>
///   This property element contains a list of solids. The order of the elements is significant and shall be preserved when processing the array.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":solidMembers.
    gml__SolidArrayPropertyType*         solidMembers                   0;	///< Optional element.
};

/// @brief "http://www.opengis.net/gml/3.2":CircleType is a complexType with complexContent extension of XSD type "http://www.opengis.net/gml/3.2":ArcType.
///
/// class gml__CircleType operations:
/// - gml__CircleType* soap_new_gml__CircleType(soap*) allocate and default initialize
/// - gml__CircleType* soap_new_gml__CircleType(soap*, int num) allocate array and default initialize values
/// - gml__CircleType* soap_new_req_gml__CircleType(soap*, ...) allocate, set required members
/// - gml__CircleType* soap_new_set_gml__CircleType(soap*, ...) allocate, set all public members
/// - gml__CircleType::soap_default(soap*) default initialize members
/// - int soap_read_gml__CircleType(soap*, gml__CircleType*) deserialize from a stream
/// - int soap_write_gml__CircleType(soap*, gml__CircleType*) serialize to a stream
/// - gml__CircleType* gml__CircleType::soap_dup(soap*) returns deep copy of gml__CircleType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__CircleType::soap_del() deep deletes gml__CircleType data members, use only after gml__CircleType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__CircleType : public gml__ArcType
{ public:
/*  INHERITED FROM gml__ArcType:
    END OF INHERITED FROM gml__ArcType */
};

/// @brief "http://www.opengis.net/gml/3.2":ConeType is a complexType with complexContent extension of XSD type "http://www.opengis.net/gml/3.2":AbstractGriddedSurfaceType.
///
/// class gml__ConeType operations:
/// - gml__ConeType* soap_new_gml__ConeType(soap*) allocate and default initialize
/// - gml__ConeType* soap_new_gml__ConeType(soap*, int num) allocate array and default initialize values
/// - gml__ConeType* soap_new_req_gml__ConeType(soap*, ...) allocate, set required members
/// - gml__ConeType* soap_new_set_gml__ConeType(soap*, ...) allocate, set all public members
/// - gml__ConeType::soap_default(soap*) default initialize members
/// - int soap_read_gml__ConeType(soap*, gml__ConeType*) deserialize from a stream
/// - int soap_write_gml__ConeType(soap*, gml__ConeType*) serialize to a stream
/// - gml__ConeType* gml__ConeType::soap_dup(soap*) returns deep copy of gml__ConeType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__ConeType::soap_del() deep deletes gml__ConeType data members, use only after gml__ConeType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__ConeType : public gml__AbstractGriddedSurfaceType
{ public:
/*  INHERITED FROM gml__AbstractSurfacePatchType:
    END OF INHERITED FROM gml__AbstractSurfacePatchType */
/*  INHERITED FROM gml__AbstractParametricCurveSurfaceType:
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":AggregationAttributeGroup">.
/// Attribute "aggregationType" of XSD type "http://www.opengis.net/gml/3.2":AggregationType.
   @enum gml__AggregationType*           aggregationType                0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
    END OF INHERITED FROM gml__AbstractParametricCurveSurfaceType */
/*  INHERITED FROM gml__AbstractGriddedSurfaceType:
//  BEGIN GROUP <xs:group name="PointGrid">
/// <PRE><BLOCKQUOTE>
///   A gml:PointGrid group contains or references points or positions which are organised into sequences or grids. All rows shall have the same number of positions (columns).
/// </BLOCKQUOTE></PRE>
/// class _gml__ConeType_rows operations:
/// - _gml__ConeType_rows* soap_new__gml__ConeType_rows(soap*) allocate and default initialize
/// - _gml__ConeType_rows* soap_new__gml__ConeType_rows(soap*, int num) allocate array and default initialize values
/// - _gml__ConeType_rows* soap_new_req__gml__ConeType_rows(soap*, ...) allocate, set required members
/// - _gml__ConeType_rows* soap_new_set__gml__ConeType_rows(soap*, ...) allocate, set all public members
/// - _gml__ConeType_rows::soap_default(soap*) default initialize members
/// - int soap_read__gml__ConeType_rows(soap*, _gml__ConeType_rows*) deserialize from a stream
/// - int soap_write__gml__ConeType_rows(soap*, _gml__ConeType_rows*) serialize to a stream
/// - _gml__ConeType_rows* _gml__ConeType_rows::soap_dup(soap*) returns deep copy of _gml__ConeType_rows, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _gml__ConeType_rows::soap_del() deep deletes _gml__ConeType_rows data members, use only after _gml__ConeType_rows::soap_dup(NULL) (use soapcpp2 -Ed)
    class _gml__ConeType_rows
    {
/// Vector of Row of length 1..unbounded.
    std::vector<
/// class _gml__ConeType_rows_Row operations:
/// - _gml__ConeType_rows_Row* soap_new__gml__ConeType_rows_Row(soap*) allocate and default initialize
/// - _gml__ConeType_rows_Row* soap_new__gml__ConeType_rows_Row(soap*, int num) allocate array and default initialize values
/// - _gml__ConeType_rows_Row* soap_new_req__gml__ConeType_rows_Row(soap*, ...) allocate, set required members
/// - _gml__ConeType_rows_Row* soap_new_set__gml__ConeType_rows_Row(soap*, ...) allocate, set all public members
/// - _gml__ConeType_rows_Row::soap_default(soap*) default initialize members
/// - int soap_read__gml__ConeType_rows_Row(soap*, _gml__ConeType_rows_Row*) deserialize from a stream
/// - int soap_write__gml__ConeType_rows_Row(soap*, _gml__ConeType_rows_Row*) serialize to a stream
/// - _gml__ConeType_rows_Row* _gml__ConeType_rows_Row::soap_dup(soap*) returns deep copy of _gml__ConeType_rows_Row, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _gml__ConeType_rows_Row::soap_del() deep deletes _gml__ConeType_rows_Row data members, use only after _gml__ConeType_rows_Row::soap_dup(NULL) (use soapcpp2 -Ed)
    class _gml__ConeType_rows_Row
    {
//  BEGIN GROUP <xs:group name="geometricPositionListGroup">
/// <PRE><BLOCKQUOTE>
///   GML supports two different ways to specify a list of geometric positions: either by a sequence of geometric positions (by reusing the group definition) or a sequence of direct positions (element posList). The posList element allows for a compact way to specify the coordinates of the positions, if all positions are represented in the same coordinate reference system.
/// </BLOCKQUOTE></PRE>
//  BEGIN CHOICE <xs:choice>
/// @note <xs:choice> with embedded <xs:sequence> or <xs:group> prevents the use of a union for <xs:choice>. Instead of being members of a union, the following members are declared optional. Only one member should be non-NULL by choice.
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":posList.
    gml__DirectPositionListType*         posList                        nullptr;	///< Required nillable (xsi:nil when NULL) element.
//  BEGIN GROUP <xs:group name="geometricPositionGroup" maxOccurs="unbounded">
/// <PRE><BLOCKQUOTE>
///   GML supports two different ways to specify a geometric position: either by a direct position (a data type) or a point (a geometric object).
///   pos elements are positions that are "owned" by the geometric primitive encapsulating this geometric position.
///   pointProperty elements contain a point that may be referenced from other geometry elements or reference another point defined elsewhere (reuse of existing points).
/// </BLOCKQUOTE></PRE>
//  BEGIN CHOICE <xs:choice maxOccurs="unbounded">
   $int                                  __size_ConeType_rows_Row_      0;
    class __gml__union_ConeType_rows_Row_
    {
   $int                                  __union_ConeType_rows_Row_    ;	///< Union _gml__union_ConeType_rows_Row_ selector: set to SOAP_UNION__gml__union_ConeType_rows_Row__<fieldname>
    union _gml__union_ConeType_rows_Row_
    {
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":pos.
    gml__DirectPositionType*             pos                            nullptr;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   This property element either references a point via the XLink-attributes or contains the point element. pointProperty is the predefined property which may be used by GML Application Schemas whenever a GML feature has a property with a value that is substitutable for Point.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":pointProperty.
    gml__PointPropertyType*              pointProperty                  nullptr;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_ConeType_rows_Row_      ;
    }                                   *__union_ConeType_rows_Row_    ;
//  END OF CHOICE
//  END OF GROUP
//  END OF CHOICE
//  END OF GROUP
    }>                                   Row                            1;
    }                                    rows                           1;	///< Required element.
//  END OF GROUP
/// Attribute "rows" of XSD type xs:integer.
   @long*                                rows                           0;	///< Optional attribute.
/// Attribute "columns" of XSD type xs:integer.
   @long*                                columns                        0;	///< Optional attribute.
    END OF INHERITED FROM gml__AbstractGriddedSurfaceType */
/// Attribute "horizontalCurveType" of XSD type "http://www.opengis.net/gml/3.2":CurveInterpolationType.
   @enum gml__CurveInterpolationType*    horizontalCurveType            0;	///< Fixed attribute value="circularArc3Points".
/// Attribute "verticalCurveType" of XSD type "http://www.opengis.net/gml/3.2":CurveInterpolationType.
   @enum gml__CurveInterpolationType*    verticalCurveType              0;	///< Fixed attribute value="linear".
};

/// @brief "http://www.opengis.net/gml/3.2":CylinderType is a complexType with complexContent extension of XSD type "http://www.opengis.net/gml/3.2":AbstractGriddedSurfaceType.
///
/// class gml__CylinderType operations:
/// - gml__CylinderType* soap_new_gml__CylinderType(soap*) allocate and default initialize
/// - gml__CylinderType* soap_new_gml__CylinderType(soap*, int num) allocate array and default initialize values
/// - gml__CylinderType* soap_new_req_gml__CylinderType(soap*, ...) allocate, set required members
/// - gml__CylinderType* soap_new_set_gml__CylinderType(soap*, ...) allocate, set all public members
/// - gml__CylinderType::soap_default(soap*) default initialize members
/// - int soap_read_gml__CylinderType(soap*, gml__CylinderType*) deserialize from a stream
/// - int soap_write_gml__CylinderType(soap*, gml__CylinderType*) serialize to a stream
/// - gml__CylinderType* gml__CylinderType::soap_dup(soap*) returns deep copy of gml__CylinderType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__CylinderType::soap_del() deep deletes gml__CylinderType data members, use only after gml__CylinderType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__CylinderType : public gml__AbstractGriddedSurfaceType
{ public:
/*  INHERITED FROM gml__AbstractSurfacePatchType:
    END OF INHERITED FROM gml__AbstractSurfacePatchType */
/*  INHERITED FROM gml__AbstractParametricCurveSurfaceType:
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":AggregationAttributeGroup">.
/// Attribute "aggregationType" of XSD type "http://www.opengis.net/gml/3.2":AggregationType.
   @enum gml__AggregationType*           aggregationType                0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
    END OF INHERITED FROM gml__AbstractParametricCurveSurfaceType */
/*  INHERITED FROM gml__AbstractGriddedSurfaceType:
//  BEGIN GROUP <xs:group name="PointGrid">
/// <PRE><BLOCKQUOTE>
///   A gml:PointGrid group contains or references points or positions which are organised into sequences or grids. All rows shall have the same number of positions (columns).
/// </BLOCKQUOTE></PRE>
/// class _gml__CylinderType_rows operations:
/// - _gml__CylinderType_rows* soap_new__gml__CylinderType_rows(soap*) allocate and default initialize
/// - _gml__CylinderType_rows* soap_new__gml__CylinderType_rows(soap*, int num) allocate array and default initialize values
/// - _gml__CylinderType_rows* soap_new_req__gml__CylinderType_rows(soap*, ...) allocate, set required members
/// - _gml__CylinderType_rows* soap_new_set__gml__CylinderType_rows(soap*, ...) allocate, set all public members
/// - _gml__CylinderType_rows::soap_default(soap*) default initialize members
/// - int soap_read__gml__CylinderType_rows(soap*, _gml__CylinderType_rows*) deserialize from a stream
/// - int soap_write__gml__CylinderType_rows(soap*, _gml__CylinderType_rows*) serialize to a stream
/// - _gml__CylinderType_rows* _gml__CylinderType_rows::soap_dup(soap*) returns deep copy of _gml__CylinderType_rows, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _gml__CylinderType_rows::soap_del() deep deletes _gml__CylinderType_rows data members, use only after _gml__CylinderType_rows::soap_dup(NULL) (use soapcpp2 -Ed)
    class _gml__CylinderType_rows
    {
/// Vector of Row of length 1..unbounded.
    std::vector<
/// class _gml__CylinderType_rows_Row operations:
/// - _gml__CylinderType_rows_Row* soap_new__gml__CylinderType_rows_Row(soap*) allocate and default initialize
/// - _gml__CylinderType_rows_Row* soap_new__gml__CylinderType_rows_Row(soap*, int num) allocate array and default initialize values
/// - _gml__CylinderType_rows_Row* soap_new_req__gml__CylinderType_rows_Row(soap*, ...) allocate, set required members
/// - _gml__CylinderType_rows_Row* soap_new_set__gml__CylinderType_rows_Row(soap*, ...) allocate, set all public members
/// - _gml__CylinderType_rows_Row::soap_default(soap*) default initialize members
/// - int soap_read__gml__CylinderType_rows_Row(soap*, _gml__CylinderType_rows_Row*) deserialize from a stream
/// - int soap_write__gml__CylinderType_rows_Row(soap*, _gml__CylinderType_rows_Row*) serialize to a stream
/// - _gml__CylinderType_rows_Row* _gml__CylinderType_rows_Row::soap_dup(soap*) returns deep copy of _gml__CylinderType_rows_Row, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _gml__CylinderType_rows_Row::soap_del() deep deletes _gml__CylinderType_rows_Row data members, use only after _gml__CylinderType_rows_Row::soap_dup(NULL) (use soapcpp2 -Ed)
    class _gml__CylinderType_rows_Row
    {
//  BEGIN GROUP <xs:group name="geometricPositionListGroup">
/// <PRE><BLOCKQUOTE>
///   GML supports two different ways to specify a list of geometric positions: either by a sequence of geometric positions (by reusing the group definition) or a sequence of direct positions (element posList). The posList element allows for a compact way to specify the coordinates of the positions, if all positions are represented in the same coordinate reference system.
/// </BLOCKQUOTE></PRE>
//  BEGIN CHOICE <xs:choice>
/// @note <xs:choice> with embedded <xs:sequence> or <xs:group> prevents the use of a union for <xs:choice>. Instead of being members of a union, the following members are declared optional. Only one member should be non-NULL by choice.
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":posList.
    gml__DirectPositionListType*         posList                        nullptr;	///< Required nillable (xsi:nil when NULL) element.
//  BEGIN GROUP <xs:group name="geometricPositionGroup" maxOccurs="unbounded">
/// <PRE><BLOCKQUOTE>
///   GML supports two different ways to specify a geometric position: either by a direct position (a data type) or a point (a geometric object).
///   pos elements are positions that are "owned" by the geometric primitive encapsulating this geometric position.
///   pointProperty elements contain a point that may be referenced from other geometry elements or reference another point defined elsewhere (reuse of existing points).
/// </BLOCKQUOTE></PRE>
//  BEGIN CHOICE <xs:choice maxOccurs="unbounded">
   $int                                  __size_CylinderType_rows_Row_  0;
    class __gml__union_CylinderType_rows_Row_
    {
   $int                                  __union_CylinderType_rows_Row_;	///< Union _gml__union_CylinderType_rows_Row_ selector: set to SOAP_UNION__gml__union_CylinderType_rows_Row__<fieldname>
    union _gml__union_CylinderType_rows_Row_
    {
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":pos.
    gml__DirectPositionType*             pos                            nullptr;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   This property element either references a point via the XLink-attributes or contains the point element. pointProperty is the predefined property which may be used by GML Application Schemas whenever a GML feature has a property with a value that is substitutable for Point.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":pointProperty.
    gml__PointPropertyType*              pointProperty                  nullptr;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_CylinderType_rows_Row_  ;
    }                                   *__union_CylinderType_rows_Row_;
//  END OF CHOICE
//  END OF GROUP
//  END OF CHOICE
//  END OF GROUP
    }>                                   Row                            1;
    }                                    rows                           1;	///< Required element.
//  END OF GROUP
/// Attribute "rows" of XSD type xs:integer.
   @long*                                rows                           0;	///< Optional attribute.
/// Attribute "columns" of XSD type xs:integer.
   @long*                                columns                        0;	///< Optional attribute.
    END OF INHERITED FROM gml__AbstractGriddedSurfaceType */
/// Attribute "horizontalCurveType" of XSD type "http://www.opengis.net/gml/3.2":CurveInterpolationType.
   @enum gml__CurveInterpolationType*    horizontalCurveType            0;	///< Fixed attribute value="circularArc3Points".
/// Attribute "verticalCurveType" of XSD type "http://www.opengis.net/gml/3.2":CurveInterpolationType.
   @enum gml__CurveInterpolationType*    verticalCurveType              0;	///< Fixed attribute value="linear".
};

/// @brief "http://www.opengis.net/gml/3.2":SphereType is a complexType with complexContent extension of XSD type "http://www.opengis.net/gml/3.2":AbstractGriddedSurfaceType.
///
/// class gml__SphereType operations:
/// - gml__SphereType* soap_new_gml__SphereType(soap*) allocate and default initialize
/// - gml__SphereType* soap_new_gml__SphereType(soap*, int num) allocate array and default initialize values
/// - gml__SphereType* soap_new_req_gml__SphereType(soap*, ...) allocate, set required members
/// - gml__SphereType* soap_new_set_gml__SphereType(soap*, ...) allocate, set all public members
/// - gml__SphereType::soap_default(soap*) default initialize members
/// - int soap_read_gml__SphereType(soap*, gml__SphereType*) deserialize from a stream
/// - int soap_write_gml__SphereType(soap*, gml__SphereType*) serialize to a stream
/// - gml__SphereType* gml__SphereType::soap_dup(soap*) returns deep copy of gml__SphereType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__SphereType::soap_del() deep deletes gml__SphereType data members, use only after gml__SphereType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__SphereType : public gml__AbstractGriddedSurfaceType
{ public:
/*  INHERITED FROM gml__AbstractSurfacePatchType:
    END OF INHERITED FROM gml__AbstractSurfacePatchType */
/*  INHERITED FROM gml__AbstractParametricCurveSurfaceType:
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":AggregationAttributeGroup">.
/// Attribute "aggregationType" of XSD type "http://www.opengis.net/gml/3.2":AggregationType.
   @enum gml__AggregationType*           aggregationType                0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
    END OF INHERITED FROM gml__AbstractParametricCurveSurfaceType */
/*  INHERITED FROM gml__AbstractGriddedSurfaceType:
//  BEGIN GROUP <xs:group name="PointGrid">
/// <PRE><BLOCKQUOTE>
///   A gml:PointGrid group contains or references points or positions which are organised into sequences or grids. All rows shall have the same number of positions (columns).
/// </BLOCKQUOTE></PRE>
/// class _gml__SphereType_rows operations:
/// - _gml__SphereType_rows* soap_new__gml__SphereType_rows(soap*) allocate and default initialize
/// - _gml__SphereType_rows* soap_new__gml__SphereType_rows(soap*, int num) allocate array and default initialize values
/// - _gml__SphereType_rows* soap_new_req__gml__SphereType_rows(soap*, ...) allocate, set required members
/// - _gml__SphereType_rows* soap_new_set__gml__SphereType_rows(soap*, ...) allocate, set all public members
/// - _gml__SphereType_rows::soap_default(soap*) default initialize members
/// - int soap_read__gml__SphereType_rows(soap*, _gml__SphereType_rows*) deserialize from a stream
/// - int soap_write__gml__SphereType_rows(soap*, _gml__SphereType_rows*) serialize to a stream
/// - _gml__SphereType_rows* _gml__SphereType_rows::soap_dup(soap*) returns deep copy of _gml__SphereType_rows, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _gml__SphereType_rows::soap_del() deep deletes _gml__SphereType_rows data members, use only after _gml__SphereType_rows::soap_dup(NULL) (use soapcpp2 -Ed)
    class _gml__SphereType_rows
    {
/// Vector of Row of length 1..unbounded.
    std::vector<
/// class _gml__SphereType_rows_Row operations:
/// - _gml__SphereType_rows_Row* soap_new__gml__SphereType_rows_Row(soap*) allocate and default initialize
/// - _gml__SphereType_rows_Row* soap_new__gml__SphereType_rows_Row(soap*, int num) allocate array and default initialize values
/// - _gml__SphereType_rows_Row* soap_new_req__gml__SphereType_rows_Row(soap*, ...) allocate, set required members
/// - _gml__SphereType_rows_Row* soap_new_set__gml__SphereType_rows_Row(soap*, ...) allocate, set all public members
/// - _gml__SphereType_rows_Row::soap_default(soap*) default initialize members
/// - int soap_read__gml__SphereType_rows_Row(soap*, _gml__SphereType_rows_Row*) deserialize from a stream
/// - int soap_write__gml__SphereType_rows_Row(soap*, _gml__SphereType_rows_Row*) serialize to a stream
/// - _gml__SphereType_rows_Row* _gml__SphereType_rows_Row::soap_dup(soap*) returns deep copy of _gml__SphereType_rows_Row, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _gml__SphereType_rows_Row::soap_del() deep deletes _gml__SphereType_rows_Row data members, use only after _gml__SphereType_rows_Row::soap_dup(NULL) (use soapcpp2 -Ed)
    class _gml__SphereType_rows_Row
    {
//  BEGIN GROUP <xs:group name="geometricPositionListGroup">
/// <PRE><BLOCKQUOTE>
///   GML supports two different ways to specify a list of geometric positions: either by a sequence of geometric positions (by reusing the group definition) or a sequence of direct positions (element posList). The posList element allows for a compact way to specify the coordinates of the positions, if all positions are represented in the same coordinate reference system.
/// </BLOCKQUOTE></PRE>
//  BEGIN CHOICE <xs:choice>
/// @note <xs:choice> with embedded <xs:sequence> or <xs:group> prevents the use of a union for <xs:choice>. Instead of being members of a union, the following members are declared optional. Only one member should be non-NULL by choice.
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":posList.
    gml__DirectPositionListType*         posList                        nullptr;	///< Required nillable (xsi:nil when NULL) element.
//  BEGIN GROUP <xs:group name="geometricPositionGroup" maxOccurs="unbounded">
/// <PRE><BLOCKQUOTE>
///   GML supports two different ways to specify a geometric position: either by a direct position (a data type) or a point (a geometric object).
///   pos elements are positions that are "owned" by the geometric primitive encapsulating this geometric position.
///   pointProperty elements contain a point that may be referenced from other geometry elements or reference another point defined elsewhere (reuse of existing points).
/// </BLOCKQUOTE></PRE>
//  BEGIN CHOICE <xs:choice maxOccurs="unbounded">
   $int                                  __size_SphereType_rows_Row_    0;
    class __gml__union_SphereType_rows_Row_
    {
   $int                                  __union_SphereType_rows_Row_  ;	///< Union _gml__union_SphereType_rows_Row_ selector: set to SOAP_UNION__gml__union_SphereType_rows_Row__<fieldname>
    union _gml__union_SphereType_rows_Row_
    {
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":pos.
    gml__DirectPositionType*             pos                            nullptr;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   This property element either references a point via the XLink-attributes or contains the point element. pointProperty is the predefined property which may be used by GML Application Schemas whenever a GML feature has a property with a value that is substitutable for Point.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":pointProperty.
    gml__PointPropertyType*              pointProperty                  nullptr;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_SphereType_rows_Row_    ;
    }                                   *__union_SphereType_rows_Row_  ;
//  END OF CHOICE
//  END OF GROUP
//  END OF CHOICE
//  END OF GROUP
    }>                                   Row                            1;
    }                                    rows                           1;	///< Required element.
//  END OF GROUP
/// Attribute "rows" of XSD type xs:integer.
   @long*                                rows                           0;	///< Optional attribute.
/// Attribute "columns" of XSD type xs:integer.
   @long*                                columns                        0;	///< Optional attribute.
    END OF INHERITED FROM gml__AbstractGriddedSurfaceType */
/// Attribute "horizontalCurveType" of XSD type "http://www.opengis.net/gml/3.2":CurveInterpolationType.
   @enum gml__CurveInterpolationType*    horizontalCurveType            0;	///< Fixed attribute value="circularArc3Points".
/// Attribute "verticalCurveType" of XSD type "http://www.opengis.net/gml/3.2":CurveInterpolationType.
   @enum gml__CurveInterpolationType*    verticalCurveType              0;	///< Fixed attribute value="circularArc3Points".
};

/// @brief "http://www.opengis.net/gml/3.2":AbstractSolidType is a complexType with complexContent extension of XSD type "http://www.opengis.net/gml/3.2":AbstractGeometricPrimitiveType.
///
/// <PRE><BLOCKQUOTE>
///   gml:AbstractSolidType is an abstraction of a solid to support the different levels of complexity. The solid may always be viewed as a geometric primitive, i.e. is contiguous.
/// </BLOCKQUOTE></PRE>
/// class gml__AbstractSolidType operations:
/// - gml__AbstractSolidType* soap_new_gml__AbstractSolidType(soap*) allocate and default initialize
/// - gml__AbstractSolidType* soap_new_gml__AbstractSolidType(soap*, int num) allocate array and default initialize values
/// - gml__AbstractSolidType* soap_new_req_gml__AbstractSolidType(soap*, ...) allocate, set required members
/// - gml__AbstractSolidType* soap_new_set_gml__AbstractSolidType(soap*, ...) allocate, set all public members
/// - gml__AbstractSolidType::soap_default(soap*) default initialize members
/// - int soap_read_gml__AbstractSolidType(soap*, gml__AbstractSolidType*) deserialize from a stream
/// - int soap_write_gml__AbstractSolidType(soap*, gml__AbstractSolidType*) serialize to a stream
/// - gml__AbstractSolidType* gml__AbstractSolidType::soap_dup(soap*) returns deep copy of gml__AbstractSolidType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__AbstractSolidType::soap_del() deep deletes gml__AbstractSolidType data members, use only after gml__AbstractSolidType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__AbstractSolidType : public gml__AbstractGeometricPrimitiveType
{ public:
/*  INHERITED FROM gml__AbstractGMLType:
//  BEGIN GROUP <xs:group name="StandardObjectProperties">
/// Vector of gml__MetaDataPropertyType* element refs of length 0..unbounded.
    std::vector<gml__MetaDataPropertyType*> metaDataProperty               0;
/// <PRE><BLOCKQUOTE>
///   The value of this property is a text description of the object. gml:description uses gml:StringOrRefType as its content model, so it may contain a simple text string content, or carry a reference to an external description. The use of gml:description to reference an external description has been deprecated and replaced by the gml:descriptionReference property.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":description.
    gml__StringOrRefType*                description                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The value of this property is a remote text description of the object. The xlink:href attribute of the gml:descriptionReference property references the external description.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":descriptionReference.
    gml__ReferenceType*                  descriptionReference           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Often, a special identifier is assigned to an object by the maintaining authority with the intention that it is used in references to the object For such cases, the codeSpace shall be provided. That identifier is usually unique either globally or within an application domain. gml:identifier is a pre-defined property for such identifiers.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":identifier.
    gml__CodeWithAuthorityType*          identifier                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The gml:name property provides a label or identifier for the object, commonly a descriptive name. An object may have several names, typically assigned by different authorities. gml:name uses the gml:CodeType content model. The authority for a name is indicated by the value of its (optional) codeSpace attribute. The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace. In common usage there will be one name per authority, so a processing application may select the name from its preferred codeSpace.
/// </BLOCKQUOTE></PRE>
/// Vector of gml__CodeType* element refs of length 0..unbounded.
    std::vector<gml__CodeType*         > name                           0;
//  END OF GROUP
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":id.
/// <PRE><BLOCKQUOTE>
///   The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.
/// </BLOCKQUOTE></PRE>
   @xsd__ID*                             gml__id                        0;	///< Optional attribute.
    END OF INHERITED FROM gml__AbstractGMLType */
/*  INHERITED FROM gml__AbstractGeometryType:
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":SRSReferenceGroup">.
/// Attribute "srsName" of XSD type xs:anyURI.
   @xsd__anyURI*                         srsName                        0;	///< Optional attribute.
/// Attribute "srsDimension" of XSD type xs:positiveInteger.
   @xsd__positiveInteger*                srsDimension                   0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":SRSInformationGroup">.
/// Attribute "axisLabels" of XSD type "http://www.opengis.net/gml/3.2":NCNameList.
   @gml__NCNameList*                     axisLabels                     0;	///< Optional attribute.
/// Attribute "uomLabels" of XSD type "http://www.opengis.net/gml/3.2":NCNameList.
   @gml__NCNameList*                     uomLabels                      0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
    END OF INHERITED FROM gml__AbstractGeometryType */
/*  INHERITED FROM gml__AbstractGeometricPrimitiveType:
    END OF INHERITED FROM gml__AbstractGeometricPrimitiveType */
};

/// @brief "http://www.opengis.net/gml/3.2":AbstractSurfaceType is an abstract complexType with complexContent extension of XSD type "http://www.opengis.net/gml/3.2":AbstractGeometricPrimitiveType.
///
/// <PRE><BLOCKQUOTE>
///   gml:AbstractSurfaceType is an abstraction of a surface to support the different levels of complexity. A surface is always a continuous region of a plane.
/// </BLOCKQUOTE></PRE>
/// class gml__AbstractSurfaceType operations:
/// - gml__AbstractSurfaceType* soap_new_gml__AbstractSurfaceType(soap*) allocate and default initialize
/// - gml__AbstractSurfaceType* soap_new_gml__AbstractSurfaceType(soap*, int num) allocate array and default initialize values
/// - gml__AbstractSurfaceType* soap_new_req_gml__AbstractSurfaceType(soap*, ...) allocate, set required members
/// - gml__AbstractSurfaceType* soap_new_set_gml__AbstractSurfaceType(soap*, ...) allocate, set all public members
/// - gml__AbstractSurfaceType::soap_default(soap*) default initialize members
/// - int soap_read_gml__AbstractSurfaceType(soap*, gml__AbstractSurfaceType*) deserialize from a stream
/// - int soap_write_gml__AbstractSurfaceType(soap*, gml__AbstractSurfaceType*) serialize to a stream
/// - gml__AbstractSurfaceType* gml__AbstractSurfaceType::soap_dup(soap*) returns deep copy of gml__AbstractSurfaceType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__AbstractSurfaceType::soap_del() deep deletes gml__AbstractSurfaceType data members, use only after gml__AbstractSurfaceType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__AbstractSurfaceType : public gml__AbstractGeometricPrimitiveType
{ public:
/*  INHERITED FROM gml__AbstractGMLType:
//  BEGIN GROUP <xs:group name="StandardObjectProperties">
/// Vector of gml__MetaDataPropertyType* element refs of length 0..unbounded.
    std::vector<gml__MetaDataPropertyType*> metaDataProperty               0;
/// <PRE><BLOCKQUOTE>
///   The value of this property is a text description of the object. gml:description uses gml:StringOrRefType as its content model, so it may contain a simple text string content, or carry a reference to an external description. The use of gml:description to reference an external description has been deprecated and replaced by the gml:descriptionReference property.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":description.
    gml__StringOrRefType*                description                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The value of this property is a remote text description of the object. The xlink:href attribute of the gml:descriptionReference property references the external description.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":descriptionReference.
    gml__ReferenceType*                  descriptionReference           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Often, a special identifier is assigned to an object by the maintaining authority with the intention that it is used in references to the object For such cases, the codeSpace shall be provided. That identifier is usually unique either globally or within an application domain. gml:identifier is a pre-defined property for such identifiers.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":identifier.
    gml__CodeWithAuthorityType*          identifier                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The gml:name property provides a label or identifier for the object, commonly a descriptive name. An object may have several names, typically assigned by different authorities. gml:name uses the gml:CodeType content model. The authority for a name is indicated by the value of its (optional) codeSpace attribute. The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace. In common usage there will be one name per authority, so a processing application may select the name from its preferred codeSpace.
/// </BLOCKQUOTE></PRE>
/// Vector of gml__CodeType* element refs of length 0..unbounded.
    std::vector<gml__CodeType*         > name                           0;
//  END OF GROUP
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":id.
/// <PRE><BLOCKQUOTE>
///   The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.
/// </BLOCKQUOTE></PRE>
   @xsd__ID*                             gml__id                        0;	///< Optional attribute.
    END OF INHERITED FROM gml__AbstractGMLType */
/*  INHERITED FROM gml__AbstractGeometryType:
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":SRSReferenceGroup">.
/// Attribute "srsName" of XSD type xs:anyURI.
   @xsd__anyURI*                         srsName                        0;	///< Optional attribute.
/// Attribute "srsDimension" of XSD type xs:positiveInteger.
   @xsd__positiveInteger*                srsDimension                   0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":SRSInformationGroup">.
/// Attribute "axisLabels" of XSD type "http://www.opengis.net/gml/3.2":NCNameList.
   @gml__NCNameList*                     axisLabels                     0;	///< Optional attribute.
/// Attribute "uomLabels" of XSD type "http://www.opengis.net/gml/3.2":NCNameList.
   @gml__NCNameList*                     uomLabels                      0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
    END OF INHERITED FROM gml__AbstractGeometryType */
/*  INHERITED FROM gml__AbstractGeometricPrimitiveType:
    END OF INHERITED FROM gml__AbstractGeometricPrimitiveType */
};

/// @brief "http://www.opengis.net/gml/3.2":PointType is a complexType with complexContent extension of XSD type "http://www.opengis.net/gml/3.2":AbstractGeometricPrimitiveType.
///
/// class gml__PointType operations:
/// - gml__PointType* soap_new_gml__PointType(soap*) allocate and default initialize
/// - gml__PointType* soap_new_gml__PointType(soap*, int num) allocate array and default initialize values
/// - gml__PointType* soap_new_req_gml__PointType(soap*, ...) allocate, set required members
/// - gml__PointType* soap_new_set_gml__PointType(soap*, ...) allocate, set all public members
/// - gml__PointType::soap_default(soap*) default initialize members
/// - int soap_read_gml__PointType(soap*, gml__PointType*) deserialize from a stream
/// - int soap_write_gml__PointType(soap*, gml__PointType*) serialize to a stream
/// - gml__PointType* gml__PointType::soap_dup(soap*) returns deep copy of gml__PointType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__PointType::soap_del() deep deletes gml__PointType data members, use only after gml__PointType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__PointType : public gml__AbstractGeometricPrimitiveType
{ public:
/*  INHERITED FROM gml__AbstractGMLType:
//  BEGIN GROUP <xs:group name="StandardObjectProperties">
/// Vector of gml__MetaDataPropertyType* element refs of length 0..unbounded.
    std::vector<gml__MetaDataPropertyType*> metaDataProperty               0;
/// <PRE><BLOCKQUOTE>
///   The value of this property is a text description of the object. gml:description uses gml:StringOrRefType as its content model, so it may contain a simple text string content, or carry a reference to an external description. The use of gml:description to reference an external description has been deprecated and replaced by the gml:descriptionReference property.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":description.
    gml__StringOrRefType*                description                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The value of this property is a remote text description of the object. The xlink:href attribute of the gml:descriptionReference property references the external description.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":descriptionReference.
    gml__ReferenceType*                  descriptionReference           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Often, a special identifier is assigned to an object by the maintaining authority with the intention that it is used in references to the object For such cases, the codeSpace shall be provided. That identifier is usually unique either globally or within an application domain. gml:identifier is a pre-defined property for such identifiers.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":identifier.
    gml__CodeWithAuthorityType*          identifier                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The gml:name property provides a label or identifier for the object, commonly a descriptive name. An object may have several names, typically assigned by different authorities. gml:name uses the gml:CodeType content model. The authority for a name is indicated by the value of its (optional) codeSpace attribute. The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace. In common usage there will be one name per authority, so a processing application may select the name from its preferred codeSpace.
/// </BLOCKQUOTE></PRE>
/// Vector of gml__CodeType* element refs of length 0..unbounded.
    std::vector<gml__CodeType*         > name                           0;
//  END OF GROUP
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":id.
/// <PRE><BLOCKQUOTE>
///   The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.
/// </BLOCKQUOTE></PRE>
   @xsd__ID*                             gml__id                        0;	///< Optional attribute.
    END OF INHERITED FROM gml__AbstractGMLType */
/*  INHERITED FROM gml__AbstractGeometryType:
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":SRSReferenceGroup">.
/// Attribute "srsName" of XSD type xs:anyURI.
   @xsd__anyURI*                         srsName                        0;	///< Optional attribute.
/// Attribute "srsDimension" of XSD type xs:positiveInteger.
   @xsd__positiveInteger*                srsDimension                   0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":SRSInformationGroup">.
/// Attribute "axisLabels" of XSD type "http://www.opengis.net/gml/3.2":NCNameList.
   @gml__NCNameList*                     axisLabels                     0;	///< Optional attribute.
/// Attribute "uomLabels" of XSD type "http://www.opengis.net/gml/3.2":NCNameList.
   @gml__NCNameList*                     uomLabels                      0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
    END OF INHERITED FROM gml__AbstractGeometryType */
/*  INHERITED FROM gml__AbstractGeometricPrimitiveType:
    END OF INHERITED FROM gml__AbstractGeometricPrimitiveType */
//  BEGIN CHOICE <xs:choice>
   $int                                  __union_PointType             ;	///< Union _gml__union_PointType selector: set to SOAP_UNION__gml__union_PointType_<fieldname>
    union _gml__union_PointType
    {
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":pos.
    gml__DirectPositionType*             pos                            nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":coordinates.
    gml__CoordinatesType*                coordinates                    nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_PointType               ;
//  END OF CHOICE
};

/// @brief "http://www.opengis.net/gml/3.2":AbstractCurveType is an abstract complexType with complexContent extension of XSD type "http://www.opengis.net/gml/3.2":AbstractGeometricPrimitiveType.
///
/// <PRE><BLOCKQUOTE>
///   gml:AbstractCurveType is an abstraction of a curve to support the different levels of complexity. The curve may always be viewed as a geometric primitive, i.e. is continuous.
/// </BLOCKQUOTE></PRE>
/// class gml__AbstractCurveType operations:
/// - gml__AbstractCurveType* soap_new_gml__AbstractCurveType(soap*) allocate and default initialize
/// - gml__AbstractCurveType* soap_new_gml__AbstractCurveType(soap*, int num) allocate array and default initialize values
/// - gml__AbstractCurveType* soap_new_req_gml__AbstractCurveType(soap*, ...) allocate, set required members
/// - gml__AbstractCurveType* soap_new_set_gml__AbstractCurveType(soap*, ...) allocate, set all public members
/// - gml__AbstractCurveType::soap_default(soap*) default initialize members
/// - int soap_read_gml__AbstractCurveType(soap*, gml__AbstractCurveType*) deserialize from a stream
/// - int soap_write_gml__AbstractCurveType(soap*, gml__AbstractCurveType*) serialize to a stream
/// - gml__AbstractCurveType* gml__AbstractCurveType::soap_dup(soap*) returns deep copy of gml__AbstractCurveType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__AbstractCurveType::soap_del() deep deletes gml__AbstractCurveType data members, use only after gml__AbstractCurveType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__AbstractCurveType : public gml__AbstractGeometricPrimitiveType
{ public:
/*  INHERITED FROM gml__AbstractGMLType:
//  BEGIN GROUP <xs:group name="StandardObjectProperties">
/// Vector of gml__MetaDataPropertyType* element refs of length 0..unbounded.
    std::vector<gml__MetaDataPropertyType*> metaDataProperty               0;
/// <PRE><BLOCKQUOTE>
///   The value of this property is a text description of the object. gml:description uses gml:StringOrRefType as its content model, so it may contain a simple text string content, or carry a reference to an external description. The use of gml:description to reference an external description has been deprecated and replaced by the gml:descriptionReference property.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":description.
    gml__StringOrRefType*                description                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The value of this property is a remote text description of the object. The xlink:href attribute of the gml:descriptionReference property references the external description.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":descriptionReference.
    gml__ReferenceType*                  descriptionReference           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Often, a special identifier is assigned to an object by the maintaining authority with the intention that it is used in references to the object For such cases, the codeSpace shall be provided. That identifier is usually unique either globally or within an application domain. gml:identifier is a pre-defined property for such identifiers.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":identifier.
    gml__CodeWithAuthorityType*          identifier                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The gml:name property provides a label or identifier for the object, commonly a descriptive name. An object may have several names, typically assigned by different authorities. gml:name uses the gml:CodeType content model. The authority for a name is indicated by the value of its (optional) codeSpace attribute. The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace. In common usage there will be one name per authority, so a processing application may select the name from its preferred codeSpace.
/// </BLOCKQUOTE></PRE>
/// Vector of gml__CodeType* element refs of length 0..unbounded.
    std::vector<gml__CodeType*         > name                           0;
//  END OF GROUP
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":id.
/// <PRE><BLOCKQUOTE>
///   The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.
/// </BLOCKQUOTE></PRE>
   @xsd__ID*                             gml__id                        0;	///< Optional attribute.
    END OF INHERITED FROM gml__AbstractGMLType */
/*  INHERITED FROM gml__AbstractGeometryType:
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":SRSReferenceGroup">.
/// Attribute "srsName" of XSD type xs:anyURI.
   @xsd__anyURI*                         srsName                        0;	///< Optional attribute.
/// Attribute "srsDimension" of XSD type xs:positiveInteger.
   @xsd__positiveInteger*                srsDimension                   0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":SRSInformationGroup">.
/// Attribute "axisLabels" of XSD type "http://www.opengis.net/gml/3.2":NCNameList.
   @gml__NCNameList*                     axisLabels                     0;	///< Optional attribute.
/// Attribute "uomLabels" of XSD type "http://www.opengis.net/gml/3.2":NCNameList.
   @gml__NCNameList*                     uomLabels                      0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
    END OF INHERITED FROM gml__AbstractGeometryType */
/*  INHERITED FROM gml__AbstractGeometricPrimitiveType:
    END OF INHERITED FROM gml__AbstractGeometricPrimitiveType */
};

/// @brief "http://www.opengis.net/gml/3.2":UnitDefinitionType is a complexType with complexContent extension of XSD type "http://www.opengis.net/gml/3.2":DefinitionType.
///
/// class gml__UnitDefinitionType operations:
/// - gml__UnitDefinitionType* soap_new_gml__UnitDefinitionType(soap*) allocate and default initialize
/// - gml__UnitDefinitionType* soap_new_gml__UnitDefinitionType(soap*, int num) allocate array and default initialize values
/// - gml__UnitDefinitionType* soap_new_req_gml__UnitDefinitionType(soap*, ...) allocate, set required members
/// - gml__UnitDefinitionType* soap_new_set_gml__UnitDefinitionType(soap*, ...) allocate, set all public members
/// - gml__UnitDefinitionType::soap_default(soap*) default initialize members
/// - int soap_read_gml__UnitDefinitionType(soap*, gml__UnitDefinitionType*) deserialize from a stream
/// - int soap_write_gml__UnitDefinitionType(soap*, gml__UnitDefinitionType*) serialize to a stream
/// - gml__UnitDefinitionType* gml__UnitDefinitionType::soap_dup(soap*) returns deep copy of gml__UnitDefinitionType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__UnitDefinitionType::soap_del() deep deletes gml__UnitDefinitionType data members, use only after gml__UnitDefinitionType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__UnitDefinitionType : public gml__DefinitionType
{ public:
/*  INHERITED FROM gml__DefinitionBaseType:
    END OF INHERITED FROM gml__DefinitionBaseType */
/*  INHERITED FROM gml__DefinitionType:
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":remarks.
    std::string*                         remarks                        0;	///< Optional element.
    END OF INHERITED FROM gml__DefinitionType */
/// <PRE><BLOCKQUOTE>
///   The gml:quantityType property indicates the phenomenon to which the units apply. This element contains an informal description of the phenomenon or type of physical quantity that is measured or observed. When the physical quantity is the result of an observation or measurement, this term is known as observable type or measurand.
///   The use of gml:quantityType for references to remote values is deprecated.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":quantityType.
    gml__StringOrRefType*                quantityType                   0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The gml:quantityTypeReference property indicates the phenomenon to which the units apply. The content is a reference to a remote value.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":quantityTypeReference.
    gml__ReferenceType*                  quantityTypeReference          0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The catalogSymbol is the preferred lexical symbol used for this unit of measure.
///   The codeSpace attribute in gml:CodeType identifies a namespace for the catalog symbol value, and might reference the external catalog. The string value in gml:CodeType contains the value of a symbol that should be unique within this catalog namespace. This symbol often appears explicitly in the catalog, but it could be a combination of symbols using a specified algebra of units.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":catalogSymbol.
    gml__CodeType*                       catalogSymbol                  0;	///< Optional element.
};

/// @brief "http://www.opengis.net/gml/3.2":DictionaryType is a complexType with complexContent extension of XSD type "http://www.opengis.net/gml/3.2":DefinitionType.
///
/// class gml__DictionaryType operations:
/// - gml__DictionaryType* soap_new_gml__DictionaryType(soap*) allocate and default initialize
/// - gml__DictionaryType* soap_new_gml__DictionaryType(soap*, int num) allocate array and default initialize values
/// - gml__DictionaryType* soap_new_req_gml__DictionaryType(soap*, ...) allocate, set required members
/// - gml__DictionaryType* soap_new_set_gml__DictionaryType(soap*, ...) allocate, set all public members
/// - gml__DictionaryType::soap_default(soap*) default initialize members
/// - int soap_read_gml__DictionaryType(soap*, gml__DictionaryType*) deserialize from a stream
/// - int soap_write_gml__DictionaryType(soap*, gml__DictionaryType*) serialize to a stream
/// - gml__DictionaryType* gml__DictionaryType::soap_dup(soap*) returns deep copy of gml__DictionaryType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__DictionaryType::soap_del() deep deletes gml__DictionaryType data members, use only after gml__DictionaryType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__DictionaryType : public gml__DefinitionType
{ public:
/*  INHERITED FROM gml__DefinitionBaseType:
    END OF INHERITED FROM gml__DefinitionBaseType */
/*  INHERITED FROM gml__DefinitionType:
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":remarks.
    std::string*                         remarks                        0;	///< Optional element.
    END OF INHERITED FROM gml__DefinitionType */
//  BEGIN CHOICE <xs:choice minOccurs="0" maxOccurs="unbounded">
   $int                                  __size_DictionaryType          0;
    class __gml__union_DictionaryType
    {
   $int                                  __union_DictionaryType         0;	///< Union _gml__union_DictionaryType selector: set to SOAP_UNION__gml__union_DictionaryType_<fieldname> or 0 to omit
/// Union for choice in gml__DictionaryType.
    union _gml__union_DictionaryType
    {
/// <PRE><BLOCKQUOTE>
///   This property element contains or refers to the definitions which are members of a dictionary. The content model follows the standard GML property pattern, so a gml:dictionaryEntry may either contain or refer to a single gml:Definition. Since gml:Dictionary is substitutable for gml:Definition, the content of an entry may itself be a lower level dictionary. Note that if the value is provided by reference, this definition does not carry a handle (gml:id) in this context, so does not allow external references to this specific definition in this context. When used in this way the referenced definition will usually be in a dictionary in the same XML document.
/// </BLOCKQUOTE></PRE>
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="dictionaryEntry"> with global elements <definitionMember>
/// <PRE><BLOCKQUOTE>
///   This property element contains or refers to the definitions which are members of a dictionary. The content model follows the standard GML property pattern, so a gml:dictionaryEntry may either contain or refer to a single gml:Definition. Since gml:Dictionary is substitutable for gml:Definition, the content of an entry may itself be a lower level dictionary. Note that if the value is provided by reference, this definition does not carry a handle (gml:id) in this context, so does not allow external references to this specific definition in this context. When used in this way the referenced definition will usually be in a dictionary in the same XML document.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":dictionaryEntry.
    gml__DictionaryEntryType*            dictionaryEntry                nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.opengis.net/gml/3.2":definitionMember.
    gml__DictionaryEntryType*            definitionMember               nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
//  END OF SUBSTITUTIONS
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":indirectEntry.
    gml__IndirectEntryType*              indirectEntry                  nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_DictionaryType          ;
    }                                   *__union_DictionaryType        ;
//  END OF CHOICE
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":AggregationAttributeGroup">.
/// Attribute "aggregationType" of XSD type "http://www.opengis.net/gml/3.2":AggregationType.
   @enum gml__AggregationType*           aggregationType                0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.opengis.net/gml/3.2":DiscreteCoverageType is a complexType with complexContent extension of XSD type "http://www.opengis.net/gml/3.2":AbstractCoverageType.
///
/// class gml__DiscreteCoverageType operations:
/// - gml__DiscreteCoverageType* soap_new_gml__DiscreteCoverageType(soap*) allocate and default initialize
/// - gml__DiscreteCoverageType* soap_new_gml__DiscreteCoverageType(soap*, int num) allocate array and default initialize values
/// - gml__DiscreteCoverageType* soap_new_req_gml__DiscreteCoverageType(soap*, ...) allocate, set required members
/// - gml__DiscreteCoverageType* soap_new_set_gml__DiscreteCoverageType(soap*, ...) allocate, set all public members
/// - gml__DiscreteCoverageType::soap_default(soap*) default initialize members
/// - int soap_read_gml__DiscreteCoverageType(soap*, gml__DiscreteCoverageType*) deserialize from a stream
/// - int soap_write_gml__DiscreteCoverageType(soap*, gml__DiscreteCoverageType*) serialize to a stream
/// - gml__DiscreteCoverageType* gml__DiscreteCoverageType::soap_dup(soap*) returns deep copy of gml__DiscreteCoverageType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__DiscreteCoverageType::soap_del() deep deletes gml__DiscreteCoverageType data members, use only after gml__DiscreteCoverageType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__DiscreteCoverageType : public gml__AbstractCoverageType
{ public:
/*  INHERITED FROM gml__AbstractGMLType:
//  BEGIN GROUP <xs:group name="StandardObjectProperties">
/// Vector of gml__MetaDataPropertyType* element refs of length 0..unbounded.
    std::vector<gml__MetaDataPropertyType*> metaDataProperty               0;
/// <PRE><BLOCKQUOTE>
///   The value of this property is a text description of the object. gml:description uses gml:StringOrRefType as its content model, so it may contain a simple text string content, or carry a reference to an external description. The use of gml:description to reference an external description has been deprecated and replaced by the gml:descriptionReference property.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":description.
    gml__StringOrRefType*                description                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The value of this property is a remote text description of the object. The xlink:href attribute of the gml:descriptionReference property references the external description.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":descriptionReference.
    gml__ReferenceType*                  descriptionReference           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Often, a special identifier is assigned to an object by the maintaining authority with the intention that it is used in references to the object For such cases, the codeSpace shall be provided. That identifier is usually unique either globally or within an application domain. gml:identifier is a pre-defined property for such identifiers.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":identifier.
    gml__CodeWithAuthorityType*          identifier                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The gml:name property provides a label or identifier for the object, commonly a descriptive name. An object may have several names, typically assigned by different authorities. gml:name uses the gml:CodeType content model. The authority for a name is indicated by the value of its (optional) codeSpace attribute. The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace. In common usage there will be one name per authority, so a processing application may select the name from its preferred codeSpace.
/// </BLOCKQUOTE></PRE>
/// Vector of gml__CodeType* element refs of length 0..unbounded.
    std::vector<gml__CodeType*         > name                           0;
//  END OF GROUP
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":id.
/// <PRE><BLOCKQUOTE>
///   The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.
/// </BLOCKQUOTE></PRE>
   @xsd__ID*                             gml__id                        0;	///< Optional attribute.
    END OF INHERITED FROM gml__AbstractGMLType */
/*  INHERITED FROM gml__AbstractFeatureType:
/// <PRE><BLOCKQUOTE>
///   This property describes the minimum bounding box or rectangle that encloses the entire feature.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":boundedBy.
    gml__BoundingShapeType*              boundedBy                      0;	///< Optional element.
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="location" minOccurs="0"> with global elements <priorityLocation>
   $int                                  __unionlocation                0;	///< Union _gml__union_DiscreteCoverageType selector: set to SOAP_UNION__gml__union_DiscreteCoverageType_<fieldname> or 0 to omit
/// Union for substitutionGroup gml__location.
    union _gml__union_DiscreteCoverageType
    {
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":location.
    gml__LocationPropertyType*           location                       0;	///< Optional element.
/// Element "http://www.opengis.net/gml/3.2":priorityLocation.
    gml__PriorityLocationPropertyType*   priorityLocation               nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_DiscreteCoverageType    ;
//  END OF SUBSTITUTIONS
    END OF INHERITED FROM gml__AbstractFeatureType */
/*  INHERITED FROM gml__AbstractCoverageType:
/// <PRE><BLOCKQUOTE>
///   The gml:domainSet property element describes the spatio-temporal region of interest, within which the coverage is defined. Its content model is given by gml:DomainSetType.
///   The value of the domain is thus a choice between a gml:AbstractGeometry and a gml:AbstractTimeObject. In the instance these abstract elements will normally be substituted by a geometry complex or temporal complex, to represent spatial coverages and time-series, respectively. The presence of the gml:AssociationAttributeGroup means that domainSet follows the usual GML property model and may use the xlink:href attribute to point to the domain, as an alternative to describing the domain inline. Ownership semantics may be provided using the gml:OwnershipAttributeGroup.
/// </BLOCKQUOTE></PRE>
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="domainSet"> with global elements <multiPointDomain> <multiCurveDomain> <multiSurfaceDomain> <multiSolidDomain> <gridDomain> <rectifiedGridDomain>
   $int                                  __uniondomainSet              ;	///< Union _gml__union_DiscreteCoverageType_ selector: set to SOAP_UNION__gml__union_DiscreteCoverageType__<fieldname>
/// Union for substitutionGroup gml__domainSet.
    union _gml__union_DiscreteCoverageType_
    {
/// <PRE><BLOCKQUOTE>
///   The gml:domainSet property element describes the spatio-temporal region of interest, within which the coverage is defined. Its content model is given by gml:DomainSetType.
///   The value of the domain is thus a choice between a gml:AbstractGeometry and a gml:AbstractTimeObject. In the instance these abstract elements will normally be substituted by a geometry complex or temporal complex, to represent spatial coverages and time-series, respectively. The presence of the gml:AssociationAttributeGroup means that domainSet follows the usual GML property model and may use the xlink:href attribute to point to the domain, as an alternative to describing the domain inline. Ownership semantics may be provided using the gml:OwnershipAttributeGroup.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":domainSet.
    gml__DomainSetType*                  domainSet                      nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.opengis.net/gml/3.2":multiPointDomain.
    gml__DomainSetType*                  multiPointDomain               nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.opengis.net/gml/3.2":multiCurveDomain.
    gml__DomainSetType*                  multiCurveDomain               nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.opengis.net/gml/3.2":multiSurfaceDomain.
    gml__DomainSetType*                  multiSurfaceDomain             nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.opengis.net/gml/3.2":multiSolidDomain.
    gml__DomainSetType*                  multiSolidDomain               nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.opengis.net/gml/3.2":gridDomain.
    gml__DomainSetType*                  gridDomain                     nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.opengis.net/gml/3.2":rectifiedGridDomain.
    gml__DomainSetType*                  rectifiedGridDomain            nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_DiscreteCoverageType_   ;
//  END OF SUBSTITUTIONS
/// <PRE><BLOCKQUOTE>
///   The gml:rangeSet property element contains the values of the coverage (sometimes called the attribute values). Its content model is given by gml:RangeSetType.
///   This content model supports a structural description of the range. The semantic information describing the range set is embedded using a uniform method, as part of the explicit values, or as a template value accompanying the representation using gml:DataBlock and gml:File.
///   The values from each component (or "band") in the range may be encoded within a gml:ValueArray element or a concrete member of the gml:AbstractScalarValueList substitution group . Use of these elements satisfies the value-type homogeneity requirement.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":rangeSet.
    gml__RangeSetType*                   rangeSet                       1;	///< Required element.
    END OF INHERITED FROM gml__AbstractCoverageType */
/// <PRE><BLOCKQUOTE>
///   The gml:coverageFunction property describes the mapping function from the domain to the range of the coverage.
///   The value of the CoverageFunction is one of gml:CoverageMappingRule and gml:GridFunction.
///   If the gml:coverageFunction property is omitted for a gridded coverage (including rectified gridded coverages) the gml:startPoint is assumed to be the value of the gml:low property in the gml:Grid geometry, and the gml:sequenceRule is assumed to be linear and the gml:axisOrder property is assumed to be "+1 +2".
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":coverageFunction.
    gml__CoverageFunctionType*           coverageFunction               0;	///< Optional element.
};

/// @brief "http://www.opengis.net/gml/3.2":AbstractContinuousCoverageType is an abstract complexType with complexContent extension of XSD type "http://www.opengis.net/gml/3.2":AbstractCoverageType.
///
/// class gml__AbstractContinuousCoverageType operations:
/// - gml__AbstractContinuousCoverageType* soap_new_gml__AbstractContinuousCoverageType(soap*) allocate and default initialize
/// - gml__AbstractContinuousCoverageType* soap_new_gml__AbstractContinuousCoverageType(soap*, int num) allocate array and default initialize values
/// - gml__AbstractContinuousCoverageType* soap_new_req_gml__AbstractContinuousCoverageType(soap*, ...) allocate, set required members
/// - gml__AbstractContinuousCoverageType* soap_new_set_gml__AbstractContinuousCoverageType(soap*, ...) allocate, set all public members
/// - gml__AbstractContinuousCoverageType::soap_default(soap*) default initialize members
/// - int soap_read_gml__AbstractContinuousCoverageType(soap*, gml__AbstractContinuousCoverageType*) deserialize from a stream
/// - int soap_write_gml__AbstractContinuousCoverageType(soap*, gml__AbstractContinuousCoverageType*) serialize to a stream
/// - gml__AbstractContinuousCoverageType* gml__AbstractContinuousCoverageType::soap_dup(soap*) returns deep copy of gml__AbstractContinuousCoverageType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__AbstractContinuousCoverageType::soap_del() deep deletes gml__AbstractContinuousCoverageType data members, use only after gml__AbstractContinuousCoverageType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__AbstractContinuousCoverageType : public gml__AbstractCoverageType
{ public:
/*  INHERITED FROM gml__AbstractGMLType:
//  BEGIN GROUP <xs:group name="StandardObjectProperties">
/// Vector of gml__MetaDataPropertyType* element refs of length 0..unbounded.
    std::vector<gml__MetaDataPropertyType*> metaDataProperty               0;
/// <PRE><BLOCKQUOTE>
///   The value of this property is a text description of the object. gml:description uses gml:StringOrRefType as its content model, so it may contain a simple text string content, or carry a reference to an external description. The use of gml:description to reference an external description has been deprecated and replaced by the gml:descriptionReference property.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":description.
    gml__StringOrRefType*                description                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The value of this property is a remote text description of the object. The xlink:href attribute of the gml:descriptionReference property references the external description.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":descriptionReference.
    gml__ReferenceType*                  descriptionReference           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Often, a special identifier is assigned to an object by the maintaining authority with the intention that it is used in references to the object For such cases, the codeSpace shall be provided. That identifier is usually unique either globally or within an application domain. gml:identifier is a pre-defined property for such identifiers.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":identifier.
    gml__CodeWithAuthorityType*          identifier                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The gml:name property provides a label or identifier for the object, commonly a descriptive name. An object may have several names, typically assigned by different authorities. gml:name uses the gml:CodeType content model. The authority for a name is indicated by the value of its (optional) codeSpace attribute. The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace. In common usage there will be one name per authority, so a processing application may select the name from its preferred codeSpace.
/// </BLOCKQUOTE></PRE>
/// Vector of gml__CodeType* element refs of length 0..unbounded.
    std::vector<gml__CodeType*         > name                           0;
//  END OF GROUP
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":id.
/// <PRE><BLOCKQUOTE>
///   The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.
/// </BLOCKQUOTE></PRE>
   @xsd__ID*                             gml__id                        0;	///< Optional attribute.
    END OF INHERITED FROM gml__AbstractGMLType */
/*  INHERITED FROM gml__AbstractFeatureType:
/// <PRE><BLOCKQUOTE>
///   This property describes the minimum bounding box or rectangle that encloses the entire feature.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":boundedBy.
    gml__BoundingShapeType*              boundedBy                      0;	///< Optional element.
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="location" minOccurs="0"> with global elements <priorityLocation>
   $int                                  __unionlocation                0;	///< Union _gml__union_AbstractContinuousCoverageType selector: set to SOAP_UNION__gml__union_AbstractContinuousCoverageType_<fieldname> or 0 to omit
/// Union for substitutionGroup gml__location.
    union _gml__union_AbstractContinuousCoverageType
    {
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":location.
    gml__LocationPropertyType*           location                       0;	///< Optional element.
/// Element "http://www.opengis.net/gml/3.2":priorityLocation.
    gml__PriorityLocationPropertyType*   priorityLocation               nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_AbstractContinuousCoverageType;
//  END OF SUBSTITUTIONS
    END OF INHERITED FROM gml__AbstractFeatureType */
/*  INHERITED FROM gml__AbstractCoverageType:
/// <PRE><BLOCKQUOTE>
///   The gml:domainSet property element describes the spatio-temporal region of interest, within which the coverage is defined. Its content model is given by gml:DomainSetType.
///   The value of the domain is thus a choice between a gml:AbstractGeometry and a gml:AbstractTimeObject. In the instance these abstract elements will normally be substituted by a geometry complex or temporal complex, to represent spatial coverages and time-series, respectively. The presence of the gml:AssociationAttributeGroup means that domainSet follows the usual GML property model and may use the xlink:href attribute to point to the domain, as an alternative to describing the domain inline. Ownership semantics may be provided using the gml:OwnershipAttributeGroup.
/// </BLOCKQUOTE></PRE>
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="domainSet"> with global elements <multiPointDomain> <multiCurveDomain> <multiSurfaceDomain> <multiSolidDomain> <gridDomain> <rectifiedGridDomain>
   $int                                  __uniondomainSet              ;	///< Union _gml__union_AbstractContinuousCoverageType_ selector: set to SOAP_UNION__gml__union_AbstractContinuousCoverageType__<fieldname>
/// Union for substitutionGroup gml__domainSet.
    union _gml__union_AbstractContinuousCoverageType_
    {
/// <PRE><BLOCKQUOTE>
///   The gml:domainSet property element describes the spatio-temporal region of interest, within which the coverage is defined. Its content model is given by gml:DomainSetType.
///   The value of the domain is thus a choice between a gml:AbstractGeometry and a gml:AbstractTimeObject. In the instance these abstract elements will normally be substituted by a geometry complex or temporal complex, to represent spatial coverages and time-series, respectively. The presence of the gml:AssociationAttributeGroup means that domainSet follows the usual GML property model and may use the xlink:href attribute to point to the domain, as an alternative to describing the domain inline. Ownership semantics may be provided using the gml:OwnershipAttributeGroup.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":domainSet.
    gml__DomainSetType*                  domainSet                      nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.opengis.net/gml/3.2":multiPointDomain.
    gml__DomainSetType*                  multiPointDomain               nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.opengis.net/gml/3.2":multiCurveDomain.
    gml__DomainSetType*                  multiCurveDomain               nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.opengis.net/gml/3.2":multiSurfaceDomain.
    gml__DomainSetType*                  multiSurfaceDomain             nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.opengis.net/gml/3.2":multiSolidDomain.
    gml__DomainSetType*                  multiSolidDomain               nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.opengis.net/gml/3.2":gridDomain.
    gml__DomainSetType*                  gridDomain                     nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.opengis.net/gml/3.2":rectifiedGridDomain.
    gml__DomainSetType*                  rectifiedGridDomain            nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_AbstractContinuousCoverageType_;
//  END OF SUBSTITUTIONS
/// <PRE><BLOCKQUOTE>
///   The gml:rangeSet property element contains the values of the coverage (sometimes called the attribute values). Its content model is given by gml:RangeSetType.
///   This content model supports a structural description of the range. The semantic information describing the range set is embedded using a uniform method, as part of the explicit values, or as a template value accompanying the representation using gml:DataBlock and gml:File.
///   The values from each component (or "band") in the range may be encoded within a gml:ValueArray element or a concrete member of the gml:AbstractScalarValueList substitution group . Use of these elements satisfies the value-type homogeneity requirement.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":rangeSet.
    gml__RangeSetType*                   rangeSet                       1;	///< Required element.
    END OF INHERITED FROM gml__AbstractCoverageType */
/// <PRE><BLOCKQUOTE>
///   The gml:coverageFunction property describes the mapping function from the domain to the range of the coverage.
///   The value of the CoverageFunction is one of gml:CoverageMappingRule and gml:GridFunction.
///   If the gml:coverageFunction property is omitted for a gridded coverage (including rectified gridded coverages) the gml:startPoint is assumed to be the value of the gml:low property in the gml:Grid geometry, and the gml:sequenceRule is assumed to be linear and the gml:axisOrder property is assumed to be "+1 +2".
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":coverageFunction.
    gml__CoverageFunctionType*           coverageFunction               0;	///< Optional element.
};

/// @brief "http://www.opengis.net/gml/3.2":AbstractTimeGeometricPrimitiveType is an abstract complexType with complexContent extension of XSD type "http://www.opengis.net/gml/3.2":AbstractTimePrimitiveType.
///
/// class gml__AbstractTimeGeometricPrimitiveType operations:
/// - gml__AbstractTimeGeometricPrimitiveType* soap_new_gml__AbstractTimeGeometricPrimitiveType(soap*) allocate and default initialize
/// - gml__AbstractTimeGeometricPrimitiveType* soap_new_gml__AbstractTimeGeometricPrimitiveType(soap*, int num) allocate array and default initialize values
/// - gml__AbstractTimeGeometricPrimitiveType* soap_new_req_gml__AbstractTimeGeometricPrimitiveType(soap*, ...) allocate, set required members
/// - gml__AbstractTimeGeometricPrimitiveType* soap_new_set_gml__AbstractTimeGeometricPrimitiveType(soap*, ...) allocate, set all public members
/// - gml__AbstractTimeGeometricPrimitiveType::soap_default(soap*) default initialize members
/// - int soap_read_gml__AbstractTimeGeometricPrimitiveType(soap*, gml__AbstractTimeGeometricPrimitiveType*) deserialize from a stream
/// - int soap_write_gml__AbstractTimeGeometricPrimitiveType(soap*, gml__AbstractTimeGeometricPrimitiveType*) serialize to a stream
/// - gml__AbstractTimeGeometricPrimitiveType* gml__AbstractTimeGeometricPrimitiveType::soap_dup(soap*) returns deep copy of gml__AbstractTimeGeometricPrimitiveType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__AbstractTimeGeometricPrimitiveType::soap_del() deep deletes gml__AbstractTimeGeometricPrimitiveType data members, use only after gml__AbstractTimeGeometricPrimitiveType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__AbstractTimeGeometricPrimitiveType : public gml__AbstractTimePrimitiveType
{ public:
/*  INHERITED FROM gml__AbstractGMLType:
//  BEGIN GROUP <xs:group name="StandardObjectProperties">
/// Vector of gml__MetaDataPropertyType* element refs of length 0..unbounded.
    std::vector<gml__MetaDataPropertyType*> metaDataProperty               0;
/// <PRE><BLOCKQUOTE>
///   The value of this property is a text description of the object. gml:description uses gml:StringOrRefType as its content model, so it may contain a simple text string content, or carry a reference to an external description. The use of gml:description to reference an external description has been deprecated and replaced by the gml:descriptionReference property.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":description.
    gml__StringOrRefType*                description                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The value of this property is a remote text description of the object. The xlink:href attribute of the gml:descriptionReference property references the external description.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":descriptionReference.
    gml__ReferenceType*                  descriptionReference           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Often, a special identifier is assigned to an object by the maintaining authority with the intention that it is used in references to the object For such cases, the codeSpace shall be provided. That identifier is usually unique either globally or within an application domain. gml:identifier is a pre-defined property for such identifiers.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":identifier.
    gml__CodeWithAuthorityType*          identifier                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The gml:name property provides a label or identifier for the object, commonly a descriptive name. An object may have several names, typically assigned by different authorities. gml:name uses the gml:CodeType content model. The authority for a name is indicated by the value of its (optional) codeSpace attribute. The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace. In common usage there will be one name per authority, so a processing application may select the name from its preferred codeSpace.
/// </BLOCKQUOTE></PRE>
/// Vector of gml__CodeType* element refs of length 0..unbounded.
    std::vector<gml__CodeType*         > name                           0;
//  END OF GROUP
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":id.
/// <PRE><BLOCKQUOTE>
///   The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.
/// </BLOCKQUOTE></PRE>
   @xsd__ID*                             gml__id                        0;	///< Optional attribute.
    END OF INHERITED FROM gml__AbstractGMLType */
/*  INHERITED FROM gml__AbstractTimeObjectType:
    END OF INHERITED FROM gml__AbstractTimeObjectType */
/*  INHERITED FROM gml__AbstractTimePrimitiveType:
/// Vector of gml__RelatedTimeType* of length 0..unbounded.
    std::vector<gml__RelatedTimeType*  > relatedTime                    0;
    END OF INHERITED FROM gml__AbstractTimePrimitiveType */
/// Attribute "frame" of XSD type xs:anyURI.
   @xsd__anyURI                          frame                          0;	///< Default attribute value="#ISO-8601".
};

/// @brief "http://www.opengis.net/gml/3.2":RectifiedGridType is a complexType with complexContent extension of XSD type "http://www.opengis.net/gml/3.2":GridType.
///
/// class gml__RectifiedGridType operations:
/// - gml__RectifiedGridType* soap_new_gml__RectifiedGridType(soap*) allocate and default initialize
/// - gml__RectifiedGridType* soap_new_gml__RectifiedGridType(soap*, int num) allocate array and default initialize values
/// - gml__RectifiedGridType* soap_new_req_gml__RectifiedGridType(soap*, ...) allocate, set required members
/// - gml__RectifiedGridType* soap_new_set_gml__RectifiedGridType(soap*, ...) allocate, set all public members
/// - gml__RectifiedGridType::soap_default(soap*) default initialize members
/// - int soap_read_gml__RectifiedGridType(soap*, gml__RectifiedGridType*) deserialize from a stream
/// - int soap_write_gml__RectifiedGridType(soap*, gml__RectifiedGridType*) serialize to a stream
/// - gml__RectifiedGridType* gml__RectifiedGridType::soap_dup(soap*) returns deep copy of gml__RectifiedGridType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__RectifiedGridType::soap_del() deep deletes gml__RectifiedGridType data members, use only after gml__RectifiedGridType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__RectifiedGridType : public gml__GridType
{ public:
/*  INHERITED FROM gml__AbstractGMLType:
//  BEGIN GROUP <xs:group name="StandardObjectProperties">
/// Vector of gml__MetaDataPropertyType* element refs of length 0..unbounded.
    std::vector<gml__MetaDataPropertyType*> metaDataProperty               0;
/// <PRE><BLOCKQUOTE>
///   The value of this property is a text description of the object. gml:description uses gml:StringOrRefType as its content model, so it may contain a simple text string content, or carry a reference to an external description. The use of gml:description to reference an external description has been deprecated and replaced by the gml:descriptionReference property.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":description.
    gml__StringOrRefType*                description                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The value of this property is a remote text description of the object. The xlink:href attribute of the gml:descriptionReference property references the external description.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":descriptionReference.
    gml__ReferenceType*                  descriptionReference           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Often, a special identifier is assigned to an object by the maintaining authority with the intention that it is used in references to the object For such cases, the codeSpace shall be provided. That identifier is usually unique either globally or within an application domain. gml:identifier is a pre-defined property for such identifiers.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":identifier.
    gml__CodeWithAuthorityType*          identifier                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The gml:name property provides a label or identifier for the object, commonly a descriptive name. An object may have several names, typically assigned by different authorities. gml:name uses the gml:CodeType content model. The authority for a name is indicated by the value of its (optional) codeSpace attribute. The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace. In common usage there will be one name per authority, so a processing application may select the name from its preferred codeSpace.
/// </BLOCKQUOTE></PRE>
/// Vector of gml__CodeType* element refs of length 0..unbounded.
    std::vector<gml__CodeType*         > name                           0;
//  END OF GROUP
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":id.
/// <PRE><BLOCKQUOTE>
///   The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.
/// </BLOCKQUOTE></PRE>
   @xsd__ID*                             gml__id                        0;	///< Optional attribute.
    END OF INHERITED FROM gml__AbstractGMLType */
/*  INHERITED FROM gml__AbstractGeometryType:
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":SRSReferenceGroup">.
/// Attribute "srsName" of XSD type xs:anyURI.
   @xsd__anyURI*                         srsName                        0;	///< Optional attribute.
/// Attribute "srsDimension" of XSD type xs:positiveInteger.
   @xsd__positiveInteger*                srsDimension                   0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":SRSInformationGroup">.
/// Attribute "axisLabels" of XSD type "http://www.opengis.net/gml/3.2":NCNameList.
   @gml__NCNameList*                     axisLabels                     0;	///< Optional attribute.
/// Attribute "uomLabels" of XSD type "http://www.opengis.net/gml/3.2":NCNameList.
   @gml__NCNameList*                     uomLabels                      0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
    END OF INHERITED FROM gml__AbstractGeometryType */
/*  INHERITED FROM gml__GridType:
/// Element "limits" of XSD type "http://www.opengis.net/gml/3.2":GridLimitsType.
    gml__GridLimitsType*                 limits                         1;	///< Required element.
//  BEGIN CHOICE <xs:choice>
   $int                                  __union_RectifiedGridType     ;	///< Union _gml__union_RectifiedGridType selector: set to SOAP_UNION__gml__union_RectifiedGridType_<fieldname>
    union _gml__union_RectifiedGridType
    {
/// Element "axisLabels" of XSD type "http://www.opengis.net/gml/3.2":NCNameList.
    gml__NCNameList*                     axisLabels                     nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Vector of std::string of length 1..unbounded.
    std::vector<std::string           > *axisName                       1;
    }                                    union_RectifiedGridType       ;
//  END OF CHOICE
/// Attribute "dimension" of XSD type xs:positiveInteger.
   @xsd__positiveInteger                 dimension                      1;	///< Required attribute.
    END OF INHERITED FROM gml__GridType */
/// Element "origin" of XSD type "http://www.opengis.net/gml/3.2":PointPropertyType.
    gml__PointPropertyType*              origin                         1;	///< Required element.
/// Vector of gml__VectorType* of length 1..unbounded.
    std::vector<gml__VectorType*       > offsetVector                   1;
};

/// @brief "http://www.opengis.net/gml/3.2":IdentifiedObjectType is an abstract complexType with complexContent extension of XSD type "http://www.opengis.net/gml/3.2":DefinitionType.
///
/// <PRE><BLOCKQUOTE>
///   gml:IdentifiedObjectType provides identification properties of a CRS-related object. In gml:DefinitionType, the gml:identifier element shall be the primary name by which this object is identified, encoding the "name" attribute in the UML model.
///   Zero or more of the gml:name elements can be an unordered set of "identifiers", encoding the "identifier" attribute in the UML model. Each of these gml:name elements can reference elsewhere the object's defining information or be an identifier by which this object can be referenced.
///   Zero or more other gml:name elements can be an unordered set of "alias" alternative names by which this CRS related object is identified, encoding the "alias" attributes in the UML model. An object may have several aliases, typically used in different contexts. The context for an alias is indicated by the value of its (optional) codeSpace attribute.
///   Any needed version information shall be included in the codeSpace attribute of a gml:identifier and gml:name elements. In this use, the gml:remarks element in the gml:DefinitionType shall contain comments on or information about this object, including data source information.
/// </BLOCKQUOTE></PRE>
/// class gml__IdentifiedObjectType operations:
/// - gml__IdentifiedObjectType* soap_new_gml__IdentifiedObjectType(soap*) allocate and default initialize
/// - gml__IdentifiedObjectType* soap_new_gml__IdentifiedObjectType(soap*, int num) allocate array and default initialize values
/// - gml__IdentifiedObjectType* soap_new_req_gml__IdentifiedObjectType(soap*, ...) allocate, set required members
/// - gml__IdentifiedObjectType* soap_new_set_gml__IdentifiedObjectType(soap*, ...) allocate, set all public members
/// - gml__IdentifiedObjectType::soap_default(soap*) default initialize members
/// - int soap_read_gml__IdentifiedObjectType(soap*, gml__IdentifiedObjectType*) deserialize from a stream
/// - int soap_write_gml__IdentifiedObjectType(soap*, gml__IdentifiedObjectType*) serialize to a stream
/// - gml__IdentifiedObjectType* gml__IdentifiedObjectType::soap_dup(soap*) returns deep copy of gml__IdentifiedObjectType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__IdentifiedObjectType::soap_del() deep deletes gml__IdentifiedObjectType data members, use only after gml__IdentifiedObjectType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__IdentifiedObjectType : public gml__DefinitionType
{ public:
/*  INHERITED FROM gml__DefinitionBaseType:
    END OF INHERITED FROM gml__DefinitionBaseType */
/*  INHERITED FROM gml__DefinitionType:
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":remarks.
    std::string*                         remarks                        0;	///< Optional element.
    END OF INHERITED FROM gml__DefinitionType */
};

/// @brief "http://www.opengis.net/gml/3.2":DirectedObservationType is a complexType with complexContent extension of XSD type "http://www.opengis.net/gml/3.2":ObservationType.
///
/// class gml__DirectedObservationType operations:
/// - gml__DirectedObservationType* soap_new_gml__DirectedObservationType(soap*) allocate and default initialize
/// - gml__DirectedObservationType* soap_new_gml__DirectedObservationType(soap*, int num) allocate array and default initialize values
/// - gml__DirectedObservationType* soap_new_req_gml__DirectedObservationType(soap*, ...) allocate, set required members
/// - gml__DirectedObservationType* soap_new_set_gml__DirectedObservationType(soap*, ...) allocate, set all public members
/// - gml__DirectedObservationType::soap_default(soap*) default initialize members
/// - int soap_read_gml__DirectedObservationType(soap*, gml__DirectedObservationType*) deserialize from a stream
/// - int soap_write_gml__DirectedObservationType(soap*, gml__DirectedObservationType*) serialize to a stream
/// - gml__DirectedObservationType* gml__DirectedObservationType::soap_dup(soap*) returns deep copy of gml__DirectedObservationType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__DirectedObservationType::soap_del() deep deletes gml__DirectedObservationType data members, use only after gml__DirectedObservationType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__DirectedObservationType : public gml__ObservationType
{ public:
/*  INHERITED FROM gml__AbstractGMLType:
//  BEGIN GROUP <xs:group name="StandardObjectProperties">
/// Vector of gml__MetaDataPropertyType* element refs of length 0..unbounded.
    std::vector<gml__MetaDataPropertyType*> metaDataProperty               0;
/// <PRE><BLOCKQUOTE>
///   The value of this property is a text description of the object. gml:description uses gml:StringOrRefType as its content model, so it may contain a simple text string content, or carry a reference to an external description. The use of gml:description to reference an external description has been deprecated and replaced by the gml:descriptionReference property.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":description.
    gml__StringOrRefType*                description                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The value of this property is a remote text description of the object. The xlink:href attribute of the gml:descriptionReference property references the external description.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":descriptionReference.
    gml__ReferenceType*                  descriptionReference           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Often, a special identifier is assigned to an object by the maintaining authority with the intention that it is used in references to the object For such cases, the codeSpace shall be provided. That identifier is usually unique either globally or within an application domain. gml:identifier is a pre-defined property for such identifiers.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":identifier.
    gml__CodeWithAuthorityType*          identifier                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The gml:name property provides a label or identifier for the object, commonly a descriptive name. An object may have several names, typically assigned by different authorities. gml:name uses the gml:CodeType content model. The authority for a name is indicated by the value of its (optional) codeSpace attribute. The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace. In common usage there will be one name per authority, so a processing application may select the name from its preferred codeSpace.
/// </BLOCKQUOTE></PRE>
/// Vector of gml__CodeType* element refs of length 0..unbounded.
    std::vector<gml__CodeType*         > name                           0;
//  END OF GROUP
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":id.
/// <PRE><BLOCKQUOTE>
///   The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.
/// </BLOCKQUOTE></PRE>
   @xsd__ID*                             gml__id                        0;	///< Optional attribute.
    END OF INHERITED FROM gml__AbstractGMLType */
/*  INHERITED FROM gml__AbstractFeatureType:
/// <PRE><BLOCKQUOTE>
///   This property describes the minimum bounding box or rectangle that encloses the entire feature.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":boundedBy.
    gml__BoundingShapeType*              boundedBy                      0;	///< Optional element.
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="location" minOccurs="0"> with global elements <priorityLocation>
   $int                                  __unionlocation                0;	///< Union _gml__union_DirectedObservationType selector: set to SOAP_UNION__gml__union_DirectedObservationType_<fieldname> or 0 to omit
/// Union for substitutionGroup gml__location.
    union _gml__union_DirectedObservationType
    {
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":location.
    gml__LocationPropertyType*           location                       0;	///< Optional element.
/// Element "http://www.opengis.net/gml/3.2":priorityLocation.
    gml__PriorityLocationPropertyType*   priorityLocation               nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_DirectedObservationType ;
//  END OF SUBSTITUTIONS
    END OF INHERITED FROM gml__AbstractFeatureType */
/*  INHERITED FROM gml__ObservationType:
/// <PRE><BLOCKQUOTE>
///   gml:validTime is a convenience property element.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":validTime.
    gml__TimePrimitivePropertyType*      validTime                      1;	///< Required element.
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":using.
    gml__ProcedurePropertyType*          using_                         0;	///< Optional element.
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="target" minOccurs="0"> with global elements <subject>
   $int                                  __uniontarget                  0;	///< Union _gml__union_DirectedObservationType_ selector: set to SOAP_UNION__gml__union_DirectedObservationType__<fieldname> or 0 to omit
/// Union for substitutionGroup gml__target.
    union _gml__union_DirectedObservationType_
    {
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":target.
    gml__TargetPropertyType*             target                         0;	///< Optional element.
/// Element "http://www.opengis.net/gml/3.2":subject.
    gml__TargetPropertyType*             subject                        nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_DirectedObservationType_;
//  END OF SUBSTITUTIONS
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":resultOf.
    gml__ResultType*                     resultOf                       1;	///< Required element.
    END OF INHERITED FROM gml__ObservationType */
/// <PRE><BLOCKQUOTE>
///   The property gml:direction is intended as a pre-defined property expressing a direction to be assigned to features defined in a GML application schema.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":direction.
    gml__DirectionPropertyType*          direction                      1;	///< Required element.
};

/// @brief "http://www.opengis.net/gml/3.2":TimeReferenceSystemType is a complexType with complexContent extension of XSD type "http://www.opengis.net/gml/3.2":DefinitionType.
///
/// class gml__TimeReferenceSystemType operations:
/// - gml__TimeReferenceSystemType* soap_new_gml__TimeReferenceSystemType(soap*) allocate and default initialize
/// - gml__TimeReferenceSystemType* soap_new_gml__TimeReferenceSystemType(soap*, int num) allocate array and default initialize values
/// - gml__TimeReferenceSystemType* soap_new_req_gml__TimeReferenceSystemType(soap*, ...) allocate, set required members
/// - gml__TimeReferenceSystemType* soap_new_set_gml__TimeReferenceSystemType(soap*, ...) allocate, set all public members
/// - gml__TimeReferenceSystemType::soap_default(soap*) default initialize members
/// - int soap_read_gml__TimeReferenceSystemType(soap*, gml__TimeReferenceSystemType*) deserialize from a stream
/// - int soap_write_gml__TimeReferenceSystemType(soap*, gml__TimeReferenceSystemType*) serialize to a stream
/// - gml__TimeReferenceSystemType* gml__TimeReferenceSystemType::soap_dup(soap*) returns deep copy of gml__TimeReferenceSystemType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__TimeReferenceSystemType::soap_del() deep deletes gml__TimeReferenceSystemType data members, use only after gml__TimeReferenceSystemType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__TimeReferenceSystemType : public gml__DefinitionType
{ public:
/*  INHERITED FROM gml__DefinitionBaseType:
    END OF INHERITED FROM gml__DefinitionBaseType */
/*  INHERITED FROM gml__DefinitionType:
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":remarks.
    std::string*                         remarks                        0;	///< Optional element.
    END OF INHERITED FROM gml__DefinitionType */
/// Element "domainOfValidity" of XSD type xs:string.
    std::string                          domainOfValidity               1;	///< Required element.
};

/// @brief "http://www.opengis.net/gml/3.2":TimeCalendarEraType is a complexType with complexContent extension of XSD type "http://www.opengis.net/gml/3.2":DefinitionType.
///
/// class gml__TimeCalendarEraType operations:
/// - gml__TimeCalendarEraType* soap_new_gml__TimeCalendarEraType(soap*) allocate and default initialize
/// - gml__TimeCalendarEraType* soap_new_gml__TimeCalendarEraType(soap*, int num) allocate array and default initialize values
/// - gml__TimeCalendarEraType* soap_new_req_gml__TimeCalendarEraType(soap*, ...) allocate, set required members
/// - gml__TimeCalendarEraType* soap_new_set_gml__TimeCalendarEraType(soap*, ...) allocate, set all public members
/// - gml__TimeCalendarEraType::soap_default(soap*) default initialize members
/// - int soap_read_gml__TimeCalendarEraType(soap*, gml__TimeCalendarEraType*) deserialize from a stream
/// - int soap_write_gml__TimeCalendarEraType(soap*, gml__TimeCalendarEraType*) serialize to a stream
/// - gml__TimeCalendarEraType* gml__TimeCalendarEraType::soap_dup(soap*) returns deep copy of gml__TimeCalendarEraType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__TimeCalendarEraType::soap_del() deep deletes gml__TimeCalendarEraType data members, use only after gml__TimeCalendarEraType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__TimeCalendarEraType : public gml__DefinitionType
{ public:
/*  INHERITED FROM gml__DefinitionBaseType:
    END OF INHERITED FROM gml__DefinitionBaseType */
/*  INHERITED FROM gml__DefinitionType:
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":remarks.
    std::string*                         remarks                        0;	///< Optional element.
    END OF INHERITED FROM gml__DefinitionType */
/// Element "referenceEvent" of XSD type "http://www.opengis.net/gml/3.2":StringOrRefType.
    gml__StringOrRefType*                referenceEvent                 1;	///< Required element.
/// Element "referenceDate" of XSD type "http://www.opengis.net/gml/3.2":CalDate.
    gml__CalDate                         referenceDate                  1;	///< Required element.
/// Element "julianReference" of XSD type xs:decimal.
    xsd__decimal                         julianReference                1;	///< Required element.
/// Element "epochOfUse" of XSD type "http://www.opengis.net/gml/3.2":TimePeriodPropertyType.
    gml__TimePeriodPropertyType*         epochOfUse                     1;	///< Required element.
};

/// @brief "http://www.opengis.net/gml/3.2":TimeOrdinalEraType is a complexType with complexContent extension of XSD type "http://www.opengis.net/gml/3.2":DefinitionType.
///
/// class gml__TimeOrdinalEraType operations:
/// - gml__TimeOrdinalEraType* soap_new_gml__TimeOrdinalEraType(soap*) allocate and default initialize
/// - gml__TimeOrdinalEraType* soap_new_gml__TimeOrdinalEraType(soap*, int num) allocate array and default initialize values
/// - gml__TimeOrdinalEraType* soap_new_req_gml__TimeOrdinalEraType(soap*, ...) allocate, set required members
/// - gml__TimeOrdinalEraType* soap_new_set_gml__TimeOrdinalEraType(soap*, ...) allocate, set all public members
/// - gml__TimeOrdinalEraType::soap_default(soap*) default initialize members
/// - int soap_read_gml__TimeOrdinalEraType(soap*, gml__TimeOrdinalEraType*) deserialize from a stream
/// - int soap_write_gml__TimeOrdinalEraType(soap*, gml__TimeOrdinalEraType*) serialize to a stream
/// - gml__TimeOrdinalEraType* gml__TimeOrdinalEraType::soap_dup(soap*) returns deep copy of gml__TimeOrdinalEraType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__TimeOrdinalEraType::soap_del() deep deletes gml__TimeOrdinalEraType data members, use only after gml__TimeOrdinalEraType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__TimeOrdinalEraType : public gml__DefinitionType
{ public:
/*  INHERITED FROM gml__DefinitionBaseType:
    END OF INHERITED FROM gml__DefinitionBaseType */
/*  INHERITED FROM gml__DefinitionType:
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":remarks.
    std::string*                         remarks                        0;	///< Optional element.
    END OF INHERITED FROM gml__DefinitionType */
/// Vector of gml__RelatedTimeType* of length 0..unbounded.
    std::vector<gml__RelatedTimeType*  > relatedTime                    0;
/// Element "start" of XSD type "http://www.opengis.net/gml/3.2":TimeNodePropertyType.
    gml__TimeNodePropertyType*           start                          0;	///< Optional element.
/// Element "end" of XSD type "http://www.opengis.net/gml/3.2":TimeNodePropertyType.
    gml__TimeNodePropertyType*           end                            0;	///< Optional element.
/// Element "extent" of XSD type "http://www.opengis.net/gml/3.2":TimePeriodPropertyType.
    gml__TimePeriodPropertyType*         extent                         0;	///< Optional element.
/// Vector of gml__TimeOrdinalEraPropertyType* of length 0..unbounded.
    std::vector<gml__TimeOrdinalEraPropertyType*> member                         0;
/// Element "group" of XSD type "http://www.opengis.net/gml/3.2":ReferenceType.
    gml__ReferenceType*                  group                          0;	///< Optional element.
};

/// @brief "http://www.opengis.net/gml/3.2":AbstractTimeTopologyPrimitiveType is an abstract complexType with complexContent extension of XSD type "http://www.opengis.net/gml/3.2":AbstractTimePrimitiveType.
///
/// class gml__AbstractTimeTopologyPrimitiveType operations:
/// - gml__AbstractTimeTopologyPrimitiveType* soap_new_gml__AbstractTimeTopologyPrimitiveType(soap*) allocate and default initialize
/// - gml__AbstractTimeTopologyPrimitiveType* soap_new_gml__AbstractTimeTopologyPrimitiveType(soap*, int num) allocate array and default initialize values
/// - gml__AbstractTimeTopologyPrimitiveType* soap_new_req_gml__AbstractTimeTopologyPrimitiveType(soap*, ...) allocate, set required members
/// - gml__AbstractTimeTopologyPrimitiveType* soap_new_set_gml__AbstractTimeTopologyPrimitiveType(soap*, ...) allocate, set all public members
/// - gml__AbstractTimeTopologyPrimitiveType::soap_default(soap*) default initialize members
/// - int soap_read_gml__AbstractTimeTopologyPrimitiveType(soap*, gml__AbstractTimeTopologyPrimitiveType*) deserialize from a stream
/// - int soap_write_gml__AbstractTimeTopologyPrimitiveType(soap*, gml__AbstractTimeTopologyPrimitiveType*) serialize to a stream
/// - gml__AbstractTimeTopologyPrimitiveType* gml__AbstractTimeTopologyPrimitiveType::soap_dup(soap*) returns deep copy of gml__AbstractTimeTopologyPrimitiveType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__AbstractTimeTopologyPrimitiveType::soap_del() deep deletes gml__AbstractTimeTopologyPrimitiveType data members, use only after gml__AbstractTimeTopologyPrimitiveType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__AbstractTimeTopologyPrimitiveType : public gml__AbstractTimePrimitiveType
{ public:
/*  INHERITED FROM gml__AbstractGMLType:
//  BEGIN GROUP <xs:group name="StandardObjectProperties">
/// Vector of gml__MetaDataPropertyType* element refs of length 0..unbounded.
    std::vector<gml__MetaDataPropertyType*> metaDataProperty               0;
/// <PRE><BLOCKQUOTE>
///   The value of this property is a text description of the object. gml:description uses gml:StringOrRefType as its content model, so it may contain a simple text string content, or carry a reference to an external description. The use of gml:description to reference an external description has been deprecated and replaced by the gml:descriptionReference property.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":description.
    gml__StringOrRefType*                description                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The value of this property is a remote text description of the object. The xlink:href attribute of the gml:descriptionReference property references the external description.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":descriptionReference.
    gml__ReferenceType*                  descriptionReference           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Often, a special identifier is assigned to an object by the maintaining authority with the intention that it is used in references to the object For such cases, the codeSpace shall be provided. That identifier is usually unique either globally or within an application domain. gml:identifier is a pre-defined property for such identifiers.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":identifier.
    gml__CodeWithAuthorityType*          identifier                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The gml:name property provides a label or identifier for the object, commonly a descriptive name. An object may have several names, typically assigned by different authorities. gml:name uses the gml:CodeType content model. The authority for a name is indicated by the value of its (optional) codeSpace attribute. The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace. In common usage there will be one name per authority, so a processing application may select the name from its preferred codeSpace.
/// </BLOCKQUOTE></PRE>
/// Vector of gml__CodeType* element refs of length 0..unbounded.
    std::vector<gml__CodeType*         > name                           0;
//  END OF GROUP
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":id.
/// <PRE><BLOCKQUOTE>
///   The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.
/// </BLOCKQUOTE></PRE>
   @xsd__ID*                             gml__id                        0;	///< Optional attribute.
    END OF INHERITED FROM gml__AbstractGMLType */
/*  INHERITED FROM gml__AbstractTimeObjectType:
    END OF INHERITED FROM gml__AbstractTimeObjectType */
/*  INHERITED FROM gml__AbstractTimePrimitiveType:
/// Vector of gml__RelatedTimeType* of length 0..unbounded.
    std::vector<gml__RelatedTimeType*  > relatedTime                    0;
    END OF INHERITED FROM gml__AbstractTimePrimitiveType */
/// Element "complex" of XSD type "http://www.opengis.net/gml/3.2":ReferenceType.
    gml__ReferenceType*                  complex                        0;	///< Optional element.
};

/// @brief "http://www.opengis.net/gml/3.2":TimeTopologyComplexType is an abstract complexType with complexContent extension of XSD type "http://www.opengis.net/gml/3.2":AbstractTimeComplexType.
///
/// class gml__TimeTopologyComplexType operations:
/// - gml__TimeTopologyComplexType* soap_new_gml__TimeTopologyComplexType(soap*) allocate and default initialize
/// - gml__TimeTopologyComplexType* soap_new_gml__TimeTopologyComplexType(soap*, int num) allocate array and default initialize values
/// - gml__TimeTopologyComplexType* soap_new_req_gml__TimeTopologyComplexType(soap*, ...) allocate, set required members
/// - gml__TimeTopologyComplexType* soap_new_set_gml__TimeTopologyComplexType(soap*, ...) allocate, set all public members
/// - gml__TimeTopologyComplexType::soap_default(soap*) default initialize members
/// - int soap_read_gml__TimeTopologyComplexType(soap*, gml__TimeTopologyComplexType*) deserialize from a stream
/// - int soap_write_gml__TimeTopologyComplexType(soap*, gml__TimeTopologyComplexType*) serialize to a stream
/// - gml__TimeTopologyComplexType* gml__TimeTopologyComplexType::soap_dup(soap*) returns deep copy of gml__TimeTopologyComplexType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__TimeTopologyComplexType::soap_del() deep deletes gml__TimeTopologyComplexType data members, use only after gml__TimeTopologyComplexType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__TimeTopologyComplexType : public gml__AbstractTimeComplexType
{ public:
/*  INHERITED FROM gml__AbstractGMLType:
//  BEGIN GROUP <xs:group name="StandardObjectProperties">
/// Vector of gml__MetaDataPropertyType* element refs of length 0..unbounded.
    std::vector<gml__MetaDataPropertyType*> metaDataProperty               0;
/// <PRE><BLOCKQUOTE>
///   The value of this property is a text description of the object. gml:description uses gml:StringOrRefType as its content model, so it may contain a simple text string content, or carry a reference to an external description. The use of gml:description to reference an external description has been deprecated and replaced by the gml:descriptionReference property.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":description.
    gml__StringOrRefType*                description                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The value of this property is a remote text description of the object. The xlink:href attribute of the gml:descriptionReference property references the external description.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":descriptionReference.
    gml__ReferenceType*                  descriptionReference           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Often, a special identifier is assigned to an object by the maintaining authority with the intention that it is used in references to the object For such cases, the codeSpace shall be provided. That identifier is usually unique either globally or within an application domain. gml:identifier is a pre-defined property for such identifiers.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":identifier.
    gml__CodeWithAuthorityType*          identifier                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The gml:name property provides a label or identifier for the object, commonly a descriptive name. An object may have several names, typically assigned by different authorities. gml:name uses the gml:CodeType content model. The authority for a name is indicated by the value of its (optional) codeSpace attribute. The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace. In common usage there will be one name per authority, so a processing application may select the name from its preferred codeSpace.
/// </BLOCKQUOTE></PRE>
/// Vector of gml__CodeType* element refs of length 0..unbounded.
    std::vector<gml__CodeType*         > name                           0;
//  END OF GROUP
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":id.
/// <PRE><BLOCKQUOTE>
///   The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.
/// </BLOCKQUOTE></PRE>
   @xsd__ID*                             gml__id                        0;	///< Optional attribute.
    END OF INHERITED FROM gml__AbstractGMLType */
/*  INHERITED FROM gml__AbstractTimeObjectType:
    END OF INHERITED FROM gml__AbstractTimeObjectType */
/*  INHERITED FROM gml__AbstractTimeComplexType:
    END OF INHERITED FROM gml__AbstractTimeComplexType */
/// Vector of gml__TimeTopologyPrimitivePropertyType* of length 1..unbounded.
    std::vector<gml__TimeTopologyPrimitivePropertyType*> primitive                      1;
};

/// @brief "http://www.opengis.net/gml/3.2":FeatureCollectionType is a complexType with complexContent extension of XSD type "http://www.opengis.net/gml/3.2":AbstractFeatureCollectionType.
///
/// class gml__FeatureCollectionType operations:
/// - gml__FeatureCollectionType* soap_new_gml__FeatureCollectionType(soap*) allocate and default initialize
/// - gml__FeatureCollectionType* soap_new_gml__FeatureCollectionType(soap*, int num) allocate array and default initialize values
/// - gml__FeatureCollectionType* soap_new_req_gml__FeatureCollectionType(soap*, ...) allocate, set required members
/// - gml__FeatureCollectionType* soap_new_set_gml__FeatureCollectionType(soap*, ...) allocate, set all public members
/// - gml__FeatureCollectionType::soap_default(soap*) default initialize members
/// - int soap_read_gml__FeatureCollectionType(soap*, gml__FeatureCollectionType*) deserialize from a stream
/// - int soap_write_gml__FeatureCollectionType(soap*, gml__FeatureCollectionType*) serialize to a stream
/// - gml__FeatureCollectionType* gml__FeatureCollectionType::soap_dup(soap*) returns deep copy of gml__FeatureCollectionType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__FeatureCollectionType::soap_del() deep deletes gml__FeatureCollectionType data members, use only after gml__FeatureCollectionType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__FeatureCollectionType : public gml__AbstractFeatureCollectionType
{ public:
/*  INHERITED FROM gml__AbstractGMLType:
//  BEGIN GROUP <xs:group name="StandardObjectProperties">
/// Vector of gml__MetaDataPropertyType* element refs of length 0..unbounded.
    std::vector<gml__MetaDataPropertyType*> metaDataProperty               0;
/// <PRE><BLOCKQUOTE>
///   The value of this property is a text description of the object. gml:description uses gml:StringOrRefType as its content model, so it may contain a simple text string content, or carry a reference to an external description. The use of gml:description to reference an external description has been deprecated and replaced by the gml:descriptionReference property.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":description.
    gml__StringOrRefType*                description                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The value of this property is a remote text description of the object. The xlink:href attribute of the gml:descriptionReference property references the external description.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":descriptionReference.
    gml__ReferenceType*                  descriptionReference           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Often, a special identifier is assigned to an object by the maintaining authority with the intention that it is used in references to the object For such cases, the codeSpace shall be provided. That identifier is usually unique either globally or within an application domain. gml:identifier is a pre-defined property for such identifiers.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":identifier.
    gml__CodeWithAuthorityType*          identifier                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The gml:name property provides a label or identifier for the object, commonly a descriptive name. An object may have several names, typically assigned by different authorities. gml:name uses the gml:CodeType content model. The authority for a name is indicated by the value of its (optional) codeSpace attribute. The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace. In common usage there will be one name per authority, so a processing application may select the name from its preferred codeSpace.
/// </BLOCKQUOTE></PRE>
/// Vector of gml__CodeType* element refs of length 0..unbounded.
    std::vector<gml__CodeType*         > name                           0;
//  END OF GROUP
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":id.
/// <PRE><BLOCKQUOTE>
///   The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.
/// </BLOCKQUOTE></PRE>
   @xsd__ID*                             gml__id                        0;	///< Optional attribute.
    END OF INHERITED FROM gml__AbstractGMLType */
/*  INHERITED FROM gml__AbstractFeatureType:
/// <PRE><BLOCKQUOTE>
///   This property describes the minimum bounding box or rectangle that encloses the entire feature.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":boundedBy.
    gml__BoundingShapeType*              boundedBy                      0;	///< Optional element.
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="location" minOccurs="0"> with global elements <priorityLocation>
   $int                                  __unionlocation                0;	///< Union _gml__union_FeatureCollectionType selector: set to SOAP_UNION__gml__union_FeatureCollectionType_<fieldname> or 0 to omit
/// Union for substitutionGroup gml__location.
    union _gml__union_FeatureCollectionType
    {
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":location.
    gml__LocationPropertyType*           location                       0;	///< Optional element.
/// Element "http://www.opengis.net/gml/3.2":priorityLocation.
    gml__PriorityLocationPropertyType*   priorityLocation               nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_FeatureCollectionType   ;
//  END OF SUBSTITUTIONS
    END OF INHERITED FROM gml__AbstractFeatureType */
/*  INHERITED FROM gml__AbstractFeatureCollectionType:
/// Vector of gml__FeaturePropertyType* element refs of length 0..unbounded.
    std::vector<gml__FeaturePropertyType*> featureMember                  0;
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":featureMembers.
    gml__FeatureArrayPropertyType*       featureMembers                 0;	///< Optional element.
    END OF INHERITED FROM gml__AbstractFeatureCollectionType */
};

/// @brief "http://www.opengis.net/gml/3.2":DefinitionProxyType is a complexType with complexContent extension of XSD type "http://www.opengis.net/gml/3.2":DefinitionType.
///
/// class gml__DefinitionProxyType operations:
/// - gml__DefinitionProxyType* soap_new_gml__DefinitionProxyType(soap*) allocate and default initialize
/// - gml__DefinitionProxyType* soap_new_gml__DefinitionProxyType(soap*, int num) allocate array and default initialize values
/// - gml__DefinitionProxyType* soap_new_req_gml__DefinitionProxyType(soap*, ...) allocate, set required members
/// - gml__DefinitionProxyType* soap_new_set_gml__DefinitionProxyType(soap*, ...) allocate, set all public members
/// - gml__DefinitionProxyType::soap_default(soap*) default initialize members
/// - int soap_read_gml__DefinitionProxyType(soap*, gml__DefinitionProxyType*) deserialize from a stream
/// - int soap_write_gml__DefinitionProxyType(soap*, gml__DefinitionProxyType*) serialize to a stream
/// - gml__DefinitionProxyType* gml__DefinitionProxyType::soap_dup(soap*) returns deep copy of gml__DefinitionProxyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__DefinitionProxyType::soap_del() deep deletes gml__DefinitionProxyType data members, use only after gml__DefinitionProxyType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__DefinitionProxyType : public gml__DefinitionType
{ public:
/*  INHERITED FROM gml__DefinitionBaseType:
    END OF INHERITED FROM gml__DefinitionBaseType */
/*  INHERITED FROM gml__DefinitionType:
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":remarks.
    std::string*                         remarks                        0;	///< Optional element.
    END OF INHERITED FROM gml__DefinitionType */
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":definitionRef.
    gml__ReferenceType*                  definitionRef                  1;	///< Required element.
};

/// @brief "http://www.isotc211.org/2005/gmd":DS_Platform_Type is a complexType with complexContent extension of XSD type "http://www.isotc211.org/2005/gmd":DS_Series_Type.
///
/// class gmd__DS_x005fPlatform_x005fType operations:
/// - gmd__DS_x005fPlatform_x005fType* soap_new_gmd__DS_x005fPlatform_x005fType(soap*) allocate and default initialize
/// - gmd__DS_x005fPlatform_x005fType* soap_new_gmd__DS_x005fPlatform_x005fType(soap*, int num) allocate array and default initialize values
/// - gmd__DS_x005fPlatform_x005fType* soap_new_req_gmd__DS_x005fPlatform_x005fType(soap*, ...) allocate, set required members
/// - gmd__DS_x005fPlatform_x005fType* soap_new_set_gmd__DS_x005fPlatform_x005fType(soap*, ...) allocate, set all public members
/// - gmd__DS_x005fPlatform_x005fType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__DS_x005fPlatform_x005fType(soap*, gmd__DS_x005fPlatform_x005fType*) deserialize from a stream
/// - int soap_write_gmd__DS_x005fPlatform_x005fType(soap*, gmd__DS_x005fPlatform_x005fType*) serialize to a stream
/// - gmd__DS_x005fPlatform_x005fType* gmd__DS_x005fPlatform_x005fType::soap_dup(soap*) returns deep copy of gmd__DS_x005fPlatform_x005fType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__DS_x005fPlatform_x005fType::soap_del() deep deletes gmd__DS_x005fPlatform_x005fType data members, use only after gmd__DS_x005fPlatform_x005fType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__DS_x005fPlatform_x005fType : public gmd__DS_x005fSeries_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectIdentification">.
/// Attribute "id" of XSD type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute "uuid" of XSD type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/*  INHERITED FROM gmd__AbstractDS_x005fAggregate_x005fType:
/// Vector of gmd__DS_x005fDataSet_x005fPropertyType* of length 1..unbounded.
    std::vector<gmd__DS_x005fDataSet_x005fPropertyType*> composedOf                     1;
/// Vector of gmd__MD_x005fMetadata_x005fPropertyType* of length 1..unbounded.
    std::vector<gmd__MD_x005fMetadata_x005fPropertyType*> seriesMetadata                 1;
/// Vector of gmd__DS_x005fAggregate_x005fPropertyType* of length 0..unbounded.
    std::vector<gmd__DS_x005fAggregate_x005fPropertyType*> subset                         0;
/// Vector of gmd__DS_x005fAggregate_x005fPropertyType* of length 0..unbounded.
    std::vector<gmd__DS_x005fAggregate_x005fPropertyType*> superset                       0;
    END OF INHERITED FROM gmd__AbstractDS_x005fAggregate_x005fType */
/*  INHERITED FROM gmd__DS_x005fSeries_x005fType:
    END OF INHERITED FROM gmd__DS_x005fSeries_x005fType */
};

/// @brief "http://www.isotc211.org/2005/gmd":DS_Sensor_Type is a complexType with complexContent extension of XSD type "http://www.isotc211.org/2005/gmd":DS_Series_Type.
///
/// class gmd__DS_x005fSensor_x005fType operations:
/// - gmd__DS_x005fSensor_x005fType* soap_new_gmd__DS_x005fSensor_x005fType(soap*) allocate and default initialize
/// - gmd__DS_x005fSensor_x005fType* soap_new_gmd__DS_x005fSensor_x005fType(soap*, int num) allocate array and default initialize values
/// - gmd__DS_x005fSensor_x005fType* soap_new_req_gmd__DS_x005fSensor_x005fType(soap*, ...) allocate, set required members
/// - gmd__DS_x005fSensor_x005fType* soap_new_set_gmd__DS_x005fSensor_x005fType(soap*, ...) allocate, set all public members
/// - gmd__DS_x005fSensor_x005fType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__DS_x005fSensor_x005fType(soap*, gmd__DS_x005fSensor_x005fType*) deserialize from a stream
/// - int soap_write_gmd__DS_x005fSensor_x005fType(soap*, gmd__DS_x005fSensor_x005fType*) serialize to a stream
/// - gmd__DS_x005fSensor_x005fType* gmd__DS_x005fSensor_x005fType::soap_dup(soap*) returns deep copy of gmd__DS_x005fSensor_x005fType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__DS_x005fSensor_x005fType::soap_del() deep deletes gmd__DS_x005fSensor_x005fType data members, use only after gmd__DS_x005fSensor_x005fType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__DS_x005fSensor_x005fType : public gmd__DS_x005fSeries_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectIdentification">.
/// Attribute "id" of XSD type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute "uuid" of XSD type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/*  INHERITED FROM gmd__AbstractDS_x005fAggregate_x005fType:
/// Vector of gmd__DS_x005fDataSet_x005fPropertyType* of length 1..unbounded.
    std::vector<gmd__DS_x005fDataSet_x005fPropertyType*> composedOf                     1;
/// Vector of gmd__MD_x005fMetadata_x005fPropertyType* of length 1..unbounded.
    std::vector<gmd__MD_x005fMetadata_x005fPropertyType*> seriesMetadata                 1;
/// Vector of gmd__DS_x005fAggregate_x005fPropertyType* of length 0..unbounded.
    std::vector<gmd__DS_x005fAggregate_x005fPropertyType*> subset                         0;
/// Vector of gmd__DS_x005fAggregate_x005fPropertyType* of length 0..unbounded.
    std::vector<gmd__DS_x005fAggregate_x005fPropertyType*> superset                       0;
    END OF INHERITED FROM gmd__AbstractDS_x005fAggregate_x005fType */
/*  INHERITED FROM gmd__DS_x005fSeries_x005fType:
    END OF INHERITED FROM gmd__DS_x005fSeries_x005fType */
};

/// @brief "http://www.isotc211.org/2005/gmd":DS_ProductionSeries_Type is a complexType with complexContent extension of XSD type "http://www.isotc211.org/2005/gmd":DS_Series_Type.
///
/// class gmd__DS_x005fProductionSeries_x005fType operations:
/// - gmd__DS_x005fProductionSeries_x005fType* soap_new_gmd__DS_x005fProductionSeries_x005fType(soap*) allocate and default initialize
/// - gmd__DS_x005fProductionSeries_x005fType* soap_new_gmd__DS_x005fProductionSeries_x005fType(soap*, int num) allocate array and default initialize values
/// - gmd__DS_x005fProductionSeries_x005fType* soap_new_req_gmd__DS_x005fProductionSeries_x005fType(soap*, ...) allocate, set required members
/// - gmd__DS_x005fProductionSeries_x005fType* soap_new_set_gmd__DS_x005fProductionSeries_x005fType(soap*, ...) allocate, set all public members
/// - gmd__DS_x005fProductionSeries_x005fType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__DS_x005fProductionSeries_x005fType(soap*, gmd__DS_x005fProductionSeries_x005fType*) deserialize from a stream
/// - int soap_write_gmd__DS_x005fProductionSeries_x005fType(soap*, gmd__DS_x005fProductionSeries_x005fType*) serialize to a stream
/// - gmd__DS_x005fProductionSeries_x005fType* gmd__DS_x005fProductionSeries_x005fType::soap_dup(soap*) returns deep copy of gmd__DS_x005fProductionSeries_x005fType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__DS_x005fProductionSeries_x005fType::soap_del() deep deletes gmd__DS_x005fProductionSeries_x005fType data members, use only after gmd__DS_x005fProductionSeries_x005fType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__DS_x005fProductionSeries_x005fType : public gmd__DS_x005fSeries_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectIdentification">.
/// Attribute "id" of XSD type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute "uuid" of XSD type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/*  INHERITED FROM gmd__AbstractDS_x005fAggregate_x005fType:
/// Vector of gmd__DS_x005fDataSet_x005fPropertyType* of length 1..unbounded.
    std::vector<gmd__DS_x005fDataSet_x005fPropertyType*> composedOf                     1;
/// Vector of gmd__MD_x005fMetadata_x005fPropertyType* of length 1..unbounded.
    std::vector<gmd__MD_x005fMetadata_x005fPropertyType*> seriesMetadata                 1;
/// Vector of gmd__DS_x005fAggregate_x005fPropertyType* of length 0..unbounded.
    std::vector<gmd__DS_x005fAggregate_x005fPropertyType*> subset                         0;
/// Vector of gmd__DS_x005fAggregate_x005fPropertyType* of length 0..unbounded.
    std::vector<gmd__DS_x005fAggregate_x005fPropertyType*> superset                       0;
    END OF INHERITED FROM gmd__AbstractDS_x005fAggregate_x005fType */
/*  INHERITED FROM gmd__DS_x005fSeries_x005fType:
    END OF INHERITED FROM gmd__DS_x005fSeries_x005fType */
};

/// @brief "http://www.isotc211.org/2005/gmd":DS_StereoMate_Type is a complexType with complexContent extension of XSD type "http://www.isotc211.org/2005/gmd":DS_OtherAggregate_Type.
///
/// class gmd__DS_x005fStereoMate_x005fType operations:
/// - gmd__DS_x005fStereoMate_x005fType* soap_new_gmd__DS_x005fStereoMate_x005fType(soap*) allocate and default initialize
/// - gmd__DS_x005fStereoMate_x005fType* soap_new_gmd__DS_x005fStereoMate_x005fType(soap*, int num) allocate array and default initialize values
/// - gmd__DS_x005fStereoMate_x005fType* soap_new_req_gmd__DS_x005fStereoMate_x005fType(soap*, ...) allocate, set required members
/// - gmd__DS_x005fStereoMate_x005fType* soap_new_set_gmd__DS_x005fStereoMate_x005fType(soap*, ...) allocate, set all public members
/// - gmd__DS_x005fStereoMate_x005fType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__DS_x005fStereoMate_x005fType(soap*, gmd__DS_x005fStereoMate_x005fType*) deserialize from a stream
/// - int soap_write_gmd__DS_x005fStereoMate_x005fType(soap*, gmd__DS_x005fStereoMate_x005fType*) serialize to a stream
/// - gmd__DS_x005fStereoMate_x005fType* gmd__DS_x005fStereoMate_x005fType::soap_dup(soap*) returns deep copy of gmd__DS_x005fStereoMate_x005fType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__DS_x005fStereoMate_x005fType::soap_del() deep deletes gmd__DS_x005fStereoMate_x005fType data members, use only after gmd__DS_x005fStereoMate_x005fType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__DS_x005fStereoMate_x005fType : public gmd__DS_x005fOtherAggregate_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectIdentification">.
/// Attribute "id" of XSD type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute "uuid" of XSD type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/*  INHERITED FROM gmd__AbstractDS_x005fAggregate_x005fType:
/// Vector of gmd__DS_x005fDataSet_x005fPropertyType* of length 1..unbounded.
    std::vector<gmd__DS_x005fDataSet_x005fPropertyType*> composedOf                     1;
/// Vector of gmd__MD_x005fMetadata_x005fPropertyType* of length 1..unbounded.
    std::vector<gmd__MD_x005fMetadata_x005fPropertyType*> seriesMetadata                 1;
/// Vector of gmd__DS_x005fAggregate_x005fPropertyType* of length 0..unbounded.
    std::vector<gmd__DS_x005fAggregate_x005fPropertyType*> subset                         0;
/// Vector of gmd__DS_x005fAggregate_x005fPropertyType* of length 0..unbounded.
    std::vector<gmd__DS_x005fAggregate_x005fPropertyType*> superset                       0;
    END OF INHERITED FROM gmd__AbstractDS_x005fAggregate_x005fType */
/*  INHERITED FROM gmd__DS_x005fOtherAggregate_x005fType:
    END OF INHERITED FROM gmd__DS_x005fOtherAggregate_x005fType */
};

/// @brief "http://www.isotc211.org/2005/gmd":MD_Georeferenceable_Type is a complexType with complexContent extension of XSD type "http://www.isotc211.org/2005/gmd":MD_GridSpatialRepresentation_Type.
///
/// class gmd__MD_x005fGeoreferenceable_x005fType operations:
/// - gmd__MD_x005fGeoreferenceable_x005fType* soap_new_gmd__MD_x005fGeoreferenceable_x005fType(soap*) allocate and default initialize
/// - gmd__MD_x005fGeoreferenceable_x005fType* soap_new_gmd__MD_x005fGeoreferenceable_x005fType(soap*, int num) allocate array and default initialize values
/// - gmd__MD_x005fGeoreferenceable_x005fType* soap_new_req_gmd__MD_x005fGeoreferenceable_x005fType(soap*, ...) allocate, set required members
/// - gmd__MD_x005fGeoreferenceable_x005fType* soap_new_set_gmd__MD_x005fGeoreferenceable_x005fType(soap*, ...) allocate, set all public members
/// - gmd__MD_x005fGeoreferenceable_x005fType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__MD_x005fGeoreferenceable_x005fType(soap*, gmd__MD_x005fGeoreferenceable_x005fType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fGeoreferenceable_x005fType(soap*, gmd__MD_x005fGeoreferenceable_x005fType*) serialize to a stream
/// - gmd__MD_x005fGeoreferenceable_x005fType* gmd__MD_x005fGeoreferenceable_x005fType::soap_dup(soap*) returns deep copy of gmd__MD_x005fGeoreferenceable_x005fType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__MD_x005fGeoreferenceable_x005fType::soap_del() deep deletes gmd__MD_x005fGeoreferenceable_x005fType data members, use only after gmd__MD_x005fGeoreferenceable_x005fType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__MD_x005fGeoreferenceable_x005fType : public gmd__MD_x005fGridSpatialRepresentation_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectIdentification">.
/// Attribute "id" of XSD type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute "uuid" of XSD type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/*  INHERITED FROM gmd__AbstractMD_x005fSpatialRepresentation_x005fType:
    END OF INHERITED FROM gmd__AbstractMD_x005fSpatialRepresentation_x005fType */
/*  INHERITED FROM gmd__MD_x005fGridSpatialRepresentation_x005fType:
/// Element "numberOfDimensions" of XSD type "http://www.isotc211.org/2005/gco":Integer_PropertyType.
    gco__Integer_x005fPropertyType*      numberOfDimensions             1;	///< Required element.
/// Vector of gmd__MD_x005fDimension_x005fPropertyType* of length 0..unbounded.
    std::vector<gmd__MD_x005fDimension_x005fPropertyType*> axisDimensionProperties        0;
/// Element "cellGeometry" of XSD type "http://www.isotc211.org/2005/gmd":MD_CellGeometryCode_PropertyType.
    gmd__MD_x005fCellGeometryCode_x005fPropertyType*  cellGeometry                   1;	///< Required element.
/// Element "transformationParameterAvailability" of XSD type "http://www.isotc211.org/2005/gco":Boolean_PropertyType.
    gco__Boolean_x005fPropertyType*      transformationParameterAvailability 1;	///< Required element.
    END OF INHERITED FROM gmd__MD_x005fGridSpatialRepresentation_x005fType */
/// Element "controlPointAvailability" of XSD type "http://www.isotc211.org/2005/gco":Boolean_PropertyType.
    gco__Boolean_x005fPropertyType*      controlPointAvailability       1;	///< Required element.
/// Element "orientationParameterAvailability" of XSD type "http://www.isotc211.org/2005/gco":Boolean_PropertyType.
    gco__Boolean_x005fPropertyType*      orientationParameterAvailability 1;	///< Required element.
/// Element "orientationParameterDescription" of XSD type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  orientationParameterDescription 0;	///< Optional element.
/// Element "georeferencedParameters" of XSD type "http://www.isotc211.org/2005/gco":Record_PropertyType.
    gco__Record_x005fPropertyType*       georeferencedParameters        1;	///< Required element.
/// Vector of gmd__CI_x005fCitation_x005fPropertyType* of length 0..unbounded.
    std::vector<gmd__CI_x005fCitation_x005fPropertyType*> parameterCitation              0;
};

/// @brief "http://www.isotc211.org/2005/gmd":MD_Georectified_Type is a complexType with complexContent extension of XSD type "http://www.isotc211.org/2005/gmd":MD_GridSpatialRepresentation_Type.
///
/// class gmd__MD_x005fGeorectified_x005fType operations:
/// - gmd__MD_x005fGeorectified_x005fType* soap_new_gmd__MD_x005fGeorectified_x005fType(soap*) allocate and default initialize
/// - gmd__MD_x005fGeorectified_x005fType* soap_new_gmd__MD_x005fGeorectified_x005fType(soap*, int num) allocate array and default initialize values
/// - gmd__MD_x005fGeorectified_x005fType* soap_new_req_gmd__MD_x005fGeorectified_x005fType(soap*, ...) allocate, set required members
/// - gmd__MD_x005fGeorectified_x005fType* soap_new_set_gmd__MD_x005fGeorectified_x005fType(soap*, ...) allocate, set all public members
/// - gmd__MD_x005fGeorectified_x005fType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__MD_x005fGeorectified_x005fType(soap*, gmd__MD_x005fGeorectified_x005fType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fGeorectified_x005fType(soap*, gmd__MD_x005fGeorectified_x005fType*) serialize to a stream
/// - gmd__MD_x005fGeorectified_x005fType* gmd__MD_x005fGeorectified_x005fType::soap_dup(soap*) returns deep copy of gmd__MD_x005fGeorectified_x005fType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__MD_x005fGeorectified_x005fType::soap_del() deep deletes gmd__MD_x005fGeorectified_x005fType data members, use only after gmd__MD_x005fGeorectified_x005fType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__MD_x005fGeorectified_x005fType : public gmd__MD_x005fGridSpatialRepresentation_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectIdentification">.
/// Attribute "id" of XSD type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute "uuid" of XSD type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/*  INHERITED FROM gmd__AbstractMD_x005fSpatialRepresentation_x005fType:
    END OF INHERITED FROM gmd__AbstractMD_x005fSpatialRepresentation_x005fType */
/*  INHERITED FROM gmd__MD_x005fGridSpatialRepresentation_x005fType:
/// Element "numberOfDimensions" of XSD type "http://www.isotc211.org/2005/gco":Integer_PropertyType.
    gco__Integer_x005fPropertyType*      numberOfDimensions             1;	///< Required element.
/// Vector of gmd__MD_x005fDimension_x005fPropertyType* of length 0..unbounded.
    std::vector<gmd__MD_x005fDimension_x005fPropertyType*> axisDimensionProperties        0;
/// Element "cellGeometry" of XSD type "http://www.isotc211.org/2005/gmd":MD_CellGeometryCode_PropertyType.
    gmd__MD_x005fCellGeometryCode_x005fPropertyType*  cellGeometry                   1;	///< Required element.
/// Element "transformationParameterAvailability" of XSD type "http://www.isotc211.org/2005/gco":Boolean_PropertyType.
    gco__Boolean_x005fPropertyType*      transformationParameterAvailability 1;	///< Required element.
    END OF INHERITED FROM gmd__MD_x005fGridSpatialRepresentation_x005fType */
/// Element "checkPointAvailability" of XSD type "http://www.isotc211.org/2005/gco":Boolean_PropertyType.
    gco__Boolean_x005fPropertyType*      checkPointAvailability         1;	///< Required element.
/// Element "checkPointDescription" of XSD type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  checkPointDescription          0;	///< Optional element.
/// Vector of gss__GM_x005fPoint_x005fPropertyType* of length 0..unbounded.
    std::vector<gss__GM_x005fPoint_x005fPropertyType*> cornerPoints                   0;
/// Element "centerPoint" of XSD type "http://www.isotc211.org/2005/gss":GM_Point_PropertyType.
    gss__GM_x005fPoint_x005fPropertyType*  centerPoint                    0;	///< Optional element.
/// Element "pointInPixel" of XSD type "http://www.isotc211.org/2005/gmd":MD_PixelOrientationCode_PropertyType.
    gmd__MD_x005fPixelOrientationCode_x005fPropertyType*  pointInPixel                   1;	///< Required element.
/// Element "transformationDimensionDescription" of XSD type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  transformationDimensionDescription 0;	///< Optional element.
/// Vector of gco__CharacterString_x005fPropertyType* of length 0..2.
    std::vector<gco__CharacterString_x005fPropertyType*> transformationDimensionMapping 0:2;
};

/// @brief "http://www.isotc211.org/2005/gmd":MD_ImageDescription_Type is a complexType with complexContent extension of XSD type "http://www.isotc211.org/2005/gmd":MD_CoverageDescription_Type.
///
/// <PRE><BLOCKQUOTE>
///   Information about an image's suitability for use
/// </BLOCKQUOTE></PRE>
/// class gmd__MD_x005fImageDescription_x005fType operations:
/// - gmd__MD_x005fImageDescription_x005fType* soap_new_gmd__MD_x005fImageDescription_x005fType(soap*) allocate and default initialize
/// - gmd__MD_x005fImageDescription_x005fType* soap_new_gmd__MD_x005fImageDescription_x005fType(soap*, int num) allocate array and default initialize values
/// - gmd__MD_x005fImageDescription_x005fType* soap_new_req_gmd__MD_x005fImageDescription_x005fType(soap*, ...) allocate, set required members
/// - gmd__MD_x005fImageDescription_x005fType* soap_new_set_gmd__MD_x005fImageDescription_x005fType(soap*, ...) allocate, set all public members
/// - gmd__MD_x005fImageDescription_x005fType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__MD_x005fImageDescription_x005fType(soap*, gmd__MD_x005fImageDescription_x005fType*) deserialize from a stream
/// - int soap_write_gmd__MD_x005fImageDescription_x005fType(soap*, gmd__MD_x005fImageDescription_x005fType*) serialize to a stream
/// - gmd__MD_x005fImageDescription_x005fType* gmd__MD_x005fImageDescription_x005fType::soap_dup(soap*) returns deep copy of gmd__MD_x005fImageDescription_x005fType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__MD_x005fImageDescription_x005fType::soap_del() deep deletes gmd__MD_x005fImageDescription_x005fType data members, use only after gmd__MD_x005fImageDescription_x005fType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__MD_x005fImageDescription_x005fType : public gmd__MD_x005fCoverageDescription_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectIdentification">.
/// Attribute "id" of XSD type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute "uuid" of XSD type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/*  INHERITED FROM gmd__AbstractMD_x005fContentInformation_x005fType:
    END OF INHERITED FROM gmd__AbstractMD_x005fContentInformation_x005fType */
/*  INHERITED FROM gmd__MD_x005fCoverageDescription_x005fType:
/// Element "attributeDescription" of XSD type "http://www.isotc211.org/2005/gco":RecordType_PropertyType.
    gco__RecordType_x005fPropertyType*   attributeDescription           1;	///< Required element.
/// Element "contentType" of XSD type "http://www.isotc211.org/2005/gmd":MD_CoverageContentTypeCode_PropertyType.
    gmd__MD_x005fCoverageContentTypeCode_x005fPropertyType*  contentType                    1;	///< Required element.
/// Vector of gmd__MD_x005fRangeDimension_x005fPropertyType* of length 0..unbounded.
    std::vector<gmd__MD_x005fRangeDimension_x005fPropertyType*> dimension                      0;
    END OF INHERITED FROM gmd__MD_x005fCoverageDescription_x005fType */
/// Element "illuminationElevationAngle" of XSD type "http://www.isotc211.org/2005/gco":Real_PropertyType.
    gco__Real_x005fPropertyType*         illuminationElevationAngle     0;	///< Optional element.
/// Element "illuminationAzimuthAngle" of XSD type "http://www.isotc211.org/2005/gco":Real_PropertyType.
    gco__Real_x005fPropertyType*         illuminationAzimuthAngle       0;	///< Optional element.
/// Element "imagingCondition" of XSD type "http://www.isotc211.org/2005/gmd":MD_ImagingConditionCode_PropertyType.
    gmd__MD_x005fImagingConditionCode_x005fPropertyType*  imagingCondition               0;	///< Optional element.
/// Element "imageQualityCode" of XSD type "http://www.isotc211.org/2005/gmd":MD_Identifier_PropertyType.
    gmd__MD_x005fIdentifier_x005fPropertyType*  imageQualityCode               0;	///< Optional element.
/// Element "cloudCoverPercentage" of XSD type "http://www.isotc211.org/2005/gco":Real_PropertyType.
    gco__Real_x005fPropertyType*         cloudCoverPercentage           0;	///< Optional element.
/// Element "processingLevelCode" of XSD type "http://www.isotc211.org/2005/gmd":MD_Identifier_PropertyType.
    gmd__MD_x005fIdentifier_x005fPropertyType*  processingLevelCode            0;	///< Optional element.
/// Element "compressionGenerationQuantity" of XSD type "http://www.isotc211.org/2005/gco":Integer_PropertyType.
    gco__Integer_x005fPropertyType*      compressionGenerationQuantity  0;	///< Optional element.
/// Element "triangulationIndicator" of XSD type "http://www.isotc211.org/2005/gco":Boolean_PropertyType.
    gco__Boolean_x005fPropertyType*      triangulationIndicator         0;	///< Optional element.
/// Element "radiometricCalibrationDataAvailability" of XSD type "http://www.isotc211.org/2005/gco":Boolean_PropertyType.
    gco__Boolean_x005fPropertyType*      radiometricCalibrationDataAvailability 0;	///< Optional element.
/// Element "cameraCalibrationInformationAvailability" of XSD type "http://www.isotc211.org/2005/gco":Boolean_PropertyType.
    gco__Boolean_x005fPropertyType*      cameraCalibrationInformationAvailability 0;	///< Optional element.
/// Element "filmDistortionInformationAvailability" of XSD type "http://www.isotc211.org/2005/gco":Boolean_PropertyType.
    gco__Boolean_x005fPropertyType*      filmDistortionInformationAvailability 0;	///< Optional element.
/// Element "lensDistortionInformationAvailability" of XSD type "http://www.isotc211.org/2005/gco":Boolean_PropertyType.
    gco__Boolean_x005fPropertyType*      lensDistortionInformationAvailability 0;	///< Optional element.
};

/// @brief "http://www.isotc211.org/2005/gmd":DQ_TemporalValidity_Type is a complexType with complexContent extension of XSD type "http://www.isotc211.org/2005/gmd":AbstractDQ_TemporalAccuracy_Type.
///
/// class gmd__DQ_x005fTemporalValidity_x005fType operations:
/// - gmd__DQ_x005fTemporalValidity_x005fType* soap_new_gmd__DQ_x005fTemporalValidity_x005fType(soap*) allocate and default initialize
/// - gmd__DQ_x005fTemporalValidity_x005fType* soap_new_gmd__DQ_x005fTemporalValidity_x005fType(soap*, int num) allocate array and default initialize values
/// - gmd__DQ_x005fTemporalValidity_x005fType* soap_new_req_gmd__DQ_x005fTemporalValidity_x005fType(soap*, ...) allocate, set required members
/// - gmd__DQ_x005fTemporalValidity_x005fType* soap_new_set_gmd__DQ_x005fTemporalValidity_x005fType(soap*, ...) allocate, set all public members
/// - gmd__DQ_x005fTemporalValidity_x005fType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__DQ_x005fTemporalValidity_x005fType(soap*, gmd__DQ_x005fTemporalValidity_x005fType*) deserialize from a stream
/// - int soap_write_gmd__DQ_x005fTemporalValidity_x005fType(soap*, gmd__DQ_x005fTemporalValidity_x005fType*) serialize to a stream
/// - gmd__DQ_x005fTemporalValidity_x005fType* gmd__DQ_x005fTemporalValidity_x005fType::soap_dup(soap*) returns deep copy of gmd__DQ_x005fTemporalValidity_x005fType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__DQ_x005fTemporalValidity_x005fType::soap_del() deep deletes gmd__DQ_x005fTemporalValidity_x005fType data members, use only after gmd__DQ_x005fTemporalValidity_x005fType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__DQ_x005fTemporalValidity_x005fType : public gmd__AbstractDQ_x005fTemporalAccuracy_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectIdentification">.
/// Attribute "id" of XSD type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute "uuid" of XSD type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/*  INHERITED FROM gmd__AbstractDQ_x005fElement_x005fType:
/// Vector of gco__CharacterString_x005fPropertyType* of length 0..unbounded.
    std::vector<gco__CharacterString_x005fPropertyType*> nameOfMeasure                  0;
/// Element "measureIdentification" of XSD type "http://www.isotc211.org/2005/gmd":MD_Identifier_PropertyType.
    gmd__MD_x005fIdentifier_x005fPropertyType*  measureIdentification          0;	///< Optional element.
/// Element "measureDescription" of XSD type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  measureDescription             0;	///< Optional element.
/// Element "evaluationMethodType" of XSD type "http://www.isotc211.org/2005/gmd":DQ_EvaluationMethodTypeCode_PropertyType.
    gmd__DQ_x005fEvaluationMethodTypeCode_x005fPropertyType*  evaluationMethodType           0;	///< Optional element.
/// Element "evaluationMethodDescription" of XSD type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  evaluationMethodDescription    0;	///< Optional element.
/// Element "evaluationProcedure" of XSD type "http://www.isotc211.org/2005/gmd":CI_Citation_PropertyType.
    gmd__CI_x005fCitation_x005fPropertyType*  evaluationProcedure            0;	///< Optional element.
/// Vector of gco__DateTime_x005fPropertyType* of length 0..unbounded.
    std::vector<gco__DateTime_x005fPropertyType*> dateTime                       0;
/// Vector of gmd__DQ_x005fResult_x005fPropertyType* of length 1..2.
    std::vector<gmd__DQ_x005fResult_x005fPropertyType*> result                         1:2;
    END OF INHERITED FROM gmd__AbstractDQ_x005fElement_x005fType */
/*  INHERITED FROM gmd__AbstractDQ_x005fTemporalAccuracy_x005fType:
    END OF INHERITED FROM gmd__AbstractDQ_x005fTemporalAccuracy_x005fType */
};

/// @brief "http://www.isotc211.org/2005/gmd":DQ_TemporalConsistency_Type is a complexType with complexContent extension of XSD type "http://www.isotc211.org/2005/gmd":AbstractDQ_TemporalAccuracy_Type.
///
/// class gmd__DQ_x005fTemporalConsistency_x005fType operations:
/// - gmd__DQ_x005fTemporalConsistency_x005fType* soap_new_gmd__DQ_x005fTemporalConsistency_x005fType(soap*) allocate and default initialize
/// - gmd__DQ_x005fTemporalConsistency_x005fType* soap_new_gmd__DQ_x005fTemporalConsistency_x005fType(soap*, int num) allocate array and default initialize values
/// - gmd__DQ_x005fTemporalConsistency_x005fType* soap_new_req_gmd__DQ_x005fTemporalConsistency_x005fType(soap*, ...) allocate, set required members
/// - gmd__DQ_x005fTemporalConsistency_x005fType* soap_new_set_gmd__DQ_x005fTemporalConsistency_x005fType(soap*, ...) allocate, set all public members
/// - gmd__DQ_x005fTemporalConsistency_x005fType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__DQ_x005fTemporalConsistency_x005fType(soap*, gmd__DQ_x005fTemporalConsistency_x005fType*) deserialize from a stream
/// - int soap_write_gmd__DQ_x005fTemporalConsistency_x005fType(soap*, gmd__DQ_x005fTemporalConsistency_x005fType*) serialize to a stream
/// - gmd__DQ_x005fTemporalConsistency_x005fType* gmd__DQ_x005fTemporalConsistency_x005fType::soap_dup(soap*) returns deep copy of gmd__DQ_x005fTemporalConsistency_x005fType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__DQ_x005fTemporalConsistency_x005fType::soap_del() deep deletes gmd__DQ_x005fTemporalConsistency_x005fType data members, use only after gmd__DQ_x005fTemporalConsistency_x005fType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__DQ_x005fTemporalConsistency_x005fType : public gmd__AbstractDQ_x005fTemporalAccuracy_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectIdentification">.
/// Attribute "id" of XSD type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute "uuid" of XSD type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/*  INHERITED FROM gmd__AbstractDQ_x005fElement_x005fType:
/// Vector of gco__CharacterString_x005fPropertyType* of length 0..unbounded.
    std::vector<gco__CharacterString_x005fPropertyType*> nameOfMeasure                  0;
/// Element "measureIdentification" of XSD type "http://www.isotc211.org/2005/gmd":MD_Identifier_PropertyType.
    gmd__MD_x005fIdentifier_x005fPropertyType*  measureIdentification          0;	///< Optional element.
/// Element "measureDescription" of XSD type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  measureDescription             0;	///< Optional element.
/// Element "evaluationMethodType" of XSD type "http://www.isotc211.org/2005/gmd":DQ_EvaluationMethodTypeCode_PropertyType.
    gmd__DQ_x005fEvaluationMethodTypeCode_x005fPropertyType*  evaluationMethodType           0;	///< Optional element.
/// Element "evaluationMethodDescription" of XSD type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  evaluationMethodDescription    0;	///< Optional element.
/// Element "evaluationProcedure" of XSD type "http://www.isotc211.org/2005/gmd":CI_Citation_PropertyType.
    gmd__CI_x005fCitation_x005fPropertyType*  evaluationProcedure            0;	///< Optional element.
/// Vector of gco__DateTime_x005fPropertyType* of length 0..unbounded.
    std::vector<gco__DateTime_x005fPropertyType*> dateTime                       0;
/// Vector of gmd__DQ_x005fResult_x005fPropertyType* of length 1..2.
    std::vector<gmd__DQ_x005fResult_x005fPropertyType*> result                         1:2;
    END OF INHERITED FROM gmd__AbstractDQ_x005fElement_x005fType */
/*  INHERITED FROM gmd__AbstractDQ_x005fTemporalAccuracy_x005fType:
    END OF INHERITED FROM gmd__AbstractDQ_x005fTemporalAccuracy_x005fType */
};

/// @brief "http://www.isotc211.org/2005/gmd":DQ_AccuracyOfATimeMeasurement_Type is a complexType with complexContent extension of XSD type "http://www.isotc211.org/2005/gmd":AbstractDQ_TemporalAccuracy_Type.
///
/// class gmd__DQ_x005fAccuracyOfATimeMeasurement_x005fType operations:
/// - gmd__DQ_x005fAccuracyOfATimeMeasurement_x005fType* soap_new_gmd__DQ_x005fAccuracyOfATimeMeasurement_x005fType(soap*) allocate and default initialize
/// - gmd__DQ_x005fAccuracyOfATimeMeasurement_x005fType* soap_new_gmd__DQ_x005fAccuracyOfATimeMeasurement_x005fType(soap*, int num) allocate array and default initialize values
/// - gmd__DQ_x005fAccuracyOfATimeMeasurement_x005fType* soap_new_req_gmd__DQ_x005fAccuracyOfATimeMeasurement_x005fType(soap*, ...) allocate, set required members
/// - gmd__DQ_x005fAccuracyOfATimeMeasurement_x005fType* soap_new_set_gmd__DQ_x005fAccuracyOfATimeMeasurement_x005fType(soap*, ...) allocate, set all public members
/// - gmd__DQ_x005fAccuracyOfATimeMeasurement_x005fType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__DQ_x005fAccuracyOfATimeMeasurement_x005fType(soap*, gmd__DQ_x005fAccuracyOfATimeMeasurement_x005fType*) deserialize from a stream
/// - int soap_write_gmd__DQ_x005fAccuracyOfATimeMeasurement_x005fType(soap*, gmd__DQ_x005fAccuracyOfATimeMeasurement_x005fType*) serialize to a stream
/// - gmd__DQ_x005fAccuracyOfATimeMeasurement_x005fType* gmd__DQ_x005fAccuracyOfATimeMeasurement_x005fType::soap_dup(soap*) returns deep copy of gmd__DQ_x005fAccuracyOfATimeMeasurement_x005fType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__DQ_x005fAccuracyOfATimeMeasurement_x005fType::soap_del() deep deletes gmd__DQ_x005fAccuracyOfATimeMeasurement_x005fType data members, use only after gmd__DQ_x005fAccuracyOfATimeMeasurement_x005fType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__DQ_x005fAccuracyOfATimeMeasurement_x005fType : public gmd__AbstractDQ_x005fTemporalAccuracy_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectIdentification">.
/// Attribute "id" of XSD type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute "uuid" of XSD type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/*  INHERITED FROM gmd__AbstractDQ_x005fElement_x005fType:
/// Vector of gco__CharacterString_x005fPropertyType* of length 0..unbounded.
    std::vector<gco__CharacterString_x005fPropertyType*> nameOfMeasure                  0;
/// Element "measureIdentification" of XSD type "http://www.isotc211.org/2005/gmd":MD_Identifier_PropertyType.
    gmd__MD_x005fIdentifier_x005fPropertyType*  measureIdentification          0;	///< Optional element.
/// Element "measureDescription" of XSD type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  measureDescription             0;	///< Optional element.
/// Element "evaluationMethodType" of XSD type "http://www.isotc211.org/2005/gmd":DQ_EvaluationMethodTypeCode_PropertyType.
    gmd__DQ_x005fEvaluationMethodTypeCode_x005fPropertyType*  evaluationMethodType           0;	///< Optional element.
/// Element "evaluationMethodDescription" of XSD type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  evaluationMethodDescription    0;	///< Optional element.
/// Element "evaluationProcedure" of XSD type "http://www.isotc211.org/2005/gmd":CI_Citation_PropertyType.
    gmd__CI_x005fCitation_x005fPropertyType*  evaluationProcedure            0;	///< Optional element.
/// Vector of gco__DateTime_x005fPropertyType* of length 0..unbounded.
    std::vector<gco__DateTime_x005fPropertyType*> dateTime                       0;
/// Vector of gmd__DQ_x005fResult_x005fPropertyType* of length 1..2.
    std::vector<gmd__DQ_x005fResult_x005fPropertyType*> result                         1:2;
    END OF INHERITED FROM gmd__AbstractDQ_x005fElement_x005fType */
/*  INHERITED FROM gmd__AbstractDQ_x005fTemporalAccuracy_x005fType:
    END OF INHERITED FROM gmd__AbstractDQ_x005fTemporalAccuracy_x005fType */
};

/// @brief "http://www.isotc211.org/2005/gmd":DQ_QuantitativeAttributeAccuracy_Type is a complexType with complexContent extension of XSD type "http://www.isotc211.org/2005/gmd":AbstractDQ_ThematicAccuracy_Type.
///
/// class gmd__DQ_x005fQuantitativeAttributeAccuracy_x005fType operations:
/// - gmd__DQ_x005fQuantitativeAttributeAccuracy_x005fType* soap_new_gmd__DQ_x005fQuantitativeAttributeAccuracy_x005fType(soap*) allocate and default initialize
/// - gmd__DQ_x005fQuantitativeAttributeAccuracy_x005fType* soap_new_gmd__DQ_x005fQuantitativeAttributeAccuracy_x005fType(soap*, int num) allocate array and default initialize values
/// - gmd__DQ_x005fQuantitativeAttributeAccuracy_x005fType* soap_new_req_gmd__DQ_x005fQuantitativeAttributeAccuracy_x005fType(soap*, ...) allocate, set required members
/// - gmd__DQ_x005fQuantitativeAttributeAccuracy_x005fType* soap_new_set_gmd__DQ_x005fQuantitativeAttributeAccuracy_x005fType(soap*, ...) allocate, set all public members
/// - gmd__DQ_x005fQuantitativeAttributeAccuracy_x005fType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__DQ_x005fQuantitativeAttributeAccuracy_x005fType(soap*, gmd__DQ_x005fQuantitativeAttributeAccuracy_x005fType*) deserialize from a stream
/// - int soap_write_gmd__DQ_x005fQuantitativeAttributeAccuracy_x005fType(soap*, gmd__DQ_x005fQuantitativeAttributeAccuracy_x005fType*) serialize to a stream
/// - gmd__DQ_x005fQuantitativeAttributeAccuracy_x005fType* gmd__DQ_x005fQuantitativeAttributeAccuracy_x005fType::soap_dup(soap*) returns deep copy of gmd__DQ_x005fQuantitativeAttributeAccuracy_x005fType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__DQ_x005fQuantitativeAttributeAccuracy_x005fType::soap_del() deep deletes gmd__DQ_x005fQuantitativeAttributeAccuracy_x005fType data members, use only after gmd__DQ_x005fQuantitativeAttributeAccuracy_x005fType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__DQ_x005fQuantitativeAttributeAccuracy_x005fType : public gmd__AbstractDQ_x005fThematicAccuracy_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectIdentification">.
/// Attribute "id" of XSD type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute "uuid" of XSD type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/*  INHERITED FROM gmd__AbstractDQ_x005fElement_x005fType:
/// Vector of gco__CharacterString_x005fPropertyType* of length 0..unbounded.
    std::vector<gco__CharacterString_x005fPropertyType*> nameOfMeasure                  0;
/// Element "measureIdentification" of XSD type "http://www.isotc211.org/2005/gmd":MD_Identifier_PropertyType.
    gmd__MD_x005fIdentifier_x005fPropertyType*  measureIdentification          0;	///< Optional element.
/// Element "measureDescription" of XSD type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  measureDescription             0;	///< Optional element.
/// Element "evaluationMethodType" of XSD type "http://www.isotc211.org/2005/gmd":DQ_EvaluationMethodTypeCode_PropertyType.
    gmd__DQ_x005fEvaluationMethodTypeCode_x005fPropertyType*  evaluationMethodType           0;	///< Optional element.
/// Element "evaluationMethodDescription" of XSD type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  evaluationMethodDescription    0;	///< Optional element.
/// Element "evaluationProcedure" of XSD type "http://www.isotc211.org/2005/gmd":CI_Citation_PropertyType.
    gmd__CI_x005fCitation_x005fPropertyType*  evaluationProcedure            0;	///< Optional element.
/// Vector of gco__DateTime_x005fPropertyType* of length 0..unbounded.
    std::vector<gco__DateTime_x005fPropertyType*> dateTime                       0;
/// Vector of gmd__DQ_x005fResult_x005fPropertyType* of length 1..2.
    std::vector<gmd__DQ_x005fResult_x005fPropertyType*> result                         1:2;
    END OF INHERITED FROM gmd__AbstractDQ_x005fElement_x005fType */
/*  INHERITED FROM gmd__AbstractDQ_x005fThematicAccuracy_x005fType:
    END OF INHERITED FROM gmd__AbstractDQ_x005fThematicAccuracy_x005fType */
};

/// @brief "http://www.isotc211.org/2005/gmd":DQ_NonQuantitativeAttributeAccuracy_Type is a complexType with complexContent extension of XSD type "http://www.isotc211.org/2005/gmd":AbstractDQ_ThematicAccuracy_Type.
///
/// class gmd__DQ_x005fNonQuantitativeAttributeAccuracy_x005fType operations:
/// - gmd__DQ_x005fNonQuantitativeAttributeAccuracy_x005fType* soap_new_gmd__DQ_x005fNonQuantitativeAttributeAccuracy_x005fType(soap*) allocate and default initialize
/// - gmd__DQ_x005fNonQuantitativeAttributeAccuracy_x005fType* soap_new_gmd__DQ_x005fNonQuantitativeAttributeAccuracy_x005fType(soap*, int num) allocate array and default initialize values
/// - gmd__DQ_x005fNonQuantitativeAttributeAccuracy_x005fType* soap_new_req_gmd__DQ_x005fNonQuantitativeAttributeAccuracy_x005fType(soap*, ...) allocate, set required members
/// - gmd__DQ_x005fNonQuantitativeAttributeAccuracy_x005fType* soap_new_set_gmd__DQ_x005fNonQuantitativeAttributeAccuracy_x005fType(soap*, ...) allocate, set all public members
/// - gmd__DQ_x005fNonQuantitativeAttributeAccuracy_x005fType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__DQ_x005fNonQuantitativeAttributeAccuracy_x005fType(soap*, gmd__DQ_x005fNonQuantitativeAttributeAccuracy_x005fType*) deserialize from a stream
/// - int soap_write_gmd__DQ_x005fNonQuantitativeAttributeAccuracy_x005fType(soap*, gmd__DQ_x005fNonQuantitativeAttributeAccuracy_x005fType*) serialize to a stream
/// - gmd__DQ_x005fNonQuantitativeAttributeAccuracy_x005fType* gmd__DQ_x005fNonQuantitativeAttributeAccuracy_x005fType::soap_dup(soap*) returns deep copy of gmd__DQ_x005fNonQuantitativeAttributeAccuracy_x005fType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__DQ_x005fNonQuantitativeAttributeAccuracy_x005fType::soap_del() deep deletes gmd__DQ_x005fNonQuantitativeAttributeAccuracy_x005fType data members, use only after gmd__DQ_x005fNonQuantitativeAttributeAccuracy_x005fType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__DQ_x005fNonQuantitativeAttributeAccuracy_x005fType : public gmd__AbstractDQ_x005fThematicAccuracy_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectIdentification">.
/// Attribute "id" of XSD type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute "uuid" of XSD type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/*  INHERITED FROM gmd__AbstractDQ_x005fElement_x005fType:
/// Vector of gco__CharacterString_x005fPropertyType* of length 0..unbounded.
    std::vector<gco__CharacterString_x005fPropertyType*> nameOfMeasure                  0;
/// Element "measureIdentification" of XSD type "http://www.isotc211.org/2005/gmd":MD_Identifier_PropertyType.
    gmd__MD_x005fIdentifier_x005fPropertyType*  measureIdentification          0;	///< Optional element.
/// Element "measureDescription" of XSD type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  measureDescription             0;	///< Optional element.
/// Element "evaluationMethodType" of XSD type "http://www.isotc211.org/2005/gmd":DQ_EvaluationMethodTypeCode_PropertyType.
    gmd__DQ_x005fEvaluationMethodTypeCode_x005fPropertyType*  evaluationMethodType           0;	///< Optional element.
/// Element "evaluationMethodDescription" of XSD type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  evaluationMethodDescription    0;	///< Optional element.
/// Element "evaluationProcedure" of XSD type "http://www.isotc211.org/2005/gmd":CI_Citation_PropertyType.
    gmd__CI_x005fCitation_x005fPropertyType*  evaluationProcedure            0;	///< Optional element.
/// Vector of gco__DateTime_x005fPropertyType* of length 0..unbounded.
    std::vector<gco__DateTime_x005fPropertyType*> dateTime                       0;
/// Vector of gmd__DQ_x005fResult_x005fPropertyType* of length 1..2.
    std::vector<gmd__DQ_x005fResult_x005fPropertyType*> result                         1:2;
    END OF INHERITED FROM gmd__AbstractDQ_x005fElement_x005fType */
/*  INHERITED FROM gmd__AbstractDQ_x005fThematicAccuracy_x005fType:
    END OF INHERITED FROM gmd__AbstractDQ_x005fThematicAccuracy_x005fType */
};

/// @brief "http://www.isotc211.org/2005/gmd":DQ_ThematicClassificationCorrectness_Type is a complexType with complexContent extension of XSD type "http://www.isotc211.org/2005/gmd":AbstractDQ_ThematicAccuracy_Type.
///
/// class gmd__DQ_x005fThematicClassificationCorrectness_x005fType operations:
/// - gmd__DQ_x005fThematicClassificationCorrectness_x005fType* soap_new_gmd__DQ_x005fThematicClassificationCorrectness_x005fType(soap*) allocate and default initialize
/// - gmd__DQ_x005fThematicClassificationCorrectness_x005fType* soap_new_gmd__DQ_x005fThematicClassificationCorrectness_x005fType(soap*, int num) allocate array and default initialize values
/// - gmd__DQ_x005fThematicClassificationCorrectness_x005fType* soap_new_req_gmd__DQ_x005fThematicClassificationCorrectness_x005fType(soap*, ...) allocate, set required members
/// - gmd__DQ_x005fThematicClassificationCorrectness_x005fType* soap_new_set_gmd__DQ_x005fThematicClassificationCorrectness_x005fType(soap*, ...) allocate, set all public members
/// - gmd__DQ_x005fThematicClassificationCorrectness_x005fType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__DQ_x005fThematicClassificationCorrectness_x005fType(soap*, gmd__DQ_x005fThematicClassificationCorrectness_x005fType*) deserialize from a stream
/// - int soap_write_gmd__DQ_x005fThematicClassificationCorrectness_x005fType(soap*, gmd__DQ_x005fThematicClassificationCorrectness_x005fType*) serialize to a stream
/// - gmd__DQ_x005fThematicClassificationCorrectness_x005fType* gmd__DQ_x005fThematicClassificationCorrectness_x005fType::soap_dup(soap*) returns deep copy of gmd__DQ_x005fThematicClassificationCorrectness_x005fType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__DQ_x005fThematicClassificationCorrectness_x005fType::soap_del() deep deletes gmd__DQ_x005fThematicClassificationCorrectness_x005fType data members, use only after gmd__DQ_x005fThematicClassificationCorrectness_x005fType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__DQ_x005fThematicClassificationCorrectness_x005fType : public gmd__AbstractDQ_x005fThematicAccuracy_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectIdentification">.
/// Attribute "id" of XSD type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute "uuid" of XSD type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/*  INHERITED FROM gmd__AbstractDQ_x005fElement_x005fType:
/// Vector of gco__CharacterString_x005fPropertyType* of length 0..unbounded.
    std::vector<gco__CharacterString_x005fPropertyType*> nameOfMeasure                  0;
/// Element "measureIdentification" of XSD type "http://www.isotc211.org/2005/gmd":MD_Identifier_PropertyType.
    gmd__MD_x005fIdentifier_x005fPropertyType*  measureIdentification          0;	///< Optional element.
/// Element "measureDescription" of XSD type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  measureDescription             0;	///< Optional element.
/// Element "evaluationMethodType" of XSD type "http://www.isotc211.org/2005/gmd":DQ_EvaluationMethodTypeCode_PropertyType.
    gmd__DQ_x005fEvaluationMethodTypeCode_x005fPropertyType*  evaluationMethodType           0;	///< Optional element.
/// Element "evaluationMethodDescription" of XSD type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  evaluationMethodDescription    0;	///< Optional element.
/// Element "evaluationProcedure" of XSD type "http://www.isotc211.org/2005/gmd":CI_Citation_PropertyType.
    gmd__CI_x005fCitation_x005fPropertyType*  evaluationProcedure            0;	///< Optional element.
/// Vector of gco__DateTime_x005fPropertyType* of length 0..unbounded.
    std::vector<gco__DateTime_x005fPropertyType*> dateTime                       0;
/// Vector of gmd__DQ_x005fResult_x005fPropertyType* of length 1..2.
    std::vector<gmd__DQ_x005fResult_x005fPropertyType*> result                         1:2;
    END OF INHERITED FROM gmd__AbstractDQ_x005fElement_x005fType */
/*  INHERITED FROM gmd__AbstractDQ_x005fThematicAccuracy_x005fType:
    END OF INHERITED FROM gmd__AbstractDQ_x005fThematicAccuracy_x005fType */
};

/// @brief "http://www.isotc211.org/2005/gmd":DQ_RelativeInternalPositionalAccuracy_Type is a complexType with complexContent extension of XSD type "http://www.isotc211.org/2005/gmd":AbstractDQ_PositionalAccuracy_Type.
///
/// class gmd__DQ_x005fRelativeInternalPositionalAccuracy_x005fType operations:
/// - gmd__DQ_x005fRelativeInternalPositionalAccuracy_x005fType* soap_new_gmd__DQ_x005fRelativeInternalPositionalAccuracy_x005fType(soap*) allocate and default initialize
/// - gmd__DQ_x005fRelativeInternalPositionalAccuracy_x005fType* soap_new_gmd__DQ_x005fRelativeInternalPositionalAccuracy_x005fType(soap*, int num) allocate array and default initialize values
/// - gmd__DQ_x005fRelativeInternalPositionalAccuracy_x005fType* soap_new_req_gmd__DQ_x005fRelativeInternalPositionalAccuracy_x005fType(soap*, ...) allocate, set required members
/// - gmd__DQ_x005fRelativeInternalPositionalAccuracy_x005fType* soap_new_set_gmd__DQ_x005fRelativeInternalPositionalAccuracy_x005fType(soap*, ...) allocate, set all public members
/// - gmd__DQ_x005fRelativeInternalPositionalAccuracy_x005fType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__DQ_x005fRelativeInternalPositionalAccuracy_x005fType(soap*, gmd__DQ_x005fRelativeInternalPositionalAccuracy_x005fType*) deserialize from a stream
/// - int soap_write_gmd__DQ_x005fRelativeInternalPositionalAccuracy_x005fType(soap*, gmd__DQ_x005fRelativeInternalPositionalAccuracy_x005fType*) serialize to a stream
/// - gmd__DQ_x005fRelativeInternalPositionalAccuracy_x005fType* gmd__DQ_x005fRelativeInternalPositionalAccuracy_x005fType::soap_dup(soap*) returns deep copy of gmd__DQ_x005fRelativeInternalPositionalAccuracy_x005fType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__DQ_x005fRelativeInternalPositionalAccuracy_x005fType::soap_del() deep deletes gmd__DQ_x005fRelativeInternalPositionalAccuracy_x005fType data members, use only after gmd__DQ_x005fRelativeInternalPositionalAccuracy_x005fType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__DQ_x005fRelativeInternalPositionalAccuracy_x005fType : public gmd__AbstractDQ_x005fPositionalAccuracy_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectIdentification">.
/// Attribute "id" of XSD type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute "uuid" of XSD type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/*  INHERITED FROM gmd__AbstractDQ_x005fElement_x005fType:
/// Vector of gco__CharacterString_x005fPropertyType* of length 0..unbounded.
    std::vector<gco__CharacterString_x005fPropertyType*> nameOfMeasure                  0;
/// Element "measureIdentification" of XSD type "http://www.isotc211.org/2005/gmd":MD_Identifier_PropertyType.
    gmd__MD_x005fIdentifier_x005fPropertyType*  measureIdentification          0;	///< Optional element.
/// Element "measureDescription" of XSD type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  measureDescription             0;	///< Optional element.
/// Element "evaluationMethodType" of XSD type "http://www.isotc211.org/2005/gmd":DQ_EvaluationMethodTypeCode_PropertyType.
    gmd__DQ_x005fEvaluationMethodTypeCode_x005fPropertyType*  evaluationMethodType           0;	///< Optional element.
/// Element "evaluationMethodDescription" of XSD type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  evaluationMethodDescription    0;	///< Optional element.
/// Element "evaluationProcedure" of XSD type "http://www.isotc211.org/2005/gmd":CI_Citation_PropertyType.
    gmd__CI_x005fCitation_x005fPropertyType*  evaluationProcedure            0;	///< Optional element.
/// Vector of gco__DateTime_x005fPropertyType* of length 0..unbounded.
    std::vector<gco__DateTime_x005fPropertyType*> dateTime                       0;
/// Vector of gmd__DQ_x005fResult_x005fPropertyType* of length 1..2.
    std::vector<gmd__DQ_x005fResult_x005fPropertyType*> result                         1:2;
    END OF INHERITED FROM gmd__AbstractDQ_x005fElement_x005fType */
/*  INHERITED FROM gmd__AbstractDQ_x005fPositionalAccuracy_x005fType:
    END OF INHERITED FROM gmd__AbstractDQ_x005fPositionalAccuracy_x005fType */
};

/// @brief "http://www.isotc211.org/2005/gmd":DQ_GriddedDataPositionalAccuracy_Type is a complexType with complexContent extension of XSD type "http://www.isotc211.org/2005/gmd":AbstractDQ_PositionalAccuracy_Type.
///
/// class gmd__DQ_x005fGriddedDataPositionalAccuracy_x005fType operations:
/// - gmd__DQ_x005fGriddedDataPositionalAccuracy_x005fType* soap_new_gmd__DQ_x005fGriddedDataPositionalAccuracy_x005fType(soap*) allocate and default initialize
/// - gmd__DQ_x005fGriddedDataPositionalAccuracy_x005fType* soap_new_gmd__DQ_x005fGriddedDataPositionalAccuracy_x005fType(soap*, int num) allocate array and default initialize values
/// - gmd__DQ_x005fGriddedDataPositionalAccuracy_x005fType* soap_new_req_gmd__DQ_x005fGriddedDataPositionalAccuracy_x005fType(soap*, ...) allocate, set required members
/// - gmd__DQ_x005fGriddedDataPositionalAccuracy_x005fType* soap_new_set_gmd__DQ_x005fGriddedDataPositionalAccuracy_x005fType(soap*, ...) allocate, set all public members
/// - gmd__DQ_x005fGriddedDataPositionalAccuracy_x005fType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__DQ_x005fGriddedDataPositionalAccuracy_x005fType(soap*, gmd__DQ_x005fGriddedDataPositionalAccuracy_x005fType*) deserialize from a stream
/// - int soap_write_gmd__DQ_x005fGriddedDataPositionalAccuracy_x005fType(soap*, gmd__DQ_x005fGriddedDataPositionalAccuracy_x005fType*) serialize to a stream
/// - gmd__DQ_x005fGriddedDataPositionalAccuracy_x005fType* gmd__DQ_x005fGriddedDataPositionalAccuracy_x005fType::soap_dup(soap*) returns deep copy of gmd__DQ_x005fGriddedDataPositionalAccuracy_x005fType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__DQ_x005fGriddedDataPositionalAccuracy_x005fType::soap_del() deep deletes gmd__DQ_x005fGriddedDataPositionalAccuracy_x005fType data members, use only after gmd__DQ_x005fGriddedDataPositionalAccuracy_x005fType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__DQ_x005fGriddedDataPositionalAccuracy_x005fType : public gmd__AbstractDQ_x005fPositionalAccuracy_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectIdentification">.
/// Attribute "id" of XSD type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute "uuid" of XSD type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/*  INHERITED FROM gmd__AbstractDQ_x005fElement_x005fType:
/// Vector of gco__CharacterString_x005fPropertyType* of length 0..unbounded.
    std::vector<gco__CharacterString_x005fPropertyType*> nameOfMeasure                  0;
/// Element "measureIdentification" of XSD type "http://www.isotc211.org/2005/gmd":MD_Identifier_PropertyType.
    gmd__MD_x005fIdentifier_x005fPropertyType*  measureIdentification          0;	///< Optional element.
/// Element "measureDescription" of XSD type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  measureDescription             0;	///< Optional element.
/// Element "evaluationMethodType" of XSD type "http://www.isotc211.org/2005/gmd":DQ_EvaluationMethodTypeCode_PropertyType.
    gmd__DQ_x005fEvaluationMethodTypeCode_x005fPropertyType*  evaluationMethodType           0;	///< Optional element.
/// Element "evaluationMethodDescription" of XSD type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  evaluationMethodDescription    0;	///< Optional element.
/// Element "evaluationProcedure" of XSD type "http://www.isotc211.org/2005/gmd":CI_Citation_PropertyType.
    gmd__CI_x005fCitation_x005fPropertyType*  evaluationProcedure            0;	///< Optional element.
/// Vector of gco__DateTime_x005fPropertyType* of length 0..unbounded.
    std::vector<gco__DateTime_x005fPropertyType*> dateTime                       0;
/// Vector of gmd__DQ_x005fResult_x005fPropertyType* of length 1..2.
    std::vector<gmd__DQ_x005fResult_x005fPropertyType*> result                         1:2;
    END OF INHERITED FROM gmd__AbstractDQ_x005fElement_x005fType */
/*  INHERITED FROM gmd__AbstractDQ_x005fPositionalAccuracy_x005fType:
    END OF INHERITED FROM gmd__AbstractDQ_x005fPositionalAccuracy_x005fType */
};

/// @brief "http://www.isotc211.org/2005/gmd":DQ_AbsoluteExternalPositionalAccuracy_Type is a complexType with complexContent extension of XSD type "http://www.isotc211.org/2005/gmd":AbstractDQ_PositionalAccuracy_Type.
///
/// class gmd__DQ_x005fAbsoluteExternalPositionalAccuracy_x005fType operations:
/// - gmd__DQ_x005fAbsoluteExternalPositionalAccuracy_x005fType* soap_new_gmd__DQ_x005fAbsoluteExternalPositionalAccuracy_x005fType(soap*) allocate and default initialize
/// - gmd__DQ_x005fAbsoluteExternalPositionalAccuracy_x005fType* soap_new_gmd__DQ_x005fAbsoluteExternalPositionalAccuracy_x005fType(soap*, int num) allocate array and default initialize values
/// - gmd__DQ_x005fAbsoluteExternalPositionalAccuracy_x005fType* soap_new_req_gmd__DQ_x005fAbsoluteExternalPositionalAccuracy_x005fType(soap*, ...) allocate, set required members
/// - gmd__DQ_x005fAbsoluteExternalPositionalAccuracy_x005fType* soap_new_set_gmd__DQ_x005fAbsoluteExternalPositionalAccuracy_x005fType(soap*, ...) allocate, set all public members
/// - gmd__DQ_x005fAbsoluteExternalPositionalAccuracy_x005fType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__DQ_x005fAbsoluteExternalPositionalAccuracy_x005fType(soap*, gmd__DQ_x005fAbsoluteExternalPositionalAccuracy_x005fType*) deserialize from a stream
/// - int soap_write_gmd__DQ_x005fAbsoluteExternalPositionalAccuracy_x005fType(soap*, gmd__DQ_x005fAbsoluteExternalPositionalAccuracy_x005fType*) serialize to a stream
/// - gmd__DQ_x005fAbsoluteExternalPositionalAccuracy_x005fType* gmd__DQ_x005fAbsoluteExternalPositionalAccuracy_x005fType::soap_dup(soap*) returns deep copy of gmd__DQ_x005fAbsoluteExternalPositionalAccuracy_x005fType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__DQ_x005fAbsoluteExternalPositionalAccuracy_x005fType::soap_del() deep deletes gmd__DQ_x005fAbsoluteExternalPositionalAccuracy_x005fType data members, use only after gmd__DQ_x005fAbsoluteExternalPositionalAccuracy_x005fType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__DQ_x005fAbsoluteExternalPositionalAccuracy_x005fType : public gmd__AbstractDQ_x005fPositionalAccuracy_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectIdentification">.
/// Attribute "id" of XSD type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute "uuid" of XSD type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/*  INHERITED FROM gmd__AbstractDQ_x005fElement_x005fType:
/// Vector of gco__CharacterString_x005fPropertyType* of length 0..unbounded.
    std::vector<gco__CharacterString_x005fPropertyType*> nameOfMeasure                  0;
/// Element "measureIdentification" of XSD type "http://www.isotc211.org/2005/gmd":MD_Identifier_PropertyType.
    gmd__MD_x005fIdentifier_x005fPropertyType*  measureIdentification          0;	///< Optional element.
/// Element "measureDescription" of XSD type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  measureDescription             0;	///< Optional element.
/// Element "evaluationMethodType" of XSD type "http://www.isotc211.org/2005/gmd":DQ_EvaluationMethodTypeCode_PropertyType.
    gmd__DQ_x005fEvaluationMethodTypeCode_x005fPropertyType*  evaluationMethodType           0;	///< Optional element.
/// Element "evaluationMethodDescription" of XSD type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  evaluationMethodDescription    0;	///< Optional element.
/// Element "evaluationProcedure" of XSD type "http://www.isotc211.org/2005/gmd":CI_Citation_PropertyType.
    gmd__CI_x005fCitation_x005fPropertyType*  evaluationProcedure            0;	///< Optional element.
/// Vector of gco__DateTime_x005fPropertyType* of length 0..unbounded.
    std::vector<gco__DateTime_x005fPropertyType*> dateTime                       0;
/// Vector of gmd__DQ_x005fResult_x005fPropertyType* of length 1..2.
    std::vector<gmd__DQ_x005fResult_x005fPropertyType*> result                         1:2;
    END OF INHERITED FROM gmd__AbstractDQ_x005fElement_x005fType */
/*  INHERITED FROM gmd__AbstractDQ_x005fPositionalAccuracy_x005fType:
    END OF INHERITED FROM gmd__AbstractDQ_x005fPositionalAccuracy_x005fType */
};

/// @brief "http://www.isotc211.org/2005/gmd":DQ_TopologicalConsistency_Type is a complexType with complexContent extension of XSD type "http://www.isotc211.org/2005/gmd":AbstractDQ_LogicalConsistency_Type.
///
/// class gmd__DQ_x005fTopologicalConsistency_x005fType operations:
/// - gmd__DQ_x005fTopologicalConsistency_x005fType* soap_new_gmd__DQ_x005fTopologicalConsistency_x005fType(soap*) allocate and default initialize
/// - gmd__DQ_x005fTopologicalConsistency_x005fType* soap_new_gmd__DQ_x005fTopologicalConsistency_x005fType(soap*, int num) allocate array and default initialize values
/// - gmd__DQ_x005fTopologicalConsistency_x005fType* soap_new_req_gmd__DQ_x005fTopologicalConsistency_x005fType(soap*, ...) allocate, set required members
/// - gmd__DQ_x005fTopologicalConsistency_x005fType* soap_new_set_gmd__DQ_x005fTopologicalConsistency_x005fType(soap*, ...) allocate, set all public members
/// - gmd__DQ_x005fTopologicalConsistency_x005fType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__DQ_x005fTopologicalConsistency_x005fType(soap*, gmd__DQ_x005fTopologicalConsistency_x005fType*) deserialize from a stream
/// - int soap_write_gmd__DQ_x005fTopologicalConsistency_x005fType(soap*, gmd__DQ_x005fTopologicalConsistency_x005fType*) serialize to a stream
/// - gmd__DQ_x005fTopologicalConsistency_x005fType* gmd__DQ_x005fTopologicalConsistency_x005fType::soap_dup(soap*) returns deep copy of gmd__DQ_x005fTopologicalConsistency_x005fType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__DQ_x005fTopologicalConsistency_x005fType::soap_del() deep deletes gmd__DQ_x005fTopologicalConsistency_x005fType data members, use only after gmd__DQ_x005fTopologicalConsistency_x005fType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__DQ_x005fTopologicalConsistency_x005fType : public gmd__AbstractDQ_x005fLogicalConsistency_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectIdentification">.
/// Attribute "id" of XSD type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute "uuid" of XSD type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/*  INHERITED FROM gmd__AbstractDQ_x005fElement_x005fType:
/// Vector of gco__CharacterString_x005fPropertyType* of length 0..unbounded.
    std::vector<gco__CharacterString_x005fPropertyType*> nameOfMeasure                  0;
/// Element "measureIdentification" of XSD type "http://www.isotc211.org/2005/gmd":MD_Identifier_PropertyType.
    gmd__MD_x005fIdentifier_x005fPropertyType*  measureIdentification          0;	///< Optional element.
/// Element "measureDescription" of XSD type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  measureDescription             0;	///< Optional element.
/// Element "evaluationMethodType" of XSD type "http://www.isotc211.org/2005/gmd":DQ_EvaluationMethodTypeCode_PropertyType.
    gmd__DQ_x005fEvaluationMethodTypeCode_x005fPropertyType*  evaluationMethodType           0;	///< Optional element.
/// Element "evaluationMethodDescription" of XSD type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  evaluationMethodDescription    0;	///< Optional element.
/// Element "evaluationProcedure" of XSD type "http://www.isotc211.org/2005/gmd":CI_Citation_PropertyType.
    gmd__CI_x005fCitation_x005fPropertyType*  evaluationProcedure            0;	///< Optional element.
/// Vector of gco__DateTime_x005fPropertyType* of length 0..unbounded.
    std::vector<gco__DateTime_x005fPropertyType*> dateTime                       0;
/// Vector of gmd__DQ_x005fResult_x005fPropertyType* of length 1..2.
    std::vector<gmd__DQ_x005fResult_x005fPropertyType*> result                         1:2;
    END OF INHERITED FROM gmd__AbstractDQ_x005fElement_x005fType */
/*  INHERITED FROM gmd__AbstractDQ_x005fLogicalConsistency_x005fType:
    END OF INHERITED FROM gmd__AbstractDQ_x005fLogicalConsistency_x005fType */
};

/// @brief "http://www.isotc211.org/2005/gmd":DQ_FormatConsistency_Type is a complexType with complexContent extension of XSD type "http://www.isotc211.org/2005/gmd":AbstractDQ_LogicalConsistency_Type.
///
/// class gmd__DQ_x005fFormatConsistency_x005fType operations:
/// - gmd__DQ_x005fFormatConsistency_x005fType* soap_new_gmd__DQ_x005fFormatConsistency_x005fType(soap*) allocate and default initialize
/// - gmd__DQ_x005fFormatConsistency_x005fType* soap_new_gmd__DQ_x005fFormatConsistency_x005fType(soap*, int num) allocate array and default initialize values
/// - gmd__DQ_x005fFormatConsistency_x005fType* soap_new_req_gmd__DQ_x005fFormatConsistency_x005fType(soap*, ...) allocate, set required members
/// - gmd__DQ_x005fFormatConsistency_x005fType* soap_new_set_gmd__DQ_x005fFormatConsistency_x005fType(soap*, ...) allocate, set all public members
/// - gmd__DQ_x005fFormatConsistency_x005fType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__DQ_x005fFormatConsistency_x005fType(soap*, gmd__DQ_x005fFormatConsistency_x005fType*) deserialize from a stream
/// - int soap_write_gmd__DQ_x005fFormatConsistency_x005fType(soap*, gmd__DQ_x005fFormatConsistency_x005fType*) serialize to a stream
/// - gmd__DQ_x005fFormatConsistency_x005fType* gmd__DQ_x005fFormatConsistency_x005fType::soap_dup(soap*) returns deep copy of gmd__DQ_x005fFormatConsistency_x005fType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__DQ_x005fFormatConsistency_x005fType::soap_del() deep deletes gmd__DQ_x005fFormatConsistency_x005fType data members, use only after gmd__DQ_x005fFormatConsistency_x005fType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__DQ_x005fFormatConsistency_x005fType : public gmd__AbstractDQ_x005fLogicalConsistency_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectIdentification">.
/// Attribute "id" of XSD type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute "uuid" of XSD type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/*  INHERITED FROM gmd__AbstractDQ_x005fElement_x005fType:
/// Vector of gco__CharacterString_x005fPropertyType* of length 0..unbounded.
    std::vector<gco__CharacterString_x005fPropertyType*> nameOfMeasure                  0;
/// Element "measureIdentification" of XSD type "http://www.isotc211.org/2005/gmd":MD_Identifier_PropertyType.
    gmd__MD_x005fIdentifier_x005fPropertyType*  measureIdentification          0;	///< Optional element.
/// Element "measureDescription" of XSD type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  measureDescription             0;	///< Optional element.
/// Element "evaluationMethodType" of XSD type "http://www.isotc211.org/2005/gmd":DQ_EvaluationMethodTypeCode_PropertyType.
    gmd__DQ_x005fEvaluationMethodTypeCode_x005fPropertyType*  evaluationMethodType           0;	///< Optional element.
/// Element "evaluationMethodDescription" of XSD type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  evaluationMethodDescription    0;	///< Optional element.
/// Element "evaluationProcedure" of XSD type "http://www.isotc211.org/2005/gmd":CI_Citation_PropertyType.
    gmd__CI_x005fCitation_x005fPropertyType*  evaluationProcedure            0;	///< Optional element.
/// Vector of gco__DateTime_x005fPropertyType* of length 0..unbounded.
    std::vector<gco__DateTime_x005fPropertyType*> dateTime                       0;
/// Vector of gmd__DQ_x005fResult_x005fPropertyType* of length 1..2.
    std::vector<gmd__DQ_x005fResult_x005fPropertyType*> result                         1:2;
    END OF INHERITED FROM gmd__AbstractDQ_x005fElement_x005fType */
/*  INHERITED FROM gmd__AbstractDQ_x005fLogicalConsistency_x005fType:
    END OF INHERITED FROM gmd__AbstractDQ_x005fLogicalConsistency_x005fType */
};

/// @brief "http://www.isotc211.org/2005/gmd":DQ_DomainConsistency_Type is a complexType with complexContent extension of XSD type "http://www.isotc211.org/2005/gmd":AbstractDQ_LogicalConsistency_Type.
///
/// class gmd__DQ_x005fDomainConsistency_x005fType operations:
/// - gmd__DQ_x005fDomainConsistency_x005fType* soap_new_gmd__DQ_x005fDomainConsistency_x005fType(soap*) allocate and default initialize
/// - gmd__DQ_x005fDomainConsistency_x005fType* soap_new_gmd__DQ_x005fDomainConsistency_x005fType(soap*, int num) allocate array and default initialize values
/// - gmd__DQ_x005fDomainConsistency_x005fType* soap_new_req_gmd__DQ_x005fDomainConsistency_x005fType(soap*, ...) allocate, set required members
/// - gmd__DQ_x005fDomainConsistency_x005fType* soap_new_set_gmd__DQ_x005fDomainConsistency_x005fType(soap*, ...) allocate, set all public members
/// - gmd__DQ_x005fDomainConsistency_x005fType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__DQ_x005fDomainConsistency_x005fType(soap*, gmd__DQ_x005fDomainConsistency_x005fType*) deserialize from a stream
/// - int soap_write_gmd__DQ_x005fDomainConsistency_x005fType(soap*, gmd__DQ_x005fDomainConsistency_x005fType*) serialize to a stream
/// - gmd__DQ_x005fDomainConsistency_x005fType* gmd__DQ_x005fDomainConsistency_x005fType::soap_dup(soap*) returns deep copy of gmd__DQ_x005fDomainConsistency_x005fType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__DQ_x005fDomainConsistency_x005fType::soap_del() deep deletes gmd__DQ_x005fDomainConsistency_x005fType data members, use only after gmd__DQ_x005fDomainConsistency_x005fType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__DQ_x005fDomainConsistency_x005fType : public gmd__AbstractDQ_x005fLogicalConsistency_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectIdentification">.
/// Attribute "id" of XSD type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute "uuid" of XSD type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/*  INHERITED FROM gmd__AbstractDQ_x005fElement_x005fType:
/// Vector of gco__CharacterString_x005fPropertyType* of length 0..unbounded.
    std::vector<gco__CharacterString_x005fPropertyType*> nameOfMeasure                  0;
/// Element "measureIdentification" of XSD type "http://www.isotc211.org/2005/gmd":MD_Identifier_PropertyType.
    gmd__MD_x005fIdentifier_x005fPropertyType*  measureIdentification          0;	///< Optional element.
/// Element "measureDescription" of XSD type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  measureDescription             0;	///< Optional element.
/// Element "evaluationMethodType" of XSD type "http://www.isotc211.org/2005/gmd":DQ_EvaluationMethodTypeCode_PropertyType.
    gmd__DQ_x005fEvaluationMethodTypeCode_x005fPropertyType*  evaluationMethodType           0;	///< Optional element.
/// Element "evaluationMethodDescription" of XSD type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  evaluationMethodDescription    0;	///< Optional element.
/// Element "evaluationProcedure" of XSD type "http://www.isotc211.org/2005/gmd":CI_Citation_PropertyType.
    gmd__CI_x005fCitation_x005fPropertyType*  evaluationProcedure            0;	///< Optional element.
/// Vector of gco__DateTime_x005fPropertyType* of length 0..unbounded.
    std::vector<gco__DateTime_x005fPropertyType*> dateTime                       0;
/// Vector of gmd__DQ_x005fResult_x005fPropertyType* of length 1..2.
    std::vector<gmd__DQ_x005fResult_x005fPropertyType*> result                         1:2;
    END OF INHERITED FROM gmd__AbstractDQ_x005fElement_x005fType */
/*  INHERITED FROM gmd__AbstractDQ_x005fLogicalConsistency_x005fType:
    END OF INHERITED FROM gmd__AbstractDQ_x005fLogicalConsistency_x005fType */
};

/// @brief "http://www.isotc211.org/2005/gmd":DQ_ConceptualConsistency_Type is a complexType with complexContent extension of XSD type "http://www.isotc211.org/2005/gmd":AbstractDQ_LogicalConsistency_Type.
///
/// class gmd__DQ_x005fConceptualConsistency_x005fType operations:
/// - gmd__DQ_x005fConceptualConsistency_x005fType* soap_new_gmd__DQ_x005fConceptualConsistency_x005fType(soap*) allocate and default initialize
/// - gmd__DQ_x005fConceptualConsistency_x005fType* soap_new_gmd__DQ_x005fConceptualConsistency_x005fType(soap*, int num) allocate array and default initialize values
/// - gmd__DQ_x005fConceptualConsistency_x005fType* soap_new_req_gmd__DQ_x005fConceptualConsistency_x005fType(soap*, ...) allocate, set required members
/// - gmd__DQ_x005fConceptualConsistency_x005fType* soap_new_set_gmd__DQ_x005fConceptualConsistency_x005fType(soap*, ...) allocate, set all public members
/// - gmd__DQ_x005fConceptualConsistency_x005fType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__DQ_x005fConceptualConsistency_x005fType(soap*, gmd__DQ_x005fConceptualConsistency_x005fType*) deserialize from a stream
/// - int soap_write_gmd__DQ_x005fConceptualConsistency_x005fType(soap*, gmd__DQ_x005fConceptualConsistency_x005fType*) serialize to a stream
/// - gmd__DQ_x005fConceptualConsistency_x005fType* gmd__DQ_x005fConceptualConsistency_x005fType::soap_dup(soap*) returns deep copy of gmd__DQ_x005fConceptualConsistency_x005fType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__DQ_x005fConceptualConsistency_x005fType::soap_del() deep deletes gmd__DQ_x005fConceptualConsistency_x005fType data members, use only after gmd__DQ_x005fConceptualConsistency_x005fType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__DQ_x005fConceptualConsistency_x005fType : public gmd__AbstractDQ_x005fLogicalConsistency_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectIdentification">.
/// Attribute "id" of XSD type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute "uuid" of XSD type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/*  INHERITED FROM gmd__AbstractDQ_x005fElement_x005fType:
/// Vector of gco__CharacterString_x005fPropertyType* of length 0..unbounded.
    std::vector<gco__CharacterString_x005fPropertyType*> nameOfMeasure                  0;
/// Element "measureIdentification" of XSD type "http://www.isotc211.org/2005/gmd":MD_Identifier_PropertyType.
    gmd__MD_x005fIdentifier_x005fPropertyType*  measureIdentification          0;	///< Optional element.
/// Element "measureDescription" of XSD type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  measureDescription             0;	///< Optional element.
/// Element "evaluationMethodType" of XSD type "http://www.isotc211.org/2005/gmd":DQ_EvaluationMethodTypeCode_PropertyType.
    gmd__DQ_x005fEvaluationMethodTypeCode_x005fPropertyType*  evaluationMethodType           0;	///< Optional element.
/// Element "evaluationMethodDescription" of XSD type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  evaluationMethodDescription    0;	///< Optional element.
/// Element "evaluationProcedure" of XSD type "http://www.isotc211.org/2005/gmd":CI_Citation_PropertyType.
    gmd__CI_x005fCitation_x005fPropertyType*  evaluationProcedure            0;	///< Optional element.
/// Vector of gco__DateTime_x005fPropertyType* of length 0..unbounded.
    std::vector<gco__DateTime_x005fPropertyType*> dateTime                       0;
/// Vector of gmd__DQ_x005fResult_x005fPropertyType* of length 1..2.
    std::vector<gmd__DQ_x005fResult_x005fPropertyType*> result                         1:2;
    END OF INHERITED FROM gmd__AbstractDQ_x005fElement_x005fType */
/*  INHERITED FROM gmd__AbstractDQ_x005fLogicalConsistency_x005fType:
    END OF INHERITED FROM gmd__AbstractDQ_x005fLogicalConsistency_x005fType */
};

/// @brief "http://www.isotc211.org/2005/gmd":DQ_CompletenessOmission_Type is a complexType with complexContent extension of XSD type "http://www.isotc211.org/2005/gmd":AbstractDQ_Completeness_Type.
///
/// class gmd__DQ_x005fCompletenessOmission_x005fType operations:
/// - gmd__DQ_x005fCompletenessOmission_x005fType* soap_new_gmd__DQ_x005fCompletenessOmission_x005fType(soap*) allocate and default initialize
/// - gmd__DQ_x005fCompletenessOmission_x005fType* soap_new_gmd__DQ_x005fCompletenessOmission_x005fType(soap*, int num) allocate array and default initialize values
/// - gmd__DQ_x005fCompletenessOmission_x005fType* soap_new_req_gmd__DQ_x005fCompletenessOmission_x005fType(soap*, ...) allocate, set required members
/// - gmd__DQ_x005fCompletenessOmission_x005fType* soap_new_set_gmd__DQ_x005fCompletenessOmission_x005fType(soap*, ...) allocate, set all public members
/// - gmd__DQ_x005fCompletenessOmission_x005fType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__DQ_x005fCompletenessOmission_x005fType(soap*, gmd__DQ_x005fCompletenessOmission_x005fType*) deserialize from a stream
/// - int soap_write_gmd__DQ_x005fCompletenessOmission_x005fType(soap*, gmd__DQ_x005fCompletenessOmission_x005fType*) serialize to a stream
/// - gmd__DQ_x005fCompletenessOmission_x005fType* gmd__DQ_x005fCompletenessOmission_x005fType::soap_dup(soap*) returns deep copy of gmd__DQ_x005fCompletenessOmission_x005fType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__DQ_x005fCompletenessOmission_x005fType::soap_del() deep deletes gmd__DQ_x005fCompletenessOmission_x005fType data members, use only after gmd__DQ_x005fCompletenessOmission_x005fType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__DQ_x005fCompletenessOmission_x005fType : public gmd__AbstractDQ_x005fCompleteness_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectIdentification">.
/// Attribute "id" of XSD type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute "uuid" of XSD type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/*  INHERITED FROM gmd__AbstractDQ_x005fElement_x005fType:
/// Vector of gco__CharacterString_x005fPropertyType* of length 0..unbounded.
    std::vector<gco__CharacterString_x005fPropertyType*> nameOfMeasure                  0;
/// Element "measureIdentification" of XSD type "http://www.isotc211.org/2005/gmd":MD_Identifier_PropertyType.
    gmd__MD_x005fIdentifier_x005fPropertyType*  measureIdentification          0;	///< Optional element.
/// Element "measureDescription" of XSD type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  measureDescription             0;	///< Optional element.
/// Element "evaluationMethodType" of XSD type "http://www.isotc211.org/2005/gmd":DQ_EvaluationMethodTypeCode_PropertyType.
    gmd__DQ_x005fEvaluationMethodTypeCode_x005fPropertyType*  evaluationMethodType           0;	///< Optional element.
/// Element "evaluationMethodDescription" of XSD type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  evaluationMethodDescription    0;	///< Optional element.
/// Element "evaluationProcedure" of XSD type "http://www.isotc211.org/2005/gmd":CI_Citation_PropertyType.
    gmd__CI_x005fCitation_x005fPropertyType*  evaluationProcedure            0;	///< Optional element.
/// Vector of gco__DateTime_x005fPropertyType* of length 0..unbounded.
    std::vector<gco__DateTime_x005fPropertyType*> dateTime                       0;
/// Vector of gmd__DQ_x005fResult_x005fPropertyType* of length 1..2.
    std::vector<gmd__DQ_x005fResult_x005fPropertyType*> result                         1:2;
    END OF INHERITED FROM gmd__AbstractDQ_x005fElement_x005fType */
/*  INHERITED FROM gmd__AbstractDQ_x005fCompleteness_x005fType:
    END OF INHERITED FROM gmd__AbstractDQ_x005fCompleteness_x005fType */
};

/// @brief "http://www.isotc211.org/2005/gmd":DQ_CompletenessCommission_Type is a complexType with complexContent extension of XSD type "http://www.isotc211.org/2005/gmd":AbstractDQ_Completeness_Type.
///
/// class gmd__DQ_x005fCompletenessCommission_x005fType operations:
/// - gmd__DQ_x005fCompletenessCommission_x005fType* soap_new_gmd__DQ_x005fCompletenessCommission_x005fType(soap*) allocate and default initialize
/// - gmd__DQ_x005fCompletenessCommission_x005fType* soap_new_gmd__DQ_x005fCompletenessCommission_x005fType(soap*, int num) allocate array and default initialize values
/// - gmd__DQ_x005fCompletenessCommission_x005fType* soap_new_req_gmd__DQ_x005fCompletenessCommission_x005fType(soap*, ...) allocate, set required members
/// - gmd__DQ_x005fCompletenessCommission_x005fType* soap_new_set_gmd__DQ_x005fCompletenessCommission_x005fType(soap*, ...) allocate, set all public members
/// - gmd__DQ_x005fCompletenessCommission_x005fType::soap_default(soap*) default initialize members
/// - int soap_read_gmd__DQ_x005fCompletenessCommission_x005fType(soap*, gmd__DQ_x005fCompletenessCommission_x005fType*) deserialize from a stream
/// - int soap_write_gmd__DQ_x005fCompletenessCommission_x005fType(soap*, gmd__DQ_x005fCompletenessCommission_x005fType*) serialize to a stream
/// - gmd__DQ_x005fCompletenessCommission_x005fType* gmd__DQ_x005fCompletenessCommission_x005fType::soap_dup(soap*) returns deep copy of gmd__DQ_x005fCompletenessCommission_x005fType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gmd__DQ_x005fCompletenessCommission_x005fType::soap_del() deep deletes gmd__DQ_x005fCompletenessCommission_x005fType data members, use only after gmd__DQ_x005fCompletenessCommission_x005fType::soap_dup(NULL) (use soapcpp2 -Ed)
class gmd__DQ_x005fCompletenessCommission_x005fType : public gmd__AbstractDQ_x005fCompleteness_x005fType
{ public:
/*  INHERITED FROM gco__AbstractObject_x005fType:
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.isotc211.org/2005/gco":ObjectIdentification">.
/// Attribute "id" of XSD type xs:ID.
   @xsd__ID*                             id                             0;	///< Optional attribute.
/// Attribute "uuid" of XSD type xs:string.
   @std::string*                         uuid                           0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
    END OF INHERITED FROM gco__AbstractObject_x005fType */
/*  INHERITED FROM gmd__AbstractDQ_x005fElement_x005fType:
/// Vector of gco__CharacterString_x005fPropertyType* of length 0..unbounded.
    std::vector<gco__CharacterString_x005fPropertyType*> nameOfMeasure                  0;
/// Element "measureIdentification" of XSD type "http://www.isotc211.org/2005/gmd":MD_Identifier_PropertyType.
    gmd__MD_x005fIdentifier_x005fPropertyType*  measureIdentification          0;	///< Optional element.
/// Element "measureDescription" of XSD type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  measureDescription             0;	///< Optional element.
/// Element "evaluationMethodType" of XSD type "http://www.isotc211.org/2005/gmd":DQ_EvaluationMethodTypeCode_PropertyType.
    gmd__DQ_x005fEvaluationMethodTypeCode_x005fPropertyType*  evaluationMethodType           0;	///< Optional element.
/// Element "evaluationMethodDescription" of XSD type "http://www.isotc211.org/2005/gco":CharacterString_PropertyType.
    gco__CharacterString_x005fPropertyType*  evaluationMethodDescription    0;	///< Optional element.
/// Element "evaluationProcedure" of XSD type "http://www.isotc211.org/2005/gmd":CI_Citation_PropertyType.
    gmd__CI_x005fCitation_x005fPropertyType*  evaluationProcedure            0;	///< Optional element.
/// Vector of gco__DateTime_x005fPropertyType* of length 0..unbounded.
    std::vector<gco__DateTime_x005fPropertyType*> dateTime                       0;
/// Vector of gmd__DQ_x005fResult_x005fPropertyType* of length 1..2.
    std::vector<gmd__DQ_x005fResult_x005fPropertyType*> result                         1:2;
    END OF INHERITED FROM gmd__AbstractDQ_x005fElement_x005fType */
/*  INHERITED FROM gmd__AbstractDQ_x005fCompleteness_x005fType:
    END OF INHERITED FROM gmd__AbstractDQ_x005fCompleteness_x005fType */
};

/// @brief "http://www.opengis.net/gml/3.2":CompositeCurveType is a complexType with complexContent extension of XSD type "http://www.opengis.net/gml/3.2":AbstractCurveType.
///
/// class gml__CompositeCurveType operations:
/// - gml__CompositeCurveType* soap_new_gml__CompositeCurveType(soap*) allocate and default initialize
/// - gml__CompositeCurveType* soap_new_gml__CompositeCurveType(soap*, int num) allocate array and default initialize values
/// - gml__CompositeCurveType* soap_new_req_gml__CompositeCurveType(soap*, ...) allocate, set required members
/// - gml__CompositeCurveType* soap_new_set_gml__CompositeCurveType(soap*, ...) allocate, set all public members
/// - gml__CompositeCurveType::soap_default(soap*) default initialize members
/// - int soap_read_gml__CompositeCurveType(soap*, gml__CompositeCurveType*) deserialize from a stream
/// - int soap_write_gml__CompositeCurveType(soap*, gml__CompositeCurveType*) serialize to a stream
/// - gml__CompositeCurveType* gml__CompositeCurveType::soap_dup(soap*) returns deep copy of gml__CompositeCurveType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__CompositeCurveType::soap_del() deep deletes gml__CompositeCurveType data members, use only after gml__CompositeCurveType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__CompositeCurveType : public gml__AbstractCurveType
{ public:
/*  INHERITED FROM gml__AbstractGMLType:
//  BEGIN GROUP <xs:group name="StandardObjectProperties">
/// Vector of gml__MetaDataPropertyType* element refs of length 0..unbounded.
    std::vector<gml__MetaDataPropertyType*> metaDataProperty               0;
/// <PRE><BLOCKQUOTE>
///   The value of this property is a text description of the object. gml:description uses gml:StringOrRefType as its content model, so it may contain a simple text string content, or carry a reference to an external description. The use of gml:description to reference an external description has been deprecated and replaced by the gml:descriptionReference property.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":description.
    gml__StringOrRefType*                description                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The value of this property is a remote text description of the object. The xlink:href attribute of the gml:descriptionReference property references the external description.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":descriptionReference.
    gml__ReferenceType*                  descriptionReference           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Often, a special identifier is assigned to an object by the maintaining authority with the intention that it is used in references to the object For such cases, the codeSpace shall be provided. That identifier is usually unique either globally or within an application domain. gml:identifier is a pre-defined property for such identifiers.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":identifier.
    gml__CodeWithAuthorityType*          identifier                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The gml:name property provides a label or identifier for the object, commonly a descriptive name. An object may have several names, typically assigned by different authorities. gml:name uses the gml:CodeType content model. The authority for a name is indicated by the value of its (optional) codeSpace attribute. The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace. In common usage there will be one name per authority, so a processing application may select the name from its preferred codeSpace.
/// </BLOCKQUOTE></PRE>
/// Vector of gml__CodeType* element refs of length 0..unbounded.
    std::vector<gml__CodeType*         > name                           0;
//  END OF GROUP
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":id.
/// <PRE><BLOCKQUOTE>
///   The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.
/// </BLOCKQUOTE></PRE>
   @xsd__ID*                             gml__id                        0;	///< Optional attribute.
    END OF INHERITED FROM gml__AbstractGMLType */
/*  INHERITED FROM gml__AbstractGeometryType:
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":SRSReferenceGroup">.
/// Attribute "srsName" of XSD type xs:anyURI.
   @xsd__anyURI*                         srsName                        0;	///< Optional attribute.
/// Attribute "srsDimension" of XSD type xs:positiveInteger.
   @xsd__positiveInteger*                srsDimension                   0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":SRSInformationGroup">.
/// Attribute "axisLabels" of XSD type "http://www.opengis.net/gml/3.2":NCNameList.
   @gml__NCNameList*                     axisLabels                     0;	///< Optional attribute.
/// Attribute "uomLabels" of XSD type "http://www.opengis.net/gml/3.2":NCNameList.
   @gml__NCNameList*                     uomLabels                      0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
    END OF INHERITED FROM gml__AbstractGeometryType */
/*  INHERITED FROM gml__AbstractGeometricPrimitiveType:
    END OF INHERITED FROM gml__AbstractGeometricPrimitiveType */
/*  INHERITED FROM gml__AbstractCurveType:
    END OF INHERITED FROM gml__AbstractCurveType */
/// Vector of gml__CurvePropertyType* element refs of length 1..unbounded.
    std::vector<gml__CurvePropertyType*> curveMember                    1;
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":AggregationAttributeGroup">.
/// Attribute "aggregationType" of XSD type "http://www.opengis.net/gml/3.2":AggregationType.
   @enum gml__AggregationType*           aggregationType                0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.opengis.net/gml/3.2":CompositeSurfaceType is a complexType with complexContent extension of XSD type "http://www.opengis.net/gml/3.2":AbstractSurfaceType.
///
/// class gml__CompositeSurfaceType operations:
/// - gml__CompositeSurfaceType* soap_new_gml__CompositeSurfaceType(soap*) allocate and default initialize
/// - gml__CompositeSurfaceType* soap_new_gml__CompositeSurfaceType(soap*, int num) allocate array and default initialize values
/// - gml__CompositeSurfaceType* soap_new_req_gml__CompositeSurfaceType(soap*, ...) allocate, set required members
/// - gml__CompositeSurfaceType* soap_new_set_gml__CompositeSurfaceType(soap*, ...) allocate, set all public members
/// - gml__CompositeSurfaceType::soap_default(soap*) default initialize members
/// - int soap_read_gml__CompositeSurfaceType(soap*, gml__CompositeSurfaceType*) deserialize from a stream
/// - int soap_write_gml__CompositeSurfaceType(soap*, gml__CompositeSurfaceType*) serialize to a stream
/// - gml__CompositeSurfaceType* gml__CompositeSurfaceType::soap_dup(soap*) returns deep copy of gml__CompositeSurfaceType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__CompositeSurfaceType::soap_del() deep deletes gml__CompositeSurfaceType data members, use only after gml__CompositeSurfaceType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__CompositeSurfaceType : public gml__AbstractSurfaceType
{ public:
/*  INHERITED FROM gml__AbstractGMLType:
//  BEGIN GROUP <xs:group name="StandardObjectProperties">
/// Vector of gml__MetaDataPropertyType* element refs of length 0..unbounded.
    std::vector<gml__MetaDataPropertyType*> metaDataProperty               0;
/// <PRE><BLOCKQUOTE>
///   The value of this property is a text description of the object. gml:description uses gml:StringOrRefType as its content model, so it may contain a simple text string content, or carry a reference to an external description. The use of gml:description to reference an external description has been deprecated and replaced by the gml:descriptionReference property.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":description.
    gml__StringOrRefType*                description                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The value of this property is a remote text description of the object. The xlink:href attribute of the gml:descriptionReference property references the external description.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":descriptionReference.
    gml__ReferenceType*                  descriptionReference           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Often, a special identifier is assigned to an object by the maintaining authority with the intention that it is used in references to the object For such cases, the codeSpace shall be provided. That identifier is usually unique either globally or within an application domain. gml:identifier is a pre-defined property for such identifiers.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":identifier.
    gml__CodeWithAuthorityType*          identifier                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The gml:name property provides a label or identifier for the object, commonly a descriptive name. An object may have several names, typically assigned by different authorities. gml:name uses the gml:CodeType content model. The authority for a name is indicated by the value of its (optional) codeSpace attribute. The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace. In common usage there will be one name per authority, so a processing application may select the name from its preferred codeSpace.
/// </BLOCKQUOTE></PRE>
/// Vector of gml__CodeType* element refs of length 0..unbounded.
    std::vector<gml__CodeType*         > name                           0;
//  END OF GROUP
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":id.
/// <PRE><BLOCKQUOTE>
///   The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.
/// </BLOCKQUOTE></PRE>
   @xsd__ID*                             gml__id                        0;	///< Optional attribute.
    END OF INHERITED FROM gml__AbstractGMLType */
/*  INHERITED FROM gml__AbstractGeometryType:
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":SRSReferenceGroup">.
/// Attribute "srsName" of XSD type xs:anyURI.
   @xsd__anyURI*                         srsName                        0;	///< Optional attribute.
/// Attribute "srsDimension" of XSD type xs:positiveInteger.
   @xsd__positiveInteger*                srsDimension                   0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":SRSInformationGroup">.
/// Attribute "axisLabels" of XSD type "http://www.opengis.net/gml/3.2":NCNameList.
   @gml__NCNameList*                     axisLabels                     0;	///< Optional attribute.
/// Attribute "uomLabels" of XSD type "http://www.opengis.net/gml/3.2":NCNameList.
   @gml__NCNameList*                     uomLabels                      0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
    END OF INHERITED FROM gml__AbstractGeometryType */
/*  INHERITED FROM gml__AbstractGeometricPrimitiveType:
    END OF INHERITED FROM gml__AbstractGeometricPrimitiveType */
/*  INHERITED FROM gml__AbstractSurfaceType:
    END OF INHERITED FROM gml__AbstractSurfaceType */
/// <PRE><BLOCKQUOTE>
///   This property element either references a surface via the XLink-attributes or contains the surface element. A surface element is any element, which is substitutable for gml:AbstractSurface.
/// </BLOCKQUOTE></PRE>
/// Vector of gml__SurfacePropertyType* element refs of length 1..unbounded.
    std::vector<gml__SurfacePropertyType*> surfaceMember                  1;
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":AggregationAttributeGroup">.
/// Attribute "aggregationType" of XSD type "http://www.opengis.net/gml/3.2":AggregationType.
   @enum gml__AggregationType*           aggregationType                0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.opengis.net/gml/3.2":CompositeSolidType is a complexType with complexContent extension of XSD type "http://www.opengis.net/gml/3.2":AbstractSolidType.
///
/// class gml__CompositeSolidType operations:
/// - gml__CompositeSolidType* soap_new_gml__CompositeSolidType(soap*) allocate and default initialize
/// - gml__CompositeSolidType* soap_new_gml__CompositeSolidType(soap*, int num) allocate array and default initialize values
/// - gml__CompositeSolidType* soap_new_req_gml__CompositeSolidType(soap*, ...) allocate, set required members
/// - gml__CompositeSolidType* soap_new_set_gml__CompositeSolidType(soap*, ...) allocate, set all public members
/// - gml__CompositeSolidType::soap_default(soap*) default initialize members
/// - int soap_read_gml__CompositeSolidType(soap*, gml__CompositeSolidType*) deserialize from a stream
/// - int soap_write_gml__CompositeSolidType(soap*, gml__CompositeSolidType*) serialize to a stream
/// - gml__CompositeSolidType* gml__CompositeSolidType::soap_dup(soap*) returns deep copy of gml__CompositeSolidType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__CompositeSolidType::soap_del() deep deletes gml__CompositeSolidType data members, use only after gml__CompositeSolidType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__CompositeSolidType : public gml__AbstractSolidType
{ public:
/*  INHERITED FROM gml__AbstractGMLType:
//  BEGIN GROUP <xs:group name="StandardObjectProperties">
/// Vector of gml__MetaDataPropertyType* element refs of length 0..unbounded.
    std::vector<gml__MetaDataPropertyType*> metaDataProperty               0;
/// <PRE><BLOCKQUOTE>
///   The value of this property is a text description of the object. gml:description uses gml:StringOrRefType as its content model, so it may contain a simple text string content, or carry a reference to an external description. The use of gml:description to reference an external description has been deprecated and replaced by the gml:descriptionReference property.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":description.
    gml__StringOrRefType*                description                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The value of this property is a remote text description of the object. The xlink:href attribute of the gml:descriptionReference property references the external description.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":descriptionReference.
    gml__ReferenceType*                  descriptionReference           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Often, a special identifier is assigned to an object by the maintaining authority with the intention that it is used in references to the object For such cases, the codeSpace shall be provided. That identifier is usually unique either globally or within an application domain. gml:identifier is a pre-defined property for such identifiers.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":identifier.
    gml__CodeWithAuthorityType*          identifier                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The gml:name property provides a label or identifier for the object, commonly a descriptive name. An object may have several names, typically assigned by different authorities. gml:name uses the gml:CodeType content model. The authority for a name is indicated by the value of its (optional) codeSpace attribute. The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace. In common usage there will be one name per authority, so a processing application may select the name from its preferred codeSpace.
/// </BLOCKQUOTE></PRE>
/// Vector of gml__CodeType* element refs of length 0..unbounded.
    std::vector<gml__CodeType*         > name                           0;
//  END OF GROUP
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":id.
/// <PRE><BLOCKQUOTE>
///   The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.
/// </BLOCKQUOTE></PRE>
   @xsd__ID*                             gml__id                        0;	///< Optional attribute.
    END OF INHERITED FROM gml__AbstractGMLType */
/*  INHERITED FROM gml__AbstractGeometryType:
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":SRSReferenceGroup">.
/// Attribute "srsName" of XSD type xs:anyURI.
   @xsd__anyURI*                         srsName                        0;	///< Optional attribute.
/// Attribute "srsDimension" of XSD type xs:positiveInteger.
   @xsd__positiveInteger*                srsDimension                   0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":SRSInformationGroup">.
/// Attribute "axisLabels" of XSD type "http://www.opengis.net/gml/3.2":NCNameList.
   @gml__NCNameList*                     axisLabels                     0;	///< Optional attribute.
/// Attribute "uomLabels" of XSD type "http://www.opengis.net/gml/3.2":NCNameList.
   @gml__NCNameList*                     uomLabels                      0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
    END OF INHERITED FROM gml__AbstractGeometryType */
/*  INHERITED FROM gml__AbstractGeometricPrimitiveType:
    END OF INHERITED FROM gml__AbstractGeometricPrimitiveType */
/*  INHERITED FROM gml__AbstractSolidType:
    END OF INHERITED FROM gml__AbstractSolidType */
/// <PRE><BLOCKQUOTE>
///   This property element either references a solid via the XLink-attributes or contains the solid element. A solid element is any element, which is substitutable for gml:AbstractSolid.
/// </BLOCKQUOTE></PRE>
/// Vector of gml__SolidPropertyType* element refs of length 1..unbounded.
    std::vector<gml__SolidPropertyType*> solidMember                    1;
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":AggregationAttributeGroup">.
/// Attribute "aggregationType" of XSD type "http://www.opengis.net/gml/3.2":AggregationType.
   @enum gml__AggregationType*           aggregationType                0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.opengis.net/gml/3.2":CurveType is a complexType with complexContent extension of XSD type "http://www.opengis.net/gml/3.2":AbstractCurveType.
///
/// class gml__CurveType operations:
/// - gml__CurveType* soap_new_gml__CurveType(soap*) allocate and default initialize
/// - gml__CurveType* soap_new_gml__CurveType(soap*, int num) allocate array and default initialize values
/// - gml__CurveType* soap_new_req_gml__CurveType(soap*, ...) allocate, set required members
/// - gml__CurveType* soap_new_set_gml__CurveType(soap*, ...) allocate, set all public members
/// - gml__CurveType::soap_default(soap*) default initialize members
/// - int soap_read_gml__CurveType(soap*, gml__CurveType*) deserialize from a stream
/// - int soap_write_gml__CurveType(soap*, gml__CurveType*) serialize to a stream
/// - gml__CurveType* gml__CurveType::soap_dup(soap*) returns deep copy of gml__CurveType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__CurveType::soap_del() deep deletes gml__CurveType data members, use only after gml__CurveType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__CurveType : public gml__AbstractCurveType
{ public:
/*  INHERITED FROM gml__AbstractGMLType:
//  BEGIN GROUP <xs:group name="StandardObjectProperties">
/// Vector of gml__MetaDataPropertyType* element refs of length 0..unbounded.
    std::vector<gml__MetaDataPropertyType*> metaDataProperty               0;
/// <PRE><BLOCKQUOTE>
///   The value of this property is a text description of the object. gml:description uses gml:StringOrRefType as its content model, so it may contain a simple text string content, or carry a reference to an external description. The use of gml:description to reference an external description has been deprecated and replaced by the gml:descriptionReference property.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":description.
    gml__StringOrRefType*                description                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The value of this property is a remote text description of the object. The xlink:href attribute of the gml:descriptionReference property references the external description.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":descriptionReference.
    gml__ReferenceType*                  descriptionReference           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Often, a special identifier is assigned to an object by the maintaining authority with the intention that it is used in references to the object For such cases, the codeSpace shall be provided. That identifier is usually unique either globally or within an application domain. gml:identifier is a pre-defined property for such identifiers.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":identifier.
    gml__CodeWithAuthorityType*          identifier                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The gml:name property provides a label or identifier for the object, commonly a descriptive name. An object may have several names, typically assigned by different authorities. gml:name uses the gml:CodeType content model. The authority for a name is indicated by the value of its (optional) codeSpace attribute. The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace. In common usage there will be one name per authority, so a processing application may select the name from its preferred codeSpace.
/// </BLOCKQUOTE></PRE>
/// Vector of gml__CodeType* element refs of length 0..unbounded.
    std::vector<gml__CodeType*         > name                           0;
//  END OF GROUP
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":id.
/// <PRE><BLOCKQUOTE>
///   The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.
/// </BLOCKQUOTE></PRE>
   @xsd__ID*                             gml__id                        0;	///< Optional attribute.
    END OF INHERITED FROM gml__AbstractGMLType */
/*  INHERITED FROM gml__AbstractGeometryType:
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":SRSReferenceGroup">.
/// Attribute "srsName" of XSD type xs:anyURI.
   @xsd__anyURI*                         srsName                        0;	///< Optional attribute.
/// Attribute "srsDimension" of XSD type xs:positiveInteger.
   @xsd__positiveInteger*                srsDimension                   0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":SRSInformationGroup">.
/// Attribute "axisLabels" of XSD type "http://www.opengis.net/gml/3.2":NCNameList.
   @gml__NCNameList*                     axisLabels                     0;	///< Optional attribute.
/// Attribute "uomLabels" of XSD type "http://www.opengis.net/gml/3.2":NCNameList.
   @gml__NCNameList*                     uomLabels                      0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
    END OF INHERITED FROM gml__AbstractGeometryType */
/*  INHERITED FROM gml__AbstractGeometricPrimitiveType:
    END OF INHERITED FROM gml__AbstractGeometricPrimitiveType */
/*  INHERITED FROM gml__AbstractCurveType:
    END OF INHERITED FROM gml__AbstractCurveType */
/// <PRE><BLOCKQUOTE>
///   This property element contains a list of curve segments. The order of the elements is significant and shall be preserved when processing the array.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":segments.
    gml__CurveSegmentArrayPropertyType*  segments                       1;	///< Required element.
};

/// @brief "http://www.opengis.net/gml/3.2":OrientableCurveType is a complexType with complexContent extension of XSD type "http://www.opengis.net/gml/3.2":AbstractCurveType.
///
/// class gml__OrientableCurveType operations:
/// - gml__OrientableCurveType* soap_new_gml__OrientableCurveType(soap*) allocate and default initialize
/// - gml__OrientableCurveType* soap_new_gml__OrientableCurveType(soap*, int num) allocate array and default initialize values
/// - gml__OrientableCurveType* soap_new_req_gml__OrientableCurveType(soap*, ...) allocate, set required members
/// - gml__OrientableCurveType* soap_new_set_gml__OrientableCurveType(soap*, ...) allocate, set all public members
/// - gml__OrientableCurveType::soap_default(soap*) default initialize members
/// - int soap_read_gml__OrientableCurveType(soap*, gml__OrientableCurveType*) deserialize from a stream
/// - int soap_write_gml__OrientableCurveType(soap*, gml__OrientableCurveType*) serialize to a stream
/// - gml__OrientableCurveType* gml__OrientableCurveType::soap_dup(soap*) returns deep copy of gml__OrientableCurveType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__OrientableCurveType::soap_del() deep deletes gml__OrientableCurveType data members, use only after gml__OrientableCurveType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__OrientableCurveType : public gml__AbstractCurveType
{ public:
/*  INHERITED FROM gml__AbstractGMLType:
//  BEGIN GROUP <xs:group name="StandardObjectProperties">
/// Vector of gml__MetaDataPropertyType* element refs of length 0..unbounded.
    std::vector<gml__MetaDataPropertyType*> metaDataProperty               0;
/// <PRE><BLOCKQUOTE>
///   The value of this property is a text description of the object. gml:description uses gml:StringOrRefType as its content model, so it may contain a simple text string content, or carry a reference to an external description. The use of gml:description to reference an external description has been deprecated and replaced by the gml:descriptionReference property.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":description.
    gml__StringOrRefType*                description                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The value of this property is a remote text description of the object. The xlink:href attribute of the gml:descriptionReference property references the external description.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":descriptionReference.
    gml__ReferenceType*                  descriptionReference           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Often, a special identifier is assigned to an object by the maintaining authority with the intention that it is used in references to the object For such cases, the codeSpace shall be provided. That identifier is usually unique either globally or within an application domain. gml:identifier is a pre-defined property for such identifiers.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":identifier.
    gml__CodeWithAuthorityType*          identifier                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The gml:name property provides a label or identifier for the object, commonly a descriptive name. An object may have several names, typically assigned by different authorities. gml:name uses the gml:CodeType content model. The authority for a name is indicated by the value of its (optional) codeSpace attribute. The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace. In common usage there will be one name per authority, so a processing application may select the name from its preferred codeSpace.
/// </BLOCKQUOTE></PRE>
/// Vector of gml__CodeType* element refs of length 0..unbounded.
    std::vector<gml__CodeType*         > name                           0;
//  END OF GROUP
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":id.
/// <PRE><BLOCKQUOTE>
///   The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.
/// </BLOCKQUOTE></PRE>
   @xsd__ID*                             gml__id                        0;	///< Optional attribute.
    END OF INHERITED FROM gml__AbstractGMLType */
/*  INHERITED FROM gml__AbstractGeometryType:
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":SRSReferenceGroup">.
/// Attribute "srsName" of XSD type xs:anyURI.
   @xsd__anyURI*                         srsName                        0;	///< Optional attribute.
/// Attribute "srsDimension" of XSD type xs:positiveInteger.
   @xsd__positiveInteger*                srsDimension                   0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":SRSInformationGroup">.
/// Attribute "axisLabels" of XSD type "http://www.opengis.net/gml/3.2":NCNameList.
   @gml__NCNameList*                     axisLabels                     0;	///< Optional attribute.
/// Attribute "uomLabels" of XSD type "http://www.opengis.net/gml/3.2":NCNameList.
   @gml__NCNameList*                     uomLabels                      0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
    END OF INHERITED FROM gml__AbstractGeometryType */
/*  INHERITED FROM gml__AbstractGeometricPrimitiveType:
    END OF INHERITED FROM gml__AbstractGeometricPrimitiveType */
/*  INHERITED FROM gml__AbstractCurveType:
    END OF INHERITED FROM gml__AbstractCurveType */
/// <PRE><BLOCKQUOTE>
///   The property baseCurve references or contains the base curve, i.e. it either references the base curve via the XLink-attributes or contains the curve element. A curve element is any element which is substitutable for AbstractCurve. The base curve has positive orientation.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":baseCurve.
    gml__CurvePropertyType*              baseCurve                      1;	///< Required element.
/// Attribute "orientation" of XSD type "http://www.opengis.net/gml/3.2":SignType.
   @enum gml__SignType                   orientation                    0 = gml__SignType___x002b;	///< Default attribute value="+".
};

/// @brief "http://www.opengis.net/gml/3.2":SurfaceType is a complexType with complexContent extension of XSD type "http://www.opengis.net/gml/3.2":AbstractSurfaceType.
///
/// class gml__SurfaceType operations:
/// - gml__SurfaceType* soap_new_gml__SurfaceType(soap*) allocate and default initialize
/// - gml__SurfaceType* soap_new_gml__SurfaceType(soap*, int num) allocate array and default initialize values
/// - gml__SurfaceType* soap_new_req_gml__SurfaceType(soap*, ...) allocate, set required members
/// - gml__SurfaceType* soap_new_set_gml__SurfaceType(soap*, ...) allocate, set all public members
/// - gml__SurfaceType::soap_default(soap*) default initialize members
/// - int soap_read_gml__SurfaceType(soap*, gml__SurfaceType*) deserialize from a stream
/// - int soap_write_gml__SurfaceType(soap*, gml__SurfaceType*) serialize to a stream
/// - gml__SurfaceType* gml__SurfaceType::soap_dup(soap*) returns deep copy of gml__SurfaceType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__SurfaceType::soap_del() deep deletes gml__SurfaceType data members, use only after gml__SurfaceType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__SurfaceType : public gml__AbstractSurfaceType
{ public:
/*  INHERITED FROM gml__AbstractGMLType:
//  BEGIN GROUP <xs:group name="StandardObjectProperties">
/// Vector of gml__MetaDataPropertyType* element refs of length 0..unbounded.
    std::vector<gml__MetaDataPropertyType*> metaDataProperty               0;
/// <PRE><BLOCKQUOTE>
///   The value of this property is a text description of the object. gml:description uses gml:StringOrRefType as its content model, so it may contain a simple text string content, or carry a reference to an external description. The use of gml:description to reference an external description has been deprecated and replaced by the gml:descriptionReference property.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":description.
    gml__StringOrRefType*                description                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The value of this property is a remote text description of the object. The xlink:href attribute of the gml:descriptionReference property references the external description.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":descriptionReference.
    gml__ReferenceType*                  descriptionReference           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Often, a special identifier is assigned to an object by the maintaining authority with the intention that it is used in references to the object For such cases, the codeSpace shall be provided. That identifier is usually unique either globally or within an application domain. gml:identifier is a pre-defined property for such identifiers.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":identifier.
    gml__CodeWithAuthorityType*          identifier                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The gml:name property provides a label or identifier for the object, commonly a descriptive name. An object may have several names, typically assigned by different authorities. gml:name uses the gml:CodeType content model. The authority for a name is indicated by the value of its (optional) codeSpace attribute. The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace. In common usage there will be one name per authority, so a processing application may select the name from its preferred codeSpace.
/// </BLOCKQUOTE></PRE>
/// Vector of gml__CodeType* element refs of length 0..unbounded.
    std::vector<gml__CodeType*         > name                           0;
//  END OF GROUP
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":id.
/// <PRE><BLOCKQUOTE>
///   The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.
/// </BLOCKQUOTE></PRE>
   @xsd__ID*                             gml__id                        0;	///< Optional attribute.
    END OF INHERITED FROM gml__AbstractGMLType */
/*  INHERITED FROM gml__AbstractGeometryType:
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":SRSReferenceGroup">.
/// Attribute "srsName" of XSD type xs:anyURI.
   @xsd__anyURI*                         srsName                        0;	///< Optional attribute.
/// Attribute "srsDimension" of XSD type xs:positiveInteger.
   @xsd__positiveInteger*                srsDimension                   0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":SRSInformationGroup">.
/// Attribute "axisLabels" of XSD type "http://www.opengis.net/gml/3.2":NCNameList.
   @gml__NCNameList*                     axisLabels                     0;	///< Optional attribute.
/// Attribute "uomLabels" of XSD type "http://www.opengis.net/gml/3.2":NCNameList.
   @gml__NCNameList*                     uomLabels                      0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
    END OF INHERITED FROM gml__AbstractGeometryType */
/*  INHERITED FROM gml__AbstractGeometricPrimitiveType:
    END OF INHERITED FROM gml__AbstractGeometricPrimitiveType */
/*  INHERITED FROM gml__AbstractSurfaceType:
    END OF INHERITED FROM gml__AbstractSurfaceType */
/// <PRE><BLOCKQUOTE>
///   The patches property element contains the sequence of surface patches. The order of the elements is significant and shall be preserved when processing the array.
/// </BLOCKQUOTE></PRE>
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="patches"> with global elements <polygonPatches> <trianglePatches>
   $int                                  __unionpatches                ;	///< Union _gml__union_SurfaceType selector: set to SOAP_UNION__gml__union_SurfaceType_<fieldname>
/// Union for substitutionGroup gml__patches.
    union _gml__union_SurfaceType
    {
/// <PRE><BLOCKQUOTE>
///   The patches property element contains the sequence of surface patches. The order of the elements is significant and shall be preserved when processing the array.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":patches.
    gml__SurfacePatchArrayPropertyType*  patches                        nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.opengis.net/gml/3.2":polygonPatches.
    gml__SurfacePatchArrayPropertyType*  polygonPatches                 nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.opengis.net/gml/3.2":trianglePatches.
    gml__SurfacePatchArrayPropertyType*  trianglePatches                nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_SurfaceType             ;
//  END OF SUBSTITUTIONS
};

/// @brief "http://www.opengis.net/gml/3.2":OrientableSurfaceType is a complexType with complexContent extension of XSD type "http://www.opengis.net/gml/3.2":AbstractSurfaceType.
///
/// class gml__OrientableSurfaceType operations:
/// - gml__OrientableSurfaceType* soap_new_gml__OrientableSurfaceType(soap*) allocate and default initialize
/// - gml__OrientableSurfaceType* soap_new_gml__OrientableSurfaceType(soap*, int num) allocate array and default initialize values
/// - gml__OrientableSurfaceType* soap_new_req_gml__OrientableSurfaceType(soap*, ...) allocate, set required members
/// - gml__OrientableSurfaceType* soap_new_set_gml__OrientableSurfaceType(soap*, ...) allocate, set all public members
/// - gml__OrientableSurfaceType::soap_default(soap*) default initialize members
/// - int soap_read_gml__OrientableSurfaceType(soap*, gml__OrientableSurfaceType*) deserialize from a stream
/// - int soap_write_gml__OrientableSurfaceType(soap*, gml__OrientableSurfaceType*) serialize to a stream
/// - gml__OrientableSurfaceType* gml__OrientableSurfaceType::soap_dup(soap*) returns deep copy of gml__OrientableSurfaceType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__OrientableSurfaceType::soap_del() deep deletes gml__OrientableSurfaceType data members, use only after gml__OrientableSurfaceType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__OrientableSurfaceType : public gml__AbstractSurfaceType
{ public:
/*  INHERITED FROM gml__AbstractGMLType:
//  BEGIN GROUP <xs:group name="StandardObjectProperties">
/// Vector of gml__MetaDataPropertyType* element refs of length 0..unbounded.
    std::vector<gml__MetaDataPropertyType*> metaDataProperty               0;
/// <PRE><BLOCKQUOTE>
///   The value of this property is a text description of the object. gml:description uses gml:StringOrRefType as its content model, so it may contain a simple text string content, or carry a reference to an external description. The use of gml:description to reference an external description has been deprecated and replaced by the gml:descriptionReference property.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":description.
    gml__StringOrRefType*                description                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The value of this property is a remote text description of the object. The xlink:href attribute of the gml:descriptionReference property references the external description.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":descriptionReference.
    gml__ReferenceType*                  descriptionReference           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Often, a special identifier is assigned to an object by the maintaining authority with the intention that it is used in references to the object For such cases, the codeSpace shall be provided. That identifier is usually unique either globally or within an application domain. gml:identifier is a pre-defined property for such identifiers.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":identifier.
    gml__CodeWithAuthorityType*          identifier                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The gml:name property provides a label or identifier for the object, commonly a descriptive name. An object may have several names, typically assigned by different authorities. gml:name uses the gml:CodeType content model. The authority for a name is indicated by the value of its (optional) codeSpace attribute. The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace. In common usage there will be one name per authority, so a processing application may select the name from its preferred codeSpace.
/// </BLOCKQUOTE></PRE>
/// Vector of gml__CodeType* element refs of length 0..unbounded.
    std::vector<gml__CodeType*         > name                           0;
//  END OF GROUP
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":id.
/// <PRE><BLOCKQUOTE>
///   The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.
/// </BLOCKQUOTE></PRE>
   @xsd__ID*                             gml__id                        0;	///< Optional attribute.
    END OF INHERITED FROM gml__AbstractGMLType */
/*  INHERITED FROM gml__AbstractGeometryType:
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":SRSReferenceGroup">.
/// Attribute "srsName" of XSD type xs:anyURI.
   @xsd__anyURI*                         srsName                        0;	///< Optional attribute.
/// Attribute "srsDimension" of XSD type xs:positiveInteger.
   @xsd__positiveInteger*                srsDimension                   0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":SRSInformationGroup">.
/// Attribute "axisLabels" of XSD type "http://www.opengis.net/gml/3.2":NCNameList.
   @gml__NCNameList*                     axisLabels                     0;	///< Optional attribute.
/// Attribute "uomLabels" of XSD type "http://www.opengis.net/gml/3.2":NCNameList.
   @gml__NCNameList*                     uomLabels                      0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
    END OF INHERITED FROM gml__AbstractGeometryType */
/*  INHERITED FROM gml__AbstractGeometricPrimitiveType:
    END OF INHERITED FROM gml__AbstractGeometricPrimitiveType */
/*  INHERITED FROM gml__AbstractSurfaceType:
    END OF INHERITED FROM gml__AbstractSurfaceType */
/// <PRE><BLOCKQUOTE>
///   The property baseSurface references or contains the base surface. The property baseSurface either references the base surface via the XLink-attributes or contains the surface element. A surface element is any element which is substitutable for gml:AbstractSurface. The base surface has positive orientation.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":baseSurface.
    gml__SurfacePropertyType*            baseSurface                    1;	///< Required element.
/// Attribute "orientation" of XSD type "http://www.opengis.net/gml/3.2":SignType.
   @enum gml__SignType                   orientation                    0 = gml__SignType___x002b;	///< Default attribute value="+".
};

/// @brief "http://www.opengis.net/gml/3.2":SolidType is a complexType with complexContent extension of XSD type "http://www.opengis.net/gml/3.2":AbstractSolidType.
///
/// class gml__SolidType operations:
/// - gml__SolidType* soap_new_gml__SolidType(soap*) allocate and default initialize
/// - gml__SolidType* soap_new_gml__SolidType(soap*, int num) allocate array and default initialize values
/// - gml__SolidType* soap_new_req_gml__SolidType(soap*, ...) allocate, set required members
/// - gml__SolidType* soap_new_set_gml__SolidType(soap*, ...) allocate, set all public members
/// - gml__SolidType::soap_default(soap*) default initialize members
/// - int soap_read_gml__SolidType(soap*, gml__SolidType*) deserialize from a stream
/// - int soap_write_gml__SolidType(soap*, gml__SolidType*) serialize to a stream
/// - gml__SolidType* gml__SolidType::soap_dup(soap*) returns deep copy of gml__SolidType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__SolidType::soap_del() deep deletes gml__SolidType data members, use only after gml__SolidType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__SolidType : public gml__AbstractSolidType
{ public:
/*  INHERITED FROM gml__AbstractGMLType:
//  BEGIN GROUP <xs:group name="StandardObjectProperties">
/// Vector of gml__MetaDataPropertyType* element refs of length 0..unbounded.
    std::vector<gml__MetaDataPropertyType*> metaDataProperty               0;
/// <PRE><BLOCKQUOTE>
///   The value of this property is a text description of the object. gml:description uses gml:StringOrRefType as its content model, so it may contain a simple text string content, or carry a reference to an external description. The use of gml:description to reference an external description has been deprecated and replaced by the gml:descriptionReference property.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":description.
    gml__StringOrRefType*                description                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The value of this property is a remote text description of the object. The xlink:href attribute of the gml:descriptionReference property references the external description.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":descriptionReference.
    gml__ReferenceType*                  descriptionReference           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Often, a special identifier is assigned to an object by the maintaining authority with the intention that it is used in references to the object For such cases, the codeSpace shall be provided. That identifier is usually unique either globally or within an application domain. gml:identifier is a pre-defined property for such identifiers.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":identifier.
    gml__CodeWithAuthorityType*          identifier                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The gml:name property provides a label or identifier for the object, commonly a descriptive name. An object may have several names, typically assigned by different authorities. gml:name uses the gml:CodeType content model. The authority for a name is indicated by the value of its (optional) codeSpace attribute. The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace. In common usage there will be one name per authority, so a processing application may select the name from its preferred codeSpace.
/// </BLOCKQUOTE></PRE>
/// Vector of gml__CodeType* element refs of length 0..unbounded.
    std::vector<gml__CodeType*         > name                           0;
//  END OF GROUP
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":id.
/// <PRE><BLOCKQUOTE>
///   The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.
/// </BLOCKQUOTE></PRE>
   @xsd__ID*                             gml__id                        0;	///< Optional attribute.
    END OF INHERITED FROM gml__AbstractGMLType */
/*  INHERITED FROM gml__AbstractGeometryType:
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":SRSReferenceGroup">.
/// Attribute "srsName" of XSD type xs:anyURI.
   @xsd__anyURI*                         srsName                        0;	///< Optional attribute.
/// Attribute "srsDimension" of XSD type xs:positiveInteger.
   @xsd__positiveInteger*                srsDimension                   0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":SRSInformationGroup">.
/// Attribute "axisLabels" of XSD type "http://www.opengis.net/gml/3.2":NCNameList.
   @gml__NCNameList*                     axisLabels                     0;	///< Optional attribute.
/// Attribute "uomLabels" of XSD type "http://www.opengis.net/gml/3.2":NCNameList.
   @gml__NCNameList*                     uomLabels                      0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
    END OF INHERITED FROM gml__AbstractGeometryType */
/*  INHERITED FROM gml__AbstractGeometricPrimitiveType:
    END OF INHERITED FROM gml__AbstractGeometricPrimitiveType */
/*  INHERITED FROM gml__AbstractSolidType:
    END OF INHERITED FROM gml__AbstractSolidType */
/// Element "exterior" of XSD type "http://www.opengis.net/gml/3.2":ShellPropertyType.
    gml__ShellPropertyType*              exterior                       0;	///< Optional element.
/// Vector of gml__ShellPropertyType* of length 0..unbounded.
    std::vector<gml__ShellPropertyType*> interior                       0;
};

/// @brief "http://www.opengis.net/gml/3.2":ShellType is a complexType with complexContent extension of XSD type "http://www.opengis.net/gml/3.2":AbstractSurfaceType.
///
/// class gml__ShellType operations:
/// - gml__ShellType* soap_new_gml__ShellType(soap*) allocate and default initialize
/// - gml__ShellType* soap_new_gml__ShellType(soap*, int num) allocate array and default initialize values
/// - gml__ShellType* soap_new_req_gml__ShellType(soap*, ...) allocate, set required members
/// - gml__ShellType* soap_new_set_gml__ShellType(soap*, ...) allocate, set all public members
/// - gml__ShellType::soap_default(soap*) default initialize members
/// - int soap_read_gml__ShellType(soap*, gml__ShellType*) deserialize from a stream
/// - int soap_write_gml__ShellType(soap*, gml__ShellType*) serialize to a stream
/// - gml__ShellType* gml__ShellType::soap_dup(soap*) returns deep copy of gml__ShellType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__ShellType::soap_del() deep deletes gml__ShellType data members, use only after gml__ShellType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__ShellType : public gml__AbstractSurfaceType
{ public:
/*  INHERITED FROM gml__AbstractGMLType:
//  BEGIN GROUP <xs:group name="StandardObjectProperties">
/// Vector of gml__MetaDataPropertyType* element refs of length 0..unbounded.
    std::vector<gml__MetaDataPropertyType*> metaDataProperty               0;
/// <PRE><BLOCKQUOTE>
///   The value of this property is a text description of the object. gml:description uses gml:StringOrRefType as its content model, so it may contain a simple text string content, or carry a reference to an external description. The use of gml:description to reference an external description has been deprecated and replaced by the gml:descriptionReference property.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":description.
    gml__StringOrRefType*                description                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The value of this property is a remote text description of the object. The xlink:href attribute of the gml:descriptionReference property references the external description.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":descriptionReference.
    gml__ReferenceType*                  descriptionReference           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Often, a special identifier is assigned to an object by the maintaining authority with the intention that it is used in references to the object For such cases, the codeSpace shall be provided. That identifier is usually unique either globally or within an application domain. gml:identifier is a pre-defined property for such identifiers.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":identifier.
    gml__CodeWithAuthorityType*          identifier                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The gml:name property provides a label or identifier for the object, commonly a descriptive name. An object may have several names, typically assigned by different authorities. gml:name uses the gml:CodeType content model. The authority for a name is indicated by the value of its (optional) codeSpace attribute. The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace. In common usage there will be one name per authority, so a processing application may select the name from its preferred codeSpace.
/// </BLOCKQUOTE></PRE>
/// Vector of gml__CodeType* element refs of length 0..unbounded.
    std::vector<gml__CodeType*         > name                           0;
//  END OF GROUP
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":id.
/// <PRE><BLOCKQUOTE>
///   The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.
/// </BLOCKQUOTE></PRE>
   @xsd__ID*                             gml__id                        0;	///< Optional attribute.
    END OF INHERITED FROM gml__AbstractGMLType */
/*  INHERITED FROM gml__AbstractGeometryType:
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":SRSReferenceGroup">.
/// Attribute "srsName" of XSD type xs:anyURI.
   @xsd__anyURI*                         srsName                        0;	///< Optional attribute.
/// Attribute "srsDimension" of XSD type xs:positiveInteger.
   @xsd__positiveInteger*                srsDimension                   0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":SRSInformationGroup">.
/// Attribute "axisLabels" of XSD type "http://www.opengis.net/gml/3.2":NCNameList.
   @gml__NCNameList*                     axisLabels                     0;	///< Optional attribute.
/// Attribute "uomLabels" of XSD type "http://www.opengis.net/gml/3.2":NCNameList.
   @gml__NCNameList*                     uomLabels                      0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
    END OF INHERITED FROM gml__AbstractGeometryType */
/*  INHERITED FROM gml__AbstractGeometricPrimitiveType:
    END OF INHERITED FROM gml__AbstractGeometricPrimitiveType */
/*  INHERITED FROM gml__AbstractSurfaceType:
    END OF INHERITED FROM gml__AbstractSurfaceType */
/// <PRE><BLOCKQUOTE>
///   This property element either references a surface via the XLink-attributes or contains the surface element. A surface element is any element, which is substitutable for gml:AbstractSurface.
/// </BLOCKQUOTE></PRE>
/// Vector of gml__SurfacePropertyType* element refs of length 1..unbounded.
    std::vector<gml__SurfacePropertyType*> surfaceMember                  1;
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":AggregationAttributeGroup">.
/// Attribute "aggregationType" of XSD type "http://www.opengis.net/gml/3.2":AggregationType.
   @enum gml__AggregationType*           aggregationType                0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.opengis.net/gml/3.2":PolygonType is a complexType with complexContent extension of XSD type "http://www.opengis.net/gml/3.2":AbstractSurfaceType.
///
/// class gml__PolygonType operations:
/// - gml__PolygonType* soap_new_gml__PolygonType(soap*) allocate and default initialize
/// - gml__PolygonType* soap_new_gml__PolygonType(soap*, int num) allocate array and default initialize values
/// - gml__PolygonType* soap_new_req_gml__PolygonType(soap*, ...) allocate, set required members
/// - gml__PolygonType* soap_new_set_gml__PolygonType(soap*, ...) allocate, set all public members
/// - gml__PolygonType::soap_default(soap*) default initialize members
/// - int soap_read_gml__PolygonType(soap*, gml__PolygonType*) deserialize from a stream
/// - int soap_write_gml__PolygonType(soap*, gml__PolygonType*) serialize to a stream
/// - gml__PolygonType* gml__PolygonType::soap_dup(soap*) returns deep copy of gml__PolygonType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__PolygonType::soap_del() deep deletes gml__PolygonType data members, use only after gml__PolygonType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__PolygonType : public gml__AbstractSurfaceType
{ public:
/*  INHERITED FROM gml__AbstractGMLType:
//  BEGIN GROUP <xs:group name="StandardObjectProperties">
/// Vector of gml__MetaDataPropertyType* element refs of length 0..unbounded.
    std::vector<gml__MetaDataPropertyType*> metaDataProperty               0;
/// <PRE><BLOCKQUOTE>
///   The value of this property is a text description of the object. gml:description uses gml:StringOrRefType as its content model, so it may contain a simple text string content, or carry a reference to an external description. The use of gml:description to reference an external description has been deprecated and replaced by the gml:descriptionReference property.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":description.
    gml__StringOrRefType*                description                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The value of this property is a remote text description of the object. The xlink:href attribute of the gml:descriptionReference property references the external description.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":descriptionReference.
    gml__ReferenceType*                  descriptionReference           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Often, a special identifier is assigned to an object by the maintaining authority with the intention that it is used in references to the object For such cases, the codeSpace shall be provided. That identifier is usually unique either globally or within an application domain. gml:identifier is a pre-defined property for such identifiers.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":identifier.
    gml__CodeWithAuthorityType*          identifier                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The gml:name property provides a label or identifier for the object, commonly a descriptive name. An object may have several names, typically assigned by different authorities. gml:name uses the gml:CodeType content model. The authority for a name is indicated by the value of its (optional) codeSpace attribute. The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace. In common usage there will be one name per authority, so a processing application may select the name from its preferred codeSpace.
/// </BLOCKQUOTE></PRE>
/// Vector of gml__CodeType* element refs of length 0..unbounded.
    std::vector<gml__CodeType*         > name                           0;
//  END OF GROUP
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":id.
/// <PRE><BLOCKQUOTE>
///   The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.
/// </BLOCKQUOTE></PRE>
   @xsd__ID*                             gml__id                        0;	///< Optional attribute.
    END OF INHERITED FROM gml__AbstractGMLType */
/*  INHERITED FROM gml__AbstractGeometryType:
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":SRSReferenceGroup">.
/// Attribute "srsName" of XSD type xs:anyURI.
   @xsd__anyURI*                         srsName                        0;	///< Optional attribute.
/// Attribute "srsDimension" of XSD type xs:positiveInteger.
   @xsd__positiveInteger*                srsDimension                   0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":SRSInformationGroup">.
/// Attribute "axisLabels" of XSD type "http://www.opengis.net/gml/3.2":NCNameList.
   @gml__NCNameList*                     axisLabels                     0;	///< Optional attribute.
/// Attribute "uomLabels" of XSD type "http://www.opengis.net/gml/3.2":NCNameList.
   @gml__NCNameList*                     uomLabels                      0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
    END OF INHERITED FROM gml__AbstractGeometryType */
/*  INHERITED FROM gml__AbstractGeometricPrimitiveType:
    END OF INHERITED FROM gml__AbstractGeometricPrimitiveType */
/*  INHERITED FROM gml__AbstractSurfaceType:
    END OF INHERITED FROM gml__AbstractSurfaceType */
/// <PRE><BLOCKQUOTE>
///   A boundary of a surface consists of a number of rings. In the normal 2D case, one of these rings is distinguished as being the exterior boundary. In a general manifold this is not always possible, in which case all boundaries shall be listed as interior boundaries, and the exterior will be empty.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":exterior.
    gml__AbstractRingPropertyType*       exterior                       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   A boundary of a surface consists of a number of rings. The "interior" rings separate the surface / surface patch from the area enclosed by the rings.
/// </BLOCKQUOTE></PRE>
/// Vector of gml__AbstractRingPropertyType* element refs of length 0..unbounded.
    std::vector<gml__AbstractRingPropertyType*> interior                       0;
};

/// @brief "http://www.opengis.net/gml/3.2":AbstractRingType is an abstract complexType with complexContent extension of XSD type "http://www.opengis.net/gml/3.2":AbstractCurveType.
///
/// class gml__AbstractRingType operations:
/// - gml__AbstractRingType* soap_new_gml__AbstractRingType(soap*) allocate and default initialize
/// - gml__AbstractRingType* soap_new_gml__AbstractRingType(soap*, int num) allocate array and default initialize values
/// - gml__AbstractRingType* soap_new_req_gml__AbstractRingType(soap*, ...) allocate, set required members
/// - gml__AbstractRingType* soap_new_set_gml__AbstractRingType(soap*, ...) allocate, set all public members
/// - gml__AbstractRingType::soap_default(soap*) default initialize members
/// - int soap_read_gml__AbstractRingType(soap*, gml__AbstractRingType*) deserialize from a stream
/// - int soap_write_gml__AbstractRingType(soap*, gml__AbstractRingType*) serialize to a stream
/// - gml__AbstractRingType* gml__AbstractRingType::soap_dup(soap*) returns deep copy of gml__AbstractRingType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__AbstractRingType::soap_del() deep deletes gml__AbstractRingType data members, use only after gml__AbstractRingType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__AbstractRingType : public gml__AbstractCurveType
{ public:
/*  INHERITED FROM gml__AbstractGMLType:
//  BEGIN GROUP <xs:group name="StandardObjectProperties">
/// Vector of gml__MetaDataPropertyType* element refs of length 0..unbounded.
    std::vector<gml__MetaDataPropertyType*> metaDataProperty               0;
/// <PRE><BLOCKQUOTE>
///   The value of this property is a text description of the object. gml:description uses gml:StringOrRefType as its content model, so it may contain a simple text string content, or carry a reference to an external description. The use of gml:description to reference an external description has been deprecated and replaced by the gml:descriptionReference property.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":description.
    gml__StringOrRefType*                description                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The value of this property is a remote text description of the object. The xlink:href attribute of the gml:descriptionReference property references the external description.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":descriptionReference.
    gml__ReferenceType*                  descriptionReference           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Often, a special identifier is assigned to an object by the maintaining authority with the intention that it is used in references to the object For such cases, the codeSpace shall be provided. That identifier is usually unique either globally or within an application domain. gml:identifier is a pre-defined property for such identifiers.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":identifier.
    gml__CodeWithAuthorityType*          identifier                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The gml:name property provides a label or identifier for the object, commonly a descriptive name. An object may have several names, typically assigned by different authorities. gml:name uses the gml:CodeType content model. The authority for a name is indicated by the value of its (optional) codeSpace attribute. The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace. In common usage there will be one name per authority, so a processing application may select the name from its preferred codeSpace.
/// </BLOCKQUOTE></PRE>
/// Vector of gml__CodeType* element refs of length 0..unbounded.
    std::vector<gml__CodeType*         > name                           0;
//  END OF GROUP
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":id.
/// <PRE><BLOCKQUOTE>
///   The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.
/// </BLOCKQUOTE></PRE>
   @xsd__ID*                             gml__id                        0;	///< Optional attribute.
    END OF INHERITED FROM gml__AbstractGMLType */
/*  INHERITED FROM gml__AbstractGeometryType:
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":SRSReferenceGroup">.
/// Attribute "srsName" of XSD type xs:anyURI.
   @xsd__anyURI*                         srsName                        0;	///< Optional attribute.
/// Attribute "srsDimension" of XSD type xs:positiveInteger.
   @xsd__positiveInteger*                srsDimension                   0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":SRSInformationGroup">.
/// Attribute "axisLabels" of XSD type "http://www.opengis.net/gml/3.2":NCNameList.
   @gml__NCNameList*                     axisLabels                     0;	///< Optional attribute.
/// Attribute "uomLabels" of XSD type "http://www.opengis.net/gml/3.2":NCNameList.
   @gml__NCNameList*                     uomLabels                      0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
    END OF INHERITED FROM gml__AbstractGeometryType */
/*  INHERITED FROM gml__AbstractGeometricPrimitiveType:
    END OF INHERITED FROM gml__AbstractGeometricPrimitiveType */
/*  INHERITED FROM gml__AbstractCurveType:
    END OF INHERITED FROM gml__AbstractCurveType */
};

/// @brief "http://www.opengis.net/gml/3.2":LineStringType is a complexType with complexContent extension of XSD type "http://www.opengis.net/gml/3.2":AbstractCurveType.
///
/// class gml__LineStringType operations:
/// - gml__LineStringType* soap_new_gml__LineStringType(soap*) allocate and default initialize
/// - gml__LineStringType* soap_new_gml__LineStringType(soap*, int num) allocate array and default initialize values
/// - gml__LineStringType* soap_new_req_gml__LineStringType(soap*, ...) allocate, set required members
/// - gml__LineStringType* soap_new_set_gml__LineStringType(soap*, ...) allocate, set all public members
/// - gml__LineStringType::soap_default(soap*) default initialize members
/// - int soap_read_gml__LineStringType(soap*, gml__LineStringType*) deserialize from a stream
/// - int soap_write_gml__LineStringType(soap*, gml__LineStringType*) serialize to a stream
/// - gml__LineStringType* gml__LineStringType::soap_dup(soap*) returns deep copy of gml__LineStringType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__LineStringType::soap_del() deep deletes gml__LineStringType data members, use only after gml__LineStringType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__LineStringType : public gml__AbstractCurveType
{ public:
/*  INHERITED FROM gml__AbstractGMLType:
//  BEGIN GROUP <xs:group name="StandardObjectProperties">
/// Vector of gml__MetaDataPropertyType* element refs of length 0..unbounded.
    std::vector<gml__MetaDataPropertyType*> metaDataProperty               0;
/// <PRE><BLOCKQUOTE>
///   The value of this property is a text description of the object. gml:description uses gml:StringOrRefType as its content model, so it may contain a simple text string content, or carry a reference to an external description. The use of gml:description to reference an external description has been deprecated and replaced by the gml:descriptionReference property.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":description.
    gml__StringOrRefType*                description                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The value of this property is a remote text description of the object. The xlink:href attribute of the gml:descriptionReference property references the external description.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":descriptionReference.
    gml__ReferenceType*                  descriptionReference           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Often, a special identifier is assigned to an object by the maintaining authority with the intention that it is used in references to the object For such cases, the codeSpace shall be provided. That identifier is usually unique either globally or within an application domain. gml:identifier is a pre-defined property for such identifiers.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":identifier.
    gml__CodeWithAuthorityType*          identifier                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The gml:name property provides a label or identifier for the object, commonly a descriptive name. An object may have several names, typically assigned by different authorities. gml:name uses the gml:CodeType content model. The authority for a name is indicated by the value of its (optional) codeSpace attribute. The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace. In common usage there will be one name per authority, so a processing application may select the name from its preferred codeSpace.
/// </BLOCKQUOTE></PRE>
/// Vector of gml__CodeType* element refs of length 0..unbounded.
    std::vector<gml__CodeType*         > name                           0;
//  END OF GROUP
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":id.
/// <PRE><BLOCKQUOTE>
///   The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.
/// </BLOCKQUOTE></PRE>
   @xsd__ID*                             gml__id                        0;	///< Optional attribute.
    END OF INHERITED FROM gml__AbstractGMLType */
/*  INHERITED FROM gml__AbstractGeometryType:
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":SRSReferenceGroup">.
/// Attribute "srsName" of XSD type xs:anyURI.
   @xsd__anyURI*                         srsName                        0;	///< Optional attribute.
/// Attribute "srsDimension" of XSD type xs:positiveInteger.
   @xsd__positiveInteger*                srsDimension                   0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":SRSInformationGroup">.
/// Attribute "axisLabels" of XSD type "http://www.opengis.net/gml/3.2":NCNameList.
   @gml__NCNameList*                     axisLabels                     0;	///< Optional attribute.
/// Attribute "uomLabels" of XSD type "http://www.opengis.net/gml/3.2":NCNameList.
   @gml__NCNameList*                     uomLabels                      0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
    END OF INHERITED FROM gml__AbstractGeometryType */
/*  INHERITED FROM gml__AbstractGeometricPrimitiveType:
    END OF INHERITED FROM gml__AbstractGeometricPrimitiveType */
/*  INHERITED FROM gml__AbstractCurveType:
    END OF INHERITED FROM gml__AbstractCurveType */
//  BEGIN CHOICE <xs:choice>
   $int                                  __union_LineStringType        ;	///< Union _gml__union_LineStringType selector: set to SOAP_UNION__gml__union_LineStringType_<fieldname>
    union _gml__union_LineStringType
    {
//  BEGIN CHOICE <xs:choice minOccurs="2" maxOccurs="unbounded">
    struct ___gml__union_LineStringType_
    {
   $int                                  __size_LineStringType_         2;
    class __gml__union_LineStringType_
    {
   $int                                  __union_LineStringType_        2;	///< Union _gml__union_LineStringType_ selector: set to SOAP_UNION__gml__union_LineStringType__<fieldname>
    union _gml__union_LineStringType_
    {
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":pos.
    gml__DirectPositionType*             pos                            nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   This property element either references a point via the XLink-attributes or contains the point element. pointProperty is the predefined property which may be used by GML Application Schemas whenever a GML feature has a property with a value that is substitutable for Point.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":pointProperty.
    gml__PointPropertyType*              pointProperty                  nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":pointRep.
    gml__PointPropertyType*              pointRep                       nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_LineStringType_         ;
    }                                   *__union_LineStringType_       ;
    }                                    __union_LineStringType_       ;
//  END OF CHOICE
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":posList.
    gml__DirectPositionListType*         posList                        nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":coordinates.
    gml__CoordinatesType*                coordinates                    nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_LineStringType          ;
//  END OF CHOICE
};

/// @brief "http://www.opengis.net/gml/3.2":BaseUnitType is a complexType with complexContent extension of XSD type "http://www.opengis.net/gml/3.2":UnitDefinitionType.
///
/// class gml__BaseUnitType operations:
/// - gml__BaseUnitType* soap_new_gml__BaseUnitType(soap*) allocate and default initialize
/// - gml__BaseUnitType* soap_new_gml__BaseUnitType(soap*, int num) allocate array and default initialize values
/// - gml__BaseUnitType* soap_new_req_gml__BaseUnitType(soap*, ...) allocate, set required members
/// - gml__BaseUnitType* soap_new_set_gml__BaseUnitType(soap*, ...) allocate, set all public members
/// - gml__BaseUnitType::soap_default(soap*) default initialize members
/// - int soap_read_gml__BaseUnitType(soap*, gml__BaseUnitType*) deserialize from a stream
/// - int soap_write_gml__BaseUnitType(soap*, gml__BaseUnitType*) serialize to a stream
/// - gml__BaseUnitType* gml__BaseUnitType::soap_dup(soap*) returns deep copy of gml__BaseUnitType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__BaseUnitType::soap_del() deep deletes gml__BaseUnitType data members, use only after gml__BaseUnitType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__BaseUnitType : public gml__UnitDefinitionType
{ public:
/*  INHERITED FROM gml__DefinitionBaseType:
    END OF INHERITED FROM gml__DefinitionBaseType */
/*  INHERITED FROM gml__DefinitionType:
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":remarks.
    std::string*                         remarks                        0;	///< Optional element.
    END OF INHERITED FROM gml__DefinitionType */
/*  INHERITED FROM gml__UnitDefinitionType:
/// <PRE><BLOCKQUOTE>
///   The gml:quantityType property indicates the phenomenon to which the units apply. This element contains an informal description of the phenomenon or type of physical quantity that is measured or observed. When the physical quantity is the result of an observation or measurement, this term is known as observable type or measurand.
///   The use of gml:quantityType for references to remote values is deprecated.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":quantityType.
    gml__StringOrRefType*                quantityType                   0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The gml:quantityTypeReference property indicates the phenomenon to which the units apply. The content is a reference to a remote value.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":quantityTypeReference.
    gml__ReferenceType*                  quantityTypeReference          0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The catalogSymbol is the preferred lexical symbol used for this unit of measure.
///   The codeSpace attribute in gml:CodeType identifies a namespace for the catalog symbol value, and might reference the external catalog. The string value in gml:CodeType contains the value of a symbol that should be unique within this catalog namespace. This symbol often appears explicitly in the catalog, but it could be a combination of symbols using a specified algebra of units.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":catalogSymbol.
    gml__CodeType*                       catalogSymbol                  0;	///< Optional element.
    END OF INHERITED FROM gml__UnitDefinitionType */
/// Element "unitsSystem" of XSD type "http://www.opengis.net/gml/3.2":ReferenceType.
    gml__ReferenceType*                  unitsSystem                    1;	///< Required element.
};

/// @brief "http://www.opengis.net/gml/3.2":DerivedUnitType is a complexType with complexContent extension of XSD type "http://www.opengis.net/gml/3.2":UnitDefinitionType.
///
/// class gml__DerivedUnitType operations:
/// - gml__DerivedUnitType* soap_new_gml__DerivedUnitType(soap*) allocate and default initialize
/// - gml__DerivedUnitType* soap_new_gml__DerivedUnitType(soap*, int num) allocate array and default initialize values
/// - gml__DerivedUnitType* soap_new_req_gml__DerivedUnitType(soap*, ...) allocate, set required members
/// - gml__DerivedUnitType* soap_new_set_gml__DerivedUnitType(soap*, ...) allocate, set all public members
/// - gml__DerivedUnitType::soap_default(soap*) default initialize members
/// - int soap_read_gml__DerivedUnitType(soap*, gml__DerivedUnitType*) deserialize from a stream
/// - int soap_write_gml__DerivedUnitType(soap*, gml__DerivedUnitType*) serialize to a stream
/// - gml__DerivedUnitType* gml__DerivedUnitType::soap_dup(soap*) returns deep copy of gml__DerivedUnitType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__DerivedUnitType::soap_del() deep deletes gml__DerivedUnitType data members, use only after gml__DerivedUnitType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__DerivedUnitType : public gml__UnitDefinitionType
{ public:
/*  INHERITED FROM gml__DefinitionBaseType:
    END OF INHERITED FROM gml__DefinitionBaseType */
/*  INHERITED FROM gml__DefinitionType:
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":remarks.
    std::string*                         remarks                        0;	///< Optional element.
    END OF INHERITED FROM gml__DefinitionType */
/*  INHERITED FROM gml__UnitDefinitionType:
/// <PRE><BLOCKQUOTE>
///   The gml:quantityType property indicates the phenomenon to which the units apply. This element contains an informal description of the phenomenon or type of physical quantity that is measured or observed. When the physical quantity is the result of an observation or measurement, this term is known as observable type or measurand.
///   The use of gml:quantityType for references to remote values is deprecated.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":quantityType.
    gml__StringOrRefType*                quantityType                   0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The gml:quantityTypeReference property indicates the phenomenon to which the units apply. The content is a reference to a remote value.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":quantityTypeReference.
    gml__ReferenceType*                  quantityTypeReference          0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The catalogSymbol is the preferred lexical symbol used for this unit of measure.
///   The codeSpace attribute in gml:CodeType identifies a namespace for the catalog symbol value, and might reference the external catalog. The string value in gml:CodeType contains the value of a symbol that should be unique within this catalog namespace. This symbol often appears explicitly in the catalog, but it could be a combination of symbols using a specified algebra of units.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":catalogSymbol.
    gml__CodeType*                       catalogSymbol                  0;	///< Optional element.
    END OF INHERITED FROM gml__UnitDefinitionType */
/// <PRE><BLOCKQUOTE>
///   A set of gml:derivationUnitTerm elements describes a derived unit of measure. Each element carries an integer exponent. The terms are combined by raising each referenced unit to the power of its exponent and forming the product.
///   This unit term references another unit of measure (uom) and provides an integer exponent applied to that unit in defining the compound unit. The exponent may be positive or negative, but not zero.
/// </BLOCKQUOTE></PRE>
/// Vector of gml__DerivationUnitTermType* element refs of length 1..unbounded.
    std::vector<gml__DerivationUnitTermType*> derivationUnitTerm             1;
};

/// @brief "http://www.opengis.net/gml/3.2":ConventionalUnitType is a complexType with complexContent extension of XSD type "http://www.opengis.net/gml/3.2":UnitDefinitionType.
///
/// class gml__ConventionalUnitType operations:
/// - gml__ConventionalUnitType* soap_new_gml__ConventionalUnitType(soap*) allocate and default initialize
/// - gml__ConventionalUnitType* soap_new_gml__ConventionalUnitType(soap*, int num) allocate array and default initialize values
/// - gml__ConventionalUnitType* soap_new_req_gml__ConventionalUnitType(soap*, ...) allocate, set required members
/// - gml__ConventionalUnitType* soap_new_set_gml__ConventionalUnitType(soap*, ...) allocate, set all public members
/// - gml__ConventionalUnitType::soap_default(soap*) default initialize members
/// - int soap_read_gml__ConventionalUnitType(soap*, gml__ConventionalUnitType*) deserialize from a stream
/// - int soap_write_gml__ConventionalUnitType(soap*, gml__ConventionalUnitType*) serialize to a stream
/// - gml__ConventionalUnitType* gml__ConventionalUnitType::soap_dup(soap*) returns deep copy of gml__ConventionalUnitType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__ConventionalUnitType::soap_del() deep deletes gml__ConventionalUnitType data members, use only after gml__ConventionalUnitType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__ConventionalUnitType : public gml__UnitDefinitionType
{ public:
/*  INHERITED FROM gml__DefinitionBaseType:
    END OF INHERITED FROM gml__DefinitionBaseType */
/*  INHERITED FROM gml__DefinitionType:
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":remarks.
    std::string*                         remarks                        0;	///< Optional element.
    END OF INHERITED FROM gml__DefinitionType */
/*  INHERITED FROM gml__UnitDefinitionType:
/// <PRE><BLOCKQUOTE>
///   The gml:quantityType property indicates the phenomenon to which the units apply. This element contains an informal description of the phenomenon or type of physical quantity that is measured or observed. When the physical quantity is the result of an observation or measurement, this term is known as observable type or measurand.
///   The use of gml:quantityType for references to remote values is deprecated.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":quantityType.
    gml__StringOrRefType*                quantityType                   0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The gml:quantityTypeReference property indicates the phenomenon to which the units apply. The content is a reference to a remote value.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":quantityTypeReference.
    gml__ReferenceType*                  quantityTypeReference          0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The catalogSymbol is the preferred lexical symbol used for this unit of measure.
///   The codeSpace attribute in gml:CodeType identifies a namespace for the catalog symbol value, and might reference the external catalog. The string value in gml:CodeType contains the value of a symbol that should be unique within this catalog namespace. This symbol often appears explicitly in the catalog, but it could be a combination of symbols using a specified algebra of units.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":catalogSymbol.
    gml__CodeType*                       catalogSymbol                  0;	///< Optional element.
    END OF INHERITED FROM gml__UnitDefinitionType */
//  BEGIN CHOICE <xs:choice>
   $int                                  __union_ConventionalUnitType  ;	///< Union _gml__union_ConventionalUnitType selector: set to SOAP_UNION__gml__union_ConventionalUnitType_<fieldname>
    union _gml__union_ConventionalUnitType
    {
/// <PRE><BLOCKQUOTE>
///   The elements gml:conversionToPreferredUnit and gml:roughConversionToPreferredUnit represent parameters used to convert conventional units to preferred units for this physical quantity type. A preferred unit is either a Base Unit or a Derived Unit that is selected for all values of one physical quantity type.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":conversionToPreferredUnit.
    gml__ConversionToPreferredUnitType*  conversionToPreferredUnit      nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   The elements gml:conversionToPreferredUnit and gml:roughConversionToPreferredUnit represent parameters used to convert conventional units to preferred units for this physical quantity type. A preferred unit is either a Base Unit or a Derived Unit that is selected for all values of one physical quantity type.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":roughConversionToPreferredUnit.
    gml__ConversionToPreferredUnitType*  roughConversionToPreferredUnit nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_ConventionalUnitType    ;
//  END OF CHOICE
/// <PRE><BLOCKQUOTE>
///   A set of gml:derivationUnitTerm elements describes a derived unit of measure. Each element carries an integer exponent. The terms are combined by raising each referenced unit to the power of its exponent and forming the product.
///   This unit term references another unit of measure (uom) and provides an integer exponent applied to that unit in defining the compound unit. The exponent may be positive or negative, but not zero.
/// </BLOCKQUOTE></PRE>
/// Vector of gml__DerivationUnitTermType* element refs of length 0..unbounded.
    std::vector<gml__DerivationUnitTermType*> derivationUnitTerm             0;
};

/// @brief "http://www.opengis.net/gml/3.2":TimeInstantType is a complexType with complexContent extension of XSD type "http://www.opengis.net/gml/3.2":AbstractTimeGeometricPrimitiveType.
///
/// class gml__TimeInstantType operations:
/// - gml__TimeInstantType* soap_new_gml__TimeInstantType(soap*) allocate and default initialize
/// - gml__TimeInstantType* soap_new_gml__TimeInstantType(soap*, int num) allocate array and default initialize values
/// - gml__TimeInstantType* soap_new_req_gml__TimeInstantType(soap*, ...) allocate, set required members
/// - gml__TimeInstantType* soap_new_set_gml__TimeInstantType(soap*, ...) allocate, set all public members
/// - gml__TimeInstantType::soap_default(soap*) default initialize members
/// - int soap_read_gml__TimeInstantType(soap*, gml__TimeInstantType*) deserialize from a stream
/// - int soap_write_gml__TimeInstantType(soap*, gml__TimeInstantType*) serialize to a stream
/// - gml__TimeInstantType* gml__TimeInstantType::soap_dup(soap*) returns deep copy of gml__TimeInstantType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__TimeInstantType::soap_del() deep deletes gml__TimeInstantType data members, use only after gml__TimeInstantType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__TimeInstantType : public gml__AbstractTimeGeometricPrimitiveType
{ public:
/*  INHERITED FROM gml__AbstractGMLType:
//  BEGIN GROUP <xs:group name="StandardObjectProperties">
/// Vector of gml__MetaDataPropertyType* element refs of length 0..unbounded.
    std::vector<gml__MetaDataPropertyType*> metaDataProperty               0;
/// <PRE><BLOCKQUOTE>
///   The value of this property is a text description of the object. gml:description uses gml:StringOrRefType as its content model, so it may contain a simple text string content, or carry a reference to an external description. The use of gml:description to reference an external description has been deprecated and replaced by the gml:descriptionReference property.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":description.
    gml__StringOrRefType*                description                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The value of this property is a remote text description of the object. The xlink:href attribute of the gml:descriptionReference property references the external description.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":descriptionReference.
    gml__ReferenceType*                  descriptionReference           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Often, a special identifier is assigned to an object by the maintaining authority with the intention that it is used in references to the object For such cases, the codeSpace shall be provided. That identifier is usually unique either globally or within an application domain. gml:identifier is a pre-defined property for such identifiers.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":identifier.
    gml__CodeWithAuthorityType*          identifier                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The gml:name property provides a label or identifier for the object, commonly a descriptive name. An object may have several names, typically assigned by different authorities. gml:name uses the gml:CodeType content model. The authority for a name is indicated by the value of its (optional) codeSpace attribute. The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace. In common usage there will be one name per authority, so a processing application may select the name from its preferred codeSpace.
/// </BLOCKQUOTE></PRE>
/// Vector of gml__CodeType* element refs of length 0..unbounded.
    std::vector<gml__CodeType*         > name                           0;
//  END OF GROUP
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":id.
/// <PRE><BLOCKQUOTE>
///   The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.
/// </BLOCKQUOTE></PRE>
   @xsd__ID*                             gml__id                        0;	///< Optional attribute.
    END OF INHERITED FROM gml__AbstractGMLType */
/*  INHERITED FROM gml__AbstractTimeObjectType:
    END OF INHERITED FROM gml__AbstractTimeObjectType */
/*  INHERITED FROM gml__AbstractTimePrimitiveType:
/// Vector of gml__RelatedTimeType* of length 0..unbounded.
    std::vector<gml__RelatedTimeType*  > relatedTime                    0;
    END OF INHERITED FROM gml__AbstractTimePrimitiveType */
/*  INHERITED FROM gml__AbstractTimeGeometricPrimitiveType:
/// Attribute "frame" of XSD type xs:anyURI.
   @xsd__anyURI                          frame                          0;	///< Default attribute value="#ISO-8601".
    END OF INHERITED FROM gml__AbstractTimeGeometricPrimitiveType */
/// <PRE><BLOCKQUOTE>
///   This element is used directly as a property of gml:TimeInstant (see 15.2.2.3), and may also be used in application schemas.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":timePosition.
    gml__TimePositionType*               timePosition                   1;	///< Required element.
};

/// @brief "http://www.opengis.net/gml/3.2":TimePeriodType is a complexType with complexContent extension of XSD type "http://www.opengis.net/gml/3.2":AbstractTimeGeometricPrimitiveType.
///
/// class gml__TimePeriodType operations:
/// - gml__TimePeriodType* soap_new_gml__TimePeriodType(soap*) allocate and default initialize
/// - gml__TimePeriodType* soap_new_gml__TimePeriodType(soap*, int num) allocate array and default initialize values
/// - gml__TimePeriodType* soap_new_req_gml__TimePeriodType(soap*, ...) allocate, set required members
/// - gml__TimePeriodType* soap_new_set_gml__TimePeriodType(soap*, ...) allocate, set all public members
/// - gml__TimePeriodType::soap_default(soap*) default initialize members
/// - int soap_read_gml__TimePeriodType(soap*, gml__TimePeriodType*) deserialize from a stream
/// - int soap_write_gml__TimePeriodType(soap*, gml__TimePeriodType*) serialize to a stream
/// - gml__TimePeriodType* gml__TimePeriodType::soap_dup(soap*) returns deep copy of gml__TimePeriodType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__TimePeriodType::soap_del() deep deletes gml__TimePeriodType data members, use only after gml__TimePeriodType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__TimePeriodType : public gml__AbstractTimeGeometricPrimitiveType
{ public:
/*  INHERITED FROM gml__AbstractGMLType:
//  BEGIN GROUP <xs:group name="StandardObjectProperties">
/// Vector of gml__MetaDataPropertyType* element refs of length 0..unbounded.
    std::vector<gml__MetaDataPropertyType*> metaDataProperty               0;
/// <PRE><BLOCKQUOTE>
///   The value of this property is a text description of the object. gml:description uses gml:StringOrRefType as its content model, so it may contain a simple text string content, or carry a reference to an external description. The use of gml:description to reference an external description has been deprecated and replaced by the gml:descriptionReference property.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":description.
    gml__StringOrRefType*                description                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The value of this property is a remote text description of the object. The xlink:href attribute of the gml:descriptionReference property references the external description.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":descriptionReference.
    gml__ReferenceType*                  descriptionReference           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Often, a special identifier is assigned to an object by the maintaining authority with the intention that it is used in references to the object For such cases, the codeSpace shall be provided. That identifier is usually unique either globally or within an application domain. gml:identifier is a pre-defined property for such identifiers.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":identifier.
    gml__CodeWithAuthorityType*          identifier                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The gml:name property provides a label or identifier for the object, commonly a descriptive name. An object may have several names, typically assigned by different authorities. gml:name uses the gml:CodeType content model. The authority for a name is indicated by the value of its (optional) codeSpace attribute. The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace. In common usage there will be one name per authority, so a processing application may select the name from its preferred codeSpace.
/// </BLOCKQUOTE></PRE>
/// Vector of gml__CodeType* element refs of length 0..unbounded.
    std::vector<gml__CodeType*         > name                           0;
//  END OF GROUP
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":id.
/// <PRE><BLOCKQUOTE>
///   The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.
/// </BLOCKQUOTE></PRE>
   @xsd__ID*                             gml__id                        0;	///< Optional attribute.
    END OF INHERITED FROM gml__AbstractGMLType */
/*  INHERITED FROM gml__AbstractTimeObjectType:
    END OF INHERITED FROM gml__AbstractTimeObjectType */
/*  INHERITED FROM gml__AbstractTimePrimitiveType:
/// Vector of gml__RelatedTimeType* of length 0..unbounded.
    std::vector<gml__RelatedTimeType*  > relatedTime                    0;
    END OF INHERITED FROM gml__AbstractTimePrimitiveType */
/*  INHERITED FROM gml__AbstractTimeGeometricPrimitiveType:
/// Attribute "frame" of XSD type xs:anyURI.
   @xsd__anyURI                          frame                          0;	///< Default attribute value="#ISO-8601".
    END OF INHERITED FROM gml__AbstractTimeGeometricPrimitiveType */
//  BEGIN CHOICE <xs:choice>
   $int                                  __union_TimePeriodType        ;	///< Union _gml__union_TimePeriodType selector: set to SOAP_UNION__gml__union_TimePeriodType_<fieldname>
    union _gml__union_TimePeriodType
    {
/// Element "beginPosition" of XSD type "http://www.opengis.net/gml/3.2":TimePositionType.
    gml__TimePositionType*               beginPosition                  nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "begin" of XSD type "http://www.opengis.net/gml/3.2":TimeInstantPropertyType.
    gml__TimeInstantPropertyType*        begin                          nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_TimePeriodType          ;
//  END OF CHOICE
//  BEGIN CHOICE <xs:choice>
   $int                                  __union_TimePeriodType_       ;	///< Union _gml__union_TimePeriodType_ selector: set to SOAP_UNION__gml__union_TimePeriodType__<fieldname>
    union _gml__union_TimePeriodType_
    {
/// Element "endPosition" of XSD type "http://www.opengis.net/gml/3.2":TimePositionType.
    gml__TimePositionType*               endPosition                    nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "end" of XSD type "http://www.opengis.net/gml/3.2":TimeInstantPropertyType.
    gml__TimeInstantPropertyType*        end                            nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_TimePeriodType_         ;
//  END OF CHOICE
//  BEGIN GROUP <xs:group name="timeLength" minOccurs="0">
/// <PRE><BLOCKQUOTE>
///   The length of a time period.
/// </BLOCKQUOTE></PRE>
//  BEGIN CHOICE <xs:choice minOccurs="0">
   $int                                  __union_TimePeriodType__       0;	///< Union _gml__union_TimePeriodType__ selector: set to SOAP_UNION__gml__union_TimePeriodType___<fieldname> or 0 to omit
    union _gml__union_TimePeriodType__
    {
/// <PRE><BLOCKQUOTE>
///   gml:duration conforms to the ISO 8601 syntax for temporal length as implemented by the XML Schema duration type.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":duration.
    xsd__duration*                       duration                       nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   gml:timeInterval conforms to ISO 11404 which is based on floating point values for temporal length.
///   ISO 11404 syntax specifies the use of a positiveInteger together with appropriate values for radix and factor. The resolution of the time interval is to one radix ^(-factor) of the specified time unit.
///   The value of the unit is either selected from the units for time intervals from ISO 31-1:1992, or is another suitable unit. The encoding is defined for GML in gml:TimeUnitType. The second component of this union type provides a method for indicating time units other than the six standard units given in the enumeration.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":timeInterval.
    gml__TimeIntervalLengthType*         timeInterval                   nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_TimePeriodType__        ;
//  END OF CHOICE
//  END OF GROUP
};

/// @brief "http://www.opengis.net/gml/3.2":CoordinateSystemAxisType is a complexType with complexContent extension of XSD type "http://www.opengis.net/gml/3.2":IdentifiedObjectType.
///
/// class gml__CoordinateSystemAxisType operations:
/// - gml__CoordinateSystemAxisType* soap_new_gml__CoordinateSystemAxisType(soap*) allocate and default initialize
/// - gml__CoordinateSystemAxisType* soap_new_gml__CoordinateSystemAxisType(soap*, int num) allocate array and default initialize values
/// - gml__CoordinateSystemAxisType* soap_new_req_gml__CoordinateSystemAxisType(soap*, ...) allocate, set required members
/// - gml__CoordinateSystemAxisType* soap_new_set_gml__CoordinateSystemAxisType(soap*, ...) allocate, set all public members
/// - gml__CoordinateSystemAxisType::soap_default(soap*) default initialize members
/// - int soap_read_gml__CoordinateSystemAxisType(soap*, gml__CoordinateSystemAxisType*) deserialize from a stream
/// - int soap_write_gml__CoordinateSystemAxisType(soap*, gml__CoordinateSystemAxisType*) serialize to a stream
/// - gml__CoordinateSystemAxisType* gml__CoordinateSystemAxisType::soap_dup(soap*) returns deep copy of gml__CoordinateSystemAxisType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__CoordinateSystemAxisType::soap_del() deep deletes gml__CoordinateSystemAxisType data members, use only after gml__CoordinateSystemAxisType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__CoordinateSystemAxisType : public gml__IdentifiedObjectType
{ public:
/*  INHERITED FROM gml__DefinitionBaseType:
    END OF INHERITED FROM gml__DefinitionBaseType */
/*  INHERITED FROM gml__DefinitionType:
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":remarks.
    std::string*                         remarks                        0;	///< Optional element.
    END OF INHERITED FROM gml__DefinitionType */
/*  INHERITED FROM gml__IdentifiedObjectType:
    END OF INHERITED FROM gml__IdentifiedObjectType */
/// <PRE><BLOCKQUOTE>
///   gml:axisAbbrev is the abbreviation used for this coordinate system axis; this abbreviation is also used to identify the coordinates in the coordinate tuple. The codeSpace attribute may reference a source of more information on a set of standardized abbreviations, or on this abbreviation.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":axisAbbrev.
    gml__CodeType*                       axisAbbrev                     1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   gml:axisDirection is the direction of this coordinate system axis (or in the case of Cartesian projected coordinates, the direction of this coordinate system axis at the origin).
///   Within any set of coordinate system axes, only one of each pair of terms may be used. For earth-fixed CRSs, this direction is often approximate and intended to provide a human interpretable meaning to the axis. When a geodetic datum is used, the precise directions of the axes may therefore vary slightly from this approximate direction.
///   The codeSpace attribute shall reference a source of information specifying the values and meanings of all the allowed string values for this property.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":axisDirection.
    gml__CodeWithAuthorityType*          axisDirection                  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The gml:minimumValue and gml:maximumValue properties allow the specification of minimum and maximum value normally allowed for this axis, in the unit of measure for the axis. For a continuous angular axis such as longitude, the values wrap-around at this value. Also, values beyond this minimum/maximum can be used for specified purposes, such as in a bounding box. A value of minus infinity shall be allowed for the gml:minimumValue element, a value of plus infiniy for the gml:maximumValue element. If these elements are omitted, the value is unspecified.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":minimumValue.
    double*                              minimumValue                   0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The gml:minimumValue and gml:maximumValue properties allow the specification of minimum and maximum value normally allowed for this axis, in the unit of measure for the axis. For a continuous angular axis such as longitude, the values wrap-around at this value. Also, values beyond this minimum/maximum can be used for specified purposes, such as in a bounding box. A value of minus infinity shall be allowed for the gml:minimumValue element, a value of plus infiniy for the gml:maximumValue element. If these elements are omitted, the value is unspecified.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":maximumValue.
    double*                              maximumValue                   0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   gml:rangeMeaning describes the meaning of axis value range specified by gml:minimumValue and gml:maximumValue. This element shall be omitted when both gml:minimumValue and gml:maximumValue are omitted. This element should be included when gml:minimumValue and/or gml:maximumValue are included. If this element is omitted when the gml:minimumValue and/or gml:maximumValue are included, the meaning is unspecified. The codeSpace attribute shall reference a source of information specifying the values and meanings of all the allowed string values for this property.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":rangeMeaning.
    gml__CodeWithAuthorityType*          rangeMeaning                   0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The uom attribute provides an identifier of the unit of measure used for this coordinate system axis. The value of this coordinate in a coordinate tuple shall be recorded using this unit of measure, whenever those coordinates use a coordinate reference system that uses a coordinate system that uses this axis.
/// </BLOCKQUOTE></PRE>
/// Attribute "uom" of XSD type "http://www.opengis.net/gml/3.2":UomIdentifier.
   @gml__UomIdentifier                   uom                            1;	///< Required attribute.
};

/// @brief "http://www.opengis.net/gml/3.2":AbstractCoordinateSystemType is an abstract complexType with complexContent extension of XSD type "http://www.opengis.net/gml/3.2":IdentifiedObjectType.
///
/// class gml__AbstractCoordinateSystemType operations:
/// - gml__AbstractCoordinateSystemType* soap_new_gml__AbstractCoordinateSystemType(soap*) allocate and default initialize
/// - gml__AbstractCoordinateSystemType* soap_new_gml__AbstractCoordinateSystemType(soap*, int num) allocate array and default initialize values
/// - gml__AbstractCoordinateSystemType* soap_new_req_gml__AbstractCoordinateSystemType(soap*, ...) allocate, set required members
/// - gml__AbstractCoordinateSystemType* soap_new_set_gml__AbstractCoordinateSystemType(soap*, ...) allocate, set all public members
/// - gml__AbstractCoordinateSystemType::soap_default(soap*) default initialize members
/// - int soap_read_gml__AbstractCoordinateSystemType(soap*, gml__AbstractCoordinateSystemType*) deserialize from a stream
/// - int soap_write_gml__AbstractCoordinateSystemType(soap*, gml__AbstractCoordinateSystemType*) serialize to a stream
/// - gml__AbstractCoordinateSystemType* gml__AbstractCoordinateSystemType::soap_dup(soap*) returns deep copy of gml__AbstractCoordinateSystemType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__AbstractCoordinateSystemType::soap_del() deep deletes gml__AbstractCoordinateSystemType data members, use only after gml__AbstractCoordinateSystemType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__AbstractCoordinateSystemType : public gml__IdentifiedObjectType
{ public:
/*  INHERITED FROM gml__DefinitionBaseType:
    END OF INHERITED FROM gml__DefinitionBaseType */
/*  INHERITED FROM gml__DefinitionType:
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":remarks.
    std::string*                         remarks                        0;	///< Optional element.
    END OF INHERITED FROM gml__DefinitionType */
/*  INHERITED FROM gml__IdentifiedObjectType:
    END OF INHERITED FROM gml__IdentifiedObjectType */
/// <PRE><BLOCKQUOTE>
///   The gml:axis property is an association role (ordered sequence) to the coordinate system axes included in this coordinate system. The coordinate values in a coordinate tuple shall be recorded in the order in which the coordinate system axes associations are recorded, whenever those coordinates use a coordinate reference system that uses this coordinate system. The gml:AggregationAttributeGroup should be used to specify that the axis objects are ordered.
/// </BLOCKQUOTE></PRE>
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="axis" maxOccurs="unbounded"> with global elements <usesAxis>
   $int                                  __sizeaxis                     0;
    class __gml__union_AbstractCoordinateSystemType
    {
   $int                                  __unionaxis                   ;	///< Union _gml__union_AbstractCoordinateSystemType selector: set to SOAP_UNION__gml__union_AbstractCoordinateSystemType_<fieldname>
/// Union for substitutionGroup gml__axis.
    union _gml__union_AbstractCoordinateSystemType
    {
/// <PRE><BLOCKQUOTE>
///   The gml:axis property is an association role (ordered sequence) to the coordinate system axes included in this coordinate system. The coordinate values in a coordinate tuple shall be recorded in the order in which the coordinate system axes associations are recorded, whenever those coordinates use a coordinate reference system that uses this coordinate system. The gml:AggregationAttributeGroup should be used to specify that the axis objects are ordered.
/// </BLOCKQUOTE></PRE>
/// Vector of gml__CoordinateSystemAxisPropertyType* element refs of length 1..unbounded.
    std::vector<gml__CoordinateSystemAxisPropertyType*> *axis                           1;
/// Element "http://www.opengis.net/gml/3.2":usesAxis.
    gml__CoordinateSystemAxisPropertyType*  usesAxis                       nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_AbstractCoordinateSystemType;
    }                                   *__union_AbstractCoordinateSystemType;
//  END OF SUBSTITUTIONS
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":AggregationAttributeGroup">.
/// Attribute "aggregationType" of XSD type "http://www.opengis.net/gml/3.2":AggregationType.
   @enum gml__AggregationType*           aggregationType                0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.opengis.net/gml/3.2":AbstractCRSType is an abstract complexType with complexContent extension of XSD type "http://www.opengis.net/gml/3.2":IdentifiedObjectType.
///
/// class gml__AbstractCRSType operations:
/// - gml__AbstractCRSType* soap_new_gml__AbstractCRSType(soap*) allocate and default initialize
/// - gml__AbstractCRSType* soap_new_gml__AbstractCRSType(soap*, int num) allocate array and default initialize values
/// - gml__AbstractCRSType* soap_new_req_gml__AbstractCRSType(soap*, ...) allocate, set required members
/// - gml__AbstractCRSType* soap_new_set_gml__AbstractCRSType(soap*, ...) allocate, set all public members
/// - gml__AbstractCRSType::soap_default(soap*) default initialize members
/// - int soap_read_gml__AbstractCRSType(soap*, gml__AbstractCRSType*) deserialize from a stream
/// - int soap_write_gml__AbstractCRSType(soap*, gml__AbstractCRSType*) serialize to a stream
/// - gml__AbstractCRSType* gml__AbstractCRSType::soap_dup(soap*) returns deep copy of gml__AbstractCRSType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__AbstractCRSType::soap_del() deep deletes gml__AbstractCRSType data members, use only after gml__AbstractCRSType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__AbstractCRSType : public gml__IdentifiedObjectType
{ public:
/*  INHERITED FROM gml__DefinitionBaseType:
    END OF INHERITED FROM gml__DefinitionBaseType */
/*  INHERITED FROM gml__DefinitionType:
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":remarks.
    std::string*                         remarks                        0;	///< Optional element.
    END OF INHERITED FROM gml__DefinitionType */
/*  INHERITED FROM gml__IdentifiedObjectType:
    END OF INHERITED FROM gml__IdentifiedObjectType */
/// <PRE><BLOCKQUOTE>
///   The gml:domainOfValidity property implements an association role to an EX_Extent object as encoded in ISO/TS 19139, either referencing or containing the definition of that extent.
/// </BLOCKQUOTE></PRE>
/// Vector of _gml__domainOfValidity* element refs of length 0..unbounded.
    std::vector<_gml__domainOfValidity*> domainOfValidity               0;
/// <PRE><BLOCKQUOTE>
///   The gml:scope property provides a description of the usage, or limitations of usage, for which this CRS-related object is valid. If unknown, enter "not known".
/// </BLOCKQUOTE></PRE>
/// Vector of std::string element refs of length 1..unbounded.
    std::vector<std::string            > scope                          1;
};

/// @brief "http://www.opengis.net/gml/3.2":AbstractDatumType is an abstract complexType with complexContent extension of XSD type "http://www.opengis.net/gml/3.2":IdentifiedObjectType.
///
/// class gml__AbstractDatumType operations:
/// - gml__AbstractDatumType* soap_new_gml__AbstractDatumType(soap*) allocate and default initialize
/// - gml__AbstractDatumType* soap_new_gml__AbstractDatumType(soap*, int num) allocate array and default initialize values
/// - gml__AbstractDatumType* soap_new_req_gml__AbstractDatumType(soap*, ...) allocate, set required members
/// - gml__AbstractDatumType* soap_new_set_gml__AbstractDatumType(soap*, ...) allocate, set all public members
/// - gml__AbstractDatumType::soap_default(soap*) default initialize members
/// - int soap_read_gml__AbstractDatumType(soap*, gml__AbstractDatumType*) deserialize from a stream
/// - int soap_write_gml__AbstractDatumType(soap*, gml__AbstractDatumType*) serialize to a stream
/// - gml__AbstractDatumType* gml__AbstractDatumType::soap_dup(soap*) returns deep copy of gml__AbstractDatumType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__AbstractDatumType::soap_del() deep deletes gml__AbstractDatumType data members, use only after gml__AbstractDatumType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__AbstractDatumType : public gml__IdentifiedObjectType
{ public:
/*  INHERITED FROM gml__DefinitionBaseType:
    END OF INHERITED FROM gml__DefinitionBaseType */
/*  INHERITED FROM gml__DefinitionType:
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":remarks.
    std::string*                         remarks                        0;	///< Optional element.
    END OF INHERITED FROM gml__DefinitionType */
/*  INHERITED FROM gml__IdentifiedObjectType:
    END OF INHERITED FROM gml__IdentifiedObjectType */
/// <PRE><BLOCKQUOTE>
///   The gml:domainOfValidity property implements an association role to an EX_Extent object as encoded in ISO/TS 19139, either referencing or containing the definition of that extent.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":domainOfValidity.
    _gml__domainOfValidity*              domainOfValidity               0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The gml:scope property provides a description of the usage, or limitations of usage, for which this CRS-related object is valid. If unknown, enter "not known".
/// </BLOCKQUOTE></PRE>
/// Vector of std::string element refs of length 1..unbounded.
    std::vector<std::string            > scope                          1;
/// <PRE><BLOCKQUOTE>
///   gml:anchorDefinition is a description, possibly including coordinates, of the definition used to anchor the datum to the Earth. Also known as the "origin", especially for engineering and image datums. The codeSpace attribute may be used to reference a source of more detailed on this point or surface, or on a set of such descriptions.
///   - For a geodetic datum, this point is also known as the fundamental point, which is traditionally the point where the relationship between geoid and ellipsoid is defined. In some cases, the "fundamental point" may consist of a number of points. In those cases, the parameters defining the geoid/ellipsoid relationship have been averaged for these points, and the averages adopted as the datum definition.
///   - For an engineering datum, the anchor definition may be a physical point, or it may be a point with defined coordinates in another CRS.may
///   - For an image datum, the anchor definition is usually either the centre of the image or the corner of the image.
///   - For a temporal datum, this attribute is not defined. Instead of the anchor definition, a temporal datum carries a separate time origin of type DateTime.
/// </BLOCKQUOTE></PRE>
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="anchorDefinition" minOccurs="0"> with global elements <anchorPoint>
   $int                                  __unionanchorDefinition        0;	///< Union _gml__union_AbstractDatumType selector: set to SOAP_UNION__gml__union_AbstractDatumType_<fieldname> or 0 to omit
/// Union for substitutionGroup gml__anchorDefinition.
    union _gml__union_AbstractDatumType
    {
/// <PRE><BLOCKQUOTE>
///   gml:anchorDefinition is a description, possibly including coordinates, of the definition used to anchor the datum to the Earth. Also known as the "origin", especially for engineering and image datums. The codeSpace attribute may be used to reference a source of more detailed on this point or surface, or on a set of such descriptions.
///   - For a geodetic datum, this point is also known as the fundamental point, which is traditionally the point where the relationship between geoid and ellipsoid is defined. In some cases, the "fundamental point" may consist of a number of points. In those cases, the parameters defining the geoid/ellipsoid relationship have been averaged for these points, and the averages adopted as the datum definition.
///   - For an engineering datum, the anchor definition may be a physical point, or it may be a point with defined coordinates in another CRS.may
///   - For an image datum, the anchor definition is usually either the centre of the image or the corner of the image.
///   - For a temporal datum, this attribute is not defined. Instead of the anchor definition, a temporal datum carries a separate time origin of type DateTime.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":anchorDefinition.
    gml__CodeType*                       anchorDefinition               0;	///< Optional element.
/// Element "http://www.opengis.net/gml/3.2":anchorPoint.
    gml__CodeType*                       anchorPoint                    nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_AbstractDatumType       ;
//  END OF SUBSTITUTIONS
/// <PRE><BLOCKQUOTE>
///   gml:realizationEpoch is the time after which this datum definition is valid. See ISO 19111 Table 32 for details.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":realizationEpoch.
    xsd__date*                           realizationEpoch               0;	///< Optional element.
};

/// @brief "http://www.opengis.net/gml/3.2":EllipsoidType is a complexType with complexContent extension of XSD type "http://www.opengis.net/gml/3.2":IdentifiedObjectType.
///
/// class gml__EllipsoidType operations:
/// - gml__EllipsoidType* soap_new_gml__EllipsoidType(soap*) allocate and default initialize
/// - gml__EllipsoidType* soap_new_gml__EllipsoidType(soap*, int num) allocate array and default initialize values
/// - gml__EllipsoidType* soap_new_req_gml__EllipsoidType(soap*, ...) allocate, set required members
/// - gml__EllipsoidType* soap_new_set_gml__EllipsoidType(soap*, ...) allocate, set all public members
/// - gml__EllipsoidType::soap_default(soap*) default initialize members
/// - int soap_read_gml__EllipsoidType(soap*, gml__EllipsoidType*) deserialize from a stream
/// - int soap_write_gml__EllipsoidType(soap*, gml__EllipsoidType*) serialize to a stream
/// - gml__EllipsoidType* gml__EllipsoidType::soap_dup(soap*) returns deep copy of gml__EllipsoidType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__EllipsoidType::soap_del() deep deletes gml__EllipsoidType data members, use only after gml__EllipsoidType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__EllipsoidType : public gml__IdentifiedObjectType
{ public:
/*  INHERITED FROM gml__DefinitionBaseType:
    END OF INHERITED FROM gml__DefinitionBaseType */
/*  INHERITED FROM gml__DefinitionType:
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":remarks.
    std::string*                         remarks                        0;	///< Optional element.
    END OF INHERITED FROM gml__DefinitionType */
/*  INHERITED FROM gml__IdentifiedObjectType:
    END OF INHERITED FROM gml__IdentifiedObjectType */
/// <PRE><BLOCKQUOTE>
///   gml:semiMajorAxis specifies the length of the semi-major axis of the ellipsoid, with its units. Uses the MeasureType with the restriction that the unit of measure referenced by uom must be suitable for a length, such as metres or feet.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":semiMajorAxis.
    gml__MeasureType*                    semiMajorAxis                  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   gml:secondDefiningParameter is a property containing the definition of the second parameter that defines the shape of an ellipsoid. An ellipsoid requires two defining parameters: semi-major axis and inverse flattening or semi-major axis and semi-minor axis. When the reference body is a sphere rather than an ellipsoid, only a single defining parameter is required, namely the radius of the sphere; in that case, the semi-major axis "degenerates" into the radius of the sphere.
///   The inverseFlattening element contains the inverse flattening value of the ellipsoid. This value is a scale factor (or ratio). It uses gml:LengthType with the restriction that the unit of measure referenced by the uom attribute must be suitable for a scale factor, such as percent, permil, or parts-per-million.
///   The semiMinorAxis element contains the length of the semi-minor axis of the ellipsoid. When the isSphere element is included, the ellipsoid is degenerate and is actually a sphere. The sphere is completely defined by the semi-major axis, which is the radius of the sphere.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":secondDefiningParameter.
    _gml__secondDefiningParameter*       secondDefiningParameter        1;	///< Required element.
};

/// @brief "http://www.opengis.net/gml/3.2":PrimeMeridianType is a complexType with complexContent extension of XSD type "http://www.opengis.net/gml/3.2":IdentifiedObjectType.
///
/// class gml__PrimeMeridianType operations:
/// - gml__PrimeMeridianType* soap_new_gml__PrimeMeridianType(soap*) allocate and default initialize
/// - gml__PrimeMeridianType* soap_new_gml__PrimeMeridianType(soap*, int num) allocate array and default initialize values
/// - gml__PrimeMeridianType* soap_new_req_gml__PrimeMeridianType(soap*, ...) allocate, set required members
/// - gml__PrimeMeridianType* soap_new_set_gml__PrimeMeridianType(soap*, ...) allocate, set all public members
/// - gml__PrimeMeridianType::soap_default(soap*) default initialize members
/// - int soap_read_gml__PrimeMeridianType(soap*, gml__PrimeMeridianType*) deserialize from a stream
/// - int soap_write_gml__PrimeMeridianType(soap*, gml__PrimeMeridianType*) serialize to a stream
/// - gml__PrimeMeridianType* gml__PrimeMeridianType::soap_dup(soap*) returns deep copy of gml__PrimeMeridianType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__PrimeMeridianType::soap_del() deep deletes gml__PrimeMeridianType data members, use only after gml__PrimeMeridianType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__PrimeMeridianType : public gml__IdentifiedObjectType
{ public:
/*  INHERITED FROM gml__DefinitionBaseType:
    END OF INHERITED FROM gml__DefinitionBaseType */
/*  INHERITED FROM gml__DefinitionType:
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":remarks.
    std::string*                         remarks                        0;	///< Optional element.
    END OF INHERITED FROM gml__DefinitionType */
/*  INHERITED FROM gml__IdentifiedObjectType:
    END OF INHERITED FROM gml__IdentifiedObjectType */
/// <PRE><BLOCKQUOTE>
///   gml:greenwichLongitude is the longitude of the prime meridian measured from the Greenwich meridian, positive eastward. If the value of the prime meridian "name" is "Greenwich" then the value of greenwichLongitude shall be 0 degrees.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":greenwichLongitude.
    gml__AngleType*                      greenwichLongitude             1;	///< Required element.
};

/// @brief "http://www.opengis.net/gml/3.2":AbstractCoordinateOperationType is an abstract complexType with complexContent extension of XSD type "http://www.opengis.net/gml/3.2":IdentifiedObjectType.
///
/// class gml__AbstractCoordinateOperationType operations:
/// - gml__AbstractCoordinateOperationType* soap_new_gml__AbstractCoordinateOperationType(soap*) allocate and default initialize
/// - gml__AbstractCoordinateOperationType* soap_new_gml__AbstractCoordinateOperationType(soap*, int num) allocate array and default initialize values
/// - gml__AbstractCoordinateOperationType* soap_new_req_gml__AbstractCoordinateOperationType(soap*, ...) allocate, set required members
/// - gml__AbstractCoordinateOperationType* soap_new_set_gml__AbstractCoordinateOperationType(soap*, ...) allocate, set all public members
/// - gml__AbstractCoordinateOperationType::soap_default(soap*) default initialize members
/// - int soap_read_gml__AbstractCoordinateOperationType(soap*, gml__AbstractCoordinateOperationType*) deserialize from a stream
/// - int soap_write_gml__AbstractCoordinateOperationType(soap*, gml__AbstractCoordinateOperationType*) serialize to a stream
/// - gml__AbstractCoordinateOperationType* gml__AbstractCoordinateOperationType::soap_dup(soap*) returns deep copy of gml__AbstractCoordinateOperationType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__AbstractCoordinateOperationType::soap_del() deep deletes gml__AbstractCoordinateOperationType data members, use only after gml__AbstractCoordinateOperationType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__AbstractCoordinateOperationType : public gml__IdentifiedObjectType
{ public:
/*  INHERITED FROM gml__DefinitionBaseType:
    END OF INHERITED FROM gml__DefinitionBaseType */
/*  INHERITED FROM gml__DefinitionType:
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":remarks.
    std::string*                         remarks                        0;	///< Optional element.
    END OF INHERITED FROM gml__DefinitionType */
/*  INHERITED FROM gml__IdentifiedObjectType:
    END OF INHERITED FROM gml__IdentifiedObjectType */
/// <PRE><BLOCKQUOTE>
///   The gml:domainOfValidity property implements an association role to an EX_Extent object as encoded in ISO/TS 19139, either referencing or containing the definition of that extent.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":domainOfValidity.
    _gml__domainOfValidity*              domainOfValidity               0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The gml:scope property provides a description of the usage, or limitations of usage, for which this CRS-related object is valid. If unknown, enter "not known".
/// </BLOCKQUOTE></PRE>
/// Vector of std::string element refs of length 1..unbounded.
    std::vector<std::string            > scope                          1;
/// <PRE><BLOCKQUOTE>
///   gml:operationVersion is the version of the coordinate transformation (i.e., instantiation due to the stochastic nature of the parameters). Mandatory when describing a transformation, and should not be supplied for a conversion.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":operationVersion.
    std::string*                         operationVersion               0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   gml:coordinateOperationAccuracy is an association role to a DQ_PositionalAccuracy object as encoded in ISO/TS 19139, either referencing or containing the definition of that positional accuracy. That object contains an estimate of the impact of this coordinate operation on point accuracy. That is, it gives position error estimates for the target coordinates of this coordinate operation, assuming no errors in the source coordinates.
/// </BLOCKQUOTE></PRE>
/// Vector of _gml__coordinateOperationAccuracy* element refs of length 0..unbounded.
    std::vector<_gml__coordinateOperationAccuracy*> coordinateOperationAccuracy    0;
/// <PRE><BLOCKQUOTE>
///   gml:sourceCRS is an association role to the source CRS (coordinate reference system) of this coordinate operation.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":sourceCRS.
    gml__CRSPropertyType*                sourceCRS                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   gml:targetCRS is an association role to the target CRS (coordinate reference system) of this coordinate operation.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":targetCRS.
    gml__CRSPropertyType*                targetCRS                      0;	///< Optional element.
};

/// @brief "http://www.opengis.net/gml/3.2":OperationMethodType is a complexType with complexContent extension of XSD type "http://www.opengis.net/gml/3.2":IdentifiedObjectType.
///
/// class gml__OperationMethodType operations:
/// - gml__OperationMethodType* soap_new_gml__OperationMethodType(soap*) allocate and default initialize
/// - gml__OperationMethodType* soap_new_gml__OperationMethodType(soap*, int num) allocate array and default initialize values
/// - gml__OperationMethodType* soap_new_req_gml__OperationMethodType(soap*, ...) allocate, set required members
/// - gml__OperationMethodType* soap_new_set_gml__OperationMethodType(soap*, ...) allocate, set all public members
/// - gml__OperationMethodType::soap_default(soap*) default initialize members
/// - int soap_read_gml__OperationMethodType(soap*, gml__OperationMethodType*) deserialize from a stream
/// - int soap_write_gml__OperationMethodType(soap*, gml__OperationMethodType*) serialize to a stream
/// - gml__OperationMethodType* gml__OperationMethodType::soap_dup(soap*) returns deep copy of gml__OperationMethodType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__OperationMethodType::soap_del() deep deletes gml__OperationMethodType data members, use only after gml__OperationMethodType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__OperationMethodType : public gml__IdentifiedObjectType
{ public:
/*  INHERITED FROM gml__DefinitionBaseType:
    END OF INHERITED FROM gml__DefinitionBaseType */
/*  INHERITED FROM gml__DefinitionType:
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":remarks.
    std::string*                         remarks                        0;	///< Optional element.
    END OF INHERITED FROM gml__DefinitionType */
/*  INHERITED FROM gml__IdentifiedObjectType:
    END OF INHERITED FROM gml__IdentifiedObjectType */
//  BEGIN CHOICE <xs:choice>
   $int                                  __union_OperationMethodType   ;	///< Union _gml__union_OperationMethodType selector: set to SOAP_UNION__gml__union_OperationMethodType_<fieldname>
    union _gml__union_OperationMethodType
    {
/// <PRE><BLOCKQUOTE>
///   gml:formulaCitation provides a reference to a publication giving the formula(s) or procedure used by an coordinate operation method.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":formulaCitation.
    _gml__formulaCitation*               formulaCitation                nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   gml:formula Formula(s) or procedure used by an operation method. The use of the codespace attribite has been deprecated. The property value shall be a character string.
/// </BLOCKQUOTE></PRE>
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="formula"> with global elements <methodFormula>
/// <PRE><BLOCKQUOTE>
///   gml:formula Formula(s) or procedure used by an operation method. The use of the codespace attribite has been deprecated. The property value shall be a character string.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":formula.
    gml__CodeType*                       formula                        nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.opengis.net/gml/3.2":methodFormula.
    gml__CodeType*                       methodFormula                  nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
//  END OF SUBSTITUTIONS
    }                                    union_OperationMethodType     ;
//  END OF CHOICE
/// <PRE><BLOCKQUOTE>
///   gml:sourceDimensions is the number of dimensions in the source CRS of this operation method.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":sourceDimensions.
    xsd__positiveInteger*                sourceDimensions               0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   gml:targetDimensions is the number of dimensions in the target CRS of this operation method.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":targetDimensions.
    xsd__positiveInteger*                targetDimensions               0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   gml:parameter is an association to an operation parameter or parameter group.
/// </BLOCKQUOTE></PRE>
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="parameter" minOccurs="0" maxOccurs="unbounded"> with global elements <includesParameter> <generalOperationParameter>
   $int                                  __sizeparameter                0;
    class __gml__union_OperationMethodType__
    {
   $int                                  __unionparameter               0;	///< Union _gml__union_OperationMethodType__ selector: set to SOAP_UNION__gml__union_OperationMethodType___<fieldname> or 0 to omit
/// Union for substitutionGroup gml__parameter.
    union _gml__union_OperationMethodType__
    {
/// <PRE><BLOCKQUOTE>
///   gml:parameter is an association to an operation parameter or parameter group.
/// </BLOCKQUOTE></PRE>
/// Vector of gml__AbstractGeneralOperationParameterPropertyType* element refs of length 0..unbounded.
    std::vector<gml__AbstractGeneralOperationParameterPropertyType*> *parameter                      0;
/// Element "http://www.opengis.net/gml/3.2":includesParameter.
    gml__AbstractGeneralOperationParameterPropertyType*  includesParameter              nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="generalOperationParameter"> with global elements <usesParameter>
/// Element "http://www.opengis.net/gml/3.2":generalOperationParameter.
    gml__AbstractGeneralOperationParameterPropertyType*  generalOperationParameter      nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.opengis.net/gml/3.2":usesParameter.
    gml__AbstractGeneralOperationParameterPropertyType*  usesParameter                  nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
//  END OF SUBSTITUTIONS
    }                                    union_OperationMethodType__   ;
    }                                   *__union_OperationMethodType__ ;
//  END OF SUBSTITUTIONS
};

/// @brief "http://www.opengis.net/gml/3.2":AbstractGeneralOperationParameterType is an abstract complexType with complexContent extension of XSD type "http://www.opengis.net/gml/3.2":IdentifiedObjectType.
///
/// class gml__AbstractGeneralOperationParameterType operations:
/// - gml__AbstractGeneralOperationParameterType* soap_new_gml__AbstractGeneralOperationParameterType(soap*) allocate and default initialize
/// - gml__AbstractGeneralOperationParameterType* soap_new_gml__AbstractGeneralOperationParameterType(soap*, int num) allocate array and default initialize values
/// - gml__AbstractGeneralOperationParameterType* soap_new_req_gml__AbstractGeneralOperationParameterType(soap*, ...) allocate, set required members
/// - gml__AbstractGeneralOperationParameterType* soap_new_set_gml__AbstractGeneralOperationParameterType(soap*, ...) allocate, set all public members
/// - gml__AbstractGeneralOperationParameterType::soap_default(soap*) default initialize members
/// - int soap_read_gml__AbstractGeneralOperationParameterType(soap*, gml__AbstractGeneralOperationParameterType*) deserialize from a stream
/// - int soap_write_gml__AbstractGeneralOperationParameterType(soap*, gml__AbstractGeneralOperationParameterType*) serialize to a stream
/// - gml__AbstractGeneralOperationParameterType* gml__AbstractGeneralOperationParameterType::soap_dup(soap*) returns deep copy of gml__AbstractGeneralOperationParameterType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__AbstractGeneralOperationParameterType::soap_del() deep deletes gml__AbstractGeneralOperationParameterType data members, use only after gml__AbstractGeneralOperationParameterType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__AbstractGeneralOperationParameterType : public gml__IdentifiedObjectType
{ public:
/*  INHERITED FROM gml__DefinitionBaseType:
    END OF INHERITED FROM gml__DefinitionBaseType */
/*  INHERITED FROM gml__DefinitionType:
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":remarks.
    std::string*                         remarks                        0;	///< Optional element.
    END OF INHERITED FROM gml__DefinitionType */
/*  INHERITED FROM gml__IdentifiedObjectType:
    END OF INHERITED FROM gml__IdentifiedObjectType */
/// <PRE><BLOCKQUOTE>
///   gml:minimumOccurs is the minimum number of times that values for this parameter group or parameter are required. If this attribute is omitted, the minimum number shall be one.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":minimumOccurs.
    xsd__nonNegativeInteger*             minimumOccurs                  0;	///< Optional element.
};

/// @brief "http://www.opengis.net/gml/3.2":DirectedObservationAtDistanceType is a complexType with complexContent extension of XSD type "http://www.opengis.net/gml/3.2":DirectedObservationType.
///
/// class gml__DirectedObservationAtDistanceType operations:
/// - gml__DirectedObservationAtDistanceType* soap_new_gml__DirectedObservationAtDistanceType(soap*) allocate and default initialize
/// - gml__DirectedObservationAtDistanceType* soap_new_gml__DirectedObservationAtDistanceType(soap*, int num) allocate array and default initialize values
/// - gml__DirectedObservationAtDistanceType* soap_new_req_gml__DirectedObservationAtDistanceType(soap*, ...) allocate, set required members
/// - gml__DirectedObservationAtDistanceType* soap_new_set_gml__DirectedObservationAtDistanceType(soap*, ...) allocate, set all public members
/// - gml__DirectedObservationAtDistanceType::soap_default(soap*) default initialize members
/// - int soap_read_gml__DirectedObservationAtDistanceType(soap*, gml__DirectedObservationAtDistanceType*) deserialize from a stream
/// - int soap_write_gml__DirectedObservationAtDistanceType(soap*, gml__DirectedObservationAtDistanceType*) serialize to a stream
/// - gml__DirectedObservationAtDistanceType* gml__DirectedObservationAtDistanceType::soap_dup(soap*) returns deep copy of gml__DirectedObservationAtDistanceType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__DirectedObservationAtDistanceType::soap_del() deep deletes gml__DirectedObservationAtDistanceType data members, use only after gml__DirectedObservationAtDistanceType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__DirectedObservationAtDistanceType : public gml__DirectedObservationType
{ public:
/*  INHERITED FROM gml__AbstractGMLType:
//  BEGIN GROUP <xs:group name="StandardObjectProperties">
/// Vector of gml__MetaDataPropertyType* element refs of length 0..unbounded.
    std::vector<gml__MetaDataPropertyType*> metaDataProperty               0;
/// <PRE><BLOCKQUOTE>
///   The value of this property is a text description of the object. gml:description uses gml:StringOrRefType as its content model, so it may contain a simple text string content, or carry a reference to an external description. The use of gml:description to reference an external description has been deprecated and replaced by the gml:descriptionReference property.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":description.
    gml__StringOrRefType*                description                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The value of this property is a remote text description of the object. The xlink:href attribute of the gml:descriptionReference property references the external description.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":descriptionReference.
    gml__ReferenceType*                  descriptionReference           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Often, a special identifier is assigned to an object by the maintaining authority with the intention that it is used in references to the object For such cases, the codeSpace shall be provided. That identifier is usually unique either globally or within an application domain. gml:identifier is a pre-defined property for such identifiers.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":identifier.
    gml__CodeWithAuthorityType*          identifier                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The gml:name property provides a label or identifier for the object, commonly a descriptive name. An object may have several names, typically assigned by different authorities. gml:name uses the gml:CodeType content model. The authority for a name is indicated by the value of its (optional) codeSpace attribute. The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace. In common usage there will be one name per authority, so a processing application may select the name from its preferred codeSpace.
/// </BLOCKQUOTE></PRE>
/// Vector of gml__CodeType* element refs of length 0..unbounded.
    std::vector<gml__CodeType*         > name                           0;
//  END OF GROUP
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":id.
/// <PRE><BLOCKQUOTE>
///   The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.
/// </BLOCKQUOTE></PRE>
   @xsd__ID*                             gml__id                        0;	///< Optional attribute.
    END OF INHERITED FROM gml__AbstractGMLType */
/*  INHERITED FROM gml__AbstractFeatureType:
/// <PRE><BLOCKQUOTE>
///   This property describes the minimum bounding box or rectangle that encloses the entire feature.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":boundedBy.
    gml__BoundingShapeType*              boundedBy                      0;	///< Optional element.
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="location" minOccurs="0"> with global elements <priorityLocation>
   $int                                  __unionlocation                0;	///< Union _gml__union_DirectedObservationAtDistanceType selector: set to SOAP_UNION__gml__union_DirectedObservationAtDistanceType_<fieldname> or 0 to omit
/// Union for substitutionGroup gml__location.
    union _gml__union_DirectedObservationAtDistanceType
    {
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":location.
    gml__LocationPropertyType*           location                       0;	///< Optional element.
/// Element "http://www.opengis.net/gml/3.2":priorityLocation.
    gml__PriorityLocationPropertyType*   priorityLocation               nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_DirectedObservationAtDistanceType;
//  END OF SUBSTITUTIONS
    END OF INHERITED FROM gml__AbstractFeatureType */
/*  INHERITED FROM gml__ObservationType:
/// <PRE><BLOCKQUOTE>
///   gml:validTime is a convenience property element.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":validTime.
    gml__TimePrimitivePropertyType*      validTime                      1;	///< Required element.
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":using.
    gml__ProcedurePropertyType*          using_                         0;	///< Optional element.
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="target" minOccurs="0"> with global elements <subject>
   $int                                  __uniontarget                  0;	///< Union _gml__union_DirectedObservationAtDistanceType_ selector: set to SOAP_UNION__gml__union_DirectedObservationAtDistanceType__<fieldname> or 0 to omit
/// Union for substitutionGroup gml__target.
    union _gml__union_DirectedObservationAtDistanceType_
    {
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":target.
    gml__TargetPropertyType*             target                         0;	///< Optional element.
/// Element "http://www.opengis.net/gml/3.2":subject.
    gml__TargetPropertyType*             subject                        nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_DirectedObservationAtDistanceType_;
//  END OF SUBSTITUTIONS
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":resultOf.
    gml__ResultType*                     resultOf                       1;	///< Required element.
    END OF INHERITED FROM gml__ObservationType */
/*  INHERITED FROM gml__DirectedObservationType:
/// <PRE><BLOCKQUOTE>
///   The property gml:direction is intended as a pre-defined property expressing a direction to be assigned to features defined in a GML application schema.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":direction.
    gml__DirectionPropertyType*          direction                      1;	///< Required element.
    END OF INHERITED FROM gml__DirectedObservationType */
/// Element "distance" of XSD type "http://www.opengis.net/gml/3.2":MeasureType.
    gml__MeasureType*                    distance                       1;	///< Required element.
};

/// @brief "http://www.opengis.net/gml/3.2":TimeCoordinateSystemType is a complexType with complexContent extension of XSD type "http://www.opengis.net/gml/3.2":TimeReferenceSystemType.
///
/// class gml__TimeCoordinateSystemType operations:
/// - gml__TimeCoordinateSystemType* soap_new_gml__TimeCoordinateSystemType(soap*) allocate and default initialize
/// - gml__TimeCoordinateSystemType* soap_new_gml__TimeCoordinateSystemType(soap*, int num) allocate array and default initialize values
/// - gml__TimeCoordinateSystemType* soap_new_req_gml__TimeCoordinateSystemType(soap*, ...) allocate, set required members
/// - gml__TimeCoordinateSystemType* soap_new_set_gml__TimeCoordinateSystemType(soap*, ...) allocate, set all public members
/// - gml__TimeCoordinateSystemType::soap_default(soap*) default initialize members
/// - int soap_read_gml__TimeCoordinateSystemType(soap*, gml__TimeCoordinateSystemType*) deserialize from a stream
/// - int soap_write_gml__TimeCoordinateSystemType(soap*, gml__TimeCoordinateSystemType*) serialize to a stream
/// - gml__TimeCoordinateSystemType* gml__TimeCoordinateSystemType::soap_dup(soap*) returns deep copy of gml__TimeCoordinateSystemType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__TimeCoordinateSystemType::soap_del() deep deletes gml__TimeCoordinateSystemType data members, use only after gml__TimeCoordinateSystemType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__TimeCoordinateSystemType : public gml__TimeReferenceSystemType
{ public:
/*  INHERITED FROM gml__DefinitionBaseType:
    END OF INHERITED FROM gml__DefinitionBaseType */
/*  INHERITED FROM gml__DefinitionType:
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":remarks.
    std::string*                         remarks                        0;	///< Optional element.
    END OF INHERITED FROM gml__DefinitionType */
/*  INHERITED FROM gml__TimeReferenceSystemType:
/// Element "domainOfValidity" of XSD type xs:string.
    std::string                          domainOfValidity               1;	///< Required element.
    END OF INHERITED FROM gml__TimeReferenceSystemType */
//  BEGIN CHOICE <xs:choice>
   $int                                  __union_TimeCoordinateSystemType;	///< Union _gml__union_TimeCoordinateSystemType selector: set to SOAP_UNION__gml__union_TimeCoordinateSystemType_<fieldname>
    union _gml__union_TimeCoordinateSystemType
    {
/// Element "originPosition" of XSD type "http://www.opengis.net/gml/3.2":TimePositionType.
    gml__TimePositionType*               originPosition                 nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "origin" of XSD type "http://www.opengis.net/gml/3.2":TimeInstantPropertyType.
    gml__TimeInstantPropertyType*        origin                         nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_TimeCoordinateSystemType;
//  END OF CHOICE
/// Element "interval" of XSD type "http://www.opengis.net/gml/3.2":TimeIntervalLengthType.
    gml__TimeIntervalLengthType*         interval                       1;	///< Required element.
};

/// @brief "http://www.opengis.net/gml/3.2":TimeCalendarType is a complexType with complexContent extension of XSD type "http://www.opengis.net/gml/3.2":TimeReferenceSystemType.
///
/// class gml__TimeCalendarType operations:
/// - gml__TimeCalendarType* soap_new_gml__TimeCalendarType(soap*) allocate and default initialize
/// - gml__TimeCalendarType* soap_new_gml__TimeCalendarType(soap*, int num) allocate array and default initialize values
/// - gml__TimeCalendarType* soap_new_req_gml__TimeCalendarType(soap*, ...) allocate, set required members
/// - gml__TimeCalendarType* soap_new_set_gml__TimeCalendarType(soap*, ...) allocate, set all public members
/// - gml__TimeCalendarType::soap_default(soap*) default initialize members
/// - int soap_read_gml__TimeCalendarType(soap*, gml__TimeCalendarType*) deserialize from a stream
/// - int soap_write_gml__TimeCalendarType(soap*, gml__TimeCalendarType*) serialize to a stream
/// - gml__TimeCalendarType* gml__TimeCalendarType::soap_dup(soap*) returns deep copy of gml__TimeCalendarType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__TimeCalendarType::soap_del() deep deletes gml__TimeCalendarType data members, use only after gml__TimeCalendarType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__TimeCalendarType : public gml__TimeReferenceSystemType
{ public:
/*  INHERITED FROM gml__DefinitionBaseType:
    END OF INHERITED FROM gml__DefinitionBaseType */
/*  INHERITED FROM gml__DefinitionType:
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":remarks.
    std::string*                         remarks                        0;	///< Optional element.
    END OF INHERITED FROM gml__DefinitionType */
/*  INHERITED FROM gml__TimeReferenceSystemType:
/// Element "domainOfValidity" of XSD type xs:string.
    std::string                          domainOfValidity               1;	///< Required element.
    END OF INHERITED FROM gml__TimeReferenceSystemType */
/// Vector of gml__TimeCalendarEraPropertyType* of length 1..unbounded.
    std::vector<gml__TimeCalendarEraPropertyType*> referenceFrame                 1;
};

/// @brief "http://www.opengis.net/gml/3.2":TimeClockType is a complexType with complexContent extension of XSD type "http://www.opengis.net/gml/3.2":TimeReferenceSystemType.
///
/// class gml__TimeClockType operations:
/// - gml__TimeClockType* soap_new_gml__TimeClockType(soap*) allocate and default initialize
/// - gml__TimeClockType* soap_new_gml__TimeClockType(soap*, int num) allocate array and default initialize values
/// - gml__TimeClockType* soap_new_req_gml__TimeClockType(soap*, ...) allocate, set required members
/// - gml__TimeClockType* soap_new_set_gml__TimeClockType(soap*, ...) allocate, set all public members
/// - gml__TimeClockType::soap_default(soap*) default initialize members
/// - int soap_read_gml__TimeClockType(soap*, gml__TimeClockType*) deserialize from a stream
/// - int soap_write_gml__TimeClockType(soap*, gml__TimeClockType*) serialize to a stream
/// - gml__TimeClockType* gml__TimeClockType::soap_dup(soap*) returns deep copy of gml__TimeClockType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__TimeClockType::soap_del() deep deletes gml__TimeClockType data members, use only after gml__TimeClockType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__TimeClockType : public gml__TimeReferenceSystemType
{ public:
/*  INHERITED FROM gml__DefinitionBaseType:
    END OF INHERITED FROM gml__DefinitionBaseType */
/*  INHERITED FROM gml__DefinitionType:
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":remarks.
    std::string*                         remarks                        0;	///< Optional element.
    END OF INHERITED FROM gml__DefinitionType */
/*  INHERITED FROM gml__TimeReferenceSystemType:
/// Element "domainOfValidity" of XSD type xs:string.
    std::string                          domainOfValidity               1;	///< Required element.
    END OF INHERITED FROM gml__TimeReferenceSystemType */
/// Element "referenceEvent" of XSD type "http://www.opengis.net/gml/3.2":StringOrRefType.
    gml__StringOrRefType*                referenceEvent                 1;	///< Required element.
/// Element "referenceTime" of XSD type xs:time.
    xsd__time                            referenceTime                  1;	///< Required element.
/// Element "utcReference" of XSD type xs:time.
    xsd__time                            utcReference                   1;	///< Required element.
/// Vector of gml__TimeCalendarPropertyType* of length 0..unbounded.
    std::vector<gml__TimeCalendarPropertyType*> dateBasis                      0;
};

/// @brief "http://www.opengis.net/gml/3.2":TimeOrdinalReferenceSystemType is a complexType with complexContent extension of XSD type "http://www.opengis.net/gml/3.2":TimeReferenceSystemType.
///
/// class gml__TimeOrdinalReferenceSystemType operations:
/// - gml__TimeOrdinalReferenceSystemType* soap_new_gml__TimeOrdinalReferenceSystemType(soap*) allocate and default initialize
/// - gml__TimeOrdinalReferenceSystemType* soap_new_gml__TimeOrdinalReferenceSystemType(soap*, int num) allocate array and default initialize values
/// - gml__TimeOrdinalReferenceSystemType* soap_new_req_gml__TimeOrdinalReferenceSystemType(soap*, ...) allocate, set required members
/// - gml__TimeOrdinalReferenceSystemType* soap_new_set_gml__TimeOrdinalReferenceSystemType(soap*, ...) allocate, set all public members
/// - gml__TimeOrdinalReferenceSystemType::soap_default(soap*) default initialize members
/// - int soap_read_gml__TimeOrdinalReferenceSystemType(soap*, gml__TimeOrdinalReferenceSystemType*) deserialize from a stream
/// - int soap_write_gml__TimeOrdinalReferenceSystemType(soap*, gml__TimeOrdinalReferenceSystemType*) serialize to a stream
/// - gml__TimeOrdinalReferenceSystemType* gml__TimeOrdinalReferenceSystemType::soap_dup(soap*) returns deep copy of gml__TimeOrdinalReferenceSystemType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__TimeOrdinalReferenceSystemType::soap_del() deep deletes gml__TimeOrdinalReferenceSystemType data members, use only after gml__TimeOrdinalReferenceSystemType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__TimeOrdinalReferenceSystemType : public gml__TimeReferenceSystemType
{ public:
/*  INHERITED FROM gml__DefinitionBaseType:
    END OF INHERITED FROM gml__DefinitionBaseType */
/*  INHERITED FROM gml__DefinitionType:
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":remarks.
    std::string*                         remarks                        0;	///< Optional element.
    END OF INHERITED FROM gml__DefinitionType */
/*  INHERITED FROM gml__TimeReferenceSystemType:
/// Element "domainOfValidity" of XSD type xs:string.
    std::string                          domainOfValidity               1;	///< Required element.
    END OF INHERITED FROM gml__TimeReferenceSystemType */
/// Vector of gml__TimeOrdinalEraPropertyType* of length 1..unbounded.
    std::vector<gml__TimeOrdinalEraPropertyType*> component                      1;
};

/// @brief "http://www.opengis.net/gml/3.2":TimeNodeType is a complexType with complexContent extension of XSD type "http://www.opengis.net/gml/3.2":AbstractTimeTopologyPrimitiveType.
///
/// class gml__TimeNodeType operations:
/// - gml__TimeNodeType* soap_new_gml__TimeNodeType(soap*) allocate and default initialize
/// - gml__TimeNodeType* soap_new_gml__TimeNodeType(soap*, int num) allocate array and default initialize values
/// - gml__TimeNodeType* soap_new_req_gml__TimeNodeType(soap*, ...) allocate, set required members
/// - gml__TimeNodeType* soap_new_set_gml__TimeNodeType(soap*, ...) allocate, set all public members
/// - gml__TimeNodeType::soap_default(soap*) default initialize members
/// - int soap_read_gml__TimeNodeType(soap*, gml__TimeNodeType*) deserialize from a stream
/// - int soap_write_gml__TimeNodeType(soap*, gml__TimeNodeType*) serialize to a stream
/// - gml__TimeNodeType* gml__TimeNodeType::soap_dup(soap*) returns deep copy of gml__TimeNodeType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__TimeNodeType::soap_del() deep deletes gml__TimeNodeType data members, use only after gml__TimeNodeType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__TimeNodeType : public gml__AbstractTimeTopologyPrimitiveType
{ public:
/*  INHERITED FROM gml__AbstractGMLType:
//  BEGIN GROUP <xs:group name="StandardObjectProperties">
/// Vector of gml__MetaDataPropertyType* element refs of length 0..unbounded.
    std::vector<gml__MetaDataPropertyType*> metaDataProperty               0;
/// <PRE><BLOCKQUOTE>
///   The value of this property is a text description of the object. gml:description uses gml:StringOrRefType as its content model, so it may contain a simple text string content, or carry a reference to an external description. The use of gml:description to reference an external description has been deprecated and replaced by the gml:descriptionReference property.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":description.
    gml__StringOrRefType*                description                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The value of this property is a remote text description of the object. The xlink:href attribute of the gml:descriptionReference property references the external description.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":descriptionReference.
    gml__ReferenceType*                  descriptionReference           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Often, a special identifier is assigned to an object by the maintaining authority with the intention that it is used in references to the object For such cases, the codeSpace shall be provided. That identifier is usually unique either globally or within an application domain. gml:identifier is a pre-defined property for such identifiers.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":identifier.
    gml__CodeWithAuthorityType*          identifier                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The gml:name property provides a label or identifier for the object, commonly a descriptive name. An object may have several names, typically assigned by different authorities. gml:name uses the gml:CodeType content model. The authority for a name is indicated by the value of its (optional) codeSpace attribute. The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace. In common usage there will be one name per authority, so a processing application may select the name from its preferred codeSpace.
/// </BLOCKQUOTE></PRE>
/// Vector of gml__CodeType* element refs of length 0..unbounded.
    std::vector<gml__CodeType*         > name                           0;
//  END OF GROUP
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":id.
/// <PRE><BLOCKQUOTE>
///   The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.
/// </BLOCKQUOTE></PRE>
   @xsd__ID*                             gml__id                        0;	///< Optional attribute.
    END OF INHERITED FROM gml__AbstractGMLType */
/*  INHERITED FROM gml__AbstractTimeObjectType:
    END OF INHERITED FROM gml__AbstractTimeObjectType */
/*  INHERITED FROM gml__AbstractTimePrimitiveType:
/// Vector of gml__RelatedTimeType* of length 0..unbounded.
    std::vector<gml__RelatedTimeType*  > relatedTime                    0;
    END OF INHERITED FROM gml__AbstractTimePrimitiveType */
/*  INHERITED FROM gml__AbstractTimeTopologyPrimitiveType:
/// Element "complex" of XSD type "http://www.opengis.net/gml/3.2":ReferenceType.
    gml__ReferenceType*                  complex                        0;	///< Optional element.
    END OF INHERITED FROM gml__AbstractTimeTopologyPrimitiveType */
/// Vector of gml__TimeEdgePropertyType* of length 0..unbounded.
    std::vector<gml__TimeEdgePropertyType*> previousEdge                   0;
/// Vector of gml__TimeEdgePropertyType* of length 0..unbounded.
    std::vector<gml__TimeEdgePropertyType*> nextEdge                       0;
/// Element "position" of XSD type "http://www.opengis.net/gml/3.2":TimeInstantPropertyType.
    gml__TimeInstantPropertyType*        position                       0;	///< Optional element.
};

/// @brief "http://www.opengis.net/gml/3.2":TimeEdgeType is a complexType with complexContent extension of XSD type "http://www.opengis.net/gml/3.2":AbstractTimeTopologyPrimitiveType.
///
/// class gml__TimeEdgeType operations:
/// - gml__TimeEdgeType* soap_new_gml__TimeEdgeType(soap*) allocate and default initialize
/// - gml__TimeEdgeType* soap_new_gml__TimeEdgeType(soap*, int num) allocate array and default initialize values
/// - gml__TimeEdgeType* soap_new_req_gml__TimeEdgeType(soap*, ...) allocate, set required members
/// - gml__TimeEdgeType* soap_new_set_gml__TimeEdgeType(soap*, ...) allocate, set all public members
/// - gml__TimeEdgeType::soap_default(soap*) default initialize members
/// - int soap_read_gml__TimeEdgeType(soap*, gml__TimeEdgeType*) deserialize from a stream
/// - int soap_write_gml__TimeEdgeType(soap*, gml__TimeEdgeType*) serialize to a stream
/// - gml__TimeEdgeType* gml__TimeEdgeType::soap_dup(soap*) returns deep copy of gml__TimeEdgeType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__TimeEdgeType::soap_del() deep deletes gml__TimeEdgeType data members, use only after gml__TimeEdgeType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__TimeEdgeType : public gml__AbstractTimeTopologyPrimitiveType
{ public:
/*  INHERITED FROM gml__AbstractGMLType:
//  BEGIN GROUP <xs:group name="StandardObjectProperties">
/// Vector of gml__MetaDataPropertyType* element refs of length 0..unbounded.
    std::vector<gml__MetaDataPropertyType*> metaDataProperty               0;
/// <PRE><BLOCKQUOTE>
///   The value of this property is a text description of the object. gml:description uses gml:StringOrRefType as its content model, so it may contain a simple text string content, or carry a reference to an external description. The use of gml:description to reference an external description has been deprecated and replaced by the gml:descriptionReference property.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":description.
    gml__StringOrRefType*                description                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The value of this property is a remote text description of the object. The xlink:href attribute of the gml:descriptionReference property references the external description.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":descriptionReference.
    gml__ReferenceType*                  descriptionReference           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Often, a special identifier is assigned to an object by the maintaining authority with the intention that it is used in references to the object For such cases, the codeSpace shall be provided. That identifier is usually unique either globally or within an application domain. gml:identifier is a pre-defined property for such identifiers.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":identifier.
    gml__CodeWithAuthorityType*          identifier                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The gml:name property provides a label or identifier for the object, commonly a descriptive name. An object may have several names, typically assigned by different authorities. gml:name uses the gml:CodeType content model. The authority for a name is indicated by the value of its (optional) codeSpace attribute. The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace. In common usage there will be one name per authority, so a processing application may select the name from its preferred codeSpace.
/// </BLOCKQUOTE></PRE>
/// Vector of gml__CodeType* element refs of length 0..unbounded.
    std::vector<gml__CodeType*         > name                           0;
//  END OF GROUP
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":id.
/// <PRE><BLOCKQUOTE>
///   The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.
/// </BLOCKQUOTE></PRE>
   @xsd__ID*                             gml__id                        0;	///< Optional attribute.
    END OF INHERITED FROM gml__AbstractGMLType */
/*  INHERITED FROM gml__AbstractTimeObjectType:
    END OF INHERITED FROM gml__AbstractTimeObjectType */
/*  INHERITED FROM gml__AbstractTimePrimitiveType:
/// Vector of gml__RelatedTimeType* of length 0..unbounded.
    std::vector<gml__RelatedTimeType*  > relatedTime                    0;
    END OF INHERITED FROM gml__AbstractTimePrimitiveType */
/*  INHERITED FROM gml__AbstractTimeTopologyPrimitiveType:
/// Element "complex" of XSD type "http://www.opengis.net/gml/3.2":ReferenceType.
    gml__ReferenceType*                  complex                        0;	///< Optional element.
    END OF INHERITED FROM gml__AbstractTimeTopologyPrimitiveType */
/// Element "start" of XSD type "http://www.opengis.net/gml/3.2":TimeNodePropertyType.
    gml__TimeNodePropertyType*           start                          1;	///< Required element.
/// Element "end" of XSD type "http://www.opengis.net/gml/3.2":TimeNodePropertyType.
    gml__TimeNodePropertyType*           end                            1;	///< Required element.
/// Element "extent" of XSD type "http://www.opengis.net/gml/3.2":TimePeriodPropertyType.
    gml__TimePeriodPropertyType*         extent                         0;	///< Optional element.
};

/// @brief "http://www.opengis.net/gml/3.2":RingType is a complexType with complexContent extension of XSD type "http://www.opengis.net/gml/3.2":AbstractRingType.
///
/// class gml__RingType operations:
/// - gml__RingType* soap_new_gml__RingType(soap*) allocate and default initialize
/// - gml__RingType* soap_new_gml__RingType(soap*, int num) allocate array and default initialize values
/// - gml__RingType* soap_new_req_gml__RingType(soap*, ...) allocate, set required members
/// - gml__RingType* soap_new_set_gml__RingType(soap*, ...) allocate, set all public members
/// - gml__RingType::soap_default(soap*) default initialize members
/// - int soap_read_gml__RingType(soap*, gml__RingType*) deserialize from a stream
/// - int soap_write_gml__RingType(soap*, gml__RingType*) serialize to a stream
/// - gml__RingType* gml__RingType::soap_dup(soap*) returns deep copy of gml__RingType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__RingType::soap_del() deep deletes gml__RingType data members, use only after gml__RingType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__RingType : public gml__AbstractRingType
{ public:
/*  INHERITED FROM gml__AbstractGMLType:
//  BEGIN GROUP <xs:group name="StandardObjectProperties">
/// Vector of gml__MetaDataPropertyType* element refs of length 0..unbounded.
    std::vector<gml__MetaDataPropertyType*> metaDataProperty               0;
/// <PRE><BLOCKQUOTE>
///   The value of this property is a text description of the object. gml:description uses gml:StringOrRefType as its content model, so it may contain a simple text string content, or carry a reference to an external description. The use of gml:description to reference an external description has been deprecated and replaced by the gml:descriptionReference property.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":description.
    gml__StringOrRefType*                description                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The value of this property is a remote text description of the object. The xlink:href attribute of the gml:descriptionReference property references the external description.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":descriptionReference.
    gml__ReferenceType*                  descriptionReference           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Often, a special identifier is assigned to an object by the maintaining authority with the intention that it is used in references to the object For such cases, the codeSpace shall be provided. That identifier is usually unique either globally or within an application domain. gml:identifier is a pre-defined property for such identifiers.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":identifier.
    gml__CodeWithAuthorityType*          identifier                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The gml:name property provides a label or identifier for the object, commonly a descriptive name. An object may have several names, typically assigned by different authorities. gml:name uses the gml:CodeType content model. The authority for a name is indicated by the value of its (optional) codeSpace attribute. The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace. In common usage there will be one name per authority, so a processing application may select the name from its preferred codeSpace.
/// </BLOCKQUOTE></PRE>
/// Vector of gml__CodeType* element refs of length 0..unbounded.
    std::vector<gml__CodeType*         > name                           0;
//  END OF GROUP
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":id.
/// <PRE><BLOCKQUOTE>
///   The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.
/// </BLOCKQUOTE></PRE>
   @xsd__ID*                             gml__id                        0;	///< Optional attribute.
    END OF INHERITED FROM gml__AbstractGMLType */
/*  INHERITED FROM gml__AbstractGeometryType:
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":SRSReferenceGroup">.
/// Attribute "srsName" of XSD type xs:anyURI.
   @xsd__anyURI*                         srsName                        0;	///< Optional attribute.
/// Attribute "srsDimension" of XSD type xs:positiveInteger.
   @xsd__positiveInteger*                srsDimension                   0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":SRSInformationGroup">.
/// Attribute "axisLabels" of XSD type "http://www.opengis.net/gml/3.2":NCNameList.
   @gml__NCNameList*                     axisLabels                     0;	///< Optional attribute.
/// Attribute "uomLabels" of XSD type "http://www.opengis.net/gml/3.2":NCNameList.
   @gml__NCNameList*                     uomLabels                      0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
    END OF INHERITED FROM gml__AbstractGeometryType */
/*  INHERITED FROM gml__AbstractGeometricPrimitiveType:
    END OF INHERITED FROM gml__AbstractGeometricPrimitiveType */
/*  INHERITED FROM gml__AbstractCurveType:
    END OF INHERITED FROM gml__AbstractCurveType */
/*  INHERITED FROM gml__AbstractRingType:
    END OF INHERITED FROM gml__AbstractRingType */
/// Vector of gml__CurvePropertyType* element refs of length 1..unbounded.
    std::vector<gml__CurvePropertyType*> curveMember                    1;
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":AggregationAttributeGroup">.
/// Attribute "aggregationType" of XSD type "http://www.opengis.net/gml/3.2":AggregationType.
   @enum gml__AggregationType*           aggregationType                0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.opengis.net/gml/3.2":TinType is a complexType with complexContent extension of XSD type "http://www.opengis.net/gml/3.2":SurfaceType.
///
/// class gml__TinType operations:
/// - gml__TinType* soap_new_gml__TinType(soap*) allocate and default initialize
/// - gml__TinType* soap_new_gml__TinType(soap*, int num) allocate array and default initialize values
/// - gml__TinType* soap_new_req_gml__TinType(soap*, ...) allocate, set required members
/// - gml__TinType* soap_new_set_gml__TinType(soap*, ...) allocate, set all public members
/// - gml__TinType::soap_default(soap*) default initialize members
/// - int soap_read_gml__TinType(soap*, gml__TinType*) deserialize from a stream
/// - int soap_write_gml__TinType(soap*, gml__TinType*) serialize to a stream
/// - gml__TinType* gml__TinType::soap_dup(soap*) returns deep copy of gml__TinType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__TinType::soap_del() deep deletes gml__TinType data members, use only after gml__TinType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__TinType : public gml__SurfaceType
{ public:
/*  INHERITED FROM gml__AbstractGMLType:
//  BEGIN GROUP <xs:group name="StandardObjectProperties">
/// Vector of gml__MetaDataPropertyType* element refs of length 0..unbounded.
    std::vector<gml__MetaDataPropertyType*> metaDataProperty               0;
/// <PRE><BLOCKQUOTE>
///   The value of this property is a text description of the object. gml:description uses gml:StringOrRefType as its content model, so it may contain a simple text string content, or carry a reference to an external description. The use of gml:description to reference an external description has been deprecated and replaced by the gml:descriptionReference property.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":description.
    gml__StringOrRefType*                description                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The value of this property is a remote text description of the object. The xlink:href attribute of the gml:descriptionReference property references the external description.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":descriptionReference.
    gml__ReferenceType*                  descriptionReference           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Often, a special identifier is assigned to an object by the maintaining authority with the intention that it is used in references to the object For such cases, the codeSpace shall be provided. That identifier is usually unique either globally or within an application domain. gml:identifier is a pre-defined property for such identifiers.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":identifier.
    gml__CodeWithAuthorityType*          identifier                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The gml:name property provides a label or identifier for the object, commonly a descriptive name. An object may have several names, typically assigned by different authorities. gml:name uses the gml:CodeType content model. The authority for a name is indicated by the value of its (optional) codeSpace attribute. The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace. In common usage there will be one name per authority, so a processing application may select the name from its preferred codeSpace.
/// </BLOCKQUOTE></PRE>
/// Vector of gml__CodeType* element refs of length 0..unbounded.
    std::vector<gml__CodeType*         > name                           0;
//  END OF GROUP
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":id.
/// <PRE><BLOCKQUOTE>
///   The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.
/// </BLOCKQUOTE></PRE>
   @xsd__ID*                             gml__id                        0;	///< Optional attribute.
    END OF INHERITED FROM gml__AbstractGMLType */
/*  INHERITED FROM gml__AbstractGeometryType:
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":SRSReferenceGroup">.
/// Attribute "srsName" of XSD type xs:anyURI.
   @xsd__anyURI*                         srsName                        0;	///< Optional attribute.
/// Attribute "srsDimension" of XSD type xs:positiveInteger.
   @xsd__positiveInteger*                srsDimension                   0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":SRSInformationGroup">.
/// Attribute "axisLabels" of XSD type "http://www.opengis.net/gml/3.2":NCNameList.
   @gml__NCNameList*                     axisLabels                     0;	///< Optional attribute.
/// Attribute "uomLabels" of XSD type "http://www.opengis.net/gml/3.2":NCNameList.
   @gml__NCNameList*                     uomLabels                      0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
    END OF INHERITED FROM gml__AbstractGeometryType */
/*  INHERITED FROM gml__AbstractGeometricPrimitiveType:
    END OF INHERITED FROM gml__AbstractGeometricPrimitiveType */
/*  INHERITED FROM gml__AbstractSurfaceType:
    END OF INHERITED FROM gml__AbstractSurfaceType */
/*  INHERITED FROM gml__SurfaceType:
/// <PRE><BLOCKQUOTE>
///   The patches property element contains the sequence of surface patches. The order of the elements is significant and shall be preserved when processing the array.
/// </BLOCKQUOTE></PRE>
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="patches"> with global elements <polygonPatches> <trianglePatches>
   $int                                  __unionpatches                ;	///< Union _gml__union_TinType selector: set to SOAP_UNION__gml__union_TinType_<fieldname>
/// Union for substitutionGroup gml__patches.
    union _gml__union_TinType
    {
/// <PRE><BLOCKQUOTE>
///   The patches property element contains the sequence of surface patches. The order of the elements is significant and shall be preserved when processing the array.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":patches.
    gml__SurfacePatchArrayPropertyType*  patches                        nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.opengis.net/gml/3.2":polygonPatches.
    gml__SurfacePatchArrayPropertyType*  polygonPatches                 nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.opengis.net/gml/3.2":trianglePatches.
    gml__SurfacePatchArrayPropertyType*  trianglePatches                nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_TinType                 ;
//  END OF SUBSTITUTIONS
    END OF INHERITED FROM gml__SurfaceType */
/// Vector of gml__LineStringSegmentArrayPropertyType* of length 0..unbounded.
    std::vector<gml__LineStringSegmentArrayPropertyType*> stopLines                      0;
/// Vector of gml__LineStringSegmentArrayPropertyType* of length 0..unbounded.
    std::vector<gml__LineStringSegmentArrayPropertyType*> breakLines                     0;
/// Element "maxLength" of XSD type "http://www.opengis.net/gml/3.2":LengthType.
    gml__LengthType*                     maxLength                      1;	///< Required element.
/// class _gml__TinType_controlPoint operations:
/// - _gml__TinType_controlPoint* soap_new__gml__TinType_controlPoint(soap*) allocate and default initialize
/// - _gml__TinType_controlPoint* soap_new__gml__TinType_controlPoint(soap*, int num) allocate array and default initialize values
/// - _gml__TinType_controlPoint* soap_new_req__gml__TinType_controlPoint(soap*, ...) allocate, set required members
/// - _gml__TinType_controlPoint* soap_new_set__gml__TinType_controlPoint(soap*, ...) allocate, set all public members
/// - _gml__TinType_controlPoint::soap_default(soap*) default initialize members
/// - int soap_read__gml__TinType_controlPoint(soap*, _gml__TinType_controlPoint*) deserialize from a stream
/// - int soap_write__gml__TinType_controlPoint(soap*, _gml__TinType_controlPoint*) serialize to a stream
/// - _gml__TinType_controlPoint* _gml__TinType_controlPoint::soap_dup(soap*) returns deep copy of _gml__TinType_controlPoint, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _gml__TinType_controlPoint::soap_del() deep deletes _gml__TinType_controlPoint data members, use only after _gml__TinType_controlPoint::soap_dup(NULL) (use soapcpp2 -Ed)
    class _gml__TinType_controlPoint
    {
//  BEGIN CHOICE <xs:choice>
/// @note <xs:choice> with embedded <xs:sequence> or <xs:group> prevents the use of a union for <xs:choice>. Instead of being members of a union, the following members are declared optional. Only one member should be non-NULL by choice.
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":posList.
    gml__DirectPositionListType*         posList                        nullptr;	///< Required nillable (xsi:nil when NULL) element.
//  BEGIN GROUP <xs:group name="geometricPositionGroup" minOccurs="3" maxOccurs="unbounded">
/// <PRE><BLOCKQUOTE>
///   GML supports two different ways to specify a geometric position: either by a direct position (a data type) or a point (a geometric object).
///   pos elements are positions that are "owned" by the geometric primitive encapsulating this geometric position.
///   pointProperty elements contain a point that may be referenced from other geometry elements or reference another point defined elsewhere (reuse of existing points).
/// </BLOCKQUOTE></PRE>
//  BEGIN CHOICE <xs:choice minOccurs="3" maxOccurs="unbounded">
   $int                                  __size_TinType_controlPoint_   3;
    class __gml__union_TinType_controlPoint_
    {
   $int                                  __union_TinType_controlPoint_  3;	///< Union _gml__union_TinType_controlPoint_ selector: set to SOAP_UNION__gml__union_TinType_controlPoint__<fieldname>
    union _gml__union_TinType_controlPoint_
    {
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":pos.
    gml__DirectPositionType*             pos                            nullptr;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   This property element either references a point via the XLink-attributes or contains the point element. pointProperty is the predefined property which may be used by GML Application Schemas whenever a GML feature has a property with a value that is substitutable for Point.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":pointProperty.
    gml__PointPropertyType*              pointProperty                  nullptr;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_TinType_controlPoint_   ;
    }                                   *__union_TinType_controlPoint_ ;
//  END OF CHOICE
//  END OF GROUP
//  END OF CHOICE
    }                                    controlPoint                   1;	///< Required element.
};

/// @brief "http://www.opengis.net/gml/3.2":LinearRingType is a complexType with complexContent extension of XSD type "http://www.opengis.net/gml/3.2":AbstractRingType.
///
/// class gml__LinearRingType operations:
/// - gml__LinearRingType* soap_new_gml__LinearRingType(soap*) allocate and default initialize
/// - gml__LinearRingType* soap_new_gml__LinearRingType(soap*, int num) allocate array and default initialize values
/// - gml__LinearRingType* soap_new_req_gml__LinearRingType(soap*, ...) allocate, set required members
/// - gml__LinearRingType* soap_new_set_gml__LinearRingType(soap*, ...) allocate, set all public members
/// - gml__LinearRingType::soap_default(soap*) default initialize members
/// - int soap_read_gml__LinearRingType(soap*, gml__LinearRingType*) deserialize from a stream
/// - int soap_write_gml__LinearRingType(soap*, gml__LinearRingType*) serialize to a stream
/// - gml__LinearRingType* gml__LinearRingType::soap_dup(soap*) returns deep copy of gml__LinearRingType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__LinearRingType::soap_del() deep deletes gml__LinearRingType data members, use only after gml__LinearRingType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__LinearRingType : public gml__AbstractRingType
{ public:
/*  INHERITED FROM gml__AbstractGMLType:
//  BEGIN GROUP <xs:group name="StandardObjectProperties">
/// Vector of gml__MetaDataPropertyType* element refs of length 0..unbounded.
    std::vector<gml__MetaDataPropertyType*> metaDataProperty               0;
/// <PRE><BLOCKQUOTE>
///   The value of this property is a text description of the object. gml:description uses gml:StringOrRefType as its content model, so it may contain a simple text string content, or carry a reference to an external description. The use of gml:description to reference an external description has been deprecated and replaced by the gml:descriptionReference property.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":description.
    gml__StringOrRefType*                description                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The value of this property is a remote text description of the object. The xlink:href attribute of the gml:descriptionReference property references the external description.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":descriptionReference.
    gml__ReferenceType*                  descriptionReference           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Often, a special identifier is assigned to an object by the maintaining authority with the intention that it is used in references to the object For such cases, the codeSpace shall be provided. That identifier is usually unique either globally or within an application domain. gml:identifier is a pre-defined property for such identifiers.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":identifier.
    gml__CodeWithAuthorityType*          identifier                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The gml:name property provides a label or identifier for the object, commonly a descriptive name. An object may have several names, typically assigned by different authorities. gml:name uses the gml:CodeType content model. The authority for a name is indicated by the value of its (optional) codeSpace attribute. The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace. In common usage there will be one name per authority, so a processing application may select the name from its preferred codeSpace.
/// </BLOCKQUOTE></PRE>
/// Vector of gml__CodeType* element refs of length 0..unbounded.
    std::vector<gml__CodeType*         > name                           0;
//  END OF GROUP
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":id.
/// <PRE><BLOCKQUOTE>
///   The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.
/// </BLOCKQUOTE></PRE>
   @xsd__ID*                             gml__id                        0;	///< Optional attribute.
    END OF INHERITED FROM gml__AbstractGMLType */
/*  INHERITED FROM gml__AbstractGeometryType:
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":SRSReferenceGroup">.
/// Attribute "srsName" of XSD type xs:anyURI.
   @xsd__anyURI*                         srsName                        0;	///< Optional attribute.
/// Attribute "srsDimension" of XSD type xs:positiveInteger.
   @xsd__positiveInteger*                srsDimension                   0;	///< Optional attribute.
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":SRSInformationGroup">.
/// Attribute "axisLabels" of XSD type "http://www.opengis.net/gml/3.2":NCNameList.
   @gml__NCNameList*                     axisLabels                     0;	///< Optional attribute.
/// Attribute "uomLabels" of XSD type "http://www.opengis.net/gml/3.2":NCNameList.
   @gml__NCNameList*                     uomLabels                      0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
//  END OF ATTRIBUTEGROUP
    END OF INHERITED FROM gml__AbstractGeometryType */
/*  INHERITED FROM gml__AbstractGeometricPrimitiveType:
    END OF INHERITED FROM gml__AbstractGeometricPrimitiveType */
/*  INHERITED FROM gml__AbstractCurveType:
    END OF INHERITED FROM gml__AbstractCurveType */
/*  INHERITED FROM gml__AbstractRingType:
    END OF INHERITED FROM gml__AbstractRingType */
//  BEGIN CHOICE <xs:choice>
   $int                                  __union_LinearRingType        ;	///< Union _gml__union_LinearRingType selector: set to SOAP_UNION__gml__union_LinearRingType_<fieldname>
    union _gml__union_LinearRingType
    {
//  BEGIN CHOICE <xs:choice minOccurs="4" maxOccurs="unbounded">
    struct ___gml__union_LinearRingType_
    {
   $int                                  __size_LinearRingType_         4;
    class __gml__union_LinearRingType_
    {
   $int                                  __union_LinearRingType_        4;	///< Union _gml__union_LinearRingType_ selector: set to SOAP_UNION__gml__union_LinearRingType__<fieldname>
    union _gml__union_LinearRingType_
    {
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":pos.
    gml__DirectPositionType*             pos                            nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   This property element either references a point via the XLink-attributes or contains the point element. pointProperty is the predefined property which may be used by GML Application Schemas whenever a GML feature has a property with a value that is substitutable for Point.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":pointProperty.
    gml__PointPropertyType*              pointProperty                  nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":pointRep.
    gml__PointPropertyType*              pointRep                       nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_LinearRingType_         ;
    }                                   *__union_LinearRingType_       ;
    }                                    __union_LinearRingType_       ;
//  END OF CHOICE
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":posList.
    gml__DirectPositionListType*         posList                        nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":coordinates.
    gml__CoordinatesType*                coordinates                    nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_LinearRingType          ;
//  END OF CHOICE
};

/// @brief "http://www.opengis.net/gml/3.2":AbstractGeneralDerivedCRSType is an abstract complexType with complexContent extension of XSD type "http://www.opengis.net/gml/3.2":AbstractCRSType.
///
/// class gml__AbstractGeneralDerivedCRSType operations:
/// - gml__AbstractGeneralDerivedCRSType* soap_new_gml__AbstractGeneralDerivedCRSType(soap*) allocate and default initialize
/// - gml__AbstractGeneralDerivedCRSType* soap_new_gml__AbstractGeneralDerivedCRSType(soap*, int num) allocate array and default initialize values
/// - gml__AbstractGeneralDerivedCRSType* soap_new_req_gml__AbstractGeneralDerivedCRSType(soap*, ...) allocate, set required members
/// - gml__AbstractGeneralDerivedCRSType* soap_new_set_gml__AbstractGeneralDerivedCRSType(soap*, ...) allocate, set all public members
/// - gml__AbstractGeneralDerivedCRSType::soap_default(soap*) default initialize members
/// - int soap_read_gml__AbstractGeneralDerivedCRSType(soap*, gml__AbstractGeneralDerivedCRSType*) deserialize from a stream
/// - int soap_write_gml__AbstractGeneralDerivedCRSType(soap*, gml__AbstractGeneralDerivedCRSType*) serialize to a stream
/// - gml__AbstractGeneralDerivedCRSType* gml__AbstractGeneralDerivedCRSType::soap_dup(soap*) returns deep copy of gml__AbstractGeneralDerivedCRSType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__AbstractGeneralDerivedCRSType::soap_del() deep deletes gml__AbstractGeneralDerivedCRSType data members, use only after gml__AbstractGeneralDerivedCRSType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__AbstractGeneralDerivedCRSType : public gml__AbstractCRSType
{ public:
/*  INHERITED FROM gml__DefinitionBaseType:
    END OF INHERITED FROM gml__DefinitionBaseType */
/*  INHERITED FROM gml__DefinitionType:
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":remarks.
    std::string*                         remarks                        0;	///< Optional element.
    END OF INHERITED FROM gml__DefinitionType */
/*  INHERITED FROM gml__IdentifiedObjectType:
    END OF INHERITED FROM gml__IdentifiedObjectType */
/*  INHERITED FROM gml__AbstractCRSType:
/// <PRE><BLOCKQUOTE>
///   The gml:domainOfValidity property implements an association role to an EX_Extent object as encoded in ISO/TS 19139, either referencing or containing the definition of that extent.
/// </BLOCKQUOTE></PRE>
/// Vector of _gml__domainOfValidity* element refs of length 0..unbounded.
    std::vector<_gml__domainOfValidity*> domainOfValidity               0;
/// <PRE><BLOCKQUOTE>
///   The gml:scope property provides a description of the usage, or limitations of usage, for which this CRS-related object is valid. If unknown, enter "not known".
/// </BLOCKQUOTE></PRE>
/// Vector of std::string element refs of length 1..unbounded.
    std::vector<std::string            > scope                          1;
    END OF INHERITED FROM gml__AbstractCRSType */
/// <PRE><BLOCKQUOTE>
///   gml:conversion is an association role to the coordinate conversion used to define the derived CRS.
/// </BLOCKQUOTE></PRE>
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="conversion"> with global elements <definedByConversion>
   $int                                  __unionconversion             ;	///< Union _gml__union_AbstractGeneralDerivedCRSType selector: set to SOAP_UNION__gml__union_AbstractGeneralDerivedCRSType_<fieldname>
/// Union for substitutionGroup gml__conversion.
    union _gml__union_AbstractGeneralDerivedCRSType
    {
/// <PRE><BLOCKQUOTE>
///   gml:conversion is an association role to the coordinate conversion used to define the derived CRS.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":conversion.
    gml__GeneralConversionPropertyType*  conversion                     nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.opengis.net/gml/3.2":definedByConversion.
    gml__GeneralConversionPropertyType*  definedByConversion            nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_AbstractGeneralDerivedCRSType;
//  END OF SUBSTITUTIONS
};

/// @brief "http://www.opengis.net/gml/3.2":CompoundCRSType is a complexType with complexContent extension of XSD type "http://www.opengis.net/gml/3.2":AbstractCRSType.
///
/// class gml__CompoundCRSType operations:
/// - gml__CompoundCRSType* soap_new_gml__CompoundCRSType(soap*) allocate and default initialize
/// - gml__CompoundCRSType* soap_new_gml__CompoundCRSType(soap*, int num) allocate array and default initialize values
/// - gml__CompoundCRSType* soap_new_req_gml__CompoundCRSType(soap*, ...) allocate, set required members
/// - gml__CompoundCRSType* soap_new_set_gml__CompoundCRSType(soap*, ...) allocate, set all public members
/// - gml__CompoundCRSType::soap_default(soap*) default initialize members
/// - int soap_read_gml__CompoundCRSType(soap*, gml__CompoundCRSType*) deserialize from a stream
/// - int soap_write_gml__CompoundCRSType(soap*, gml__CompoundCRSType*) serialize to a stream
/// - gml__CompoundCRSType* gml__CompoundCRSType::soap_dup(soap*) returns deep copy of gml__CompoundCRSType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__CompoundCRSType::soap_del() deep deletes gml__CompoundCRSType data members, use only after gml__CompoundCRSType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__CompoundCRSType : public gml__AbstractCRSType
{ public:
/*  INHERITED FROM gml__DefinitionBaseType:
    END OF INHERITED FROM gml__DefinitionBaseType */
/*  INHERITED FROM gml__DefinitionType:
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":remarks.
    std::string*                         remarks                        0;	///< Optional element.
    END OF INHERITED FROM gml__DefinitionType */
/*  INHERITED FROM gml__IdentifiedObjectType:
    END OF INHERITED FROM gml__IdentifiedObjectType */
/*  INHERITED FROM gml__AbstractCRSType:
/// <PRE><BLOCKQUOTE>
///   The gml:domainOfValidity property implements an association role to an EX_Extent object as encoded in ISO/TS 19139, either referencing or containing the definition of that extent.
/// </BLOCKQUOTE></PRE>
/// Vector of _gml__domainOfValidity* element refs of length 0..unbounded.
    std::vector<_gml__domainOfValidity*> domainOfValidity               0;
/// <PRE><BLOCKQUOTE>
///   The gml:scope property provides a description of the usage, or limitations of usage, for which this CRS-related object is valid. If unknown, enter "not known".
/// </BLOCKQUOTE></PRE>
/// Vector of std::string element refs of length 1..unbounded.
    std::vector<std::string            > scope                          1;
    END OF INHERITED FROM gml__AbstractCRSType */
/// <PRE><BLOCKQUOTE>
///   The gml:componentReferenceSystem elements are an ordered sequence of associations to all the component coordinate reference systems included in this compound coordinate reference system. The gml:AggregationAttributeGroup should be used to specify that the gml:componentReferenceSystem properties are ordered.
/// </BLOCKQUOTE></PRE>
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="componentReferenceSystem" minOccurs="2" maxOccurs="unbounded"> with global elements <includesSingleCRS>
   $int                                  __sizecomponentReferenceSystem 2;
    class __gml__union_CompoundCRSType
    {
   $int                                  __unioncomponentReferenceSystem 2;	///< Union _gml__union_CompoundCRSType selector: set to SOAP_UNION__gml__union_CompoundCRSType_<fieldname>
/// Union for substitutionGroup gml__componentReferenceSystem.
    union _gml__union_CompoundCRSType
    {
/// <PRE><BLOCKQUOTE>
///   The gml:componentReferenceSystem elements are an ordered sequence of associations to all the component coordinate reference systems included in this compound coordinate reference system. The gml:AggregationAttributeGroup should be used to specify that the gml:componentReferenceSystem properties are ordered.
/// </BLOCKQUOTE></PRE>
/// Vector of gml__SingleCRSPropertyType* element refs of length 2..unbounded.
    std::vector<gml__SingleCRSPropertyType*> *componentReferenceSystem       2;
/// Element "http://www.opengis.net/gml/3.2":includesSingleCRS.
    gml__SingleCRSPropertyType*          includesSingleCRS              nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_CompoundCRSType         ;
    }                                   *__union_CompoundCRSType       ;
//  END OF SUBSTITUTIONS
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":AggregationAttributeGroup">.
/// Attribute "aggregationType" of XSD type "http://www.opengis.net/gml/3.2":AggregationType.
   @enum gml__AggregationType*           aggregationType                0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.opengis.net/gml/3.2":GeodeticCRSType is a complexType with complexContent extension of XSD type "http://www.opengis.net/gml/3.2":AbstractCRSType.
///
/// <PRE><BLOCKQUOTE>
///   gml:GeodeticCRS is a coordinate reference system based on a geodetic datum.
/// </BLOCKQUOTE></PRE>
/// class gml__GeodeticCRSType operations:
/// - gml__GeodeticCRSType* soap_new_gml__GeodeticCRSType(soap*) allocate and default initialize
/// - gml__GeodeticCRSType* soap_new_gml__GeodeticCRSType(soap*, int num) allocate array and default initialize values
/// - gml__GeodeticCRSType* soap_new_req_gml__GeodeticCRSType(soap*, ...) allocate, set required members
/// - gml__GeodeticCRSType* soap_new_set_gml__GeodeticCRSType(soap*, ...) allocate, set all public members
/// - gml__GeodeticCRSType::soap_default(soap*) default initialize members
/// - int soap_read_gml__GeodeticCRSType(soap*, gml__GeodeticCRSType*) deserialize from a stream
/// - int soap_write_gml__GeodeticCRSType(soap*, gml__GeodeticCRSType*) serialize to a stream
/// - gml__GeodeticCRSType* gml__GeodeticCRSType::soap_dup(soap*) returns deep copy of gml__GeodeticCRSType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__GeodeticCRSType::soap_del() deep deletes gml__GeodeticCRSType data members, use only after gml__GeodeticCRSType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__GeodeticCRSType : public gml__AbstractCRSType
{ public:
/*  INHERITED FROM gml__DefinitionBaseType:
    END OF INHERITED FROM gml__DefinitionBaseType */
/*  INHERITED FROM gml__DefinitionType:
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":remarks.
    std::string*                         remarks                        0;	///< Optional element.
    END OF INHERITED FROM gml__DefinitionType */
/*  INHERITED FROM gml__IdentifiedObjectType:
    END OF INHERITED FROM gml__IdentifiedObjectType */
/*  INHERITED FROM gml__AbstractCRSType:
/// <PRE><BLOCKQUOTE>
///   The gml:domainOfValidity property implements an association role to an EX_Extent object as encoded in ISO/TS 19139, either referencing or containing the definition of that extent.
/// </BLOCKQUOTE></PRE>
/// Vector of _gml__domainOfValidity* element refs of length 0..unbounded.
    std::vector<_gml__domainOfValidity*> domainOfValidity               0;
/// <PRE><BLOCKQUOTE>
///   The gml:scope property provides a description of the usage, or limitations of usage, for which this CRS-related object is valid. If unknown, enter "not known".
/// </BLOCKQUOTE></PRE>
/// Vector of std::string element refs of length 1..unbounded.
    std::vector<std::string            > scope                          1;
    END OF INHERITED FROM gml__AbstractCRSType */
//  BEGIN CHOICE <xs:choice>
   $int                                  __union_GeodeticCRSType       ;	///< Union _gml__union_GeodeticCRSType selector: set to SOAP_UNION__gml__union_GeodeticCRSType_<fieldname>
    union _gml__union_GeodeticCRSType
    {
/// <PRE><BLOCKQUOTE>
///   gml:ellipsoidalCS is an association role to the ellipsoidal coordinate system used by this CRS.
/// </BLOCKQUOTE></PRE>
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="ellipsoidalCS"> with global elements <usesEllipsoidalCS>
/// <PRE><BLOCKQUOTE>
///   gml:ellipsoidalCS is an association role to the ellipsoidal coordinate system used by this CRS.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":ellipsoidalCS.
    gml__EllipsoidalCSPropertyType*      ellipsoidalCS                  nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.opengis.net/gml/3.2":usesEllipsoidalCS.
    gml__EllipsoidalCSPropertyType*      usesEllipsoidalCS              nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
//  END OF SUBSTITUTIONS
/// <PRE><BLOCKQUOTE>
///   gml:cartesianCS is an association role to the Cartesian coordinate system used by this CRS.
/// </BLOCKQUOTE></PRE>
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="cartesianCS"> with global elements <usesCartesianCS>
/// <PRE><BLOCKQUOTE>
///   gml:cartesianCS is an association role to the Cartesian coordinate system used by this CRS.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":cartesianCS.
    gml__CartesianCSPropertyType*        cartesianCS                    nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.opengis.net/gml/3.2":usesCartesianCS.
    gml__CartesianCSPropertyType*        usesCartesianCS                nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
//  END OF SUBSTITUTIONS
/// <PRE><BLOCKQUOTE>
///   gml:sphericalCS is an association role to the spherical coordinate system used by this CRS.
/// </BLOCKQUOTE></PRE>
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="sphericalCS"> with global elements <usesSphericalCS>
/// <PRE><BLOCKQUOTE>
///   gml:sphericalCS is an association role to the spherical coordinate system used by this CRS.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":sphericalCS.
    gml__SphericalCSPropertyType*        sphericalCS                    nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.opengis.net/gml/3.2":usesSphericalCS.
    gml__SphericalCSPropertyType*        usesSphericalCS                nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
//  END OF SUBSTITUTIONS
    }                                    union_GeodeticCRSType         ;
//  END OF CHOICE
/// <PRE><BLOCKQUOTE>
///   gml:geodeticDatum is an association role to the geodetic datum used by this CRS.
/// </BLOCKQUOTE></PRE>
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="geodeticDatum"> with global elements <usesGeodeticDatum>
   $int                                  __uniongeodeticDatum          ;	///< Union _gml__union_GeodeticCRSType____ selector: set to SOAP_UNION__gml__union_GeodeticCRSType_____<fieldname>
/// Union for substitutionGroup gml__geodeticDatum.
    union _gml__union_GeodeticCRSType____
    {
/// <PRE><BLOCKQUOTE>
///   gml:geodeticDatum is an association role to the geodetic datum used by this CRS.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":geodeticDatum.
    gml__GeodeticDatumPropertyType*      geodeticDatum                  nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.opengis.net/gml/3.2":usesGeodeticDatum.
    gml__GeodeticDatumPropertyType*      usesGeodeticDatum              nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_GeodeticCRSType____     ;
//  END OF SUBSTITUTIONS
};

/// @brief "http://www.opengis.net/gml/3.2":VerticalCRSType is a complexType with complexContent extension of XSD type "http://www.opengis.net/gml/3.2":AbstractCRSType.
///
/// class gml__VerticalCRSType operations:
/// - gml__VerticalCRSType* soap_new_gml__VerticalCRSType(soap*) allocate and default initialize
/// - gml__VerticalCRSType* soap_new_gml__VerticalCRSType(soap*, int num) allocate array and default initialize values
/// - gml__VerticalCRSType* soap_new_req_gml__VerticalCRSType(soap*, ...) allocate, set required members
/// - gml__VerticalCRSType* soap_new_set_gml__VerticalCRSType(soap*, ...) allocate, set all public members
/// - gml__VerticalCRSType::soap_default(soap*) default initialize members
/// - int soap_read_gml__VerticalCRSType(soap*, gml__VerticalCRSType*) deserialize from a stream
/// - int soap_write_gml__VerticalCRSType(soap*, gml__VerticalCRSType*) serialize to a stream
/// - gml__VerticalCRSType* gml__VerticalCRSType::soap_dup(soap*) returns deep copy of gml__VerticalCRSType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__VerticalCRSType::soap_del() deep deletes gml__VerticalCRSType data members, use only after gml__VerticalCRSType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__VerticalCRSType : public gml__AbstractCRSType
{ public:
/*  INHERITED FROM gml__DefinitionBaseType:
    END OF INHERITED FROM gml__DefinitionBaseType */
/*  INHERITED FROM gml__DefinitionType:
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":remarks.
    std::string*                         remarks                        0;	///< Optional element.
    END OF INHERITED FROM gml__DefinitionType */
/*  INHERITED FROM gml__IdentifiedObjectType:
    END OF INHERITED FROM gml__IdentifiedObjectType */
/*  INHERITED FROM gml__AbstractCRSType:
/// <PRE><BLOCKQUOTE>
///   The gml:domainOfValidity property implements an association role to an EX_Extent object as encoded in ISO/TS 19139, either referencing or containing the definition of that extent.
/// </BLOCKQUOTE></PRE>
/// Vector of _gml__domainOfValidity* element refs of length 0..unbounded.
    std::vector<_gml__domainOfValidity*> domainOfValidity               0;
/// <PRE><BLOCKQUOTE>
///   The gml:scope property provides a description of the usage, or limitations of usage, for which this CRS-related object is valid. If unknown, enter "not known".
/// </BLOCKQUOTE></PRE>
/// Vector of std::string element refs of length 1..unbounded.
    std::vector<std::string            > scope                          1;
    END OF INHERITED FROM gml__AbstractCRSType */
/// <PRE><BLOCKQUOTE>
///   gml:verticalCS is an association role to the vertical coordinate system used by this CRS.
/// </BLOCKQUOTE></PRE>
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="verticalCS"> with global elements <usesVerticalCS>
   $int                                  __unionverticalCS             ;	///< Union _gml__union_VerticalCRSType selector: set to SOAP_UNION__gml__union_VerticalCRSType_<fieldname>
/// Union for substitutionGroup gml__verticalCS.
    union _gml__union_VerticalCRSType
    {
/// <PRE><BLOCKQUOTE>
///   gml:verticalCS is an association role to the vertical coordinate system used by this CRS.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":verticalCS.
    gml__VerticalCSPropertyType*         verticalCS                     nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.opengis.net/gml/3.2":usesVerticalCS.
    gml__VerticalCSPropertyType*         usesVerticalCS                 nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_VerticalCRSType         ;
//  END OF SUBSTITUTIONS
/// <PRE><BLOCKQUOTE>
///   gml:verticalDatum is an association role to the vertical datum used by this CRS.
/// </BLOCKQUOTE></PRE>
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="verticalDatum"> with global elements <usesVerticalDatum>
   $int                                  __unionverticalDatum          ;	///< Union _gml__union_VerticalCRSType_ selector: set to SOAP_UNION__gml__union_VerticalCRSType__<fieldname>
/// Union for substitutionGroup gml__verticalDatum.
    union _gml__union_VerticalCRSType_
    {
/// <PRE><BLOCKQUOTE>
///   gml:verticalDatum is an association role to the vertical datum used by this CRS.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":verticalDatum.
    gml__VerticalDatumPropertyType*      verticalDatum                  nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.opengis.net/gml/3.2":usesVerticalDatum.
    gml__VerticalDatumPropertyType*      usesVerticalDatum              nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_VerticalCRSType_        ;
//  END OF SUBSTITUTIONS
};

/// @brief "http://www.opengis.net/gml/3.2":EngineeringCRSType is a complexType with complexContent extension of XSD type "http://www.opengis.net/gml/3.2":AbstractCRSType.
///
/// class gml__EngineeringCRSType operations:
/// - gml__EngineeringCRSType* soap_new_gml__EngineeringCRSType(soap*) allocate and default initialize
/// - gml__EngineeringCRSType* soap_new_gml__EngineeringCRSType(soap*, int num) allocate array and default initialize values
/// - gml__EngineeringCRSType* soap_new_req_gml__EngineeringCRSType(soap*, ...) allocate, set required members
/// - gml__EngineeringCRSType* soap_new_set_gml__EngineeringCRSType(soap*, ...) allocate, set all public members
/// - gml__EngineeringCRSType::soap_default(soap*) default initialize members
/// - int soap_read_gml__EngineeringCRSType(soap*, gml__EngineeringCRSType*) deserialize from a stream
/// - int soap_write_gml__EngineeringCRSType(soap*, gml__EngineeringCRSType*) serialize to a stream
/// - gml__EngineeringCRSType* gml__EngineeringCRSType::soap_dup(soap*) returns deep copy of gml__EngineeringCRSType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__EngineeringCRSType::soap_del() deep deletes gml__EngineeringCRSType data members, use only after gml__EngineeringCRSType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__EngineeringCRSType : public gml__AbstractCRSType
{ public:
/*  INHERITED FROM gml__DefinitionBaseType:
    END OF INHERITED FROM gml__DefinitionBaseType */
/*  INHERITED FROM gml__DefinitionType:
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":remarks.
    std::string*                         remarks                        0;	///< Optional element.
    END OF INHERITED FROM gml__DefinitionType */
/*  INHERITED FROM gml__IdentifiedObjectType:
    END OF INHERITED FROM gml__IdentifiedObjectType */
/*  INHERITED FROM gml__AbstractCRSType:
/// <PRE><BLOCKQUOTE>
///   The gml:domainOfValidity property implements an association role to an EX_Extent object as encoded in ISO/TS 19139, either referencing or containing the definition of that extent.
/// </BLOCKQUOTE></PRE>
/// Vector of _gml__domainOfValidity* element refs of length 0..unbounded.
    std::vector<_gml__domainOfValidity*> domainOfValidity               0;
/// <PRE><BLOCKQUOTE>
///   The gml:scope property provides a description of the usage, or limitations of usage, for which this CRS-related object is valid. If unknown, enter "not known".
/// </BLOCKQUOTE></PRE>
/// Vector of std::string element refs of length 1..unbounded.
    std::vector<std::string            > scope                          1;
    END OF INHERITED FROM gml__AbstractCRSType */
//  BEGIN CHOICE <xs:choice>
   $int                                  __union_EngineeringCRSType    ;	///< Union _gml__union_EngineeringCRSType selector: set to SOAP_UNION__gml__union_EngineeringCRSType_<fieldname>
    union _gml__union_EngineeringCRSType
    {
/// <PRE><BLOCKQUOTE>
///   gml:affineCS is an association role to the affine coordinate system used by this CRS.
/// </BLOCKQUOTE></PRE>
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="affineCS"> with global elements <usesAffineCS>
/// <PRE><BLOCKQUOTE>
///   gml:affineCS is an association role to the affine coordinate system used by this CRS.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":affineCS.
    gml__AffineCSPropertyType*           affineCS                       nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.opengis.net/gml/3.2":usesAffineCS.
    gml__AffineCSPropertyType*           usesAffineCS                   nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
//  END OF SUBSTITUTIONS
/// <PRE><BLOCKQUOTE>
///   gml:cartesianCS is an association role to the Cartesian coordinate system used by this CRS.
/// </BLOCKQUOTE></PRE>
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="cartesianCS"> with global elements <usesCartesianCS>
/// <PRE><BLOCKQUOTE>
///   gml:cartesianCS is an association role to the Cartesian coordinate system used by this CRS.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":cartesianCS.
    gml__CartesianCSPropertyType*        cartesianCS                    nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.opengis.net/gml/3.2":usesCartesianCS.
    gml__CartesianCSPropertyType*        usesCartesianCS                nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
//  END OF SUBSTITUTIONS
/// <PRE><BLOCKQUOTE>
///   gml:cylindricalCS is an association role to the cylindrical coordinate system used by this CRS.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":cylindricalCS.
    gml__CylindricalCSPropertyType*      cylindricalCS                  nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   gml:linearCS is an association role to the linear coordinate system used by this CRS.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":linearCS.
    gml__LinearCSPropertyType*           linearCS                       nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   gml:polarCS is an association role to the polar coordinate system used by this CRS.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":polarCS.
    gml__PolarCSPropertyType*            polarCS                        nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   gml:sphericalCS is an association role to the spherical coordinate system used by this CRS.
/// </BLOCKQUOTE></PRE>
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="sphericalCS"> with global elements <usesSphericalCS>
/// <PRE><BLOCKQUOTE>
///   gml:sphericalCS is an association role to the spherical coordinate system used by this CRS.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":sphericalCS.
    gml__SphericalCSPropertyType*        sphericalCS                    nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.opengis.net/gml/3.2":usesSphericalCS.
    gml__SphericalCSPropertyType*        usesSphericalCS                nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
//  END OF SUBSTITUTIONS
/// <PRE><BLOCKQUOTE>
///   gml:userDefinedCS is an association role to the user defined coordinate system used by this CRS.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":userDefinedCS.
    gml__UserDefinedCSPropertyType*      userDefinedCS                  nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <PRE><BLOCKQUOTE>
///   An association role to the coordinate system used by this CRS.
/// </BLOCKQUOTE></PRE>
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="coordinateSystem"> with global elements <usesCS>
/// <PRE><BLOCKQUOTE>
///   An association role to the coordinate system used by this CRS.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":coordinateSystem.
    gml__CoordinateSystemPropertyType*   coordinateSystem               nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.opengis.net/gml/3.2":usesCS.
    gml__CoordinateSystemPropertyType*   usesCS                         nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
//  END OF SUBSTITUTIONS
    }                                    union_EngineeringCRSType      ;
//  END OF CHOICE
/// <PRE><BLOCKQUOTE>
///   gml:engineeringDatum is an association role to the engineering datum used by this CRS.
/// </BLOCKQUOTE></PRE>
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="engineeringDatum"> with global elements <usesEngineeringDatum>
   $int                                  __unionengineeringDatum       ;	///< Union _gml__union_EngineeringCRSType_____ selector: set to SOAP_UNION__gml__union_EngineeringCRSType______<fieldname>
/// Union for substitutionGroup gml__engineeringDatum.
    union _gml__union_EngineeringCRSType_____
    {
/// <PRE><BLOCKQUOTE>
///   gml:engineeringDatum is an association role to the engineering datum used by this CRS.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":engineeringDatum.
    gml__EngineeringDatumPropertyType*   engineeringDatum               nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.opengis.net/gml/3.2":usesEngineeringDatum.
    gml__EngineeringDatumPropertyType*   usesEngineeringDatum           nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_EngineeringCRSType_____ ;
//  END OF SUBSTITUTIONS
};

/// @brief "http://www.opengis.net/gml/3.2":ImageCRSType is a complexType with complexContent extension of XSD type "http://www.opengis.net/gml/3.2":AbstractCRSType.
///
/// class gml__ImageCRSType operations:
/// - gml__ImageCRSType* soap_new_gml__ImageCRSType(soap*) allocate and default initialize
/// - gml__ImageCRSType* soap_new_gml__ImageCRSType(soap*, int num) allocate array and default initialize values
/// - gml__ImageCRSType* soap_new_req_gml__ImageCRSType(soap*, ...) allocate, set required members
/// - gml__ImageCRSType* soap_new_set_gml__ImageCRSType(soap*, ...) allocate, set all public members
/// - gml__ImageCRSType::soap_default(soap*) default initialize members
/// - int soap_read_gml__ImageCRSType(soap*, gml__ImageCRSType*) deserialize from a stream
/// - int soap_write_gml__ImageCRSType(soap*, gml__ImageCRSType*) serialize to a stream
/// - gml__ImageCRSType* gml__ImageCRSType::soap_dup(soap*) returns deep copy of gml__ImageCRSType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__ImageCRSType::soap_del() deep deletes gml__ImageCRSType data members, use only after gml__ImageCRSType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__ImageCRSType : public gml__AbstractCRSType
{ public:
/*  INHERITED FROM gml__DefinitionBaseType:
    END OF INHERITED FROM gml__DefinitionBaseType */
/*  INHERITED FROM gml__DefinitionType:
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":remarks.
    std::string*                         remarks                        0;	///< Optional element.
    END OF INHERITED FROM gml__DefinitionType */
/*  INHERITED FROM gml__IdentifiedObjectType:
    END OF INHERITED FROM gml__IdentifiedObjectType */
/*  INHERITED FROM gml__AbstractCRSType:
/// <PRE><BLOCKQUOTE>
///   The gml:domainOfValidity property implements an association role to an EX_Extent object as encoded in ISO/TS 19139, either referencing or containing the definition of that extent.
/// </BLOCKQUOTE></PRE>
/// Vector of _gml__domainOfValidity* element refs of length 0..unbounded.
    std::vector<_gml__domainOfValidity*> domainOfValidity               0;
/// <PRE><BLOCKQUOTE>
///   The gml:scope property provides a description of the usage, or limitations of usage, for which this CRS-related object is valid. If unknown, enter "not known".
/// </BLOCKQUOTE></PRE>
/// Vector of std::string element refs of length 1..unbounded.
    std::vector<std::string            > scope                          1;
    END OF INHERITED FROM gml__AbstractCRSType */
//  BEGIN CHOICE <xs:choice>
   $int                                  __union_ImageCRSType          ;	///< Union _gml__union_ImageCRSType selector: set to SOAP_UNION__gml__union_ImageCRSType_<fieldname>
    union _gml__union_ImageCRSType
    {
/// <PRE><BLOCKQUOTE>
///   gml:cartesianCS is an association role to the Cartesian coordinate system used by this CRS.
/// </BLOCKQUOTE></PRE>
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="cartesianCS"> with global elements <usesCartesianCS>
/// <PRE><BLOCKQUOTE>
///   gml:cartesianCS is an association role to the Cartesian coordinate system used by this CRS.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":cartesianCS.
    gml__CartesianCSPropertyType*        cartesianCS                    nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.opengis.net/gml/3.2":usesCartesianCS.
    gml__CartesianCSPropertyType*        usesCartesianCS                nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
//  END OF SUBSTITUTIONS
/// <PRE><BLOCKQUOTE>
///   gml:affineCS is an association role to the affine coordinate system used by this CRS.
/// </BLOCKQUOTE></PRE>
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="affineCS"> with global elements <usesAffineCS>
/// <PRE><BLOCKQUOTE>
///   gml:affineCS is an association role to the affine coordinate system used by this CRS.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":affineCS.
    gml__AffineCSPropertyType*           affineCS                       nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.opengis.net/gml/3.2":usesAffineCS.
    gml__AffineCSPropertyType*           usesAffineCS                   nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
//  END OF SUBSTITUTIONS
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":usesObliqueCartesianCS.
    gml__ObliqueCartesianCSPropertyType*  usesObliqueCartesianCS         nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_ImageCRSType            ;
//  END OF CHOICE
/// <PRE><BLOCKQUOTE>
///   gml:imageDatum is an association role to the image datum used by this CRS.
/// </BLOCKQUOTE></PRE>
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="imageDatum"> with global elements <usesImageDatum>
   $int                                  __unionimageDatum             ;	///< Union _gml__union_ImageCRSType___ selector: set to SOAP_UNION__gml__union_ImageCRSType____<fieldname>
/// Union for substitutionGroup gml__imageDatum.
    union _gml__union_ImageCRSType___
    {
/// <PRE><BLOCKQUOTE>
///   gml:imageDatum is an association role to the image datum used by this CRS.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":imageDatum.
    gml__ImageDatumPropertyType*         imageDatum                     nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.opengis.net/gml/3.2":usesImageDatum.
    gml__ImageDatumPropertyType*         usesImageDatum                 nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_ImageCRSType___         ;
//  END OF SUBSTITUTIONS
};

/// @brief "http://www.opengis.net/gml/3.2":TemporalCRSType is a complexType with complexContent extension of XSD type "http://www.opengis.net/gml/3.2":AbstractCRSType.
///
/// class gml__TemporalCRSType operations:
/// - gml__TemporalCRSType* soap_new_gml__TemporalCRSType(soap*) allocate and default initialize
/// - gml__TemporalCRSType* soap_new_gml__TemporalCRSType(soap*, int num) allocate array and default initialize values
/// - gml__TemporalCRSType* soap_new_req_gml__TemporalCRSType(soap*, ...) allocate, set required members
/// - gml__TemporalCRSType* soap_new_set_gml__TemporalCRSType(soap*, ...) allocate, set all public members
/// - gml__TemporalCRSType::soap_default(soap*) default initialize members
/// - int soap_read_gml__TemporalCRSType(soap*, gml__TemporalCRSType*) deserialize from a stream
/// - int soap_write_gml__TemporalCRSType(soap*, gml__TemporalCRSType*) serialize to a stream
/// - gml__TemporalCRSType* gml__TemporalCRSType::soap_dup(soap*) returns deep copy of gml__TemporalCRSType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__TemporalCRSType::soap_del() deep deletes gml__TemporalCRSType data members, use only after gml__TemporalCRSType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__TemporalCRSType : public gml__AbstractCRSType
{ public:
/*  INHERITED FROM gml__DefinitionBaseType:
    END OF INHERITED FROM gml__DefinitionBaseType */
/*  INHERITED FROM gml__DefinitionType:
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":remarks.
    std::string*                         remarks                        0;	///< Optional element.
    END OF INHERITED FROM gml__DefinitionType */
/*  INHERITED FROM gml__IdentifiedObjectType:
    END OF INHERITED FROM gml__IdentifiedObjectType */
/*  INHERITED FROM gml__AbstractCRSType:
/// <PRE><BLOCKQUOTE>
///   The gml:domainOfValidity property implements an association role to an EX_Extent object as encoded in ISO/TS 19139, either referencing or containing the definition of that extent.
/// </BLOCKQUOTE></PRE>
/// Vector of _gml__domainOfValidity* element refs of length 0..unbounded.
    std::vector<_gml__domainOfValidity*> domainOfValidity               0;
/// <PRE><BLOCKQUOTE>
///   The gml:scope property provides a description of the usage, or limitations of usage, for which this CRS-related object is valid. If unknown, enter "not known".
/// </BLOCKQUOTE></PRE>
/// Vector of std::string element refs of length 1..unbounded.
    std::vector<std::string            > scope                          1;
    END OF INHERITED FROM gml__AbstractCRSType */
//  BEGIN CHOICE <xs:choice>
   $int                                  __union_TemporalCRSType       ;	///< Union _gml__union_TemporalCRSType selector: set to SOAP_UNION__gml__union_TemporalCRSType_<fieldname>
    union _gml__union_TemporalCRSType
    {
/// <PRE><BLOCKQUOTE>
///   gml:timeCS is an association role to the time coordinate system used by this CRS.
/// </BLOCKQUOTE></PRE>
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="timeCS"> with global elements <usesTimeCS>
/// <PRE><BLOCKQUOTE>
///   gml:timeCS is an association role to the time coordinate system used by this CRS.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":timeCS.
    gml__TimeCSPropertyType*             timeCS                         nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.opengis.net/gml/3.2":usesTimeCS.
    gml__TimeCSPropertyType*             usesTimeCS                     nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
//  END OF SUBSTITUTIONS
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":usesTemporalCS.
    gml__TemporalCSPropertyType*         usesTemporalCS                 nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_TemporalCRSType         ;
//  END OF CHOICE
/// <PRE><BLOCKQUOTE>
///   gml:temporalDatum is an association role to the temporal datum used by this CRS.
/// </BLOCKQUOTE></PRE>
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="temporalDatum"> with global elements <usesTemporalDatum>
   $int                                  __uniontemporalDatum          ;	///< Union _gml__union_TemporalCRSType__ selector: set to SOAP_UNION__gml__union_TemporalCRSType___<fieldname>
/// Union for substitutionGroup gml__temporalDatum.
    union _gml__union_TemporalCRSType__
    {
/// <PRE><BLOCKQUOTE>
///   gml:temporalDatum is an association role to the temporal datum used by this CRS.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":temporalDatum.
    gml__TemporalDatumPropertyType*      temporalDatum                  nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.opengis.net/gml/3.2":usesTemporalDatum.
    gml__TemporalDatumPropertyType*      usesTemporalDatum              nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_TemporalCRSType__       ;
//  END OF SUBSTITUTIONS
};

/// @brief "http://www.opengis.net/gml/3.2":EllipsoidalCSType is a complexType with complexContent extension of XSD type "http://www.opengis.net/gml/3.2":AbstractCoordinateSystemType.
///
/// class gml__EllipsoidalCSType operations:
/// - gml__EllipsoidalCSType* soap_new_gml__EllipsoidalCSType(soap*) allocate and default initialize
/// - gml__EllipsoidalCSType* soap_new_gml__EllipsoidalCSType(soap*, int num) allocate array and default initialize values
/// - gml__EllipsoidalCSType* soap_new_req_gml__EllipsoidalCSType(soap*, ...) allocate, set required members
/// - gml__EllipsoidalCSType* soap_new_set_gml__EllipsoidalCSType(soap*, ...) allocate, set all public members
/// - gml__EllipsoidalCSType::soap_default(soap*) default initialize members
/// - int soap_read_gml__EllipsoidalCSType(soap*, gml__EllipsoidalCSType*) deserialize from a stream
/// - int soap_write_gml__EllipsoidalCSType(soap*, gml__EllipsoidalCSType*) serialize to a stream
/// - gml__EllipsoidalCSType* gml__EllipsoidalCSType::soap_dup(soap*) returns deep copy of gml__EllipsoidalCSType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__EllipsoidalCSType::soap_del() deep deletes gml__EllipsoidalCSType data members, use only after gml__EllipsoidalCSType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__EllipsoidalCSType : public gml__AbstractCoordinateSystemType
{ public:
/*  INHERITED FROM gml__DefinitionBaseType:
    END OF INHERITED FROM gml__DefinitionBaseType */
/*  INHERITED FROM gml__DefinitionType:
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":remarks.
    std::string*                         remarks                        0;	///< Optional element.
    END OF INHERITED FROM gml__DefinitionType */
/*  INHERITED FROM gml__IdentifiedObjectType:
    END OF INHERITED FROM gml__IdentifiedObjectType */
/*  INHERITED FROM gml__AbstractCoordinateSystemType:
/// <PRE><BLOCKQUOTE>
///   The gml:axis property is an association role (ordered sequence) to the coordinate system axes included in this coordinate system. The coordinate values in a coordinate tuple shall be recorded in the order in which the coordinate system axes associations are recorded, whenever those coordinates use a coordinate reference system that uses this coordinate system. The gml:AggregationAttributeGroup should be used to specify that the axis objects are ordered.
/// </BLOCKQUOTE></PRE>
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="axis" maxOccurs="unbounded"> with global elements <usesAxis>
   $int                                  __sizeaxis                     0;
    class __gml__union_EllipsoidalCSType
    {
   $int                                  __unionaxis                   ;	///< Union _gml__union_EllipsoidalCSType selector: set to SOAP_UNION__gml__union_EllipsoidalCSType_<fieldname>
/// Union for substitutionGroup gml__axis.
    union _gml__union_EllipsoidalCSType
    {
/// <PRE><BLOCKQUOTE>
///   The gml:axis property is an association role (ordered sequence) to the coordinate system axes included in this coordinate system. The coordinate values in a coordinate tuple shall be recorded in the order in which the coordinate system axes associations are recorded, whenever those coordinates use a coordinate reference system that uses this coordinate system. The gml:AggregationAttributeGroup should be used to specify that the axis objects are ordered.
/// </BLOCKQUOTE></PRE>
/// Vector of gml__CoordinateSystemAxisPropertyType* element refs of length 1..unbounded.
    std::vector<gml__CoordinateSystemAxisPropertyType*> *axis                           1;
/// Element "http://www.opengis.net/gml/3.2":usesAxis.
    gml__CoordinateSystemAxisPropertyType*  usesAxis                       nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_EllipsoidalCSType       ;
    }                                   *__union_EllipsoidalCSType     ;
//  END OF SUBSTITUTIONS
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":AggregationAttributeGroup">.
/// Attribute "aggregationType" of XSD type "http://www.opengis.net/gml/3.2":AggregationType.
   @enum gml__AggregationType*           aggregationType                0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
    END OF INHERITED FROM gml__AbstractCoordinateSystemType */
};

/// @brief "http://www.opengis.net/gml/3.2":CartesianCSType is a complexType with complexContent extension of XSD type "http://www.opengis.net/gml/3.2":AbstractCoordinateSystemType.
///
/// class gml__CartesianCSType operations:
/// - gml__CartesianCSType* soap_new_gml__CartesianCSType(soap*) allocate and default initialize
/// - gml__CartesianCSType* soap_new_gml__CartesianCSType(soap*, int num) allocate array and default initialize values
/// - gml__CartesianCSType* soap_new_req_gml__CartesianCSType(soap*, ...) allocate, set required members
/// - gml__CartesianCSType* soap_new_set_gml__CartesianCSType(soap*, ...) allocate, set all public members
/// - gml__CartesianCSType::soap_default(soap*) default initialize members
/// - int soap_read_gml__CartesianCSType(soap*, gml__CartesianCSType*) deserialize from a stream
/// - int soap_write_gml__CartesianCSType(soap*, gml__CartesianCSType*) serialize to a stream
/// - gml__CartesianCSType* gml__CartesianCSType::soap_dup(soap*) returns deep copy of gml__CartesianCSType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__CartesianCSType::soap_del() deep deletes gml__CartesianCSType data members, use only after gml__CartesianCSType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__CartesianCSType : public gml__AbstractCoordinateSystemType
{ public:
/*  INHERITED FROM gml__DefinitionBaseType:
    END OF INHERITED FROM gml__DefinitionBaseType */
/*  INHERITED FROM gml__DefinitionType:
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":remarks.
    std::string*                         remarks                        0;	///< Optional element.
    END OF INHERITED FROM gml__DefinitionType */
/*  INHERITED FROM gml__IdentifiedObjectType:
    END OF INHERITED FROM gml__IdentifiedObjectType */
/*  INHERITED FROM gml__AbstractCoordinateSystemType:
/// <PRE><BLOCKQUOTE>
///   The gml:axis property is an association role (ordered sequence) to the coordinate system axes included in this coordinate system. The coordinate values in a coordinate tuple shall be recorded in the order in which the coordinate system axes associations are recorded, whenever those coordinates use a coordinate reference system that uses this coordinate system. The gml:AggregationAttributeGroup should be used to specify that the axis objects are ordered.
/// </BLOCKQUOTE></PRE>
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="axis" maxOccurs="unbounded"> with global elements <usesAxis>
   $int                                  __sizeaxis                     0;
    class __gml__union_CartesianCSType
    {
   $int                                  __unionaxis                   ;	///< Union _gml__union_CartesianCSType selector: set to SOAP_UNION__gml__union_CartesianCSType_<fieldname>
/// Union for substitutionGroup gml__axis.
    union _gml__union_CartesianCSType
    {
/// <PRE><BLOCKQUOTE>
///   The gml:axis property is an association role (ordered sequence) to the coordinate system axes included in this coordinate system. The coordinate values in a coordinate tuple shall be recorded in the order in which the coordinate system axes associations are recorded, whenever those coordinates use a coordinate reference system that uses this coordinate system. The gml:AggregationAttributeGroup should be used to specify that the axis objects are ordered.
/// </BLOCKQUOTE></PRE>
/// Vector of gml__CoordinateSystemAxisPropertyType* element refs of length 1..unbounded.
    std::vector<gml__CoordinateSystemAxisPropertyType*> *axis                           1;
/// Element "http://www.opengis.net/gml/3.2":usesAxis.
    gml__CoordinateSystemAxisPropertyType*  usesAxis                       nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_CartesianCSType         ;
    }                                   *__union_CartesianCSType       ;
//  END OF SUBSTITUTIONS
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":AggregationAttributeGroup">.
/// Attribute "aggregationType" of XSD type "http://www.opengis.net/gml/3.2":AggregationType.
   @enum gml__AggregationType*           aggregationType                0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
    END OF INHERITED FROM gml__AbstractCoordinateSystemType */
};

/// @brief "http://www.opengis.net/gml/3.2":VerticalCSType is a complexType with complexContent extension of XSD type "http://www.opengis.net/gml/3.2":AbstractCoordinateSystemType.
///
/// class gml__VerticalCSType operations:
/// - gml__VerticalCSType* soap_new_gml__VerticalCSType(soap*) allocate and default initialize
/// - gml__VerticalCSType* soap_new_gml__VerticalCSType(soap*, int num) allocate array and default initialize values
/// - gml__VerticalCSType* soap_new_req_gml__VerticalCSType(soap*, ...) allocate, set required members
/// - gml__VerticalCSType* soap_new_set_gml__VerticalCSType(soap*, ...) allocate, set all public members
/// - gml__VerticalCSType::soap_default(soap*) default initialize members
/// - int soap_read_gml__VerticalCSType(soap*, gml__VerticalCSType*) deserialize from a stream
/// - int soap_write_gml__VerticalCSType(soap*, gml__VerticalCSType*) serialize to a stream
/// - gml__VerticalCSType* gml__VerticalCSType::soap_dup(soap*) returns deep copy of gml__VerticalCSType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__VerticalCSType::soap_del() deep deletes gml__VerticalCSType data members, use only after gml__VerticalCSType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__VerticalCSType : public gml__AbstractCoordinateSystemType
{ public:
/*  INHERITED FROM gml__DefinitionBaseType:
    END OF INHERITED FROM gml__DefinitionBaseType */
/*  INHERITED FROM gml__DefinitionType:
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":remarks.
    std::string*                         remarks                        0;	///< Optional element.
    END OF INHERITED FROM gml__DefinitionType */
/*  INHERITED FROM gml__IdentifiedObjectType:
    END OF INHERITED FROM gml__IdentifiedObjectType */
/*  INHERITED FROM gml__AbstractCoordinateSystemType:
/// <PRE><BLOCKQUOTE>
///   The gml:axis property is an association role (ordered sequence) to the coordinate system axes included in this coordinate system. The coordinate values in a coordinate tuple shall be recorded in the order in which the coordinate system axes associations are recorded, whenever those coordinates use a coordinate reference system that uses this coordinate system. The gml:AggregationAttributeGroup should be used to specify that the axis objects are ordered.
/// </BLOCKQUOTE></PRE>
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="axis" maxOccurs="unbounded"> with global elements <usesAxis>
   $int                                  __sizeaxis                     0;
    class __gml__union_VerticalCSType
    {
   $int                                  __unionaxis                   ;	///< Union _gml__union_VerticalCSType selector: set to SOAP_UNION__gml__union_VerticalCSType_<fieldname>
/// Union for substitutionGroup gml__axis.
    union _gml__union_VerticalCSType
    {
/// <PRE><BLOCKQUOTE>
///   The gml:axis property is an association role (ordered sequence) to the coordinate system axes included in this coordinate system. The coordinate values in a coordinate tuple shall be recorded in the order in which the coordinate system axes associations are recorded, whenever those coordinates use a coordinate reference system that uses this coordinate system. The gml:AggregationAttributeGroup should be used to specify that the axis objects are ordered.
/// </BLOCKQUOTE></PRE>
/// Vector of gml__CoordinateSystemAxisPropertyType* element refs of length 1..unbounded.
    std::vector<gml__CoordinateSystemAxisPropertyType*> *axis                           1;
/// Element "http://www.opengis.net/gml/3.2":usesAxis.
    gml__CoordinateSystemAxisPropertyType*  usesAxis                       nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_VerticalCSType          ;
    }                                   *__union_VerticalCSType        ;
//  END OF SUBSTITUTIONS
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":AggregationAttributeGroup">.
/// Attribute "aggregationType" of XSD type "http://www.opengis.net/gml/3.2":AggregationType.
   @enum gml__AggregationType*           aggregationType                0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
    END OF INHERITED FROM gml__AbstractCoordinateSystemType */
};

/// @brief "http://www.opengis.net/gml/3.2":TimeCSType is a complexType with complexContent extension of XSD type "http://www.opengis.net/gml/3.2":AbstractCoordinateSystemType.
///
/// class gml__TimeCSType operations:
/// - gml__TimeCSType* soap_new_gml__TimeCSType(soap*) allocate and default initialize
/// - gml__TimeCSType* soap_new_gml__TimeCSType(soap*, int num) allocate array and default initialize values
/// - gml__TimeCSType* soap_new_req_gml__TimeCSType(soap*, ...) allocate, set required members
/// - gml__TimeCSType* soap_new_set_gml__TimeCSType(soap*, ...) allocate, set all public members
/// - gml__TimeCSType::soap_default(soap*) default initialize members
/// - int soap_read_gml__TimeCSType(soap*, gml__TimeCSType*) deserialize from a stream
/// - int soap_write_gml__TimeCSType(soap*, gml__TimeCSType*) serialize to a stream
/// - gml__TimeCSType* gml__TimeCSType::soap_dup(soap*) returns deep copy of gml__TimeCSType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__TimeCSType::soap_del() deep deletes gml__TimeCSType data members, use only after gml__TimeCSType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__TimeCSType : public gml__AbstractCoordinateSystemType
{ public:
/*  INHERITED FROM gml__DefinitionBaseType:
    END OF INHERITED FROM gml__DefinitionBaseType */
/*  INHERITED FROM gml__DefinitionType:
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":remarks.
    std::string*                         remarks                        0;	///< Optional element.
    END OF INHERITED FROM gml__DefinitionType */
/*  INHERITED FROM gml__IdentifiedObjectType:
    END OF INHERITED FROM gml__IdentifiedObjectType */
/*  INHERITED FROM gml__AbstractCoordinateSystemType:
/// <PRE><BLOCKQUOTE>
///   The gml:axis property is an association role (ordered sequence) to the coordinate system axes included in this coordinate system. The coordinate values in a coordinate tuple shall be recorded in the order in which the coordinate system axes associations are recorded, whenever those coordinates use a coordinate reference system that uses this coordinate system. The gml:AggregationAttributeGroup should be used to specify that the axis objects are ordered.
/// </BLOCKQUOTE></PRE>
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="axis" maxOccurs="unbounded"> with global elements <usesAxis>
   $int                                  __sizeaxis                     0;
    class __gml__union_TimeCSType
    {
   $int                                  __unionaxis                   ;	///< Union _gml__union_TimeCSType selector: set to SOAP_UNION__gml__union_TimeCSType_<fieldname>
/// Union for substitutionGroup gml__axis.
    union _gml__union_TimeCSType
    {
/// <PRE><BLOCKQUOTE>
///   The gml:axis property is an association role (ordered sequence) to the coordinate system axes included in this coordinate system. The coordinate values in a coordinate tuple shall be recorded in the order in which the coordinate system axes associations are recorded, whenever those coordinates use a coordinate reference system that uses this coordinate system. The gml:AggregationAttributeGroup should be used to specify that the axis objects are ordered.
/// </BLOCKQUOTE></PRE>
/// Vector of gml__CoordinateSystemAxisPropertyType* element refs of length 1..unbounded.
    std::vector<gml__CoordinateSystemAxisPropertyType*> *axis                           1;
/// Element "http://www.opengis.net/gml/3.2":usesAxis.
    gml__CoordinateSystemAxisPropertyType*  usesAxis                       nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_TimeCSType              ;
    }                                   *__union_TimeCSType            ;
//  END OF SUBSTITUTIONS
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":AggregationAttributeGroup">.
/// Attribute "aggregationType" of XSD type "http://www.opengis.net/gml/3.2":AggregationType.
   @enum gml__AggregationType*           aggregationType                0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
    END OF INHERITED FROM gml__AbstractCoordinateSystemType */
};

/// @brief "http://www.opengis.net/gml/3.2":LinearCSType is a complexType with complexContent extension of XSD type "http://www.opengis.net/gml/3.2":AbstractCoordinateSystemType.
///
/// class gml__LinearCSType operations:
/// - gml__LinearCSType* soap_new_gml__LinearCSType(soap*) allocate and default initialize
/// - gml__LinearCSType* soap_new_gml__LinearCSType(soap*, int num) allocate array and default initialize values
/// - gml__LinearCSType* soap_new_req_gml__LinearCSType(soap*, ...) allocate, set required members
/// - gml__LinearCSType* soap_new_set_gml__LinearCSType(soap*, ...) allocate, set all public members
/// - gml__LinearCSType::soap_default(soap*) default initialize members
/// - int soap_read_gml__LinearCSType(soap*, gml__LinearCSType*) deserialize from a stream
/// - int soap_write_gml__LinearCSType(soap*, gml__LinearCSType*) serialize to a stream
/// - gml__LinearCSType* gml__LinearCSType::soap_dup(soap*) returns deep copy of gml__LinearCSType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__LinearCSType::soap_del() deep deletes gml__LinearCSType data members, use only after gml__LinearCSType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__LinearCSType : public gml__AbstractCoordinateSystemType
{ public:
/*  INHERITED FROM gml__DefinitionBaseType:
    END OF INHERITED FROM gml__DefinitionBaseType */
/*  INHERITED FROM gml__DefinitionType:
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":remarks.
    std::string*                         remarks                        0;	///< Optional element.
    END OF INHERITED FROM gml__DefinitionType */
/*  INHERITED FROM gml__IdentifiedObjectType:
    END OF INHERITED FROM gml__IdentifiedObjectType */
/*  INHERITED FROM gml__AbstractCoordinateSystemType:
/// <PRE><BLOCKQUOTE>
///   The gml:axis property is an association role (ordered sequence) to the coordinate system axes included in this coordinate system. The coordinate values in a coordinate tuple shall be recorded in the order in which the coordinate system axes associations are recorded, whenever those coordinates use a coordinate reference system that uses this coordinate system. The gml:AggregationAttributeGroup should be used to specify that the axis objects are ordered.
/// </BLOCKQUOTE></PRE>
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="axis" maxOccurs="unbounded"> with global elements <usesAxis>
   $int                                  __sizeaxis                     0;
    class __gml__union_LinearCSType
    {
   $int                                  __unionaxis                   ;	///< Union _gml__union_LinearCSType selector: set to SOAP_UNION__gml__union_LinearCSType_<fieldname>
/// Union for substitutionGroup gml__axis.
    union _gml__union_LinearCSType
    {
/// <PRE><BLOCKQUOTE>
///   The gml:axis property is an association role (ordered sequence) to the coordinate system axes included in this coordinate system. The coordinate values in a coordinate tuple shall be recorded in the order in which the coordinate system axes associations are recorded, whenever those coordinates use a coordinate reference system that uses this coordinate system. The gml:AggregationAttributeGroup should be used to specify that the axis objects are ordered.
/// </BLOCKQUOTE></PRE>
/// Vector of gml__CoordinateSystemAxisPropertyType* element refs of length 1..unbounded.
    std::vector<gml__CoordinateSystemAxisPropertyType*> *axis                           1;
/// Element "http://www.opengis.net/gml/3.2":usesAxis.
    gml__CoordinateSystemAxisPropertyType*  usesAxis                       nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_LinearCSType            ;
    }                                   *__union_LinearCSType          ;
//  END OF SUBSTITUTIONS
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":AggregationAttributeGroup">.
/// Attribute "aggregationType" of XSD type "http://www.opengis.net/gml/3.2":AggregationType.
   @enum gml__AggregationType*           aggregationType                0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
    END OF INHERITED FROM gml__AbstractCoordinateSystemType */
};

/// @brief "http://www.opengis.net/gml/3.2":UserDefinedCSType is a complexType with complexContent extension of XSD type "http://www.opengis.net/gml/3.2":AbstractCoordinateSystemType.
///
/// class gml__UserDefinedCSType operations:
/// - gml__UserDefinedCSType* soap_new_gml__UserDefinedCSType(soap*) allocate and default initialize
/// - gml__UserDefinedCSType* soap_new_gml__UserDefinedCSType(soap*, int num) allocate array and default initialize values
/// - gml__UserDefinedCSType* soap_new_req_gml__UserDefinedCSType(soap*, ...) allocate, set required members
/// - gml__UserDefinedCSType* soap_new_set_gml__UserDefinedCSType(soap*, ...) allocate, set all public members
/// - gml__UserDefinedCSType::soap_default(soap*) default initialize members
/// - int soap_read_gml__UserDefinedCSType(soap*, gml__UserDefinedCSType*) deserialize from a stream
/// - int soap_write_gml__UserDefinedCSType(soap*, gml__UserDefinedCSType*) serialize to a stream
/// - gml__UserDefinedCSType* gml__UserDefinedCSType::soap_dup(soap*) returns deep copy of gml__UserDefinedCSType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__UserDefinedCSType::soap_del() deep deletes gml__UserDefinedCSType data members, use only after gml__UserDefinedCSType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__UserDefinedCSType : public gml__AbstractCoordinateSystemType
{ public:
/*  INHERITED FROM gml__DefinitionBaseType:
    END OF INHERITED FROM gml__DefinitionBaseType */
/*  INHERITED FROM gml__DefinitionType:
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":remarks.
    std::string*                         remarks                        0;	///< Optional element.
    END OF INHERITED FROM gml__DefinitionType */
/*  INHERITED FROM gml__IdentifiedObjectType:
    END OF INHERITED FROM gml__IdentifiedObjectType */
/*  INHERITED FROM gml__AbstractCoordinateSystemType:
/// <PRE><BLOCKQUOTE>
///   The gml:axis property is an association role (ordered sequence) to the coordinate system axes included in this coordinate system. The coordinate values in a coordinate tuple shall be recorded in the order in which the coordinate system axes associations are recorded, whenever those coordinates use a coordinate reference system that uses this coordinate system. The gml:AggregationAttributeGroup should be used to specify that the axis objects are ordered.
/// </BLOCKQUOTE></PRE>
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="axis" maxOccurs="unbounded"> with global elements <usesAxis>
   $int                                  __sizeaxis                     0;
    class __gml__union_UserDefinedCSType
    {
   $int                                  __unionaxis                   ;	///< Union _gml__union_UserDefinedCSType selector: set to SOAP_UNION__gml__union_UserDefinedCSType_<fieldname>
/// Union for substitutionGroup gml__axis.
    union _gml__union_UserDefinedCSType
    {
/// <PRE><BLOCKQUOTE>
///   The gml:axis property is an association role (ordered sequence) to the coordinate system axes included in this coordinate system. The coordinate values in a coordinate tuple shall be recorded in the order in which the coordinate system axes associations are recorded, whenever those coordinates use a coordinate reference system that uses this coordinate system. The gml:AggregationAttributeGroup should be used to specify that the axis objects are ordered.
/// </BLOCKQUOTE></PRE>
/// Vector of gml__CoordinateSystemAxisPropertyType* element refs of length 1..unbounded.
    std::vector<gml__CoordinateSystemAxisPropertyType*> *axis                           1;
/// Element "http://www.opengis.net/gml/3.2":usesAxis.
    gml__CoordinateSystemAxisPropertyType*  usesAxis                       nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_UserDefinedCSType       ;
    }                                   *__union_UserDefinedCSType     ;
//  END OF SUBSTITUTIONS
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":AggregationAttributeGroup">.
/// Attribute "aggregationType" of XSD type "http://www.opengis.net/gml/3.2":AggregationType.
   @enum gml__AggregationType*           aggregationType                0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
    END OF INHERITED FROM gml__AbstractCoordinateSystemType */
};

/// @brief "http://www.opengis.net/gml/3.2":SphericalCSType is a complexType with complexContent extension of XSD type "http://www.opengis.net/gml/3.2":AbstractCoordinateSystemType.
///
/// class gml__SphericalCSType operations:
/// - gml__SphericalCSType* soap_new_gml__SphericalCSType(soap*) allocate and default initialize
/// - gml__SphericalCSType* soap_new_gml__SphericalCSType(soap*, int num) allocate array and default initialize values
/// - gml__SphericalCSType* soap_new_req_gml__SphericalCSType(soap*, ...) allocate, set required members
/// - gml__SphericalCSType* soap_new_set_gml__SphericalCSType(soap*, ...) allocate, set all public members
/// - gml__SphericalCSType::soap_default(soap*) default initialize members
/// - int soap_read_gml__SphericalCSType(soap*, gml__SphericalCSType*) deserialize from a stream
/// - int soap_write_gml__SphericalCSType(soap*, gml__SphericalCSType*) serialize to a stream
/// - gml__SphericalCSType* gml__SphericalCSType::soap_dup(soap*) returns deep copy of gml__SphericalCSType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__SphericalCSType::soap_del() deep deletes gml__SphericalCSType data members, use only after gml__SphericalCSType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__SphericalCSType : public gml__AbstractCoordinateSystemType
{ public:
/*  INHERITED FROM gml__DefinitionBaseType:
    END OF INHERITED FROM gml__DefinitionBaseType */
/*  INHERITED FROM gml__DefinitionType:
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":remarks.
    std::string*                         remarks                        0;	///< Optional element.
    END OF INHERITED FROM gml__DefinitionType */
/*  INHERITED FROM gml__IdentifiedObjectType:
    END OF INHERITED FROM gml__IdentifiedObjectType */
/*  INHERITED FROM gml__AbstractCoordinateSystemType:
/// <PRE><BLOCKQUOTE>
///   The gml:axis property is an association role (ordered sequence) to the coordinate system axes included in this coordinate system. The coordinate values in a coordinate tuple shall be recorded in the order in which the coordinate system axes associations are recorded, whenever those coordinates use a coordinate reference system that uses this coordinate system. The gml:AggregationAttributeGroup should be used to specify that the axis objects are ordered.
/// </BLOCKQUOTE></PRE>
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="axis" maxOccurs="unbounded"> with global elements <usesAxis>
   $int                                  __sizeaxis                     0;
    class __gml__union_SphericalCSType
    {
   $int                                  __unionaxis                   ;	///< Union _gml__union_SphericalCSType selector: set to SOAP_UNION__gml__union_SphericalCSType_<fieldname>
/// Union for substitutionGroup gml__axis.
    union _gml__union_SphericalCSType
    {
/// <PRE><BLOCKQUOTE>
///   The gml:axis property is an association role (ordered sequence) to the coordinate system axes included in this coordinate system. The coordinate values in a coordinate tuple shall be recorded in the order in which the coordinate system axes associations are recorded, whenever those coordinates use a coordinate reference system that uses this coordinate system. The gml:AggregationAttributeGroup should be used to specify that the axis objects are ordered.
/// </BLOCKQUOTE></PRE>
/// Vector of gml__CoordinateSystemAxisPropertyType* element refs of length 1..unbounded.
    std::vector<gml__CoordinateSystemAxisPropertyType*> *axis                           1;
/// Element "http://www.opengis.net/gml/3.2":usesAxis.
    gml__CoordinateSystemAxisPropertyType*  usesAxis                       nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_SphericalCSType         ;
    }                                   *__union_SphericalCSType       ;
//  END OF SUBSTITUTIONS
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":AggregationAttributeGroup">.
/// Attribute "aggregationType" of XSD type "http://www.opengis.net/gml/3.2":AggregationType.
   @enum gml__AggregationType*           aggregationType                0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
    END OF INHERITED FROM gml__AbstractCoordinateSystemType */
};

/// @brief "http://www.opengis.net/gml/3.2":PolarCSType is a complexType with complexContent extension of XSD type "http://www.opengis.net/gml/3.2":AbstractCoordinateSystemType.
///
/// class gml__PolarCSType operations:
/// - gml__PolarCSType* soap_new_gml__PolarCSType(soap*) allocate and default initialize
/// - gml__PolarCSType* soap_new_gml__PolarCSType(soap*, int num) allocate array and default initialize values
/// - gml__PolarCSType* soap_new_req_gml__PolarCSType(soap*, ...) allocate, set required members
/// - gml__PolarCSType* soap_new_set_gml__PolarCSType(soap*, ...) allocate, set all public members
/// - gml__PolarCSType::soap_default(soap*) default initialize members
/// - int soap_read_gml__PolarCSType(soap*, gml__PolarCSType*) deserialize from a stream
/// - int soap_write_gml__PolarCSType(soap*, gml__PolarCSType*) serialize to a stream
/// - gml__PolarCSType* gml__PolarCSType::soap_dup(soap*) returns deep copy of gml__PolarCSType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__PolarCSType::soap_del() deep deletes gml__PolarCSType data members, use only after gml__PolarCSType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__PolarCSType : public gml__AbstractCoordinateSystemType
{ public:
/*  INHERITED FROM gml__DefinitionBaseType:
    END OF INHERITED FROM gml__DefinitionBaseType */
/*  INHERITED FROM gml__DefinitionType:
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":remarks.
    std::string*                         remarks                        0;	///< Optional element.
    END OF INHERITED FROM gml__DefinitionType */
/*  INHERITED FROM gml__IdentifiedObjectType:
    END OF INHERITED FROM gml__IdentifiedObjectType */
/*  INHERITED FROM gml__AbstractCoordinateSystemType:
/// <PRE><BLOCKQUOTE>
///   The gml:axis property is an association role (ordered sequence) to the coordinate system axes included in this coordinate system. The coordinate values in a coordinate tuple shall be recorded in the order in which the coordinate system axes associations are recorded, whenever those coordinates use a coordinate reference system that uses this coordinate system. The gml:AggregationAttributeGroup should be used to specify that the axis objects are ordered.
/// </BLOCKQUOTE></PRE>
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="axis" maxOccurs="unbounded"> with global elements <usesAxis>
   $int                                  __sizeaxis                     0;
    class __gml__union_PolarCSType
    {
   $int                                  __unionaxis                   ;	///< Union _gml__union_PolarCSType selector: set to SOAP_UNION__gml__union_PolarCSType_<fieldname>
/// Union for substitutionGroup gml__axis.
    union _gml__union_PolarCSType
    {
/// <PRE><BLOCKQUOTE>
///   The gml:axis property is an association role (ordered sequence) to the coordinate system axes included in this coordinate system. The coordinate values in a coordinate tuple shall be recorded in the order in which the coordinate system axes associations are recorded, whenever those coordinates use a coordinate reference system that uses this coordinate system. The gml:AggregationAttributeGroup should be used to specify that the axis objects are ordered.
/// </BLOCKQUOTE></PRE>
/// Vector of gml__CoordinateSystemAxisPropertyType* element refs of length 1..unbounded.
    std::vector<gml__CoordinateSystemAxisPropertyType*> *axis                           1;
/// Element "http://www.opengis.net/gml/3.2":usesAxis.
    gml__CoordinateSystemAxisPropertyType*  usesAxis                       nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_PolarCSType             ;
    }                                   *__union_PolarCSType           ;
//  END OF SUBSTITUTIONS
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":AggregationAttributeGroup">.
/// Attribute "aggregationType" of XSD type "http://www.opengis.net/gml/3.2":AggregationType.
   @enum gml__AggregationType*           aggregationType                0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
    END OF INHERITED FROM gml__AbstractCoordinateSystemType */
};

/// @brief "http://www.opengis.net/gml/3.2":CylindricalCSType is a complexType with complexContent extension of XSD type "http://www.opengis.net/gml/3.2":AbstractCoordinateSystemType.
///
/// class gml__CylindricalCSType operations:
/// - gml__CylindricalCSType* soap_new_gml__CylindricalCSType(soap*) allocate and default initialize
/// - gml__CylindricalCSType* soap_new_gml__CylindricalCSType(soap*, int num) allocate array and default initialize values
/// - gml__CylindricalCSType* soap_new_req_gml__CylindricalCSType(soap*, ...) allocate, set required members
/// - gml__CylindricalCSType* soap_new_set_gml__CylindricalCSType(soap*, ...) allocate, set all public members
/// - gml__CylindricalCSType::soap_default(soap*) default initialize members
/// - int soap_read_gml__CylindricalCSType(soap*, gml__CylindricalCSType*) deserialize from a stream
/// - int soap_write_gml__CylindricalCSType(soap*, gml__CylindricalCSType*) serialize to a stream
/// - gml__CylindricalCSType* gml__CylindricalCSType::soap_dup(soap*) returns deep copy of gml__CylindricalCSType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__CylindricalCSType::soap_del() deep deletes gml__CylindricalCSType data members, use only after gml__CylindricalCSType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__CylindricalCSType : public gml__AbstractCoordinateSystemType
{ public:
/*  INHERITED FROM gml__DefinitionBaseType:
    END OF INHERITED FROM gml__DefinitionBaseType */
/*  INHERITED FROM gml__DefinitionType:
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":remarks.
    std::string*                         remarks                        0;	///< Optional element.
    END OF INHERITED FROM gml__DefinitionType */
/*  INHERITED FROM gml__IdentifiedObjectType:
    END OF INHERITED FROM gml__IdentifiedObjectType */
/*  INHERITED FROM gml__AbstractCoordinateSystemType:
/// <PRE><BLOCKQUOTE>
///   The gml:axis property is an association role (ordered sequence) to the coordinate system axes included in this coordinate system. The coordinate values in a coordinate tuple shall be recorded in the order in which the coordinate system axes associations are recorded, whenever those coordinates use a coordinate reference system that uses this coordinate system. The gml:AggregationAttributeGroup should be used to specify that the axis objects are ordered.
/// </BLOCKQUOTE></PRE>
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="axis" maxOccurs="unbounded"> with global elements <usesAxis>
   $int                                  __sizeaxis                     0;
    class __gml__union_CylindricalCSType
    {
   $int                                  __unionaxis                   ;	///< Union _gml__union_CylindricalCSType selector: set to SOAP_UNION__gml__union_CylindricalCSType_<fieldname>
/// Union for substitutionGroup gml__axis.
    union _gml__union_CylindricalCSType
    {
/// <PRE><BLOCKQUOTE>
///   The gml:axis property is an association role (ordered sequence) to the coordinate system axes included in this coordinate system. The coordinate values in a coordinate tuple shall be recorded in the order in which the coordinate system axes associations are recorded, whenever those coordinates use a coordinate reference system that uses this coordinate system. The gml:AggregationAttributeGroup should be used to specify that the axis objects are ordered.
/// </BLOCKQUOTE></PRE>
/// Vector of gml__CoordinateSystemAxisPropertyType* element refs of length 1..unbounded.
    std::vector<gml__CoordinateSystemAxisPropertyType*> *axis                           1;
/// Element "http://www.opengis.net/gml/3.2":usesAxis.
    gml__CoordinateSystemAxisPropertyType*  usesAxis                       nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_CylindricalCSType       ;
    }                                   *__union_CylindricalCSType     ;
//  END OF SUBSTITUTIONS
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":AggregationAttributeGroup">.
/// Attribute "aggregationType" of XSD type "http://www.opengis.net/gml/3.2":AggregationType.
   @enum gml__AggregationType*           aggregationType                0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
    END OF INHERITED FROM gml__AbstractCoordinateSystemType */
};

/// @brief "http://www.opengis.net/gml/3.2":AffineCSType is a complexType with complexContent extension of XSD type "http://www.opengis.net/gml/3.2":AbstractCoordinateSystemType.
///
/// class gml__AffineCSType operations:
/// - gml__AffineCSType* soap_new_gml__AffineCSType(soap*) allocate and default initialize
/// - gml__AffineCSType* soap_new_gml__AffineCSType(soap*, int num) allocate array and default initialize values
/// - gml__AffineCSType* soap_new_req_gml__AffineCSType(soap*, ...) allocate, set required members
/// - gml__AffineCSType* soap_new_set_gml__AffineCSType(soap*, ...) allocate, set all public members
/// - gml__AffineCSType::soap_default(soap*) default initialize members
/// - int soap_read_gml__AffineCSType(soap*, gml__AffineCSType*) deserialize from a stream
/// - int soap_write_gml__AffineCSType(soap*, gml__AffineCSType*) serialize to a stream
/// - gml__AffineCSType* gml__AffineCSType::soap_dup(soap*) returns deep copy of gml__AffineCSType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__AffineCSType::soap_del() deep deletes gml__AffineCSType data members, use only after gml__AffineCSType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__AffineCSType : public gml__AbstractCoordinateSystemType
{ public:
/*  INHERITED FROM gml__DefinitionBaseType:
    END OF INHERITED FROM gml__DefinitionBaseType */
/*  INHERITED FROM gml__DefinitionType:
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":remarks.
    std::string*                         remarks                        0;	///< Optional element.
    END OF INHERITED FROM gml__DefinitionType */
/*  INHERITED FROM gml__IdentifiedObjectType:
    END OF INHERITED FROM gml__IdentifiedObjectType */
/*  INHERITED FROM gml__AbstractCoordinateSystemType:
/// <PRE><BLOCKQUOTE>
///   The gml:axis property is an association role (ordered sequence) to the coordinate system axes included in this coordinate system. The coordinate values in a coordinate tuple shall be recorded in the order in which the coordinate system axes associations are recorded, whenever those coordinates use a coordinate reference system that uses this coordinate system. The gml:AggregationAttributeGroup should be used to specify that the axis objects are ordered.
/// </BLOCKQUOTE></PRE>
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="axis" maxOccurs="unbounded"> with global elements <usesAxis>
   $int                                  __sizeaxis                     0;
    class __gml__union_AffineCSType
    {
   $int                                  __unionaxis                   ;	///< Union _gml__union_AffineCSType selector: set to SOAP_UNION__gml__union_AffineCSType_<fieldname>
/// Union for substitutionGroup gml__axis.
    union _gml__union_AffineCSType
    {
/// <PRE><BLOCKQUOTE>
///   The gml:axis property is an association role (ordered sequence) to the coordinate system axes included in this coordinate system. The coordinate values in a coordinate tuple shall be recorded in the order in which the coordinate system axes associations are recorded, whenever those coordinates use a coordinate reference system that uses this coordinate system. The gml:AggregationAttributeGroup should be used to specify that the axis objects are ordered.
/// </BLOCKQUOTE></PRE>
/// Vector of gml__CoordinateSystemAxisPropertyType* element refs of length 1..unbounded.
    std::vector<gml__CoordinateSystemAxisPropertyType*> *axis                           1;
/// Element "http://www.opengis.net/gml/3.2":usesAxis.
    gml__CoordinateSystemAxisPropertyType*  usesAxis                       nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_AffineCSType            ;
    }                                   *__union_AffineCSType          ;
//  END OF SUBSTITUTIONS
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":AggregationAttributeGroup">.
/// Attribute "aggregationType" of XSD type "http://www.opengis.net/gml/3.2":AggregationType.
   @enum gml__AggregationType*           aggregationType                0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
    END OF INHERITED FROM gml__AbstractCoordinateSystemType */
};

/// @brief "http://www.opengis.net/gml/3.2":GeodeticDatumType is a complexType with complexContent extension of XSD type "http://www.opengis.net/gml/3.2":AbstractDatumType.
///
/// class gml__GeodeticDatumType operations:
/// - gml__GeodeticDatumType* soap_new_gml__GeodeticDatumType(soap*) allocate and default initialize
/// - gml__GeodeticDatumType* soap_new_gml__GeodeticDatumType(soap*, int num) allocate array and default initialize values
/// - gml__GeodeticDatumType* soap_new_req_gml__GeodeticDatumType(soap*, ...) allocate, set required members
/// - gml__GeodeticDatumType* soap_new_set_gml__GeodeticDatumType(soap*, ...) allocate, set all public members
/// - gml__GeodeticDatumType::soap_default(soap*) default initialize members
/// - int soap_read_gml__GeodeticDatumType(soap*, gml__GeodeticDatumType*) deserialize from a stream
/// - int soap_write_gml__GeodeticDatumType(soap*, gml__GeodeticDatumType*) serialize to a stream
/// - gml__GeodeticDatumType* gml__GeodeticDatumType::soap_dup(soap*) returns deep copy of gml__GeodeticDatumType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__GeodeticDatumType::soap_del() deep deletes gml__GeodeticDatumType data members, use only after gml__GeodeticDatumType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__GeodeticDatumType : public gml__AbstractDatumType
{ public:
/*  INHERITED FROM gml__DefinitionBaseType:
    END OF INHERITED FROM gml__DefinitionBaseType */
/*  INHERITED FROM gml__DefinitionType:
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":remarks.
    std::string*                         remarks                        0;	///< Optional element.
    END OF INHERITED FROM gml__DefinitionType */
/*  INHERITED FROM gml__IdentifiedObjectType:
    END OF INHERITED FROM gml__IdentifiedObjectType */
/*  INHERITED FROM gml__AbstractDatumType:
/// <PRE><BLOCKQUOTE>
///   The gml:domainOfValidity property implements an association role to an EX_Extent object as encoded in ISO/TS 19139, either referencing or containing the definition of that extent.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":domainOfValidity.
    _gml__domainOfValidity*              domainOfValidity               0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The gml:scope property provides a description of the usage, or limitations of usage, for which this CRS-related object is valid. If unknown, enter "not known".
/// </BLOCKQUOTE></PRE>
/// Vector of std::string element refs of length 1..unbounded.
    std::vector<std::string            > scope                          1;
/// <PRE><BLOCKQUOTE>
///   gml:anchorDefinition is a description, possibly including coordinates, of the definition used to anchor the datum to the Earth. Also known as the "origin", especially for engineering and image datums. The codeSpace attribute may be used to reference a source of more detailed on this point or surface, or on a set of such descriptions.
///   - For a geodetic datum, this point is also known as the fundamental point, which is traditionally the point where the relationship between geoid and ellipsoid is defined. In some cases, the "fundamental point" may consist of a number of points. In those cases, the parameters defining the geoid/ellipsoid relationship have been averaged for these points, and the averages adopted as the datum definition.
///   - For an engineering datum, the anchor definition may be a physical point, or it may be a point with defined coordinates in another CRS.may
///   - For an image datum, the anchor definition is usually either the centre of the image or the corner of the image.
///   - For a temporal datum, this attribute is not defined. Instead of the anchor definition, a temporal datum carries a separate time origin of type DateTime.
/// </BLOCKQUOTE></PRE>
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="anchorDefinition" minOccurs="0"> with global elements <anchorPoint>
   $int                                  __unionanchorDefinition        0;	///< Union _gml__union_GeodeticDatumType selector: set to SOAP_UNION__gml__union_GeodeticDatumType_<fieldname> or 0 to omit
/// Union for substitutionGroup gml__anchorDefinition.
    union _gml__union_GeodeticDatumType
    {
/// <PRE><BLOCKQUOTE>
///   gml:anchorDefinition is a description, possibly including coordinates, of the definition used to anchor the datum to the Earth. Also known as the "origin", especially for engineering and image datums. The codeSpace attribute may be used to reference a source of more detailed on this point or surface, or on a set of such descriptions.
///   - For a geodetic datum, this point is also known as the fundamental point, which is traditionally the point where the relationship between geoid and ellipsoid is defined. In some cases, the "fundamental point" may consist of a number of points. In those cases, the parameters defining the geoid/ellipsoid relationship have been averaged for these points, and the averages adopted as the datum definition.
///   - For an engineering datum, the anchor definition may be a physical point, or it may be a point with defined coordinates in another CRS.may
///   - For an image datum, the anchor definition is usually either the centre of the image or the corner of the image.
///   - For a temporal datum, this attribute is not defined. Instead of the anchor definition, a temporal datum carries a separate time origin of type DateTime.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":anchorDefinition.
    gml__CodeType*                       anchorDefinition               0;	///< Optional element.
/// Element "http://www.opengis.net/gml/3.2":anchorPoint.
    gml__CodeType*                       anchorPoint                    nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_GeodeticDatumType       ;
//  END OF SUBSTITUTIONS
/// <PRE><BLOCKQUOTE>
///   gml:realizationEpoch is the time after which this datum definition is valid. See ISO 19111 Table 32 for details.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":realizationEpoch.
    xsd__date*                           realizationEpoch               0;	///< Optional element.
    END OF INHERITED FROM gml__AbstractDatumType */
/// <PRE><BLOCKQUOTE>
///   gml:primeMeridian is an association role to the prime meridian used by this geodetic datum.
/// </BLOCKQUOTE></PRE>
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="primeMeridian"> with global elements <usesPrimeMeridian>
   $int                                  __unionprimeMeridian          ;	///< Union _gml__union_GeodeticDatumType_ selector: set to SOAP_UNION__gml__union_GeodeticDatumType__<fieldname>
/// Union for substitutionGroup gml__primeMeridian.
    union _gml__union_GeodeticDatumType_
    {
/// <PRE><BLOCKQUOTE>
///   gml:primeMeridian is an association role to the prime meridian used by this geodetic datum.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":primeMeridian.
    gml__PrimeMeridianPropertyType*      primeMeridian                  nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.opengis.net/gml/3.2":usesPrimeMeridian.
    gml__PrimeMeridianPropertyType*      usesPrimeMeridian              nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_GeodeticDatumType_      ;
//  END OF SUBSTITUTIONS
/// <PRE><BLOCKQUOTE>
///   gml:ellipsoid is an association role to the ellipsoid used by this geodetic datum.
/// </BLOCKQUOTE></PRE>
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="ellipsoid"> with global elements <usesEllipsoid>
   $int                                  __unionellipsoid              ;	///< Union _gml__union_GeodeticDatumType__ selector: set to SOAP_UNION__gml__union_GeodeticDatumType___<fieldname>
/// Union for substitutionGroup gml__ellipsoid.
    union _gml__union_GeodeticDatumType__
    {
/// <PRE><BLOCKQUOTE>
///   gml:ellipsoid is an association role to the ellipsoid used by this geodetic datum.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":ellipsoid.
    gml__EllipsoidPropertyType*          ellipsoid                      nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.opengis.net/gml/3.2":usesEllipsoid.
    gml__EllipsoidPropertyType*          usesEllipsoid                  nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_GeodeticDatumType__     ;
//  END OF SUBSTITUTIONS
};

/// @brief "http://www.opengis.net/gml/3.2":EngineeringDatumType is a complexType with complexContent extension of XSD type "http://www.opengis.net/gml/3.2":AbstractDatumType.
///
/// class gml__EngineeringDatumType operations:
/// - gml__EngineeringDatumType* soap_new_gml__EngineeringDatumType(soap*) allocate and default initialize
/// - gml__EngineeringDatumType* soap_new_gml__EngineeringDatumType(soap*, int num) allocate array and default initialize values
/// - gml__EngineeringDatumType* soap_new_req_gml__EngineeringDatumType(soap*, ...) allocate, set required members
/// - gml__EngineeringDatumType* soap_new_set_gml__EngineeringDatumType(soap*, ...) allocate, set all public members
/// - gml__EngineeringDatumType::soap_default(soap*) default initialize members
/// - int soap_read_gml__EngineeringDatumType(soap*, gml__EngineeringDatumType*) deserialize from a stream
/// - int soap_write_gml__EngineeringDatumType(soap*, gml__EngineeringDatumType*) serialize to a stream
/// - gml__EngineeringDatumType* gml__EngineeringDatumType::soap_dup(soap*) returns deep copy of gml__EngineeringDatumType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__EngineeringDatumType::soap_del() deep deletes gml__EngineeringDatumType data members, use only after gml__EngineeringDatumType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__EngineeringDatumType : public gml__AbstractDatumType
{ public:
/*  INHERITED FROM gml__DefinitionBaseType:
    END OF INHERITED FROM gml__DefinitionBaseType */
/*  INHERITED FROM gml__DefinitionType:
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":remarks.
    std::string*                         remarks                        0;	///< Optional element.
    END OF INHERITED FROM gml__DefinitionType */
/*  INHERITED FROM gml__IdentifiedObjectType:
    END OF INHERITED FROM gml__IdentifiedObjectType */
/*  INHERITED FROM gml__AbstractDatumType:
/// <PRE><BLOCKQUOTE>
///   The gml:domainOfValidity property implements an association role to an EX_Extent object as encoded in ISO/TS 19139, either referencing or containing the definition of that extent.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":domainOfValidity.
    _gml__domainOfValidity*              domainOfValidity               0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The gml:scope property provides a description of the usage, or limitations of usage, for which this CRS-related object is valid. If unknown, enter "not known".
/// </BLOCKQUOTE></PRE>
/// Vector of std::string element refs of length 1..unbounded.
    std::vector<std::string            > scope                          1;
/// <PRE><BLOCKQUOTE>
///   gml:anchorDefinition is a description, possibly including coordinates, of the definition used to anchor the datum to the Earth. Also known as the "origin", especially for engineering and image datums. The codeSpace attribute may be used to reference a source of more detailed on this point or surface, or on a set of such descriptions.
///   - For a geodetic datum, this point is also known as the fundamental point, which is traditionally the point where the relationship between geoid and ellipsoid is defined. In some cases, the "fundamental point" may consist of a number of points. In those cases, the parameters defining the geoid/ellipsoid relationship have been averaged for these points, and the averages adopted as the datum definition.
///   - For an engineering datum, the anchor definition may be a physical point, or it may be a point with defined coordinates in another CRS.may
///   - For an image datum, the anchor definition is usually either the centre of the image or the corner of the image.
///   - For a temporal datum, this attribute is not defined. Instead of the anchor definition, a temporal datum carries a separate time origin of type DateTime.
/// </BLOCKQUOTE></PRE>
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="anchorDefinition" minOccurs="0"> with global elements <anchorPoint>
   $int                                  __unionanchorDefinition        0;	///< Union _gml__union_EngineeringDatumType selector: set to SOAP_UNION__gml__union_EngineeringDatumType_<fieldname> or 0 to omit
/// Union for substitutionGroup gml__anchorDefinition.
    union _gml__union_EngineeringDatumType
    {
/// <PRE><BLOCKQUOTE>
///   gml:anchorDefinition is a description, possibly including coordinates, of the definition used to anchor the datum to the Earth. Also known as the "origin", especially for engineering and image datums. The codeSpace attribute may be used to reference a source of more detailed on this point or surface, or on a set of such descriptions.
///   - For a geodetic datum, this point is also known as the fundamental point, which is traditionally the point where the relationship between geoid and ellipsoid is defined. In some cases, the "fundamental point" may consist of a number of points. In those cases, the parameters defining the geoid/ellipsoid relationship have been averaged for these points, and the averages adopted as the datum definition.
///   - For an engineering datum, the anchor definition may be a physical point, or it may be a point with defined coordinates in another CRS.may
///   - For an image datum, the anchor definition is usually either the centre of the image or the corner of the image.
///   - For a temporal datum, this attribute is not defined. Instead of the anchor definition, a temporal datum carries a separate time origin of type DateTime.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":anchorDefinition.
    gml__CodeType*                       anchorDefinition               0;	///< Optional element.
/// Element "http://www.opengis.net/gml/3.2":anchorPoint.
    gml__CodeType*                       anchorPoint                    nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_EngineeringDatumType    ;
//  END OF SUBSTITUTIONS
/// <PRE><BLOCKQUOTE>
///   gml:realizationEpoch is the time after which this datum definition is valid. See ISO 19111 Table 32 for details.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":realizationEpoch.
    xsd__date*                           realizationEpoch               0;	///< Optional element.
    END OF INHERITED FROM gml__AbstractDatumType */
};

/// @brief "http://www.opengis.net/gml/3.2":ImageDatumType is a complexType with complexContent extension of XSD type "http://www.opengis.net/gml/3.2":AbstractDatumType.
///
/// class gml__ImageDatumType operations:
/// - gml__ImageDatumType* soap_new_gml__ImageDatumType(soap*) allocate and default initialize
/// - gml__ImageDatumType* soap_new_gml__ImageDatumType(soap*, int num) allocate array and default initialize values
/// - gml__ImageDatumType* soap_new_req_gml__ImageDatumType(soap*, ...) allocate, set required members
/// - gml__ImageDatumType* soap_new_set_gml__ImageDatumType(soap*, ...) allocate, set all public members
/// - gml__ImageDatumType::soap_default(soap*) default initialize members
/// - int soap_read_gml__ImageDatumType(soap*, gml__ImageDatumType*) deserialize from a stream
/// - int soap_write_gml__ImageDatumType(soap*, gml__ImageDatumType*) serialize to a stream
/// - gml__ImageDatumType* gml__ImageDatumType::soap_dup(soap*) returns deep copy of gml__ImageDatumType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__ImageDatumType::soap_del() deep deletes gml__ImageDatumType data members, use only after gml__ImageDatumType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__ImageDatumType : public gml__AbstractDatumType
{ public:
/*  INHERITED FROM gml__DefinitionBaseType:
    END OF INHERITED FROM gml__DefinitionBaseType */
/*  INHERITED FROM gml__DefinitionType:
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":remarks.
    std::string*                         remarks                        0;	///< Optional element.
    END OF INHERITED FROM gml__DefinitionType */
/*  INHERITED FROM gml__IdentifiedObjectType:
    END OF INHERITED FROM gml__IdentifiedObjectType */
/*  INHERITED FROM gml__AbstractDatumType:
/// <PRE><BLOCKQUOTE>
///   The gml:domainOfValidity property implements an association role to an EX_Extent object as encoded in ISO/TS 19139, either referencing or containing the definition of that extent.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":domainOfValidity.
    _gml__domainOfValidity*              domainOfValidity               0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The gml:scope property provides a description of the usage, or limitations of usage, for which this CRS-related object is valid. If unknown, enter "not known".
/// </BLOCKQUOTE></PRE>
/// Vector of std::string element refs of length 1..unbounded.
    std::vector<std::string            > scope                          1;
/// <PRE><BLOCKQUOTE>
///   gml:anchorDefinition is a description, possibly including coordinates, of the definition used to anchor the datum to the Earth. Also known as the "origin", especially for engineering and image datums. The codeSpace attribute may be used to reference a source of more detailed on this point or surface, or on a set of such descriptions.
///   - For a geodetic datum, this point is also known as the fundamental point, which is traditionally the point where the relationship between geoid and ellipsoid is defined. In some cases, the "fundamental point" may consist of a number of points. In those cases, the parameters defining the geoid/ellipsoid relationship have been averaged for these points, and the averages adopted as the datum definition.
///   - For an engineering datum, the anchor definition may be a physical point, or it may be a point with defined coordinates in another CRS.may
///   - For an image datum, the anchor definition is usually either the centre of the image or the corner of the image.
///   - For a temporal datum, this attribute is not defined. Instead of the anchor definition, a temporal datum carries a separate time origin of type DateTime.
/// </BLOCKQUOTE></PRE>
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="anchorDefinition" minOccurs="0"> with global elements <anchorPoint>
   $int                                  __unionanchorDefinition        0;	///< Union _gml__union_ImageDatumType selector: set to SOAP_UNION__gml__union_ImageDatumType_<fieldname> or 0 to omit
/// Union for substitutionGroup gml__anchorDefinition.
    union _gml__union_ImageDatumType
    {
/// <PRE><BLOCKQUOTE>
///   gml:anchorDefinition is a description, possibly including coordinates, of the definition used to anchor the datum to the Earth. Also known as the "origin", especially for engineering and image datums. The codeSpace attribute may be used to reference a source of more detailed on this point or surface, or on a set of such descriptions.
///   - For a geodetic datum, this point is also known as the fundamental point, which is traditionally the point where the relationship between geoid and ellipsoid is defined. In some cases, the "fundamental point" may consist of a number of points. In those cases, the parameters defining the geoid/ellipsoid relationship have been averaged for these points, and the averages adopted as the datum definition.
///   - For an engineering datum, the anchor definition may be a physical point, or it may be a point with defined coordinates in another CRS.may
///   - For an image datum, the anchor definition is usually either the centre of the image or the corner of the image.
///   - For a temporal datum, this attribute is not defined. Instead of the anchor definition, a temporal datum carries a separate time origin of type DateTime.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":anchorDefinition.
    gml__CodeType*                       anchorDefinition               0;	///< Optional element.
/// Element "http://www.opengis.net/gml/3.2":anchorPoint.
    gml__CodeType*                       anchorPoint                    nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_ImageDatumType          ;
//  END OF SUBSTITUTIONS
/// <PRE><BLOCKQUOTE>
///   gml:realizationEpoch is the time after which this datum definition is valid. See ISO 19111 Table 32 for details.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":realizationEpoch.
    xsd__date*                           realizationEpoch               0;	///< Optional element.
    END OF INHERITED FROM gml__AbstractDatumType */
/// <PRE><BLOCKQUOTE>
///   gml:pixelInCell is a specification of the way an image grid is associated with the image data attributes. The required codeSpace attribute shall reference a source of information specifying the values and meanings of all the allowed string values for this property.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":pixelInCell.
    gml__CodeWithAuthorityType*          pixelInCell                    1;	///< Required element.
};

/// @brief "http://www.opengis.net/gml/3.2":VerticalDatumType is a complexType with complexContent extension of XSD type "http://www.opengis.net/gml/3.2":AbstractDatumType.
///
/// class gml__VerticalDatumType operations:
/// - gml__VerticalDatumType* soap_new_gml__VerticalDatumType(soap*) allocate and default initialize
/// - gml__VerticalDatumType* soap_new_gml__VerticalDatumType(soap*, int num) allocate array and default initialize values
/// - gml__VerticalDatumType* soap_new_req_gml__VerticalDatumType(soap*, ...) allocate, set required members
/// - gml__VerticalDatumType* soap_new_set_gml__VerticalDatumType(soap*, ...) allocate, set all public members
/// - gml__VerticalDatumType::soap_default(soap*) default initialize members
/// - int soap_read_gml__VerticalDatumType(soap*, gml__VerticalDatumType*) deserialize from a stream
/// - int soap_write_gml__VerticalDatumType(soap*, gml__VerticalDatumType*) serialize to a stream
/// - gml__VerticalDatumType* gml__VerticalDatumType::soap_dup(soap*) returns deep copy of gml__VerticalDatumType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__VerticalDatumType::soap_del() deep deletes gml__VerticalDatumType data members, use only after gml__VerticalDatumType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__VerticalDatumType : public gml__AbstractDatumType
{ public:
/*  INHERITED FROM gml__DefinitionBaseType:
    END OF INHERITED FROM gml__DefinitionBaseType */
/*  INHERITED FROM gml__DefinitionType:
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":remarks.
    std::string*                         remarks                        0;	///< Optional element.
    END OF INHERITED FROM gml__DefinitionType */
/*  INHERITED FROM gml__IdentifiedObjectType:
    END OF INHERITED FROM gml__IdentifiedObjectType */
/*  INHERITED FROM gml__AbstractDatumType:
/// <PRE><BLOCKQUOTE>
///   The gml:domainOfValidity property implements an association role to an EX_Extent object as encoded in ISO/TS 19139, either referencing or containing the definition of that extent.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":domainOfValidity.
    _gml__domainOfValidity*              domainOfValidity               0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The gml:scope property provides a description of the usage, or limitations of usage, for which this CRS-related object is valid. If unknown, enter "not known".
/// </BLOCKQUOTE></PRE>
/// Vector of std::string element refs of length 1..unbounded.
    std::vector<std::string            > scope                          1;
/// <PRE><BLOCKQUOTE>
///   gml:anchorDefinition is a description, possibly including coordinates, of the definition used to anchor the datum to the Earth. Also known as the "origin", especially for engineering and image datums. The codeSpace attribute may be used to reference a source of more detailed on this point or surface, or on a set of such descriptions.
///   - For a geodetic datum, this point is also known as the fundamental point, which is traditionally the point where the relationship between geoid and ellipsoid is defined. In some cases, the "fundamental point" may consist of a number of points. In those cases, the parameters defining the geoid/ellipsoid relationship have been averaged for these points, and the averages adopted as the datum definition.
///   - For an engineering datum, the anchor definition may be a physical point, or it may be a point with defined coordinates in another CRS.may
///   - For an image datum, the anchor definition is usually either the centre of the image or the corner of the image.
///   - For a temporal datum, this attribute is not defined. Instead of the anchor definition, a temporal datum carries a separate time origin of type DateTime.
/// </BLOCKQUOTE></PRE>
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="anchorDefinition" minOccurs="0"> with global elements <anchorPoint>
   $int                                  __unionanchorDefinition        0;	///< Union _gml__union_VerticalDatumType selector: set to SOAP_UNION__gml__union_VerticalDatumType_<fieldname> or 0 to omit
/// Union for substitutionGroup gml__anchorDefinition.
    union _gml__union_VerticalDatumType
    {
/// <PRE><BLOCKQUOTE>
///   gml:anchorDefinition is a description, possibly including coordinates, of the definition used to anchor the datum to the Earth. Also known as the "origin", especially for engineering and image datums. The codeSpace attribute may be used to reference a source of more detailed on this point or surface, or on a set of such descriptions.
///   - For a geodetic datum, this point is also known as the fundamental point, which is traditionally the point where the relationship between geoid and ellipsoid is defined. In some cases, the "fundamental point" may consist of a number of points. In those cases, the parameters defining the geoid/ellipsoid relationship have been averaged for these points, and the averages adopted as the datum definition.
///   - For an engineering datum, the anchor definition may be a physical point, or it may be a point with defined coordinates in another CRS.may
///   - For an image datum, the anchor definition is usually either the centre of the image or the corner of the image.
///   - For a temporal datum, this attribute is not defined. Instead of the anchor definition, a temporal datum carries a separate time origin of type DateTime.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":anchorDefinition.
    gml__CodeType*                       anchorDefinition               0;	///< Optional element.
/// Element "http://www.opengis.net/gml/3.2":anchorPoint.
    gml__CodeType*                       anchorPoint                    nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_VerticalDatumType       ;
//  END OF SUBSTITUTIONS
/// <PRE><BLOCKQUOTE>
///   gml:realizationEpoch is the time after which this datum definition is valid. See ISO 19111 Table 32 for details.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":realizationEpoch.
    xsd__date*                           realizationEpoch               0;	///< Optional element.
    END OF INHERITED FROM gml__AbstractDatumType */
};

/// @brief "http://www.opengis.net/gml/3.2":TemporalDatumBaseType is an abstract complexType with complexContent restriction of XSD type "http://www.opengis.net/gml/3.2":AbstractDatumType.
///
/// <PRE><BLOCKQUOTE>
///   The TemporalDatumBaseType partially defines the origin of a temporal coordinate reference system. This type restricts the AbstractDatumType to remove the "anchorDefinition" and "realizationEpoch" elements.
/// </BLOCKQUOTE></PRE>
/// class gml__TemporalDatumBaseType operations:
/// - gml__TemporalDatumBaseType* soap_new_gml__TemporalDatumBaseType(soap*) allocate and default initialize
/// - gml__TemporalDatumBaseType* soap_new_gml__TemporalDatumBaseType(soap*, int num) allocate array and default initialize values
/// - gml__TemporalDatumBaseType* soap_new_req_gml__TemporalDatumBaseType(soap*, ...) allocate, set required members
/// - gml__TemporalDatumBaseType* soap_new_set_gml__TemporalDatumBaseType(soap*, ...) allocate, set all public members
/// - gml__TemporalDatumBaseType::soap_default(soap*) default initialize members
/// - int soap_read_gml__TemporalDatumBaseType(soap*, gml__TemporalDatumBaseType*) deserialize from a stream
/// - int soap_write_gml__TemporalDatumBaseType(soap*, gml__TemporalDatumBaseType*) serialize to a stream
/// - gml__TemporalDatumBaseType* gml__TemporalDatumBaseType::soap_dup(soap*) returns deep copy of gml__TemporalDatumBaseType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__TemporalDatumBaseType::soap_del() deep deletes gml__TemporalDatumBaseType data members, use only after gml__TemporalDatumBaseType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__TemporalDatumBaseType : public xsd__anyType
{ public:
/// Vector of gml__MetaDataPropertyType* element refs of length 0..unbounded.
    std::vector<gml__MetaDataPropertyType*> metaDataProperty               0;
/// <PRE><BLOCKQUOTE>
///   The value of this property is a text description of the object. gml:description uses gml:StringOrRefType as its content model, so it may contain a simple text string content, or carry a reference to an external description. The use of gml:description to reference an external description has been deprecated and replaced by the gml:descriptionReference property.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":description.
    gml__StringOrRefType*                description                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The value of this property is a remote text description of the object. The xlink:href attribute of the gml:descriptionReference property references the external description.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":descriptionReference.
    gml__ReferenceType*                  descriptionReference           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Often, a special identifier is assigned to an object by the maintaining authority with the intention that it is used in references to the object For such cases, the codeSpace shall be provided. That identifier is usually unique either globally or within an application domain. gml:identifier is a pre-defined property for such identifiers.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":identifier.
    gml__CodeWithAuthorityType*          identifier                     1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The gml:name property provides a label or identifier for the object, commonly a descriptive name. An object may have several names, typically assigned by different authorities. gml:name uses the gml:CodeType content model. The authority for a name is indicated by the value of its (optional) codeSpace attribute. The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace. In common usage there will be one name per authority, so a processing application may select the name from its preferred codeSpace.
/// </BLOCKQUOTE></PRE>
/// Vector of gml__CodeType* element refs of length 0..unbounded.
    std::vector<gml__CodeType*         > name                           0;
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":remarks.
    std::string*                         remarks                        0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The gml:domainOfValidity property implements an association role to an EX_Extent object as encoded in ISO/TS 19139, either referencing or containing the definition of that extent.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":domainOfValidity.
    _gml__domainOfValidity*              domainOfValidity               0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The gml:scope property provides a description of the usage, or limitations of usage, for which this CRS-related object is valid. If unknown, enter "not known".
/// </BLOCKQUOTE></PRE>
/// Vector of std::string element refs of length 1..unbounded.
    std::vector<std::string            > scope                          1;
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":id.
/// <PRE><BLOCKQUOTE>
///   The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.
/// </BLOCKQUOTE></PRE>
   @xsd__ID                              gml__id                        1;	///< Required attribute.
/*  RESTRICTED FROM gml__AbstractDatumType:
    END OF RESTRICTED FROM gml__AbstractDatumType */
/*  RESTRICTED FROM gml__IdentifiedObjectType:
    END OF RESTRICTED FROM gml__IdentifiedObjectType */
/*  RESTRICTED FROM gml__DefinitionType:
    END OF RESTRICTED FROM gml__DefinitionType */
/*  RESTRICTED FROM gml__DefinitionBaseType:
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":id.
/// <PRE><BLOCKQUOTE>
///   The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.
/// </BLOCKQUOTE></PRE>
   @xsd__ID                              gml__id                        1;	///< Required attribute.
    END OF RESTRICTED FROM gml__DefinitionBaseType */
/*  RESTRICTED FROM gml__AbstractGMLType:
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":id.
/// <PRE><BLOCKQUOTE>
///   The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.
/// </BLOCKQUOTE></PRE>
   @xsd__ID*                             gml__id                        0;	///< Optional attribute.
    END OF RESTRICTED FROM gml__AbstractGMLType */
};

/// @brief "http://www.opengis.net/gml/3.2":AbstractGeneralConversionType is an abstract complexType with complexContent restriction of XSD type "http://www.opengis.net/gml/3.2":AbstractCoordinateOperationType.
///
/// class gml__AbstractGeneralConversionType operations:
/// - gml__AbstractGeneralConversionType* soap_new_gml__AbstractGeneralConversionType(soap*) allocate and default initialize
/// - gml__AbstractGeneralConversionType* soap_new_gml__AbstractGeneralConversionType(soap*, int num) allocate array and default initialize values
/// - gml__AbstractGeneralConversionType* soap_new_req_gml__AbstractGeneralConversionType(soap*, ...) allocate, set required members
/// - gml__AbstractGeneralConversionType* soap_new_set_gml__AbstractGeneralConversionType(soap*, ...) allocate, set all public members
/// - gml__AbstractGeneralConversionType::soap_default(soap*) default initialize members
/// - int soap_read_gml__AbstractGeneralConversionType(soap*, gml__AbstractGeneralConversionType*) deserialize from a stream
/// - int soap_write_gml__AbstractGeneralConversionType(soap*, gml__AbstractGeneralConversionType*) serialize to a stream
/// - gml__AbstractGeneralConversionType* gml__AbstractGeneralConversionType::soap_dup(soap*) returns deep copy of gml__AbstractGeneralConversionType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__AbstractGeneralConversionType::soap_del() deep deletes gml__AbstractGeneralConversionType data members, use only after gml__AbstractGeneralConversionType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__AbstractGeneralConversionType : public xsd__anyType
{ public:
/// Vector of gml__MetaDataPropertyType* element refs of length 0..unbounded.
    std::vector<gml__MetaDataPropertyType*> metaDataProperty               0;
/// <PRE><BLOCKQUOTE>
///   The value of this property is a text description of the object. gml:description uses gml:StringOrRefType as its content model, so it may contain a simple text string content, or carry a reference to an external description. The use of gml:description to reference an external description has been deprecated and replaced by the gml:descriptionReference property.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":description.
    gml__StringOrRefType*                description                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The value of this property is a remote text description of the object. The xlink:href attribute of the gml:descriptionReference property references the external description.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":descriptionReference.
    gml__ReferenceType*                  descriptionReference           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Often, a special identifier is assigned to an object by the maintaining authority with the intention that it is used in references to the object For such cases, the codeSpace shall be provided. That identifier is usually unique either globally or within an application domain. gml:identifier is a pre-defined property for such identifiers.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":identifier.
    gml__CodeWithAuthorityType*          identifier                     1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The gml:name property provides a label or identifier for the object, commonly a descriptive name. An object may have several names, typically assigned by different authorities. gml:name uses the gml:CodeType content model. The authority for a name is indicated by the value of its (optional) codeSpace attribute. The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace. In common usage there will be one name per authority, so a processing application may select the name from its preferred codeSpace.
/// </BLOCKQUOTE></PRE>
/// Vector of gml__CodeType* element refs of length 0..unbounded.
    std::vector<gml__CodeType*         > name                           0;
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":remarks.
    std::string*                         remarks                        0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The gml:domainOfValidity property implements an association role to an EX_Extent object as encoded in ISO/TS 19139, either referencing or containing the definition of that extent.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":domainOfValidity.
    _gml__domainOfValidity*              domainOfValidity               0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The gml:scope property provides a description of the usage, or limitations of usage, for which this CRS-related object is valid. If unknown, enter "not known".
/// </BLOCKQUOTE></PRE>
/// Vector of std::string element refs of length 1..unbounded.
    std::vector<std::string            > scope                          1;
/// <PRE><BLOCKQUOTE>
///   gml:coordinateOperationAccuracy is an association role to a DQ_PositionalAccuracy object as encoded in ISO/TS 19139, either referencing or containing the definition of that positional accuracy. That object contains an estimate of the impact of this coordinate operation on point accuracy. That is, it gives position error estimates for the target coordinates of this coordinate operation, assuming no errors in the source coordinates.
/// </BLOCKQUOTE></PRE>
/// Vector of _gml__coordinateOperationAccuracy* element refs of length 0..unbounded.
    std::vector<_gml__coordinateOperationAccuracy*> coordinateOperationAccuracy    0;
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":id.
/// <PRE><BLOCKQUOTE>
///   The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.
/// </BLOCKQUOTE></PRE>
   @xsd__ID                              gml__id                        1;	///< Required attribute.
/*  RESTRICTED FROM gml__AbstractCoordinateOperationType:
    END OF RESTRICTED FROM gml__AbstractCoordinateOperationType */
/*  RESTRICTED FROM gml__IdentifiedObjectType:
    END OF RESTRICTED FROM gml__IdentifiedObjectType */
/*  RESTRICTED FROM gml__DefinitionType:
    END OF RESTRICTED FROM gml__DefinitionType */
/*  RESTRICTED FROM gml__DefinitionBaseType:
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":id.
/// <PRE><BLOCKQUOTE>
///   The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.
/// </BLOCKQUOTE></PRE>
   @xsd__ID                              gml__id                        1;	///< Required attribute.
    END OF RESTRICTED FROM gml__DefinitionBaseType */
/*  RESTRICTED FROM gml__AbstractGMLType:
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":id.
/// <PRE><BLOCKQUOTE>
///   The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.
/// </BLOCKQUOTE></PRE>
   @xsd__ID*                             gml__id                        0;	///< Optional attribute.
    END OF RESTRICTED FROM gml__AbstractGMLType */
};

/// @brief "http://www.opengis.net/gml/3.2":AbstractGeneralTransformationType is an abstract complexType with complexContent restriction of XSD type "http://www.opengis.net/gml/3.2":AbstractCoordinateOperationType.
///
/// class gml__AbstractGeneralTransformationType operations:
/// - gml__AbstractGeneralTransformationType* soap_new_gml__AbstractGeneralTransformationType(soap*) allocate and default initialize
/// - gml__AbstractGeneralTransformationType* soap_new_gml__AbstractGeneralTransformationType(soap*, int num) allocate array and default initialize values
/// - gml__AbstractGeneralTransformationType* soap_new_req_gml__AbstractGeneralTransformationType(soap*, ...) allocate, set required members
/// - gml__AbstractGeneralTransformationType* soap_new_set_gml__AbstractGeneralTransformationType(soap*, ...) allocate, set all public members
/// - gml__AbstractGeneralTransformationType::soap_default(soap*) default initialize members
/// - int soap_read_gml__AbstractGeneralTransformationType(soap*, gml__AbstractGeneralTransformationType*) deserialize from a stream
/// - int soap_write_gml__AbstractGeneralTransformationType(soap*, gml__AbstractGeneralTransformationType*) serialize to a stream
/// - gml__AbstractGeneralTransformationType* gml__AbstractGeneralTransformationType::soap_dup(soap*) returns deep copy of gml__AbstractGeneralTransformationType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__AbstractGeneralTransformationType::soap_del() deep deletes gml__AbstractGeneralTransformationType data members, use only after gml__AbstractGeneralTransformationType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__AbstractGeneralTransformationType : public xsd__anyType
{ public:
/// Vector of gml__MetaDataPropertyType* element refs of length 0..unbounded.
    std::vector<gml__MetaDataPropertyType*> metaDataProperty               0;
/// <PRE><BLOCKQUOTE>
///   The value of this property is a text description of the object. gml:description uses gml:StringOrRefType as its content model, so it may contain a simple text string content, or carry a reference to an external description. The use of gml:description to reference an external description has been deprecated and replaced by the gml:descriptionReference property.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":description.
    gml__StringOrRefType*                description                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The value of this property is a remote text description of the object. The xlink:href attribute of the gml:descriptionReference property references the external description.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":descriptionReference.
    gml__ReferenceType*                  descriptionReference           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Often, a special identifier is assigned to an object by the maintaining authority with the intention that it is used in references to the object For such cases, the codeSpace shall be provided. That identifier is usually unique either globally or within an application domain. gml:identifier is a pre-defined property for such identifiers.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":identifier.
    gml__CodeWithAuthorityType*          identifier                     1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The gml:name property provides a label or identifier for the object, commonly a descriptive name. An object may have several names, typically assigned by different authorities. gml:name uses the gml:CodeType content model. The authority for a name is indicated by the value of its (optional) codeSpace attribute. The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace. In common usage there will be one name per authority, so a processing application may select the name from its preferred codeSpace.
/// </BLOCKQUOTE></PRE>
/// Vector of gml__CodeType* element refs of length 0..unbounded.
    std::vector<gml__CodeType*         > name                           0;
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":remarks.
    std::string*                         remarks                        0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The gml:domainOfValidity property implements an association role to an EX_Extent object as encoded in ISO/TS 19139, either referencing or containing the definition of that extent.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":domainOfValidity.
    _gml__domainOfValidity*              domainOfValidity               0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The gml:scope property provides a description of the usage, or limitations of usage, for which this CRS-related object is valid. If unknown, enter "not known".
/// </BLOCKQUOTE></PRE>
/// Vector of std::string element refs of length 1..unbounded.
    std::vector<std::string            > scope                          1;
/// <PRE><BLOCKQUOTE>
///   gml:operationVersion is the version of the coordinate transformation (i.e., instantiation due to the stochastic nature of the parameters). Mandatory when describing a transformation, and should not be supplied for a conversion.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":operationVersion.
    std::string                          operationVersion               1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   gml:coordinateOperationAccuracy is an association role to a DQ_PositionalAccuracy object as encoded in ISO/TS 19139, either referencing or containing the definition of that positional accuracy. That object contains an estimate of the impact of this coordinate operation on point accuracy. That is, it gives position error estimates for the target coordinates of this coordinate operation, assuming no errors in the source coordinates.
/// </BLOCKQUOTE></PRE>
/// Vector of _gml__coordinateOperationAccuracy* element refs of length 0..unbounded.
    std::vector<_gml__coordinateOperationAccuracy*> coordinateOperationAccuracy    0;
/// <PRE><BLOCKQUOTE>
///   gml:sourceCRS is an association role to the source CRS (coordinate reference system) of this coordinate operation.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":sourceCRS.
    gml__CRSPropertyType*                sourceCRS                      1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   gml:targetCRS is an association role to the target CRS (coordinate reference system) of this coordinate operation.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":targetCRS.
    gml__CRSPropertyType*                targetCRS                      1;	///< Required element.
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":id.
/// <PRE><BLOCKQUOTE>
///   The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.
/// </BLOCKQUOTE></PRE>
   @xsd__ID                              gml__id                        1;	///< Required attribute.
/*  RESTRICTED FROM gml__AbstractCoordinateOperationType:
    END OF RESTRICTED FROM gml__AbstractCoordinateOperationType */
/*  RESTRICTED FROM gml__IdentifiedObjectType:
    END OF RESTRICTED FROM gml__IdentifiedObjectType */
/*  RESTRICTED FROM gml__DefinitionType:
    END OF RESTRICTED FROM gml__DefinitionType */
/*  RESTRICTED FROM gml__DefinitionBaseType:
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":id.
/// <PRE><BLOCKQUOTE>
///   The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.
/// </BLOCKQUOTE></PRE>
   @xsd__ID                              gml__id                        1;	///< Required attribute.
    END OF RESTRICTED FROM gml__DefinitionBaseType */
/*  RESTRICTED FROM gml__AbstractGMLType:
/// Attribute reference "http://www.opengis.net/gml/3.2":"http://www.opengis.net/gml/3.2":id.
/// <PRE><BLOCKQUOTE>
///   The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.
/// </BLOCKQUOTE></PRE>
   @xsd__ID*                             gml__id                        0;	///< Optional attribute.
    END OF RESTRICTED FROM gml__AbstractGMLType */
};

/// @brief "http://www.opengis.net/gml/3.2":ConcatenatedOperationType is a complexType with complexContent extension of XSD type "http://www.opengis.net/gml/3.2":AbstractCoordinateOperationType.
///
/// <PRE><BLOCKQUOTE>
///   gml:ConcatenatedOperation is an ordered sequence of two or more coordinate operations. This sequence of operations is constrained by the requirement that the source coordinate reference system of step (n+1) must be the same as the target coordinate reference system of step (n). The source coordinate reference system of the first step and the target coordinate reference system of the last step are the source and target coordinate reference system associated with the concatenated operation. Instead of a forward operation, an inverse operation may be used for one or more of the operation steps mentioned above, if the inverse operation is uniquely defined by the forward operation.
///   The gml:coordOperation property elements are an ordered sequence of associations to the two or more operations used by this concatenated operation. The AggregationAttributeGroup should be used to specify that the coordOperation associations are ordered.
/// </BLOCKQUOTE></PRE>
/// class gml__ConcatenatedOperationType operations:
/// - gml__ConcatenatedOperationType* soap_new_gml__ConcatenatedOperationType(soap*) allocate and default initialize
/// - gml__ConcatenatedOperationType* soap_new_gml__ConcatenatedOperationType(soap*, int num) allocate array and default initialize values
/// - gml__ConcatenatedOperationType* soap_new_req_gml__ConcatenatedOperationType(soap*, ...) allocate, set required members
/// - gml__ConcatenatedOperationType* soap_new_set_gml__ConcatenatedOperationType(soap*, ...) allocate, set all public members
/// - gml__ConcatenatedOperationType::soap_default(soap*) default initialize members
/// - int soap_read_gml__ConcatenatedOperationType(soap*, gml__ConcatenatedOperationType*) deserialize from a stream
/// - int soap_write_gml__ConcatenatedOperationType(soap*, gml__ConcatenatedOperationType*) serialize to a stream
/// - gml__ConcatenatedOperationType* gml__ConcatenatedOperationType::soap_dup(soap*) returns deep copy of gml__ConcatenatedOperationType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__ConcatenatedOperationType::soap_del() deep deletes gml__ConcatenatedOperationType data members, use only after gml__ConcatenatedOperationType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__ConcatenatedOperationType : public gml__AbstractCoordinateOperationType
{ public:
/*  INHERITED FROM gml__DefinitionBaseType:
    END OF INHERITED FROM gml__DefinitionBaseType */
/*  INHERITED FROM gml__DefinitionType:
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":remarks.
    std::string*                         remarks                        0;	///< Optional element.
    END OF INHERITED FROM gml__DefinitionType */
/*  INHERITED FROM gml__IdentifiedObjectType:
    END OF INHERITED FROM gml__IdentifiedObjectType */
/*  INHERITED FROM gml__AbstractCoordinateOperationType:
/// <PRE><BLOCKQUOTE>
///   The gml:domainOfValidity property implements an association role to an EX_Extent object as encoded in ISO/TS 19139, either referencing or containing the definition of that extent.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":domainOfValidity.
    _gml__domainOfValidity*              domainOfValidity               0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The gml:scope property provides a description of the usage, or limitations of usage, for which this CRS-related object is valid. If unknown, enter "not known".
/// </BLOCKQUOTE></PRE>
/// Vector of std::string element refs of length 1..unbounded.
    std::vector<std::string            > scope                          1;
/// <PRE><BLOCKQUOTE>
///   gml:operationVersion is the version of the coordinate transformation (i.e., instantiation due to the stochastic nature of the parameters). Mandatory when describing a transformation, and should not be supplied for a conversion.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":operationVersion.
    std::string*                         operationVersion               0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   gml:coordinateOperationAccuracy is an association role to a DQ_PositionalAccuracy object as encoded in ISO/TS 19139, either referencing or containing the definition of that positional accuracy. That object contains an estimate of the impact of this coordinate operation on point accuracy. That is, it gives position error estimates for the target coordinates of this coordinate operation, assuming no errors in the source coordinates.
/// </BLOCKQUOTE></PRE>
/// Vector of _gml__coordinateOperationAccuracy* element refs of length 0..unbounded.
    std::vector<_gml__coordinateOperationAccuracy*> coordinateOperationAccuracy    0;
/// <PRE><BLOCKQUOTE>
///   gml:sourceCRS is an association role to the source CRS (coordinate reference system) of this coordinate operation.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":sourceCRS.
    gml__CRSPropertyType*                sourceCRS                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   gml:targetCRS is an association role to the target CRS (coordinate reference system) of this coordinate operation.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":targetCRS.
    gml__CRSPropertyType*                targetCRS                      0;	///< Optional element.
    END OF INHERITED FROM gml__AbstractCoordinateOperationType */
/// <PRE><BLOCKQUOTE>
///   gml:coordOperation is an association role to a coordinate operation.
/// </BLOCKQUOTE></PRE>
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="coordOperation" minOccurs="2" maxOccurs="unbounded"> with global elements <usesSingleOperation> <usesOperation>
   $int                                  __sizecoordOperation           2;
    class __gml__union_ConcatenatedOperationType
    {
   $int                                  __unioncoordOperation          2;	///< Union _gml__union_ConcatenatedOperationType selector: set to SOAP_UNION__gml__union_ConcatenatedOperationType_<fieldname>
/// Union for substitutionGroup gml__coordOperation.
    union _gml__union_ConcatenatedOperationType
    {
/// <PRE><BLOCKQUOTE>
///   gml:coordOperation is an association role to a coordinate operation.
/// </BLOCKQUOTE></PRE>
/// Vector of gml__CoordinateOperationPropertyType* element refs of length 2..unbounded.
    std::vector<gml__CoordinateOperationPropertyType*> *coordOperation                 2;
/// Element "http://www.opengis.net/gml/3.2":usesSingleOperation.
    gml__CoordinateOperationPropertyType*  usesSingleOperation            nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.opengis.net/gml/3.2":usesOperation.
    gml__CoordinateOperationPropertyType*  usesOperation                  nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_ConcatenatedOperationType;
    }                                   *__union_ConcatenatedOperationType;
//  END OF SUBSTITUTIONS
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":AggregationAttributeGroup">.
/// Attribute "aggregationType" of XSD type "http://www.opengis.net/gml/3.2":AggregationType.
   @enum gml__AggregationType*           aggregationType                0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.opengis.net/gml/3.2":PassThroughOperationType is a complexType with complexContent extension of XSD type "http://www.opengis.net/gml/3.2":AbstractCoordinateOperationType.
///
/// class gml__PassThroughOperationType operations:
/// - gml__PassThroughOperationType* soap_new_gml__PassThroughOperationType(soap*) allocate and default initialize
/// - gml__PassThroughOperationType* soap_new_gml__PassThroughOperationType(soap*, int num) allocate array and default initialize values
/// - gml__PassThroughOperationType* soap_new_req_gml__PassThroughOperationType(soap*, ...) allocate, set required members
/// - gml__PassThroughOperationType* soap_new_set_gml__PassThroughOperationType(soap*, ...) allocate, set all public members
/// - gml__PassThroughOperationType::soap_default(soap*) default initialize members
/// - int soap_read_gml__PassThroughOperationType(soap*, gml__PassThroughOperationType*) deserialize from a stream
/// - int soap_write_gml__PassThroughOperationType(soap*, gml__PassThroughOperationType*) serialize to a stream
/// - gml__PassThroughOperationType* gml__PassThroughOperationType::soap_dup(soap*) returns deep copy of gml__PassThroughOperationType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__PassThroughOperationType::soap_del() deep deletes gml__PassThroughOperationType data members, use only after gml__PassThroughOperationType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__PassThroughOperationType : public gml__AbstractCoordinateOperationType
{ public:
/*  INHERITED FROM gml__DefinitionBaseType:
    END OF INHERITED FROM gml__DefinitionBaseType */
/*  INHERITED FROM gml__DefinitionType:
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":remarks.
    std::string*                         remarks                        0;	///< Optional element.
    END OF INHERITED FROM gml__DefinitionType */
/*  INHERITED FROM gml__IdentifiedObjectType:
    END OF INHERITED FROM gml__IdentifiedObjectType */
/*  INHERITED FROM gml__AbstractCoordinateOperationType:
/// <PRE><BLOCKQUOTE>
///   The gml:domainOfValidity property implements an association role to an EX_Extent object as encoded in ISO/TS 19139, either referencing or containing the definition of that extent.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":domainOfValidity.
    _gml__domainOfValidity*              domainOfValidity               0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The gml:scope property provides a description of the usage, or limitations of usage, for which this CRS-related object is valid. If unknown, enter "not known".
/// </BLOCKQUOTE></PRE>
/// Vector of std::string element refs of length 1..unbounded.
    std::vector<std::string            > scope                          1;
/// <PRE><BLOCKQUOTE>
///   gml:operationVersion is the version of the coordinate transformation (i.e., instantiation due to the stochastic nature of the parameters). Mandatory when describing a transformation, and should not be supplied for a conversion.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":operationVersion.
    std::string*                         operationVersion               0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   gml:coordinateOperationAccuracy is an association role to a DQ_PositionalAccuracy object as encoded in ISO/TS 19139, either referencing or containing the definition of that positional accuracy. That object contains an estimate of the impact of this coordinate operation on point accuracy. That is, it gives position error estimates for the target coordinates of this coordinate operation, assuming no errors in the source coordinates.
/// </BLOCKQUOTE></PRE>
/// Vector of _gml__coordinateOperationAccuracy* element refs of length 0..unbounded.
    std::vector<_gml__coordinateOperationAccuracy*> coordinateOperationAccuracy    0;
/// <PRE><BLOCKQUOTE>
///   gml:sourceCRS is an association role to the source CRS (coordinate reference system) of this coordinate operation.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":sourceCRS.
    gml__CRSPropertyType*                sourceCRS                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   gml:targetCRS is an association role to the target CRS (coordinate reference system) of this coordinate operation.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":targetCRS.
    gml__CRSPropertyType*                targetCRS                      0;	///< Optional element.
    END OF INHERITED FROM gml__AbstractCoordinateOperationType */
/// <PRE><BLOCKQUOTE>
///   gml:modifiedCoordinate is a positive integer defining a position in a coordinate tuple.
/// </BLOCKQUOTE></PRE>
/// Vector of xsd__positiveInteger element refs of length 1..unbounded.
    std::vector<xsd__positiveInteger   > modifiedCoordinate             1;
/// <PRE><BLOCKQUOTE>
///   gml:coordOperation is an association role to a coordinate operation.
/// </BLOCKQUOTE></PRE>
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="coordOperation"> with global elements <usesSingleOperation> <usesOperation>
   $int                                  __unioncoordOperation         ;	///< Union _gml__union_PassThroughOperationType selector: set to SOAP_UNION__gml__union_PassThroughOperationType_<fieldname>
/// Union for substitutionGroup gml__coordOperation.
    union _gml__union_PassThroughOperationType
    {
/// <PRE><BLOCKQUOTE>
///   gml:coordOperation is an association role to a coordinate operation.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":coordOperation.
    gml__CoordinateOperationPropertyType*  coordOperation                 nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.opengis.net/gml/3.2":usesSingleOperation.
    gml__CoordinateOperationPropertyType*  usesSingleOperation            nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.opengis.net/gml/3.2":usesOperation.
    gml__CoordinateOperationPropertyType*  usesOperation                  nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_PassThroughOperationType;
//  END OF SUBSTITUTIONS
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":AggregationAttributeGroup">.
/// Attribute "aggregationType" of XSD type "http://www.opengis.net/gml/3.2":AggregationType.
   @enum gml__AggregationType*           aggregationType                0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
};

/// @brief "http://www.opengis.net/gml/3.2":OperationParameterType is a complexType with complexContent extension of XSD type "http://www.opengis.net/gml/3.2":AbstractGeneralOperationParameterType.
///
/// class gml__OperationParameterType operations:
/// - gml__OperationParameterType* soap_new_gml__OperationParameterType(soap*) allocate and default initialize
/// - gml__OperationParameterType* soap_new_gml__OperationParameterType(soap*, int num) allocate array and default initialize values
/// - gml__OperationParameterType* soap_new_req_gml__OperationParameterType(soap*, ...) allocate, set required members
/// - gml__OperationParameterType* soap_new_set_gml__OperationParameterType(soap*, ...) allocate, set all public members
/// - gml__OperationParameterType::soap_default(soap*) default initialize members
/// - int soap_read_gml__OperationParameterType(soap*, gml__OperationParameterType*) deserialize from a stream
/// - int soap_write_gml__OperationParameterType(soap*, gml__OperationParameterType*) serialize to a stream
/// - gml__OperationParameterType* gml__OperationParameterType::soap_dup(soap*) returns deep copy of gml__OperationParameterType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__OperationParameterType::soap_del() deep deletes gml__OperationParameterType data members, use only after gml__OperationParameterType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__OperationParameterType : public gml__AbstractGeneralOperationParameterType
{ public:
/*  INHERITED FROM gml__DefinitionBaseType:
    END OF INHERITED FROM gml__DefinitionBaseType */
/*  INHERITED FROM gml__DefinitionType:
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":remarks.
    std::string*                         remarks                        0;	///< Optional element.
    END OF INHERITED FROM gml__DefinitionType */
/*  INHERITED FROM gml__IdentifiedObjectType:
    END OF INHERITED FROM gml__IdentifiedObjectType */
/*  INHERITED FROM gml__AbstractGeneralOperationParameterType:
/// <PRE><BLOCKQUOTE>
///   gml:minimumOccurs is the minimum number of times that values for this parameter group or parameter are required. If this attribute is omitted, the minimum number shall be one.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":minimumOccurs.
    xsd__nonNegativeInteger*             minimumOccurs                  0;	///< Optional element.
    END OF INHERITED FROM gml__AbstractGeneralOperationParameterType */
};

/// @brief "http://www.opengis.net/gml/3.2":OperationParameterGroupType is a complexType with complexContent extension of XSD type "http://www.opengis.net/gml/3.2":AbstractGeneralOperationParameterType.
///
/// class gml__OperationParameterGroupType operations:
/// - gml__OperationParameterGroupType* soap_new_gml__OperationParameterGroupType(soap*) allocate and default initialize
/// - gml__OperationParameterGroupType* soap_new_gml__OperationParameterGroupType(soap*, int num) allocate array and default initialize values
/// - gml__OperationParameterGroupType* soap_new_req_gml__OperationParameterGroupType(soap*, ...) allocate, set required members
/// - gml__OperationParameterGroupType* soap_new_set_gml__OperationParameterGroupType(soap*, ...) allocate, set all public members
/// - gml__OperationParameterGroupType::soap_default(soap*) default initialize members
/// - int soap_read_gml__OperationParameterGroupType(soap*, gml__OperationParameterGroupType*) deserialize from a stream
/// - int soap_write_gml__OperationParameterGroupType(soap*, gml__OperationParameterGroupType*) serialize to a stream
/// - gml__OperationParameterGroupType* gml__OperationParameterGroupType::soap_dup(soap*) returns deep copy of gml__OperationParameterGroupType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__OperationParameterGroupType::soap_del() deep deletes gml__OperationParameterGroupType data members, use only after gml__OperationParameterGroupType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__OperationParameterGroupType : public gml__AbstractGeneralOperationParameterType
{ public:
/*  INHERITED FROM gml__DefinitionBaseType:
    END OF INHERITED FROM gml__DefinitionBaseType */
/*  INHERITED FROM gml__DefinitionType:
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":remarks.
    std::string*                         remarks                        0;	///< Optional element.
    END OF INHERITED FROM gml__DefinitionType */
/*  INHERITED FROM gml__IdentifiedObjectType:
    END OF INHERITED FROM gml__IdentifiedObjectType */
/*  INHERITED FROM gml__AbstractGeneralOperationParameterType:
/// <PRE><BLOCKQUOTE>
///   gml:minimumOccurs is the minimum number of times that values for this parameter group or parameter are required. If this attribute is omitted, the minimum number shall be one.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":minimumOccurs.
    xsd__nonNegativeInteger*             minimumOccurs                  0;	///< Optional element.
    END OF INHERITED FROM gml__AbstractGeneralOperationParameterType */
/// <PRE><BLOCKQUOTE>
///   gml:maximumOccurs is the maximum number of times that values for this parameter group may be included. If this attribute is omitted, the maximum number shall be one.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":maximumOccurs.
    xsd__positiveInteger*                maximumOccurs                  0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   gml:parameter is an association to an operation parameter or parameter group.
/// </BLOCKQUOTE></PRE>
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="parameter" minOccurs="2" maxOccurs="unbounded"> with global elements <includesParameter> <generalOperationParameter>
   $int                                  __sizeparameter                2;
    class __gml__union_OperationParameterGroupType
    {
   $int                                  __unionparameter               2;	///< Union _gml__union_OperationParameterGroupType selector: set to SOAP_UNION__gml__union_OperationParameterGroupType_<fieldname>
/// Union for substitutionGroup gml__parameter.
    union _gml__union_OperationParameterGroupType
    {
/// <PRE><BLOCKQUOTE>
///   gml:parameter is an association to an operation parameter or parameter group.
/// </BLOCKQUOTE></PRE>
/// Vector of gml__AbstractGeneralOperationParameterPropertyType* element refs of length 2..unbounded.
    std::vector<gml__AbstractGeneralOperationParameterPropertyType*> *parameter                      2;
/// Element "http://www.opengis.net/gml/3.2":includesParameter.
    gml__AbstractGeneralOperationParameterPropertyType*  includesParameter              nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="generalOperationParameter"> with global elements <usesParameter>
/// Element "http://www.opengis.net/gml/3.2":generalOperationParameter.
    gml__AbstractGeneralOperationParameterPropertyType*  generalOperationParameter      nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.opengis.net/gml/3.2":usesParameter.
    gml__AbstractGeneralOperationParameterPropertyType*  usesParameter                  nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
//  END OF SUBSTITUTIONS
    }                                    union_OperationParameterGroupType;
    }                                   *__union_OperationParameterGroupType;
//  END OF SUBSTITUTIONS
};

/// @brief "http://www.opengis.net/gml/3.2":TemporalCSType is a complexType with complexContent extension of XSD type "http://www.opengis.net/gml/3.2":AbstractCoordinateSystemType.
///
/// class gml__TemporalCSType operations:
/// - gml__TemporalCSType* soap_new_gml__TemporalCSType(soap*) allocate and default initialize
/// - gml__TemporalCSType* soap_new_gml__TemporalCSType(soap*, int num) allocate array and default initialize values
/// - gml__TemporalCSType* soap_new_req_gml__TemporalCSType(soap*, ...) allocate, set required members
/// - gml__TemporalCSType* soap_new_set_gml__TemporalCSType(soap*, ...) allocate, set all public members
/// - gml__TemporalCSType::soap_default(soap*) default initialize members
/// - int soap_read_gml__TemporalCSType(soap*, gml__TemporalCSType*) deserialize from a stream
/// - int soap_write_gml__TemporalCSType(soap*, gml__TemporalCSType*) serialize to a stream
/// - gml__TemporalCSType* gml__TemporalCSType::soap_dup(soap*) returns deep copy of gml__TemporalCSType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__TemporalCSType::soap_del() deep deletes gml__TemporalCSType data members, use only after gml__TemporalCSType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__TemporalCSType : public gml__AbstractCoordinateSystemType
{ public:
/*  INHERITED FROM gml__DefinitionBaseType:
    END OF INHERITED FROM gml__DefinitionBaseType */
/*  INHERITED FROM gml__DefinitionType:
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":remarks.
    std::string*                         remarks                        0;	///< Optional element.
    END OF INHERITED FROM gml__DefinitionType */
/*  INHERITED FROM gml__IdentifiedObjectType:
    END OF INHERITED FROM gml__IdentifiedObjectType */
/*  INHERITED FROM gml__AbstractCoordinateSystemType:
/// <PRE><BLOCKQUOTE>
///   The gml:axis property is an association role (ordered sequence) to the coordinate system axes included in this coordinate system. The coordinate values in a coordinate tuple shall be recorded in the order in which the coordinate system axes associations are recorded, whenever those coordinates use a coordinate reference system that uses this coordinate system. The gml:AggregationAttributeGroup should be used to specify that the axis objects are ordered.
/// </BLOCKQUOTE></PRE>
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="axis" maxOccurs="unbounded"> with global elements <usesAxis>
   $int                                  __sizeaxis                     0;
    class __gml__union_TemporalCSType
    {
   $int                                  __unionaxis                   ;	///< Union _gml__union_TemporalCSType selector: set to SOAP_UNION__gml__union_TemporalCSType_<fieldname>
/// Union for substitutionGroup gml__axis.
    union _gml__union_TemporalCSType
    {
/// <PRE><BLOCKQUOTE>
///   The gml:axis property is an association role (ordered sequence) to the coordinate system axes included in this coordinate system. The coordinate values in a coordinate tuple shall be recorded in the order in which the coordinate system axes associations are recorded, whenever those coordinates use a coordinate reference system that uses this coordinate system. The gml:AggregationAttributeGroup should be used to specify that the axis objects are ordered.
/// </BLOCKQUOTE></PRE>
/// Vector of gml__CoordinateSystemAxisPropertyType* element refs of length 1..unbounded.
    std::vector<gml__CoordinateSystemAxisPropertyType*> *axis                           1;
/// Element "http://www.opengis.net/gml/3.2":usesAxis.
    gml__CoordinateSystemAxisPropertyType*  usesAxis                       nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_TemporalCSType          ;
    }                                   *__union_TemporalCSType        ;
//  END OF SUBSTITUTIONS
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":AggregationAttributeGroup">.
/// Attribute "aggregationType" of XSD type "http://www.opengis.net/gml/3.2":AggregationType.
   @enum gml__AggregationType*           aggregationType                0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
    END OF INHERITED FROM gml__AbstractCoordinateSystemType */
};

/// @brief "http://www.opengis.net/gml/3.2":ObliqueCartesianCSType is a complexType with complexContent extension of XSD type "http://www.opengis.net/gml/3.2":AbstractCoordinateSystemType.
///
/// class gml__ObliqueCartesianCSType operations:
/// - gml__ObliqueCartesianCSType* soap_new_gml__ObliqueCartesianCSType(soap*) allocate and default initialize
/// - gml__ObliqueCartesianCSType* soap_new_gml__ObliqueCartesianCSType(soap*, int num) allocate array and default initialize values
/// - gml__ObliqueCartesianCSType* soap_new_req_gml__ObliqueCartesianCSType(soap*, ...) allocate, set required members
/// - gml__ObliqueCartesianCSType* soap_new_set_gml__ObliqueCartesianCSType(soap*, ...) allocate, set all public members
/// - gml__ObliqueCartesianCSType::soap_default(soap*) default initialize members
/// - int soap_read_gml__ObliqueCartesianCSType(soap*, gml__ObliqueCartesianCSType*) deserialize from a stream
/// - int soap_write_gml__ObliqueCartesianCSType(soap*, gml__ObliqueCartesianCSType*) serialize to a stream
/// - gml__ObliqueCartesianCSType* gml__ObliqueCartesianCSType::soap_dup(soap*) returns deep copy of gml__ObliqueCartesianCSType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__ObliqueCartesianCSType::soap_del() deep deletes gml__ObliqueCartesianCSType data members, use only after gml__ObliqueCartesianCSType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__ObliqueCartesianCSType : public gml__AbstractCoordinateSystemType
{ public:
/*  INHERITED FROM gml__DefinitionBaseType:
    END OF INHERITED FROM gml__DefinitionBaseType */
/*  INHERITED FROM gml__DefinitionType:
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":remarks.
    std::string*                         remarks                        0;	///< Optional element.
    END OF INHERITED FROM gml__DefinitionType */
/*  INHERITED FROM gml__IdentifiedObjectType:
    END OF INHERITED FROM gml__IdentifiedObjectType */
/*  INHERITED FROM gml__AbstractCoordinateSystemType:
/// <PRE><BLOCKQUOTE>
///   The gml:axis property is an association role (ordered sequence) to the coordinate system axes included in this coordinate system. The coordinate values in a coordinate tuple shall be recorded in the order in which the coordinate system axes associations are recorded, whenever those coordinates use a coordinate reference system that uses this coordinate system. The gml:AggregationAttributeGroup should be used to specify that the axis objects are ordered.
/// </BLOCKQUOTE></PRE>
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="axis" maxOccurs="unbounded"> with global elements <usesAxis>
   $int                                  __sizeaxis                     0;
    class __gml__union_ObliqueCartesianCSType
    {
   $int                                  __unionaxis                   ;	///< Union _gml__union_ObliqueCartesianCSType selector: set to SOAP_UNION__gml__union_ObliqueCartesianCSType_<fieldname>
/// Union for substitutionGroup gml__axis.
    union _gml__union_ObliqueCartesianCSType
    {
/// <PRE><BLOCKQUOTE>
///   The gml:axis property is an association role (ordered sequence) to the coordinate system axes included in this coordinate system. The coordinate values in a coordinate tuple shall be recorded in the order in which the coordinate system axes associations are recorded, whenever those coordinates use a coordinate reference system that uses this coordinate system. The gml:AggregationAttributeGroup should be used to specify that the axis objects are ordered.
/// </BLOCKQUOTE></PRE>
/// Vector of gml__CoordinateSystemAxisPropertyType* element refs of length 1..unbounded.
    std::vector<gml__CoordinateSystemAxisPropertyType*> *axis                           1;
/// Element "http://www.opengis.net/gml/3.2":usesAxis.
    gml__CoordinateSystemAxisPropertyType*  usesAxis                       nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_ObliqueCartesianCSType  ;
    }                                   *__union_ObliqueCartesianCSType;
//  END OF SUBSTITUTIONS
//  BEGIN ATTRIBUTEGROUP <xs:attributeGroup ref=""http://www.opengis.net/gml/3.2":AggregationAttributeGroup">.
/// Attribute "aggregationType" of XSD type "http://www.opengis.net/gml/3.2":AggregationType.
   @enum gml__AggregationType*           aggregationType                0;	///< Optional attribute.
//  END OF ATTRIBUTEGROUP
    END OF INHERITED FROM gml__AbstractCoordinateSystemType */
};

/// @brief "http://www.opengis.net/gml/3.2":GeographicCRSType is a complexType with complexContent extension of XSD type "http://www.opengis.net/gml/3.2":AbstractCRSType.
///
/// class gml__GeographicCRSType operations:
/// - gml__GeographicCRSType* soap_new_gml__GeographicCRSType(soap*) allocate and default initialize
/// - gml__GeographicCRSType* soap_new_gml__GeographicCRSType(soap*, int num) allocate array and default initialize values
/// - gml__GeographicCRSType* soap_new_req_gml__GeographicCRSType(soap*, ...) allocate, set required members
/// - gml__GeographicCRSType* soap_new_set_gml__GeographicCRSType(soap*, ...) allocate, set all public members
/// - gml__GeographicCRSType::soap_default(soap*) default initialize members
/// - int soap_read_gml__GeographicCRSType(soap*, gml__GeographicCRSType*) deserialize from a stream
/// - int soap_write_gml__GeographicCRSType(soap*, gml__GeographicCRSType*) serialize to a stream
/// - gml__GeographicCRSType* gml__GeographicCRSType::soap_dup(soap*) returns deep copy of gml__GeographicCRSType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__GeographicCRSType::soap_del() deep deletes gml__GeographicCRSType data members, use only after gml__GeographicCRSType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__GeographicCRSType : public gml__AbstractCRSType
{ public:
/*  INHERITED FROM gml__DefinitionBaseType:
    END OF INHERITED FROM gml__DefinitionBaseType */
/*  INHERITED FROM gml__DefinitionType:
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":remarks.
    std::string*                         remarks                        0;	///< Optional element.
    END OF INHERITED FROM gml__DefinitionType */
/*  INHERITED FROM gml__IdentifiedObjectType:
    END OF INHERITED FROM gml__IdentifiedObjectType */
/*  INHERITED FROM gml__AbstractCRSType:
/// <PRE><BLOCKQUOTE>
///   The gml:domainOfValidity property implements an association role to an EX_Extent object as encoded in ISO/TS 19139, either referencing or containing the definition of that extent.
/// </BLOCKQUOTE></PRE>
/// Vector of _gml__domainOfValidity* element refs of length 0..unbounded.
    std::vector<_gml__domainOfValidity*> domainOfValidity               0;
/// <PRE><BLOCKQUOTE>
///   The gml:scope property provides a description of the usage, or limitations of usage, for which this CRS-related object is valid. If unknown, enter "not known".
/// </BLOCKQUOTE></PRE>
/// Vector of std::string element refs of length 1..unbounded.
    std::vector<std::string            > scope                          1;
    END OF INHERITED FROM gml__AbstractCRSType */
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":usesEllipsoidalCS.
    gml__EllipsoidalCSPropertyType*      usesEllipsoidalCS              1;	///< Required element.
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":usesGeodeticDatum.
    gml__GeodeticDatumPropertyType*      usesGeodeticDatum              1;	///< Required element.
};

/// @brief "http://www.opengis.net/gml/3.2":GeocentricCRSType is a complexType with complexContent extension of XSD type "http://www.opengis.net/gml/3.2":AbstractCRSType.
///
/// class gml__GeocentricCRSType operations:
/// - gml__GeocentricCRSType* soap_new_gml__GeocentricCRSType(soap*) allocate and default initialize
/// - gml__GeocentricCRSType* soap_new_gml__GeocentricCRSType(soap*, int num) allocate array and default initialize values
/// - gml__GeocentricCRSType* soap_new_req_gml__GeocentricCRSType(soap*, ...) allocate, set required members
/// - gml__GeocentricCRSType* soap_new_set_gml__GeocentricCRSType(soap*, ...) allocate, set all public members
/// - gml__GeocentricCRSType::soap_default(soap*) default initialize members
/// - int soap_read_gml__GeocentricCRSType(soap*, gml__GeocentricCRSType*) deserialize from a stream
/// - int soap_write_gml__GeocentricCRSType(soap*, gml__GeocentricCRSType*) serialize to a stream
/// - gml__GeocentricCRSType* gml__GeocentricCRSType::soap_dup(soap*) returns deep copy of gml__GeocentricCRSType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__GeocentricCRSType::soap_del() deep deletes gml__GeocentricCRSType data members, use only after gml__GeocentricCRSType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__GeocentricCRSType : public gml__AbstractCRSType
{ public:
/*  INHERITED FROM gml__DefinitionBaseType:
    END OF INHERITED FROM gml__DefinitionBaseType */
/*  INHERITED FROM gml__DefinitionType:
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":remarks.
    std::string*                         remarks                        0;	///< Optional element.
    END OF INHERITED FROM gml__DefinitionType */
/*  INHERITED FROM gml__IdentifiedObjectType:
    END OF INHERITED FROM gml__IdentifiedObjectType */
/*  INHERITED FROM gml__AbstractCRSType:
/// <PRE><BLOCKQUOTE>
///   The gml:domainOfValidity property implements an association role to an EX_Extent object as encoded in ISO/TS 19139, either referencing or containing the definition of that extent.
/// </BLOCKQUOTE></PRE>
/// Vector of _gml__domainOfValidity* element refs of length 0..unbounded.
    std::vector<_gml__domainOfValidity*> domainOfValidity               0;
/// <PRE><BLOCKQUOTE>
///   The gml:scope property provides a description of the usage, or limitations of usage, for which this CRS-related object is valid. If unknown, enter "not known".
/// </BLOCKQUOTE></PRE>
/// Vector of std::string element refs of length 1..unbounded.
    std::vector<std::string            > scope                          1;
    END OF INHERITED FROM gml__AbstractCRSType */
//  BEGIN CHOICE <xs:choice>
   $int                                  __union_GeocentricCRSType     ;	///< Union _gml__union_GeocentricCRSType selector: set to SOAP_UNION__gml__union_GeocentricCRSType_<fieldname>
    union _gml__union_GeocentricCRSType
    {
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":usesCartesianCS.
    gml__CartesianCSPropertyType*        usesCartesianCS                nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":usesSphericalCS.
    gml__SphericalCSPropertyType*        usesSphericalCS                nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_GeocentricCRSType       ;
//  END OF CHOICE
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":usesGeodeticDatum.
    gml__GeodeticDatumPropertyType*      usesGeodeticDatum              1;	///< Required element.
};

/// @brief "http://www.opengis.net/gml/3.2":ProjectedCRSType is a complexType with complexContent extension of XSD type "http://www.opengis.net/gml/3.2":AbstractGeneralDerivedCRSType.
///
/// class gml__ProjectedCRSType operations:
/// - gml__ProjectedCRSType* soap_new_gml__ProjectedCRSType(soap*) allocate and default initialize
/// - gml__ProjectedCRSType* soap_new_gml__ProjectedCRSType(soap*, int num) allocate array and default initialize values
/// - gml__ProjectedCRSType* soap_new_req_gml__ProjectedCRSType(soap*, ...) allocate, set required members
/// - gml__ProjectedCRSType* soap_new_set_gml__ProjectedCRSType(soap*, ...) allocate, set all public members
/// - gml__ProjectedCRSType::soap_default(soap*) default initialize members
/// - int soap_read_gml__ProjectedCRSType(soap*, gml__ProjectedCRSType*) deserialize from a stream
/// - int soap_write_gml__ProjectedCRSType(soap*, gml__ProjectedCRSType*) serialize to a stream
/// - gml__ProjectedCRSType* gml__ProjectedCRSType::soap_dup(soap*) returns deep copy of gml__ProjectedCRSType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__ProjectedCRSType::soap_del() deep deletes gml__ProjectedCRSType data members, use only after gml__ProjectedCRSType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__ProjectedCRSType : public gml__AbstractGeneralDerivedCRSType
{ public:
/*  INHERITED FROM gml__DefinitionBaseType:
    END OF INHERITED FROM gml__DefinitionBaseType */
/*  INHERITED FROM gml__DefinitionType:
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":remarks.
    std::string*                         remarks                        0;	///< Optional element.
    END OF INHERITED FROM gml__DefinitionType */
/*  INHERITED FROM gml__IdentifiedObjectType:
    END OF INHERITED FROM gml__IdentifiedObjectType */
/*  INHERITED FROM gml__AbstractCRSType:
/// <PRE><BLOCKQUOTE>
///   The gml:domainOfValidity property implements an association role to an EX_Extent object as encoded in ISO/TS 19139, either referencing or containing the definition of that extent.
/// </BLOCKQUOTE></PRE>
/// Vector of _gml__domainOfValidity* element refs of length 0..unbounded.
    std::vector<_gml__domainOfValidity*> domainOfValidity               0;
/// <PRE><BLOCKQUOTE>
///   The gml:scope property provides a description of the usage, or limitations of usage, for which this CRS-related object is valid. If unknown, enter "not known".
/// </BLOCKQUOTE></PRE>
/// Vector of std::string element refs of length 1..unbounded.
    std::vector<std::string            > scope                          1;
    END OF INHERITED FROM gml__AbstractCRSType */
/*  INHERITED FROM gml__AbstractGeneralDerivedCRSType:
/// <PRE><BLOCKQUOTE>
///   gml:conversion is an association role to the coordinate conversion used to define the derived CRS.
/// </BLOCKQUOTE></PRE>
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="conversion"> with global elements <definedByConversion>
   $int                                  __unionconversion             ;	///< Union _gml__union_ProjectedCRSType selector: set to SOAP_UNION__gml__union_ProjectedCRSType_<fieldname>
/// Union for substitutionGroup gml__conversion.
    union _gml__union_ProjectedCRSType
    {
/// <PRE><BLOCKQUOTE>
///   gml:conversion is an association role to the coordinate conversion used to define the derived CRS.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":conversion.
    gml__GeneralConversionPropertyType*  conversion                     nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.opengis.net/gml/3.2":definedByConversion.
    gml__GeneralConversionPropertyType*  definedByConversion            nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_ProjectedCRSType        ;
//  END OF SUBSTITUTIONS
    END OF INHERITED FROM gml__AbstractGeneralDerivedCRSType */
//  BEGIN CHOICE <xs:choice>
   $int                                  __union_ProjectedCRSType_     ;	///< Union _gml__union_ProjectedCRSType_ selector: set to SOAP_UNION__gml__union_ProjectedCRSType__<fieldname>
    union _gml__union_ProjectedCRSType_
    {
/// <PRE><BLOCKQUOTE>
///   gml:baseGeodeticCRS is an association role to the geodetic coordinate reference system used by this projected CRS.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":baseGeodeticCRS.
    gml__GeodeticCRSPropertyType*        baseGeodeticCRS                nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":baseGeographicCRS.
    gml__GeographicCRSPropertyType*      baseGeographicCRS              nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_ProjectedCRSType_       ;
//  END OF CHOICE
/// <PRE><BLOCKQUOTE>
///   gml:cartesianCS is an association role to the Cartesian coordinate system used by this CRS.
/// </BLOCKQUOTE></PRE>
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="cartesianCS"> with global elements <usesCartesianCS>
   $int                                  __unioncartesianCS            ;	///< Union _gml__union_ProjectedCRSType__ selector: set to SOAP_UNION__gml__union_ProjectedCRSType___<fieldname>
/// Union for substitutionGroup gml__cartesianCS.
    union _gml__union_ProjectedCRSType__
    {
/// <PRE><BLOCKQUOTE>
///   gml:cartesianCS is an association role to the Cartesian coordinate system used by this CRS.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":cartesianCS.
    gml__CartesianCSPropertyType*        cartesianCS                    nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.opengis.net/gml/3.2":usesCartesianCS.
    gml__CartesianCSPropertyType*        usesCartesianCS                nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_ProjectedCRSType__      ;
//  END OF SUBSTITUTIONS
};

/// @brief "http://www.opengis.net/gml/3.2":DerivedCRSType is a complexType with complexContent extension of XSD type "http://www.opengis.net/gml/3.2":AbstractGeneralDerivedCRSType.
///
/// class gml__DerivedCRSType operations:
/// - gml__DerivedCRSType* soap_new_gml__DerivedCRSType(soap*) allocate and default initialize
/// - gml__DerivedCRSType* soap_new_gml__DerivedCRSType(soap*, int num) allocate array and default initialize values
/// - gml__DerivedCRSType* soap_new_req_gml__DerivedCRSType(soap*, ...) allocate, set required members
/// - gml__DerivedCRSType* soap_new_set_gml__DerivedCRSType(soap*, ...) allocate, set all public members
/// - gml__DerivedCRSType::soap_default(soap*) default initialize members
/// - int soap_read_gml__DerivedCRSType(soap*, gml__DerivedCRSType*) deserialize from a stream
/// - int soap_write_gml__DerivedCRSType(soap*, gml__DerivedCRSType*) serialize to a stream
/// - gml__DerivedCRSType* gml__DerivedCRSType::soap_dup(soap*) returns deep copy of gml__DerivedCRSType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__DerivedCRSType::soap_del() deep deletes gml__DerivedCRSType data members, use only after gml__DerivedCRSType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__DerivedCRSType : public gml__AbstractGeneralDerivedCRSType
{ public:
/*  INHERITED FROM gml__DefinitionBaseType:
    END OF INHERITED FROM gml__DefinitionBaseType */
/*  INHERITED FROM gml__DefinitionType:
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":remarks.
    std::string*                         remarks                        0;	///< Optional element.
    END OF INHERITED FROM gml__DefinitionType */
/*  INHERITED FROM gml__IdentifiedObjectType:
    END OF INHERITED FROM gml__IdentifiedObjectType */
/*  INHERITED FROM gml__AbstractCRSType:
/// <PRE><BLOCKQUOTE>
///   The gml:domainOfValidity property implements an association role to an EX_Extent object as encoded in ISO/TS 19139, either referencing or containing the definition of that extent.
/// </BLOCKQUOTE></PRE>
/// Vector of _gml__domainOfValidity* element refs of length 0..unbounded.
    std::vector<_gml__domainOfValidity*> domainOfValidity               0;
/// <PRE><BLOCKQUOTE>
///   The gml:scope property provides a description of the usage, or limitations of usage, for which this CRS-related object is valid. If unknown, enter "not known".
/// </BLOCKQUOTE></PRE>
/// Vector of std::string element refs of length 1..unbounded.
    std::vector<std::string            > scope                          1;
    END OF INHERITED FROM gml__AbstractCRSType */
/*  INHERITED FROM gml__AbstractGeneralDerivedCRSType:
/// <PRE><BLOCKQUOTE>
///   gml:conversion is an association role to the coordinate conversion used to define the derived CRS.
/// </BLOCKQUOTE></PRE>
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="conversion"> with global elements <definedByConversion>
   $int                                  __unionconversion             ;	///< Union _gml__union_DerivedCRSType selector: set to SOAP_UNION__gml__union_DerivedCRSType_<fieldname>
/// Union for substitutionGroup gml__conversion.
    union _gml__union_DerivedCRSType
    {
/// <PRE><BLOCKQUOTE>
///   gml:conversion is an association role to the coordinate conversion used to define the derived CRS.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":conversion.
    gml__GeneralConversionPropertyType*  conversion                     nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.opengis.net/gml/3.2":definedByConversion.
    gml__GeneralConversionPropertyType*  definedByConversion            nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_DerivedCRSType          ;
//  END OF SUBSTITUTIONS
    END OF INHERITED FROM gml__AbstractGeneralDerivedCRSType */
/// <PRE><BLOCKQUOTE>
///   gml:baseCRS is an association role to the coordinate reference system used by this derived CRS.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":baseCRS.
    gml__SingleCRSPropertyType*          baseCRS                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The gml:derivedCRSType property describes the type of a derived coordinate reference system. The required codeSpace attribute shall reference a source of information specifying the values and meanings of all the allowed string values for this property.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":derivedCRSType.
    gml__CodeWithAuthorityType*          derivedCRSType                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   An association role to the coordinate system used by this CRS.
/// </BLOCKQUOTE></PRE>
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="coordinateSystem"> with global elements <usesCS>
   $int                                  __unioncoordinateSystem       ;	///< Union _gml__union_DerivedCRSType_ selector: set to SOAP_UNION__gml__union_DerivedCRSType__<fieldname>
/// Union for substitutionGroup gml__coordinateSystem.
    union _gml__union_DerivedCRSType_
    {
/// <PRE><BLOCKQUOTE>
///   An association role to the coordinate system used by this CRS.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":coordinateSystem.
    gml__CoordinateSystemPropertyType*   coordinateSystem               nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.opengis.net/gml/3.2":usesCS.
    gml__CoordinateSystemPropertyType*   usesCS                         nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_DerivedCRSType_         ;
//  END OF SUBSTITUTIONS
};

/// @brief "http://www.opengis.net/gml/3.2":TemporalDatumType is a complexType with complexContent extension of XSD type "http://www.opengis.net/gml/3.2":TemporalDatumBaseType.
///
/// class gml__TemporalDatumType operations:
/// - gml__TemporalDatumType* soap_new_gml__TemporalDatumType(soap*) allocate and default initialize
/// - gml__TemporalDatumType* soap_new_gml__TemporalDatumType(soap*, int num) allocate array and default initialize values
/// - gml__TemporalDatumType* soap_new_req_gml__TemporalDatumType(soap*, ...) allocate, set required members
/// - gml__TemporalDatumType* soap_new_set_gml__TemporalDatumType(soap*, ...) allocate, set all public members
/// - gml__TemporalDatumType::soap_default(soap*) default initialize members
/// - int soap_read_gml__TemporalDatumType(soap*, gml__TemporalDatumType*) deserialize from a stream
/// - int soap_write_gml__TemporalDatumType(soap*, gml__TemporalDatumType*) serialize to a stream
/// - gml__TemporalDatumType* gml__TemporalDatumType::soap_dup(soap*) returns deep copy of gml__TemporalDatumType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__TemporalDatumType::soap_del() deep deletes gml__TemporalDatumType data members, use only after gml__TemporalDatumType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__TemporalDatumType : public gml__TemporalDatumBaseType
{ public:
/*  INHERITED FROM gml__TemporalDatumBaseType:
    END OF INHERITED FROM gml__TemporalDatumBaseType */
/// <PRE><BLOCKQUOTE>
///   gml:origin is the date and time origin of this temporal datum.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":origin.
    time_t                               origin                         1;	///< Required element.
};

/// @brief "http://www.opengis.net/gml/3.2":ConversionType is a complexType with complexContent extension of XSD type "http://www.opengis.net/gml/3.2":AbstractGeneralConversionType.
///
/// class gml__ConversionType operations:
/// - gml__ConversionType* soap_new_gml__ConversionType(soap*) allocate and default initialize
/// - gml__ConversionType* soap_new_gml__ConversionType(soap*, int num) allocate array and default initialize values
/// - gml__ConversionType* soap_new_req_gml__ConversionType(soap*, ...) allocate, set required members
/// - gml__ConversionType* soap_new_set_gml__ConversionType(soap*, ...) allocate, set all public members
/// - gml__ConversionType::soap_default(soap*) default initialize members
/// - int soap_read_gml__ConversionType(soap*, gml__ConversionType*) deserialize from a stream
/// - int soap_write_gml__ConversionType(soap*, gml__ConversionType*) serialize to a stream
/// - gml__ConversionType* gml__ConversionType::soap_dup(soap*) returns deep copy of gml__ConversionType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__ConversionType::soap_del() deep deletes gml__ConversionType data members, use only after gml__ConversionType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__ConversionType : public gml__AbstractGeneralConversionType
{ public:
/*  INHERITED FROM gml__AbstractGeneralConversionType:
    END OF INHERITED FROM gml__AbstractGeneralConversionType */
/// <PRE><BLOCKQUOTE>
///   gml:method is an association role to the operation method used by a coordinate operation.
/// </BLOCKQUOTE></PRE>
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="method"> with global elements <usesMethod>
   $int                                  __unionmethod                 ;	///< Union _gml__union_ConversionType selector: set to SOAP_UNION__gml__union_ConversionType_<fieldname>
/// Union for substitutionGroup gml__method.
    union _gml__union_ConversionType
    {
/// <PRE><BLOCKQUOTE>
///   gml:method is an association role to the operation method used by a coordinate operation.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":method.
    gml__OperationMethodPropertyType*    method                         nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.opengis.net/gml/3.2":usesMethod.
    gml__OperationMethodPropertyType*    usesMethod                     nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_ConversionType          ;
//  END OF SUBSTITUTIONS
/// <PRE><BLOCKQUOTE>
///   gml:parameterValue is a composition association to a parameter value or group of parameter values used by a coordinate operation.
/// </BLOCKQUOTE></PRE>
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="parameterValue" minOccurs="0" maxOccurs="unbounded"> with global elements <usesValue> <includesValue>
   $int                                  __sizeparameterValue           0;
    class __gml__union_ConversionType_
    {
   $int                                  __unionparameterValue          0;	///< Union _gml__union_ConversionType_ selector: set to SOAP_UNION__gml__union_ConversionType__<fieldname> or 0 to omit
/// Union for substitutionGroup gml__parameterValue.
    union _gml__union_ConversionType_
    {
/// <PRE><BLOCKQUOTE>
///   gml:parameterValue is a composition association to a parameter value or group of parameter values used by a coordinate operation.
/// </BLOCKQUOTE></PRE>
/// Vector of gml__AbstractGeneralParameterValuePropertyType* element refs of length 0..unbounded.
    std::vector<gml__AbstractGeneralParameterValuePropertyType*> *parameterValue                 0;
/// Element "http://www.opengis.net/gml/3.2":usesValue.
    gml__AbstractGeneralParameterValuePropertyType*  usesValue                      nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.opengis.net/gml/3.2":includesValue.
    gml__AbstractGeneralParameterValuePropertyType*  includesValue                  nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_ConversionType_         ;
    }                                   *__union_ConversionType_       ;
//  END OF SUBSTITUTIONS
};

/// @brief "http://www.opengis.net/gml/3.2":TransformationType is a complexType with complexContent extension of XSD type "http://www.opengis.net/gml/3.2":AbstractGeneralTransformationType.
///
/// class gml__TransformationType operations:
/// - gml__TransformationType* soap_new_gml__TransformationType(soap*) allocate and default initialize
/// - gml__TransformationType* soap_new_gml__TransformationType(soap*, int num) allocate array and default initialize values
/// - gml__TransformationType* soap_new_req_gml__TransformationType(soap*, ...) allocate, set required members
/// - gml__TransformationType* soap_new_set_gml__TransformationType(soap*, ...) allocate, set all public members
/// - gml__TransformationType::soap_default(soap*) default initialize members
/// - int soap_read_gml__TransformationType(soap*, gml__TransformationType*) deserialize from a stream
/// - int soap_write_gml__TransformationType(soap*, gml__TransformationType*) serialize to a stream
/// - gml__TransformationType* gml__TransformationType::soap_dup(soap*) returns deep copy of gml__TransformationType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - gml__TransformationType::soap_del() deep deletes gml__TransformationType data members, use only after gml__TransformationType::soap_dup(NULL) (use soapcpp2 -Ed)
class gml__TransformationType : public gml__AbstractGeneralTransformationType
{ public:
/*  INHERITED FROM gml__AbstractGeneralTransformationType:
    END OF INHERITED FROM gml__AbstractGeneralTransformationType */
/// <PRE><BLOCKQUOTE>
///   gml:method is an association role to the operation method used by a coordinate operation.
/// </BLOCKQUOTE></PRE>
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="method"> with global elements <usesMethod>
   $int                                  __unionmethod                 ;	///< Union _gml__union_TransformationType selector: set to SOAP_UNION__gml__union_TransformationType_<fieldname>
/// Union for substitutionGroup gml__method.
    union _gml__union_TransformationType
    {
/// <PRE><BLOCKQUOTE>
///   gml:method is an association role to the operation method used by a coordinate operation.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.opengis.net/gml/3.2:""http://www.opengis.net/gml/3.2":method.
    gml__OperationMethodPropertyType*    method                         nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.opengis.net/gml/3.2":usesMethod.
    gml__OperationMethodPropertyType*    usesMethod                     nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_TransformationType      ;
//  END OF SUBSTITUTIONS
/// <PRE><BLOCKQUOTE>
///   gml:parameterValue is a composition association to a parameter value or group of parameter values used by a coordinate operation.
/// </BLOCKQUOTE></PRE>
//  BEGIN CHOICE OF SUBSTITUTIONS <xs:element substitutionGroup="parameterValue" minOccurs="0" maxOccurs="unbounded"> with global elements <usesValue> <includesValue>
   $int                                  __sizeparameterValue           0;
    class __gml__union_TransformationType_
    {
   $int                                  __unionparameterValue          0;	///< Union _gml__union_TransformationType_ selector: set to SOAP_UNION__gml__union_TransformationType__<fieldname> or 0 to omit
/// Union for substitutionGroup gml__parameterValue.
    union _gml__union_TransformationType_
    {
/// <PRE><BLOCKQUOTE>
///   gml:parameterValue is a composition association to a parameter value or group of parameter values used by a coordinate operation.
/// </BLOCKQUOTE></PRE>
/// Vector of gml__AbstractGeneralParameterValuePropertyType* element refs of length 0..unbounded.
    std::vector<gml__AbstractGeneralParameterValuePropertyType*> *parameterValue                 0;
/// Element "http://www.opengis.net/gml/3.2":usesValue.
    gml__AbstractGeneralParameterValuePropertyType*  usesValue                      nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "http://www.opengis.net/gml/3.2":includesValue.
    gml__AbstractGeneralParameterValuePropertyType*  includesValue                  nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
    }                                    union_TransformationType_     ;
    }                                   *__union_TransformationType_   ;
//  END OF SUBSTITUTIONS
};


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://inspire.ec.europa.eu/schemas/plu/3.0                              *
 *                                                                            *
\******************************************************************************/

/// @brief Top-level root element "http://inspire.ec.europa.eu/schemas/plu/3.0":ZoningElement of XSD type "http://inspire.ec.europa.eu/schemas/plu/3.0":ZoningElementType.
/// <PRE><BLOCKQUOTE>
///   -- Name --
///   zoning element
///   -- Definition --
///   A spatial object which is homogeneous regarding the permitted uses of land based on zoning which separate one set of land uses from another.
///   -- Description --
///   Zoning elements refer to the regulation of the kinds of activities which will be acceptable on particular lots (such as open space, residential, agricultural, commercial or industrial). The intensity of use at which those activities can be performed (from low-density housing such as single family homes to high-density such as high-rise apartment buildings), the height of buildings, the amount of space that structures may occupy, the proportions of the types of space on a lot, such as how much landscaped space, impervious surface, traffic lanes, and parking may be provided.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://inspire.ec.europa.eu/schemas/plu/3.0":OfficialDocumentation of XSD type "http://inspire.ec.europa.eu/schemas/plu/3.0":OfficialDocumentationType.
/// <PRE><BLOCKQUOTE>
///   -- Name --
///   official documentation
///   -- Definition --
///   The official documentation that composes the spatial plan; it may be composed of, the applicable legislation, the regulations, cartographic elements, descriptive elements that may be associated with the complete spatial plan, a zoning element or a supplementary regulation . In some Member States the actual textual regulation will be part of the data set (and can be put in the regulationText attribute), in other Member States the text will not be part of the data set and will be referenced via a reference to a document or a legal act.
///   At least one of the three voidable values shall be provided.
///   -- Description --
///   NOTE: The LegislationCitation is the value type of the attribute regulation reference. An example of a regulation reference would be: http://www2.vlaanderen.be /ruimtelijk/grup/00350/00362_00001/data/ 212_00362_00001_d_0BVR.pdf.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://inspire.ec.europa.eu/schemas/plu/3.0":DimensioningIndicationMeasureValue of XSD type "http://inspire.ec.europa.eu/schemas/plu/3.0":DimensioningIndicationMeasureValueType.
/// <PRE><BLOCKQUOTE>
///   -- Name --
///   dimension indication measure value
///   -- Definition --
///   Dimensioning indication whose value is a measure.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://inspire.ec.europa.eu/schemas/plu/3.0":DimensioningIndicationIntegerValue of XSD type "http://inspire.ec.europa.eu/schemas/plu/3.0":DimensioningIndicationIntegerValueType.
/// <PRE><BLOCKQUOTE>
///   -- Name --
///   dimension indication integer value
///   -- Definition --
///   Dimensioning indication whose value is of type integer.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://inspire.ec.europa.eu/schemas/plu/3.0":DimensioningIndicationCharacterValue of XSD type "http://inspire.ec.europa.eu/schemas/plu/3.0":DimensioningIndicationCharacterValueType.
/// <PRE><BLOCKQUOTE>
///   -- Name --
///   dimension indication character value
///   -- Definition --
///   Dimensioning indication whose value is of type CharacterString.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://inspire.ec.europa.eu/schemas/plu/3.0":SupplementaryRegulation of XSD type "http://inspire.ec.europa.eu/schemas/plu/3.0":SupplementaryRegulationType.
/// <PRE><BLOCKQUOTE>
///   -- Name --
///   supplementary regulation
///   -- Definition --
///   A spatial object (point, line or polygon) of a spatial plan that provides supplementary information and/or limitation of the use of land/water necessary for spatial planning reasons or to formalise external rules defined in legal text.
///   -- Description --
///   NOTE the supplementary regulations affects all land use that overlap with the geometry
///   EXAMPLE an air field generates restriction in its surroundings regarding aircraft landing, radar and telecommunication devices. It is the buffer around these artefacts that generates the supplementary regulation on the Land Use.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://inspire.ec.europa.eu/schemas/plu/3.0":DimensioningIndicationValue of XSD type "http://inspire.ec.europa.eu/schemas/plu/3.0":DimensioningIndicationValueType.
/// <PRE><BLOCKQUOTE>
///   -- Name --
///   Dimension Indication
///   -- Definition --
///   Specifications about the dimensioning of the urban developments.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://inspire.ec.europa.eu/schemas/plu/3.0":SpatialPlan of XSD type "http://inspire.ec.europa.eu/schemas/plu/3.0":SpatialPlanType.
/// <PRE><BLOCKQUOTE>
///   -- Name --
///   spatial plan
///   -- Definition --
///   A set of documents that indicates a strategic direction for the development of a given geographic area, states the policies, priorities, programmes and land allocations that will implement the strategic direction and influences the distribution of people and activities in spaces of various scales. Spatial plans may be developed for urban planning, regional planning, environmental planning, landscape planning, national spatial plans, or spatial planning at the Union level.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://inspire.ec.europa.eu/schemas/plu/3.0":DimensioningIndicationRealValue of XSD type "http://inspire.ec.europa.eu/schemas/plu/3.0":DimensioningIndicationRealValueType.
/// <PRE><BLOCKQUOTE>
///   -- Name --
///   dimension indication real value
///   -- Definition --
///   Dimensioning indication whose value is a floating point number.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://inspire.ec.europa.eu/schemas/plu/3.0":OrdinanceValue of XSD type "http://inspire.ec.europa.eu/schemas/plu/3.0":OrdinanceValueType.
/// <PRE><BLOCKQUOTE>
///   -- Definition --
///   Reference to administrative ordinance. Ordinance is a regulation/rule that is adopted by an authority that is legally mandated to take such ordinance.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://inspire.ec.europa.eu/schemas/plu/3.0":BackgroundMapValue of XSD type "http://inspire.ec.europa.eu/schemas/plu/3.0":BackgroundMapValueType.
/// <PRE><BLOCKQUOTE>
///   -- Definition --
///   Information regarding the map that has been used as a background in the definition of a spatial plan, a zoning element or a supplementary regulation.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://inspire.ec.europa.eu/schemas/plu/3.0                              *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://inspire.ec.europa.eu/schemas/base/3.3                             *
 *                                                                            *
\******************************************************************************/

/// @brief Top-level root element "http://inspire.ec.europa.eu/schemas/base/3.3":SpatialDataSet of XSD type "http://inspire.ec.europa.eu/schemas/base/3.3":SpatialDataSetType.
/// <PRE><BLOCKQUOTE>
///   -- Definition --
///   Identifiable collection of spatial data.
///   -- Description --
///   WARNING This element has been deprecated in v3.3.1 of this schema (in accordance with D2.7 v3.3 Recommendation 11 stating that wfs:FeatureCollection should be used instead of base:SpatialDataSet).
///   NOTE The type SpatialDataSet is offered as a pre-defined type for spatial data sets. The scope of this type is packaging pre-defined data sets for the non-direct access download service. It may be reused in thematic application schemas, but if it does not fit an application-schema-specific data set object should be modelled. This type may have the same name and definition like this type, but may have a different set of properties.
///   This type specifies three properties: an external object identifier, a container for metadata (may be void), and an association to zero or more spatial objects.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://inspire.ec.europa.eu/schemas/base/3.3":Identifier of XSD type "http://inspire.ec.europa.eu/schemas/base/3.3":IdentifierType.
/// <PRE><BLOCKQUOTE>
///   -- Definition --
///   External unique object identifier published by the responsible body, which may be used by external applications to reference the spatial object.
///   -- Description --
///   NOTE1 External object identifiers are distinct from thematic object identifiers.
///   NOTE 2 The voidable version identifier attribute is not part of the unique identifier of a spatial object and may be used to distinguish two versions of the same spatial object.
///   NOTE 3 The unique identifier will not change during the life-time of a spatial object.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://inspire.ec.europa.eu/schemas/base/3.3                             *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://inspire.ec.europa.eu/schemas/base2/1.0                            *
 *                                                                            *
\******************************************************************************/

/// @brief Top-level root element "http://inspire.ec.europa.eu/schemas/base2/1.0":OfficialJournalInformation of XSD type "http://inspire.ec.europa.eu/schemas/base2/1.0":OfficialJournalInformationType.
/// <PRE><BLOCKQUOTE>
///   -- Name --
///   official journal information
///   -- Definition --
///   Full citation of the location of the legislative instrument within the official journal.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://inspire.ec.europa.eu/schemas/base2/1.0":LegislationCitation of XSD type "http://inspire.ec.europa.eu/schemas/base2/1.0":LegislationCitationType.
/// <PRE><BLOCKQUOTE>
///   -- Name --
///   legislation citation
///   -- Definition --
///   Citation for the purposes of unambiguously referencing a legal act or a specific part of a legal act.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://inspire.ec.europa.eu/schemas/base2/1.0":Contact of XSD type "http://inspire.ec.europa.eu/schemas/base2/1.0":ContactType.
/// <PRE><BLOCKQUOTE>
///   -- Name --
///   contact
///   -- Definition --
///   Communication channels by which it is possible to gain access to someone or something.
///   -- Description --
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://inspire.ec.europa.eu/schemas/base2/1.0":RelatedParty of XSD type "http://inspire.ec.europa.eu/schemas/base2/1.0":RelatedPartyType.
/// <PRE><BLOCKQUOTE>
///   -- Name --
///   related party
///   -- Definition --
///   An organisation or a person with a role related to a resource.
///   -- Description --
///   NOTE 1 A party, typically an individual person, acting as a general point of contact for a resource can be specified without providing any particular role.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://inspire.ec.europa.eu/schemas/base2/1.0":DocumentCitation of XSD type "http://inspire.ec.europa.eu/schemas/base2/1.0":DocumentCitationType.
/// <PRE><BLOCKQUOTE>
///   -- Name --
///   document citation
///   -- Definition --
///   Citation for the purposes of unambiguously referencing a document.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://inspire.ec.europa.eu/schemas/base2/1.0":ThematicIdentifier of XSD type "http://inspire.ec.europa.eu/schemas/base2/1.0":ThematicIdentifierType.
/// <PRE><BLOCKQUOTE>
///   -- Name --
///   thematic identifier
///   -- Definition --
///   Thematic identifier to uniquely identify the spatial object. -- Description --
///   Some spatial objects may be assigned multiple unique identifiers. These may have been established to meet data exchange requirements of different reporting obligations at International, European or national levels and/or internal data maintenance requirements.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://inspire.ec.europa.eu/schemas/base2/1.0                            *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://inspire.ec.europa.eu/schemas/lunom/3.0                            *
 *                                                                            *
\******************************************************************************/

/// @brief Top-level root element "http://inspire.ec.europa.eu/schemas/lunom/3.0":HILUCSPresence of XSD type "http://inspire.ec.europa.eu/schemas/lunom/3.0":HILUCSPresenceType.
/// <PRE><BLOCKQUOTE>
///   -- Name --
///   HILUCS presence
///   -- Definition --
///   Presence of one or several HILUCS values in an area, indicated either as the percentage covered for each value or as the values listed in their order of importance.
///   -- Description --
///   The HILUCS presence data type enables the provision of information on land uses inside one land use object in order to collect more than one land use existence perfectly identifiable by importance order or percentages. NOTE 1: The order of land use value presence without percentages enable providing an order of dominance/importance of each land use present in the land use object
///   NOTE 2: The sum of the percentages can be below 100%, or above. The order is provided according to the respective importance when the percentages are not known.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://inspire.ec.europa.eu/schemas/lunom/3.0":SpecificPercentage of XSD type "http://inspire.ec.europa.eu/schemas/lunom/3.0":SpecificPercentageType.
/// <PRE><BLOCKQUOTE>
///   -- Name --
///   specific percentage
///   -- Definition --
///   Percentage of land use object that is covered by this specific presence.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://inspire.ec.europa.eu/schemas/lunom/3.0":SpecificPresence of XSD type "http://inspire.ec.europa.eu/schemas/lunom/3.0":SpecificPresenceType.
/// <PRE><BLOCKQUOTE>
///   -- Name --
///   specific presence
///   -- Definition --
///   Presence of one or several land use classification values in an area according to the code list
///   provided by the data provider, indicated either as the percentage covered for each value or as
///   the values listed in their order of importance.
///   -- Description --
///   NOTE 1: The order of land use value presence without percentages enable providing an order of dominance/importance of each land use present in the land use object
///   NOTE 2: The sum of the percentages can be below 100%, or above. The order is provided according to the respective importance when the percentages are not known.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://inspire.ec.europa.eu/schemas/lunom/3.0":HILUCSPercentage of XSD type "http://inspire.ec.europa.eu/schemas/lunom/3.0":HILUCSPercentageType.
/// <PRE><BLOCKQUOTE>
///   -- Name --
///   HILUCS percentage
///   -- Definition --
///   Percentage of land use object that is covered by this HILUCS presence.
///   -- Description --
///   NOTE1:The percentage is according to the socio-economic or functional importance of the use.
///   NOTE2:examples are provided in the narrative description part of the data specification.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://inspire.ec.europa.eu/schemas/lunom/3.0                            *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://www.interactive-instruments.de/ShapeChange/AppInfo                *
 *                                                                            *
\******************************************************************************/

/// @brief Top-level root element "http://www.interactive-instruments.de/ShapeChange/AppInfo":profiles of XSD type xs:string.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.interactive-instruments.de/ShapeChange/AppInfo":name of XSD type xs:string.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.interactive-instruments.de/ShapeChange/AppInfo":code of XSD type xs:string.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://www.interactive-instruments.de/ShapeChange/AppInfo                *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://www.opengis.net/gml/3.2                                           *
 *                                                                            *
\******************************************************************************/

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":dataSource of XSD type "http://www.opengis.net/gml/3.2":StringOrRefType.
/// <PRE><BLOCKQUOTE>
///   Evidence is represented by a simple gml:dataSource or gml:dataSourceReference property that indicates the source of the temporal data. The remote link attributes of the gml:dataSource element have been deprecated along with its current type.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":dataSourceReference of XSD type "http://www.opengis.net/gml/3.2":ReferenceType.
/// <PRE><BLOCKQUOTE>
///   Evidence is represented by a simple gml:dataSource or gml:dataSourceReference property that indicates the source of the temporal data.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":DynamicFeature of XSD type "http://www.opengis.net/gml/3.2":DynamicFeatureType.
/// <PRE><BLOCKQUOTE>
///   States are captured by time-stamped instances of a feature. The content model extends the standard gml:AbstractFeatureType with the gml:dynamicProperties model group.
///   Each time-stamped instance represents a 'snapshot' of a feature. The dynamic feature classes will normally be extended to suit particular applications. A dynamic feature bears either a time stamp or a history.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":DynamicFeatureCollection of XSD type "http://www.opengis.net/gml/3.2":DynamicFeatureCollectionType.
/// <PRE><BLOCKQUOTE>
///   A gml:DynamicFeatureCollection is a feature collection that has a gml:validTime property (i.e. is a snapshot of the feature collection) or which has a gml:history property that contains one or more gml:AbstractTimeSlices each of which contain values of the time varying properties of the feature collection. Note that the gml:DynamicFeatureCollection may be one of the following:
///   1. A feature collection which consists of static feature members (members do not change in time) but which has properties of the collection object as a whole that do change in time . 2. A feature collection which consists of dynamic feature members (the members are gml:DynamicFeatures) but which also has properties of the collection as a whole that vary in time.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":dynamicMembers of XSD type "http://www.opengis.net/gml/3.2":DynamicFeatureMemberType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":history of XSD type "http://www.opengis.net/gml/3.2":HistoryPropertyType.
/// <PRE><BLOCKQUOTE>
///   A generic sequence of events constitute a gml:history of an object.
///   The gml:history element contains a set of elements in the substitution group headed by the abstract element gml:AbstractTimeSlice, representing the time-varying properties of interest. The history property of a dynamic feature associates a feature instance with a sequence of time slices (i.e. change events) that encapsulate the evolution of the feature.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":Node of XSD type "http://www.opengis.net/gml/3.2":NodeType.
/// <PRE><BLOCKQUOTE>
///   gml:Node represents the 0-dimensional primitive.
///   The optional coboundary of a node (gml:directedEdge) is a sequence of directed edges which are incident on this node. Edges emanating from this node appear in the node coboundary with a negative orientation. If provided, the aggregationType attribute shall have the value "sequence".
///   A node may optionally be realised by a 0-dimensional geometric primitive (gml:pointProperty).
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":directedNode of XSD type "http://www.opengis.net/gml/3.2":DirectedNodePropertyType.
/// <PRE><BLOCKQUOTE>
///   A gml:directedNode property element describes the boundary of topology edges and is used in the support of topological point features via the gml:TopoPoint expression, see below. The orientation attribute of type gml:SignType expresses the sense in which the included node is used: start ("-") or end ("+") node.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":Edge of XSD type "http://www.opengis.net/gml/3.2":EdgeType.
/// <PRE><BLOCKQUOTE>
///   gml:Edge represents the 1-dimensional primitive.
///   The topological boundary of an Edge (gml:directedNode) consists of a negatively directed start Node and a positively directed end Node. The optional coboundary of an edge (gml:directedFace) is a circular sequence of directed faces which are incident on this edge in document order. In the 2D case, the orientation of the face on the left of the edge is "+"; the orientation of the face on the right on its right is "-". If provided, the aggregationType attribute shall have the value "sequence".
///   An edge may optionally be realised by a 1-dimensional geometric primitive (gml:curveProperty).
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":directedEdge of XSD type "http://www.opengis.net/gml/3.2":DirectedEdgePropertyType.
/// <PRE><BLOCKQUOTE>
///   A gml:directedEdge property element describes the boundary of topology faces, the coBoundary of topology nodes and is used in the support of topological line features via the gml:TopoCurve expression, see below. The orientation attribute of type gml:SignType expresses the sense in which the included edge is used, i.e. forward or reverse.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":Face of XSD type "http://www.opengis.net/gml/3.2":FaceType.
/// <PRE><BLOCKQUOTE>
///   gml:Face represents the 2-dimensional topology primitive.
///   The topological boundary of a face (gml:directedEdge) consists of a sequence of directed edges. If provided, the aggregationType attribute shall have the value "sequence".
///   The optional coboundary of a face (gml:directedTopoSolid) is a pair of directed solids which are bounded by this face. A positively directed solid corresponds to a solid which lies in the direction of the negatively directed normal to the face in any geometric realisation. A face may optionally be realised by a 2-dimensional geometric primitive (gml:surfaceProperty).
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":directedFace of XSD type "http://www.opengis.net/gml/3.2":DirectedFacePropertyType.
/// <PRE><BLOCKQUOTE>
///   The gml:directedFace property element describes the boundary of topology solids, in the coBoundary of topology edges and is used in the support of surface features via the gml:TopoSurface expression, see below. The orientation attribute of type gml:SignType expresses the sense in which the included face is used i.e. inward or outward with respect to the surface normal in any geometric realisation.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":TopoSolid of XSD type "http://www.opengis.net/gml/3.2":TopoSolidType.
/// <PRE><BLOCKQUOTE>
///   gml:TopoSolid represents the 3-dimensional topology primitive. The topological boundary of a solid (gml:directedFace) consists of a set of directed faces.
///   A solid may optionally be realised by a 3-dimensional geometric primitive (gml:solidProperty).
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":directedTopoSolid of XSD type "http://www.opengis.net/gml/3.2":DirectedTopoSolidPropertyType.
/// <PRE><BLOCKQUOTE>
///   The gml:directedSolid property element describes the coBoundary of topology faces and is used in the support of volume features via the gml:TopoVolume expression, see below. The orientation attribute of type gml:SignType expresses the sense in which the included solid appears in the face coboundary. In the context of a gml:TopoVolume the orientation attribute has no meaning.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":TopoPoint of XSD type "http://www.opengis.net/gml/3.2":TopoPointType.
/// <PRE><BLOCKQUOTE>
///   The intended use of gml:TopoPoint is to appear within a point feature to express the structural and possibly geometric relationships of this feature to other features via shared node definitions.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":topoPointProperty of XSD type "http://www.opengis.net/gml/3.2":TopoPointPropertyType.
/// <PRE><BLOCKQUOTE>
///   The gml:topoPointProperty property element may be used in features to express their relationship to the referenced topology node.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":TopoCurve of XSD type "http://www.opengis.net/gml/3.2":TopoCurveType.
/// <PRE><BLOCKQUOTE>
///   gml:TopoCurve represents a homogeneous topological expression, a sequence of directed edges, which if realised are isomorphic to a geometric curve primitive. The intended use of gml:TopoCurve is to appear within a line feature to express the structural and geometric relationships of this feature to other features via the shared edge definitions.
///   If provided, the aggregationType attribute shall have the value "sequence".
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":topoCurveProperty of XSD type "http://www.opengis.net/gml/3.2":TopoCurvePropertyType.
/// <PRE><BLOCKQUOTE>
///   The gml:topoCurveProperty property element may be used in features to express their relationship to the referenced topology edges.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":TopoSurface of XSD type "http://www.opengis.net/gml/3.2":TopoSurfaceType.
/// <PRE><BLOCKQUOTE>
///   gml:TopoSurface represents a homogeneous topological expression, a set of directed faces, which if realised are isomorphic to a geometric surface primitive. The intended use of gml:TopoSurface is to appear within a surface feature to express the structural and possibly geometric relationships of this surface feature to other features via the shared face definitions.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":topoSurfaceProperty of XSD type "http://www.opengis.net/gml/3.2":TopoSurfacePropertyType.
/// <PRE><BLOCKQUOTE>
///   The gml:topoSurfaceProperty property element may be used in features to express their relationship to the referenced topology faces.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":TopoVolume of XSD type "http://www.opengis.net/gml/3.2":TopoVolumeType.
/// <PRE><BLOCKQUOTE>
///   gml:TopoVolume represents a homogeneous topological expression, a set of directed topologic solids, which if realised are isomorphic to a geometric solid primitive. The intended use of gml:TopoVolume is to appear within a solid feature to express the structural and geometric relationships of this solid feature to other features via the shared solid definitions.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":topoVolumeProperty of XSD type "http://www.opengis.net/gml/3.2":TopoVolumePropertyType.
/// <PRE><BLOCKQUOTE>
///   The gml:topoVolumeProperty element may be used in features to express their relationship to the referenced topology volume.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":TopoComplex of XSD type "http://www.opengis.net/gml/3.2":TopoComplexType.
/// <PRE><BLOCKQUOTE>
///   gml:TopoComplex is a collection of topological primitives.
///   Each complex holds a reference to its maximal complex (gml:maximalComplex) and optionally to sub- or super-complexes (gml:subComplex, gml:superComplex). A topology complex contains its primitive and sub-complex members.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":subComplex of XSD type "http://www.opengis.net/gml/3.2":TopoComplexPropertyType.
/// <PRE><BLOCKQUOTE>
///   The property elements gml:subComplex, gml:superComplex and gml:maximalComplex provide an encoding for relationships between topology complexes as described for gml:TopoComplex above.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":superComplex of XSD type "http://www.opengis.net/gml/3.2":TopoComplexPropertyType.
/// <PRE><BLOCKQUOTE>
///   The property elements gml:subComplex, gml:superComplex and gml:maximalComplex provide an encoding for relationships between topology complexes as described for gml:TopoComplex above.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":maximalComplex of XSD type "http://www.opengis.net/gml/3.2":TopoComplexPropertyType.
/// <PRE><BLOCKQUOTE>
///   The property elements gml:subComplex, gml:superComplex and gml:maximalComplex provide an encoding for relationships between topology complexes as described for gml:TopoComplex above.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":topoPrimitiveMember of XSD type "http://www.opengis.net/gml/3.2":TopoPrimitiveMemberType.
/// <PRE><BLOCKQUOTE>
///   The gml:topoPrimitiveMember property element encodes for the relationship between a topology complex and a single topology primitive.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":topoPrimitiveMembers of XSD type "http://www.opengis.net/gml/3.2":TopoPrimitiveArrayAssociationType.
/// <PRE><BLOCKQUOTE>
///   The gml:topoPrimitiveMembers property element encodes the relationship between a topology complex and an arbitrary number of topology primitives.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":GeometricComplex of XSD type "http://www.opengis.net/gml/3.2":GeometricComplexType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":CompositeCurve of XSD type "http://www.opengis.net/gml/3.2":CompositeCurveType.
/// <PRE><BLOCKQUOTE>
///   A gml:CompositeCurve is represented by a sequence of (orientable) curves such that each curve in the sequence terminates at the start point of the subsequent curve in the list. curveMember references or contains inline one curve in the composite curve. The curves are contiguous, the collection of curves is ordered. Therefore, if provided, the aggregationType attribute shall have the value "sequence".
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":CompositeSurface of XSD type "http://www.opengis.net/gml/3.2":CompositeSurfaceType.
/// <PRE><BLOCKQUOTE>
///   A gml:CompositeSurface is represented by a set of orientable surfaces. It is geometry type with all the geometric properties of a (primitive) surface. Essentially, a composite surface is a collection of surfaces that join in pairs on common boundary curves and which, when considered as a whole, form a single surface.
///   surfaceMember references or contains inline one surface in the composite surface. The surfaces are contiguous.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":CompositeSolid of XSD type "http://www.opengis.net/gml/3.2":CompositeSolidType.
/// <PRE><BLOCKQUOTE>
///   gml:CompositeSolid implements ISO 19107 GM_CompositeSolid (see ISO 19107:2003, 6.6.7) as specified in D.2.3.6. A gml:CompositeSolid is represented by a set of orientable surfaces. It is a geometry type with all the geometric properties of a (primitive) solid. Essentially, a composite solid is a collection of solids that join in pairs on common boundary surfaces and which, when considered as a whole, form a single solid. solidMember references or contains one solid in the composite solid. The solids are contiguous.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":MultiGeometry of XSD type "http://www.opengis.net/gml/3.2":MultiGeometryType.
/// <PRE><BLOCKQUOTE>
///   gml:MultiGeometry is a collection of one or more GML geometry objects of arbitrary type. The members of the geometric aggregate may be specified either using the "standard" property (gml:geometryMember) or the array property (gml:geometryMembers). It is also valid to use both the "standard" and the array properties in the same collection.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":geometryMember of XSD type "http://www.opengis.net/gml/3.2":GeometryPropertyType.
/// <PRE><BLOCKQUOTE>
///   This property element either references a geometry element via the XLink-attributes or contains the geometry element.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":geometryMembers of XSD type "http://www.opengis.net/gml/3.2":GeometryArrayPropertyType.
/// <PRE><BLOCKQUOTE>
///   This property element contains a list of geometry elements. The order of the elements is significant and shall be preserved when processing the array.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":MultiPoint of XSD type "http://www.opengis.net/gml/3.2":MultiPointType.
/// <PRE><BLOCKQUOTE>
///   A gml:MultiPoint consists of one or more gml:Points.
///   The members of the geometric aggregate may be specified either using the "standard" property (gml:pointMember) or the array property (gml:pointMembers). It is also valid to use both the "standard" and the array properties in the same collection.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":pointMember of XSD type "http://www.opengis.net/gml/3.2":PointPropertyType.
/// <PRE><BLOCKQUOTE>
///   This property element either references a Point via the XLink-attributes or contains the Point element.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":pointMembers of XSD type "http://www.opengis.net/gml/3.2":PointArrayPropertyType.
/// <PRE><BLOCKQUOTE>
///   This property element contains a list of points. The order of the elements is significant and shall be preserved when processing the array.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":MultiCurve of XSD type "http://www.opengis.net/gml/3.2":MultiCurveType.
/// <PRE><BLOCKQUOTE>
///   A gml:MultiCurve is defined by one or more gml:AbstractCurves.
///   The members of the geometric aggregate may be specified either using the "standard" property (gml:curveMember) or the array property (gml:curveMembers). It is also valid to use both the "standard" and the array properties in the same collection.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":curveMembers of XSD type "http://www.opengis.net/gml/3.2":CurveArrayPropertyType.
/// <PRE><BLOCKQUOTE>
///   This property element contains a list of curves. The order of the elements is significant and shall be preserved when processing the array.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":MultiSurface of XSD type "http://www.opengis.net/gml/3.2":MultiSurfaceType.
/// <PRE><BLOCKQUOTE>
///   A gml:MultiSurface is defined by one or more gml:AbstractSurfaces.
///   The members of the geometric aggregate may be specified either using the "standard" property (gml:surfaceMember) or the array property (gml:surfaceMembers). It is also valid to use both the "standard" and the array properties in the same collection.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":surfaceMembers of XSD type "http://www.opengis.net/gml/3.2":SurfaceArrayPropertyType.
/// <PRE><BLOCKQUOTE>
///   This property element contains a list of surfaces. The order of the elements is significant and shall be preserved when processing the array.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":MultiSolid of XSD type "http://www.opengis.net/gml/3.2":MultiSolidType.
/// <PRE><BLOCKQUOTE>
///   A gml:MultiSolid is defined by one or more gml:AbstractSolids.
///   The members of the geometric aggregate may be specified either using the "standard" property (gml:solidMember) or the array property (gml:solidMembers). It is also valid to use both the "standard" and the array properties in the same collection.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":solidMember of XSD type "http://www.opengis.net/gml/3.2":SolidPropertyType.
/// <PRE><BLOCKQUOTE>
///   This property element either references a solid via the XLink-attributes or contains the solid element. A solid element is any element, which is substitutable for gml:AbstractSolid.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":solidMembers of XSD type "http://www.opengis.net/gml/3.2":SolidArrayPropertyType.
/// <PRE><BLOCKQUOTE>
///   This property element contains a list of solids. The order of the elements is significant and shall be preserved when processing the array.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":Curve of XSD type "http://www.opengis.net/gml/3.2":CurveType.
/// <PRE><BLOCKQUOTE>
///   A curve is a 1-dimensional primitive. Curves are continuous, connected, and have a measurable length in terms of the coordinate system. A curve is composed of one or more curve segments. Each curve segment within a curve may be defined using a different interpolation method. The curve segments are connected to one another, with the end point of each segment except the last being the start point of the next segment in the segment list.
///   The orientation of the curve is positive.
///   The element segments encapsulates the segments of the curve.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":baseCurve of XSD type "http://www.opengis.net/gml/3.2":CurvePropertyType.
/// <PRE><BLOCKQUOTE>
///   The property baseCurve references or contains the base curve, i.e. it either references the base curve via the XLink-attributes or contains the curve element. A curve element is any element which is substitutable for AbstractCurve. The base curve has positive orientation.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":OrientableCurve of XSD type "http://www.opengis.net/gml/3.2":OrientableCurveType.
/// <PRE><BLOCKQUOTE>
///   OrientableCurve consists of a curve and an orientation. If the orientation is "+", then the OrientableCurve is identical to the baseCurve. If the orientation is "-", then the OrientableCurve is related to another AbstractCurve with a parameterization that reverses the sense of the curve traversal.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":segments of XSD type "http://www.opengis.net/gml/3.2":CurveSegmentArrayPropertyType.
/// <PRE><BLOCKQUOTE>
///   This property element contains a list of curve segments. The order of the elements is significant and shall be preserved when processing the array.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":LineStringSegment of XSD type "http://www.opengis.net/gml/3.2":LineStringSegmentType.
/// <PRE><BLOCKQUOTE>
///   A LineStringSegment is a curve segment that is defined by two or more control points including the start and end point, with linear interpolation between them.
///   The content model follows the general pattern for the encoding of curve segments.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":ArcString of XSD type "http://www.opengis.net/gml/3.2":ArcStringType.
/// <PRE><BLOCKQUOTE>
///   An ArcString is a curve segment that uses three-point circular arc interpolation ("circularArc3Points"). The number of arcs in the arc string may be explicitly stated in the attribute numArc. The number of control points in the arc string shall be 2 * numArc + 1.
///   The content model follows the general pattern for the encoding of curve segments.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":Arc of XSD type "http://www.opengis.net/gml/3.2":ArcType.
/// <PRE><BLOCKQUOTE>
///   An Arc is an arc string with only one arc unit, i.e. three control points including the start and end point. As arc is an arc string consisting of a single arc, the attribute "numArc" is fixed to "1".
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":Circle of XSD type "http://www.opengis.net/gml/3.2":CircleType.
/// <PRE><BLOCKQUOTE>
///   A Circle is an arc whose ends coincide to form a simple closed loop. The three control points shall be distinct non-co-linear points for the circle to be unambiguously defined. The arc is simply extended past the third control point until the first control point is encountered.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":ArcStringByBulge of XSD type "http://www.opengis.net/gml/3.2":ArcStringByBulgeType.
/// <PRE><BLOCKQUOTE>
///   This variant of the arc computes the mid points of the arcs instead of storing the coordinates directly. The control point sequence consists of the start and end points of each arc plus the bulge (see ISO 19107:2003, 6.4.17.2). The normal is a vector normal (perpendicular) to the chord of the arc (see ISO 19107:2003, 6.4.17.4).
///   The interpolation is fixed as "circularArc2PointWithBulge".
///   The number of arcs in the arc string may be explicitly stated in the attribute numArc. The number of control points in the arc string shall be numArc + 1.
///   The content model follows the general pattern for the encoding of curve segments.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":ArcByBulge of XSD type "http://www.opengis.net/gml/3.2":ArcByBulgeType.
/// <PRE><BLOCKQUOTE>
///   An ArcByBulge is an arc string with only one arc unit, i.e. two control points, one bulge and one normal vector.
///   As arc is an arc string consisting of a single arc, the attribute "numArc" is fixed to "1".
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":ArcByCenterPoint of XSD type "http://www.opengis.net/gml/3.2":ArcByCenterPointType.
/// <PRE><BLOCKQUOTE>
///   This variant of the arc requires that the points on the arc shall be computed instead of storing the coordinates directly. The single control point is the center point of the arc plus the radius and the bearing at start and end. This representation can be used only in 2D.
///   The element radius specifies the radius of the arc.
///   The element startAngle specifies the bearing of the arc at the start.
///   The element endAngle specifies the bearing of the arc at the end.
///   The interpolation is fixed as "circularArcCenterPointWithRadius".
///   Since this type describes always a single arc, the attribute "numArc" is fixed to "1".
///   The content model follows the general pattern for the encoding of curve segments.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":CircleByCenterPoint of XSD type "http://www.opengis.net/gml/3.2":CircleByCenterPointType.
/// <PRE><BLOCKQUOTE>
///   A gml:CircleByCenterPoint is an gml:ArcByCenterPoint with identical start and end angle to form a full circle. Again, this representation can be used only in 2D.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":CubicSpline of XSD type "http://www.opengis.net/gml/3.2":CubicSplineType.
/// <PRE><BLOCKQUOTE>
///   The number of control points shall be at least three.
///   vectorAtStart is the unit tangent vector at the start point of the spline. vectorAtEnd is the unit tangent vector at the end point of the spline. Only the direction of the vectors shall be used to determine the shape of the cubic spline, not their length.
///   interpolation is fixed as "cubicSpline".
///   degree shall be the degree of the polynomial used for the interpolation in this spline. Therefore the degree for a cubic spline is fixed to "3".
///   The content model follows the general pattern for the encoding of curve segments.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":BSpline of XSD type "http://www.opengis.net/gml/3.2":BSplineType.
/// <PRE><BLOCKQUOTE>
///   A B-Spline is a piecewise parametric polynomial or rational curve described in terms of control points and basis functions as specified in ISO 19107:2003, 6.4.30. Therefore, interpolation may be either "polynomialSpline" or "rationalSpline" depending on the interpolation type; default is "polynomialSpline".
///   degree shall be the degree of the polynomial used for interpolation in this spline.
///   knot shall be the sequence of distinct knots used to define the spline basis functions (see ISO 19107:2003, 6.4.26.2).
///   The attribute isPolynomial shall be set to "true" if this is a polynomial spline (see ISO 19107:2003, 6.4.30.5).
///   The attribute knotType shall provide the type of knot distribution used in defining this spline (see ISO 19107:2003, 6.4.30.4).
///   The content model follows the general pattern for the encoding of curve segments.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":Bezier of XSD type "http://www.opengis.net/gml/3.2":BezierType.
/// <PRE><BLOCKQUOTE>
///   Bezier curves are polynomial splines that use Bezier or Bernstein polynomials for interpolation purposes. It is a special case of the B-Spline curve with two knots.
///   degree shall be the degree of the polynomial used for interpolation in this spline.
///   knot shall be the sequence of distinct knots used to define the spline basis functions.
///   interpolation is fixed as "polynomialSpline".
///   isPolynomial is fixed as "true".
///   knotType is not relevant for Bezier curve segments.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":OffsetCurve of XSD type "http://www.opengis.net/gml/3.2":OffsetCurveType.
/// <PRE><BLOCKQUOTE>
///   An offset curve is a curve at a constant distance from the basis curve. offsetBase is the base curve from which this curve is defined as an offset. distance and refDirection have the same meaning as specified in ISO 19107:2003, 6.4.23.
///   The content model follows the general pattern for the encoding of curve segments.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":AffinePlacement of XSD type "http://www.opengis.net/gml/3.2":AffinePlacementType.
/// <PRE><BLOCKQUOTE>
///   location, refDirection, inDimension and outDimension have the same meaning as specified in ISO 19107:2003, 6.4.21.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":Clothoid of XSD type "http://www.opengis.net/gml/3.2":ClothoidType.
/// <PRE><BLOCKQUOTE>
///   A clothoid, or Cornu's spiral, is plane curve whose curvature is a fixed function of its length.
///   refLocation, startParameter, endParameter and scaleFactor have the same meaning as specified in ISO 19107:2003, 6.4.22.
///   interpolation is fixed as "clothoid".
///   The content model follows the general pattern for the encoding of curve segments.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":GeodesicString of XSD type "http://www.opengis.net/gml/3.2":GeodesicStringType.
/// <PRE><BLOCKQUOTE>
///   A sequence of geodesic segments. The number of control points shall be at least two.
///   interpolation is fixed as "geodesic".
///   The content model follows the general pattern for the encoding of curve segments.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":Geodesic of XSD type "http://www.opengis.net/gml/3.2":GeodesicType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":Surface of XSD type "http://www.opengis.net/gml/3.2":SurfaceType.
/// <PRE><BLOCKQUOTE>
///   A Surface is a 2-dimensional primitive and is composed of one or more surface patches as specified in ISO 19107:2003, 6.3.17.1. The surface patches are connected to one another.
///   patches encapsulates the patches of the surface.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":baseSurface of XSD type "http://www.opengis.net/gml/3.2":SurfacePropertyType.
/// <PRE><BLOCKQUOTE>
///   The property baseSurface references or contains the base surface. The property baseSurface either references the base surface via the XLink-attributes or contains the surface element. A surface element is any element which is substitutable for gml:AbstractSurface. The base surface has positive orientation.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":OrientableSurface of XSD type "http://www.opengis.net/gml/3.2":OrientableSurfaceType.
/// <PRE><BLOCKQUOTE>
///   OrientableSurface consists of a surface and an orientation. If the orientation is "+", then the OrientableSurface is identical to the baseSurface. If the orientation is "-", then the OrientableSurface is a reference to a gml:AbstractSurface with an up-normal that reverses the direction for this OrientableSurface, the sense of "the top of the surface".
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":patches of XSD type "http://www.opengis.net/gml/3.2":SurfacePatchArrayPropertyType.
/// <PRE><BLOCKQUOTE>
///   The patches property element contains the sequence of surface patches. The order of the elements is significant and shall be preserved when processing the array.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":PolygonPatch of XSD type "http://www.opengis.net/gml/3.2":PolygonPatchType.
/// <PRE><BLOCKQUOTE>
///   A gml:PolygonPatch is a surface patch that is defined by a set of boundary curves and an underlying surface to which these curves adhere. The curves shall be coplanar and the polygon uses planar interpolation in its interior. interpolation is fixed to "planar", i.e. an interpolation shall return points on a single plane. The boundary of the patch shall be contained within that plane.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":Triangle of XSD type "http://www.opengis.net/gml/3.2":TriangleType.
/// <PRE><BLOCKQUOTE>
///   gml:Triangle represents a triangle as a surface patch with an outer boundary consisting of a linear ring. Note that this is a polygon (subtype) with no inner boundaries. The number of points in the linear ring shall be four.
///   The ring (element exterior) shall be a gml:LinearRing and shall form a triangle, the first and the last position shall be coincident.
///   interpolation is fixed to "planar", i.e. an interpolation shall return points on a single plane. The boundary of the patch shall be contained within that plane.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":Rectangle of XSD type "http://www.opengis.net/gml/3.2":RectangleType.
/// <PRE><BLOCKQUOTE>
///   gml:Rectangle represents a rectangle as a surface patch with an outer boundary consisting of a linear ring. Note that this is a polygon (subtype) with no inner boundaries. The number of points in the linear ring shall be five.
///   The ring (element exterior) shall be a gml:LinearRing and shall form a rectangle; the first and the last position shall be coincident.
///   interpolation is fixed to "planar", i.e. an interpolation shall return points on a single plane. The boundary of the patch shall be contained within that plane.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":Ring of XSD type "http://www.opengis.net/gml/3.2":RingType.
/// <PRE><BLOCKQUOTE>
///   A ring is used to represent a single connected component of a surface boundary as specified in ISO 19107:2003, 6.3.6.
///   Every gml:curveMember references or contains one curve, i.e. any element which is substitutable for gml:AbstractCurve. In the context of a ring, the curves describe the boundary of the surface. The sequence of curves shall be contiguous and connected in a cycle.
///   If provided, the aggregationType attribute shall have the value "sequence".
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":curveMember of XSD type "http://www.opengis.net/gml/3.2":CurvePropertyType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":Cone of XSD type "http://www.opengis.net/gml/3.2":ConeType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":Cylinder of XSD type "http://www.opengis.net/gml/3.2":CylinderType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":Sphere of XSD type "http://www.opengis.net/gml/3.2":SphereType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":PolyhedralSurface of XSD type "http://www.opengis.net/gml/3.2":SurfaceType.
/// <PRE><BLOCKQUOTE>
///   A polyhedral surface is a surface composed of polygon patches connected along their common boundary curves. This differs from the surface type only in the restriction on the types of surface patches acceptable.
///   polygonPatches encapsulates the polygon patches of the polyhedral surface.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":TriangulatedSurface of XSD type "http://www.opengis.net/gml/3.2":SurfaceType.
/// <PRE><BLOCKQUOTE>
///   A triangulated surface is a polyhedral surface that is composed only of triangles. There is no restriction on how the triangulation is derived.
///   trianglePatches encapsulates the triangles of the triangulated surface.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":Tin of XSD type "http://www.opengis.net/gml/3.2":TinType.
/// <PRE><BLOCKQUOTE>
///   A tin is a triangulated surface that uses the Delauny algorithm or a similar algorithm complemented with consideration of stoplines (stopLines), breaklines (breakLines), and maximum length of triangle sides (maxLength). controlPoint shall contain a set of the positions (three or more) used as posts for this TIN (corners of the triangles in the TIN). See ISO 19107:2003, 6.4.39 for details.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":solidProperty of XSD type "http://www.opengis.net/gml/3.2":SolidPropertyType.
/// <PRE><BLOCKQUOTE>
///   This property element either references a solid via the XLink-attributes or contains the solid element. solidProperty is the predefined property which may be used by GML Application Schemas whenever a GML feature has a property with a value that is substitutable for AbstractSolid.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":Solid of XSD type "http://www.opengis.net/gml/3.2":SolidType.
/// <PRE><BLOCKQUOTE>
///   A solid is the basis for 3-dimensional geometry. The extent of a solid is defined by the boundary surfaces as specified in ISO 19107:2003, 6.3.18. exterior specifies the outer boundary, interior the inner boundary of the solid.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":Shell of XSD type "http://www.opengis.net/gml/3.2":ShellType.
/// <PRE><BLOCKQUOTE>
///   A shell is used to represent a single connected component of a solid boundary as specified in ISO 19107:2003, 6.3.8.
///   Every gml:surfaceMember references or contains one surface, i.e. any element which is substitutable for gml:AbstractSurface. In the context of a shell, the surfaces describe the boundary of the solid. If provided, the aggregationType attribute shall have the value "set".
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":surfaceMember of XSD type "http://www.opengis.net/gml/3.2":SurfacePropertyType.
/// <PRE><BLOCKQUOTE>
///   This property element either references a surface via the XLink-attributes or contains the surface element. A surface element is any element, which is substitutable for gml:AbstractSurface.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":surfaceProperty of XSD type "http://www.opengis.net/gml/3.2":SurfacePropertyType.
/// <PRE><BLOCKQUOTE>
///   This property element either references a surface via the XLink-attributes or contains the surface element. surfaceProperty is the predefined property which may be used by GML Application Schemas whenever a GML feature has a property with a value that is substitutable for AbstractSurface.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":Polygon of XSD type "http://www.opengis.net/gml/3.2":PolygonType.
/// <PRE><BLOCKQUOTE>
///   A Polygon is a special surface that is defined by a single surface patch (see D.3.6). The boundary of this patch is coplanar and the polygon uses planar interpolation in its interior. The elements exterior and interior describe the surface boundary of the polygon.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":exterior of XSD type "http://www.opengis.net/gml/3.2":AbstractRingPropertyType.
/// <PRE><BLOCKQUOTE>
///   A boundary of a surface consists of a number of rings. In the normal 2D case, one of these rings is distinguished as being the exterior boundary. In a general manifold this is not always possible, in which case all boundaries shall be listed as interior boundaries, and the exterior will be empty.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":interior of XSD type "http://www.opengis.net/gml/3.2":AbstractRingPropertyType.
/// <PRE><BLOCKQUOTE>
///   A boundary of a surface consists of a number of rings. The "interior" rings separate the surface / surface patch from the area enclosed by the rings.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":LinearRing of XSD type "http://www.opengis.net/gml/3.2":LinearRingType.
/// <PRE><BLOCKQUOTE>
///   A LinearRing is defined by four or more coordinate tuples, with linear interpolation between them; the first and last coordinates shall be coincident. The number of direct positions in the list shall be at least four.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":pos of XSD type "http://www.opengis.net/gml/3.2":DirectPositionType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":posList of XSD type "http://www.opengis.net/gml/3.2":DirectPositionListType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":vector of XSD type "http://www.opengis.net/gml/3.2":VectorType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":Envelope of XSD type "http://www.opengis.net/gml/3.2":EnvelopeType.
/// <PRE><BLOCKQUOTE>
///   Envelope defines an extent using a pair of positions defining opposite corners in arbitrary dimensions. The first direct position is the "lower corner" (a coordinate position consisting of all the minimal ordinates for each dimension for all points within the envelope), the second one the "upper corner" (a coordinate position consisting of all the maximal ordinates for each dimension for all points within the envelope).
///   The use of the properties "coordinates" and "pos" has been deprecated. The explicitly named properties "lowerCorner" and "upperCorner" shall be used instead.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":Point of XSD type "http://www.opengis.net/gml/3.2":PointType.
/// <PRE><BLOCKQUOTE>
///   A Point is defined by a single coordinate tuple. The direct position of a point is specified by the pos element which is of type DirectPositionType.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":pointProperty of XSD type "http://www.opengis.net/gml/3.2":PointPropertyType.
/// <PRE><BLOCKQUOTE>
///   This property element either references a point via the XLink-attributes or contains the point element. pointProperty is the predefined property which may be used by GML Application Schemas whenever a GML feature has a property with a value that is substitutable for Point.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":curveProperty of XSD type "http://www.opengis.net/gml/3.2":CurvePropertyType.
/// <PRE><BLOCKQUOTE>
///   This property element either references a curve via the XLink-attributes or contains the curve element. curveProperty is the predefined property which may be used by GML Application Schemas whenever a GML feature has a property with a value that is substitutable for AbstractCurve.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":LineString of XSD type "http://www.opengis.net/gml/3.2":LineStringType.
/// <PRE><BLOCKQUOTE>
///   A LineString is a special curve that consists of a single segment with linear interpolation. It is defined by two or more coordinate tuples, with linear interpolation between them. The number of direct positions in the list shall be at least two.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":measure of XSD type "http://www.opengis.net/gml/3.2":MeasureType.
/// <PRE><BLOCKQUOTE>
///   The value of a physical quantity, together with its unit.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":angle of XSD type "http://www.opengis.net/gml/3.2":AngleType.
/// <PRE><BLOCKQUOTE>
///   The gml:angle property element is used to record the value of an angle quantity as a single number, with its units.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":unitOfMeasure of XSD type "http://www.opengis.net/gml/3.2":UnitOfMeasureType.
/// <PRE><BLOCKQUOTE>
///   The element gml:unitOfMeasure is a property element to refer to a unit of measure. This is an empty element which carries a reference to a unit of measure definition.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":UnitDefinition of XSD type "http://www.opengis.net/gml/3.2":UnitDefinitionType.
/// <PRE><BLOCKQUOTE>
///   A gml:UnitDefinition is a general definition of a unit of measure. This generic element is used only for units for which no relationship with other units or units systems is known.
///   The content model of gml:UnitDefinition adds three additional properties to gml:Definition, gml:quantityType, gml:quantityTypeReference and gml:catalogSymbol. The gml:catalogSymbol property optionally gives the short symbol used for this unit. This element is usually used when the relationship of this unit to other units or units systems is unknown.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":quantityType of XSD type "http://www.opengis.net/gml/3.2":StringOrRefType.
/// <PRE><BLOCKQUOTE>
///   The gml:quantityType property indicates the phenomenon to which the units apply. This element contains an informal description of the phenomenon or type of physical quantity that is measured or observed. When the physical quantity is the result of an observation or measurement, this term is known as observable type or measurand.
///   The use of gml:quantityType for references to remote values is deprecated.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":quantityTypeReference of XSD type "http://www.opengis.net/gml/3.2":ReferenceType.
/// <PRE><BLOCKQUOTE>
///   The gml:quantityTypeReference property indicates the phenomenon to which the units apply. The content is a reference to a remote value.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":catalogSymbol of XSD type "http://www.opengis.net/gml/3.2":CodeType.
/// <PRE><BLOCKQUOTE>
///   The catalogSymbol is the preferred lexical symbol used for this unit of measure.
///   The codeSpace attribute in gml:CodeType identifies a namespace for the catalog symbol value, and might reference the external catalog. The string value in gml:CodeType contains the value of a symbol that should be unique within this catalog namespace. This symbol often appears explicitly in the catalog, but it could be a combination of symbols using a specified algebra of units.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":BaseUnit of XSD type "http://www.opengis.net/gml/3.2":BaseUnitType.
/// <PRE><BLOCKQUOTE>
///   A base unit is a unit of measure that cannot be derived by combination of other base units within a particular system of units. For example, in the SI system of units, the base units are metre, kilogram, second, Ampere, Kelvin, mole, and candela, for the physical quantity types length, mass, time interval, electric current, thermodynamic temperature, amount of substance and luminous intensity, respectively.
///   gml:BaseUnit extends generic gml:UnitDefinition with the property gml:unitsSystem, which carries a reference to the units system to which this base unit is asserted to belong.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":DerivedUnit of XSD type "http://www.opengis.net/gml/3.2":DerivedUnitType.
/// <PRE><BLOCKQUOTE>
///   Derived units are defined by combination of other units. Derived units are used for quantities other than those corresponding to the base units, such as hertz (s-1) for frequency, Newton (kg.m/s2) for force. Derived units based directly on base units are usually preferred for quantities other than the fundamental quantities within a system. If a derived unit is not the preferred unit, the gml:ConventionalUnit element should be used instead.
///   The gml:DerivedUnit extends gml:UnitDefinition with the property gml:derivationUnitTerms.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":derivationUnitTerm of XSD type "http://www.opengis.net/gml/3.2":DerivationUnitTermType.
/// <PRE><BLOCKQUOTE>
///   A set of gml:derivationUnitTerm elements describes a derived unit of measure. Each element carries an integer exponent. The terms are combined by raising each referenced unit to the power of its exponent and forming the product.
///   This unit term references another unit of measure (uom) and provides an integer exponent applied to that unit in defining the compound unit. The exponent may be positive or negative, but not zero.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":ConventionalUnit of XSD type "http://www.opengis.net/gml/3.2":ConventionalUnitType.
/// <PRE><BLOCKQUOTE>
///   Conventional units that are neither base units nor defined by direct combination of base units are used in many application domains. For example electronVolt for energy, feet and nautical miles for length. In most cases there is a known, usually linear, conversion to a preferred unit which is either a base unit or derived by direct combination of base units.
///   The gml:ConventionalUnit extends gml:UnitDefinition with a property that describes a conversion to a preferred unit for this physical quantity. When the conversion is exact, the element gml:conversionToPreferredUnit should be used, or when the conversion is not exact the element gml:roughConversionToPreferredUnit is available. Both of these elements have the same content model. The gml:derivationUnitTerm property defined above is included to allow a user to optionally record how this unit may be derived from other ("more primitive") units.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":conversionToPreferredUnit of XSD type "http://www.opengis.net/gml/3.2":ConversionToPreferredUnitType.
/// <PRE><BLOCKQUOTE>
///   The elements gml:conversionToPreferredUnit and gml:roughConversionToPreferredUnit represent parameters used to convert conventional units to preferred units for this physical quantity type. A preferred unit is either a Base Unit or a Derived Unit that is selected for all values of one physical quantity type.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":roughConversionToPreferredUnit of XSD type "http://www.opengis.net/gml/3.2":ConversionToPreferredUnitType.
/// <PRE><BLOCKQUOTE>
///   The elements gml:conversionToPreferredUnit and gml:roughConversionToPreferredUnit represent parameters used to convert conventional units to preferred units for this physical quantity type. A preferred unit is either a Base Unit or a Derived Unit that is selected for all values of one physical quantity type.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":Definition of XSD type "http://www.opengis.net/gml/3.2":DefinitionType.
/// <PRE><BLOCKQUOTE>
///   The basic gml:Definition element specifies a definition, which can be included in or referenced by a dictionary. The content model for a generic definition is a derivation from gml:AbstractGMLType. The gml:description property element shall hold the definition if this can be captured in a simple text string, or the gml:descriptionReference property element may carry a link to a description elsewhere.
///   The gml:identifier element shall provide one identifier identifying this definition. The identifier shall be unique within the dictionaries using this definition. The gml:name elements shall provide zero or more terms and synonyms for which this is the definition.
///   The gml:remarks element shall be used to hold additional textual information that is not conceptually part of the definition but is useful in understanding the definition.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":remarks of XSD type xs:string.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":Dictionary of XSD type "http://www.opengis.net/gml/3.2":DictionaryType.
/// <PRE><BLOCKQUOTE>
///   Sets of definitions may be collected into dictionaries or collections.
///   A gml:Dictionary is a non-abstract collection of definitions.
///   The gml:Dictionary content model adds a list of gml:dictionaryEntry properties that contain or reference gml:Definition objects. A database handle (gml:id attribute) is required, in order that this collection may be referred to. The standard gml:identifier, gml:description, gml:descriptionReference and gml:name properties are available to reference or contain more information about this dictionary. The gml:description and gml:descriptionReference property elements may be used for a description of this dictionary. The derived gml:name element may be used for the name(s) of this dictionary. for remote definiton references gml:dictionaryEntry shall be used. If a Definition object contained within a Dictionary uses the descriptionReference property to refer to a remote definition, then this enables the inclusion of a remote definition in a local dictionary, giving a handle and identifier in the context of the local dictionary.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":dictionaryEntry of XSD type "http://www.opengis.net/gml/3.2":DictionaryEntryType.
/// <PRE><BLOCKQUOTE>
///   This property element contains or refers to the definitions which are members of a dictionary. The content model follows the standard GML property pattern, so a gml:dictionaryEntry may either contain or refer to a single gml:Definition. Since gml:Dictionary is substitutable for gml:Definition, the content of an entry may itself be a lower level dictionary. Note that if the value is provided by reference, this definition does not carry a handle (gml:id) in this context, so does not allow external references to this specific definition in this context. When used in this way the referenced definition will usually be in a dictionary in the same XML document.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":reversePropertyName of XSD type xs:string.
/// <PRE><BLOCKQUOTE>
///   If the value of an object property is another object and that object contains also a property for the association between the two objects, then this name of the reverse property may be encoded in a gml:reversePropertyName element in an appinfo annotation of the property element to document the constraint between the two properties. The value of the element shall contain the qualified name of the property element.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":description of XSD type "http://www.opengis.net/gml/3.2":StringOrRefType.
/// <PRE><BLOCKQUOTE>
///   The value of this property is a text description of the object. gml:description uses gml:StringOrRefType as its content model, so it may contain a simple text string content, or carry a reference to an external description. The use of gml:description to reference an external description has been deprecated and replaced by the gml:descriptionReference property.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":descriptionReference of XSD type "http://www.opengis.net/gml/3.2":ReferenceType.
/// <PRE><BLOCKQUOTE>
///   The value of this property is a remote text description of the object. The xlink:href attribute of the gml:descriptionReference property references the external description.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":name of XSD type "http://www.opengis.net/gml/3.2":CodeType.
/// <PRE><BLOCKQUOTE>
///   The gml:name property provides a label or identifier for the object, commonly a descriptive name. An object may have several names, typically assigned by different authorities. gml:name uses the gml:CodeType content model. The authority for a name is indicated by the value of its (optional) codeSpace attribute. The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace. In common usage there will be one name per authority, so a processing application may select the name from its preferred codeSpace.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":identifier of XSD type "http://www.opengis.net/gml/3.2":CodeWithAuthorityType.
/// <PRE><BLOCKQUOTE>
///   Often, a special identifier is assigned to an object by the maintaining authority with the intention that it is used in references to the object For such cases, the codeSpace shall be provided. That identifier is usually unique either globally or within an application domain. gml:identifier is a pre-defined property for such identifiers.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":targetElement of XSD type xs:string.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":associationName of XSD type xs:string.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":defaultCodeSpace of XSD type xs:anyURI.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":gmlProfileSchema of XSD type xs:anyURI.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":domainSet of XSD type "http://www.opengis.net/gml/3.2":DomainSetType.
/// <PRE><BLOCKQUOTE>
///   The gml:domainSet property element describes the spatio-temporal region of interest, within which the coverage is defined. Its content model is given by gml:DomainSetType.
///   The value of the domain is thus a choice between a gml:AbstractGeometry and a gml:AbstractTimeObject. In the instance these abstract elements will normally be substituted by a geometry complex or temporal complex, to represent spatial coverages and time-series, respectively. The presence of the gml:AssociationAttributeGroup means that domainSet follows the usual GML property model and may use the xlink:href attribute to point to the domain, as an alternative to describing the domain inline. Ownership semantics may be provided using the gml:OwnershipAttributeGroup.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":rangeSet of XSD type "http://www.opengis.net/gml/3.2":RangeSetType.
/// <PRE><BLOCKQUOTE>
///   The gml:rangeSet property element contains the values of the coverage (sometimes called the attribute values). Its content model is given by gml:RangeSetType.
///   This content model supports a structural description of the range. The semantic information describing the range set is embedded using a uniform method, as part of the explicit values, or as a template value accompanying the representation using gml:DataBlock and gml:File.
///   The values from each component (or "band") in the range may be encoded within a gml:ValueArray element or a concrete member of the gml:AbstractScalarValueList substitution group . Use of these elements satisfies the value-type homogeneity requirement.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":DataBlock of XSD type "http://www.opengis.net/gml/3.2":DataBlockType.
/// <PRE><BLOCKQUOTE>
///   gml:DataBlock describes the Range as a block of text encoded values similar to a Common Separated Value (CSV) representation.
///   The range set parameterization is described by the property gml:rangeParameters.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":rangeParameters of XSD type "http://www.opengis.net/gml/3.2":AssociationRoleType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":tupleList of XSD type "http://www.opengis.net/gml/3.2":CoordinatesType.
/// <PRE><BLOCKQUOTE>
///   gml:CoordinatesType consists of a list of coordinate tuples, with each coordinate tuple separated by the ts or tuple separator (whitespace), and each coordinate in the tuple by the cs or coordinate separator (comma).
///   The gml:tupleList encoding is effectively "band-interleaved".
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":doubleOrNilReasonTupleList of XSD type "http://www.opengis.net/gml/3.2":doubleOrNilReasonList.
/// <PRE><BLOCKQUOTE>
///   gml:doubleOrNilReasonList consists of a list of gml:doubleOrNilReason values, each separated by a whitespace. The gml:doubleOrNilReason values are grouped into tuples where the dimension of each tuple in the list is equal to the number of range parameters.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":File of XSD type "http://www.opengis.net/gml/3.2":FileType.
/// <PRE><BLOCKQUOTE>
///   for efficiency reasons, GML also provides a means of encoding the range set in an arbitrary external encoding, such as a binary file. This encoding may be "well-known" but this is not required. This mode uses the gml:File element.
///   The values of the coverage (attribute values in the range set) are transmitted in a external file that is referenced from the XML structure described by gml:FileType. The external file is referenced by the gml:fileReference property that is an anyURI (the gml:fileName property has been deprecated). This means that the external file may be located remotely from the referencing GML instance. The gml:compression property points to a definition of a compression algorithm through an anyURI. This may be a retrievable, computable definition or simply a reference to an unambiguous name for the compression method.
///   The gml:mimeType property points to a definition of the file mime type.
///   The gml:fileStructure property is defined by a codelist. Note further that all values shall be enclosed in a single file. Multi-file structures for values are not supported in GML.
///   The semantics of the range set is described as above using the gml:rangeParameters property.
///   Note that if any compression algorithm is applied, the structure above applies only to the pre-compression or post-decompression structure of the file.
///   Note that the fields within a record match the gml:valueComponents of the gml:CompositeValue in document order.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":coverageFunction of XSD type "http://www.opengis.net/gml/3.2":CoverageFunctionType.
/// <PRE><BLOCKQUOTE>
///   The gml:coverageFunction property describes the mapping function from the domain to the range of the coverage.
///   The value of the CoverageFunction is one of gml:CoverageMappingRule and gml:GridFunction.
///   If the gml:coverageFunction property is omitted for a gridded coverage (including rectified gridded coverages) the gml:startPoint is assumed to be the value of the gml:low property in the gml:Grid geometry, and the gml:sequenceRule is assumed to be linear and the gml:axisOrder property is assumed to be "+1 +2".
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":CoverageMappingRule of XSD type "http://www.opengis.net/gml/3.2":MappingRuleType.
/// <PRE><BLOCKQUOTE>
///   gml:CoverageMappingRule provides a formal or informal description of the coverage function.
///   The mapping rule may be defined as an in-line string (gml:ruleDefinition) or via a remote reference through xlink:href (gml:ruleReference). If no rule name is specified, the default is 'Linear' with respect to members of the domain in document order.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":GridFunction of XSD type "http://www.opengis.net/gml/3.2":GridFunctionType.
/// <PRE><BLOCKQUOTE>
///   gml:GridFunction provides an explicit mapping rule for grid geometries, i.e. the domain shall be a geometry of type grid. It describes the mapping of grid posts (discrete point grid coverage) or grid cells (discrete surface coverage) to the values in the range set.
///   The gml:startPoint is the index position of a point in the grid that is mapped to the first point in the range set (this is also the index position of the first grid post). If the gml:startPoint property is omitted the gml:startPoint is assumed to be equal to the value of gml:low in the gml:Grid geometry. Subsequent points in the mapping are determined by the value of the gml:sequenceRule.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":MultiPointCoverage of XSD type "http://www.opengis.net/gml/3.2":DiscreteCoverageType.
/// <PRE><BLOCKQUOTE>
///   In a gml:MultiPointCoverage the domain set is a gml:MultiPoint, that is a collection of arbitrarily distributed geometric points.
///   The content model is identical with gml:DiscreteCoverageType, but that gml:domainSet shall have values gml:MultiPoint.
///   In a gml:MultiPointCoverage the mapping from the domain to the range is straightforward.
///   - For gml:DataBlock encodings the points of the gml:MultiPoint are mapped in document order to the tuples of the data block.
///   - For gml:CompositeValue encodings the points of the gml:MultiPoint are mapped to the members of the composite value in document order.
///   - For gml:File encodings the points of the gml:MultiPoint are mapped to the records of the file in sequential order.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":MultiCurveCoverage of XSD type "http://www.opengis.net/gml/3.2":DiscreteCoverageType.
/// <PRE><BLOCKQUOTE>
///   In a gml:MultiCurveCoverage the domain is partioned into a collection of curves comprising a gml:MultiCurve. The coverage function then maps each curve in the collection to a value in the range set.
///   The content model is identical with gml:DiscreteCoverageType, but that gml:domainSet shall have values gml:MultiCurve.
///   In a gml:MultiCurveCoverage the mapping from the domain to the range is straightforward.
///   - For gml:DataBlock encodings the curves of the gml:MultiCurve are mapped in document order to the tuples of the data block.
///   - For gml:CompositeValue encodings the curves of the gml:MultiCurve are mapped to the members of the composite value in document order.
///   - For gml:File encodings the curves of the gml:MultiCurve are mapped to the records of the file in sequential order.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":MultiSurfaceCoverage of XSD type "http://www.opengis.net/gml/3.2":DiscreteCoverageType.
/// <PRE><BLOCKQUOTE>
///   In a gml:MultiSurfaceCoverage the domain is partioned into a collection of surfaces comprising a gml:MultiSurface. The coverage function than maps each surface in the collection to a value in the range set.
///   The content model is identical with gml:DiscreteCoverageType, but that gml:domainSet shall have values gml:MultiSurface.
///   In a gml:MultiSurfaceCoverage the mapping from the domain to the range is straightforward.
///   - For gml:DataBlock encodings the surfaces of the gml:MultiSurface are mapped in document order to the tuples of the data block.
///   - For gml:CompositeValue encodings the surfaces of the gml:MultiSurface are mapped to the members of the composite value in document order.
///   - For gml:File encodings the surfaces of the gml:MultiSurface are mapped to the records of the file in sequential order.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":MultiSolidCoverage of XSD type "http://www.opengis.net/gml/3.2":DiscreteCoverageType.
/// <PRE><BLOCKQUOTE>
///   In a gml:MultiSolidCoverage the domain is partioned into a collection of solids comprising a gml:MultiSolid. The coverage function than maps each solid in the collection to a value in the range set.
///   The content model is identical with gml:DiscreteCoverageType, but that gml:domainSet shall have values gml:MultiSolid.
///   In a gml:MultiSolidCoverage the mapping from the domain to the range is straightforward.
///   - For gml:DataBlock encodings the solids of the gml:MultiSolid are mapped in document order to the tuples of the data block.
///   - For gml:CompositeValue encodings the solids of the gml:MultiSolid are mapped to the members of the composite value in document order.
///   - For gml:File encodings the solids of the gml:MultiSolid are mapped to the records of the file in sequential order.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":GridCoverage of XSD type "http://www.opengis.net/gml/3.2":DiscreteCoverageType.
/// <PRE><BLOCKQUOTE>
///   A gml:GriddedCoverage is a discrete point coverage in which the domain set is a geometric grid of points.
///   Note that this is the same as the gml:MultiPointCoverage except that we have a gml:Grid to describe the domain.
///   The simple gridded coverage is not geometrically referenced and hence no geometric positions are assignable to the points in the grid. Such geometric positioning is introduced in the gml:RectifiedGridCoverage.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":RectifiedGridCoverage of XSD type "http://www.opengis.net/gml/3.2":DiscreteCoverageType.
/// <PRE><BLOCKQUOTE>
///   The gml:RectifiedGridCoverage is a discrete point coverage based on a rectified grid. It is similar to the grid coverage except that the points of the grid are geometrically referenced. The rectified grid coverage has a domain that is a gml:RectifiedGrid geometry.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":boundedBy of XSD type "http://www.opengis.net/gml/3.2":BoundingShapeType.
/// <PRE><BLOCKQUOTE>
///   This property describes the minimum bounding box or rectangle that encloses the entire feature.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":EnvelopeWithTimePeriod of XSD type "http://www.opengis.net/gml/3.2":EnvelopeWithTimePeriodType.
/// <PRE><BLOCKQUOTE>
///   gml:EnvelopeWithTimePeriod is provided for envelopes that include a temporal extent. It adds two time position properties, gml:beginPosition and gml:endPosition, which describe the extent of a time-envelope. Since gml:EnvelopeWithTimePeriod is assigned to the substitution group headed by gml:Envelope, it may be used whenever gml:Envelope is valid.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":locationName of XSD type "http://www.opengis.net/gml/3.2":CodeType.
/// <PRE><BLOCKQUOTE>
///   The gml:locationName property element is a convenience property where the text value describes the location of the feature. If the location names are selected from a controlled list, then the list shall be identified in the codeSpace attribute.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":locationReference of XSD type "http://www.opengis.net/gml/3.2":ReferenceType.
/// <PRE><BLOCKQUOTE>
///   The gml:locationReference property element is a convenience property where the text value referenced by the xlink:href attribute describes the location of the feature.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":validTime of XSD type "http://www.opengis.net/gml/3.2":TimePrimitivePropertyType.
/// <PRE><BLOCKQUOTE>
///   gml:validTime is a convenience property element.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":TimeInstant of XSD type "http://www.opengis.net/gml/3.2":TimeInstantType.
/// <PRE><BLOCKQUOTE>
///   gml:TimeInstant acts as a zero-dimensional geometric primitive that represents an identifiable position in time.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":TimePeriod of XSD type "http://www.opengis.net/gml/3.2":TimePeriodType.
/// <PRE><BLOCKQUOTE>
///   gml:TimePeriod acts as a one-dimensional geometric primitive that represents an identifiable extent in time.
///   The location in of a gml:TimePeriod is described by the temporal positions of the instants at which it begins and ends. The length of the period is equal to the temporal distance between the two bounding temporal positions. Both beginning and end may be described in terms of their direct position using gml:TimePositionType which is an XML Schema simple content type, or by reference to an indentifiable time instant using gml:TimeInstantPropertyType.
///   Alternatively a limit of a gml:TimePeriod may use the conventional GML property model to make a reference to a time instant described elsewhere, or a limit may be indicated as a direct position.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":timePosition of XSD type "http://www.opengis.net/gml/3.2":TimePositionType.
/// <PRE><BLOCKQUOTE>
///   This element is used directly as a property of gml:TimeInstant (see 15.2.2.3), and may also be used in application schemas.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":duration of XSD type xs:duration.
/// <PRE><BLOCKQUOTE>
///   gml:duration conforms to the ISO 8601 syntax for temporal length as implemented by the XML Schema duration type.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":timeInterval of XSD type "http://www.opengis.net/gml/3.2":TimeIntervalLengthType.
/// <PRE><BLOCKQUOTE>
///   gml:timeInterval conforms to ISO 11404 which is based on floating point values for temporal length.
///   ISO 11404 syntax specifies the use of a positiveInteger together with appropriate values for radix and factor. The resolution of the time interval is to one radix ^(-factor) of the specified time unit.
///   The value of the unit is either selected from the units for time intervals from ISO 31-1:1992, or is another suitable unit. The encoding is defined for GML in gml:TimeUnitType. The second component of this union type provides a method for indicating time units other than the six standard units given in the enumeration.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":BooleanList of XSD type "http://www.opengis.net/gml/3.2":booleanOrNilReasonList.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":CategoryList of XSD type "http://www.opengis.net/gml/3.2":CodeOrNilReasonListType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":CountList of XSD type "http://www.opengis.net/gml/3.2":integerOrNilReasonList.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":QuantityList of XSD type "http://www.opengis.net/gml/3.2":MeasureOrNilReasonListType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":valueProperty of XSD type "http://www.opengis.net/gml/3.2":ValuePropertyType.
/// <PRE><BLOCKQUOTE>
///   Property that refers to, or contains, a Value. Convenience element for general use.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":valueComponent of XSD type "http://www.opengis.net/gml/3.2":ValuePropertyType.
/// <PRE><BLOCKQUOTE>
///   Property that refers to, or contains, a Value.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":valueComponents of XSD type "http://www.opengis.net/gml/3.2":ValueArrayPropertyType.
/// <PRE><BLOCKQUOTE>
///   Property that contains Values.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":CompositeValue of XSD type "http://www.opengis.net/gml/3.2":CompositeValueType.
/// <PRE><BLOCKQUOTE>
///   gml:CompositeValue is an aggregate value built from other values . It contains zero or an arbitrary number of gml:valueComponent elements, and zero or one gml:valueComponents property elements. It may be used for strongly coupled aggregates (vectors, tensors) or for arbitrary collections of values.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":ValueArray of XSD type "http://www.opengis.net/gml/3.2":ValueArrayType.
/// <PRE><BLOCKQUOTE>
///   A Value Array is used for homogeneous arrays of primitive and aggregate values. The member values may be scalars, composites, arrays or lists.
///   ValueArray has the same content model as CompositeValue, but the member values shall be homogeneous. The element declaration contains a Schematron constraint which expresses this restriction precisely. Since the members are homogeneous, the gml:referenceSystem (uom, codeSpace) may be specified on the gml:ValueArray itself and inherited by all the members if desired.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":CategoryExtent of XSD type "http://www.opengis.net/gml/3.2":CategoryExtentType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":CountExtent of XSD type "http://www.opengis.net/gml/3.2":CountExtentType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":QuantityExtent of XSD type "http://www.opengis.net/gml/3.2":QuantityExtentType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":Grid of XSD type "http://www.opengis.net/gml/3.2":GridType.
/// <PRE><BLOCKQUOTE>
///   The gml:Grid implicitly defines an unrectified grid, which is a network composed of two or more sets of curves in which the members of each set intersect the members of the other sets in an algorithmic way. The region of interest within the grid is given in terms of its gml:limits, being the grid coordinates of diagonally opposed corners of a rectangular region. gml:axisLabels is provided with a list of labels of the axes of the grid (gml:axisName has been deprecated). gml:dimension specifies the dimension of the grid. The gml:limits element contains a single gml:GridEnvelope. The gml:low and gml:high property elements of the envelope are each integerLists, which are coordinate tuples, the coordinates being measured as offsets from the origin of the grid along each axis, of the diagonally opposing corners of a "rectangular" region of interest.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":RectifiedGrid of XSD type "http://www.opengis.net/gml/3.2":RectifiedGridType.
/// <PRE><BLOCKQUOTE>
///   A rectified grid is a grid for which there is an affine transformation between the grid coordinates and the coordinates of an external coordinate reference system. It is defined by specifying the position (in some geometric space) of the grid "origin" and of the vectors that specify the post locations.
///   Note that the grid limits (post indexes) and axis name properties are inherited from gml:GridType and that gml:RectifiedGrid adds a gml:origin property (contains or references a gml:Point) and a set of gml:offsetVector properties.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":conversion of XSD type "http://www.opengis.net/gml/3.2":GeneralConversionPropertyType.
/// <PRE><BLOCKQUOTE>
///   gml:conversion is an association role to the coordinate conversion used to define the derived CRS.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":CompoundCRS of XSD type "http://www.opengis.net/gml/3.2":CompoundCRSType.
/// <PRE><BLOCKQUOTE>
///   gml:CompundCRS is a coordinate reference system describing the position of points through two or more independent coordinate reference systems. It is associated with a non-repeating sequence of two or more instances of SingleCRS.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":componentReferenceSystem of XSD type "http://www.opengis.net/gml/3.2":SingleCRSPropertyType.
/// <PRE><BLOCKQUOTE>
///   The gml:componentReferenceSystem elements are an ordered sequence of associations to all the component coordinate reference systems included in this compound coordinate reference system. The gml:AggregationAttributeGroup should be used to specify that the gml:componentReferenceSystem properties are ordered.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":GeodeticCRS of XSD type "http://www.opengis.net/gml/3.2":GeodeticCRSType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":ellipsoidalCS of XSD type "http://www.opengis.net/gml/3.2":EllipsoidalCSPropertyType.
/// <PRE><BLOCKQUOTE>
///   gml:ellipsoidalCS is an association role to the ellipsoidal coordinate system used by this CRS.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":cartesianCS of XSD type "http://www.opengis.net/gml/3.2":CartesianCSPropertyType.
/// <PRE><BLOCKQUOTE>
///   gml:cartesianCS is an association role to the Cartesian coordinate system used by this CRS.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":sphericalCS of XSD type "http://www.opengis.net/gml/3.2":SphericalCSPropertyType.
/// <PRE><BLOCKQUOTE>
///   gml:sphericalCS is an association role to the spherical coordinate system used by this CRS.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":geodeticDatum of XSD type "http://www.opengis.net/gml/3.2":GeodeticDatumPropertyType.
/// <PRE><BLOCKQUOTE>
///   gml:geodeticDatum is an association role to the geodetic datum used by this CRS.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":VerticalCRS of XSD type "http://www.opengis.net/gml/3.2":VerticalCRSType.
/// <PRE><BLOCKQUOTE>
///   gml:VerticalCRS is a 1D coordinate reference system used for recording heights or depths. Vertical CRSs make use of the direction of gravity to define the concept of height or depth, but the relationship with gravity may not be straightforward. By implication, ellipsoidal heights (h) cannot be captured in a vertical coordinate reference system. Ellipsoidal heights cannot exist independently, but only as an inseparable part of a 3D coordinate tuple defined in a geographic 3D coordinate reference system.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":verticalCS of XSD type "http://www.opengis.net/gml/3.2":VerticalCSPropertyType.
/// <PRE><BLOCKQUOTE>
///   gml:verticalCS is an association role to the vertical coordinate system used by this CRS.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":verticalDatum of XSD type "http://www.opengis.net/gml/3.2":VerticalDatumPropertyType.
/// <PRE><BLOCKQUOTE>
///   gml:verticalDatum is an association role to the vertical datum used by this CRS.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":ProjectedCRS of XSD type "http://www.opengis.net/gml/3.2":ProjectedCRSType.
/// <PRE><BLOCKQUOTE>
///   gml:ProjectedCRS is a 2D coordinate reference system used to approximate the shape of the earth on a planar surface, but in such a way that the distortion that is inherent to the approximation is carefully controlled and known. Distortion correction is commonly applied to calculated bearings and distances to produce values that are a close match to actual field values.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":baseGeodeticCRS of XSD type "http://www.opengis.net/gml/3.2":GeodeticCRSPropertyType.
/// <PRE><BLOCKQUOTE>
///   gml:baseGeodeticCRS is an association role to the geodetic coordinate reference system used by this projected CRS.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":DerivedCRS of XSD type "http://www.opengis.net/gml/3.2":DerivedCRSType.
/// <PRE><BLOCKQUOTE>
///   gml:DerivedCRS is a single coordinate reference system that is defined by its coordinate conversion from another single coordinate reference system known as the base CRS. The base CRS can be a projected coordinate reference system, if this DerivedCRS is used for a georectified grid coverage as described in ISO 19123, Clause 8.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":baseCRS of XSD type "http://www.opengis.net/gml/3.2":SingleCRSPropertyType.
/// <PRE><BLOCKQUOTE>
///   gml:baseCRS is an association role to the coordinate reference system used by this derived CRS.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":derivedCRSType of XSD type "http://www.opengis.net/gml/3.2":CodeWithAuthorityType.
/// <PRE><BLOCKQUOTE>
///   The gml:derivedCRSType property describes the type of a derived coordinate reference system. The required codeSpace attribute shall reference a source of information specifying the values and meanings of all the allowed string values for this property.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":coordinateSystem of XSD type "http://www.opengis.net/gml/3.2":CoordinateSystemPropertyType.
/// <PRE><BLOCKQUOTE>
///   An association role to the coordinate system used by this CRS.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":EngineeringCRS of XSD type "http://www.opengis.net/gml/3.2":EngineeringCRSType.
/// <PRE><BLOCKQUOTE>
///   gml:EngineeringCRS is a contextually local coordinate reference system which can be divided into two broad categories:
///   - earth-fixed systems applied to engineering activities on or near the surface of the earth;
///   - CRSs on moving platforms such as road vehicles, vessels, aircraft, or spacecraft, see ISO 19111 8.3.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":cylindricalCS of XSD type "http://www.opengis.net/gml/3.2":CylindricalCSPropertyType.
/// <PRE><BLOCKQUOTE>
///   gml:cylindricalCS is an association role to the cylindrical coordinate system used by this CRS.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":linearCS of XSD type "http://www.opengis.net/gml/3.2":LinearCSPropertyType.
/// <PRE><BLOCKQUOTE>
///   gml:linearCS is an association role to the linear coordinate system used by this CRS.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":polarCS of XSD type "http://www.opengis.net/gml/3.2":PolarCSPropertyType.
/// <PRE><BLOCKQUOTE>
///   gml:polarCS is an association role to the polar coordinate system used by this CRS.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":userDefinedCS of XSD type "http://www.opengis.net/gml/3.2":UserDefinedCSPropertyType.
/// <PRE><BLOCKQUOTE>
///   gml:userDefinedCS is an association role to the user defined coordinate system used by this CRS.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":engineeringDatum of XSD type "http://www.opengis.net/gml/3.2":EngineeringDatumPropertyType.
/// <PRE><BLOCKQUOTE>
///   gml:engineeringDatum is an association role to the engineering datum used by this CRS.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":ImageCRS of XSD type "http://www.opengis.net/gml/3.2":ImageCRSType.
/// <PRE><BLOCKQUOTE>
///   gml:ImageCRS is an engineering coordinate reference system applied to locations in images. Image coordinate reference systems are treated as a separate sub-type because the definition of the associated image datum contains two attributes not relevant to other engineering datums.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":affineCS of XSD type "http://www.opengis.net/gml/3.2":AffineCSPropertyType.
/// <PRE><BLOCKQUOTE>
///   gml:affineCS is an association role to the affine coordinate system used by this CRS.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":imageDatum of XSD type "http://www.opengis.net/gml/3.2":ImageDatumPropertyType.
/// <PRE><BLOCKQUOTE>
///   gml:imageDatum is an association role to the image datum used by this CRS.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":TemporalCRS of XSD type "http://www.opengis.net/gml/3.2":TemporalCRSType.
/// <PRE><BLOCKQUOTE>
///   gml:TemporalCRS is a 1D coordinate reference system used for the recording of time.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":timeCS of XSD type "http://www.opengis.net/gml/3.2":TimeCSPropertyType.
/// <PRE><BLOCKQUOTE>
///   gml:timeCS is an association role to the time coordinate system used by this CRS.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":temporalDatum of XSD type "http://www.opengis.net/gml/3.2":TemporalDatumPropertyType.
/// <PRE><BLOCKQUOTE>
///   gml:temporalDatum is an association role to the temporal datum used by this CRS.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":CoordinateSystemAxis of XSD type "http://www.opengis.net/gml/3.2":CoordinateSystemAxisType.
/// <PRE><BLOCKQUOTE>
///   gml:CoordinateSystemAxis is a definition of a coordinate system axis.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":axisAbbrev of XSD type "http://www.opengis.net/gml/3.2":CodeType.
/// <PRE><BLOCKQUOTE>
///   gml:axisAbbrev is the abbreviation used for this coordinate system axis; this abbreviation is also used to identify the coordinates in the coordinate tuple. The codeSpace attribute may reference a source of more information on a set of standardized abbreviations, or on this abbreviation.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":axisDirection of XSD type "http://www.opengis.net/gml/3.2":CodeWithAuthorityType.
/// <PRE><BLOCKQUOTE>
///   gml:axisDirection is the direction of this coordinate system axis (or in the case of Cartesian projected coordinates, the direction of this coordinate system axis at the origin).
///   Within any set of coordinate system axes, only one of each pair of terms may be used. For earth-fixed CRSs, this direction is often approximate and intended to provide a human interpretable meaning to the axis. When a geodetic datum is used, the precise directions of the axes may therefore vary slightly from this approximate direction.
///   The codeSpace attribute shall reference a source of information specifying the values and meanings of all the allowed string values for this property.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":minimumValue of XSD type xs:double.
/// <PRE><BLOCKQUOTE>
///   The gml:minimumValue and gml:maximumValue properties allow the specification of minimum and maximum value normally allowed for this axis, in the unit of measure for the axis. For a continuous angular axis such as longitude, the values wrap-around at this value. Also, values beyond this minimum/maximum can be used for specified purposes, such as in a bounding box. A value of minus infinity shall be allowed for the gml:minimumValue element, a value of plus infiniy for the gml:maximumValue element. If these elements are omitted, the value is unspecified.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":maximumValue of XSD type xs:double.
/// <PRE><BLOCKQUOTE>
///   The gml:minimumValue and gml:maximumValue properties allow the specification of minimum and maximum value normally allowed for this axis, in the unit of measure for the axis. For a continuous angular axis such as longitude, the values wrap-around at this value. Also, values beyond this minimum/maximum can be used for specified purposes, such as in a bounding box. A value of minus infinity shall be allowed for the gml:minimumValue element, a value of plus infiniy for the gml:maximumValue element. If these elements are omitted, the value is unspecified.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":rangeMeaning of XSD type "http://www.opengis.net/gml/3.2":CodeWithAuthorityType.
/// <PRE><BLOCKQUOTE>
///   gml:rangeMeaning describes the meaning of axis value range specified by gml:minimumValue and gml:maximumValue. This element shall be omitted when both gml:minimumValue and gml:maximumValue are omitted. This element should be included when gml:minimumValue and/or gml:maximumValue are included. If this element is omitted when the gml:minimumValue and/or gml:maximumValue are included, the meaning is unspecified. The codeSpace attribute shall reference a source of information specifying the values and meanings of all the allowed string values for this property.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":axis of XSD type "http://www.opengis.net/gml/3.2":CoordinateSystemAxisPropertyType.
/// <PRE><BLOCKQUOTE>
///   The gml:axis property is an association role (ordered sequence) to the coordinate system axes included in this coordinate system. The coordinate values in a coordinate tuple shall be recorded in the order in which the coordinate system axes associations are recorded, whenever those coordinates use a coordinate reference system that uses this coordinate system. The gml:AggregationAttributeGroup should be used to specify that the axis objects are ordered.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":EllipsoidalCS of XSD type "http://www.opengis.net/gml/3.2":EllipsoidalCSType.
/// <PRE><BLOCKQUOTE>
///   gml:EllipsoidalCS is a two- or three-dimensional coordinate system in which position is specified by geodetic latitude, geodetic longitude, and (in the three-dimensional case) ellipsoidal height. An EllipsoidalCS shall have two or three gml:axis property elements; the number of associations shall equal the dimension of the CS.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":CartesianCS of XSD type "http://www.opengis.net/gml/3.2":CartesianCSType.
/// <PRE><BLOCKQUOTE>
///   gml:CartesianCS is a 1-, 2-, or 3-dimensional coordinate system. In the 1-dimensional case, it contains a single straight coordinate axis. In the 2- and 3-dimensional cases gives the position of points relative to orthogonal straight axes. In the multi-dimensional case, all axes shall have the same length unit of measure. A CartesianCS shall have one, two, or three gml:axis property elements.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":VerticalCS of XSD type "http://www.opengis.net/gml/3.2":VerticalCSType.
/// <PRE><BLOCKQUOTE>
///   gml:VerticalCS is a one-dimensional coordinate system used to record the heights or depths of points. Such a coordinate system is usually dependent on the Earth's gravity field, perhaps loosely as when atmospheric pressure is the basis for the vertical coordinate system axis. A VerticalCS shall have one gml:axis property element.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":TimeCS of XSD type "http://www.opengis.net/gml/3.2":TimeCSType.
/// <PRE><BLOCKQUOTE>
///   gml:TimeCS is a one-dimensional coordinate system containing a time axis, used to describe the temporal position of a point in the specified time units from a specified time origin. A TimeCS shall have one gml:axis property element.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":LinearCS of XSD type "http://www.opengis.net/gml/3.2":LinearCSType.
/// <PRE><BLOCKQUOTE>
///   gml:LinearCS is a one-dimensional coordinate system that consists of the points that lie on the single axis described. The associated coordinate is the distance with or without offset from the specified datum to the point along the axis. A LinearCS shall have one gml:axis property element.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":UserDefinedCS of XSD type "http://www.opengis.net/gml/3.2":UserDefinedCSType.
/// <PRE><BLOCKQUOTE>
///   gml:UserDefinedCS is a two- or three-dimensional coordinate system that consists of any combination of coordinate axes not covered by any other coordinate system type. A UserDefinedCS shall have two or three gml:axis property elements; the number of property elements shall equal the dimension of the CS.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":SphericalCS of XSD type "http://www.opengis.net/gml/3.2":SphericalCSType.
/// <PRE><BLOCKQUOTE>
///   gml:SphericalCS is a three-dimensional coordinate system with one distance measured from the origin and two angular coordinates. A SphericalCS shall have three gml:axis property elements.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":PolarCS of XSD type "http://www.opengis.net/gml/3.2":PolarCSType.
/// <PRE><BLOCKQUOTE>
///   gml:PolarCS ia s two-dimensional coordinate system in which position is specified by the distance from the origin and the angle between the line from the origin to a point and a reference direction. A PolarCS shall have two gml:axis property elements.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":CylindricalCS of XSD type "http://www.opengis.net/gml/3.2":CylindricalCSType.
/// <PRE><BLOCKQUOTE>
///   gml:CylindricalCS is a three-dimensional coordinate system consisting of a polar coordinate system extended by a straight coordinate axis perpendicular to the plane spanned by the polar coordinate system. A CylindricalCS shall have three gml:axis property elements.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":AffineCS of XSD type "http://www.opengis.net/gml/3.2":AffineCSType.
/// <PRE><BLOCKQUOTE>
///   gml:AffineCS is a two- or three-dimensional coordinate system with straight axes that are not necessarily orthogonal. An AffineCS shall have two or three gml:axis property elements; the number of property elements shall equal the dimension of the CS.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":scope of XSD type xs:string.
/// <PRE><BLOCKQUOTE>
///   The gml:scope property provides a description of the usage, or limitations of usage, for which this CRS-related object is valid. If unknown, enter "not known".
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":anchorDefinition of XSD type "http://www.opengis.net/gml/3.2":CodeType.
/// <PRE><BLOCKQUOTE>
///   gml:anchorDefinition is a description, possibly including coordinates, of the definition used to anchor the datum to the Earth. Also known as the "origin", especially for engineering and image datums. The codeSpace attribute may be used to reference a source of more detailed on this point or surface, or on a set of such descriptions.
///   - For a geodetic datum, this point is also known as the fundamental point, which is traditionally the point where the relationship between geoid and ellipsoid is defined. In some cases, the "fundamental point" may consist of a number of points. In those cases, the parameters defining the geoid/ellipsoid relationship have been averaged for these points, and the averages adopted as the datum definition.
///   - For an engineering datum, the anchor definition may be a physical point, or it may be a point with defined coordinates in another CRS.may
///   - For an image datum, the anchor definition is usually either the centre of the image or the corner of the image.
///   - For a temporal datum, this attribute is not defined. Instead of the anchor definition, a temporal datum carries a separate time origin of type DateTime.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":realizationEpoch of XSD type xs:date.
/// <PRE><BLOCKQUOTE>
///   gml:realizationEpoch is the time after which this datum definition is valid. See ISO 19111 Table 32 for details.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":GeodeticDatum of XSD type "http://www.opengis.net/gml/3.2":GeodeticDatumType.
/// <PRE><BLOCKQUOTE>
///   gml:GeodeticDatum is a geodetic datum defines the precise location and orientation in 3-dimensional space of a defined ellipsoid (or sphere), or of a Cartesian coordinate system centered in this ellipsoid (or sphere).
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":primeMeridian of XSD type "http://www.opengis.net/gml/3.2":PrimeMeridianPropertyType.
/// <PRE><BLOCKQUOTE>
///   gml:primeMeridian is an association role to the prime meridian used by this geodetic datum.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":ellipsoid of XSD type "http://www.opengis.net/gml/3.2":EllipsoidPropertyType.
/// <PRE><BLOCKQUOTE>
///   gml:ellipsoid is an association role to the ellipsoid used by this geodetic datum.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":Ellipsoid of XSD type "http://www.opengis.net/gml/3.2":EllipsoidType.
/// <PRE><BLOCKQUOTE>
///   A gml:Ellipsoid is a geometric figure that may be used to describe the approximate shape of the earth. In mathematical terms, it is a surface formed by the rotation of an ellipse about its minor axis.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":semiMajorAxis of XSD type "http://www.opengis.net/gml/3.2":MeasureType.
/// <PRE><BLOCKQUOTE>
///   gml:semiMajorAxis specifies the length of the semi-major axis of the ellipsoid, with its units. Uses the MeasureType with the restriction that the unit of measure referenced by uom must be suitable for a length, such as metres or feet.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":PrimeMeridian of XSD type "http://www.opengis.net/gml/3.2":PrimeMeridianType.
/// <PRE><BLOCKQUOTE>
///   A gml:PrimeMeridian defines the origin from which longitude values are determined. The default value for the prime meridian gml:identifier value is "Greenwich".
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":greenwichLongitude of XSD type "http://www.opengis.net/gml/3.2":AngleType.
/// <PRE><BLOCKQUOTE>
///   gml:greenwichLongitude is the longitude of the prime meridian measured from the Greenwich meridian, positive eastward. If the value of the prime meridian "name" is "Greenwich" then the value of greenwichLongitude shall be 0 degrees.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":EngineeringDatum of XSD type "http://www.opengis.net/gml/3.2":EngineeringDatumType.
/// <PRE><BLOCKQUOTE>
///   gml:EngineeringDatum defines the origin of an engineering coordinate reference system, and is used in a region around that origin. This origin may be fixed with respect to the earth (such as a defined point at a construction site), or be a defined point on a moving vehicle (such as on a ship or satellite).
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":ImageDatum of XSD type "http://www.opengis.net/gml/3.2":ImageDatumType.
/// <PRE><BLOCKQUOTE>
///   gml:ImageDatum defines the origin of an image coordinate reference system, and is used in a local context only. For an image datum, the anchor definition is usually either the centre of the image or the corner of the image. For more information, see ISO 19111 B.3.5.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":pixelInCell of XSD type "http://www.opengis.net/gml/3.2":CodeWithAuthorityType.
/// <PRE><BLOCKQUOTE>
///   gml:pixelInCell is a specification of the way an image grid is associated with the image data attributes. The required codeSpace attribute shall reference a source of information specifying the values and meanings of all the allowed string values for this property.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":VerticalDatum of XSD type "http://www.opengis.net/gml/3.2":VerticalDatumType.
/// <PRE><BLOCKQUOTE>
///   gml:VerticalDatum is a textual description and/or a set of parameters identifying a particular reference level surface used as a zero-height surface, including its position with respect to the Earth for any of the height types recognized by this International Standard.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":TemporalDatum of XSD type "http://www.opengis.net/gml/3.2":TemporalDatumType.
/// <PRE><BLOCKQUOTE>
///   A gml:TemporalDatum defines the origin of a Temporal Reference System. This type omits the "anchorDefinition" and "realizationEpoch" elements and adds the "origin" element with the dateTime type.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":origin of XSD type xs:dateTime.
/// <PRE><BLOCKQUOTE>
///   gml:origin is the date and time origin of this temporal datum.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":operationVersion of XSD type xs:string.
/// <PRE><BLOCKQUOTE>
///   gml:operationVersion is the version of the coordinate transformation (i.e., instantiation due to the stochastic nature of the parameters). Mandatory when describing a transformation, and should not be supplied for a conversion.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":sourceCRS of XSD type "http://www.opengis.net/gml/3.2":CRSPropertyType.
/// <PRE><BLOCKQUOTE>
///   gml:sourceCRS is an association role to the source CRS (coordinate reference system) of this coordinate operation.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":targetCRS of XSD type "http://www.opengis.net/gml/3.2":CRSPropertyType.
/// <PRE><BLOCKQUOTE>
///   gml:targetCRS is an association role to the target CRS (coordinate reference system) of this coordinate operation.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":ConcatenatedOperation of XSD type "http://www.opengis.net/gml/3.2":ConcatenatedOperationType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":coordOperation of XSD type "http://www.opengis.net/gml/3.2":CoordinateOperationPropertyType.
/// <PRE><BLOCKQUOTE>
///   gml:coordOperation is an association role to a coordinate operation.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":PassThroughOperation of XSD type "http://www.opengis.net/gml/3.2":PassThroughOperationType.
/// <PRE><BLOCKQUOTE>
///   gml:PassThroughOperation is a pass-through operation specifies that a subset of a coordinate tuple is subject to a specific coordinate operation.
///   The modifiedCoordinate property elements are an ordered sequence of positive integers defining the positions in a coordinate tuple of the coordinates affected by this pass-through operation. The AggregationAttributeGroup should be used to specify that the modifiedCoordinate elements are ordered.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":modifiedCoordinate of XSD type xs:positiveInteger.
/// <PRE><BLOCKQUOTE>
///   gml:modifiedCoordinate is a positive integer defining a position in a coordinate tuple.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":Conversion of XSD type "http://www.opengis.net/gml/3.2":ConversionType.
/// <PRE><BLOCKQUOTE>
///   gml:Conversion is a concrete operation on coordinates that does not include any change of Datum. The best-known example of a coordinate conversion is a map projection. The parameters describing coordinate conversions are defined rather than empirically derived. Note that some conversions have no parameters.
///   This concrete complex type can be used without using a GML Application Schema that defines operation-method-specialized element names and contents, especially for methods with only one Conversion instance.
///   The usesValue property elements are an unordered list of composition associations to the set of parameter values used by this conversion operation.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":method of XSD type "http://www.opengis.net/gml/3.2":OperationMethodPropertyType.
/// <PRE><BLOCKQUOTE>
///   gml:method is an association role to the operation method used by a coordinate operation.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":parameterValue of XSD type "http://www.opengis.net/gml/3.2":AbstractGeneralParameterValuePropertyType.
/// <PRE><BLOCKQUOTE>
///   gml:parameterValue is a composition association to a parameter value or group of parameter values used by a coordinate operation.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":Transformation of XSD type "http://www.opengis.net/gml/3.2":TransformationType.
/// <PRE><BLOCKQUOTE>
///   gml:Transformation is a concrete object element derived from gml:GeneralTransformation (13.6.2.13).
///   This concrete object can be used for all operation methods, without using a GML Application Schema that defines operation-method-specialized element names and contents, especially for methods with only one Transformation instance.
///   The parameterValue elements are an unordered list of composition associations to the set of parameter values used by this conversion operation.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":ParameterValue of XSD type "http://www.opengis.net/gml/3.2":ParameterValueType.
/// <PRE><BLOCKQUOTE>
///   gml:ParameterValue is a parameter value, an ordered sequence of values, or a reference to a file of parameter values. This concrete complex type may be used for operation methods without using an Application Schema that defines operation-method-specialized element names and contents, especially for methods with only one instance. This complex type may be used, extended, or restricted for well-known operation methods, especially for methods with many instances.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":value of XSD type "http://www.opengis.net/gml/3.2":MeasureType.
/// <PRE><BLOCKQUOTE>
///   gml:value is a numeric value of an operation parameter, with its associated unit of measure.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":stringValue of XSD type xs:string.
/// <PRE><BLOCKQUOTE>
///   gml:stringValue is a character string value of an operation parameter. A string value does not have an associated unit of measure.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":integerValue of XSD type xs:positiveInteger.
/// <PRE><BLOCKQUOTE>
///   gml:integerValue is a positive integer value of an operation parameter, usually used for a count. An integer value does not have an associated unit of measure.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":booleanValue of XSD type xs:boolean.
/// <PRE><BLOCKQUOTE>
///   gml:booleanValue is a boolean value of an operation parameter. A Boolean value does not have an associated unit of measure.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":valueList of XSD type "http://www.opengis.net/gml/3.2":MeasureListType.
/// <PRE><BLOCKQUOTE>
///   gml:valueList is an ordered sequence of two or more numeric values of an operation parameter list, where each value has the same associated unit of measure. An element of this type contains a space-separated sequence of double values.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":integerValueList of XSD type "http://www.opengis.net/gml/3.2":integerList.
/// <PRE><BLOCKQUOTE>
///   gml:integerValueList is an ordered sequence of two or more integer values of an operation parameter list, usually used for counts. These integer values do not have an associated unit of measure. An element of this type contains a space-separated sequence of integer values.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":valueFile of XSD type xs:anyURI.
/// <PRE><BLOCKQUOTE>
///   gml:valueFile is a reference to a file or a part of a file containing one or more parameter values, each numeric value with its associated unit of measure. When referencing a part of a file, that file shall contain multiple identified parts, such as an XML encoded document. Furthermore, the referenced file or part of a file may reference another part of the same or different files, as allowed in XML documents.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":operationParameter of XSD type "http://www.opengis.net/gml/3.2":OperationParameterPropertyType.
/// <PRE><BLOCKQUOTE>
///   gml:operationParameter is an association role to the operation parameter of which this is a value.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":ParameterValueGroup of XSD type "http://www.opengis.net/gml/3.2":ParameterValueGroupType.
/// <PRE><BLOCKQUOTE>
///   gml:ParameterValueGroup is a group of related parameter values. The same group can be repeated more than once in a Conversion, Transformation, or higher level ParameterValueGroup, if those instances contain different values of one or more parameterValues which suitably distinquish among those groups. This concrete complex type can be used for operation methods without using an Application Schema that defines operation-method-specialized element names and contents. This complex type may be used, extended, or restricted for well-known operation methods, especially for methods with only one instance.
///   The parameterValue elements are an unordered set of composition association roles to the parameter values and groups of values included in this group.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":group of XSD type "http://www.opengis.net/gml/3.2":OperationParameterGroupPropertyType.
/// <PRE><BLOCKQUOTE>
///   gml:group is an association role to the operation parameter group for which this element provides parameter values.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":OperationMethod of XSD type "http://www.opengis.net/gml/3.2":OperationMethodType.
/// <PRE><BLOCKQUOTE>
///   gml:OperationMethod is a method (algorithm or procedure) used to perform a coordinate operation. Most operation methods use a number of operation parameters, although some coordinate conversions use none. Each coordinate operation using the method assigns values to these parameters.
///   The parameter elements are an unordered list of associations to the set of operation parameters and parameter groups used by this operation method.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":formula of XSD type "http://www.opengis.net/gml/3.2":CodeType.
/// <PRE><BLOCKQUOTE>
///   gml:formula Formula(s) or procedure used by an operation method. The use of the codespace attribite has been deprecated. The property value shall be a character string.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":sourceDimensions of XSD type xs:positiveInteger.
/// <PRE><BLOCKQUOTE>
///   gml:sourceDimensions is the number of dimensions in the source CRS of this operation method.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":targetDimensions of XSD type xs:positiveInteger.
/// <PRE><BLOCKQUOTE>
///   gml:targetDimensions is the number of dimensions in the target CRS of this operation method.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":parameter of XSD type "http://www.opengis.net/gml/3.2":AbstractGeneralOperationParameterPropertyType.
/// <PRE><BLOCKQUOTE>
///   gml:parameter is an association to an operation parameter or parameter group.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":minimumOccurs of XSD type xs:nonNegativeInteger.
/// <PRE><BLOCKQUOTE>
///   gml:minimumOccurs is the minimum number of times that values for this parameter group or parameter are required. If this attribute is omitted, the minimum number shall be one.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":OperationParameter of XSD type "http://www.opengis.net/gml/3.2":OperationParameterType.
/// <PRE><BLOCKQUOTE>
///   gml:OperationParameter is the definition of a parameter used by an operation method. Most parameter values are numeric, but other types of parameter values are possible. This complex type is expected to be used or extended for all operation methods, without defining operation-method-specialized element names.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":OperationParameterGroup of XSD type "http://www.opengis.net/gml/3.2":OperationParameterGroupType.
/// <PRE><BLOCKQUOTE>
///   gml:OperationParameterGroup is the definition of a group of parameters used by an operation method. This complex type is expected to be used or extended for all applicable operation methods, without defining operation-method-specialized element names.
///   The generalOperationParameter elements are an unordered list of associations to the set of operation parameters that are members of this group.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":maximumOccurs of XSD type xs:positiveInteger.
/// <PRE><BLOCKQUOTE>
///   gml:maximumOccurs is the maximum number of times that values for this parameter group may be included. If this attribute is omitted, the maximum number shall be one.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":Observation of XSD type "http://www.opengis.net/gml/3.2":ObservationType.
/// <PRE><BLOCKQUOTE>
///   The content model is a straightforward extension of gml:AbstractFeatureType; it automatically has the gml:identifier, gml:description, gml:descriptionReference, gml:name, and gml:boundedBy properties. The gml:validTime element describes the time of the observation. Note that this may be a time instant or a time period.
///   The gml:using property contains or references a description of a sensor, instrument or procedure used for the observation.
///   The gml:target property contains or references the specimen, region or station which is the object of the observation. This property is particularly useful for remote observations, such as photographs, where a generic location property might apply to the location of the camera or the location of the field of view, and thus may be ambiguous. The gml:subject element is provided as a convenient synonym for gml:target. This is the term commonly used in phtotography. The gml:resultOf property indicates the result of the observation. The value may be inline, or a reference to a value elsewhere.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":using of XSD type "http://www.opengis.net/gml/3.2":ProcedurePropertyType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":target of XSD type "http://www.opengis.net/gml/3.2":TargetPropertyType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":subject of XSD type "http://www.opengis.net/gml/3.2":TargetPropertyType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":resultOf of XSD type "http://www.opengis.net/gml/3.2":ResultType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":DirectedObservation of XSD type "http://www.opengis.net/gml/3.2":DirectedObservationType.
/// <PRE><BLOCKQUOTE>
///   A gml:DirectedObservation is the same as an observation except that it adds an additional gml:direction property. This is the direction in which the observation was acquired. Clearly this applies only to certain types of observations such as visual observations by people, or observations obtained from terrestrial cameras.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":DirectedObservationAtDistance of XSD type "http://www.opengis.net/gml/3.2":DirectedObservationAtDistanceType.
/// <PRE><BLOCKQUOTE>
///   gml:DirectedObservationAtDistance adds an additional distance property. This is the distance from the observer to the subject of the observation. Clearly this applies only to certain types of observations such as visual observations by people, or observations obtained from terrestrial cameras.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":direction of XSD type "http://www.opengis.net/gml/3.2":DirectionPropertyType.
/// <PRE><BLOCKQUOTE>
///   The property gml:direction is intended as a pre-defined property expressing a direction to be assigned to features defined in a GML application schema.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":TimeReferenceSystem of XSD type "http://www.opengis.net/gml/3.2":TimeReferenceSystemType.
/// <PRE><BLOCKQUOTE>
///   A reference system is characterized in terms of its domain of validity: the spatial and temporal extent over which it is applicable. The basic GML element for temporal reference systems is gml:TimeReferenceSystem. Its content model extends gml:DefinitionType with one additional property, gml:domainOfValidity.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":TimeCoordinateSystem of XSD type "http://www.opengis.net/gml/3.2":TimeCoordinateSystemType.
/// <PRE><BLOCKQUOTE>
///   A temporal coordinate system shall be based on a continuous interval scale defined in terms of a single time interval.
///   The differences to ISO 19108 TM_CoordinateSystem are:
///   - the origin is specified either using the property gml:originPosition whose value is a direct time position, or using the property gml:origin whose model is gml:TimeInstantPropertyType; this permits more flexibility in representation and also supports referring to a value fixed elsewhere;
///   - the interval uses gml:TimeIntervalLengthType.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":TimeCalendar of XSD type "http://www.opengis.net/gml/3.2":TimeCalendarType.
/// <PRE><BLOCKQUOTE>
///   A calendar is a discrete temporal reference system that provides a basis for defining temporal position to a resolution of one day.
///   gml:TimeCalendar adds one property to those inherited from gml:TimeReferenceSystem. A gml:referenceFrame provides a link to a gml:TimeCalendarEra that it uses. A gml:TimeCalendar may reference more than one calendar era. The referenceFrame element follows the standard GML property model, allowing the association to be instantiated either using an inline description using the gml:TimeCalendarEra element, or a link to a gml:TimeCalendarEra which is explicit elsewhere.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":TimeCalendarEra of XSD type "http://www.opengis.net/gml/3.2":TimeCalendarEraType.
/// <PRE><BLOCKQUOTE>
///   gml:TimeCalendarEra inherits basic properties from gml:DefinitionType and has the following additional properties:
///   - gml:referenceEvent is the name or description of a mythical or historic event which fixes the position of the base scale of the calendar era. This is given as text or using a link to description held elsewhere.
///   - gml:referenceDate specifies the date of the referenceEvent expressed as a date in the given calendar. In most calendars, this date is the origin (i.e., the first day) of the scale, but this is not always true.
///   - gml:julianReference specifies the Julian date that corresponds to the reference date. The Julian day number is an integer value; the Julian date is a decimal value that allows greater resolution. Transforming calendar dates to and from Julian dates provides a relatively simple basis for transforming dates from one calendar to another.
///   - gml:epochOfUse is the period for which the calendar era was used as a basis for dating.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":TimeClock of XSD type "http://www.opengis.net/gml/3.2":TimeClockType.
/// <PRE><BLOCKQUOTE>
///   A clock provides a basis for defining temporal position within a day. A clock shall be used with a calendar in order to provide a complete description of a temporal position within a specific day.
///   gml:TimeClock adds the following properties to those inherited from gml:TimeReferenceSystemType:
///   - gml:referenceEvent is the name or description of an event, such as solar noon or sunrise, which fixes the position of the base scale of the clock.
///   - gml:referenceTime specifies the time of day associated with the reference event expressed as a time of day in the given clock. The reference time is usually the origin of the clock scale. - gml:utcReference specifies the 24 hour local or UTC time that corresponds to the reference time.
///   - gml:dateBasis contains or references the calendars that use this clock.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":TimeOrdinalReferenceSystem of XSD type "http://www.opengis.net/gml/3.2":TimeOrdinalReferenceSystemType.
/// <PRE><BLOCKQUOTE>
///   In some applications of geographic information such as geology and archaeology relative position in time is known more precisely than absolute time or duration. The order of events in time can be well established, but the magnitude of the intervals between them cannot be accurately determined; in such cases, the use of an ordinal temporal reference system is appropriate. An ordinal temporal reference system is composed of a sequence of named coterminous eras, which may in turn be composed of sequences of member eras at a finer scale, giving the whole a hierarchical structure of eras of verying resolution. An ordinal temporal reference system whose component eras are not further subdivided is effectively a temporal topological complex constrained to be a linear graph. An ordinal temporal reference system some or all of whose component eras are subdivided is effectively a temporal topological complex with the constraint that parallel branches may only be constructed in pairs where one is a single temporal ordinal era and the other is a sequence of temporal ordinal eras that are called "members" of the "group". This constraint means that within a single temporal ordinal reference system, the relative position of all temporal ordinal eras is unambiguous. The positions of the beginning and end of a given era may calibrate the relative time scale.
///   gml:TimeOrdinalReferenceSystem adds one or more gml:component properties to the generic temporal reference system model.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":TimeOrdinalEra of XSD type "http://www.opengis.net/gml/3.2":TimeOrdinalEraType.
/// <PRE><BLOCKQUOTE>
///   Its content model follows the pattern of gml:TimeEdge, inheriting standard properties from gml:DefinitionType, and adding gml:start, gml:end and gml:extent properties, a set of gml:member properties which indicate ordered gml:TimeOrdinalEra elements, and a gml:group property which points to the parent era.
///   The recursive inclusion of gml:TimeOrdinalEra elements allow the construction of an arbitrary depth hierarchical ordinal reference schema, such that an ordinal era at a given level of the hierarchy includes a sequence of shorter, coterminous ordinal eras.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":TimeTopologyComplex of XSD type "http://www.opengis.net/gml/3.2":TimeTopologyComplexType.
/// <PRE><BLOCKQUOTE>
///   A temporal topology complex shall be the connected acyclic directed graph composed of temporal topological primitives, i.e. time nodes and time edges. Because a time edge may not exist without two time nodes on its boundaries, static features have time edges from a temporal topology complex as the values of their temporal properties, regardless of explicit declarations.
///   A temporal topology complex expresses a linear or a non-linear graph. A temporal linear graph, composed of a sequence of time edges, provides a lineage described only by "substitution" of feature instances or feature element values. A time node as the start or the end of the graph connects with at least one time edge. A time node other than the start and the end shall connect to at least two time edges: one of starting from the node, and another ending at the node.
///   A temporal topological complex is a set of connected temporal topological primitives. The member primtives are indicated, either by reference or by value, using the primitive property.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":TimeNode of XSD type "http://www.opengis.net/gml/3.2":TimeNodeType.
/// <PRE><BLOCKQUOTE>
///   A time node is a zero-dimensional topological primitive that represents an identifiable node in time (it is equivalent to a point in space). A node may act as the termination or initiation of any number of time edges. A time node may be realised as a geometry, its position, whose value is a time instant.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":TimeEdge of XSD type "http://www.opengis.net/gml/3.2":TimeEdgeType.
/// <PRE><BLOCKQUOTE>
///   A time edge is a one-dimensional topological primitive. It is an open interval that starts and ends at a node. The edge may be realised as a geometry whose value is a time period.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":Null of XSD type "http://www.opengis.net/gml/3.2":NilReasonType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":anchorPoint of XSD type "http://www.opengis.net/gml/3.2":CodeType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":datumRef of XSD type "http://www.opengis.net/gml/3.2":DatumPropertyType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":usesPrimeMeridian of XSD type "http://www.opengis.net/gml/3.2":PrimeMeridianPropertyType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":usesEllipsoid of XSD type "http://www.opengis.net/gml/3.2":EllipsoidPropertyType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":geodeticDatumRef of XSD type "http://www.opengis.net/gml/3.2":GeodeticDatumPropertyType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":ellipsoidRef of XSD type "http://www.opengis.net/gml/3.2":EllipsoidPropertyType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":primeMeridianRef of XSD type "http://www.opengis.net/gml/3.2":PrimeMeridianPropertyType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":engineeringDatumRef of XSD type "http://www.opengis.net/gml/3.2":EngineeringDatumPropertyType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":imageDatumRef of XSD type "http://www.opengis.net/gml/3.2":ImageDatumPropertyType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":verticalDatumRef of XSD type "http://www.opengis.net/gml/3.2":VerticalDatumPropertyType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":temporalDatumRef of XSD type "http://www.opengis.net/gml/3.2":TemporalDatumPropertyType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":coordinateOperationRef of XSD type "http://www.opengis.net/gml/3.2":CoordinateOperationPropertyType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":singleOperationRef of XSD type "http://www.opengis.net/gml/3.2":SingleOperationPropertyType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":operationRef of XSD type "http://www.opengis.net/gml/3.2":OperationPropertyType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":generalConversionRef of XSD type "http://www.opengis.net/gml/3.2":GeneralConversionPropertyType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":generalTransformationRef of XSD type "http://www.opengis.net/gml/3.2":GeneralTransformationPropertyType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":usesSingleOperation of XSD type "http://www.opengis.net/gml/3.2":CoordinateOperationPropertyType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":concatenatedOperationRef of XSD type "http://www.opengis.net/gml/3.2":ConcatenatedOperationPropertyType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":usesOperation of XSD type "http://www.opengis.net/gml/3.2":CoordinateOperationPropertyType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":passThroughOperationRef of XSD type "http://www.opengis.net/gml/3.2":PassThroughOperationPropertyType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":usesMethod of XSD type "http://www.opengis.net/gml/3.2":OperationMethodPropertyType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":usesValue of XSD type "http://www.opengis.net/gml/3.2":AbstractGeneralParameterValuePropertyType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":conversionRef of XSD type "http://www.opengis.net/gml/3.2":ConversionPropertyType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":transformationRef of XSD type "http://www.opengis.net/gml/3.2":TransformationPropertyType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":dmsAngleValue of XSD type "http://www.opengis.net/gml/3.2":DMSAngleType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":valueOfParameter of XSD type "http://www.opengis.net/gml/3.2":OperationParameterPropertyType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":includesValue of XSD type "http://www.opengis.net/gml/3.2":AbstractGeneralParameterValuePropertyType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":valuesOfGroup of XSD type "http://www.opengis.net/gml/3.2":OperationParameterGroupPropertyType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":methodFormula of XSD type "http://www.opengis.net/gml/3.2":CodeType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":usesParameter of XSD type "http://www.opengis.net/gml/3.2":AbstractGeneralOperationParameterPropertyType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":operationMethodRef of XSD type "http://www.opengis.net/gml/3.2":OperationMethodPropertyType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":abstractGeneralOperationParameterRef of XSD type "http://www.opengis.net/gml/3.2":AbstractGeneralOperationParameterPropertyType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":operationParameterRef of XSD type "http://www.opengis.net/gml/3.2":OperationParameterPropertyType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":includesParameter of XSD type "http://www.opengis.net/gml/3.2":AbstractGeneralOperationParameterPropertyType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":operationParameterGroupRef of XSD type "http://www.opengis.net/gml/3.2":OperationParameterPropertyType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":referenceSystemRef of XSD type "http://www.opengis.net/gml/3.2":CRSPropertyType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":crsRef of XSD type "http://www.opengis.net/gml/3.2":CRSPropertyType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":coordinateSystemAxisRef of XSD type "http://www.opengis.net/gml/3.2":CoordinateSystemAxisPropertyType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":usesAxis of XSD type "http://www.opengis.net/gml/3.2":CoordinateSystemAxisPropertyType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":coordinateSystemRef of XSD type "http://www.opengis.net/gml/3.2":CoordinateSystemPropertyType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":ellipsoidalCSRef of XSD type "http://www.opengis.net/gml/3.2":EllipsoidalCSPropertyType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":cartesianCSRef of XSD type "http://www.opengis.net/gml/3.2":CartesianCSPropertyType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":verticalCSRef of XSD type "http://www.opengis.net/gml/3.2":VerticalCSPropertyType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":TemporalCS of XSD type "http://www.opengis.net/gml/3.2":TemporalCSType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":temporalCSRef of XSD type "http://www.opengis.net/gml/3.2":TemporalCSPropertyType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":linearCSRef of XSD type "http://www.opengis.net/gml/3.2":LinearCSPropertyType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":userDefinedCSRef of XSD type "http://www.opengis.net/gml/3.2":UserDefinedCSPropertyType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":sphericalCSRef of XSD type "http://www.opengis.net/gml/3.2":SphericalCSPropertyType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":polarCSRef of XSD type "http://www.opengis.net/gml/3.2":PolarCSPropertyType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":cylindricalCSRef of XSD type "http://www.opengis.net/gml/3.2":CylindricalCSPropertyType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":ObliqueCartesianCS of XSD type "http://www.opengis.net/gml/3.2":ObliqueCartesianCSType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":obliqueCartesianCSRef of XSD type "http://www.opengis.net/gml/3.2":ObliqueCartesianCSPropertyType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":singleCRSRef of XSD type "http://www.opengis.net/gml/3.2":SingleCRSPropertyType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":definedByConversion of XSD type "http://www.opengis.net/gml/3.2":GeneralConversionPropertyType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":includesSingleCRS of XSD type "http://www.opengis.net/gml/3.2":SingleCRSPropertyType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":compoundCRSRef of XSD type "http://www.opengis.net/gml/3.2":CompoundCRSPropertyType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":usesEllipsoidalCS of XSD type "http://www.opengis.net/gml/3.2":EllipsoidalCSPropertyType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":usesCartesianCS of XSD type "http://www.opengis.net/gml/3.2":CartesianCSPropertyType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":usesSphericalCS of XSD type "http://www.opengis.net/gml/3.2":SphericalCSPropertyType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":usesGeodeticDatum of XSD type "http://www.opengis.net/gml/3.2":GeodeticDatumPropertyType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":usesVerticalCS of XSD type "http://www.opengis.net/gml/3.2":VerticalCSPropertyType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":usesVerticalDatum of XSD type "http://www.opengis.net/gml/3.2":VerticalDatumPropertyType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":verticalCRSRef of XSD type "http://www.opengis.net/gml/3.2":VerticalCRSPropertyType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":baseGeographicCRS of XSD type "http://www.opengis.net/gml/3.2":GeographicCRSPropertyType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":projectedCRSRef of XSD type "http://www.opengis.net/gml/3.2":ProjectedCRSPropertyType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":usesCS of XSD type "http://www.opengis.net/gml/3.2":CoordinateSystemPropertyType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":derivedCRSRef of XSD type "http://www.opengis.net/gml/3.2":DerivedCRSPropertyType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":usesEngineeringDatum of XSD type "http://www.opengis.net/gml/3.2":EngineeringDatumPropertyType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":engineeringCRSRef of XSD type "http://www.opengis.net/gml/3.2":EngineeringCRSPropertyType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":usesAffineCS of XSD type "http://www.opengis.net/gml/3.2":AffineCSPropertyType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":usesImageDatum of XSD type "http://www.opengis.net/gml/3.2":ImageDatumPropertyType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":usesObliqueCartesianCS of XSD type "http://www.opengis.net/gml/3.2":ObliqueCartesianCSPropertyType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":imageCRSRef of XSD type "http://www.opengis.net/gml/3.2":ImageCRSPropertyType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":usesTimeCS of XSD type "http://www.opengis.net/gml/3.2":TimeCSPropertyType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":usesTemporalCS of XSD type "http://www.opengis.net/gml/3.2":TemporalCSPropertyType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":usesTemporalDatum of XSD type "http://www.opengis.net/gml/3.2":TemporalDatumPropertyType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":temporalCRSRef of XSD type "http://www.opengis.net/gml/3.2":TemporalCRSPropertyType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":GeographicCRS of XSD type "http://www.opengis.net/gml/3.2":GeographicCRSType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":geographicCRSRef of XSD type "http://www.opengis.net/gml/3.2":GeographicCRSPropertyType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":GeocentricCRS of XSD type "http://www.opengis.net/gml/3.2":GeocentricCRSType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":geocentricCRSRef of XSD type "http://www.opengis.net/gml/3.2":GeocentricCRSPropertyType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":dmsAngle of XSD type "http://www.opengis.net/gml/3.2":DMSAngleType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":degrees of XSD type "http://www.opengis.net/gml/3.2":DegreesType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":decimalMinutes of XSD type "http://www.opengis.net/gml/3.2":DecimalMinutesType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":minutes of XSD type "http://www.opengis.net/gml/3.2":ArcMinutesType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":seconds of XSD type "http://www.opengis.net/gml/3.2":ArcSecondsType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":member of XSD type "http://www.opengis.net/gml/3.2":AssociationRoleType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":members of XSD type "http://www.opengis.net/gml/3.2":ArrayAssociationType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":metaDataProperty of XSD type "http://www.opengis.net/gml/3.2":MetaDataPropertyType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":Bag of XSD type "http://www.opengis.net/gml/3.2":BagType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":Array of XSD type "http://www.opengis.net/gml/3.2":ArrayType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":GenericMetaData of XSD type "http://www.opengis.net/gml/3.2":GenericMetaDataType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":coordinates of XSD type "http://www.opengis.net/gml/3.2":CoordinatesType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":pointRep of XSD type "http://www.opengis.net/gml/3.2":PointPropertyType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":location of XSD type "http://www.opengis.net/gml/3.2":LocationPropertyType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":LocationString of XSD type "http://www.opengis.net/gml/3.2":StringOrRefType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":LocationKeyWord of XSD type "http://www.opengis.net/gml/3.2":CodeType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":priorityLocation of XSD type "http://www.opengis.net/gml/3.2":PriorityLocationPropertyType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":featureMember of XSD type "http://www.opengis.net/gml/3.2":FeaturePropertyType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":featureProperty of XSD type "http://www.opengis.net/gml/3.2":FeaturePropertyType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":featureMembers of XSD type "http://www.opengis.net/gml/3.2":FeatureArrayPropertyType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":FeatureCollection of XSD type "http://www.opengis.net/gml/3.2":FeatureCollectionType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":track of XSD type "http://www.opengis.net/gml/3.2":HistoryPropertyType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":DefinitionCollection of XSD type "http://www.opengis.net/gml/3.2":DictionaryType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":definitionMember of XSD type "http://www.opengis.net/gml/3.2":DictionaryEntryType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":indirectEntry of XSD type "http://www.opengis.net/gml/3.2":IndirectEntryType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":DefinitionProxy of XSD type "http://www.opengis.net/gml/3.2":DefinitionProxyType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":definitionRef of XSD type "http://www.opengis.net/gml/3.2":ReferenceType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":MappingRule of XSD type "http://www.opengis.net/gml/3.2":StringOrRefType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":centerOf of XSD type "http://www.opengis.net/gml/3.2":PointPropertyType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":position of XSD type "http://www.opengis.net/gml/3.2":PointPropertyType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":extentOf of XSD type "http://www.opengis.net/gml/3.2":SurfacePropertyType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":edgeOf of XSD type "http://www.opengis.net/gml/3.2":CurvePropertyType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":centerLineOf of XSD type "http://www.opengis.net/gml/3.2":CurvePropertyType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":multiLocation of XSD type "http://www.opengis.net/gml/3.2":MultiPointPropertyType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":multiCenterOf of XSD type "http://www.opengis.net/gml/3.2":MultiPointPropertyType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":multiPosition of XSD type "http://www.opengis.net/gml/3.2":MultiPointPropertyType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":multiCenterLineOf of XSD type "http://www.opengis.net/gml/3.2":MultiCurvePropertyType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":multiEdgeOf of XSD type "http://www.opengis.net/gml/3.2":MultiCurvePropertyType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":multiCoverage of XSD type "http://www.opengis.net/gml/3.2":MultiSurfacePropertyType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":multiExtentOf of XSD type "http://www.opengis.net/gml/3.2":MultiSurfacePropertyType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":polygonPatches of XSD type "http://www.opengis.net/gml/3.2":SurfacePatchArrayPropertyType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":trianglePatches of XSD type "http://www.opengis.net/gml/3.2":SurfacePatchArrayPropertyType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":multiPointDomain of XSD type "http://www.opengis.net/gml/3.2":DomainSetType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":multiCurveDomain of XSD type "http://www.opengis.net/gml/3.2":DomainSetType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":multiSurfaceDomain of XSD type "http://www.opengis.net/gml/3.2":DomainSetType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":multiSolidDomain of XSD type "http://www.opengis.net/gml/3.2":DomainSetType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":gridDomain of XSD type "http://www.opengis.net/gml/3.2":DomainSetType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":rectifiedGridDomain of XSD type "http://www.opengis.net/gml/3.2":DomainSetType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":generalOperationParameter of XSD type "http://www.opengis.net/gml/3.2":AbstractGeneralOperationParameterPropertyType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":MovingObjectStatus of XSD type "http://www.opengis.net/gml/3.2":MovingObjectStatusType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":status of XSD type "http://www.opengis.net/gml/3.2":StringOrRefType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":statusReference of XSD type "http://www.opengis.net/gml/3.2":ReferenceType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":topoComplexProperty of XSD type "http://www.opengis.net/gml/3.2":TopoComplexPropertyType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":multiPointProperty of XSD type "http://www.opengis.net/gml/3.2":MultiPointPropertyType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":multiCurveProperty of XSD type "http://www.opengis.net/gml/3.2":MultiCurvePropertyType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":multiSurfaceProperty of XSD type "http://www.opengis.net/gml/3.2":MultiSurfacePropertyType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":multiSolidProperty of XSD type "http://www.opengis.net/gml/3.2":MultiSolidPropertyType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":multiGeometryProperty of XSD type "http://www.opengis.net/gml/3.2":MultiGeometryPropertyType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":pointArrayProperty of XSD type "http://www.opengis.net/gml/3.2":PointArrayPropertyType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":curveArrayProperty of XSD type "http://www.opengis.net/gml/3.2":CurveArrayPropertyType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":surfaceArrayProperty of XSD type "http://www.opengis.net/gml/3.2":SurfaceArrayPropertyType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.opengis.net/gml/3.2":solidArrayProperty of XSD type "http://www.opengis.net/gml/3.2":SolidArrayPropertyType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://www.opengis.net/gml/3.2                                           *
 *                                                                            *
\******************************************************************************/

/// @brief Top-level attribute "http://www.opengis.net/gml/3.2":id of simpleType xs:ID.
/// <PRE><BLOCKQUOTE>
///   The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.
/// </BLOCKQUOTE></PRE>
/// @note Use wsdl2h option -g to auto-generate a top-level attribute declaration and processing code.

/// @brief Top-level attribute "http://www.opengis.net/gml/3.2":uom of simpleType xs:anyURI.
/// @note Use wsdl2h option -g to auto-generate a top-level attribute declaration and processing code.

/// @brief Top-level attribute "http://www.opengis.net/gml/3.2":remoteSchema of simpleType xs:anyURI.
/// @note Use wsdl2h option -g to auto-generate a top-level attribute declaration and processing code.


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://www.isotc211.org/2005/gmd                                         *
 *                                                                            *
\******************************************************************************/

/// @brief Top-level root element "http://www.isotc211.org/2005/gmd":DS_DataSet of XSD type "http://www.isotc211.org/2005/gmd":DS_DataSet_Type.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.isotc211.org/2005/gmd":DS_OtherAggregate of XSD type "http://www.isotc211.org/2005/gmd":DS_OtherAggregate_Type.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.isotc211.org/2005/gmd":DS_Series of XSD type "http://www.isotc211.org/2005/gmd":DS_Series_Type.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.isotc211.org/2005/gmd":DS_Initiative of XSD type "http://www.isotc211.org/2005/gmd":DS_Initiative_Type.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.isotc211.org/2005/gmd":DS_Platform of XSD type "http://www.isotc211.org/2005/gmd":DS_Platform_Type.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.isotc211.org/2005/gmd":DS_Sensor of XSD type "http://www.isotc211.org/2005/gmd":DS_Sensor_Type.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.isotc211.org/2005/gmd":DS_ProductionSeries of XSD type "http://www.isotc211.org/2005/gmd":DS_ProductionSeries_Type.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.isotc211.org/2005/gmd":DS_StereoMate of XSD type "http://www.isotc211.org/2005/gmd":DS_StereoMate_Type.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.isotc211.org/2005/gmd":MD_Metadata of XSD type "http://www.isotc211.org/2005/gmd":MD_Metadata_Type.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.isotc211.org/2005/gmd":MD_GridSpatialRepresentation of XSD type "http://www.isotc211.org/2005/gmd":MD_GridSpatialRepresentation_Type.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.isotc211.org/2005/gmd":MD_VectorSpatialRepresentation of XSD type "http://www.isotc211.org/2005/gmd":MD_VectorSpatialRepresentation_Type.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.isotc211.org/2005/gmd":MD_Georeferenceable of XSD type "http://www.isotc211.org/2005/gmd":MD_Georeferenceable_Type.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.isotc211.org/2005/gmd":MD_Dimension of XSD type "http://www.isotc211.org/2005/gmd":MD_Dimension_Type.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.isotc211.org/2005/gmd":MD_Georectified of XSD type "http://www.isotc211.org/2005/gmd":MD_Georectified_Type.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.isotc211.org/2005/gmd":MD_GeometricObjects of XSD type "http://www.isotc211.org/2005/gmd":MD_GeometricObjects_Type.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.isotc211.org/2005/gmd":MD_PixelOrientationCode of XSD type "http://www.isotc211.org/2005/gmd":MD_PixelOrientationCode_Type.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.isotc211.org/2005/gmd":MD_TopologyLevelCode of XSD type "http://www.isotc211.org/2005/gco":CodeListValue_Type.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.isotc211.org/2005/gmd":MD_GeometricObjectTypeCode of XSD type "http://www.isotc211.org/2005/gco":CodeListValue_Type.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.isotc211.org/2005/gmd":MD_CellGeometryCode of XSD type "http://www.isotc211.org/2005/gco":CodeListValue_Type.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.isotc211.org/2005/gmd":MD_DimensionNameTypeCode of XSD type "http://www.isotc211.org/2005/gco":CodeListValue_Type.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.isotc211.org/2005/gmd":CI_ResponsibleParty of XSD type "http://www.isotc211.org/2005/gmd":CI_ResponsibleParty_Type.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.isotc211.org/2005/gmd":CI_Citation of XSD type "http://www.isotc211.org/2005/gmd":CI_Citation_Type.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.isotc211.org/2005/gmd":CI_Address of XSD type "http://www.isotc211.org/2005/gmd":CI_Address_Type.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.isotc211.org/2005/gmd":CI_OnlineResource of XSD type "http://www.isotc211.org/2005/gmd":CI_OnlineResource_Type.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.isotc211.org/2005/gmd":CI_Contact of XSD type "http://www.isotc211.org/2005/gmd":CI_Contact_Type.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.isotc211.org/2005/gmd":CI_Telephone of XSD type "http://www.isotc211.org/2005/gmd":CI_Telephone_Type.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.isotc211.org/2005/gmd":CI_Date of XSD type "http://www.isotc211.org/2005/gmd":CI_Date_Type.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.isotc211.org/2005/gmd":CI_Series of XSD type "http://www.isotc211.org/2005/gmd":CI_Series_Type.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.isotc211.org/2005/gmd":URL of XSD type xs:anyURI.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.isotc211.org/2005/gmd":CI_RoleCode of XSD type "http://www.isotc211.org/2005/gco":CodeListValue_Type.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.isotc211.org/2005/gmd":CI_PresentationFormCode of XSD type "http://www.isotc211.org/2005/gco":CodeListValue_Type.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.isotc211.org/2005/gmd":CI_OnLineFunctionCode of XSD type "http://www.isotc211.org/2005/gco":CodeListValue_Type.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.isotc211.org/2005/gmd":CI_DateTypeCode of XSD type "http://www.isotc211.org/2005/gco":CodeListValue_Type.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.isotc211.org/2005/gmd":RS_Identifier of XSD type "http://www.isotc211.org/2005/gmd":RS_Identifier_Type.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.isotc211.org/2005/gmd":MD_ReferenceSystem of XSD type "http://www.isotc211.org/2005/gmd":MD_ReferenceSystem_Type.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.isotc211.org/2005/gmd":MD_Identifier of XSD type "http://www.isotc211.org/2005/gmd":MD_Identifier_Type.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.isotc211.org/2005/gmd":EX_TemporalExtent of XSD type "http://www.isotc211.org/2005/gmd":EX_TemporalExtent_Type.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.isotc211.org/2005/gmd":EX_VerticalExtent of XSD type "http://www.isotc211.org/2005/gmd":EX_VerticalExtent_Type.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.isotc211.org/2005/gmd":EX_BoundingPolygon of XSD type "http://www.isotc211.org/2005/gmd":EX_BoundingPolygon_Type.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.isotc211.org/2005/gmd":EX_Extent of XSD type "http://www.isotc211.org/2005/gmd":EX_Extent_Type.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.isotc211.org/2005/gmd":EX_GeographicBoundingBox of XSD type "http://www.isotc211.org/2005/gmd":EX_GeographicBoundingBox_Type.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.isotc211.org/2005/gmd":EX_SpatialTemporalExtent of XSD type "http://www.isotc211.org/2005/gmd":EX_SpatialTemporalExtent_Type.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.isotc211.org/2005/gmd":EX_GeographicDescription of XSD type "http://www.isotc211.org/2005/gmd":EX_GeographicDescription_Type.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.isotc211.org/2005/gmd":MD_ExtendedElementInformation of XSD type "http://www.isotc211.org/2005/gmd":MD_ExtendedElementInformation_Type.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.isotc211.org/2005/gmd":MD_MetadataExtensionInformation of XSD type "http://www.isotc211.org/2005/gmd":MD_MetadataExtensionInformation_Type.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.isotc211.org/2005/gmd":MD_ObligationCode of XSD type "http://www.isotc211.org/2005/gmd":MD_ObligationCode_Type.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.isotc211.org/2005/gmd":MD_DatatypeCode of XSD type "http://www.isotc211.org/2005/gco":CodeListValue_Type.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.isotc211.org/2005/gmd":MD_FeatureCatalogueDescription of XSD type "http://www.isotc211.org/2005/gmd":MD_FeatureCatalogueDescription_Type.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.isotc211.org/2005/gmd":MD_CoverageDescription of XSD type "http://www.isotc211.org/2005/gmd":MD_CoverageDescription_Type.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.isotc211.org/2005/gmd":MD_ImageDescription of XSD type "http://www.isotc211.org/2005/gmd":MD_ImageDescription_Type.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.isotc211.org/2005/gmd":MD_RangeDimension of XSD type "http://www.isotc211.org/2005/gmd":MD_RangeDimension_Type.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.isotc211.org/2005/gmd":MD_Band of XSD type "http://www.isotc211.org/2005/gmd":MD_Band_Type.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.isotc211.org/2005/gmd":MD_CoverageContentTypeCode of XSD type "http://www.isotc211.org/2005/gco":CodeListValue_Type.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.isotc211.org/2005/gmd":MD_ImagingConditionCode of XSD type "http://www.isotc211.org/2005/gco":CodeListValue_Type.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.isotc211.org/2005/gmd":MD_ApplicationSchemaInformation of XSD type "http://www.isotc211.org/2005/gmd":MD_ApplicationSchemaInformation_Type.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.isotc211.org/2005/gmd":MD_PortrayalCatalogueReference of XSD type "http://www.isotc211.org/2005/gmd":MD_PortrayalCatalogueReference_Type.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.isotc211.org/2005/gmd":LI_ProcessStep of XSD type "http://www.isotc211.org/2005/gmd":LI_ProcessStep_Type.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.isotc211.org/2005/gmd":LI_Source of XSD type "http://www.isotc211.org/2005/gmd":LI_Source_Type.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.isotc211.org/2005/gmd":LI_Lineage of XSD type "http://www.isotc211.org/2005/gmd":LI_Lineage_Type.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.isotc211.org/2005/gmd":DQ_ConformanceResult of XSD type "http://www.isotc211.org/2005/gmd":DQ_ConformanceResult_Type.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.isotc211.org/2005/gmd":DQ_QuantitativeResult of XSD type "http://www.isotc211.org/2005/gmd":DQ_QuantitativeResult_Type.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.isotc211.org/2005/gmd":DQ_TemporalValidity of XSD type "http://www.isotc211.org/2005/gmd":DQ_TemporalValidity_Type.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.isotc211.org/2005/gmd":DQ_TemporalConsistency of XSD type "http://www.isotc211.org/2005/gmd":DQ_TemporalConsistency_Type.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.isotc211.org/2005/gmd":DQ_AccuracyOfATimeMeasurement of XSD type "http://www.isotc211.org/2005/gmd":DQ_AccuracyOfATimeMeasurement_Type.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.isotc211.org/2005/gmd":DQ_QuantitativeAttributeAccuracy of XSD type "http://www.isotc211.org/2005/gmd":DQ_QuantitativeAttributeAccuracy_Type.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.isotc211.org/2005/gmd":DQ_NonQuantitativeAttributeAccuracy of XSD type "http://www.isotc211.org/2005/gmd":DQ_NonQuantitativeAttributeAccuracy_Type.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.isotc211.org/2005/gmd":DQ_ThematicClassificationCorrectness of XSD type "http://www.isotc211.org/2005/gmd":DQ_ThematicClassificationCorrectness_Type.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.isotc211.org/2005/gmd":DQ_RelativeInternalPositionalAccuracy of XSD type "http://www.isotc211.org/2005/gmd":DQ_RelativeInternalPositionalAccuracy_Type.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.isotc211.org/2005/gmd":DQ_GriddedDataPositionalAccuracy of XSD type "http://www.isotc211.org/2005/gmd":DQ_GriddedDataPositionalAccuracy_Type.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.isotc211.org/2005/gmd":DQ_AbsoluteExternalPositionalAccuracy of XSD type "http://www.isotc211.org/2005/gmd":DQ_AbsoluteExternalPositionalAccuracy_Type.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.isotc211.org/2005/gmd":DQ_TopologicalConsistency of XSD type "http://www.isotc211.org/2005/gmd":DQ_TopologicalConsistency_Type.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.isotc211.org/2005/gmd":DQ_FormatConsistency of XSD type "http://www.isotc211.org/2005/gmd":DQ_FormatConsistency_Type.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.isotc211.org/2005/gmd":DQ_DomainConsistency of XSD type "http://www.isotc211.org/2005/gmd":DQ_DomainConsistency_Type.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.isotc211.org/2005/gmd":DQ_ConceptualConsistency of XSD type "http://www.isotc211.org/2005/gmd":DQ_ConceptualConsistency_Type.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.isotc211.org/2005/gmd":DQ_CompletenessOmission of XSD type "http://www.isotc211.org/2005/gmd":DQ_CompletenessOmission_Type.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.isotc211.org/2005/gmd":DQ_CompletenessCommission of XSD type "http://www.isotc211.org/2005/gmd":DQ_CompletenessCommission_Type.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.isotc211.org/2005/gmd":DQ_DataQuality of XSD type "http://www.isotc211.org/2005/gmd":DQ_DataQuality_Type.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.isotc211.org/2005/gmd":DQ_Scope of XSD type "http://www.isotc211.org/2005/gmd":DQ_Scope_Type.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.isotc211.org/2005/gmd":DQ_EvaluationMethodTypeCode of XSD type "http://www.isotc211.org/2005/gco":CodeListValue_Type.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.isotc211.org/2005/gmd":MD_BrowseGraphic of XSD type "http://www.isotc211.org/2005/gmd":MD_BrowseGraphic_Type.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.isotc211.org/2005/gmd":MD_DataIdentification of XSD type "http://www.isotc211.org/2005/gmd":MD_DataIdentification_Type.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.isotc211.org/2005/gmd":MD_ServiceIdentification of XSD type "http://www.isotc211.org/2005/gmd":MD_ServiceIdentification_Type.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.isotc211.org/2005/gmd":MD_RepresentativeFraction of XSD type "http://www.isotc211.org/2005/gmd":MD_RepresentativeFraction_Type.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.isotc211.org/2005/gmd":MD_Usage of XSD type "http://www.isotc211.org/2005/gmd":MD_Usage_Type.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.isotc211.org/2005/gmd":MD_Keywords of XSD type "http://www.isotc211.org/2005/gmd":MD_Keywords_Type.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.isotc211.org/2005/gmd":DS_Association of XSD type "http://www.isotc211.org/2005/gmd":DS_Association_Type.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.isotc211.org/2005/gmd":MD_AggregateInformation of XSD type "http://www.isotc211.org/2005/gmd":MD_AggregateInformation_Type.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.isotc211.org/2005/gmd":MD_Resolution of XSD type "http://www.isotc211.org/2005/gmd":MD_Resolution_Type.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.isotc211.org/2005/gmd":MD_TopicCategoryCode of XSD type "http://www.isotc211.org/2005/gmd":MD_TopicCategoryCode_Type.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.isotc211.org/2005/gmd":MD_CharacterSetCode of XSD type "http://www.isotc211.org/2005/gco":CodeListValue_Type.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.isotc211.org/2005/gmd":MD_SpatialRepresentationTypeCode of XSD type "http://www.isotc211.org/2005/gco":CodeListValue_Type.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.isotc211.org/2005/gmd":MD_ProgressCode of XSD type "http://www.isotc211.org/2005/gco":CodeListValue_Type.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.isotc211.org/2005/gmd":MD_KeywordTypeCode of XSD type "http://www.isotc211.org/2005/gco":CodeListValue_Type.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.isotc211.org/2005/gmd":DS_AssociationTypeCode of XSD type "http://www.isotc211.org/2005/gco":CodeListValue_Type.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.isotc211.org/2005/gmd":DS_InitiativeTypeCode of XSD type "http://www.isotc211.org/2005/gco":CodeListValue_Type.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.isotc211.org/2005/gmd":MD_Constraints of XSD type "http://www.isotc211.org/2005/gmd":MD_Constraints_Type.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.isotc211.org/2005/gmd":MD_LegalConstraints of XSD type "http://www.isotc211.org/2005/gmd":MD_LegalConstraints_Type.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.isotc211.org/2005/gmd":MD_SecurityConstraints of XSD type "http://www.isotc211.org/2005/gmd":MD_SecurityConstraints_Type.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.isotc211.org/2005/gmd":MD_ClassificationCode of XSD type "http://www.isotc211.org/2005/gco":CodeListValue_Type.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.isotc211.org/2005/gmd":MD_RestrictionCode of XSD type "http://www.isotc211.org/2005/gco":CodeListValue_Type.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.isotc211.org/2005/gmd":MD_Medium of XSD type "http://www.isotc211.org/2005/gmd":MD_Medium_Type.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.isotc211.org/2005/gmd":MD_DigitalTransferOptions of XSD type "http://www.isotc211.org/2005/gmd":MD_DigitalTransferOptions_Type.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.isotc211.org/2005/gmd":MD_StandardOrderProcess of XSD type "http://www.isotc211.org/2005/gmd":MD_StandardOrderProcess_Type.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.isotc211.org/2005/gmd":MD_Distributor of XSD type "http://www.isotc211.org/2005/gmd":MD_Distributor_Type.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.isotc211.org/2005/gmd":MD_Distribution of XSD type "http://www.isotc211.org/2005/gmd":MD_Distribution_Type.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.isotc211.org/2005/gmd":MD_Format of XSD type "http://www.isotc211.org/2005/gmd":MD_Format_Type.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.isotc211.org/2005/gmd":MD_DistributionUnits of XSD type "http://www.isotc211.org/2005/gco":CodeListValue_Type.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.isotc211.org/2005/gmd":MD_MediumFormatCode of XSD type "http://www.isotc211.org/2005/gco":CodeListValue_Type.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.isotc211.org/2005/gmd":MD_MediumNameCode of XSD type "http://www.isotc211.org/2005/gco":CodeListValue_Type.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.isotc211.org/2005/gmd":MD_MaintenanceInformation of XSD type "http://www.isotc211.org/2005/gmd":MD_MaintenanceInformation_Type.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.isotc211.org/2005/gmd":MD_ScopeDescription of XSD type "http://www.isotc211.org/2005/gmd":MD_ScopeDescription_Type.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.isotc211.org/2005/gmd":MD_MaintenanceFrequencyCode of XSD type "http://www.isotc211.org/2005/gco":CodeListValue_Type.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.isotc211.org/2005/gmd":MD_ScopeCode of XSD type "http://www.isotc211.org/2005/gco":CodeListValue_Type.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.isotc211.org/2005/gmd":PT_FreeText of XSD type "http://www.isotc211.org/2005/gmd":PT_FreeText_Type.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.isotc211.org/2005/gmd":PT_Locale of XSD type "http://www.isotc211.org/2005/gmd":PT_Locale_Type.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.isotc211.org/2005/gmd":LocalisedCharacterString of XSD type "http://www.isotc211.org/2005/gmd":LocalisedCharacterString_Type.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.isotc211.org/2005/gmd":PT_LocaleContainer of XSD type "http://www.isotc211.org/2005/gmd":PT_LocaleContainer_Type.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.isotc211.org/2005/gmd":LanguageCode of XSD type "http://www.isotc211.org/2005/gco":CodeListValue_Type.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.isotc211.org/2005/gmd":Country of XSD type "http://www.isotc211.org/2005/gco":CodeListValue_Type.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://www.isotc211.org/2005/gmd                                         *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://www.w3.org/1999/xlink                                             *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://www.w3.org/1999/xlink                                             *
 *                                                                            *
\******************************************************************************/

/// @brief Top-level attribute "http://www.w3.org/1999/xlink":type of simpleType "http://www.w3.org/1999/xlink":typeType.
// "_xlink__type" attribute definition intentionally left blank.
/// @brief Top-level attribute "http://www.w3.org/1999/xlink":href of simpleType "http://www.w3.org/1999/xlink":hrefType.
// "_xlink__href" attribute definition intentionally left blank.
/// @brief Top-level attribute "http://www.w3.org/1999/xlink":role of simpleType "http://www.w3.org/1999/xlink":roleType.
// "_xlink__role" attribute definition intentionally left blank.
/// @brief Top-level attribute "http://www.w3.org/1999/xlink":arcrole of simpleType "http://www.w3.org/1999/xlink":arcroleType.
// "_xlink__arcrole" attribute definition intentionally left blank.
/// @brief Top-level attribute "http://www.w3.org/1999/xlink":title of simpleType "http://www.w3.org/1999/xlink":titleAttrType.
// "_xlink__title" attribute definition intentionally left blank.
/// @brief Top-level attribute "http://www.w3.org/1999/xlink":show of simpleType "http://www.w3.org/1999/xlink":showType.
// "_xlink__show" attribute definition intentionally left blank.
/// @brief Top-level attribute "http://www.w3.org/1999/xlink":actuate of simpleType "http://www.w3.org/1999/xlink":actuateType.
// "_xlink__actuate" attribute definition intentionally left blank.
/// @brief Top-level attribute "http://www.w3.org/1999/xlink":label of simpleType "http://www.w3.org/1999/xlink":labelType.
// "_xlink__label" attribute definition intentionally left blank.
/// @brief Top-level attribute "http://www.w3.org/1999/xlink":from of simpleType "http://www.w3.org/1999/xlink":fromType.
// "_xlink__from" attribute definition intentionally left blank.
/// @brief Top-level attribute "http://www.w3.org/1999/xlink":to of simpleType "http://www.w3.org/1999/xlink":toType.
// "_xlink__to" attribute definition intentionally left blank.

/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://www.isotc211.org/2005/gco                                         *
 *                                                                            *
\******************************************************************************/

/// @brief Top-level root element "http://www.isotc211.org/2005/gco":TypeName of XSD type "http://www.isotc211.org/2005/gco":TypeName_Type.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.isotc211.org/2005/gco":MemberName of XSD type "http://www.isotc211.org/2005/gco":MemberName_Type.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.isotc211.org/2005/gco":Multiplicity of XSD type "http://www.isotc211.org/2005/gco":Multiplicity_Type.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.isotc211.org/2005/gco":MultiplicityRange of XSD type "http://www.isotc211.org/2005/gco":MultiplicityRange_Type.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.isotc211.org/2005/gco":Measure of XSD type "http://www.opengis.net/gml/3.2":MeasureType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.isotc211.org/2005/gco":Length of XSD type "http://www.opengis.net/gml/3.2":LengthType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.isotc211.org/2005/gco":Angle of XSD type "http://www.opengis.net/gml/3.2":AngleType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.isotc211.org/2005/gco":Scale of XSD type "http://www.opengis.net/gml/3.2":ScaleType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.isotc211.org/2005/gco":Distance of XSD type "http://www.opengis.net/gml/3.2":LengthType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.isotc211.org/2005/gco":CharacterString of XSD type xs:string.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.isotc211.org/2005/gco":Boolean of XSD type xs:boolean.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.isotc211.org/2005/gco":LocalName of XSD type "http://www.opengis.net/gml/3.2":CodeType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.isotc211.org/2005/gco":ScopedName of XSD type "http://www.opengis.net/gml/3.2":CodeType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.isotc211.org/2005/gco":DateTime of XSD type xs:dateTime.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.isotc211.org/2005/gco":Date of XSD type "http://www.isotc211.org/2005/gco":Date_Type.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.isotc211.org/2005/gco":Decimal of XSD type xs:decimal.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.isotc211.org/2005/gco":Real of XSD type xs:double.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.isotc211.org/2005/gco":Integer of XSD type xs:integer.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.isotc211.org/2005/gco":UnlimitedInteger of XSD type "http://www.isotc211.org/2005/gco":UnlimitedInteger_Type.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.isotc211.org/2005/gco":RecordType of XSD type "http://www.isotc211.org/2005/gco":RecordType_Type.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.isotc211.org/2005/gco":Binary of XSD type "http://www.isotc211.org/2005/gco":Binary_Type.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://www.isotc211.org/2005/gco                                         *
 *                                                                            *
\******************************************************************************/

/// @brief Top-level attribute "http://www.isotc211.org/2005/gco":nilReason of simpleType "http://www.opengis.net/gml/3.2":NilReasonType.
/// @note Use wsdl2h option -g to auto-generate a top-level attribute declaration and processing code.

/// @brief Top-level attribute "http://www.isotc211.org/2005/gco":isoType of simpleType xs:string.
/// @note Use wsdl2h option -g to auto-generate a top-level attribute declaration and processing code.


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://www.isotc211.org/2005/gss                                         *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://www.isotc211.org/2005/gss                                         *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://www.isotc211.org/2005/gts                                         *
 *                                                                            *
\******************************************************************************/

/// @brief Top-level root element "http://www.isotc211.org/2005/gts":TM_PeriodDuration of XSD type xs:duration.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://www.isotc211.org/2005/gts                                         *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://www.isotc211.org/2005/gsr                                         *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://www.isotc211.org/2005/gsr                                         *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * XML Data Binding                                                           *
 *                                                                            *
\******************************************************************************/


/**

@page page_XMLDataBinding XML Data Binding

SOAP/XML services use data bindings contractually bound by WSDL and auto-
generated by wsdl2h and soapcpp2 (see Service Bindings). Plain data bindings
are adopted from XML schemas as part of the WSDL types section or when running
wsdl2h on a set of schemas to produce non-SOAP-based XML data bindings.

The following readers and writers are C/C++ data type (de)serializers auto-
generated by wsdl2h and soapcpp2. Run soapcpp2 on this file to generate the
(de)serialization code, which is stored in soapC.c[pp]. Include "soapH.h" in
your code to import these data type and function declarations. Only use the
soapcpp2-generated files in your project build. Do not include the wsdl2h-
generated .h file in your code.

Data can be read and deserialized from:
  - an int file descriptor, using soap->recvfd = fd
  - a socket, using soap->socket = (int)...
  - a C++ stream (istream, stringstream), using soap->is = (istream*)...
  - a C string, using soap->is = (const char*)...
  - any input, using the soap->frecv() callback

Data can be serialized and written to:
  - an int file descriptor, using soap->sendfd = (int)...
  - a socket, using soap->socket = (int)...
  - a C++ stream (ostream, stringstream), using soap->os = (ostream*)...
  - a C string, using soap->os = (const char**)...
  - any output, using the soap->fsend() callback

The following options are available for (de)serialization control:
  - soap->encodingStyle = NULL; to remove SOAP 1.1/1.2 encodingStyle
  - soap_mode(soap, SOAP_XML_TREE); XML without id-ref (no cycles!)
  - soap_mode(soap, SOAP_XML_GRAPH); XML with id-ref (including cycles)
  - soap_set_namespaces(soap, struct Namespace *nsmap); to set xmlns bindings


@section plu Top-level root elements of schema "http://inspire.ec.europa.eu/schemas/plu/3.0"

  - <plu:ZoningElement> (use wsdl2h option -g to auto-generate type _plu__ZoningElement)

  - <plu:OfficialDocumentation> (use wsdl2h option -g to auto-generate type _plu__OfficialDocumentation)

  - <plu:DimensioningIndicationMeasureValue> (use wsdl2h option -g to auto-generate type _plu__DimensioningIndicationMeasureValue)

  - <plu:DimensioningIndicationIntegerValue> (use wsdl2h option -g to auto-generate type _plu__DimensioningIndicationIntegerValue)

  - <plu:DimensioningIndicationCharacterValue> (use wsdl2h option -g to auto-generate type _plu__DimensioningIndicationCharacterValue)

  - <plu:SupplementaryRegulation> (use wsdl2h option -g to auto-generate type _plu__SupplementaryRegulation)

  - <plu:DimensioningIndicationValue> (use wsdl2h option -g to auto-generate type _plu__DimensioningIndicationValue)

  - <plu:SpatialPlan> (use wsdl2h option -g to auto-generate type _plu__SpatialPlan)

  - <plu:DimensioningIndicationRealValue> (use wsdl2h option -g to auto-generate type _plu__DimensioningIndicationRealValue)

  - <plu:OrdinanceValue> (use wsdl2h option -g to auto-generate type _plu__OrdinanceValue)

  - <plu:BackgroundMapValue> (use wsdl2h option -g to auto-generate type _plu__BackgroundMapValue)

@section base Top-level root elements of schema "http://inspire.ec.europa.eu/schemas/base/3.3"

  - <base:SpatialDataSet> (use wsdl2h option -g to auto-generate type _base__SpatialDataSet)

  - <base:Identifier> (use wsdl2h option -g to auto-generate type _base__Identifier)

@section base2 Top-level root elements of schema "http://inspire.ec.europa.eu/schemas/base2/1.0"

  - <base2:OfficialJournalInformation> (use wsdl2h option -g to auto-generate type _base2__OfficialJournalInformation)

  - <base2:LegislationCitation> (use wsdl2h option -g to auto-generate type _base2__LegislationCitation)

  - <base2:Contact> (use wsdl2h option -g to auto-generate type _base2__Contact)

  - <base2:RelatedParty> (use wsdl2h option -g to auto-generate type _base2__RelatedParty)

  - <base2:DocumentCitation> (use wsdl2h option -g to auto-generate type _base2__DocumentCitation)

  - <base2:ThematicIdentifier> (use wsdl2h option -g to auto-generate type _base2__ThematicIdentifier)

@section lunom Top-level root elements of schema "http://inspire.ec.europa.eu/schemas/lunom/3.0"

  - <lunom:HILUCSPresence> (use wsdl2h option -g to auto-generate type _lunom__HILUCSPresence)

  - <lunom:SpecificPercentage> (use wsdl2h option -g to auto-generate type _lunom__SpecificPercentage)

  - <lunom:SpecificPresence> (use wsdl2h option -g to auto-generate type _lunom__SpecificPresence)

  - <lunom:HILUCSPercentage> (use wsdl2h option -g to auto-generate type _lunom__HILUCSPercentage)

@section sc Top-level root elements of schema "http://www.interactive-instruments.de/ShapeChange/AppInfo"

  - <sc:profiles> (use wsdl2h option -g to auto-generate type _sc__profiles)

  - <sc:name> (use wsdl2h option -g to auto-generate type _sc__name)

  - <sc:code> (use wsdl2h option -g to auto-generate type _sc__code)

  - <sc:taggedValue> @ref _sc__taggedValue
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__sc__taggedValue(struct soap*, _sc__taggedValue*);
    // Writer (returns SOAP_OK on success):
    soap_write__sc__taggedValue(struct soap*, _sc__taggedValue*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__sc__taggedValue(struct soap*, const char *URL, _sc__taggedValue*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__sc__taggedValue(struct soap*, const char *URL, _sc__taggedValue*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__sc__taggedValue(struct soap*, const char *URL, _sc__taggedValue*);
    soap_POST_recv__sc__taggedValue(struct soap*, _sc__taggedValue*);
    @endcode

@section gml Top-level root elements of schema "http://www.opengis.net/gml/3.2"

  - <gml:dataSource> (use wsdl2h option -g to auto-generate type _gml__dataSource)

  - <gml:dataSourceReference> (use wsdl2h option -g to auto-generate type _gml__dataSourceReference)

  - <gml:DynamicFeature> (use wsdl2h option -g to auto-generate type _gml__DynamicFeature)

  - <gml:DynamicFeatureCollection> (use wsdl2h option -g to auto-generate type _gml__DynamicFeatureCollection)

  - <gml:dynamicMembers> (use wsdl2h option -g to auto-generate type _gml__dynamicMembers)

  - <gml:AbstractTimeSlice> (use wsdl2h option -g to auto-generate type _gml__AbstractTimeSlice)

  - <gml:history> (use wsdl2h option -g to auto-generate type _gml__history)

  - <gml:AbstractTopology> (use wsdl2h option -g to auto-generate type _gml__AbstractTopology)

  - <gml:AbstractTopoPrimitive> (use wsdl2h option -g to auto-generate type _gml__AbstractTopoPrimitive)

  - <gml:Node> (use wsdl2h option -g to auto-generate type _gml__Node)

  - <gml:directedNode> (use wsdl2h option -g to auto-generate type _gml__directedNode)

  - <gml:Edge> (use wsdl2h option -g to auto-generate type _gml__Edge)

  - <gml:directedEdge> (use wsdl2h option -g to auto-generate type _gml__directedEdge)

  - <gml:Face> (use wsdl2h option -g to auto-generate type _gml__Face)

  - <gml:directedFace> (use wsdl2h option -g to auto-generate type _gml__directedFace)

  - <gml:TopoSolid> (use wsdl2h option -g to auto-generate type _gml__TopoSolid)

  - <gml:directedTopoSolid> (use wsdl2h option -g to auto-generate type _gml__directedTopoSolid)

  - <gml:TopoPoint> (use wsdl2h option -g to auto-generate type _gml__TopoPoint)

  - <gml:topoPointProperty> (use wsdl2h option -g to auto-generate type _gml__topoPointProperty)

  - <gml:TopoCurve> (use wsdl2h option -g to auto-generate type _gml__TopoCurve)

  - <gml:topoCurveProperty> (use wsdl2h option -g to auto-generate type _gml__topoCurveProperty)

  - <gml:TopoSurface> (use wsdl2h option -g to auto-generate type _gml__TopoSurface)

  - <gml:topoSurfaceProperty> (use wsdl2h option -g to auto-generate type _gml__topoSurfaceProperty)

  - <gml:TopoVolume> (use wsdl2h option -g to auto-generate type _gml__TopoVolume)

  - <gml:topoVolumeProperty> (use wsdl2h option -g to auto-generate type _gml__topoVolumeProperty)

  - <gml:TopoComplex> (use wsdl2h option -g to auto-generate type _gml__TopoComplex)

  - <gml:subComplex> (use wsdl2h option -g to auto-generate type _gml__subComplex)

  - <gml:superComplex> (use wsdl2h option -g to auto-generate type _gml__superComplex)

  - <gml:maximalComplex> (use wsdl2h option -g to auto-generate type _gml__maximalComplex)

  - <gml:topoPrimitiveMember> (use wsdl2h option -g to auto-generate type _gml__topoPrimitiveMember)

  - <gml:topoPrimitiveMembers> (use wsdl2h option -g to auto-generate type _gml__topoPrimitiveMembers)

  - <gml:GeometricComplex> (use wsdl2h option -g to auto-generate type _gml__GeometricComplex)

  - <gml:CompositeCurve> (use wsdl2h option -g to auto-generate type _gml__CompositeCurve)

  - <gml:CompositeSurface> (use wsdl2h option -g to auto-generate type _gml__CompositeSurface)

  - <gml:CompositeSolid> (use wsdl2h option -g to auto-generate type _gml__CompositeSolid)

  - <gml:AbstractGeometricAggregate> (use wsdl2h option -g to auto-generate type _gml__AbstractGeometricAggregate)

  - <gml:MultiGeometry> (use wsdl2h option -g to auto-generate type _gml__MultiGeometry)

  - <gml:geometryMember> (use wsdl2h option -g to auto-generate type _gml__geometryMember)

  - <gml:geometryMembers> (use wsdl2h option -g to auto-generate type _gml__geometryMembers)

  - <gml:MultiPoint> (use wsdl2h option -g to auto-generate type _gml__MultiPoint)

  - <gml:pointMember> (use wsdl2h option -g to auto-generate type _gml__pointMember)

  - <gml:pointMembers> (use wsdl2h option -g to auto-generate type _gml__pointMembers)

  - <gml:MultiCurve> (use wsdl2h option -g to auto-generate type _gml__MultiCurve)

  - <gml:curveMembers> (use wsdl2h option -g to auto-generate type _gml__curveMembers)

  - <gml:MultiSurface> (use wsdl2h option -g to auto-generate type _gml__MultiSurface)

  - <gml:surfaceMembers> (use wsdl2h option -g to auto-generate type _gml__surfaceMembers)

  - <gml:MultiSolid> (use wsdl2h option -g to auto-generate type _gml__MultiSolid)

  - <gml:solidMember> (use wsdl2h option -g to auto-generate type _gml__solidMember)

  - <gml:solidMembers> (use wsdl2h option -g to auto-generate type _gml__solidMembers)

  - <gml:Curve> (use wsdl2h option -g to auto-generate type _gml__Curve)

  - <gml:baseCurve> (use wsdl2h option -g to auto-generate type _gml__baseCurve)

  - <gml:OrientableCurve> (use wsdl2h option -g to auto-generate type _gml__OrientableCurve)

  - <gml:AbstractCurveSegment> (use wsdl2h option -g to auto-generate type _gml__AbstractCurveSegment)

  - <gml:segments> (use wsdl2h option -g to auto-generate type _gml__segments)

  - <gml:LineStringSegment> (use wsdl2h option -g to auto-generate type _gml__LineStringSegment)

  - <gml:ArcString> (use wsdl2h option -g to auto-generate type _gml__ArcString)

  - <gml:Arc> (use wsdl2h option -g to auto-generate type _gml__Arc)

  - <gml:Circle> (use wsdl2h option -g to auto-generate type _gml__Circle)

  - <gml:ArcStringByBulge> (use wsdl2h option -g to auto-generate type _gml__ArcStringByBulge)

  - <gml:ArcByBulge> (use wsdl2h option -g to auto-generate type _gml__ArcByBulge)

  - <gml:ArcByCenterPoint> (use wsdl2h option -g to auto-generate type _gml__ArcByCenterPoint)

  - <gml:CircleByCenterPoint> (use wsdl2h option -g to auto-generate type _gml__CircleByCenterPoint)

  - <gml:CubicSpline> (use wsdl2h option -g to auto-generate type _gml__CubicSpline)

  - <gml:BSpline> (use wsdl2h option -g to auto-generate type _gml__BSpline)

  - <gml:Bezier> (use wsdl2h option -g to auto-generate type _gml__Bezier)

  - <gml:OffsetCurve> (use wsdl2h option -g to auto-generate type _gml__OffsetCurve)

  - <gml:AffinePlacement> (use wsdl2h option -g to auto-generate type _gml__AffinePlacement)

  - <gml:Clothoid> (use wsdl2h option -g to auto-generate type _gml__Clothoid)

  - <gml:GeodesicString> (use wsdl2h option -g to auto-generate type _gml__GeodesicString)

  - <gml:Geodesic> (use wsdl2h option -g to auto-generate type _gml__Geodesic)

  - <gml:Surface> (use wsdl2h option -g to auto-generate type _gml__Surface)

  - <gml:baseSurface> (use wsdl2h option -g to auto-generate type _gml__baseSurface)

  - <gml:OrientableSurface> (use wsdl2h option -g to auto-generate type _gml__OrientableSurface)

  - <gml:AbstractSurfacePatch> (use wsdl2h option -g to auto-generate type _gml__AbstractSurfacePatch)

  - <gml:patches> (use wsdl2h option -g to auto-generate type _gml__patches)

  - <gml:PolygonPatch> (use wsdl2h option -g to auto-generate type _gml__PolygonPatch)

  - <gml:Triangle> (use wsdl2h option -g to auto-generate type _gml__Triangle)

  - <gml:Rectangle> (use wsdl2h option -g to auto-generate type _gml__Rectangle)

  - <gml:Ring> (use wsdl2h option -g to auto-generate type _gml__Ring)

  - <gml:curveMember> (use wsdl2h option -g to auto-generate type _gml__curveMember)

  - <gml:AbstractParametricCurveSurface> (use wsdl2h option -g to auto-generate type _gml__AbstractParametricCurveSurface)

  - <gml:AbstractGriddedSurface> (use wsdl2h option -g to auto-generate type _gml__AbstractGriddedSurface)

  - <gml:Cone> (use wsdl2h option -g to auto-generate type _gml__Cone)

  - <gml:Cylinder> (use wsdl2h option -g to auto-generate type _gml__Cylinder)

  - <gml:Sphere> (use wsdl2h option -g to auto-generate type _gml__Sphere)

  - <gml:PolyhedralSurface> (use wsdl2h option -g to auto-generate type _gml__PolyhedralSurface)

  - <gml:TriangulatedSurface> (use wsdl2h option -g to auto-generate type _gml__TriangulatedSurface)

  - <gml:Tin> (use wsdl2h option -g to auto-generate type _gml__Tin)

  - <gml:AbstractSolid> (use wsdl2h option -g to auto-generate type _gml__AbstractSolid)

  - <gml:solidProperty> (use wsdl2h option -g to auto-generate type _gml__solidProperty)

  - <gml:Solid> (use wsdl2h option -g to auto-generate type _gml__Solid)

  - <gml:Shell> (use wsdl2h option -g to auto-generate type _gml__Shell)

  - <gml:surfaceMember> (use wsdl2h option -g to auto-generate type _gml__surfaceMember)

  - <gml:AbstractSurface> (use wsdl2h option -g to auto-generate type _gml__AbstractSurface)

  - <gml:surfaceProperty> (use wsdl2h option -g to auto-generate type _gml__surfaceProperty)

  - <gml:Polygon> (use wsdl2h option -g to auto-generate type _gml__Polygon)

  - <gml:exterior> (use wsdl2h option -g to auto-generate type _gml__exterior)

  - <gml:interior> (use wsdl2h option -g to auto-generate type _gml__interior)

  - <gml:AbstractRing> (use wsdl2h option -g to auto-generate type _gml__AbstractRing)

  - <gml:LinearRing> (use wsdl2h option -g to auto-generate type _gml__LinearRing)

  - <gml:AbstractGeometry> (use wsdl2h option -g to auto-generate type _gml__AbstractGeometry)

  - <gml:pos> (use wsdl2h option -g to auto-generate type _gml__pos)

  - <gml:posList> (use wsdl2h option -g to auto-generate type _gml__posList)

  - <gml:vector> (use wsdl2h option -g to auto-generate type _gml__vector)

  - <gml:Envelope> (use wsdl2h option -g to auto-generate type _gml__Envelope)

  - <gml:AbstractGeometricPrimitive> (use wsdl2h option -g to auto-generate type _gml__AbstractGeometricPrimitive)

  - <gml:Point> (use wsdl2h option -g to auto-generate type _gml__Point)

  - <gml:pointProperty> (use wsdl2h option -g to auto-generate type _gml__pointProperty)

  - <gml:AbstractCurve> (use wsdl2h option -g to auto-generate type _gml__AbstractCurve)

  - <gml:curveProperty> (use wsdl2h option -g to auto-generate type _gml__curveProperty)

  - <gml:LineString> (use wsdl2h option -g to auto-generate type _gml__LineString)

  - <gml:measure> (use wsdl2h option -g to auto-generate type _gml__measure)

  - <gml:angle> (use wsdl2h option -g to auto-generate type _gml__angle)

  - <gml:unitOfMeasure> (use wsdl2h option -g to auto-generate type _gml__unitOfMeasure)

  - <gml:UnitDefinition> (use wsdl2h option -g to auto-generate type _gml__UnitDefinition)

  - <gml:quantityType> (use wsdl2h option -g to auto-generate type _gml__quantityType)

  - <gml:quantityTypeReference> (use wsdl2h option -g to auto-generate type _gml__quantityTypeReference)

  - <gml:catalogSymbol> (use wsdl2h option -g to auto-generate type _gml__catalogSymbol)

  - <gml:BaseUnit> (use wsdl2h option -g to auto-generate type _gml__BaseUnit)

  - <gml:DerivedUnit> (use wsdl2h option -g to auto-generate type _gml__DerivedUnit)

  - <gml:derivationUnitTerm> (use wsdl2h option -g to auto-generate type _gml__derivationUnitTerm)

  - <gml:ConventionalUnit> (use wsdl2h option -g to auto-generate type _gml__ConventionalUnit)

  - <gml:conversionToPreferredUnit> (use wsdl2h option -g to auto-generate type _gml__conversionToPreferredUnit)

  - <gml:roughConversionToPreferredUnit> (use wsdl2h option -g to auto-generate type _gml__roughConversionToPreferredUnit)

  - <gml:Definition> (use wsdl2h option -g to auto-generate type _gml__Definition)

  - <gml:remarks> (use wsdl2h option -g to auto-generate type _gml__remarks)

  - <gml:Dictionary> (use wsdl2h option -g to auto-generate type _gml__Dictionary)

  - <gml:dictionaryEntry> (use wsdl2h option -g to auto-generate type _gml__dictionaryEntry)

  - <gml:AbstractObject> (use wsdl2h option -g to auto-generate type _gml__AbstractObject)

  - <gml:AbstractGML> (use wsdl2h option -g to auto-generate type _gml__AbstractGML)

  - <gml:abstractAssociationRole> (use wsdl2h option -g to auto-generate type _gml__abstractAssociationRole)

  - <gml:abstractStrictAssociationRole> (use wsdl2h option -g to auto-generate type _gml__abstractStrictAssociationRole)

  - <gml:abstractReference> (use wsdl2h option -g to auto-generate type _gml__abstractReference)

  - <gml:abstractInlineProperty> (use wsdl2h option -g to auto-generate type _gml__abstractInlineProperty)

  - <gml:reversePropertyName> (use wsdl2h option -g to auto-generate type _gml__reversePropertyName)

  - <gml:description> (use wsdl2h option -g to auto-generate type _gml__description)

  - <gml:descriptionReference> (use wsdl2h option -g to auto-generate type _gml__descriptionReference)

  - <gml:name> (use wsdl2h option -g to auto-generate type _gml__name)

  - <gml:identifier> (use wsdl2h option -g to auto-generate type _gml__identifier)

  - <gml:targetElement> (use wsdl2h option -g to auto-generate type _gml__targetElement)

  - <gml:associationName> (use wsdl2h option -g to auto-generate type _gml__associationName)

  - <gml:defaultCodeSpace> (use wsdl2h option -g to auto-generate type _gml__defaultCodeSpace)

  - <gml:gmlProfileSchema> (use wsdl2h option -g to auto-generate type _gml__gmlProfileSchema)

  - <gml:AbstractCoverage> (use wsdl2h option -g to auto-generate type _gml__AbstractCoverage)

  - <gml:AbstractDiscreteCoverage> (use wsdl2h option -g to auto-generate type _gml__AbstractDiscreteCoverage)

  - <gml:AbstractContinuousCoverage> (use wsdl2h option -g to auto-generate type _gml__AbstractContinuousCoverage)

  - <gml:domainSet> (use wsdl2h option -g to auto-generate type _gml__domainSet)

  - <gml:rangeSet> (use wsdl2h option -g to auto-generate type _gml__rangeSet)

  - <gml:DataBlock> (use wsdl2h option -g to auto-generate type _gml__DataBlock)

  - <gml:rangeParameters> (use wsdl2h option -g to auto-generate type _gml__rangeParameters)

  - <gml:tupleList> (use wsdl2h option -g to auto-generate type _gml__tupleList)

  - <gml:doubleOrNilReasonTupleList> (use wsdl2h option -g to auto-generate type _gml__doubleOrNilReasonTupleList)

  - <gml:File> (use wsdl2h option -g to auto-generate type _gml__File)

  - <gml:coverageFunction> (use wsdl2h option -g to auto-generate type _gml__coverageFunction)

  - <gml:CoverageMappingRule> (use wsdl2h option -g to auto-generate type _gml__CoverageMappingRule)

  - <gml:GridFunction> (use wsdl2h option -g to auto-generate type _gml__GridFunction)

  - <gml:MultiPointCoverage> (use wsdl2h option -g to auto-generate type _gml__MultiPointCoverage)

  - <gml:MultiCurveCoverage> (use wsdl2h option -g to auto-generate type _gml__MultiCurveCoverage)

  - <gml:MultiSurfaceCoverage> (use wsdl2h option -g to auto-generate type _gml__MultiSurfaceCoverage)

  - <gml:MultiSolidCoverage> (use wsdl2h option -g to auto-generate type _gml__MultiSolidCoverage)

  - <gml:GridCoverage> (use wsdl2h option -g to auto-generate type _gml__GridCoverage)

  - <gml:RectifiedGridCoverage> (use wsdl2h option -g to auto-generate type _gml__RectifiedGridCoverage)

  - <gml:AbstractFeature> (use wsdl2h option -g to auto-generate type _gml__AbstractFeature)

  - <gml:boundedBy> (use wsdl2h option -g to auto-generate type _gml__boundedBy)

  - <gml:EnvelopeWithTimePeriod> (use wsdl2h option -g to auto-generate type _gml__EnvelopeWithTimePeriod)

  - <gml:locationName> (use wsdl2h option -g to auto-generate type _gml__locationName)

  - <gml:locationReference> (use wsdl2h option -g to auto-generate type _gml__locationReference)

  - <gml:AbstractTimeObject> (use wsdl2h option -g to auto-generate type _gml__AbstractTimeObject)

  - <gml:AbstractTimePrimitive> (use wsdl2h option -g to auto-generate type _gml__AbstractTimePrimitive)

  - <gml:validTime> (use wsdl2h option -g to auto-generate type _gml__validTime)

  - <gml:AbstractTimeComplex> (use wsdl2h option -g to auto-generate type _gml__AbstractTimeComplex)

  - <gml:AbstractTimeGeometricPrimitive> (use wsdl2h option -g to auto-generate type _gml__AbstractTimeGeometricPrimitive)

  - <gml:TimeInstant> (use wsdl2h option -g to auto-generate type _gml__TimeInstant)

  - <gml:TimePeriod> (use wsdl2h option -g to auto-generate type _gml__TimePeriod)

  - <gml:timePosition> (use wsdl2h option -g to auto-generate type _gml__timePosition)

  - <gml:duration> (use wsdl2h option -g to auto-generate type _gml__duration)

  - <gml:timeInterval> (use wsdl2h option -g to auto-generate type _gml__timeInterval)

  - <gml:Boolean> @ref _gml__Boolean
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__gml__Boolean(struct soap*, _gml__Boolean*);
    // Writer (returns SOAP_OK on success):
    soap_write__gml__Boolean(struct soap*, _gml__Boolean*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__gml__Boolean(struct soap*, const char *URL, _gml__Boolean*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__gml__Boolean(struct soap*, const char *URL, _gml__Boolean*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__gml__Boolean(struct soap*, const char *URL, _gml__Boolean*);
    soap_POST_recv__gml__Boolean(struct soap*, _gml__Boolean*);
    @endcode

  - <gml:BooleanList> (use wsdl2h option -g to auto-generate type _gml__BooleanList)

  - <gml:Category> @ref _gml__Category
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__gml__Category(struct soap*, _gml__Category*);
    // Writer (returns SOAP_OK on success):
    soap_write__gml__Category(struct soap*, _gml__Category*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__gml__Category(struct soap*, const char *URL, _gml__Category*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__gml__Category(struct soap*, const char *URL, _gml__Category*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__gml__Category(struct soap*, const char *URL, _gml__Category*);
    soap_POST_recv__gml__Category(struct soap*, _gml__Category*);
    @endcode

  - <gml:CategoryList> (use wsdl2h option -g to auto-generate type _gml__CategoryList)

  - <gml:Count> @ref _gml__Count
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__gml__Count(struct soap*, _gml__Count*);
    // Writer (returns SOAP_OK on success):
    soap_write__gml__Count(struct soap*, _gml__Count*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__gml__Count(struct soap*, const char *URL, _gml__Count*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__gml__Count(struct soap*, const char *URL, _gml__Count*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__gml__Count(struct soap*, const char *URL, _gml__Count*);
    soap_POST_recv__gml__Count(struct soap*, _gml__Count*);
    @endcode

  - <gml:CountList> (use wsdl2h option -g to auto-generate type _gml__CountList)

  - <gml:Quantity> @ref _gml__Quantity
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__gml__Quantity(struct soap*, _gml__Quantity*);
    // Writer (returns SOAP_OK on success):
    soap_write__gml__Quantity(struct soap*, _gml__Quantity*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__gml__Quantity(struct soap*, const char *URL, _gml__Quantity*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__gml__Quantity(struct soap*, const char *URL, _gml__Quantity*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__gml__Quantity(struct soap*, const char *URL, _gml__Quantity*);
    soap_POST_recv__gml__Quantity(struct soap*, _gml__Quantity*);
    @endcode

  - <gml:QuantityList> (use wsdl2h option -g to auto-generate type _gml__QuantityList)

  - <gml:AbstractValue> (use wsdl2h option -g to auto-generate type _gml__AbstractValue)

  - <gml:AbstractScalarValue> (use wsdl2h option -g to auto-generate type _gml__AbstractScalarValue)

  - <gml:AbstractScalarValueList> (use wsdl2h option -g to auto-generate type _gml__AbstractScalarValueList)

  - <gml:valueProperty> (use wsdl2h option -g to auto-generate type _gml__valueProperty)

  - <gml:valueComponent> (use wsdl2h option -g to auto-generate type _gml__valueComponent)

  - <gml:valueComponents> (use wsdl2h option -g to auto-generate type _gml__valueComponents)

  - <gml:CompositeValue> (use wsdl2h option -g to auto-generate type _gml__CompositeValue)

  - <gml:ValueArray> (use wsdl2h option -g to auto-generate type _gml__ValueArray)

  - <gml:CategoryExtent> (use wsdl2h option -g to auto-generate type _gml__CategoryExtent)

  - <gml:CountExtent> (use wsdl2h option -g to auto-generate type _gml__CountExtent)

  - <gml:QuantityExtent> (use wsdl2h option -g to auto-generate type _gml__QuantityExtent)

  - <gml:Grid> (use wsdl2h option -g to auto-generate type _gml__Grid)

  - <gml:AbstractImplicitGeometry> (use wsdl2h option -g to auto-generate type _gml__AbstractImplicitGeometry)

  - <gml:RectifiedGrid> (use wsdl2h option -g to auto-generate type _gml__RectifiedGrid)

  - <gml:AbstractSingleCRS> (use wsdl2h option -g to auto-generate type _gml__AbstractSingleCRS)

  - <gml:AbstractGeneralDerivedCRS> (use wsdl2h option -g to auto-generate type _gml__AbstractGeneralDerivedCRS)

  - <gml:conversion> (use wsdl2h option -g to auto-generate type _gml__conversion)

  - <gml:CompoundCRS> (use wsdl2h option -g to auto-generate type _gml__CompoundCRS)

  - <gml:componentReferenceSystem> (use wsdl2h option -g to auto-generate type _gml__componentReferenceSystem)

  - <gml:GeodeticCRS> (use wsdl2h option -g to auto-generate type _gml__GeodeticCRS)

  - <gml:ellipsoidalCS> (use wsdl2h option -g to auto-generate type _gml__ellipsoidalCS)

  - <gml:cartesianCS> (use wsdl2h option -g to auto-generate type _gml__cartesianCS)

  - <gml:sphericalCS> (use wsdl2h option -g to auto-generate type _gml__sphericalCS)

  - <gml:geodeticDatum> (use wsdl2h option -g to auto-generate type _gml__geodeticDatum)

  - <gml:VerticalCRS> (use wsdl2h option -g to auto-generate type _gml__VerticalCRS)

  - <gml:verticalCS> (use wsdl2h option -g to auto-generate type _gml__verticalCS)

  - <gml:verticalDatum> (use wsdl2h option -g to auto-generate type _gml__verticalDatum)

  - <gml:ProjectedCRS> (use wsdl2h option -g to auto-generate type _gml__ProjectedCRS)

  - <gml:baseGeodeticCRS> (use wsdl2h option -g to auto-generate type _gml__baseGeodeticCRS)

  - <gml:DerivedCRS> (use wsdl2h option -g to auto-generate type _gml__DerivedCRS)

  - <gml:baseCRS> (use wsdl2h option -g to auto-generate type _gml__baseCRS)

  - <gml:derivedCRSType> (use wsdl2h option -g to auto-generate type _gml__derivedCRSType)

  - <gml:coordinateSystem> (use wsdl2h option -g to auto-generate type _gml__coordinateSystem)

  - <gml:EngineeringCRS> (use wsdl2h option -g to auto-generate type _gml__EngineeringCRS)

  - <gml:cylindricalCS> (use wsdl2h option -g to auto-generate type _gml__cylindricalCS)

  - <gml:linearCS> (use wsdl2h option -g to auto-generate type _gml__linearCS)

  - <gml:polarCS> (use wsdl2h option -g to auto-generate type _gml__polarCS)

  - <gml:userDefinedCS> (use wsdl2h option -g to auto-generate type _gml__userDefinedCS)

  - <gml:engineeringDatum> (use wsdl2h option -g to auto-generate type _gml__engineeringDatum)

  - <gml:ImageCRS> (use wsdl2h option -g to auto-generate type _gml__ImageCRS)

  - <gml:affineCS> (use wsdl2h option -g to auto-generate type _gml__affineCS)

  - <gml:imageDatum> (use wsdl2h option -g to auto-generate type _gml__imageDatum)

  - <gml:TemporalCRS> (use wsdl2h option -g to auto-generate type _gml__TemporalCRS)

  - <gml:timeCS> (use wsdl2h option -g to auto-generate type _gml__timeCS)

  - <gml:temporalDatum> (use wsdl2h option -g to auto-generate type _gml__temporalDatum)

  - <gml:CoordinateSystemAxis> (use wsdl2h option -g to auto-generate type _gml__CoordinateSystemAxis)

  - <gml:axisAbbrev> (use wsdl2h option -g to auto-generate type _gml__axisAbbrev)

  - <gml:axisDirection> (use wsdl2h option -g to auto-generate type _gml__axisDirection)

  - <gml:minimumValue> (use wsdl2h option -g to auto-generate type _gml__minimumValue)

  - <gml:maximumValue> (use wsdl2h option -g to auto-generate type _gml__maximumValue)

  - <gml:rangeMeaning> (use wsdl2h option -g to auto-generate type _gml__rangeMeaning)

  - <gml:AbstractCoordinateSystem> (use wsdl2h option -g to auto-generate type _gml__AbstractCoordinateSystem)

  - <gml:axis> (use wsdl2h option -g to auto-generate type _gml__axis)

  - <gml:EllipsoidalCS> (use wsdl2h option -g to auto-generate type _gml__EllipsoidalCS)

  - <gml:CartesianCS> (use wsdl2h option -g to auto-generate type _gml__CartesianCS)

  - <gml:VerticalCS> (use wsdl2h option -g to auto-generate type _gml__VerticalCS)

  - <gml:TimeCS> (use wsdl2h option -g to auto-generate type _gml__TimeCS)

  - <gml:LinearCS> (use wsdl2h option -g to auto-generate type _gml__LinearCS)

  - <gml:UserDefinedCS> (use wsdl2h option -g to auto-generate type _gml__UserDefinedCS)

  - <gml:SphericalCS> (use wsdl2h option -g to auto-generate type _gml__SphericalCS)

  - <gml:PolarCS> (use wsdl2h option -g to auto-generate type _gml__PolarCS)

  - <gml:CylindricalCS> (use wsdl2h option -g to auto-generate type _gml__CylindricalCS)

  - <gml:AffineCS> (use wsdl2h option -g to auto-generate type _gml__AffineCS)

  - <gml:AbstractCRS> (use wsdl2h option -g to auto-generate type _gml__AbstractCRS)

  - <gml:domainOfValidity> @ref _gml__domainOfValidity
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__gml__domainOfValidity(struct soap*, _gml__domainOfValidity*);
    // Writer (returns SOAP_OK on success):
    soap_write__gml__domainOfValidity(struct soap*, _gml__domainOfValidity*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__gml__domainOfValidity(struct soap*, const char *URL, _gml__domainOfValidity*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__gml__domainOfValidity(struct soap*, const char *URL, _gml__domainOfValidity*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__gml__domainOfValidity(struct soap*, const char *URL, _gml__domainOfValidity*);
    soap_POST_recv__gml__domainOfValidity(struct soap*, _gml__domainOfValidity*);
    @endcode

  - <gml:scope> (use wsdl2h option -g to auto-generate type _gml__scope)

  - <gml:AbstractDatum> (use wsdl2h option -g to auto-generate type _gml__AbstractDatum)

  - <gml:anchorDefinition> (use wsdl2h option -g to auto-generate type _gml__anchorDefinition)

  - <gml:realizationEpoch> (use wsdl2h option -g to auto-generate type _gml__realizationEpoch)

  - <gml:GeodeticDatum> (use wsdl2h option -g to auto-generate type _gml__GeodeticDatum)

  - <gml:primeMeridian> (use wsdl2h option -g to auto-generate type _gml__primeMeridian)

  - <gml:ellipsoid> (use wsdl2h option -g to auto-generate type _gml__ellipsoid)

  - <gml:Ellipsoid> (use wsdl2h option -g to auto-generate type _gml__Ellipsoid)

  - <gml:semiMajorAxis> (use wsdl2h option -g to auto-generate type _gml__semiMajorAxis)

  - <gml:secondDefiningParameter> @ref _gml__secondDefiningParameter
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__gml__secondDefiningParameter(struct soap*, _gml__secondDefiningParameter*);
    // Writer (returns SOAP_OK on success):
    soap_write__gml__secondDefiningParameter(struct soap*, _gml__secondDefiningParameter*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__gml__secondDefiningParameter(struct soap*, const char *URL, _gml__secondDefiningParameter*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__gml__secondDefiningParameter(struct soap*, const char *URL, _gml__secondDefiningParameter*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__gml__secondDefiningParameter(struct soap*, const char *URL, _gml__secondDefiningParameter*);
    soap_POST_recv__gml__secondDefiningParameter(struct soap*, _gml__secondDefiningParameter*);
    @endcode

  - <gml:SecondDefiningParameter> @ref _gml__SecondDefiningParameter
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__gml__SecondDefiningParameter(struct soap*, _gml__SecondDefiningParameter*);
    // Writer (returns SOAP_OK on success):
    soap_write__gml__SecondDefiningParameter(struct soap*, _gml__SecondDefiningParameter*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__gml__SecondDefiningParameter(struct soap*, const char *URL, _gml__SecondDefiningParameter*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__gml__SecondDefiningParameter(struct soap*, const char *URL, _gml__SecondDefiningParameter*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__gml__SecondDefiningParameter(struct soap*, const char *URL, _gml__SecondDefiningParameter*);
    soap_POST_recv__gml__SecondDefiningParameter(struct soap*, _gml__SecondDefiningParameter*);
    @endcode

  - <gml:PrimeMeridian> (use wsdl2h option -g to auto-generate type _gml__PrimeMeridian)

  - <gml:greenwichLongitude> (use wsdl2h option -g to auto-generate type _gml__greenwichLongitude)

  - <gml:EngineeringDatum> (use wsdl2h option -g to auto-generate type _gml__EngineeringDatum)

  - <gml:ImageDatum> (use wsdl2h option -g to auto-generate type _gml__ImageDatum)

  - <gml:pixelInCell> (use wsdl2h option -g to auto-generate type _gml__pixelInCell)

  - <gml:VerticalDatum> (use wsdl2h option -g to auto-generate type _gml__VerticalDatum)

  - <gml:TemporalDatum> (use wsdl2h option -g to auto-generate type _gml__TemporalDatum)

  - <gml:origin> (use wsdl2h option -g to auto-generate type _gml__origin)

  - <gml:AbstractCoordinateOperation> (use wsdl2h option -g to auto-generate type _gml__AbstractCoordinateOperation)

  - <gml:operationVersion> (use wsdl2h option -g to auto-generate type _gml__operationVersion)

  - <gml:coordinateOperationAccuracy> @ref _gml__coordinateOperationAccuracy
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__gml__coordinateOperationAccuracy(struct soap*, _gml__coordinateOperationAccuracy*);
    // Writer (returns SOAP_OK on success):
    soap_write__gml__coordinateOperationAccuracy(struct soap*, _gml__coordinateOperationAccuracy*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__gml__coordinateOperationAccuracy(struct soap*, const char *URL, _gml__coordinateOperationAccuracy*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__gml__coordinateOperationAccuracy(struct soap*, const char *URL, _gml__coordinateOperationAccuracy*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__gml__coordinateOperationAccuracy(struct soap*, const char *URL, _gml__coordinateOperationAccuracy*);
    soap_POST_recv__gml__coordinateOperationAccuracy(struct soap*, _gml__coordinateOperationAccuracy*);
    @endcode

  - <gml:sourceCRS> (use wsdl2h option -g to auto-generate type _gml__sourceCRS)

  - <gml:targetCRS> (use wsdl2h option -g to auto-generate type _gml__targetCRS)

  - <gml:AbstractSingleOperation> (use wsdl2h option -g to auto-generate type _gml__AbstractSingleOperation)

  - <gml:AbstractGeneralConversion> (use wsdl2h option -g to auto-generate type _gml__AbstractGeneralConversion)

  - <gml:AbstractGeneralTransformation> (use wsdl2h option -g to auto-generate type _gml__AbstractGeneralTransformation)

  - <gml:ConcatenatedOperation> (use wsdl2h option -g to auto-generate type _gml__ConcatenatedOperation)

  - <gml:coordOperation> (use wsdl2h option -g to auto-generate type _gml__coordOperation)

  - <gml:PassThroughOperation> (use wsdl2h option -g to auto-generate type _gml__PassThroughOperation)

  - <gml:modifiedCoordinate> (use wsdl2h option -g to auto-generate type _gml__modifiedCoordinate)

  - <gml:Conversion> (use wsdl2h option -g to auto-generate type _gml__Conversion)

  - <gml:method> (use wsdl2h option -g to auto-generate type _gml__method)

  - <gml:parameterValue> (use wsdl2h option -g to auto-generate type _gml__parameterValue)

  - <gml:Transformation> (use wsdl2h option -g to auto-generate type _gml__Transformation)

  - <gml:AbstractGeneralParameterValue> (use wsdl2h option -g to auto-generate type _gml__AbstractGeneralParameterValue)

  - <gml:ParameterValue> (use wsdl2h option -g to auto-generate type _gml__ParameterValue)

  - <gml:value> (use wsdl2h option -g to auto-generate type _gml__value)

  - <gml:stringValue> (use wsdl2h option -g to auto-generate type _gml__stringValue)

  - <gml:integerValue> (use wsdl2h option -g to auto-generate type _gml__integerValue)

  - <gml:booleanValue> (use wsdl2h option -g to auto-generate type _gml__booleanValue)

  - <gml:valueList> (use wsdl2h option -g to auto-generate type _gml__valueList)

  - <gml:integerValueList> (use wsdl2h option -g to auto-generate type _gml__integerValueList)

  - <gml:valueFile> (use wsdl2h option -g to auto-generate type _gml__valueFile)

  - <gml:operationParameter> (use wsdl2h option -g to auto-generate type _gml__operationParameter)

  - <gml:ParameterValueGroup> (use wsdl2h option -g to auto-generate type _gml__ParameterValueGroup)

  - <gml:group> (use wsdl2h option -g to auto-generate type _gml__group)

  - <gml:OperationMethod> (use wsdl2h option -g to auto-generate type _gml__OperationMethod)

  - <gml:formulaCitation> @ref _gml__formulaCitation
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__gml__formulaCitation(struct soap*, _gml__formulaCitation*);
    // Writer (returns SOAP_OK on success):
    soap_write__gml__formulaCitation(struct soap*, _gml__formulaCitation*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__gml__formulaCitation(struct soap*, const char *URL, _gml__formulaCitation*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__gml__formulaCitation(struct soap*, const char *URL, _gml__formulaCitation*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__gml__formulaCitation(struct soap*, const char *URL, _gml__formulaCitation*);
    soap_POST_recv__gml__formulaCitation(struct soap*, _gml__formulaCitation*);
    @endcode

  - <gml:formula> (use wsdl2h option -g to auto-generate type _gml__formula)

  - <gml:sourceDimensions> (use wsdl2h option -g to auto-generate type _gml__sourceDimensions)

  - <gml:targetDimensions> (use wsdl2h option -g to auto-generate type _gml__targetDimensions)

  - <gml:parameter> (use wsdl2h option -g to auto-generate type _gml__parameter)

  - <gml:AbstractGeneralOperationParameter> (use wsdl2h option -g to auto-generate type _gml__AbstractGeneralOperationParameter)

  - <gml:minimumOccurs> (use wsdl2h option -g to auto-generate type _gml__minimumOccurs)

  - <gml:OperationParameter> (use wsdl2h option -g to auto-generate type _gml__OperationParameter)

  - <gml:OperationParameterGroup> (use wsdl2h option -g to auto-generate type _gml__OperationParameterGroup)

  - <gml:maximumOccurs> (use wsdl2h option -g to auto-generate type _gml__maximumOccurs)

  - <gml:Observation> (use wsdl2h option -g to auto-generate type _gml__Observation)

  - <gml:using> (use wsdl2h option -g to auto-generate type _gml__using)

  - <gml:target> (use wsdl2h option -g to auto-generate type _gml__target)

  - <gml:subject> (use wsdl2h option -g to auto-generate type _gml__subject)

  - <gml:resultOf> (use wsdl2h option -g to auto-generate type _gml__resultOf)

  - <gml:DirectedObservation> (use wsdl2h option -g to auto-generate type _gml__DirectedObservation)

  - <gml:DirectedObservationAtDistance> (use wsdl2h option -g to auto-generate type _gml__DirectedObservationAtDistance)

  - <gml:direction> (use wsdl2h option -g to auto-generate type _gml__direction)

  - <gml:TimeReferenceSystem> (use wsdl2h option -g to auto-generate type _gml__TimeReferenceSystem)

  - <gml:TimeCoordinateSystem> (use wsdl2h option -g to auto-generate type _gml__TimeCoordinateSystem)

  - <gml:TimeCalendar> (use wsdl2h option -g to auto-generate type _gml__TimeCalendar)

  - <gml:TimeCalendarEra> (use wsdl2h option -g to auto-generate type _gml__TimeCalendarEra)

  - <gml:TimeClock> (use wsdl2h option -g to auto-generate type _gml__TimeClock)

  - <gml:TimeOrdinalReferenceSystem> (use wsdl2h option -g to auto-generate type _gml__TimeOrdinalReferenceSystem)

  - <gml:TimeOrdinalEra> (use wsdl2h option -g to auto-generate type _gml__TimeOrdinalEra)

  - <gml:AbstractTimeTopologyPrimitive> (use wsdl2h option -g to auto-generate type _gml__AbstractTimeTopologyPrimitive)

  - <gml:TimeTopologyComplex> (use wsdl2h option -g to auto-generate type _gml__TimeTopologyComplex)

  - <gml:TimeNode> (use wsdl2h option -g to auto-generate type _gml__TimeNode)

  - <gml:TimeEdge> (use wsdl2h option -g to auto-generate type _gml__TimeEdge)

  - <gml:Null> (use wsdl2h option -g to auto-generate type _gml__Null)

  - <gml:anchorPoint> (use wsdl2h option -g to auto-generate type _gml__anchorPoint)

  - <gml:datumRef> (use wsdl2h option -g to auto-generate type _gml__datumRef)

  - <gml:usesPrimeMeridian> (use wsdl2h option -g to auto-generate type _gml__usesPrimeMeridian)

  - <gml:usesEllipsoid> (use wsdl2h option -g to auto-generate type _gml__usesEllipsoid)

  - <gml:geodeticDatumRef> (use wsdl2h option -g to auto-generate type _gml__geodeticDatumRef)

  - <gml:ellipsoidRef> (use wsdl2h option -g to auto-generate type _gml__ellipsoidRef)

  - <gml:primeMeridianRef> (use wsdl2h option -g to auto-generate type _gml__primeMeridianRef)

  - <gml:engineeringDatumRef> (use wsdl2h option -g to auto-generate type _gml__engineeringDatumRef)

  - <gml:imageDatumRef> (use wsdl2h option -g to auto-generate type _gml__imageDatumRef)

  - <gml:verticalDatumRef> (use wsdl2h option -g to auto-generate type _gml__verticalDatumRef)

  - <gml:temporalDatumRef> (use wsdl2h option -g to auto-generate type _gml__temporalDatumRef)

  - <gml:coordinateOperationRef> (use wsdl2h option -g to auto-generate type _gml__coordinateOperationRef)

  - <gml:singleOperationRef> (use wsdl2h option -g to auto-generate type _gml__singleOperationRef)

  - <gml:AbstractOperation> (use wsdl2h option -g to auto-generate type _gml__AbstractOperation)

  - <gml:operationRef> (use wsdl2h option -g to auto-generate type _gml__operationRef)

  - <gml:generalConversionRef> (use wsdl2h option -g to auto-generate type _gml__generalConversionRef)

  - <gml:generalTransformationRef> (use wsdl2h option -g to auto-generate type _gml__generalTransformationRef)

  - <gml:usesSingleOperation> (use wsdl2h option -g to auto-generate type _gml__usesSingleOperation)

  - <gml:concatenatedOperationRef> (use wsdl2h option -g to auto-generate type _gml__concatenatedOperationRef)

  - <gml:usesOperation> (use wsdl2h option -g to auto-generate type _gml__usesOperation)

  - <gml:passThroughOperationRef> (use wsdl2h option -g to auto-generate type _gml__passThroughOperationRef)

  - <gml:usesMethod> (use wsdl2h option -g to auto-generate type _gml__usesMethod)

  - <gml:usesValue> (use wsdl2h option -g to auto-generate type _gml__usesValue)

  - <gml:conversionRef> (use wsdl2h option -g to auto-generate type _gml__conversionRef)

  - <gml:transformationRef> (use wsdl2h option -g to auto-generate type _gml__transformationRef)

  - <gml:dmsAngleValue> (use wsdl2h option -g to auto-generate type _gml__dmsAngleValue)

  - <gml:valueOfParameter> (use wsdl2h option -g to auto-generate type _gml__valueOfParameter)

  - <gml:includesValue> (use wsdl2h option -g to auto-generate type _gml__includesValue)

  - <gml:valuesOfGroup> (use wsdl2h option -g to auto-generate type _gml__valuesOfGroup)

  - <gml:methodFormula> (use wsdl2h option -g to auto-generate type _gml__methodFormula)

  - <gml:usesParameter> (use wsdl2h option -g to auto-generate type _gml__usesParameter)

  - <gml:operationMethodRef> (use wsdl2h option -g to auto-generate type _gml__operationMethodRef)

  - <gml:abstractGeneralOperationParameterRef> (use wsdl2h option -g to auto-generate type _gml__abstractGeneralOperationParameterRef)

  - <gml:operationParameterRef> (use wsdl2h option -g to auto-generate type _gml__operationParameterRef)

  - <gml:includesParameter> (use wsdl2h option -g to auto-generate type _gml__includesParameter)

  - <gml:operationParameterGroupRef> (use wsdl2h option -g to auto-generate type _gml__operationParameterGroupRef)

  - <gml:referenceSystemRef> (use wsdl2h option -g to auto-generate type _gml__referenceSystemRef)

  - <gml:crsRef> (use wsdl2h option -g to auto-generate type _gml__crsRef)

  - <gml:coordinateSystemAxisRef> (use wsdl2h option -g to auto-generate type _gml__coordinateSystemAxisRef)

  - <gml:usesAxis> (use wsdl2h option -g to auto-generate type _gml__usesAxis)

  - <gml:coordinateSystemRef> (use wsdl2h option -g to auto-generate type _gml__coordinateSystemRef)

  - <gml:ellipsoidalCSRef> (use wsdl2h option -g to auto-generate type _gml__ellipsoidalCSRef)

  - <gml:cartesianCSRef> (use wsdl2h option -g to auto-generate type _gml__cartesianCSRef)

  - <gml:verticalCSRef> (use wsdl2h option -g to auto-generate type _gml__verticalCSRef)

  - <gml:TemporalCS> (use wsdl2h option -g to auto-generate type _gml__TemporalCS)

  - <gml:temporalCSRef> (use wsdl2h option -g to auto-generate type _gml__temporalCSRef)

  - <gml:linearCSRef> (use wsdl2h option -g to auto-generate type _gml__linearCSRef)

  - <gml:userDefinedCSRef> (use wsdl2h option -g to auto-generate type _gml__userDefinedCSRef)

  - <gml:sphericalCSRef> (use wsdl2h option -g to auto-generate type _gml__sphericalCSRef)

  - <gml:polarCSRef> (use wsdl2h option -g to auto-generate type _gml__polarCSRef)

  - <gml:cylindricalCSRef> (use wsdl2h option -g to auto-generate type _gml__cylindricalCSRef)

  - <gml:ObliqueCartesianCS> (use wsdl2h option -g to auto-generate type _gml__ObliqueCartesianCS)

  - <gml:obliqueCartesianCSRef> (use wsdl2h option -g to auto-generate type _gml__obliqueCartesianCSRef)

  - <gml:singleCRSRef> (use wsdl2h option -g to auto-generate type _gml__singleCRSRef)

  - <gml:definedByConversion> (use wsdl2h option -g to auto-generate type _gml__definedByConversion)

  - <gml:includesSingleCRS> (use wsdl2h option -g to auto-generate type _gml__includesSingleCRS)

  - <gml:compoundCRSRef> (use wsdl2h option -g to auto-generate type _gml__compoundCRSRef)

  - <gml:usesEllipsoidalCS> (use wsdl2h option -g to auto-generate type _gml__usesEllipsoidalCS)

  - <gml:usesCartesianCS> (use wsdl2h option -g to auto-generate type _gml__usesCartesianCS)

  - <gml:usesSphericalCS> (use wsdl2h option -g to auto-generate type _gml__usesSphericalCS)

  - <gml:usesGeodeticDatum> (use wsdl2h option -g to auto-generate type _gml__usesGeodeticDatum)

  - <gml:usesVerticalCS> (use wsdl2h option -g to auto-generate type _gml__usesVerticalCS)

  - <gml:usesVerticalDatum> (use wsdl2h option -g to auto-generate type _gml__usesVerticalDatum)

  - <gml:verticalCRSRef> (use wsdl2h option -g to auto-generate type _gml__verticalCRSRef)

  - <gml:baseGeographicCRS> (use wsdl2h option -g to auto-generate type _gml__baseGeographicCRS)

  - <gml:projectedCRSRef> (use wsdl2h option -g to auto-generate type _gml__projectedCRSRef)

  - <gml:usesCS> (use wsdl2h option -g to auto-generate type _gml__usesCS)

  - <gml:derivedCRSRef> (use wsdl2h option -g to auto-generate type _gml__derivedCRSRef)

  - <gml:usesEngineeringDatum> (use wsdl2h option -g to auto-generate type _gml__usesEngineeringDatum)

  - <gml:engineeringCRSRef> (use wsdl2h option -g to auto-generate type _gml__engineeringCRSRef)

  - <gml:usesAffineCS> (use wsdl2h option -g to auto-generate type _gml__usesAffineCS)

  - <gml:usesImageDatum> (use wsdl2h option -g to auto-generate type _gml__usesImageDatum)

  - <gml:usesObliqueCartesianCS> (use wsdl2h option -g to auto-generate type _gml__usesObliqueCartesianCS)

  - <gml:imageCRSRef> (use wsdl2h option -g to auto-generate type _gml__imageCRSRef)

  - <gml:usesTimeCS> (use wsdl2h option -g to auto-generate type _gml__usesTimeCS)

  - <gml:usesTemporalCS> (use wsdl2h option -g to auto-generate type _gml__usesTemporalCS)

  - <gml:usesTemporalDatum> (use wsdl2h option -g to auto-generate type _gml__usesTemporalDatum)

  - <gml:temporalCRSRef> (use wsdl2h option -g to auto-generate type _gml__temporalCRSRef)

  - <gml:GeographicCRS> (use wsdl2h option -g to auto-generate type _gml__GeographicCRS)

  - <gml:geographicCRSRef> (use wsdl2h option -g to auto-generate type _gml__geographicCRSRef)

  - <gml:GeocentricCRS> (use wsdl2h option -g to auto-generate type _gml__GeocentricCRS)

  - <gml:geocentricCRSRef> (use wsdl2h option -g to auto-generate type _gml__geocentricCRSRef)

  - <gml:dmsAngle> (use wsdl2h option -g to auto-generate type _gml__dmsAngle)

  - <gml:degrees> (use wsdl2h option -g to auto-generate type _gml__degrees)

  - <gml:decimalMinutes> (use wsdl2h option -g to auto-generate type _gml__decimalMinutes)

  - <gml:minutes> (use wsdl2h option -g to auto-generate type _gml__minutes)

  - <gml:seconds> (use wsdl2h option -g to auto-generate type _gml__seconds)

  - <gml:member> (use wsdl2h option -g to auto-generate type _gml__member)

  - <gml:members> (use wsdl2h option -g to auto-generate type _gml__members)

  - <gml:metaDataProperty> (use wsdl2h option -g to auto-generate type _gml__metaDataProperty)

  - <gml:Bag> (use wsdl2h option -g to auto-generate type _gml__Bag)

  - <gml:Array> (use wsdl2h option -g to auto-generate type _gml__Array)

  - <gml:AbstractMetaData> (use wsdl2h option -g to auto-generate type _gml__AbstractMetaData)

  - <gml:GenericMetaData> (use wsdl2h option -g to auto-generate type _gml__GenericMetaData)

  - <gml:coordinates> (use wsdl2h option -g to auto-generate type _gml__coordinates)

  - <gml:pointRep> (use wsdl2h option -g to auto-generate type _gml__pointRep)

  - <gml:location> (use wsdl2h option -g to auto-generate type _gml__location)

  - <gml:LocationString> (use wsdl2h option -g to auto-generate type _gml__LocationString)

  - <gml:LocationKeyWord> (use wsdl2h option -g to auto-generate type _gml__LocationKeyWord)

  - <gml:priorityLocation> (use wsdl2h option -g to auto-generate type _gml__priorityLocation)

  - <gml:featureMember> (use wsdl2h option -g to auto-generate type _gml__featureMember)

  - <gml:featureProperty> (use wsdl2h option -g to auto-generate type _gml__featureProperty)

  - <gml:featureMembers> (use wsdl2h option -g to auto-generate type _gml__featureMembers)

  - <gml:AbstractFeatureCollection> (use wsdl2h option -g to auto-generate type _gml__AbstractFeatureCollection)

  - <gml:FeatureCollection> (use wsdl2h option -g to auto-generate type _gml__FeatureCollection)

  - <gml:track> (use wsdl2h option -g to auto-generate type _gml__track)

  - <gml:DefinitionCollection> (use wsdl2h option -g to auto-generate type _gml__DefinitionCollection)

  - <gml:definitionMember> (use wsdl2h option -g to auto-generate type _gml__definitionMember)

  - <gml:indirectEntry> (use wsdl2h option -g to auto-generate type _gml__indirectEntry)

  - <gml:DefinitionProxy> (use wsdl2h option -g to auto-generate type _gml__DefinitionProxy)

  - <gml:definitionRef> (use wsdl2h option -g to auto-generate type _gml__definitionRef)

  - <gml:MappingRule> (use wsdl2h option -g to auto-generate type _gml__MappingRule)

  - <gml:centerOf> (use wsdl2h option -g to auto-generate type _gml__centerOf)

  - <gml:position> (use wsdl2h option -g to auto-generate type _gml__position)

  - <gml:extentOf> (use wsdl2h option -g to auto-generate type _gml__extentOf)

  - <gml:edgeOf> (use wsdl2h option -g to auto-generate type _gml__edgeOf)

  - <gml:centerLineOf> (use wsdl2h option -g to auto-generate type _gml__centerLineOf)

  - <gml:multiLocation> (use wsdl2h option -g to auto-generate type _gml__multiLocation)

  - <gml:multiCenterOf> (use wsdl2h option -g to auto-generate type _gml__multiCenterOf)

  - <gml:multiPosition> (use wsdl2h option -g to auto-generate type _gml__multiPosition)

  - <gml:multiCenterLineOf> (use wsdl2h option -g to auto-generate type _gml__multiCenterLineOf)

  - <gml:multiEdgeOf> (use wsdl2h option -g to auto-generate type _gml__multiEdgeOf)

  - <gml:multiCoverage> (use wsdl2h option -g to auto-generate type _gml__multiCoverage)

  - <gml:multiExtentOf> (use wsdl2h option -g to auto-generate type _gml__multiExtentOf)

  - <gml:polygonPatches> (use wsdl2h option -g to auto-generate type _gml__polygonPatches)

  - <gml:trianglePatches> (use wsdl2h option -g to auto-generate type _gml__trianglePatches)

  - <gml:multiPointDomain> (use wsdl2h option -g to auto-generate type _gml__multiPointDomain)

  - <gml:multiCurveDomain> (use wsdl2h option -g to auto-generate type _gml__multiCurveDomain)

  - <gml:multiSurfaceDomain> (use wsdl2h option -g to auto-generate type _gml__multiSurfaceDomain)

  - <gml:multiSolidDomain> (use wsdl2h option -g to auto-generate type _gml__multiSolidDomain)

  - <gml:gridDomain> (use wsdl2h option -g to auto-generate type _gml__gridDomain)

  - <gml:rectifiedGridDomain> (use wsdl2h option -g to auto-generate type _gml__rectifiedGridDomain)

  - <gml:generalOperationParameter> (use wsdl2h option -g to auto-generate type _gml__generalOperationParameter)

  - <gml:MovingObjectStatus> (use wsdl2h option -g to auto-generate type _gml__MovingObjectStatus)

  - <gml:status> (use wsdl2h option -g to auto-generate type _gml__status)

  - <gml:statusReference> (use wsdl2h option -g to auto-generate type _gml__statusReference)

  - <gml:topoComplexProperty> (use wsdl2h option -g to auto-generate type _gml__topoComplexProperty)

  - <gml:multiPointProperty> (use wsdl2h option -g to auto-generate type _gml__multiPointProperty)

  - <gml:multiCurveProperty> (use wsdl2h option -g to auto-generate type _gml__multiCurveProperty)

  - <gml:multiSurfaceProperty> (use wsdl2h option -g to auto-generate type _gml__multiSurfaceProperty)

  - <gml:multiSolidProperty> (use wsdl2h option -g to auto-generate type _gml__multiSolidProperty)

  - <gml:multiGeometryProperty> (use wsdl2h option -g to auto-generate type _gml__multiGeometryProperty)

  - <gml:pointArrayProperty> (use wsdl2h option -g to auto-generate type _gml__pointArrayProperty)

  - <gml:curveArrayProperty> (use wsdl2h option -g to auto-generate type _gml__curveArrayProperty)

  - <gml:surfaceArrayProperty> (use wsdl2h option -g to auto-generate type _gml__surfaceArrayProperty)

  - <gml:solidArrayProperty> (use wsdl2h option -g to auto-generate type _gml__solidArrayProperty)

@section gmd Top-level root elements of schema "http://www.isotc211.org/2005/gmd"

  - <gmd:AbstractDS_Aggregate> (use wsdl2h option -g to auto-generate type _gmd__AbstractDS_x005fAggregate)

  - <gmd:DS_DataSet> (use wsdl2h option -g to auto-generate type _gmd__DS_x005fDataSet)

  - <gmd:DS_OtherAggregate> (use wsdl2h option -g to auto-generate type _gmd__DS_x005fOtherAggregate)

  - <gmd:DS_Series> (use wsdl2h option -g to auto-generate type _gmd__DS_x005fSeries)

  - <gmd:DS_Initiative> (use wsdl2h option -g to auto-generate type _gmd__DS_x005fInitiative)

  - <gmd:DS_Platform> (use wsdl2h option -g to auto-generate type _gmd__DS_x005fPlatform)

  - <gmd:DS_Sensor> (use wsdl2h option -g to auto-generate type _gmd__DS_x005fSensor)

  - <gmd:DS_ProductionSeries> (use wsdl2h option -g to auto-generate type _gmd__DS_x005fProductionSeries)

  - <gmd:DS_StereoMate> (use wsdl2h option -g to auto-generate type _gmd__DS_x005fStereoMate)

  - <gmd:MD_Metadata> (use wsdl2h option -g to auto-generate type _gmd__MD_x005fMetadata)

  - <gmd:MD_GridSpatialRepresentation> (use wsdl2h option -g to auto-generate type _gmd__MD_x005fGridSpatialRepresentation)

  - <gmd:MD_VectorSpatialRepresentation> (use wsdl2h option -g to auto-generate type _gmd__MD_x005fVectorSpatialRepresentation)

  - <gmd:AbstractMD_SpatialRepresentation> (use wsdl2h option -g to auto-generate type _gmd__AbstractMD_x005fSpatialRepresentation)

  - <gmd:MD_Georeferenceable> (use wsdl2h option -g to auto-generate type _gmd__MD_x005fGeoreferenceable)

  - <gmd:MD_Dimension> (use wsdl2h option -g to auto-generate type _gmd__MD_x005fDimension)

  - <gmd:MD_Georectified> (use wsdl2h option -g to auto-generate type _gmd__MD_x005fGeorectified)

  - <gmd:MD_GeometricObjects> (use wsdl2h option -g to auto-generate type _gmd__MD_x005fGeometricObjects)

  - <gmd:MD_PixelOrientationCode> (use wsdl2h option -g to auto-generate type _gmd__MD_x005fPixelOrientationCode)

  - <gmd:MD_TopologyLevelCode> (use wsdl2h option -g to auto-generate type _gmd__MD_x005fTopologyLevelCode)

  - <gmd:MD_GeometricObjectTypeCode> (use wsdl2h option -g to auto-generate type _gmd__MD_x005fGeometricObjectTypeCode)

  - <gmd:MD_CellGeometryCode> (use wsdl2h option -g to auto-generate type _gmd__MD_x005fCellGeometryCode)

  - <gmd:MD_DimensionNameTypeCode> (use wsdl2h option -g to auto-generate type _gmd__MD_x005fDimensionNameTypeCode)

  - <gmd:CI_ResponsibleParty> (use wsdl2h option -g to auto-generate type _gmd__CI_x005fResponsibleParty)

  - <gmd:CI_Citation> (use wsdl2h option -g to auto-generate type _gmd__CI_x005fCitation)

  - <gmd:CI_Address> (use wsdl2h option -g to auto-generate type _gmd__CI_x005fAddress)

  - <gmd:CI_OnlineResource> (use wsdl2h option -g to auto-generate type _gmd__CI_x005fOnlineResource)

  - <gmd:CI_Contact> (use wsdl2h option -g to auto-generate type _gmd__CI_x005fContact)

  - <gmd:CI_Telephone> (use wsdl2h option -g to auto-generate type _gmd__CI_x005fTelephone)

  - <gmd:CI_Date> (use wsdl2h option -g to auto-generate type _gmd__CI_x005fDate)

  - <gmd:CI_Series> (use wsdl2h option -g to auto-generate type _gmd__CI_x005fSeries)

  - <gmd:URL> (use wsdl2h option -g to auto-generate type _gmd__URL)

  - <gmd:CI_RoleCode> (use wsdl2h option -g to auto-generate type _gmd__CI_x005fRoleCode)

  - <gmd:CI_PresentationFormCode> (use wsdl2h option -g to auto-generate type _gmd__CI_x005fPresentationFormCode)

  - <gmd:CI_OnLineFunctionCode> (use wsdl2h option -g to auto-generate type _gmd__CI_x005fOnLineFunctionCode)

  - <gmd:CI_DateTypeCode> (use wsdl2h option -g to auto-generate type _gmd__CI_x005fDateTypeCode)

  - <gmd:RS_Identifier> (use wsdl2h option -g to auto-generate type _gmd__RS_x005fIdentifier)

  - <gmd:MD_ReferenceSystem> (use wsdl2h option -g to auto-generate type _gmd__MD_x005fReferenceSystem)

  - <gmd:MD_Identifier> (use wsdl2h option -g to auto-generate type _gmd__MD_x005fIdentifier)

  - <gmd:AbstractRS_ReferenceSystem> (use wsdl2h option -g to auto-generate type _gmd__AbstractRS_x005fReferenceSystem)

  - <gmd:EX_TemporalExtent> (use wsdl2h option -g to auto-generate type _gmd__EX_x005fTemporalExtent)

  - <gmd:EX_VerticalExtent> (use wsdl2h option -g to auto-generate type _gmd__EX_x005fVerticalExtent)

  - <gmd:EX_BoundingPolygon> (use wsdl2h option -g to auto-generate type _gmd__EX_x005fBoundingPolygon)

  - <gmd:EX_Extent> (use wsdl2h option -g to auto-generate type _gmd__EX_x005fExtent)

  - <gmd:AbstractEX_GeographicExtent> (use wsdl2h option -g to auto-generate type _gmd__AbstractEX_x005fGeographicExtent)

  - <gmd:EX_GeographicBoundingBox> (use wsdl2h option -g to auto-generate type _gmd__EX_x005fGeographicBoundingBox)

  - <gmd:EX_SpatialTemporalExtent> (use wsdl2h option -g to auto-generate type _gmd__EX_x005fSpatialTemporalExtent)

  - <gmd:EX_GeographicDescription> (use wsdl2h option -g to auto-generate type _gmd__EX_x005fGeographicDescription)

  - <gmd:MD_ExtendedElementInformation> (use wsdl2h option -g to auto-generate type _gmd__MD_x005fExtendedElementInformation)

  - <gmd:MD_MetadataExtensionInformation> (use wsdl2h option -g to auto-generate type _gmd__MD_x005fMetadataExtensionInformation)

  - <gmd:MD_ObligationCode> (use wsdl2h option -g to auto-generate type _gmd__MD_x005fObligationCode)

  - <gmd:MD_DatatypeCode> (use wsdl2h option -g to auto-generate type _gmd__MD_x005fDatatypeCode)

  - <gmd:MD_FeatureCatalogueDescription> (use wsdl2h option -g to auto-generate type _gmd__MD_x005fFeatureCatalogueDescription)

  - <gmd:MD_CoverageDescription> (use wsdl2h option -g to auto-generate type _gmd__MD_x005fCoverageDescription)

  - <gmd:MD_ImageDescription> (use wsdl2h option -g to auto-generate type _gmd__MD_x005fImageDescription)

  - <gmd:AbstractMD_ContentInformation> (use wsdl2h option -g to auto-generate type _gmd__AbstractMD_x005fContentInformation)

  - <gmd:MD_RangeDimension> (use wsdl2h option -g to auto-generate type _gmd__MD_x005fRangeDimension)

  - <gmd:MD_Band> (use wsdl2h option -g to auto-generate type _gmd__MD_x005fBand)

  - <gmd:MD_CoverageContentTypeCode> (use wsdl2h option -g to auto-generate type _gmd__MD_x005fCoverageContentTypeCode)

  - <gmd:MD_ImagingConditionCode> (use wsdl2h option -g to auto-generate type _gmd__MD_x005fImagingConditionCode)

  - <gmd:MD_ApplicationSchemaInformation> (use wsdl2h option -g to auto-generate type _gmd__MD_x005fApplicationSchemaInformation)

  - <gmd:MD_PortrayalCatalogueReference> (use wsdl2h option -g to auto-generate type _gmd__MD_x005fPortrayalCatalogueReference)

  - <gmd:LI_ProcessStep> (use wsdl2h option -g to auto-generate type _gmd__LI_x005fProcessStep)

  - <gmd:LI_Source> (use wsdl2h option -g to auto-generate type _gmd__LI_x005fSource)

  - <gmd:LI_Lineage> (use wsdl2h option -g to auto-generate type _gmd__LI_x005fLineage)

  - <gmd:DQ_ConformanceResult> (use wsdl2h option -g to auto-generate type _gmd__DQ_x005fConformanceResult)

  - <gmd:DQ_QuantitativeResult> (use wsdl2h option -g to auto-generate type _gmd__DQ_x005fQuantitativeResult)

  - <gmd:AbstractDQ_Result> (use wsdl2h option -g to auto-generate type _gmd__AbstractDQ_x005fResult)

  - <gmd:DQ_TemporalValidity> (use wsdl2h option -g to auto-generate type _gmd__DQ_x005fTemporalValidity)

  - <gmd:DQ_TemporalConsistency> (use wsdl2h option -g to auto-generate type _gmd__DQ_x005fTemporalConsistency)

  - <gmd:DQ_AccuracyOfATimeMeasurement> (use wsdl2h option -g to auto-generate type _gmd__DQ_x005fAccuracyOfATimeMeasurement)

  - <gmd:DQ_QuantitativeAttributeAccuracy> (use wsdl2h option -g to auto-generate type _gmd__DQ_x005fQuantitativeAttributeAccuracy)

  - <gmd:DQ_NonQuantitativeAttributeAccuracy> (use wsdl2h option -g to auto-generate type _gmd__DQ_x005fNonQuantitativeAttributeAccuracy)

  - <gmd:DQ_ThematicClassificationCorrectness> (use wsdl2h option -g to auto-generate type _gmd__DQ_x005fThematicClassificationCorrectness)

  - <gmd:DQ_RelativeInternalPositionalAccuracy> (use wsdl2h option -g to auto-generate type _gmd__DQ_x005fRelativeInternalPositionalAccuracy)

  - <gmd:DQ_GriddedDataPositionalAccuracy> (use wsdl2h option -g to auto-generate type _gmd__DQ_x005fGriddedDataPositionalAccuracy)

  - <gmd:DQ_AbsoluteExternalPositionalAccuracy> (use wsdl2h option -g to auto-generate type _gmd__DQ_x005fAbsoluteExternalPositionalAccuracy)

  - <gmd:DQ_TopologicalConsistency> (use wsdl2h option -g to auto-generate type _gmd__DQ_x005fTopologicalConsistency)

  - <gmd:DQ_FormatConsistency> (use wsdl2h option -g to auto-generate type _gmd__DQ_x005fFormatConsistency)

  - <gmd:DQ_DomainConsistency> (use wsdl2h option -g to auto-generate type _gmd__DQ_x005fDomainConsistency)

  - <gmd:DQ_ConceptualConsistency> (use wsdl2h option -g to auto-generate type _gmd__DQ_x005fConceptualConsistency)

  - <gmd:DQ_CompletenessOmission> (use wsdl2h option -g to auto-generate type _gmd__DQ_x005fCompletenessOmission)

  - <gmd:DQ_CompletenessCommission> (use wsdl2h option -g to auto-generate type _gmd__DQ_x005fCompletenessCommission)

  - <gmd:AbstractDQ_TemporalAccuracy> (use wsdl2h option -g to auto-generate type _gmd__AbstractDQ_x005fTemporalAccuracy)

  - <gmd:AbstractDQ_ThematicAccuracy> (use wsdl2h option -g to auto-generate type _gmd__AbstractDQ_x005fThematicAccuracy)

  - <gmd:AbstractDQ_PositionalAccuracy> (use wsdl2h option -g to auto-generate type _gmd__AbstractDQ_x005fPositionalAccuracy)

  - <gmd:AbstractDQ_LogicalConsistency> (use wsdl2h option -g to auto-generate type _gmd__AbstractDQ_x005fLogicalConsistency)

  - <gmd:AbstractDQ_Completeness> (use wsdl2h option -g to auto-generate type _gmd__AbstractDQ_x005fCompleteness)

  - <gmd:AbstractDQ_Element> (use wsdl2h option -g to auto-generate type _gmd__AbstractDQ_x005fElement)

  - <gmd:DQ_DataQuality> (use wsdl2h option -g to auto-generate type _gmd__DQ_x005fDataQuality)

  - <gmd:DQ_Scope> (use wsdl2h option -g to auto-generate type _gmd__DQ_x005fScope)

  - <gmd:DQ_EvaluationMethodTypeCode> (use wsdl2h option -g to auto-generate type _gmd__DQ_x005fEvaluationMethodTypeCode)

  - <gmd:AbstractMD_Identification> (use wsdl2h option -g to auto-generate type _gmd__AbstractMD_x005fIdentification)

  - <gmd:MD_BrowseGraphic> (use wsdl2h option -g to auto-generate type _gmd__MD_x005fBrowseGraphic)

  - <gmd:MD_DataIdentification> (use wsdl2h option -g to auto-generate type _gmd__MD_x005fDataIdentification)

  - <gmd:MD_ServiceIdentification> (use wsdl2h option -g to auto-generate type _gmd__MD_x005fServiceIdentification)

  - <gmd:MD_RepresentativeFraction> (use wsdl2h option -g to auto-generate type _gmd__MD_x005fRepresentativeFraction)

  - <gmd:MD_Usage> (use wsdl2h option -g to auto-generate type _gmd__MD_x005fUsage)

  - <gmd:MD_Keywords> (use wsdl2h option -g to auto-generate type _gmd__MD_x005fKeywords)

  - <gmd:DS_Association> (use wsdl2h option -g to auto-generate type _gmd__DS_x005fAssociation)

  - <gmd:MD_AggregateInformation> (use wsdl2h option -g to auto-generate type _gmd__MD_x005fAggregateInformation)

  - <gmd:MD_Resolution> (use wsdl2h option -g to auto-generate type _gmd__MD_x005fResolution)

  - <gmd:MD_TopicCategoryCode> (use wsdl2h option -g to auto-generate type _gmd__MD_x005fTopicCategoryCode)

  - <gmd:MD_CharacterSetCode> (use wsdl2h option -g to auto-generate type _gmd__MD_x005fCharacterSetCode)

  - <gmd:MD_SpatialRepresentationTypeCode> (use wsdl2h option -g to auto-generate type _gmd__MD_x005fSpatialRepresentationTypeCode)

  - <gmd:MD_ProgressCode> (use wsdl2h option -g to auto-generate type _gmd__MD_x005fProgressCode)

  - <gmd:MD_KeywordTypeCode> (use wsdl2h option -g to auto-generate type _gmd__MD_x005fKeywordTypeCode)

  - <gmd:DS_AssociationTypeCode> (use wsdl2h option -g to auto-generate type _gmd__DS_x005fAssociationTypeCode)

  - <gmd:DS_InitiativeTypeCode> (use wsdl2h option -g to auto-generate type _gmd__DS_x005fInitiativeTypeCode)

  - <gmd:MD_Constraints> (use wsdl2h option -g to auto-generate type _gmd__MD_x005fConstraints)

  - <gmd:MD_LegalConstraints> (use wsdl2h option -g to auto-generate type _gmd__MD_x005fLegalConstraints)

  - <gmd:MD_SecurityConstraints> (use wsdl2h option -g to auto-generate type _gmd__MD_x005fSecurityConstraints)

  - <gmd:MD_ClassificationCode> (use wsdl2h option -g to auto-generate type _gmd__MD_x005fClassificationCode)

  - <gmd:MD_RestrictionCode> (use wsdl2h option -g to auto-generate type _gmd__MD_x005fRestrictionCode)

  - <gmd:MD_Medium> (use wsdl2h option -g to auto-generate type _gmd__MD_x005fMedium)

  - <gmd:MD_DigitalTransferOptions> (use wsdl2h option -g to auto-generate type _gmd__MD_x005fDigitalTransferOptions)

  - <gmd:MD_StandardOrderProcess> (use wsdl2h option -g to auto-generate type _gmd__MD_x005fStandardOrderProcess)

  - <gmd:MD_Distributor> (use wsdl2h option -g to auto-generate type _gmd__MD_x005fDistributor)

  - <gmd:MD_Distribution> (use wsdl2h option -g to auto-generate type _gmd__MD_x005fDistribution)

  - <gmd:MD_Format> (use wsdl2h option -g to auto-generate type _gmd__MD_x005fFormat)

  - <gmd:MD_DistributionUnits> (use wsdl2h option -g to auto-generate type _gmd__MD_x005fDistributionUnits)

  - <gmd:MD_MediumFormatCode> (use wsdl2h option -g to auto-generate type _gmd__MD_x005fMediumFormatCode)

  - <gmd:MD_MediumNameCode> (use wsdl2h option -g to auto-generate type _gmd__MD_x005fMediumNameCode)

  - <gmd:MD_MaintenanceInformation> (use wsdl2h option -g to auto-generate type _gmd__MD_x005fMaintenanceInformation)

  - <gmd:MD_ScopeDescription> (use wsdl2h option -g to auto-generate type _gmd__MD_x005fScopeDescription)

  - <gmd:MD_MaintenanceFrequencyCode> (use wsdl2h option -g to auto-generate type _gmd__MD_x005fMaintenanceFrequencyCode)

  - <gmd:MD_ScopeCode> (use wsdl2h option -g to auto-generate type _gmd__MD_x005fScopeCode)

  - <gmd:PT_FreeText> (use wsdl2h option -g to auto-generate type _gmd__PT_x005fFreeText)

  - <gmd:PT_Locale> (use wsdl2h option -g to auto-generate type _gmd__PT_x005fLocale)

  - <gmd:LocalisedCharacterString> (use wsdl2h option -g to auto-generate type _gmd__LocalisedCharacterString)

  - <gmd:PT_LocaleContainer> (use wsdl2h option -g to auto-generate type _gmd__PT_x005fLocaleContainer)

  - <gmd:LanguageCode> (use wsdl2h option -g to auto-generate type _gmd__LanguageCode)

  - <gmd:Country> (use wsdl2h option -g to auto-generate type _gmd__Country)

@section xlink Top-level root elements of schema "http://www.w3.org/1999/xlink"

  - <xlink:title> @ref _xlink__title
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__xlink__title(struct soap*, char*);
    // Writer (returns SOAP_OK on success):
    soap_write__xlink__title(struct soap*, char*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__xlink__title(struct soap*, const char *URL, char*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__xlink__title(struct soap*, const char *URL, char*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__xlink__title(struct soap*, const char *URL, char*);
    soap_POST_recv__xlink__title(struct soap*, char*);
    @endcode

  - <xlink:resource> (use wsdl2h option -g to auto-generate type _xlink__resource)

  - <xlink:locator> (use wsdl2h option -g to auto-generate type _xlink__locator)

  - <xlink:arc> (use wsdl2h option -g to auto-generate type _xlink__arc)

@section gco Top-level root elements of schema "http://www.isotc211.org/2005/gco"

  - <gco:TypeName> (use wsdl2h option -g to auto-generate type _gco__TypeName)

  - <gco:MemberName> (use wsdl2h option -g to auto-generate type _gco__MemberName)

  - <gco:Multiplicity> (use wsdl2h option -g to auto-generate type _gco__Multiplicity)

  - <gco:MultiplicityRange> (use wsdl2h option -g to auto-generate type _gco__MultiplicityRange)

  - <gco:Measure> (use wsdl2h option -g to auto-generate type _gco__Measure)

  - <gco:Length> (use wsdl2h option -g to auto-generate type _gco__Length)

  - <gco:Angle> (use wsdl2h option -g to auto-generate type _gco__Angle)

  - <gco:Scale> (use wsdl2h option -g to auto-generate type _gco__Scale)

  - <gco:Distance> (use wsdl2h option -g to auto-generate type _gco__Distance)

  - <gco:CharacterString> (use wsdl2h option -g to auto-generate type _gco__CharacterString)

  - <gco:Boolean> (use wsdl2h option -g to auto-generate type _gco__Boolean)

  - <gco:AbstractGenericName> (use wsdl2h option -g to auto-generate type _gco__AbstractGenericName)

  - <gco:LocalName> (use wsdl2h option -g to auto-generate type _gco__LocalName)

  - <gco:ScopedName> (use wsdl2h option -g to auto-generate type _gco__ScopedName)

  - <gco:DateTime> (use wsdl2h option -g to auto-generate type _gco__DateTime)

  - <gco:Date> (use wsdl2h option -g to auto-generate type _gco__Date)

  - <gco:Decimal> (use wsdl2h option -g to auto-generate type _gco__Decimal)

  - <gco:Real> (use wsdl2h option -g to auto-generate type _gco__Real)

  - <gco:Integer> (use wsdl2h option -g to auto-generate type _gco__Integer)

  - <gco:UnlimitedInteger> (use wsdl2h option -g to auto-generate type _gco__UnlimitedInteger)

  - <gco:Record> @ref _gco__Record
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__gco__Record(struct soap*, _XML);
    // Writer (returns SOAP_OK on success):
    soap_write__gco__Record(struct soap*, _XML);
    // REST GET (returns SOAP_OK on success):
    soap_GET__gco__Record(struct soap*, const char *URL, _XML);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__gco__Record(struct soap*, const char *URL, _XML);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__gco__Record(struct soap*, const char *URL, _XML);
    soap_POST_recv__gco__Record(struct soap*, _XML);
    @endcode

  - <gco:RecordType> (use wsdl2h option -g to auto-generate type _gco__RecordType)

  - <gco:Binary> (use wsdl2h option -g to auto-generate type _gco__Binary)

  - <gco:AbstractObject> (use wsdl2h option -g to auto-generate type _gco__AbstractObject)

@section gss Top-level root elements of schema "http://www.isotc211.org/2005/gss"

@section gts Top-level root elements of schema "http://www.isotc211.org/2005/gts"

  - <gts:TM_PeriodDuration> (use wsdl2h option -g to auto-generate type _gts__TM_x005fPeriodDuration)

@section gsr Top-level root elements of schema "http://www.isotc211.org/2005/gsr"

*/

} // namespace plu

/* End of PlannedLandUse_v3.0.h */
